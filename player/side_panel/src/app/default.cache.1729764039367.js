!function(e){function n(){}function t(e,n){return function(){e.apply(n,arguments)}}function o(e){if("object"!=typeof this)throw new TypeError("Promises must be constructed via new");if("function"!=typeof e)throw new TypeError("not a function");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],s(e,this)}function i(e,n){for(;3===e._state;)e=e._value;return 0===e._state?void e._deferreds.push(n):(e._handled=!0,void o._immediateFn(function(){var t=1===e._state?n.onFulfilled:n.onRejected;if(null===t)return void(1===e._state?r:u)(n.promise,e._value);var o;try{o=t(e._value)}catch(i){return void u(n.promise,i)}r(n.promise,o)}))}function r(e,n){try{if(n===e)throw new TypeError("A promise cannot be resolved with itself.");if(n&&("object"==typeof n||"function"==typeof n)){var i=n.then;if(n instanceof o)return e._state=3,e._value=n,void f(e);if("function"==typeof i)return void s(t(i,n),e)}e._state=1,e._value=n,f(e)}catch(r){u(e,r)}}function u(e,n){e._state=2,e._value=n,f(e)}function f(e){2===e._state&&0===e._deferreds.length&&o._immediateFn(function(){e._handled||o._unhandledRejectionFn(e._value)});for(var n=0,t=e._deferreds.length;n<t;n++)i(e,e._deferreds[n]);e._deferreds=null}function c(e,n,t){this.onFulfilled="function"==typeof e?e:null,this.onRejected="function"==typeof n?n:null,this.promise=t}function s(e,n){var t=!1;try{e(function(e){t||(t=!0,r(n,e))},function(e){t||(t=!0,u(n,e))})}catch(o){if(t)return;t=!0,u(n,o)}}var a=setTimeout;o.prototype["catch"]=function(e){return this.then(null,e)},o.prototype.then=function(e,t){var o=new this.constructor(n);return i(this,new c(e,t,o)),o},o.all=function(e){var n=Array.prototype.slice.call(e);return new o(function(e,t){function o(r,u){try{if(u&&("object"==typeof u||"function"==typeof u)){var f=u.then;if("function"==typeof f)return void f.call(u,function(e){o(r,e)},t)}n[r]=u,0===--i&&e(n)}catch(c){t(c)}}if(0===n.length)return e([]);for(var i=n.length,r=0;r<n.length;r++)o(r,n[r])})},o.resolve=function(e){return e&&"object"==typeof e&&e.constructor===o?e:new o(function(n){n(e)})},o.reject=function(e){return new o(function(n,t){t(e)})},o.race=function(e){return new o(function(n,t){for(var o=0,i=e.length;o<i;o++)e[o].then(n,t)})},o._immediateFn="function"==typeof setImmediate&&function(e){setImmediate(e)}||function(e){a(e,0)},o._unhandledRejectionFn=function(e){"undefined"!=typeof console&&console&&console.warn("Possible Unhandled Promise Rejection:",e)},o._setImmediateFn=function(e){o._immediateFn=e},o._setUnhandledRejectionFn=function(e){o._unhandledRejectionFn=e},"undefined"!=typeof module&&module.exports?module.exports=o:e.Promise||(e.Promise=o)}(this);
/*
 * JavaScript MD5
 * https://github.com/blueimp/JavaScript-MD5
 *
 * Copyright 2011, Sebastian Tschan
 * https://blueimp.net
 *
 * Licensed under the MIT license:
 * https://opensource.org/licenses/MIT
 *
 * Based on
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Digest Algorithm, as defined in RFC 1321.
 * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for more info.
 */

/* global define */

(function ($) {
  'use strict'

  /*
  * Add integers, wrapping at 2^32. This uses 16-bit operations internally
  * to work around bugs in some JS interpreters.
  */
  function safeAdd (x, y) {
    var lsw = (x & 0xffff) + (y & 0xffff)
    var msw = (x >> 16) + (y >> 16) + (lsw >> 16)
    return (msw << 16) | (lsw & 0xffff)
  }

  /*
  * Bitwise rotate a 32-bit number to the left.
  */
  function bitRotateLeft (num, cnt) {
    return (num << cnt) | (num >>> (32 - cnt))
  }

  /*
  * These functions implement the four basic operations the algorithm uses.
  */
  function md5cmn (q, a, b, x, s, t) {
    return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b)
  }
  function md5ff (a, b, c, d, x, s, t) {
    return md5cmn((b & c) | (~b & d), a, b, x, s, t)
  }
  function md5gg (a, b, c, d, x, s, t) {
    return md5cmn((b & d) | (c & ~d), a, b, x, s, t)
  }
  function md5hh (a, b, c, d, x, s, t) {
    return md5cmn(b ^ c ^ d, a, b, x, s, t)
  }
  function md5ii (a, b, c, d, x, s, t) {
    return md5cmn(c ^ (b | ~d), a, b, x, s, t)
  }

  /*
  * Calculate the MD5 of an array of little-endian words, and a bit length.
  */
  function binlMD5 (x, len) {
    /* append padding */
    x[len >> 5] |= 0x80 << (len % 32)
    x[((len + 64) >>> 9 << 4) + 14] = len

    var i
    var olda
    var oldb
    var oldc
    var oldd
    var a = 1732584193
    var b = -271733879
    var c = -1732584194
    var d = 271733878

    for (i = 0; i < x.length; i += 16) {
      olda = a
      oldb = b
      oldc = c
      oldd = d

      a = md5ff(a, b, c, d, x[i], 7, -680876936)
      d = md5ff(d, a, b, c, x[i + 1], 12, -389564586)
      c = md5ff(c, d, a, b, x[i + 2], 17, 606105819)
      b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330)
      a = md5ff(a, b, c, d, x[i + 4], 7, -176418897)
      d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426)
      c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341)
      b = md5ff(b, c, d, a, x[i + 7], 22, -45705983)
      a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416)
      d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417)
      c = md5ff(c, d, a, b, x[i + 10], 17, -42063)
      b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162)
      a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682)
      d = md5ff(d, a, b, c, x[i + 13], 12, -40341101)
      c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290)
      b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329)

      a = md5gg(a, b, c, d, x[i + 1], 5, -165796510)
      d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632)
      c = md5gg(c, d, a, b, x[i + 11], 14, 643717713)
      b = md5gg(b, c, d, a, x[i], 20, -373897302)
      a = md5gg(a, b, c, d, x[i + 5], 5, -701558691)
      d = md5gg(d, a, b, c, x[i + 10], 9, 38016083)
      c = md5gg(c, d, a, b, x[i + 15], 14, -660478335)
      b = md5gg(b, c, d, a, x[i + 4], 20, -405537848)
      a = md5gg(a, b, c, d, x[i + 9], 5, 568446438)
      d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690)
      c = md5gg(c, d, a, b, x[i + 3], 14, -187363961)
      b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501)
      a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467)
      d = md5gg(d, a, b, c, x[i + 2], 9, -51403784)
      c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473)
      b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734)

      a = md5hh(a, b, c, d, x[i + 5], 4, -378558)
      d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463)
      c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562)
      b = md5hh(b, c, d, a, x[i + 14], 23, -35309556)
      a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060)
      d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353)
      c = md5hh(c, d, a, b, x[i + 7], 16, -155497632)
      b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640)
      a = md5hh(a, b, c, d, x[i + 13], 4, 681279174)
      d = md5hh(d, a, b, c, x[i], 11, -358537222)
      c = md5hh(c, d, a, b, x[i + 3], 16, -722521979)
      b = md5hh(b, c, d, a, x[i + 6], 23, 76029189)
      a = md5hh(a, b, c, d, x[i + 9], 4, -640364487)
      d = md5hh(d, a, b, c, x[i + 12], 11, -421815835)
      c = md5hh(c, d, a, b, x[i + 15], 16, 530742520)
      b = md5hh(b, c, d, a, x[i + 2], 23, -995338651)

      a = md5ii(a, b, c, d, x[i], 6, -198630844)
      d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415)
      c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905)
      b = md5ii(b, c, d, a, x[i + 5], 21, -57434055)
      a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571)
      d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606)
      c = md5ii(c, d, a, b, x[i + 10], 15, -1051523)
      b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799)
      a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359)
      d = md5ii(d, a, b, c, x[i + 15], 10, -30611744)
      c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380)
      b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649)
      a = md5ii(a, b, c, d, x[i + 4], 6, -145523070)
      d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379)
      c = md5ii(c, d, a, b, x[i + 2], 15, 718787259)
      b = md5ii(b, c, d, a, x[i + 9], 21, -343485551)

      a = safeAdd(a, olda)
      b = safeAdd(b, oldb)
      c = safeAdd(c, oldc)
      d = safeAdd(d, oldd)
    }
    return [a, b, c, d]
  }

  /*
  * Convert an array of little-endian words to a string
  */
  function binl2rstr (input) {
    var i;
    var output = '';
    var length32 = input.length * 32;
    for (i = 0; i < length32; i += 8) {
      output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xff);
    }
    return output;
  }

  /*
  * Convert a raw string to an array of little-endian words
  * Characters >255 have their high-byte silently ignored.
  */
  function rstr2binl (input) {
    var i
    var output = []
    output[(input.length >> 2) - 1] = undefined
    for (i = 0; i < output.length; i += 1) {
      output[i] = 0
    }
    var length8 = input.length * 8
    for (i = 0; i < length8; i += 8) {
      output[i >> 5] |= (input.charCodeAt(i / 8) & 0xff) << (i % 32)
    }
    return output
  }

  /*
  * Calculate the MD5 of a raw string
  */
  function rstrMD5 (s) {
    return binl2rstr(binlMD5(rstr2binl(s), s.length * 8))
  }

  /*
  * Calculate the HMAC-MD5, of a key and some data (raw strings)
  */
  function rstrHMACMD5 (key, data) {
    var i
    var bkey = rstr2binl(key)
    var ipad = []
    var opad = []
    var hash
    ipad[15] = opad[15] = undefined
    if (bkey.length > 16) {
      bkey = binlMD5(bkey, key.length * 8)
    }
    for (i = 0; i < 16; i += 1) {
      ipad[i] = bkey[i] ^ 0x36363636
      opad[i] = bkey[i] ^ 0x5c5c5c5c
    }
    hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8)
    return binl2rstr(binlMD5(opad.concat(hash), 512 + 128))
  }

  /*
  * Convert a raw string to a hex string
  */
  function rstr2hex (input) {
    var hexTab = '0123456789abcdef'
    var output = ''
    var x
    var i
    for (i = 0; i < input.length; i += 1) {
      x = input.charCodeAt(i)
      output += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f)
    }
    return output
  }

  /*
  * Encode a string as utf-8
  */
  function str2rstrUTF8 (input) {
    return unescape(encodeURIComponent(input))
  }

  /*
  * Take string arguments and return either raw or hex encoded strings
  */
  function rawMD5 (s) {
    return rstrMD5(str2rstrUTF8(s))
  }
  function hexMD5 (s) {
    return rstr2hex(rawMD5(s))
  }
  function rawHMACMD5 (k, d) {
    return rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d))
  }
  function hexHMACMD5 (k, d) {
    return rstr2hex(rawHMACMD5(k, d))
  }

  function md5 (string, key, raw) {
    if (!key) {
      if (!raw) {
        return hexMD5(string)
      }
      return rawMD5(string)
    }
    if (!raw) {
      return hexHMACMD5(key, string)
    }
    return rawHMACMD5(key, string)
  }

  if (typeof define === 'function' && define.amd) {
    define(function () {
      return md5
    })
  } else if (typeof module === 'object' && module.exports) {
    module.exports = md5
  } else {
    $.md5 = md5
  }
})(this);


function SHA256(s){
    var chrsz = 8;
    var hexcase = 0;
   
    function safe_add (x, y) {
    var lsw = (x & 0xFFFF) + (y & 0xFFFF);
    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
    return (msw << 16) | (lsw & 0xFFFF);
    }
   
    function S (X, n) { return ( X >>> n ) | (X << (32 - n)); }
    function R (X, n) { return ( X >>> n ); }
    function Ch(x, y, z) { return ((x & y) ^ ((~x) & z)); }
    function Maj(x, y, z) { return ((x & y) ^ (x & z) ^ (y & z)); }
    function Sigma0256(x) { return (S(x, 2) ^ S(x, 13) ^ S(x, 22)); }
    function Sigma1256(x) { return (S(x, 6) ^ S(x, 11) ^ S(x, 25)); }
    function Gamma0256(x) { return (S(x, 7) ^ S(x, 18) ^ R(x, 3)); }
    function Gamma1256(x) { return (S(x, 17) ^ S(x, 19) ^ R(x, 10)); }
   
    function core_sha256 (m, l) {
    var K = new Array(0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5, 0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5, 0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3, 0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174, 0xE49B69C1, 0xEFBE4786, 0xFC19DC6, 0x240CA1CC, 0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA, 0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7, 0xC6E00BF3, 0xD5A79147, 0x6CA6351, 0x14292967, 0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13, 0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85, 0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3, 0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070, 0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5, 0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3, 0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208, 0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2);
    var HASH = new Array(0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A, 0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19);
    var W = new Array(64);
    var a, b, c, d, e, f, g, h, i, j;
    var T1, T2;
   
    m[l >> 5] |= 0x80 << (24 - l % 32);
    m[((l + 64 >> 9) << 4) + 15] = l;
   
    for ( var i = 0; i<m.length; i+=16 ) {
    a = HASH[0];
    b = HASH[1];
    c = HASH[2];
    d = HASH[3];
    e = HASH[4];
    f = HASH[5];
    g = HASH[6];
    h = HASH[7];
   
    for ( var j = 0; j<64; j++) {
    if (j < 16) W[j] = m[j + i];
    else W[j] = safe_add(safe_add(safe_add(Gamma1256(W[j - 2]), W[j - 7]), Gamma0256(W[j - 15])), W[j - 16]);
   
    T1 = safe_add(safe_add(safe_add(safe_add(h, Sigma1256(e)), Ch(e, f, g)), K[j]), W[j]);
    T2 = safe_add(Sigma0256(a), Maj(a, b, c));
   
    h = g;
    g = f;
    f = e;
    e = safe_add(d, T1);
    d = c;
    c = b;
    b = a;
    a = safe_add(T1, T2);
    }
   
    HASH[0] = safe_add(a, HASH[0]);
    HASH[1] = safe_add(b, HASH[1]);
    HASH[2] = safe_add(c, HASH[2]);
    HASH[3] = safe_add(d, HASH[3]);
    HASH[4] = safe_add(e, HASH[4]);
    HASH[5] = safe_add(f, HASH[5]);
    HASH[6] = safe_add(g, HASH[6]);
    HASH[7] = safe_add(h, HASH[7]);
    }
    return HASH;
    }
   
    function str2binb (str) {
    var bin = Array();
    var mask = (1 << chrsz) - 1;
    for(var i = 0; i < str.length * chrsz; i += chrsz) {
    bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) << (24 - i % 32);
    }
    return bin;
    }
   
    function Utf8Encode(string) {
    string = string.replace(/\r\n/g,'\n');
    var utftext = '';
   
    for (var n = 0; n < string.length; n++) {
   
    var c = string.charCodeAt(n);
   
    if (c < 128) {
    utftext += String.fromCharCode(c);
    }
    else if((c > 127) && (c < 2048)) {
    utftext += String.fromCharCode((c >> 6) | 192);
    utftext += String.fromCharCode((c & 63) | 128);
    }
    else {
    utftext += String.fromCharCode((c >> 12) | 224);
    utftext += String.fromCharCode(((c >> 6) & 63) | 128);
    utftext += String.fromCharCode((c & 63) | 128);
    }
   
    }
   
    return utftext;
    }
   
    function binb2hex (binarray) {
    var hex_tab = hexcase ? '0123456789ABCDEF' : '0123456789abcdef';
    var str = '';
    for(var i = 0; i < binarray.length * 4; i++) {
    str += hex_tab.charAt((binarray[i>>2] >> ((3 - i % 4)*8+4)) & 0xF) +
    hex_tab.charAt((binarray[i>>2] >> ((3 - i % 4)*8 )) & 0xF);
    }
    return str;
    }
   
    s = Utf8Encode(s);
    return binb2hex(core_sha256(str2binb(s), s.length * chrsz));
   }
! function(t, r) {
	"object" == typeof exports ? module.exports = exports = r() : "function" == typeof define && define.amd ? define([], r) : t.CryptoJS = r()
}(this, function() {
	var t = t || function(t, r) {
		var e = Object.create || function() {
				function t() {}
				return function(r) {
					var e;
					return t.prototype = r, e = new t, t.prototype = null, e
				}
			}(),
			i = {},
			n = i.lib = {},
			o = n.Base = function() {
				return {
					extend: function(t) {
						var r = e(this);
						return t && r.mixIn(t), r.hasOwnProperty("init") && this.init !== r.init || (r.init = function() {
							r.$super.init.apply(this, arguments)
						}), r.init.prototype = r, r.$super = this, r
					},
					create: function() {
						var t = this.extend();
						return t.init.apply(t, arguments), t
					},
					init: function() {},
					mixIn: function(t) {
						for (var r in t) t.hasOwnProperty(r) && (this[r] = t[r]);
						t.hasOwnProperty("toString") && (this.toString = t.toString)
					},
					clone: function() {
						return this.init.prototype.extend(this)
					}
				}
			}(),
			s = n.WordArray = o.extend({
				init: function(t, e) {
					t = this.words = t || [], e != r ? this.sigBytes = e : this.sigBytes = 4 * t.length
				},
				toString: function(t) {
					return (t || c).stringify(this)
				},
				concat: function(t) {
					var r = this.words,
						e = t.words,
						i = this.sigBytes,
						n = t.sigBytes;
					if (this.clamp(), i % 4)
						for (var o = 0; o < n; o++) {
							var s = e[o >>> 2] >>> 24 - o % 4 * 8 & 255;
							r[i + o >>> 2] |= s << 24 - (i + o) % 4 * 8
						} else
							for (var o = 0; o < n; o += 4) r[i + o >>> 2] = e[o >>> 2];
					return this.sigBytes += n, this
				},
				clamp: function() {
					var r = this.words,
						e = this.sigBytes;
					r[e >>> 2] &= 4294967295 << 32 - e % 4 * 8, r.length = t.ceil(e / 4)
				},
				clone: function() {
					var t = o.clone.call(this);
					return t.words = this.words.slice(0), t
				},
				random: function(r) {
					for (var e, i = [], n = function(r) {
							var r = r,
								e = 987654321,
								i = 4294967295;
							return function() {
								e = 36969 * (65535 & e) + (e >> 16) & i, r = 18e3 * (65535 & r) + (r >> 16) & i;
								var n = (e << 16) + r & i;
								return n /= 4294967296, n += .5, n * (t.random() > .5 ? 1 : -1)
							}
						}, o = 0; o < r; o += 4) {
						var a = n(4294967296 * (e || t.random()));
						e = 987654071 * a(), i.push(4294967296 * a() | 0)
					}
					return new s.init(i, r)
				}
			}),
			a = i.enc = {},
			c = a.Hex = {
				stringify: function(t) {
					for (var r = t.words, e = t.sigBytes, i = [], n = 0; n < e; n++) {
						var o = r[n >>> 2] >>> 24 - n % 4 * 8 & 255;
						i.push((o >>> 4).toString(16)), i.push((15 & o).toString(16))
					}
					return i.join("")
				},
				parse: function(t) {
					for (var r = t.length, e = [], i = 0; i < r; i += 2) e[i >>> 3] |= parseInt(t.substr(i, 2), 16) << 24 - i % 8 * 4;
					return new s.init(e, r / 2)
				}
			},
			h = a.Latin1 = {
				stringify: function(t) {
					for (var r = t.words, e = t.sigBytes, i = [], n = 0; n < e; n++) {
						var o = r[n >>> 2] >>> 24 - n % 4 * 8 & 255;
						i.push(String.fromCharCode(o))
					}
					return i.join("")
				},
				parse: function(t) {
					for (var r = t.length, e = [], i = 0; i < r; i++) e[i >>> 2] |= (255 & t.charCodeAt(i)) << 24 - i % 4 * 8;
					return new s.init(e, r)
				}
			},
			l = a.Utf8 = {
				stringify: function(t) {
					try {
						return decodeURIComponent(escape(h.stringify(t)))
					} catch (t) {
						throw new Error("Malformed UTF-8 data")
					}
				},
				parse: function(t) {
					return h.parse(unescape(encodeURIComponent(t)))
				}
			},
			f = n.BufferedBlockAlgorithm = o.extend({
				reset: function() {
					this._data = new s.init, this._nDataBytes = 0
				},
				_append: function(t) {
					"string" == typeof t && (t = l.parse(t)), this._data.concat(t), this._nDataBytes += t.sigBytes
				},
				_process: function(r) {
					var e = this._data,
						i = e.words,
						n = e.sigBytes,
						o = this.blockSize,
						a = 4 * o,
						c = n / a;
					c = r ? t.ceil(c) : t.max((0 | c) - this._minBufferSize, 0);
					var h = c * o,
						l = t.min(4 * h, n);
					if (h) {
						for (var f = 0; f < h; f += o) this._doProcessBlock(i, f);
						var u = i.splice(0, h);
						e.sigBytes -= l
					}
					return new s.init(u, l)
				},
				clone: function() {
					var t = o.clone.call(this);
					return t._data = this._data.clone(), t
				},
				_minBufferSize: 0
			}),
			u = (n.Hasher = f.extend({
				cfg: o.extend(),
				init: function(t) {
					this.cfg = this.cfg.extend(t), this.reset()
				},
				reset: function() {
					f.reset.call(this), this._doReset()
				},
				update: function(t) {
					return this._append(t), this._process(), this
				},
				finalize: function(t) {
					t && this._append(t);
					var r = this._doFinalize();
					return r
				},
				blockSize: 16,
				_createHelper: function(t) {
					return function(r, e) {
						return new t.init(e).finalize(r)
					}
				},
				_createHmacHelper: function(t) {
					return function(r, e) {
						return new u.HMAC.init(t, e).finalize(r)
					}
				}
			}), i.algo = {});
		return i
	}(Math);
	return function() {
			function r(t, r, e) {
				for (var i = [], o = 0, s = 0; s < r; s++)
					if (s % 4) {
						var a = e[t.charCodeAt(s - 1)] << s % 4 * 2,
							c = e[t.charCodeAt(s)] >>> 6 - s % 4 * 2;
						i[o >>> 2] |= (a | c) << 24 - o % 4 * 8, o++
					}
				return n.create(i, o)
			}
			var e = t,
				i = e.lib,
				n = i.WordArray,
				o = e.enc;
			o.Base64 = {
				stringify: function(t) {
					var r = t.words,
						e = t.sigBytes,
						i = this._map;
					t.clamp();
					for (var n = [], o = 0; o < e; o += 3)
						for (var s = r[o >>> 2] >>> 24 - o % 4 * 8 & 255, a = r[o + 1 >>> 2] >>> 24 - (o + 1) % 4 * 8 & 255, c = r[o + 2 >>> 2] >>> 24 - (o + 2) % 4 * 8 & 255, h = s << 16 | a << 8 | c, l = 0; l < 4 && o + .75 * l < e; l++) n.push(i.charAt(h >>> 6 * (3 - l) & 63));
					var f = i.charAt(64);
					if (f)
						for (; n.length % 4;) n.push(f);
					return n.join("")
				},
				parse: function(t) {
					var e = t.length,
						i = this._map,
						n = this._reverseMap;
					if (!n) {
						n = this._reverseMap = [];
						for (var o = 0; o < i.length; o++) n[i.charCodeAt(o)] = o
					}
					var s = i.charAt(64);
					if (s) {
						var a = t.indexOf(s);
						a !== -1 && (e = a)
					}
					return r(t, e, n)
				},
				_map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
			}
		}(),
		function(r) {
			function e(t, r, e, i, n, o, s) {
				var a = t + (r & e | ~r & i) + n + s;
				return (a << o | a >>> 32 - o) + r
			}

			function i(t, r, e, i, n, o, s) {
				var a = t + (r & i | e & ~i) + n + s;
				return (a << o | a >>> 32 - o) + r
			}

			function n(t, r, e, i, n, o, s) {
				var a = t + (r ^ e ^ i) + n + s;
				return (a << o | a >>> 32 - o) + r
			}

			function o(t, r, e, i, n, o, s) {
				var a = t + (e ^ (r | ~i)) + n + s;
				return (a << o | a >>> 32 - o) + r
			}
			var s = t,
				a = s.lib,
				c = a.WordArray,
				h = a.Hasher,
				l = s.algo,
				f = [];
			! function() {
				for (var t = 0; t < 64; t++) f[t] = 4294967296 * r.abs(r.sin(t + 1)) | 0
			}();
			var u = l.MD5 = h.extend({
				_doReset: function() {
					this._hash = new c.init([1732584193, 4023233417, 2562383102, 271733878])
				},
				_doProcessBlock: function(t, r) {
					for (var s = 0; s < 16; s++) {
						var a = r + s,
							c = t[a];
						t[a] = 16711935 & (c << 8 | c >>> 24) | 4278255360 & (c << 24 | c >>> 8)
					}
					var h = this._hash.words,
						l = t[r + 0],
						u = t[r + 1],
						d = t[r + 2],
						v = t[r + 3],
						p = t[r + 4],
						_ = t[r + 5],
						y = t[r + 6],
						g = t[r + 7],
						B = t[r + 8],
						w = t[r + 9],
						k = t[r + 10],
						S = t[r + 11],
						m = t[r + 12],
						x = t[r + 13],
						b = t[r + 14],
						H = t[r + 15],
						z = h[0],
						A = h[1],
						C = h[2],
						D = h[3];
					z = e(z, A, C, D, l, 7, f[0]), D = e(D, z, A, C, u, 12, f[1]), C = e(C, D, z, A, d, 17, f[2]), A = e(A, C, D, z, v, 22, f[3]), z = e(z, A, C, D, p, 7, f[4]), D = e(D, z, A, C, _, 12, f[5]), C = e(C, D, z, A, y, 17, f[6]), A = e(A, C, D, z, g, 22, f[7]), z = e(z, A, C, D, B, 7, f[8]), D = e(D, z, A, C, w, 12, f[9]), C = e(C, D, z, A, k, 17, f[10]), A = e(A, C, D, z, S, 22, f[11]), z = e(z, A, C, D, m, 7, f[12]), D = e(D, z, A, C, x, 12, f[13]), C = e(C, D, z, A, b, 17, f[14]), A = e(A, C, D, z, H, 22, f[15]), z = i(z, A, C, D, u, 5, f[16]), D = i(D, z, A, C, y, 9, f[17]), C = i(C, D, z, A, S, 14, f[18]), A = i(A, C, D, z, l, 20, f[19]), z = i(z, A, C, D, _, 5, f[20]), D = i(D, z, A, C, k, 9, f[21]), C = i(C, D, z, A, H, 14, f[22]), A = i(A, C, D, z, p, 20, f[23]), z = i(z, A, C, D, w, 5, f[24]), D = i(D, z, A, C, b, 9, f[25]), C = i(C, D, z, A, v, 14, f[26]), A = i(A, C, D, z, B, 20, f[27]), z = i(z, A, C, D, x, 5, f[28]), D = i(D, z, A, C, d, 9, f[29]), C = i(C, D, z, A, g, 14, f[30]), A = i(A, C, D, z, m, 20, f[31]), z = n(z, A, C, D, _, 4, f[32]), D = n(D, z, A, C, B, 11, f[33]), C = n(C, D, z, A, S, 16, f[34]), A = n(A, C, D, z, b, 23, f[35]), z = n(z, A, C, D, u, 4, f[36]), D = n(D, z, A, C, p, 11, f[37]), C = n(C, D, z, A, g, 16, f[38]), A = n(A, C, D, z, k, 23, f[39]), z = n(z, A, C, D, x, 4, f[40]), D = n(D, z, A, C, l, 11, f[41]), C = n(C, D, z, A, v, 16, f[42]), A = n(A, C, D, z, y, 23, f[43]), z = n(z, A, C, D, w, 4, f[44]), D = n(D, z, A, C, m, 11, f[45]), C = n(C, D, z, A, H, 16, f[46]), A = n(A, C, D, z, d, 23, f[47]), z = o(z, A, C, D, l, 6, f[48]), D = o(D, z, A, C, g, 10, f[49]), C = o(C, D, z, A, b, 15, f[50]), A = o(A, C, D, z, _, 21, f[51]), z = o(z, A, C, D, m, 6, f[52]), D = o(D, z, A, C, v, 10, f[53]), C = o(C, D, z, A, k, 15, f[54]), A = o(A, C, D, z, u, 21, f[55]), z = o(z, A, C, D, B, 6, f[56]), D = o(D, z, A, C, H, 10, f[57]), C = o(C, D, z, A, y, 15, f[58]), A = o(A, C, D, z, x, 21, f[59]), z = o(z, A, C, D, p, 6, f[60]), D = o(D, z, A, C, S, 10, f[61]), C = o(C, D, z, A, d, 15, f[62]), A = o(A, C, D, z, w, 21, f[63]), h[0] = h[0] + z | 0, h[1] = h[1] + A | 0, h[2] = h[2] + C | 0, h[3] = h[3] + D | 0
				},
				_doFinalize: function() {
					var t = this._data,
						e = t.words,
						i = 8 * this._nDataBytes,
						n = 8 * t.sigBytes;
					e[n >>> 5] |= 128 << 24 - n % 32;
					var o = r.floor(i / 4294967296),
						s = i;
					e[(n + 64 >>> 9 << 4) + 15] = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8), e[(n + 64 >>> 9 << 4) + 14] = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8), t.sigBytes = 4 * (e.length + 1), this._process();
					for (var a = this._hash, c = a.words, h = 0; h < 4; h++) {
						var l = c[h];
						c[h] = 16711935 & (l << 8 | l >>> 24) | 4278255360 & (l << 24 | l >>> 8)
					}
					return a
				},
				clone: function() {
					var t = h.clone.call(this);
					return t._hash = this._hash.clone(), t
				}
			});
			s.MD5 = h._createHelper(u), s.HmacMD5 = h._createHmacHelper(u)
		}(Math),
		function() {
			var r = t,
				e = r.lib,
				i = e.WordArray,
				n = e.Hasher,
				o = r.algo,
				s = [],
				a = o.SHA1 = n.extend({
					_doReset: function() {
						this._hash = new i.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520])
					},
					_doProcessBlock: function(t, r) {
						for (var e = this._hash.words, i = e[0], n = e[1], o = e[2], a = e[3], c = e[4], h = 0; h < 80; h++) {
							if (h < 16) s[h] = 0 | t[r + h];
							else {
								var l = s[h - 3] ^ s[h - 8] ^ s[h - 14] ^ s[h - 16];
								s[h] = l << 1 | l >>> 31
							}
							var f = (i << 5 | i >>> 27) + c + s[h];
							f += h < 20 ? (n & o | ~n & a) + 1518500249 : h < 40 ? (n ^ o ^ a) + 1859775393 : h < 60 ? (n & o | n & a | o & a) - 1894007588 : (n ^ o ^ a) - 899497514, c = a, a = o, o = n << 30 | n >>> 2, n = i, i = f
						}
						e[0] = e[0] + i | 0, e[1] = e[1] + n | 0, e[2] = e[2] + o | 0, e[3] = e[3] + a | 0, e[4] = e[4] + c | 0
					},
					_doFinalize: function() {
						var t = this._data,
							r = t.words,
							e = 8 * this._nDataBytes,
							i = 8 * t.sigBytes;
						return r[i >>> 5] |= 128 << 24 - i % 32, r[(i + 64 >>> 9 << 4) + 14] = Math.floor(e / 4294967296), r[(i + 64 >>> 9 << 4) + 15] = e, t.sigBytes = 4 * r.length, this._process(), this._hash
					},
					clone: function() {
						var t = n.clone.call(this);
						return t._hash = this._hash.clone(), t
					}
				});
			r.SHA1 = n._createHelper(a), r.HmacSHA1 = n._createHmacHelper(a)
		}(),
		function(r) {
			var e = t,
				i = e.lib,
				n = i.WordArray,
				o = i.Hasher,
				s = e.algo,
				a = [],
				c = [];
			! function() {
				function t(t) {
					for (var e = r.sqrt(t), i = 2; i <= e; i++)
						if (!(t % i)) return !1;
					return !0
				}

				function e(t) {
					return 4294967296 * (t - (0 | t)) | 0
				}
				for (var i = 2, n = 0; n < 64;) t(i) && (n < 8 && (a[n] = e(r.pow(i, .5))), c[n] = e(r.pow(i, 1 / 3)), n++), i++
			}();
			var h = [],
				l = s.SHA256 = o.extend({
					_doReset: function() {
						this._hash = new n.init(a.slice(0))
					},
					_doProcessBlock: function(t, r) {
						for (var e = this._hash.words, i = e[0], n = e[1], o = e[2], s = e[3], a = e[4], l = e[5], f = e[6], u = e[7], d = 0; d < 64; d++) {
							if (d < 16) h[d] = 0 | t[r + d];
							else {
								var v = h[d - 15],
									p = (v << 25 | v >>> 7) ^ (v << 14 | v >>> 18) ^ v >>> 3,
									_ = h[d - 2],
									y = (_ << 15 | _ >>> 17) ^ (_ << 13 | _ >>> 19) ^ _ >>> 10;
								h[d] = p + h[d - 7] + y + h[d - 16]
							}
							var g = a & l ^ ~a & f,
								B = i & n ^ i & o ^ n & o,
								w = (i << 30 | i >>> 2) ^ (i << 19 | i >>> 13) ^ (i << 10 | i >>> 22),
								k = (a << 26 | a >>> 6) ^ (a << 21 | a >>> 11) ^ (a << 7 | a >>> 25),
								S = u + k + g + c[d] + h[d],
								m = w + B;
							u = f, f = l, l = a, a = s + S | 0, s = o, o = n, n = i, i = S + m | 0
						}
						e[0] = e[0] + i | 0, e[1] = e[1] + n | 0, e[2] = e[2] + o | 0, e[3] = e[3] + s | 0, e[4] = e[4] + a | 0, e[5] = e[5] + l | 0, e[6] = e[6] + f | 0, e[7] = e[7] + u | 0
					},
					_doFinalize: function() {
						var t = this._data,
							e = t.words,
							i = 8 * this._nDataBytes,
							n = 8 * t.sigBytes;
						return e[n >>> 5] |= 128 << 24 - n % 32, e[(n + 64 >>> 9 << 4) + 14] = r.floor(i / 4294967296), e[(n + 64 >>> 9 << 4) + 15] = i, t.sigBytes = 4 * e.length, this._process(), this._hash
					},
					clone: function() {
						var t = o.clone.call(this);
						return t._hash = this._hash.clone(), t
					}
				});
			e.SHA256 = o._createHelper(l), e.HmacSHA256 = o._createHmacHelper(l)
		}(Math),
		function() {
			function r(t) {
				return t << 8 & 4278255360 | t >>> 8 & 16711935
			}
			var e = t,
				i = e.lib,
				n = i.WordArray,
				o = e.enc;
			o.Utf16 = o.Utf16BE = {
				stringify: function(t) {
					for (var r = t.words, e = t.sigBytes, i = [], n = 0; n < e; n += 2) {
						var o = r[n >>> 2] >>> 16 - n % 4 * 8 & 65535;
						i.push(String.fromCharCode(o))
					}
					return i.join("")
				},
				parse: function(t) {
					for (var r = t.length, e = [], i = 0; i < r; i++) e[i >>> 1] |= t.charCodeAt(i) << 16 - i % 2 * 16;
					return n.create(e, 2 * r)
				}
			};
			o.Utf16LE = {
				stringify: function(t) {
					for (var e = t.words, i = t.sigBytes, n = [], o = 0; o < i; o += 2) {
						var s = r(e[o >>> 2] >>> 16 - o % 4 * 8 & 65535);
						n.push(String.fromCharCode(s))
					}
					return n.join("")
				},
				parse: function(t) {
					for (var e = t.length, i = [], o = 0; o < e; o++) i[o >>> 1] |= r(t.charCodeAt(o) << 16 - o % 2 * 16);
					return n.create(i, 2 * e)
				}
			}
		}(),
		function() {
			if ("function" == typeof ArrayBuffer) {
				var r = t,
					e = r.lib,
					i = e.WordArray,
					n = i.init,
					o = i.init = function(t) {
						if (t instanceof ArrayBuffer && (t = new Uint8Array(t)), (t instanceof Int8Array || "undefined" != typeof Uint8ClampedArray && t instanceof Uint8ClampedArray || t instanceof Int16Array || t instanceof Uint16Array || t instanceof Int32Array || t instanceof Uint32Array || t instanceof Float32Array || t instanceof Float64Array) && (t = new Uint8Array(t.buffer, t.byteOffset, t.byteLength)), t instanceof Uint8Array) {
							for (var r = t.byteLength, e = [], i = 0; i < r; i++) e[i >>> 2] |= t[i] << 24 - i % 4 * 8;
							n.call(this, e, r)
						} else n.apply(this, arguments)
					};
				o.prototype = i
			}
		}(),
		function(r) {
			function e(t, r, e) {
				return t ^ r ^ e
			}

			function i(t, r, e) {
				return t & r | ~t & e
			}

			function n(t, r, e) {
				return (t | ~r) ^ e
			}

			function o(t, r, e) {
				return t & e | r & ~e
			}

			function s(t, r, e) {
				return t ^ (r | ~e)
			}

			function a(t, r) {
				return t << r | t >>> 32 - r
			}
			var c = t,
				h = c.lib,
				l = h.WordArray,
				f = h.Hasher,
				u = c.algo,
				d = l.create([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]),
				v = l.create([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]),
				p = l.create([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]),
				_ = l.create([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]),
				y = l.create([0, 1518500249, 1859775393, 2400959708, 2840853838]),
				g = l.create([1352829926, 1548603684, 1836072691, 2053994217, 0]),
				B = u.RIPEMD160 = f.extend({
					_doReset: function() {
						this._hash = l.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520])
					},
					_doProcessBlock: function(t, r) {
						for (var c = 0; c < 16; c++) {
							var h = r + c,
								l = t[h];
							t[h] = 16711935 & (l << 8 | l >>> 24) | 4278255360 & (l << 24 | l >>> 8)
						}
						var f, u, B, w, k, S, m, x, b, H, z = this._hash.words,
							A = y.words,
							C = g.words,
							D = d.words,
							R = v.words,
							E = p.words,
							M = _.words;
						S = f = z[0], m = u = z[1], x = B = z[2], b = w = z[3], H = k = z[4];
						for (var F, c = 0; c < 80; c += 1) F = f + t[r + D[c]] | 0, F += c < 16 ? e(u, B, w) + A[0] : c < 32 ? i(u, B, w) + A[1] : c < 48 ? n(u, B, w) + A[2] : c < 64 ? o(u, B, w) + A[3] : s(u, B, w) + A[4], F |= 0, F = a(F, E[c]), F = F + k | 0, f = k, k = w, w = a(B, 10), B = u, u = F, F = S + t[r + R[c]] | 0, F += c < 16 ? s(m, x, b) + C[0] : c < 32 ? o(m, x, b) + C[1] : c < 48 ? n(m, x, b) + C[2] : c < 64 ? i(m, x, b) + C[3] : e(m, x, b) + C[4], F |= 0, F = a(F, M[c]), F = F + H | 0, S = H, H = b, b = a(x, 10), x = m, m = F;
						F = z[1] + B + b | 0, z[1] = z[2] + w + H | 0, z[2] = z[3] + k + S | 0, z[3] = z[4] + f + m | 0, z[4] = z[0] + u + x | 0, z[0] = F
					},
					_doFinalize: function() {
						var t = this._data,
							r = t.words,
							e = 8 * this._nDataBytes,
							i = 8 * t.sigBytes;
						r[i >>> 5] |= 128 << 24 - i % 32, r[(i + 64 >>> 9 << 4) + 14] = 16711935 & (e << 8 | e >>> 24) | 4278255360 & (e << 24 | e >>> 8), t.sigBytes = 4 * (r.length + 1), this._process();
						for (var n = this._hash, o = n.words, s = 0; s < 5; s++) {
							var a = o[s];
							o[s] = 16711935 & (a << 8 | a >>> 24) | 4278255360 & (a << 24 | a >>> 8)
						}
						return n
					},
					clone: function() {
						var t = f.clone.call(this);
						return t._hash = this._hash.clone(), t
					}
				});
			c.RIPEMD160 = f._createHelper(B), c.HmacRIPEMD160 = f._createHmacHelper(B)
		}(Math),
		function() {
			var r = t,
				e = r.lib,
				i = e.Base,
				n = r.enc,
				o = n.Utf8,
				s = r.algo;
			s.HMAC = i.extend({
				init: function(t, r) {
					t = this._hasher = new t.init, "string" == typeof r && (r = o.parse(r));
					var e = t.blockSize,
						i = 4 * e;
					r.sigBytes > i && (r = t.finalize(r)), r.clamp();
					for (var n = this._oKey = r.clone(), s = this._iKey = r.clone(), a = n.words, c = s.words, h = 0; h < e; h++) a[h] ^= 1549556828, c[h] ^= 909522486;
					n.sigBytes = s.sigBytes = i, this.reset()
				},
				reset: function() {
					var t = this._hasher;
					t.reset(), t.update(this._iKey)
				},
				update: function(t) {
					return this._hasher.update(t), this
				},
				finalize: function(t) {
					var r = this._hasher,
						e = r.finalize(t);
					r.reset();
					var i = r.finalize(this._oKey.clone().concat(e));
					return i
				}
			})
		}(),
		function() {
			var r = t,
				e = r.lib,
				i = e.Base,
				n = e.WordArray,
				o = r.algo,
				s = o.SHA1,
				a = o.HMAC,
				c = o.PBKDF2 = i.extend({
					cfg: i.extend({
						keySize: 4,
						hasher: s,
						iterations: 1
					}),
					init: function(t) {
						this.cfg = this.cfg.extend(t)
					},
					compute: function(t, r) {
						for (var e = this.cfg, i = a.create(e.hasher, t), o = n.create(), s = n.create([1]), c = o.words, h = s.words, l = e.keySize, f = e.iterations; c.length < l;) {
							var u = i.update(r).finalize(s);
							i.reset();
							for (var d = u.words, v = d.length, p = u, _ = 1; _ < f; _++) {
								p = i.finalize(p), i.reset();
								for (var y = p.words, g = 0; g < v; g++) d[g] ^= y[g]
							}
							o.concat(u), h[0]++
						}
						return o.sigBytes = 4 * l, o
					}
				});
			r.PBKDF2 = function(t, r, e) {
				return c.create(e).compute(t, r)
			}
		}(),
		function() {
			var r = t,
				e = r.lib,
				i = e.Base,
				n = e.WordArray,
				o = r.algo,
				s = o.MD5,
				a = o.EvpKDF = i.extend({
					cfg: i.extend({
						keySize: 4,
						hasher: s,
						iterations: 1
					}),
					init: function(t) {
						this.cfg = this.cfg.extend(t)
					},
					compute: function(t, r) {
						for (var e = this.cfg, i = e.hasher.create(), o = n.create(), s = o.words, a = e.keySize, c = e.iterations; s.length < a;) {
							h && i.update(h);
							var h = i.update(t).finalize(r);
							i.reset();
							for (var l = 1; l < c; l++) h = i.finalize(h), i.reset();
							o.concat(h)
						}
						return o.sigBytes = 4 * a, o
					}
				});
			r.EvpKDF = function(t, r, e) {
				return a.create(e).compute(t, r)
			}
		}(),
		function() {
			var r = t,
				e = r.lib,
				i = e.WordArray,
				n = r.algo,
				o = n.SHA256,
				s = n.SHA224 = o.extend({
					_doReset: function() {
						this._hash = new i.init([3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428])
					},
					_doFinalize: function() {
						var t = o._doFinalize.call(this);
						return t.sigBytes -= 4, t
					}
				});
			r.SHA224 = o._createHelper(s), r.HmacSHA224 = o._createHmacHelper(s)
		}(),
		function(r) {
			var e = t,
				i = e.lib,
				n = i.Base,
				o = i.WordArray,
				s = e.x64 = {};
			s.Word = n.extend({
				init: function(t, r) {
					this.high = t, this.low = r
				}
			}), s.WordArray = n.extend({
				init: function(t, e) {
					t = this.words = t || [], e != r ? this.sigBytes = e : this.sigBytes = 8 * t.length
				},
				toX32: function() {
					for (var t = this.words, r = t.length, e = [], i = 0; i < r; i++) {
						var n = t[i];
						e.push(n.high), e.push(n.low)
					}
					return o.create(e, this.sigBytes)
				},
				clone: function() {
					for (var t = n.clone.call(this), r = t.words = this.words.slice(0), e = r.length, i = 0; i < e; i++) r[i] = r[i].clone();
					return t
				}
			})
		}(),
		function(r) {
			var e = t,
				i = e.lib,
				n = i.WordArray,
				o = i.Hasher,
				s = e.x64,
				a = s.Word,
				c = e.algo,
				h = [],
				l = [],
				f = [];
			! function() {
				for (var t = 1, r = 0, e = 0; e < 24; e++) {
					h[t + 5 * r] = (e + 1) * (e + 2) / 2 % 64;
					var i = r % 5,
						n = (2 * t + 3 * r) % 5;
					t = i, r = n
				}
				for (var t = 0; t < 5; t++)
					for (var r = 0; r < 5; r++) l[t + 5 * r] = r + (2 * t + 3 * r) % 5 * 5;
				for (var o = 1, s = 0; s < 24; s++) {
					for (var c = 0, u = 0, d = 0; d < 7; d++) {
						if (1 & o) {
							var v = (1 << d) - 1;
							v < 32 ? u ^= 1 << v : c ^= 1 << v - 32
						}
						128 & o ? o = o << 1 ^ 113 : o <<= 1
					}
					f[s] = a.create(c, u)
				}
			}();
			var u = [];
			! function() {
				for (var t = 0; t < 25; t++) u[t] = a.create()
			}();
			var d = c.SHA3 = o.extend({
				cfg: o.cfg.extend({
					outputLength: 512
				}),
				_doReset: function() {
					for (var t = this._state = [], r = 0; r < 25; r++) t[r] = new a.init;
					this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32
				},
				_doProcessBlock: function(t, r) {
					for (var e = this._state, i = this.blockSize / 2, n = 0; n < i; n++) {
						var o = t[r + 2 * n],
							s = t[r + 2 * n + 1];
						o = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8), s = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8);
						var a = e[n];
						a.high ^= s, a.low ^= o
					}
					for (var c = 0; c < 24; c++) {
						for (var d = 0; d < 5; d++) {
							for (var v = 0, p = 0, _ = 0; _ < 5; _++) {
								var a = e[d + 5 * _];
								v ^= a.high, p ^= a.low
							}
							var y = u[d];
							y.high = v, y.low = p
						}
						for (var d = 0; d < 5; d++)
							for (var g = u[(d + 4) % 5], B = u[(d + 1) % 5], w = B.high, k = B.low, v = g.high ^ (w << 1 | k >>> 31), p = g.low ^ (k << 1 | w >>> 31), _ = 0; _ < 5; _++) {
								var a = e[d + 5 * _];
								a.high ^= v, a.low ^= p
							}
						for (var S = 1; S < 25; S++) {
							var a = e[S],
								m = a.high,
								x = a.low,
								b = h[S];
							if (b < 32) var v = m << b | x >>> 32 - b,
								p = x << b | m >>> 32 - b;
							else var v = x << b - 32 | m >>> 64 - b,
								p = m << b - 32 | x >>> 64 - b;
							var H = u[l[S]];
							H.high = v, H.low = p
						}
						var z = u[0],
							A = e[0];
						z.high = A.high, z.low = A.low;
						for (var d = 0; d < 5; d++)
							for (var _ = 0; _ < 5; _++) {
								var S = d + 5 * _,
									a = e[S],
									C = u[S],
									D = u[(d + 1) % 5 + 5 * _],
									R = u[(d + 2) % 5 + 5 * _];
								a.high = C.high ^ ~D.high & R.high, a.low = C.low ^ ~D.low & R.low
							}
						var a = e[0],
							E = f[c];
						a.high ^= E.high, a.low ^= E.low
					}
				},
				_doFinalize: function() {
					var t = this._data,
						e = t.words,
						i = (8 * this._nDataBytes, 8 * t.sigBytes),
						o = 32 * this.blockSize;
					e[i >>> 5] |= 1 << 24 - i % 32, e[(r.ceil((i + 1) / o) * o >>> 5) - 1] |= 128, t.sigBytes = 4 * e.length, this._process();
					for (var s = this._state, a = this.cfg.outputLength / 8, c = a / 8, h = [], l = 0; l < c; l++) {
						var f = s[l],
							u = f.high,
							d = f.low;
						u = 16711935 & (u << 8 | u >>> 24) | 4278255360 & (u << 24 | u >>> 8), d = 16711935 & (d << 8 | d >>> 24) | 4278255360 & (d << 24 | d >>> 8), h.push(d), h.push(u)
					}
					return new n.init(h, a)
				},
				clone: function() {
					for (var t = o.clone.call(this), r = t._state = this._state.slice(0), e = 0; e < 25; e++) r[e] = r[e].clone();
					return t
				}
			});
			e.SHA3 = o._createHelper(d), e.HmacSHA3 = o._createHmacHelper(d)
		}(Math),
		function() {
			function r() {
				return s.create.apply(s, arguments)
			}
			var e = t,
				i = e.lib,
				n = i.Hasher,
				o = e.x64,
				s = o.Word,
				a = o.WordArray,
				c = e.algo,
				h = [r(1116352408, 3609767458), r(1899447441, 602891725), r(3049323471, 3964484399), r(3921009573, 2173295548), r(961987163, 4081628472), r(1508970993, 3053834265), r(2453635748, 2937671579), r(2870763221, 3664609560), r(3624381080, 2734883394), r(310598401, 1164996542), r(607225278, 1323610764), r(1426881987, 3590304994), r(1925078388, 4068182383), r(2162078206, 991336113), r(2614888103, 633803317), r(3248222580, 3479774868), r(3835390401, 2666613458), r(4022224774, 944711139), r(264347078, 2341262773), r(604807628, 2007800933), r(770255983, 1495990901), r(1249150122, 1856431235), r(1555081692, 3175218132), r(1996064986, 2198950837), r(2554220882, 3999719339), r(2821834349, 766784016), r(2952996808, 2566594879), r(3210313671, 3203337956), r(3336571891, 1034457026), r(3584528711, 2466948901), r(113926993, 3758326383), r(338241895, 168717936), r(666307205, 1188179964), r(773529912, 1546045734), r(1294757372, 1522805485), r(1396182291, 2643833823), r(1695183700, 2343527390), r(1986661051, 1014477480), r(2177026350, 1206759142), r(2456956037, 344077627), r(2730485921, 1290863460), r(2820302411, 3158454273), r(3259730800, 3505952657), r(3345764771, 106217008), r(3516065817, 3606008344), r(3600352804, 1432725776), r(4094571909, 1467031594), r(275423344, 851169720), r(430227734, 3100823752), r(506948616, 1363258195), r(659060556, 3750685593), r(883997877, 3785050280), r(958139571, 3318307427), r(1322822218, 3812723403), r(1537002063, 2003034995), r(1747873779, 3602036899), r(1955562222, 1575990012), r(2024104815, 1125592928), r(2227730452, 2716904306), r(2361852424, 442776044), r(2428436474, 593698344), r(2756734187, 3733110249), r(3204031479, 2999351573), r(3329325298, 3815920427), r(3391569614, 3928383900), r(3515267271, 566280711), r(3940187606, 3454069534), r(4118630271, 4000239992), r(116418474, 1914138554), r(174292421, 2731055270), r(289380356, 3203993006), r(460393269, 320620315), r(685471733, 587496836), r(852142971, 1086792851), r(1017036298, 365543100), r(1126000580, 2618297676), r(1288033470, 3409855158), r(1501505948, 4234509866), r(1607167915, 987167468), r(1816402316, 1246189591)],
				l = [];
			! function() {
				for (var t = 0; t < 80; t++) l[t] = r()
			}();
			var f = c.SHA512 = n.extend({
				_doReset: function() {
					this._hash = new a.init([new s.init(1779033703, 4089235720), new s.init(3144134277, 2227873595), new s.init(1013904242, 4271175723), new s.init(2773480762, 1595750129), new s.init(1359893119, 2917565137), new s.init(2600822924, 725511199), new s.init(528734635, 4215389547), new s.init(1541459225, 327033209)])
				},
				_doProcessBlock: function(t, r) {
					for (var e = this._hash.words, i = e[0], n = e[1], o = e[2], s = e[3], a = e[4], c = e[5], f = e[6], u = e[7], d = i.high, v = i.low, p = n.high, _ = n.low, y = o.high, g = o.low, B = s.high, w = s.low, k = a.high, S = a.low, m = c.high, x = c.low, b = f.high, H = f.low, z = u.high, A = u.low, C = d, D = v, R = p, E = _, M = y, F = g, P = B, W = w, O = k, U = S, I = m, K = x, X = b, L = H, j = z, N = A, T = 0; T < 80; T++) {
						var Z = l[T];
						if (T < 16) var q = Z.high = 0 | t[r + 2 * T],
							G = Z.low = 0 | t[r + 2 * T + 1];
						else {
							var J = l[T - 15],
								$ = J.high,
								Q = J.low,
								V = ($ >>> 1 | Q << 31) ^ ($ >>> 8 | Q << 24) ^ $ >>> 7,
								Y = (Q >>> 1 | $ << 31) ^ (Q >>> 8 | $ << 24) ^ (Q >>> 7 | $ << 25),
								tt = l[T - 2],
								rt = tt.high,
								et = tt.low,
								it = (rt >>> 19 | et << 13) ^ (rt << 3 | et >>> 29) ^ rt >>> 6,
								nt = (et >>> 19 | rt << 13) ^ (et << 3 | rt >>> 29) ^ (et >>> 6 | rt << 26),
								ot = l[T - 7],
								st = ot.high,
								at = ot.low,
								ct = l[T - 16],
								ht = ct.high,
								lt = ct.low,
								G = Y + at,
								q = V + st + (G >>> 0 < Y >>> 0 ? 1 : 0),
								G = G + nt,
								q = q + it + (G >>> 0 < nt >>> 0 ? 1 : 0),
								G = G + lt,
								q = q + ht + (G >>> 0 < lt >>> 0 ? 1 : 0);
							Z.high = q, Z.low = G
						}
						var ft = O & I ^ ~O & X,
							ut = U & K ^ ~U & L,
							dt = C & R ^ C & M ^ R & M,
							vt = D & E ^ D & F ^ E & F,
							pt = (C >>> 28 | D << 4) ^ (C << 30 | D >>> 2) ^ (C << 25 | D >>> 7),
							_t = (D >>> 28 | C << 4) ^ (D << 30 | C >>> 2) ^ (D << 25 | C >>> 7),
							yt = (O >>> 14 | U << 18) ^ (O >>> 18 | U << 14) ^ (O << 23 | U >>> 9),
							gt = (U >>> 14 | O << 18) ^ (U >>> 18 | O << 14) ^ (U << 23 | O >>> 9),
							Bt = h[T],
							wt = Bt.high,
							kt = Bt.low,
							St = N + gt,
							mt = j + yt + (St >>> 0 < N >>> 0 ? 1 : 0),
							St = St + ut,
							mt = mt + ft + (St >>> 0 < ut >>> 0 ? 1 : 0),
							St = St + kt,
							mt = mt + wt + (St >>> 0 < kt >>> 0 ? 1 : 0),
							St = St + G,
							mt = mt + q + (St >>> 0 < G >>> 0 ? 1 : 0),
							xt = _t + vt,
							bt = pt + dt + (xt >>> 0 < _t >>> 0 ? 1 : 0);
						j = X, N = L, X = I, L = K, I = O, K = U, U = W + St | 0, O = P + mt + (U >>> 0 < W >>> 0 ? 1 : 0) | 0, P = M, W = F, M = R, F = E, R = C, E = D, D = St + xt | 0, C = mt + bt + (D >>> 0 < St >>> 0 ? 1 : 0) | 0
					}
					v = i.low = v + D, i.high = d + C + (v >>> 0 < D >>> 0 ? 1 : 0), _ = n.low = _ + E, n.high = p + R + (_ >>> 0 < E >>> 0 ? 1 : 0), g = o.low = g + F, o.high = y + M + (g >>> 0 < F >>> 0 ? 1 : 0), w = s.low = w + W, s.high = B + P + (w >>> 0 < W >>> 0 ? 1 : 0), S = a.low = S + U, a.high = k + O + (S >>> 0 < U >>> 0 ? 1 : 0), x = c.low = x + K, c.high = m + I + (x >>> 0 < K >>> 0 ? 1 : 0), H = f.low = H + L, f.high = b + X + (H >>> 0 < L >>> 0 ? 1 : 0), A = u.low = A + N, u.high = z + j + (A >>> 0 < N >>> 0 ? 1 : 0)
				},
				_doFinalize: function() {
					var t = this._data,
						r = t.words,
						e = 8 * this._nDataBytes,
						i = 8 * t.sigBytes;
					r[i >>> 5] |= 128 << 24 - i % 32, r[(i + 128 >>> 10 << 5) + 30] = Math.floor(e / 4294967296), r[(i + 128 >>> 10 << 5) + 31] = e, t.sigBytes = 4 * r.length, this._process();
					var n = this._hash.toX32();
					return n
				},
				clone: function() {
					var t = n.clone.call(this);
					return t._hash = this._hash.clone(), t
				},
				blockSize: 32
			});
			e.SHA512 = n._createHelper(f), e.HmacSHA512 = n._createHmacHelper(f)
		}(),
		function() {
			var r = t,
				e = r.x64,
				i = e.Word,
				n = e.WordArray,
				o = r.algo,
				s = o.SHA512,
				a = o.SHA384 = s.extend({
					_doReset: function() {
						this._hash = new n.init([new i.init(3418070365, 3238371032), new i.init(1654270250, 914150663), new i.init(2438529370, 812702999), new i.init(355462360, 4144912697), new i.init(1731405415, 4290775857), new i.init(2394180231, 1750603025), new i.init(3675008525, 1694076839), new i.init(1203062813, 3204075428)])
					},
					_doFinalize: function() {
						var t = s._doFinalize.call(this);
						return t.sigBytes -= 16, t
					}
				});
			r.SHA384 = s._createHelper(a), r.HmacSHA384 = s._createHmacHelper(a)
		}(), t.lib.Cipher || function(r) {
			var e = t,
				i = e.lib,
				n = i.Base,
				o = i.WordArray,
				s = i.BufferedBlockAlgorithm,
				a = e.enc,
				c = (a.Utf8, a.Base64),
				h = e.algo,
				l = h.EvpKDF,
				f = i.Cipher = s.extend({
					cfg: n.extend(),
					createEncryptor: function(t, r) {
						return this.create(this._ENC_XFORM_MODE, t, r)
					},
					createDecryptor: function(t, r) {
						return this.create(this._DEC_XFORM_MODE, t, r)
					},
					init: function(t, r, e) {
						this.cfg = this.cfg.extend(e), this._xformMode = t, this._key = r, this.reset()
					},
					reset: function() {
						s.reset.call(this), this._doReset()
					},
					process: function(t) {
						return this._append(t), this._process()
					},
					finalize: function(t) {
						t && this._append(t);
						var r = this._doFinalize();
						return r
					},
					keySize: 4,
					ivSize: 4,
					_ENC_XFORM_MODE: 1,
					_DEC_XFORM_MODE: 2,
					_createHelper: function() {
						function t(t) {
							return "string" == typeof t ? m : w
						}
						return function(r) {
							return {
								encrypt: function(e, i, n) {
									return t(i).encrypt(r, e, i, n)
								},
								decrypt: function(e, i, n) {
									return t(i).decrypt(r, e, i, n)
								}
							}
						}
					}()
				}),
				u = (i.StreamCipher = f.extend({
					_doFinalize: function() {
						var t = this._process(!0);
						return t
					},
					blockSize: 1
				}), e.mode = {}),
				d = i.BlockCipherMode = n.extend({
					createEncryptor: function(t, r) {
						return this.Encryptor.create(t, r)
					},
					createDecryptor: function(t, r) {
						return this.Decryptor.create(t, r)
					},
					init: function(t, r) {
						this._cipher = t, this._iv = r
					}
				}),
				v = u.CBC = function() {
					function t(t, e, i) {
						var n = this._iv;
						if (n) {
							var o = n;
							this._iv = r
						} else var o = this._prevBlock;
						for (var s = 0; s < i; s++) t[e + s] ^= o[s]
					}
					var e = d.extend();
					return e.Encryptor = e.extend({
						processBlock: function(r, e) {
							var i = this._cipher,
								n = i.blockSize;
							t.call(this, r, e, n), i.encryptBlock(r, e), this._prevBlock = r.slice(e, e + n)
						}
					}), e.Decryptor = e.extend({
						processBlock: function(r, e) {
							var i = this._cipher,
								n = i.blockSize,
								o = r.slice(e, e + n);
							i.decryptBlock(r, e), t.call(this, r, e, n), this._prevBlock = o
						}
					}), e
				}(),
				p = e.pad = {},
				_ = p.Pkcs7 = {
					pad: function(t, r) {
						for (var e = 4 * r, i = e - t.sigBytes % e, n = i << 24 | i << 16 | i << 8 | i, s = [], a = 0; a < i; a += 4) s.push(n);
						var c = o.create(s, i);
						t.concat(c)
					},
					unpad: function(t) {
						var r = 255 & t.words[t.sigBytes - 1 >>> 2];
						t.sigBytes -= r
					}
				},
				y = (i.BlockCipher = f.extend({
					cfg: f.cfg.extend({
						mode: v,
						padding: _
					}),
					reset: function() {
						f.reset.call(this);
						var t = this.cfg,
							r = t.iv,
							e = t.mode;
						if (this._xformMode == this._ENC_XFORM_MODE) var i = e.createEncryptor;
						else {
							var i = e.createDecryptor;
							this._minBufferSize = 1
						}
						this._mode && this._mode.__creator == i ? this._mode.init(this, r && r.words) : (this._mode = i.call(e, this, r && r.words), this._mode.__creator = i)
					},
					_doProcessBlock: function(t, r) {
						this._mode.processBlock(t, r)
					},
					_doFinalize: function() {
						var t = this.cfg.padding;
						if (this._xformMode == this._ENC_XFORM_MODE) {
							t.pad(this._data, this.blockSize);
							var r = this._process(!0)
						} else {
							var r = this._process(!0);
							t.unpad(r)
						}
						return r
					},
					blockSize: 4
				}), i.CipherParams = n.extend({
					init: function(t) {
						this.mixIn(t)
					},
					toString: function(t) {
						return (t || this.formatter).stringify(this)
					}
				})),
				g = e.format = {},
				B = g.OpenSSL = {
					stringify: function(t) {
						var r = t.ciphertext,
							e = t.salt;
						if (e) var i = o.create([1398893684, 1701076831]).concat(e).concat(r);
						else var i = r;
						return i.toString(c)
					},
					parse: function(t) {
						var r = c.parse(t),
							e = r.words;
						if (1398893684 == e[0] && 1701076831 == e[1]) {
							var i = o.create(e.slice(2, 4));
							e.splice(0, 4), r.sigBytes -= 16
						}
						return y.create({
							ciphertext: r,
							salt: i
						})
					}
				},
				w = i.SerializableCipher = n.extend({
					cfg: n.extend({
						format: B
					}),
					encrypt: function(t, r, e, i) {
						i = this.cfg.extend(i);
						var n = t.createEncryptor(e, i),
							o = n.finalize(r),
							s = n.cfg;
						return y.create({
							ciphertext: o,
							key: e,
							iv: s.iv,
							algorithm: t,
							mode: s.mode,
							padding: s.padding,
							blockSize: t.blockSize,
							formatter: i.format
						})
					},
					decrypt: function(t, r, e, i) {
						i = this.cfg.extend(i), r = this._parse(r, i.format);
						var n = t.createDecryptor(e, i).finalize(r.ciphertext);
						return n
					},
					_parse: function(t, r) {
						return "string" == typeof t ? r.parse(t, this) : t
					}
				}),
				k = e.kdf = {},
				S = k.OpenSSL = {
					execute: function(t, r, e, i) {
						i || (i = o.random(8));
						var n = l.create({
								keySize: r + e
							}).compute(t, i),
							s = o.create(n.words.slice(r), 4 * e);
						return n.sigBytes = 4 * r, y.create({
							key: n,
							iv: s,
							salt: i
						})
					}
				},
				m = i.PasswordBasedCipher = w.extend({
					cfg: w.cfg.extend({
						kdf: S
					}),
					encrypt: function(t, r, e, i) {
						i = this.cfg.extend(i);
						var n = i.kdf.execute(e, t.keySize, t.ivSize);
						i.iv = n.iv;
						var o = w.encrypt.call(this, t, r, n.key, i);
						return o.mixIn(n), o
					},
					decrypt: function(t, r, e, i) {
						i = this.cfg.extend(i), r = this._parse(r, i.format);
						var n = i.kdf.execute(e, t.keySize, t.ivSize, r.salt);
						i.iv = n.iv;
						var o = w.decrypt.call(this, t, r, n.key, i);
						return o
					}
				})
		}(), t.mode.CFB = function() {
			function r(t, r, e, i) {
				var n = this._iv;
				if (n) {
					var o = n.slice(0);
					this._iv = void 0
				} else var o = this._prevBlock;
				i.encryptBlock(o, 0);
				for (var s = 0; s < e; s++) t[r + s] ^= o[s]
			}
			var e = t.lib.BlockCipherMode.extend();
			return e.Encryptor = e.extend({
				processBlock: function(t, e) {
					var i = this._cipher,
						n = i.blockSize;
					r.call(this, t, e, n, i), this._prevBlock = t.slice(e, e + n)
				}
			}), e.Decryptor = e.extend({
				processBlock: function(t, e) {
					var i = this._cipher,
						n = i.blockSize,
						o = t.slice(e, e + n);
					r.call(this, t, e, n, i), this._prevBlock = o
				}
			}), e
		}(), t.mode.ECB = function() {
			var r = t.lib.BlockCipherMode.extend();
			return r.Encryptor = r.extend({
				processBlock: function(t, r) {
					this._cipher.encryptBlock(t, r)
				}
			}), r.Decryptor = r.extend({
				processBlock: function(t, r) {
					this._cipher.decryptBlock(t, r)
				}
			}), r
		}(), t.pad.AnsiX923 = {
			pad: function(t, r) {
				var e = t.sigBytes,
					i = 4 * r,
					n = i - e % i,
					o = e + n - 1;
				t.clamp(), t.words[o >>> 2] |= n << 24 - o % 4 * 8, t.sigBytes += n
			},
			unpad: function(t) {
				var r = 255 & t.words[t.sigBytes - 1 >>> 2];
				t.sigBytes -= r
			}
		}, t.pad.Iso10126 = {
			pad: function(r, e) {
				var i = 4 * e,
					n = i - r.sigBytes % i;
				r.concat(t.lib.WordArray.random(n - 1)).concat(t.lib.WordArray.create([n << 24], 1))
			},
			unpad: function(t) {
				var r = 255 & t.words[t.sigBytes - 1 >>> 2];
				t.sigBytes -= r
			}
		}, t.pad.Iso97971 = {
			pad: function(r, e) {
				r.concat(t.lib.WordArray.create([2147483648], 1)), t.pad.ZeroPadding.pad(r, e)
			},
			unpad: function(r) {
				t.pad.ZeroPadding.unpad(r), r.sigBytes--
			}
		}, t.mode.OFB = function() {
			var r = t.lib.BlockCipherMode.extend(),
				e = r.Encryptor = r.extend({
					processBlock: function(t, r) {
						var e = this._cipher,
							i = e.blockSize,
							n = this._iv,
							o = this._keystream;
						n && (o = this._keystream = n.slice(0), this._iv = void 0), e.encryptBlock(o, 0);
						for (var s = 0; s < i; s++) t[r + s] ^= o[s]
					}
				});
			return r.Decryptor = e, r
		}(), t.pad.NoPadding = {
			pad: function() {},
			unpad: function() {}
		},
		function(r) {
			var e = t,
				i = e.lib,
				n = i.CipherParams,
				o = e.enc,
				s = o.Hex,
				a = e.format;
			a.Hex = {
				stringify: function(t) {
					return t.ciphertext.toString(s)
				},
				parse: function(t) {
					var r = s.parse(t);
					return n.create({
						ciphertext: r
					})
				}
			}
		}(),
		function() {
			var r = t,
				e = r.lib,
				i = e.BlockCipher,
				n = r.algo,
				o = [],
				s = [],
				a = [],
				c = [],
				h = [],
				l = [],
				f = [],
				u = [],
				d = [],
				v = [];
			! function() {
				for (var t = [], r = 0; r < 256; r++) r < 128 ? t[r] = r << 1 : t[r] = r << 1 ^ 283;
				for (var e = 0, i = 0, r = 0; r < 256; r++) {
					var n = i ^ i << 1 ^ i << 2 ^ i << 3 ^ i << 4;
					n = n >>> 8 ^ 255 & n ^ 99, o[e] = n, s[n] = e;
					var p = t[e],
						_ = t[p],
						y = t[_],
						g = 257 * t[n] ^ 16843008 * n;
					a[e] = g << 24 | g >>> 8, c[e] = g << 16 | g >>> 16, h[e] = g << 8 | g >>> 24, l[e] = g;
					var g = 16843009 * y ^ 65537 * _ ^ 257 * p ^ 16843008 * e;
					f[n] = g << 24 | g >>> 8, u[n] = g << 16 | g >>> 16, d[n] = g << 8 | g >>> 24, v[n] = g, e ? (e = p ^ t[t[t[y ^ p]]], i ^= t[t[i]]) : e = i = 1
				}
			}();
			var p = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
				_ = n.AES = i.extend({
					_doReset: function() {
						if (!this._nRounds || this._keyPriorReset !== this._key) {
							for (var t = this._keyPriorReset = this._key, r = t.words, e = t.sigBytes / 4, i = this._nRounds = e + 6, n = 4 * (i + 1), s = this._keySchedule = [], a = 0; a < n; a++)
								if (a < e) s[a] = r[a];
								else {
									var c = s[a - 1];
									a % e ? e > 6 && a % e == 4 && (c = o[c >>> 24] << 24 | o[c >>> 16 & 255] << 16 | o[c >>> 8 & 255] << 8 | o[255 & c]) : (c = c << 8 | c >>> 24, c = o[c >>> 24] << 24 | o[c >>> 16 & 255] << 16 | o[c >>> 8 & 255] << 8 | o[255 & c], c ^= p[a / e | 0] << 24), s[a] = s[a - e] ^ c
								}
							for (var h = this._invKeySchedule = [], l = 0; l < n; l++) {
								var a = n - l;
								if (l % 4) var c = s[a];
								else var c = s[a - 4];
								l < 4 || a <= 4 ? h[l] = c : h[l] = f[o[c >>> 24]] ^ u[o[c >>> 16 & 255]] ^ d[o[c >>> 8 & 255]] ^ v[o[255 & c]]
							}
						}
					},
					encryptBlock: function(t, r) {
						this._doCryptBlock(t, r, this._keySchedule, a, c, h, l, o)
					},
					decryptBlock: function(t, r) {
						var e = t[r + 1];
						t[r + 1] = t[r + 3], t[r + 3] = e, this._doCryptBlock(t, r, this._invKeySchedule, f, u, d, v, s);
						var e = t[r + 1];
						t[r + 1] = t[r + 3], t[r + 3] = e
					},
					_doCryptBlock: function(t, r, e, i, n, o, s, a) {
						for (var c = this._nRounds, h = t[r] ^ e[0], l = t[r + 1] ^ e[1], f = t[r + 2] ^ e[2], u = t[r + 3] ^ e[3], d = 4, v = 1; v < c; v++) {
							var p = i[h >>> 24] ^ n[l >>> 16 & 255] ^ o[f >>> 8 & 255] ^ s[255 & u] ^ e[d++],
								_ = i[l >>> 24] ^ n[f >>> 16 & 255] ^ o[u >>> 8 & 255] ^ s[255 & h] ^ e[d++],
								y = i[f >>> 24] ^ n[u >>> 16 & 255] ^ o[h >>> 8 & 255] ^ s[255 & l] ^ e[d++],
								g = i[u >>> 24] ^ n[h >>> 16 & 255] ^ o[l >>> 8 & 255] ^ s[255 & f] ^ e[d++];
							h = p, l = _, f = y, u = g
						}
						var p = (a[h >>> 24] << 24 | a[l >>> 16 & 255] << 16 | a[f >>> 8 & 255] << 8 | a[255 & u]) ^ e[d++],
							_ = (a[l >>> 24] << 24 | a[f >>> 16 & 255] << 16 | a[u >>> 8 & 255] << 8 | a[255 & h]) ^ e[d++],
							y = (a[f >>> 24] << 24 | a[u >>> 16 & 255] << 16 | a[h >>> 8 & 255] << 8 | a[255 & l]) ^ e[d++],
							g = (a[u >>> 24] << 24 | a[h >>> 16 & 255] << 16 | a[l >>> 8 & 255] << 8 | a[255 & f]) ^ e[d++];
						t[r] = p, t[r + 1] = _, t[r + 2] = y, t[r + 3] = g
					},
					keySize: 8
				});
			r.AES = i._createHelper(_)
		}(),
		function() {
			function r(t, r) {
				var e = (this._lBlock >>> t ^ this._rBlock) & r;
				this._rBlock ^= e, this._lBlock ^= e << t
			}

			function e(t, r) {
				var e = (this._rBlock >>> t ^ this._lBlock) & r;
				this._lBlock ^= e, this._rBlock ^= e << t;
			}
			var i = t,
				n = i.lib,
				o = n.WordArray,
				s = n.BlockCipher,
				a = i.algo,
				c = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4],
				h = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32],
				l = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28],
				f = [{
					0: 8421888,
					268435456: 32768,
					536870912: 8421378,
					805306368: 2,
					1073741824: 512,
					1342177280: 8421890,
					1610612736: 8389122,
					1879048192: 8388608,
					2147483648: 514,
					2415919104: 8389120,
					2684354560: 33280,
					2952790016: 8421376,
					3221225472: 32770,
					3489660928: 8388610,
					3758096384: 0,
					4026531840: 33282,
					134217728: 0,
					402653184: 8421890,
					671088640: 33282,
					939524096: 32768,
					1207959552: 8421888,
					1476395008: 512,
					1744830464: 8421378,
					2013265920: 2,
					2281701376: 8389120,
					2550136832: 33280,
					2818572288: 8421376,
					3087007744: 8389122,
					3355443200: 8388610,
					3623878656: 32770,
					3892314112: 514,
					4160749568: 8388608,
					1: 32768,
					268435457: 2,
					536870913: 8421888,
					805306369: 8388608,
					1073741825: 8421378,
					1342177281: 33280,
					1610612737: 512,
					1879048193: 8389122,
					2147483649: 8421890,
					2415919105: 8421376,
					2684354561: 8388610,
					2952790017: 33282,
					3221225473: 514,
					3489660929: 8389120,
					3758096385: 32770,
					4026531841: 0,
					134217729: 8421890,
					402653185: 8421376,
					671088641: 8388608,
					939524097: 512,
					1207959553: 32768,
					1476395009: 8388610,
					1744830465: 2,
					2013265921: 33282,
					2281701377: 32770,
					2550136833: 8389122,
					2818572289: 514,
					3087007745: 8421888,
					3355443201: 8389120,
					3623878657: 0,
					3892314113: 33280,
					4160749569: 8421378
				}, {
					0: 1074282512,
					16777216: 16384,
					33554432: 524288,
					50331648: 1074266128,
					67108864: 1073741840,
					83886080: 1074282496,
					100663296: 1073758208,
					117440512: 16,
					134217728: 540672,
					150994944: 1073758224,
					167772160: 1073741824,
					184549376: 540688,
					201326592: 524304,
					218103808: 0,
					234881024: 16400,
					251658240: 1074266112,
					8388608: 1073758208,
					25165824: 540688,
					41943040: 16,
					58720256: 1073758224,
					75497472: 1074282512,
					92274688: 1073741824,
					109051904: 524288,
					125829120: 1074266128,
					142606336: 524304,
					159383552: 0,
					176160768: 16384,
					192937984: 1074266112,
					209715200: 1073741840,
					226492416: 540672,
					243269632: 1074282496,
					260046848: 16400,
					268435456: 0,
					285212672: 1074266128,
					301989888: 1073758224,
					318767104: 1074282496,
					335544320: 1074266112,
					352321536: 16,
					369098752: 540688,
					385875968: 16384,
					402653184: 16400,
					419430400: 524288,
					436207616: 524304,
					452984832: 1073741840,
					469762048: 540672,
					486539264: 1073758208,
					503316480: 1073741824,
					520093696: 1074282512,
					276824064: 540688,
					293601280: 524288,
					310378496: 1074266112,
					327155712: 16384,
					343932928: 1073758208,
					360710144: 1074282512,
					377487360: 16,
					394264576: 1073741824,
					411041792: 1074282496,
					427819008: 1073741840,
					444596224: 1073758224,
					461373440: 524304,
					478150656: 0,
					494927872: 16400,
					511705088: 1074266128,
					528482304: 540672
				}, {
					0: 260,
					1048576: 0,
					2097152: 67109120,
					3145728: 65796,
					4194304: 65540,
					5242880: 67108868,
					6291456: 67174660,
					7340032: 67174400,
					8388608: 67108864,
					9437184: 67174656,
					10485760: 65792,
					11534336: 67174404,
					12582912: 67109124,
					13631488: 65536,
					14680064: 4,
					15728640: 256,
					524288: 67174656,
					1572864: 67174404,
					2621440: 0,
					3670016: 67109120,
					4718592: 67108868,
					5767168: 65536,
					6815744: 65540,
					7864320: 260,
					8912896: 4,
					9961472: 256,
					11010048: 67174400,
					12058624: 65796,
					13107200: 65792,
					14155776: 67109124,
					15204352: 67174660,
					16252928: 67108864,
					16777216: 67174656,
					17825792: 65540,
					18874368: 65536,
					19922944: 67109120,
					20971520: 256,
					22020096: 67174660,
					23068672: 67108868,
					24117248: 0,
					25165824: 67109124,
					26214400: 67108864,
					27262976: 4,
					28311552: 65792,
					29360128: 67174400,
					30408704: 260,
					31457280: 65796,
					32505856: 67174404,
					17301504: 67108864,
					18350080: 260,
					19398656: 67174656,
					20447232: 0,
					21495808: 65540,
					22544384: 67109120,
					23592960: 256,
					24641536: 67174404,
					25690112: 65536,
					26738688: 67174660,
					27787264: 65796,
					28835840: 67108868,
					29884416: 67109124,
					30932992: 67174400,
					31981568: 4,
					33030144: 65792
				}, {
					0: 2151682048,
					65536: 2147487808,
					131072: 4198464,
					196608: 2151677952,
					262144: 0,
					327680: 4198400,
					393216: 2147483712,
					458752: 4194368,
					524288: 2147483648,
					589824: 4194304,
					655360: 64,
					720896: 2147487744,
					786432: 2151678016,
					851968: 4160,
					917504: 4096,
					983040: 2151682112,
					32768: 2147487808,
					98304: 64,
					163840: 2151678016,
					229376: 2147487744,
					294912: 4198400,
					360448: 2151682112,
					425984: 0,
					491520: 2151677952,
					557056: 4096,
					622592: 2151682048,
					688128: 4194304,
					753664: 4160,
					819200: 2147483648,
					884736: 4194368,
					950272: 4198464,
					1015808: 2147483712,
					1048576: 4194368,
					1114112: 4198400,
					1179648: 2147483712,
					1245184: 0,
					1310720: 4160,
					1376256: 2151678016,
					1441792: 2151682048,
					1507328: 2147487808,
					1572864: 2151682112,
					1638400: 2147483648,
					1703936: 2151677952,
					1769472: 4198464,
					1835008: 2147487744,
					1900544: 4194304,
					1966080: 64,
					2031616: 4096,
					1081344: 2151677952,
					1146880: 2151682112,
					1212416: 0,
					1277952: 4198400,
					1343488: 4194368,
					1409024: 2147483648,
					1474560: 2147487808,
					1540096: 64,
					1605632: 2147483712,
					1671168: 4096,
					1736704: 2147487744,
					1802240: 2151678016,
					1867776: 4160,
					1933312: 2151682048,
					1998848: 4194304,
					2064384: 4198464
				}, {
					0: 128,
					4096: 17039360,
					8192: 262144,
					12288: 536870912,
					16384: 537133184,
					20480: 16777344,
					24576: 553648256,
					28672: 262272,
					32768: 16777216,
					36864: 537133056,
					40960: 536871040,
					45056: 553910400,
					49152: 553910272,
					53248: 0,
					57344: 17039488,
					61440: 553648128,
					2048: 17039488,
					6144: 553648256,
					10240: 128,
					14336: 17039360,
					18432: 262144,
					22528: 537133184,
					26624: 553910272,
					30720: 536870912,
					34816: 537133056,
					38912: 0,
					43008: 553910400,
					47104: 16777344,
					51200: 536871040,
					55296: 553648128,
					59392: 16777216,
					63488: 262272,
					65536: 262144,
					69632: 128,
					73728: 536870912,
					77824: 553648256,
					81920: 16777344,
					86016: 553910272,
					90112: 537133184,
					94208: 16777216,
					98304: 553910400,
					102400: 553648128,
					106496: 17039360,
					110592: 537133056,
					114688: 262272,
					118784: 536871040,
					122880: 0,
					126976: 17039488,
					67584: 553648256,
					71680: 16777216,
					75776: 17039360,
					79872: 537133184,
					83968: 536870912,
					88064: 17039488,
					92160: 128,
					96256: 553910272,
					100352: 262272,
					104448: 553910400,
					108544: 0,
					112640: 553648128,
					116736: 16777344,
					120832: 262144,
					124928: 537133056,
					129024: 536871040
				}, {
					0: 268435464,
					256: 8192,
					512: 270532608,
					768: 270540808,
					1024: 268443648,
					1280: 2097152,
					1536: 2097160,
					1792: 268435456,
					2048: 0,
					2304: 268443656,
					2560: 2105344,
					2816: 8,
					3072: 270532616,
					3328: 2105352,
					3584: 8200,
					3840: 270540800,
					128: 270532608,
					384: 270540808,
					640: 8,
					896: 2097152,
					1152: 2105352,
					1408: 268435464,
					1664: 268443648,
					1920: 8200,
					2176: 2097160,
					2432: 8192,
					2688: 268443656,
					2944: 270532616,
					3200: 0,
					3456: 270540800,
					3712: 2105344,
					3968: 268435456,
					4096: 268443648,
					4352: 270532616,
					4608: 270540808,
					4864: 8200,
					5120: 2097152,
					5376: 268435456,
					5632: 268435464,
					5888: 2105344,
					6144: 2105352,
					6400: 0,
					6656: 8,
					6912: 270532608,
					7168: 8192,
					7424: 268443656,
					7680: 270540800,
					7936: 2097160,
					4224: 8,
					4480: 2105344,
					4736: 2097152,
					4992: 268435464,
					5248: 268443648,
					5504: 8200,
					5760: 270540808,
					6016: 270532608,
					6272: 270540800,
					6528: 270532616,
					6784: 8192,
					7040: 2105352,
					7296: 2097160,
					7552: 0,
					7808: 268435456,
					8064: 268443656
				}, {
					0: 1048576,
					16: 33555457,
					32: 1024,
					48: 1049601,
					64: 34604033,
					80: 0,
					96: 1,
					112: 34603009,
					128: 33555456,
					144: 1048577,
					160: 33554433,
					176: 34604032,
					192: 34603008,
					208: 1025,
					224: 1049600,
					240: 33554432,
					8: 34603009,
					24: 0,
					40: 33555457,
					56: 34604032,
					72: 1048576,
					88: 33554433,
					104: 33554432,
					120: 1025,
					136: 1049601,
					152: 33555456,
					168: 34603008,
					184: 1048577,
					200: 1024,
					216: 34604033,
					232: 1,
					248: 1049600,
					256: 33554432,
					272: 1048576,
					288: 33555457,
					304: 34603009,
					320: 1048577,
					336: 33555456,
					352: 34604032,
					368: 1049601,
					384: 1025,
					400: 34604033,
					416: 1049600,
					432: 1,
					448: 0,
					464: 34603008,
					480: 33554433,
					496: 1024,
					264: 1049600,
					280: 33555457,
					296: 34603009,
					312: 1,
					328: 33554432,
					344: 1048576,
					360: 1025,
					376: 34604032,
					392: 33554433,
					408: 34603008,
					424: 0,
					440: 34604033,
					456: 1049601,
					472: 1024,
					488: 33555456,
					504: 1048577
				}, {
					0: 134219808,
					1: 131072,
					2: 134217728,
					3: 32,
					4: 131104,
					5: 134350880,
					6: 134350848,
					7: 2048,
					8: 134348800,
					9: 134219776,
					10: 133120,
					11: 134348832,
					12: 2080,
					13: 0,
					14: 134217760,
					15: 133152,
					2147483648: 2048,
					2147483649: 134350880,
					2147483650: 134219808,
					2147483651: 134217728,
					2147483652: 134348800,
					2147483653: 133120,
					2147483654: 133152,
					2147483655: 32,
					2147483656: 134217760,
					2147483657: 2080,
					2147483658: 131104,
					2147483659: 134350848,
					2147483660: 0,
					2147483661: 134348832,
					2147483662: 134219776,
					2147483663: 131072,
					16: 133152,
					17: 134350848,
					18: 32,
					19: 2048,
					20: 134219776,
					21: 134217760,
					22: 134348832,
					23: 131072,
					24: 0,
					25: 131104,
					26: 134348800,
					27: 134219808,
					28: 134350880,
					29: 133120,
					30: 2080,
					31: 134217728,
					2147483664: 131072,
					2147483665: 2048,
					2147483666: 134348832,
					2147483667: 133152,
					2147483668: 32,
					2147483669: 134348800,
					2147483670: 134217728,
					2147483671: 134219808,
					2147483672: 134350880,
					2147483673: 134217760,
					2147483674: 134219776,
					2147483675: 0,
					2147483676: 133120,
					2147483677: 2080,
					2147483678: 131104,
					2147483679: 134350848
				}],
				u = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679],
				d = a.DES = s.extend({
					_doReset: function() {
						for (var t = this._key, r = t.words, e = [], i = 0; i < 56; i++) {
							var n = c[i] - 1;
							e[i] = r[n >>> 5] >>> 31 - n % 32 & 1
						}
						for (var o = this._subKeys = [], s = 0; s < 16; s++) {
							for (var a = o[s] = [], f = l[s], i = 0; i < 24; i++) a[i / 6 | 0] |= e[(h[i] - 1 + f) % 28] << 31 - i % 6, a[4 + (i / 6 | 0)] |= e[28 + (h[i + 24] - 1 + f) % 28] << 31 - i % 6;
							a[0] = a[0] << 1 | a[0] >>> 31;
							for (var i = 1; i < 7; i++) a[i] = a[i] >>> 4 * (i - 1) + 3;
							a[7] = a[7] << 5 | a[7] >>> 27
						}
						for (var u = this._invSubKeys = [], i = 0; i < 16; i++) u[i] = o[15 - i]
					},
					encryptBlock: function(t, r) {
						this._doCryptBlock(t, r, this._subKeys)
					},
					decryptBlock: function(t, r) {
						this._doCryptBlock(t, r, this._invSubKeys)
					},
					_doCryptBlock: function(t, i, n) {
						this._lBlock = t[i], this._rBlock = t[i + 1], r.call(this, 4, 252645135), r.call(this, 16, 65535), e.call(this, 2, 858993459), e.call(this, 8, 16711935), r.call(this, 1, 1431655765);
						for (var o = 0; o < 16; o++) {
							for (var s = n[o], a = this._lBlock, c = this._rBlock, h = 0, l = 0; l < 8; l++) h |= f[l][((c ^ s[l]) & u[l]) >>> 0];
							this._lBlock = c, this._rBlock = a ^ h
						}
						var d = this._lBlock;
						this._lBlock = this._rBlock, this._rBlock = d, r.call(this, 1, 1431655765), e.call(this, 8, 16711935), e.call(this, 2, 858993459), r.call(this, 16, 65535), r.call(this, 4, 252645135), t[i] = this._lBlock, t[i + 1] = this._rBlock
					},
					keySize: 2,
					ivSize: 2,
					blockSize: 2
				});
			i.DES = s._createHelper(d);
			var v = a.TripleDES = s.extend({
				_doReset: function() {
					var t = this._key,
						r = t.words;
					this._des1 = d.createEncryptor(o.create(r.slice(0, 2))), this._des2 = d.createEncryptor(o.create(r.slice(2, 4))), this._des3 = d.createEncryptor(o.create(r.slice(4, 6)))
				},
				encryptBlock: function(t, r) {
					this._des1.encryptBlock(t, r), this._des2.decryptBlock(t, r), this._des3.encryptBlock(t, r)
				},
				decryptBlock: function(t, r) {
					this._des3.decryptBlock(t, r), this._des2.encryptBlock(t, r), this._des1.decryptBlock(t, r)
				},
				keySize: 6,
				ivSize: 2,
				blockSize: 2
			});
			i.TripleDES = s._createHelper(v)
		}(),
		function() {
			function r() {
				for (var t = this._S, r = this._i, e = this._j, i = 0, n = 0; n < 4; n++) {
					r = (r + 1) % 256, e = (e + t[r]) % 256;
					var o = t[r];
					t[r] = t[e], t[e] = o, i |= t[(t[r] + t[e]) % 256] << 24 - 8 * n
				}
				return this._i = r, this._j = e, i
			}
			var e = t,
				i = e.lib,
				n = i.StreamCipher,
				o = e.algo,
				s = o.RC4 = n.extend({
					_doReset: function() {
						for (var t = this._key, r = t.words, e = t.sigBytes, i = this._S = [], n = 0; n < 256; n++) i[n] = n;
						for (var n = 0, o = 0; n < 256; n++) {
							var s = n % e,
								a = r[s >>> 2] >>> 24 - s % 4 * 8 & 255;
							o = (o + i[n] + a) % 256;
							var c = i[n];
							i[n] = i[o], i[o] = c
						}
						this._i = this._j = 0
					},
					_doProcessBlock: function(t, e) {
						t[e] ^= r.call(this)
					},
					keySize: 8,
					ivSize: 0
				});
			e.RC4 = n._createHelper(s);
			var a = o.RC4Drop = s.extend({
				cfg: s.cfg.extend({
					drop: 192
				}),
				_doReset: function() {
					s._doReset.call(this);
					for (var t = this.cfg.drop; t > 0; t--) r.call(this)
				}
			});
			e.RC4Drop = n._createHelper(a)
		}(), t.mode.CTRGladman = function() {
			function r(t) {
				if (255 === (t >> 24 & 255)) {
					var r = t >> 16 & 255,
						e = t >> 8 & 255,
						i = 255 & t;
					255 === r ? (r = 0, 255 === e ? (e = 0, 255 === i ? i = 0 : ++i) : ++e) : ++r, t = 0, t += r << 16, t += e << 8, t += i
				} else t += 1 << 24;
				return t
			}

			function e(t) {
				return 0 === (t[0] = r(t[0])) && (t[1] = r(t[1])), t
			}
			var i = t.lib.BlockCipherMode.extend(),
				n = i.Encryptor = i.extend({
					processBlock: function(t, r) {
						var i = this._cipher,
							n = i.blockSize,
							o = this._iv,
							s = this._counter;
						o && (s = this._counter = o.slice(0), this._iv = void 0), e(s);
						var a = s.slice(0);
						i.encryptBlock(a, 0);
						for (var c = 0; c < n; c++) t[r + c] ^= a[c]
					}
				});
			return i.Decryptor = n, i
		}(),
		function() {
			function r() {
				for (var t = this._X, r = this._C, e = 0; e < 8; e++) a[e] = r[e];
				r[0] = r[0] + 1295307597 + this._b | 0, r[1] = r[1] + 3545052371 + (r[0] >>> 0 < a[0] >>> 0 ? 1 : 0) | 0, r[2] = r[2] + 886263092 + (r[1] >>> 0 < a[1] >>> 0 ? 1 : 0) | 0, r[3] = r[3] + 1295307597 + (r[2] >>> 0 < a[2] >>> 0 ? 1 : 0) | 0, r[4] = r[4] + 3545052371 + (r[3] >>> 0 < a[3] >>> 0 ? 1 : 0) | 0, r[5] = r[5] + 886263092 + (r[4] >>> 0 < a[4] >>> 0 ? 1 : 0) | 0, r[6] = r[6] + 1295307597 + (r[5] >>> 0 < a[5] >>> 0 ? 1 : 0) | 0, r[7] = r[7] + 3545052371 + (r[6] >>> 0 < a[6] >>> 0 ? 1 : 0) | 0, this._b = r[7] >>> 0 < a[7] >>> 0 ? 1 : 0;
				for (var e = 0; e < 8; e++) {
					var i = t[e] + r[e],
						n = 65535 & i,
						o = i >>> 16,
						s = ((n * n >>> 17) + n * o >>> 15) + o * o,
						h = ((4294901760 & i) * i | 0) + ((65535 & i) * i | 0);
					c[e] = s ^ h
				}
				t[0] = c[0] + (c[7] << 16 | c[7] >>> 16) + (c[6] << 16 | c[6] >>> 16) | 0, t[1] = c[1] + (c[0] << 8 | c[0] >>> 24) + c[7] | 0, t[2] = c[2] + (c[1] << 16 | c[1] >>> 16) + (c[0] << 16 | c[0] >>> 16) | 0, t[3] = c[3] + (c[2] << 8 | c[2] >>> 24) + c[1] | 0, t[4] = c[4] + (c[3] << 16 | c[3] >>> 16) + (c[2] << 16 | c[2] >>> 16) | 0, t[5] = c[5] + (c[4] << 8 | c[4] >>> 24) + c[3] | 0, t[6] = c[6] + (c[5] << 16 | c[5] >>> 16) + (c[4] << 16 | c[4] >>> 16) | 0, t[7] = c[7] + (c[6] << 8 | c[6] >>> 24) + c[5] | 0
			}
			var e = t,
				i = e.lib,
				n = i.StreamCipher,
				o = e.algo,
				s = [],
				a = [],
				c = [],
				h = o.Rabbit = n.extend({
					_doReset: function() {
						for (var t = this._key.words, e = this.cfg.iv, i = 0; i < 4; i++) t[i] = 16711935 & (t[i] << 8 | t[i] >>> 24) | 4278255360 & (t[i] << 24 | t[i] >>> 8);
						var n = this._X = [t[0], t[3] << 16 | t[2] >>> 16, t[1], t[0] << 16 | t[3] >>> 16, t[2], t[1] << 16 | t[0] >>> 16, t[3], t[2] << 16 | t[1] >>> 16],
							o = this._C = [t[2] << 16 | t[2] >>> 16, 4294901760 & t[0] | 65535 & t[1], t[3] << 16 | t[3] >>> 16, 4294901760 & t[1] | 65535 & t[2], t[0] << 16 | t[0] >>> 16, 4294901760 & t[2] | 65535 & t[3], t[1] << 16 | t[1] >>> 16, 4294901760 & t[3] | 65535 & t[0]];
						this._b = 0;
						for (var i = 0; i < 4; i++) r.call(this);
						for (var i = 0; i < 8; i++) o[i] ^= n[i + 4 & 7];
						if (e) {
							var s = e.words,
								a = s[0],
								c = s[1],
								h = 16711935 & (a << 8 | a >>> 24) | 4278255360 & (a << 24 | a >>> 8),
								l = 16711935 & (c << 8 | c >>> 24) | 4278255360 & (c << 24 | c >>> 8),
								f = h >>> 16 | 4294901760 & l,
								u = l << 16 | 65535 & h;
							o[0] ^= h, o[1] ^= f, o[2] ^= l, o[3] ^= u, o[4] ^= h, o[5] ^= f, o[6] ^= l, o[7] ^= u;
							for (var i = 0; i < 4; i++) r.call(this)
						}
					},
					_doProcessBlock: function(t, e) {
						var i = this._X;
						r.call(this), s[0] = i[0] ^ i[5] >>> 16 ^ i[3] << 16, s[1] = i[2] ^ i[7] >>> 16 ^ i[5] << 16, s[2] = i[4] ^ i[1] >>> 16 ^ i[7] << 16, s[3] = i[6] ^ i[3] >>> 16 ^ i[1] << 16;
						for (var n = 0; n < 4; n++) s[n] = 16711935 & (s[n] << 8 | s[n] >>> 24) | 4278255360 & (s[n] << 24 | s[n] >>> 8), t[e + n] ^= s[n]
					},
					blockSize: 4,
					ivSize: 2
				});
			e.Rabbit = n._createHelper(h)
		}(), t.mode.CTR = function() {
			var r = t.lib.BlockCipherMode.extend(),
				e = r.Encryptor = r.extend({
					processBlock: function(t, r) {
						var e = this._cipher,
							i = e.blockSize,
							n = this._iv,
							o = this._counter;
						n && (o = this._counter = n.slice(0), this._iv = void 0);
						var s = o.slice(0);
						e.encryptBlock(s, 0), o[i - 1] = o[i - 1] + 1 | 0;
						for (var a = 0; a < i; a++) t[r + a] ^= s[a]
					}
				});
			return r.Decryptor = e, r
		}(),
		function() {
			function r() {
				for (var t = this._X, r = this._C, e = 0; e < 8; e++) a[e] = r[e];
				r[0] = r[0] + 1295307597 + this._b | 0, r[1] = r[1] + 3545052371 + (r[0] >>> 0 < a[0] >>> 0 ? 1 : 0) | 0, r[2] = r[2] + 886263092 + (r[1] >>> 0 < a[1] >>> 0 ? 1 : 0) | 0, r[3] = r[3] + 1295307597 + (r[2] >>> 0 < a[2] >>> 0 ? 1 : 0) | 0, r[4] = r[4] + 3545052371 + (r[3] >>> 0 < a[3] >>> 0 ? 1 : 0) | 0, r[5] = r[5] + 886263092 + (r[4] >>> 0 < a[4] >>> 0 ? 1 : 0) | 0, r[6] = r[6] + 1295307597 + (r[5] >>> 0 < a[5] >>> 0 ? 1 : 0) | 0, r[7] = r[7] + 3545052371 + (r[6] >>> 0 < a[6] >>> 0 ? 1 : 0) | 0, this._b = r[7] >>> 0 < a[7] >>> 0 ? 1 : 0;
				for (var e = 0; e < 8; e++) {
					var i = t[e] + r[e],
						n = 65535 & i,
						o = i >>> 16,
						s = ((n * n >>> 17) + n * o >>> 15) + o * o,
						h = ((4294901760 & i) * i | 0) + ((65535 & i) * i | 0);
					c[e] = s ^ h
				}
				t[0] = c[0] + (c[7] << 16 | c[7] >>> 16) + (c[6] << 16 | c[6] >>> 16) | 0, t[1] = c[1] + (c[0] << 8 | c[0] >>> 24) + c[7] | 0, t[2] = c[2] + (c[1] << 16 | c[1] >>> 16) + (c[0] << 16 | c[0] >>> 16) | 0, t[3] = c[3] + (c[2] << 8 | c[2] >>> 24) + c[1] | 0, t[4] = c[4] + (c[3] << 16 | c[3] >>> 16) + (c[2] << 16 | c[2] >>> 16) | 0, t[5] = c[5] + (c[4] << 8 | c[4] >>> 24) + c[3] | 0, t[6] = c[6] + (c[5] << 16 | c[5] >>> 16) + (c[4] << 16 | c[4] >>> 16) | 0, t[7] = c[7] + (c[6] << 8 | c[6] >>> 24) + c[5] | 0
			}
			var e = t,
				i = e.lib,
				n = i.StreamCipher,
				o = e.algo,
				s = [],
				a = [],
				c = [],
				h = o.RabbitLegacy = n.extend({
					_doReset: function() {
						var t = this._key.words,
							e = this.cfg.iv,
							i = this._X = [t[0], t[3] << 16 | t[2] >>> 16, t[1], t[0] << 16 | t[3] >>> 16, t[2], t[1] << 16 | t[0] >>> 16, t[3], t[2] << 16 | t[1] >>> 16],
							n = this._C = [t[2] << 16 | t[2] >>> 16, 4294901760 & t[0] | 65535 & t[1], t[3] << 16 | t[3] >>> 16, 4294901760 & t[1] | 65535 & t[2], t[0] << 16 | t[0] >>> 16, 4294901760 & t[2] | 65535 & t[3], t[1] << 16 | t[1] >>> 16, 4294901760 & t[3] | 65535 & t[0]];
						this._b = 0;
						for (var o = 0; o < 4; o++) r.call(this);
						for (var o = 0; o < 8; o++) n[o] ^= i[o + 4 & 7];
						if (e) {
							var s = e.words,
								a = s[0],
								c = s[1],
								h = 16711935 & (a << 8 | a >>> 24) | 4278255360 & (a << 24 | a >>> 8),
								l = 16711935 & (c << 8 | c >>> 24) | 4278255360 & (c << 24 | c >>> 8),
								f = h >>> 16 | 4294901760 & l,
								u = l << 16 | 65535 & h;
							n[0] ^= h, n[1] ^= f, n[2] ^= l, n[3] ^= u, n[4] ^= h, n[5] ^= f, n[6] ^= l, n[7] ^= u;
							for (var o = 0; o < 4; o++) r.call(this)
						}
					},
					_doProcessBlock: function(t, e) {
						var i = this._X;
						r.call(this), s[0] = i[0] ^ i[5] >>> 16 ^ i[3] << 16, s[1] = i[2] ^ i[7] >>> 16 ^ i[5] << 16, s[2] = i[4] ^ i[1] >>> 16 ^ i[7] << 16, s[3] = i[6] ^ i[3] >>> 16 ^ i[1] << 16;
						for (var n = 0; n < 4; n++) s[n] = 16711935 & (s[n] << 8 | s[n] >>> 24) | 4278255360 & (s[n] << 24 | s[n] >>> 8), t[e + n] ^= s[n]
					},
					blockSize: 4,
					ivSize: 2
				});
			e.RabbitLegacy = n._createHelper(h)
		}(), t.pad.ZeroPadding = {
			pad: function(t, r) {
				var e = 4 * r;
				t.clamp(), t.sigBytes += e - (t.sigBytes % e || e)
			},
			unpad: function(t) {
				for (var r = t.words, e = t.sigBytes - 1; !(r[e >>> 2] >>> 24 - e % 4 * 8 & 255);) e--;
				t.sigBytes = e + 1
			}
		}, t
});
// # sourceMappingURL=crypto-js.min.js.map
! function(e, r, o) {
	"object" == typeof exports ? module.exports = exports = r(require("./core"), require("./sha256"), require("./hmac")) : "function" == typeof define && define.amd ? define(["./core", "./sha256", "./hmac"], r) : r(e.CryptoJS)
}(this, function(e) {
	return e.HmacSHA256
});
// # sourceMappingURL=hmac-sha256.min.js.map
! function(r, e) {
	"object" == typeof exports ? module.exports = exports = e(require("./core")) : "function" == typeof define && define.amd ? define(["./core"], e) : e(r.CryptoJS)
}(this, function(r) {
	return function() {
		function e(r, e, t) {
			for (var a = [], o = 0, i = 0; i < e; i++)
				if (i % 4) {
					var f = t[r.charCodeAt(i - 1)] << i % 4 * 2,
						c = t[r.charCodeAt(i)] >>> 6 - i % 4 * 2;
					a[o >>> 2] |= (f | c) << 24 - o % 4 * 8, o++
				}
			return n.create(a, o)
		}
		var t = r,
			a = t.lib,
			n = a.WordArray,
			o = t.enc;
		o.Base64 = {
			stringify: function(r) {
				var e = r.words,
					t = r.sigBytes,
					a = this._map;
				r.clamp();
				for (var n = [], o = 0; o < t; o += 3)
					for (var i = e[o >>> 2] >>> 24 - o % 4 * 8 & 255, f = e[o + 1 >>> 2] >>> 24 - (o + 1) % 4 * 8 & 255, c = e[o + 2 >>> 2] >>> 24 - (o + 2) % 4 * 8 & 255, s = i << 16 | f << 8 | c, h = 0; h < 4 && o + .75 * h < t; h++) n.push(a.charAt(s >>> 6 * (3 - h) & 63));
				var p = a.charAt(64);
				if (p)
					for (; n.length % 4;) n.push(p);
				return n.join("")
			},
			parse: function(r) {
				var t = r.length,
					a = this._map,
					n = this._reverseMap;
				if (!n) {
					n = this._reverseMap = [];
					for (var o = 0; o < a.length; o++) n[a.charCodeAt(o)] = o
				}
				var i = a.charAt(64);
				if (i) {
					var f = r.indexOf(i);
					f !== -1 && (t = f)
				}
				return e(r, t, n)
			},
			_map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
		}
	}(), r.enc.Base64
});
// # sourceMappingURL=enc-base64.min.js.map
/*! jQuery v3.7.1 | (c) OpenJS Foundation and other contributors | jquery.org/license */
!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(ie,e){"use strict";var oe=[],r=Object.getPrototypeOf,ae=oe.slice,g=oe.flat?function(e){return oe.flat.call(e)}:function(e){return oe.concat.apply([],e)},s=oe.push,se=oe.indexOf,n={},i=n.toString,ue=n.hasOwnProperty,o=ue.toString,a=o.call(Object),le={},v=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType&&"function"!=typeof e.item},y=function(e){return null!=e&&e===e.window},C=ie.document,u={type:!0,src:!0,nonce:!0,noModule:!0};function m(e,t,n){var r,i,o=(n=n||C).createElement("script");if(o.text=e,t)for(r in u)(i=t[r]||t.getAttribute&&t.getAttribute(r))&&o.setAttribute(r,i);n.head.appendChild(o).parentNode.removeChild(o)}function x(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?n[i.call(e)]||"object":typeof e}var t="3.7.1",l=/HTML$/i,ce=function(e,t){return new ce.fn.init(e,t)};function c(e){var t=!!e&&"length"in e&&e.length,n=x(e);return!v(e)&&!y(e)&&("array"===n||0===t||"number"==typeof t&&0<t&&t-1 in e)}function fe(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}ce.fn=ce.prototype={jquery:t,constructor:ce,length:0,toArray:function(){return ae.call(this)},get:function(e){return null==e?ae.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=ce.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return ce.each(this,e)},map:function(n){return this.pushStack(ce.map(this,function(e,t){return n.call(e,t,e)}))},slice:function(){return this.pushStack(ae.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(ce.grep(this,function(e,t){return(t+1)%2}))},odd:function(){return this.pushStack(ce.grep(this,function(e,t){return t%2}))},eq:function(e){var t=this.length,n=+e+(e<0?t:0);return this.pushStack(0<=n&&n<t?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:s,sort:oe.sort,splice:oe.splice},ce.extend=ce.fn.extend=function(){var e,t,n,r,i,o,a=arguments[0]||{},s=1,u=arguments.length,l=!1;for("boolean"==typeof a&&(l=a,a=arguments[s]||{},s++),"object"==typeof a||v(a)||(a={}),s===u&&(a=this,s--);s<u;s++)if(null!=(e=arguments[s]))for(t in e)r=e[t],"__proto__"!==t&&a!==r&&(l&&r&&(ce.isPlainObject(r)||(i=Array.isArray(r)))?(n=a[t],o=i&&!Array.isArray(n)?[]:i||ce.isPlainObject(n)?n:{},i=!1,a[t]=ce.extend(l,o,r)):void 0!==r&&(a[t]=r));return a},ce.extend({expando:"jQuery"+(t+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,n;return!(!e||"[object Object]"!==i.call(e))&&(!(t=r(e))||"function"==typeof(n=ue.call(t,"constructor")&&t.constructor)&&o.call(n)===a)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t,n){m(e,{nonce:t&&t.nonce},n)},each:function(e,t){var n,r=0;if(c(e)){for(n=e.length;r<n;r++)if(!1===t.call(e[r],r,e[r]))break}else for(r in e)if(!1===t.call(e[r],r,e[r]))break;return e},text:function(e){var t,n="",r=0,i=e.nodeType;if(!i)while(t=e[r++])n+=ce.text(t);return 1===i||11===i?e.textContent:9===i?e.documentElement.textContent:3===i||4===i?e.nodeValue:n},makeArray:function(e,t){var n=t||[];return null!=e&&(c(Object(e))?ce.merge(n,"string"==typeof e?[e]:e):s.call(n,e)),n},inArray:function(e,t,n){return null==t?-1:se.call(t,e,n)},isXMLDoc:function(e){var t=e&&e.namespaceURI,n=e&&(e.ownerDocument||e).documentElement;return!l.test(t||n&&n.nodeName||"HTML")},merge:function(e,t){for(var n=+t.length,r=0,i=e.length;r<n;r++)e[i++]=t[r];return e.length=i,e},grep:function(e,t,n){for(var r=[],i=0,o=e.length,a=!n;i<o;i++)!t(e[i],i)!==a&&r.push(e[i]);return r},map:function(e,t,n){var r,i,o=0,a=[];if(c(e))for(r=e.length;o<r;o++)null!=(i=t(e[o],o,n))&&a.push(i);else for(o in e)null!=(i=t(e[o],o,n))&&a.push(i);return g(a)},guid:1,support:le}),"function"==typeof Symbol&&(ce.fn[Symbol.iterator]=oe[Symbol.iterator]),ce.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){n["[object "+t+"]"]=t.toLowerCase()});var pe=oe.pop,de=oe.sort,he=oe.splice,ge="[\\x20\\t\\r\\n\\f]",ve=new RegExp("^"+ge+"+|((?:^|[^\\\\])(?:\\\\.)*)"+ge+"+$","g");ce.contains=function(e,t){var n=t&&t.parentNode;return e===n||!(!n||1!==n.nodeType||!(e.contains?e.contains(n):e.compareDocumentPosition&&16&e.compareDocumentPosition(n)))};var f=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;function p(e,t){return t?"\0"===e?"\ufffd":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e}ce.escapeSelector=function(e){return(e+"").replace(f,p)};var ye=C,me=s;!function(){var e,b,w,o,a,T,r,C,d,i,k=me,S=ce.expando,E=0,n=0,s=W(),c=W(),u=W(),h=W(),l=function(e,t){return e===t&&(a=!0),0},f="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",t="(?:\\\\[\\da-fA-F]{1,6}"+ge+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",p="\\["+ge+"*("+t+")(?:"+ge+"*([*^$|!~]?=)"+ge+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+t+"))|)"+ge+"*\\]",g=":("+t+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+p+")*)|.*)\\)|)",v=new RegExp(ge+"+","g"),y=new RegExp("^"+ge+"*,"+ge+"*"),m=new RegExp("^"+ge+"*([>+~]|"+ge+")"+ge+"*"),x=new RegExp(ge+"|>"),j=new RegExp(g),A=new RegExp("^"+t+"$"),D={ID:new RegExp("^#("+t+")"),CLASS:new RegExp("^\\.("+t+")"),TAG:new RegExp("^("+t+"|[*])"),ATTR:new RegExp("^"+p),PSEUDO:new RegExp("^"+g),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+ge+"*(even|odd|(([+-]|)(\\d*)n|)"+ge+"*(?:([+-]|)"+ge+"*(\\d+)|))"+ge+"*\\)|)","i"),bool:new RegExp("^(?:"+f+")$","i"),needsContext:new RegExp("^"+ge+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+ge+"*((?:-\\d)?\\d*)"+ge+"*\\)|)(?=[^-]|$)","i")},N=/^(?:input|select|textarea|button)$/i,q=/^h\d$/i,L=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,H=/[+~]/,O=new RegExp("\\\\[\\da-fA-F]{1,6}"+ge+"?|\\\\([^\\r\\n\\f])","g"),P=function(e,t){var n="0x"+e.slice(1)-65536;return t||(n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320))},M=function(){V()},R=J(function(e){return!0===e.disabled&&fe(e,"fieldset")},{dir:"parentNode",next:"legend"});try{k.apply(oe=ae.call(ye.childNodes),ye.childNodes),oe[ye.childNodes.length].nodeType}catch(e){k={apply:function(e,t){me.apply(e,ae.call(t))},call:function(e){me.apply(e,ae.call(arguments,1))}}}function I(t,e,n,r){var i,o,a,s,u,l,c,f=e&&e.ownerDocument,p=e?e.nodeType:9;if(n=n||[],"string"!=typeof t||!t||1!==p&&9!==p&&11!==p)return n;if(!r&&(V(e),e=e||T,C)){if(11!==p&&(u=L.exec(t)))if(i=u[1]){if(9===p){if(!(a=e.getElementById(i)))return n;if(a.id===i)return k.call(n,a),n}else if(f&&(a=f.getElementById(i))&&I.contains(e,a)&&a.id===i)return k.call(n,a),n}else{if(u[2])return k.apply(n,e.getElementsByTagName(t)),n;if((i=u[3])&&e.getElementsByClassName)return k.apply(n,e.getElementsByClassName(i)),n}if(!(h[t+" "]||d&&d.test(t))){if(c=t,f=e,1===p&&(x.test(t)||m.test(t))){(f=H.test(t)&&U(e.parentNode)||e)==e&&le.scope||((s=e.getAttribute("id"))?s=ce.escapeSelector(s):e.setAttribute("id",s=S)),o=(l=Y(t)).length;while(o--)l[o]=(s?"#"+s:":scope")+" "+Q(l[o]);c=l.join(",")}try{return k.apply(n,f.querySelectorAll(c)),n}catch(e){h(t,!0)}finally{s===S&&e.removeAttribute("id")}}}return re(t.replace(ve,"$1"),e,n,r)}function W(){var r=[];return function e(t,n){return r.push(t+" ")>b.cacheLength&&delete e[r.shift()],e[t+" "]=n}}function F(e){return e[S]=!0,e}function $(e){var t=T.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function B(t){return function(e){return fe(e,"input")&&e.type===t}}function _(t){return function(e){return(fe(e,"input")||fe(e,"button"))&&e.type===t}}function z(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&R(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function X(a){return F(function(o){return o=+o,F(function(e,t){var n,r=a([],e.length,o),i=r.length;while(i--)e[n=r[i]]&&(e[n]=!(t[n]=e[n]))})})}function U(e){return e&&"undefined"!=typeof e.getElementsByTagName&&e}function V(e){var t,n=e?e.ownerDocument||e:ye;return n!=T&&9===n.nodeType&&n.documentElement&&(r=(T=n).documentElement,C=!ce.isXMLDoc(T),i=r.matches||r.webkitMatchesSelector||r.msMatchesSelector,r.msMatchesSelector&&ye!=T&&(t=T.defaultView)&&t.top!==t&&t.addEventListener("unload",M),le.getById=$(function(e){return r.appendChild(e).id=ce.expando,!T.getElementsByName||!T.getElementsByName(ce.expando).length}),le.disconnectedMatch=$(function(e){return i.call(e,"*")}),le.scope=$(function(){return T.querySelectorAll(":scope")}),le.cssHas=$(function(){try{return T.querySelector(":has(*,:jqfake)"),!1}catch(e){return!0}}),le.getById?(b.filter.ID=function(e){var t=e.replace(O,P);return function(e){return e.getAttribute("id")===t}},b.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&C){var n=t.getElementById(e);return n?[n]:[]}}):(b.filter.ID=function(e){var n=e.replace(O,P);return function(e){var t="undefined"!=typeof e.getAttributeNode&&e.getAttributeNode("id");return t&&t.value===n}},b.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&C){var n,r,i,o=t.getElementById(e);if(o){if((n=o.getAttributeNode("id"))&&n.value===e)return[o];i=t.getElementsByName(e),r=0;while(o=i[r++])if((n=o.getAttributeNode("id"))&&n.value===e)return[o]}return[]}}),b.find.TAG=function(e,t){return"undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):t.querySelectorAll(e)},b.find.CLASS=function(e,t){if("undefined"!=typeof t.getElementsByClassName&&C)return t.getElementsByClassName(e)},d=[],$(function(e){var t;r.appendChild(e).innerHTML="<a id='"+S+"' href='' disabled='disabled'></a><select id='"+S+"-\r\\' disabled='disabled'><option selected=''></option></select>",e.querySelectorAll("[selected]").length||d.push("\\["+ge+"*(?:value|"+f+")"),e.querySelectorAll("[id~="+S+"-]").length||d.push("~="),e.querySelectorAll("a#"+S+"+*").length||d.push(".#.+[+~]"),e.querySelectorAll(":checked").length||d.push(":checked"),(t=T.createElement("input")).setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),r.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&d.push(":enabled",":disabled"),(t=T.createElement("input")).setAttribute("name",""),e.appendChild(t),e.querySelectorAll("[name='']").length||d.push("\\["+ge+"*name"+ge+"*="+ge+"*(?:''|\"\")")}),le.cssHas||d.push(":has"),d=d.length&&new RegExp(d.join("|")),l=function(e,t){if(e===t)return a=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n||(1&(n=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!le.sortDetached&&t.compareDocumentPosition(e)===n?e===T||e.ownerDocument==ye&&I.contains(ye,e)?-1:t===T||t.ownerDocument==ye&&I.contains(ye,t)?1:o?se.call(o,e)-se.call(o,t):0:4&n?-1:1)}),T}for(e in I.matches=function(e,t){return I(e,null,null,t)},I.matchesSelector=function(e,t){if(V(e),C&&!h[t+" "]&&(!d||!d.test(t)))try{var n=i.call(e,t);if(n||le.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(e){h(t,!0)}return 0<I(t,T,null,[e]).length},I.contains=function(e,t){return(e.ownerDocument||e)!=T&&V(e),ce.contains(e,t)},I.attr=function(e,t){(e.ownerDocument||e)!=T&&V(e);var n=b.attrHandle[t.toLowerCase()],r=n&&ue.call(b.attrHandle,t.toLowerCase())?n(e,t,!C):void 0;return void 0!==r?r:e.getAttribute(t)},I.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},ce.uniqueSort=function(e){var t,n=[],r=0,i=0;if(a=!le.sortStable,o=!le.sortStable&&ae.call(e,0),de.call(e,l),a){while(t=e[i++])t===e[i]&&(r=n.push(i));while(r--)he.call(e,n[r],1)}return o=null,e},ce.fn.uniqueSort=function(){return this.pushStack(ce.uniqueSort(ae.apply(this)))},(b=ce.expr={cacheLength:50,createPseudo:F,match:D,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(O,P),e[3]=(e[3]||e[4]||e[5]||"").replace(O,P),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||I.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&I.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return D.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&j.test(n)&&(t=Y(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(O,P).toLowerCase();return"*"===e?function(){return!0}:function(e){return fe(e,t)}},CLASS:function(e){var t=s[e+" "];return t||(t=new RegExp("(^|"+ge+")"+e+"("+ge+"|$)"))&&s(e,function(e){return t.test("string"==typeof e.className&&e.className||"undefined"!=typeof e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(n,r,i){return function(e){var t=I.attr(e,n);return null==t?"!="===r:!r||(t+="","="===r?t===i:"!="===r?t!==i:"^="===r?i&&0===t.indexOf(i):"*="===r?i&&-1<t.indexOf(i):"$="===r?i&&t.slice(-i.length)===i:"~="===r?-1<(" "+t.replace(v," ")+" ").indexOf(i):"|="===r&&(t===i||t.slice(0,i.length+1)===i+"-"))}},CHILD:function(d,e,t,h,g){var v="nth"!==d.slice(0,3),y="last"!==d.slice(-4),m="of-type"===e;return 1===h&&0===g?function(e){return!!e.parentNode}:function(e,t,n){var r,i,o,a,s,u=v!==y?"nextSibling":"previousSibling",l=e.parentNode,c=m&&e.nodeName.toLowerCase(),f=!n&&!m,p=!1;if(l){if(v){while(u){o=e;while(o=o[u])if(m?fe(o,c):1===o.nodeType)return!1;s=u="only"===d&&!s&&"nextSibling"}return!0}if(s=[y?l.firstChild:l.lastChild],y&&f){p=(a=(r=(i=l[S]||(l[S]={}))[d]||[])[0]===E&&r[1])&&r[2],o=a&&l.childNodes[a];while(o=++a&&o&&o[u]||(p=a=0)||s.pop())if(1===o.nodeType&&++p&&o===e){i[d]=[E,a,p];break}}else if(f&&(p=a=(r=(i=e[S]||(e[S]={}))[d]||[])[0]===E&&r[1]),!1===p)while(o=++a&&o&&o[u]||(p=a=0)||s.pop())if((m?fe(o,c):1===o.nodeType)&&++p&&(f&&((i=o[S]||(o[S]={}))[d]=[E,p]),o===e))break;return(p-=g)===h||p%h==0&&0<=p/h}}},PSEUDO:function(e,o){var t,a=b.pseudos[e]||b.setFilters[e.toLowerCase()]||I.error("unsupported pseudo: "+e);return a[S]?a(o):1<a.length?(t=[e,e,"",o],b.setFilters.hasOwnProperty(e.toLowerCase())?F(function(e,t){var n,r=a(e,o),i=r.length;while(i--)e[n=se.call(e,r[i])]=!(t[n]=r[i])}):function(e){return a(e,0,t)}):a}},pseudos:{not:F(function(e){var r=[],i=[],s=ne(e.replace(ve,"$1"));return s[S]?F(function(e,t,n,r){var i,o=s(e,null,r,[]),a=e.length;while(a--)(i=o[a])&&(e[a]=!(t[a]=i))}):function(e,t,n){return r[0]=e,s(r,null,n,i),r[0]=null,!i.pop()}}),has:F(function(t){return function(e){return 0<I(t,e).length}}),contains:F(function(t){return t=t.replace(O,P),function(e){return-1<(e.textContent||ce.text(e)).indexOf(t)}}),lang:F(function(n){return A.test(n||"")||I.error("unsupported lang: "+n),n=n.replace(O,P).toLowerCase(),function(e){var t;do{if(t=C?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===n||0===t.indexOf(n+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=ie.location&&ie.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===r},focus:function(e){return e===function(){try{return T.activeElement}catch(e){}}()&&T.hasFocus()&&!!(e.type||e.href||~e.tabIndex)},enabled:z(!1),disabled:z(!0),checked:function(e){return fe(e,"input")&&!!e.checked||fe(e,"option")&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!b.pseudos.empty(e)},header:function(e){return q.test(e.nodeName)},input:function(e){return N.test(e.nodeName)},button:function(e){return fe(e,"input")&&"button"===e.type||fe(e,"button")},text:function(e){var t;return fe(e,"input")&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:X(function(){return[0]}),last:X(function(e,t){return[t-1]}),eq:X(function(e,t,n){return[n<0?n+t:n]}),even:X(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:X(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:X(function(e,t,n){var r;for(r=n<0?n+t:t<n?t:n;0<=--r;)e.push(r);return e}),gt:X(function(e,t,n){for(var r=n<0?n+t:n;++r<t;)e.push(r);return e})}}).pseudos.nth=b.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})b.pseudos[e]=B(e);for(e in{submit:!0,reset:!0})b.pseudos[e]=_(e);function G(){}function Y(e,t){var n,r,i,o,a,s,u,l=c[e+" "];if(l)return t?0:l.slice(0);a=e,s=[],u=b.preFilter;while(a){for(o in n&&!(r=y.exec(a))||(r&&(a=a.slice(r[0].length)||a),s.push(i=[])),n=!1,(r=m.exec(a))&&(n=r.shift(),i.push({value:n,type:r[0].replace(ve," ")}),a=a.slice(n.length)),b.filter)!(r=D[o].exec(a))||u[o]&&!(r=u[o](r))||(n=r.shift(),i.push({value:n,type:o,matches:r}),a=a.slice(n.length));if(!n)break}return t?a.length:a?I.error(e):c(e,s).slice(0)}function Q(e){for(var t=0,n=e.length,r="";t<n;t++)r+=e[t].value;return r}function J(a,e,t){var s=e.dir,u=e.next,l=u||s,c=t&&"parentNode"===l,f=n++;return e.first?function(e,t,n){while(e=e[s])if(1===e.nodeType||c)return a(e,t,n);return!1}:function(e,t,n){var r,i,o=[E,f];if(n){while(e=e[s])if((1===e.nodeType||c)&&a(e,t,n))return!0}else while(e=e[s])if(1===e.nodeType||c)if(i=e[S]||(e[S]={}),u&&fe(e,u))e=e[s]||e;else{if((r=i[l])&&r[0]===E&&r[1]===f)return o[2]=r[2];if((i[l]=o)[2]=a(e,t,n))return!0}return!1}}function K(i){return 1<i.length?function(e,t,n){var r=i.length;while(r--)if(!i[r](e,t,n))return!1;return!0}:i[0]}function Z(e,t,n,r,i){for(var o,a=[],s=0,u=e.length,l=null!=t;s<u;s++)(o=e[s])&&(n&&!n(o,r,i)||(a.push(o),l&&t.push(s)));return a}function ee(d,h,g,v,y,e){return v&&!v[S]&&(v=ee(v)),y&&!y[S]&&(y=ee(y,e)),F(function(e,t,n,r){var i,o,a,s,u=[],l=[],c=t.length,f=e||function(e,t,n){for(var r=0,i=t.length;r<i;r++)I(e,t[r],n);return n}(h||"*",n.nodeType?[n]:n,[]),p=!d||!e&&h?f:Z(f,u,d,n,r);if(g?g(p,s=y||(e?d:c||v)?[]:t,n,r):s=p,v){i=Z(s,l),v(i,[],n,r),o=i.length;while(o--)(a=i[o])&&(s[l[o]]=!(p[l[o]]=a))}if(e){if(y||d){if(y){i=[],o=s.length;while(o--)(a=s[o])&&i.push(p[o]=a);y(null,s=[],i,r)}o=s.length;while(o--)(a=s[o])&&-1<(i=y?se.call(e,a):u[o])&&(e[i]=!(t[i]=a))}}else s=Z(s===t?s.splice(c,s.length):s),y?y(null,t,s,r):k.apply(t,s)})}function te(e){for(var i,t,n,r=e.length,o=b.relative[e[0].type],a=o||b.relative[" "],s=o?1:0,u=J(function(e){return e===i},a,!0),l=J(function(e){return-1<se.call(i,e)},a,!0),c=[function(e,t,n){var r=!o&&(n||t!=w)||((i=t).nodeType?u(e,t,n):l(e,t,n));return i=null,r}];s<r;s++)if(t=b.relative[e[s].type])c=[J(K(c),t)];else{if((t=b.filter[e[s].type].apply(null,e[s].matches))[S]){for(n=++s;n<r;n++)if(b.relative[e[n].type])break;return ee(1<s&&K(c),1<s&&Q(e.slice(0,s-1).concat({value:" "===e[s-2].type?"*":""})).replace(ve,"$1"),t,s<n&&te(e.slice(s,n)),n<r&&te(e=e.slice(n)),n<r&&Q(e))}c.push(t)}return K(c)}function ne(e,t){var n,v,y,m,x,r,i=[],o=[],a=u[e+" "];if(!a){t||(t=Y(e)),n=t.length;while(n--)(a=te(t[n]))[S]?i.push(a):o.push(a);(a=u(e,(v=o,m=0<(y=i).length,x=0<v.length,r=function(e,t,n,r,i){var o,a,s,u=0,l="0",c=e&&[],f=[],p=w,d=e||x&&b.find.TAG("*",i),h=E+=null==p?1:Math.random()||.1,g=d.length;for(i&&(w=t==T||t||i);l!==g&&null!=(o=d[l]);l++){if(x&&o){a=0,t||o.ownerDocument==T||(V(o),n=!C);while(s=v[a++])if(s(o,t||T,n)){k.call(r,o);break}i&&(E=h)}m&&((o=!s&&o)&&u--,e&&c.push(o))}if(u+=l,m&&l!==u){a=0;while(s=y[a++])s(c,f,t,n);if(e){if(0<u)while(l--)c[l]||f[l]||(f[l]=pe.call(r));f=Z(f)}k.apply(r,f),i&&!e&&0<f.length&&1<u+y.length&&ce.uniqueSort(r)}return i&&(E=h,w=p),c},m?F(r):r))).selector=e}return a}function re(e,t,n,r){var i,o,a,s,u,l="function"==typeof e&&e,c=!r&&Y(e=l.selector||e);if(n=n||[],1===c.length){if(2<(o=c[0]=c[0].slice(0)).length&&"ID"===(a=o[0]).type&&9===t.nodeType&&C&&b.relative[o[1].type]){if(!(t=(b.find.ID(a.matches[0].replace(O,P),t)||[])[0]))return n;l&&(t=t.parentNode),e=e.slice(o.shift().value.length)}i=D.needsContext.test(e)?0:o.length;while(i--){if(a=o[i],b.relative[s=a.type])break;if((u=b.find[s])&&(r=u(a.matches[0].replace(O,P),H.test(o[0].type)&&U(t.parentNode)||t))){if(o.splice(i,1),!(e=r.length&&Q(o)))return k.apply(n,r),n;break}}}return(l||ne(e,c))(r,t,!C,n,!t||H.test(e)&&U(t.parentNode)||t),n}G.prototype=b.filters=b.pseudos,b.setFilters=new G,le.sortStable=S.split("").sort(l).join("")===S,V(),le.sortDetached=$(function(e){return 1&e.compareDocumentPosition(T.createElement("fieldset"))}),ce.find=I,ce.expr[":"]=ce.expr.pseudos,ce.unique=ce.uniqueSort,I.compile=ne,I.select=re,I.setDocument=V,I.tokenize=Y,I.escape=ce.escapeSelector,I.getText=ce.text,I.isXML=ce.isXMLDoc,I.selectors=ce.expr,I.support=ce.support,I.uniqueSort=ce.uniqueSort}();var d=function(e,t,n){var r=[],i=void 0!==n;while((e=e[t])&&9!==e.nodeType)if(1===e.nodeType){if(i&&ce(e).is(n))break;r.push(e)}return r},h=function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n},b=ce.expr.match.needsContext,w=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function T(e,n,r){return v(n)?ce.grep(e,function(e,t){return!!n.call(e,t,e)!==r}):n.nodeType?ce.grep(e,function(e){return e===n!==r}):"string"!=typeof n?ce.grep(e,function(e){return-1<se.call(n,e)!==r}):ce.filter(n,e,r)}ce.filter=function(e,t,n){var r=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===r.nodeType?ce.find.matchesSelector(r,e)?[r]:[]:ce.find.matches(e,ce.grep(t,function(e){return 1===e.nodeType}))},ce.fn.extend({find:function(e){var t,n,r=this.length,i=this;if("string"!=typeof e)return this.pushStack(ce(e).filter(function(){for(t=0;t<r;t++)if(ce.contains(i[t],this))return!0}));for(n=this.pushStack([]),t=0;t<r;t++)ce.find(e,i[t],n);return 1<r?ce.uniqueSort(n):n},filter:function(e){return this.pushStack(T(this,e||[],!1))},not:function(e){return this.pushStack(T(this,e||[],!0))},is:function(e){return!!T(this,"string"==typeof e&&b.test(e)?ce(e):e||[],!1).length}});var k,S=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(ce.fn.init=function(e,t,n){var r,i;if(!e)return this;if(n=n||k,"string"==typeof e){if(!(r="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:S.exec(e))||!r[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(r[1]){if(t=t instanceof ce?t[0]:t,ce.merge(this,ce.parseHTML(r[1],t&&t.nodeType?t.ownerDocument||t:C,!0)),w.test(r[1])&&ce.isPlainObject(t))for(r in t)v(this[r])?this[r](t[r]):this.attr(r,t[r]);return this}return(i=C.getElementById(r[2]))&&(this[0]=i,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):v(e)?void 0!==n.ready?n.ready(e):e(ce):ce.makeArray(e,this)}).prototype=ce.fn,k=ce(C);var E=/^(?:parents|prev(?:Until|All))/,j={children:!0,contents:!0,next:!0,prev:!0};function A(e,t){while((e=e[t])&&1!==e.nodeType);return e}ce.fn.extend({has:function(e){var t=ce(e,this),n=t.length;return this.filter(function(){for(var e=0;e<n;e++)if(ce.contains(this,t[e]))return!0})},closest:function(e,t){var n,r=0,i=this.length,o=[],a="string"!=typeof e&&ce(e);if(!b.test(e))for(;r<i;r++)for(n=this[r];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(a?-1<a.index(n):1===n.nodeType&&ce.find.matchesSelector(n,e))){o.push(n);break}return this.pushStack(1<o.length?ce.uniqueSort(o):o)},index:function(e){return e?"string"==typeof e?se.call(ce(e),this[0]):se.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(ce.uniqueSort(ce.merge(this.get(),ce(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),ce.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return d(e,"parentNode")},parentsUntil:function(e,t,n){return d(e,"parentNode",n)},next:function(e){return A(e,"nextSibling")},prev:function(e){return A(e,"previousSibling")},nextAll:function(e){return d(e,"nextSibling")},prevAll:function(e){return d(e,"previousSibling")},nextUntil:function(e,t,n){return d(e,"nextSibling",n)},prevUntil:function(e,t,n){return d(e,"previousSibling",n)},siblings:function(e){return h((e.parentNode||{}).firstChild,e)},children:function(e){return h(e.firstChild)},contents:function(e){return null!=e.contentDocument&&r(e.contentDocument)?e.contentDocument:(fe(e,"template")&&(e=e.content||e),ce.merge([],e.childNodes))}},function(r,i){ce.fn[r]=function(e,t){var n=ce.map(this,i,e);return"Until"!==r.slice(-5)&&(t=e),t&&"string"==typeof t&&(n=ce.filter(t,n)),1<this.length&&(j[r]||ce.uniqueSort(n),E.test(r)&&n.reverse()),this.pushStack(n)}});var D=/[^\x20\t\r\n\f]+/g;function N(e){return e}function q(e){throw e}function L(e,t,n,r){var i;try{e&&v(i=e.promise)?i.call(e).done(t).fail(n):e&&v(i=e.then)?i.call(e,t,n):t.apply(void 0,[e].slice(r))}catch(e){n.apply(void 0,[e])}}ce.Callbacks=function(r){var e,n;r="string"==typeof r?(e=r,n={},ce.each(e.match(D)||[],function(e,t){n[t]=!0}),n):ce.extend({},r);var i,t,o,a,s=[],u=[],l=-1,c=function(){for(a=a||r.once,o=i=!0;u.length;l=-1){t=u.shift();while(++l<s.length)!1===s[l].apply(t[0],t[1])&&r.stopOnFalse&&(l=s.length,t=!1)}r.memory||(t=!1),i=!1,a&&(s=t?[]:"")},f={add:function(){return s&&(t&&!i&&(l=s.length-1,u.push(t)),function n(e){ce.each(e,function(e,t){v(t)?r.unique&&f.has(t)||s.push(t):t&&t.length&&"string"!==x(t)&&n(t)})}(arguments),t&&!i&&c()),this},remove:function(){return ce.each(arguments,function(e,t){var n;while(-1<(n=ce.inArray(t,s,n)))s.splice(n,1),n<=l&&l--}),this},has:function(e){return e?-1<ce.inArray(e,s):0<s.length},empty:function(){return s&&(s=[]),this},disable:function(){return a=u=[],s=t="",this},disabled:function(){return!s},lock:function(){return a=u=[],t||i||(s=t=""),this},locked:function(){return!!a},fireWith:function(e,t){return a||(t=[e,(t=t||[]).slice?t.slice():t],u.push(t),i||c()),this},fire:function(){return f.fireWith(this,arguments),this},fired:function(){return!!o}};return f},ce.extend({Deferred:function(e){var o=[["notify","progress",ce.Callbacks("memory"),ce.Callbacks("memory"),2],["resolve","done",ce.Callbacks("once memory"),ce.Callbacks("once memory"),0,"resolved"],["reject","fail",ce.Callbacks("once memory"),ce.Callbacks("once memory"),1,"rejected"]],i="pending",a={state:function(){return i},always:function(){return s.done(arguments).fail(arguments),this},"catch":function(e){return a.then(null,e)},pipe:function(){var i=arguments;return ce.Deferred(function(r){ce.each(o,function(e,t){var n=v(i[t[4]])&&i[t[4]];s[t[1]](function(){var e=n&&n.apply(this,arguments);e&&v(e.promise)?e.promise().progress(r.notify).done(r.resolve).fail(r.reject):r[t[0]+"With"](this,n?[e]:arguments)})}),i=null}).promise()},then:function(t,n,r){var u=0;function l(i,o,a,s){return function(){var n=this,r=arguments,e=function(){var e,t;if(!(i<u)){if((e=a.apply(n,r))===o.promise())throw new TypeError("Thenable self-resolution");t=e&&("object"==typeof e||"function"==typeof e)&&e.then,v(t)?s?t.call(e,l(u,o,N,s),l(u,o,q,s)):(u++,t.call(e,l(u,o,N,s),l(u,o,q,s),l(u,o,N,o.notifyWith))):(a!==N&&(n=void 0,r=[e]),(s||o.resolveWith)(n,r))}},t=s?e:function(){try{e()}catch(e){ce.Deferred.exceptionHook&&ce.Deferred.exceptionHook(e,t.error),u<=i+1&&(a!==q&&(n=void 0,r=[e]),o.rejectWith(n,r))}};i?t():(ce.Deferred.getErrorHook?t.error=ce.Deferred.getErrorHook():ce.Deferred.getStackHook&&(t.error=ce.Deferred.getStackHook()),ie.setTimeout(t))}}return ce.Deferred(function(e){o[0][3].add(l(0,e,v(r)?r:N,e.notifyWith)),o[1][3].add(l(0,e,v(t)?t:N)),o[2][3].add(l(0,e,v(n)?n:q))}).promise()},promise:function(e){return null!=e?ce.extend(e,a):a}},s={};return ce.each(o,function(e,t){var n=t[2],r=t[5];a[t[1]]=n.add,r&&n.add(function(){i=r},o[3-e][2].disable,o[3-e][3].disable,o[0][2].lock,o[0][3].lock),n.add(t[3].fire),s[t[0]]=function(){return s[t[0]+"With"](this===s?void 0:this,arguments),this},s[t[0]+"With"]=n.fireWith}),a.promise(s),e&&e.call(s,s),s},when:function(e){var n=arguments.length,t=n,r=Array(t),i=ae.call(arguments),o=ce.Deferred(),a=function(t){return function(e){r[t]=this,i[t]=1<arguments.length?ae.call(arguments):e,--n||o.resolveWith(r,i)}};if(n<=1&&(L(e,o.done(a(t)).resolve,o.reject,!n),"pending"===o.state()||v(i[t]&&i[t].then)))return o.then();while(t--)L(i[t],a(t),o.reject);return o.promise()}});var H=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;ce.Deferred.exceptionHook=function(e,t){ie.console&&ie.console.warn&&e&&H.test(e.name)&&ie.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},ce.readyException=function(e){ie.setTimeout(function(){throw e})};var O=ce.Deferred();function P(){C.removeEventListener("DOMContentLoaded",P),ie.removeEventListener("load",P),ce.ready()}ce.fn.ready=function(e){return O.then(e)["catch"](function(e){ce.readyException(e)}),this},ce.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--ce.readyWait:ce.isReady)||(ce.isReady=!0)!==e&&0<--ce.readyWait||O.resolveWith(C,[ce])}}),ce.ready.then=O.then,"complete"===C.readyState||"loading"!==C.readyState&&!C.documentElement.doScroll?ie.setTimeout(ce.ready):(C.addEventListener("DOMContentLoaded",P),ie.addEventListener("load",P));var M=function(e,t,n,r,i,o,a){var s=0,u=e.length,l=null==n;if("object"===x(n))for(s in i=!0,n)M(e,t,s,n[s],!0,o,a);else if(void 0!==r&&(i=!0,v(r)||(a=!0),l&&(a?(t.call(e,r),t=null):(l=t,t=function(e,t,n){return l.call(ce(e),n)})),t))for(;s<u;s++)t(e[s],n,a?r:r.call(e[s],s,t(e[s],n)));return i?e:l?t.call(e):u?t(e[0],n):o},R=/^-ms-/,I=/-([a-z])/g;function W(e,t){return t.toUpperCase()}function F(e){return e.replace(R,"ms-").replace(I,W)}var $=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};function B(){this.expando=ce.expando+B.uid++}B.uid=1,B.prototype={cache:function(e){var t=e[this.expando];return t||(t={},$(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var r,i=this.cache(e);if("string"==typeof t)i[F(t)]=n;else for(r in t)i[F(r)]=t[r];return i},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][F(t)]},access:function(e,t,n){return void 0===t||t&&"string"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,r=e[this.expando];if(void 0!==r){if(void 0!==t){n=(t=Array.isArray(t)?t.map(F):(t=F(t))in r?[t]:t.match(D)||[]).length;while(n--)delete r[t[n]]}(void 0===t||ce.isEmptyObject(r))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!ce.isEmptyObject(t)}};var _=new B,z=new B,X=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,U=/[A-Z]/g;function V(e,t,n){var r,i;if(void 0===n&&1===e.nodeType)if(r="data-"+t.replace(U,"-$&").toLowerCase(),"string"==typeof(n=e.getAttribute(r))){try{n="true"===(i=n)||"false"!==i&&("null"===i?null:i===+i+""?+i:X.test(i)?JSON.parse(i):i)}catch(e){}z.set(e,t,n)}else n=void 0;return n}ce.extend({hasData:function(e){return z.hasData(e)||_.hasData(e)},data:function(e,t,n){return z.access(e,t,n)},removeData:function(e,t){z.remove(e,t)},_data:function(e,t,n){return _.access(e,t,n)},_removeData:function(e,t){_.remove(e,t)}}),ce.fn.extend({data:function(n,e){var t,r,i,o=this[0],a=o&&o.attributes;if(void 0===n){if(this.length&&(i=z.get(o),1===o.nodeType&&!_.get(o,"hasDataAttrs"))){t=a.length;while(t--)a[t]&&0===(r=a[t].name).indexOf("data-")&&(r=F(r.slice(5)),V(o,r,i[r]));_.set(o,"hasDataAttrs",!0)}return i}return"object"==typeof n?this.each(function(){z.set(this,n)}):M(this,function(e){var t;if(o&&void 0===e)return void 0!==(t=z.get(o,n))?t:void 0!==(t=V(o,n))?t:void 0;this.each(function(){z.set(this,n,e)})},null,e,1<arguments.length,null,!0)},removeData:function(e){return this.each(function(){z.remove(this,e)})}}),ce.extend({queue:function(e,t,n){var r;if(e)return t=(t||"fx")+"queue",r=_.get(e,t),n&&(!r||Array.isArray(n)?r=_.access(e,t,ce.makeArray(n)):r.push(n)),r||[]},dequeue:function(e,t){t=t||"fx";var n=ce.queue(e,t),r=n.length,i=n.shift(),o=ce._queueHooks(e,t);"inprogress"===i&&(i=n.shift(),r--),i&&("fx"===t&&n.unshift("inprogress"),delete o.stop,i.call(e,function(){ce.dequeue(e,t)},o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return _.get(e,n)||_.access(e,n,{empty:ce.Callbacks("once memory").add(function(){_.remove(e,[t+"queue",n])})})}}),ce.fn.extend({queue:function(t,n){var e=2;return"string"!=typeof t&&(n=t,t="fx",e--),arguments.length<e?ce.queue(this[0],t):void 0===n?this:this.each(function(){var e=ce.queue(this,t,n);ce._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&ce.dequeue(this,t)})},dequeue:function(e){return this.each(function(){ce.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var n,r=1,i=ce.Deferred(),o=this,a=this.length,s=function(){--r||i.resolveWith(o,[o])};"string"!=typeof e&&(t=e,e=void 0),e=e||"fx";while(a--)(n=_.get(o[a],e+"queueHooks"))&&n.empty&&(r++,n.empty.add(s));return s(),i.promise(t)}});var G=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Y=new RegExp("^(?:([+-])=|)("+G+")([a-z%]*)$","i"),Q=["Top","Right","Bottom","Left"],J=C.documentElement,K=function(e){return ce.contains(e.ownerDocument,e)},Z={composed:!0};J.getRootNode&&(K=function(e){return ce.contains(e.ownerDocument,e)||e.getRootNode(Z)===e.ownerDocument});var ee=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&K(e)&&"none"===ce.css(e,"display")};function te(e,t,n,r){var i,o,a=20,s=r?function(){return r.cur()}:function(){return ce.css(e,t,"")},u=s(),l=n&&n[3]||(ce.cssNumber[t]?"":"px"),c=e.nodeType&&(ce.cssNumber[t]||"px"!==l&&+u)&&Y.exec(ce.css(e,t));if(c&&c[3]!==l){u/=2,l=l||c[3],c=+u||1;while(a--)ce.style(e,t,c+l),(1-o)*(1-(o=s()/u||.5))<=0&&(a=0),c/=o;c*=2,ce.style(e,t,c+l),n=n||[]}return n&&(c=+c||+u||0,i=n[1]?c+(n[1]+1)*n[2]:+n[2],r&&(r.unit=l,r.start=c,r.end=i)),i}var ne={};function re(e,t){for(var n,r,i,o,a,s,u,l=[],c=0,f=e.length;c<f;c++)(r=e[c]).style&&(n=r.style.display,t?("none"===n&&(l[c]=_.get(r,"display")||null,l[c]||(r.style.display="")),""===r.style.display&&ee(r)&&(l[c]=(u=a=o=void 0,a=(i=r).ownerDocument,s=i.nodeName,(u=ne[s])||(o=a.body.appendChild(a.createElement(s)),u=ce.css(o,"display"),o.parentNode.removeChild(o),"none"===u&&(u="block"),ne[s]=u)))):"none"!==n&&(l[c]="none",_.set(r,"display",n)));for(c=0;c<f;c++)null!=l[c]&&(e[c].style.display=l[c]);return e}ce.fn.extend({show:function(){return re(this,!0)},hide:function(){return re(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){ee(this)?ce(this).show():ce(this).hide()})}});var xe,be,we=/^(?:checkbox|radio)$/i,Te=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,Ce=/^$|^module$|\/(?:java|ecma)script/i;xe=C.createDocumentFragment().appendChild(C.createElement("div")),(be=C.createElement("input")).setAttribute("type","radio"),be.setAttribute("checked","checked"),be.setAttribute("name","t"),xe.appendChild(be),le.checkClone=xe.cloneNode(!0).cloneNode(!0).lastChild.checked,xe.innerHTML="<textarea>x</textarea>",le.noCloneChecked=!!xe.cloneNode(!0).lastChild.defaultValue,xe.innerHTML="<option></option>",le.option=!!xe.lastChild;var ke={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function Se(e,t){var n;return n="undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||"*"):"undefined"!=typeof e.querySelectorAll?e.querySelectorAll(t||"*"):[],void 0===t||t&&fe(e,t)?ce.merge([e],n):n}function Ee(e,t){for(var n=0,r=e.length;n<r;n++)_.set(e[n],"globalEval",!t||_.get(t[n],"globalEval"))}ke.tbody=ke.tfoot=ke.colgroup=ke.caption=ke.thead,ke.th=ke.td,le.option||(ke.optgroup=ke.option=[1,"<select multiple='multiple'>","</select>"]);var je=/<|&#?\w+;/;function Ae(e,t,n,r,i){for(var o,a,s,u,l,c,f=t.createDocumentFragment(),p=[],d=0,h=e.length;d<h;d++)if((o=e[d])||0===o)if("object"===x(o))ce.merge(p,o.nodeType?[o]:o);else if(je.test(o)){a=a||f.appendChild(t.createElement("div")),s=(Te.exec(o)||["",""])[1].toLowerCase(),u=ke[s]||ke._default,a.innerHTML=u[1]+ce.htmlPrefilter(o)+u[2],c=u[0];while(c--)a=a.lastChild;ce.merge(p,a.childNodes),(a=f.firstChild).textContent=""}else p.push(t.createTextNode(o));f.textContent="",d=0;while(o=p[d++])if(r&&-1<ce.inArray(o,r))i&&i.push(o);else if(l=K(o),a=Se(f.appendChild(o),"script"),l&&Ee(a),n){c=0;while(o=a[c++])Ce.test(o.type||"")&&n.push(o)}return f}var De=/^([^.]*)(?:\.(.+)|)/;function Ne(){return!0}function qe(){return!1}function Le(e,t,n,r,i,o){var a,s;if("object"==typeof t){for(s in"string"!=typeof n&&(r=r||n,n=void 0),t)Le(e,s,n,r,t[s],o);return e}if(null==r&&null==i?(i=n,r=n=void 0):null==i&&("string"==typeof n?(i=r,r=void 0):(i=r,r=n,n=void 0)),!1===i)i=qe;else if(!i)return e;return 1===o&&(a=i,(i=function(e){return ce().off(e),a.apply(this,arguments)}).guid=a.guid||(a.guid=ce.guid++)),e.each(function(){ce.event.add(this,t,i,r,n)})}function He(e,r,t){t?(_.set(e,r,!1),ce.event.add(e,r,{namespace:!1,handler:function(e){var t,n=_.get(this,r);if(1&e.isTrigger&&this[r]){if(n)(ce.event.special[r]||{}).delegateType&&e.stopPropagation();else if(n=ae.call(arguments),_.set(this,r,n),this[r](),t=_.get(this,r),_.set(this,r,!1),n!==t)return e.stopImmediatePropagation(),e.preventDefault(),t}else n&&(_.set(this,r,ce.event.trigger(n[0],n.slice(1),this)),e.stopPropagation(),e.isImmediatePropagationStopped=Ne)}})):void 0===_.get(e,r)&&ce.event.add(e,r,Ne)}ce.event={global:{},add:function(t,e,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=_.get(t);if($(t)){n.handler&&(n=(o=n).handler,i=o.selector),i&&ce.find.matchesSelector(J,i),n.guid||(n.guid=ce.guid++),(u=v.events)||(u=v.events=Object.create(null)),(a=v.handle)||(a=v.handle=function(e){return"undefined"!=typeof ce&&ce.event.triggered!==e.type?ce.event.dispatch.apply(t,arguments):void 0}),l=(e=(e||"").match(D)||[""]).length;while(l--)d=g=(s=De.exec(e[l])||[])[1],h=(s[2]||"").split(".").sort(),d&&(f=ce.event.special[d]||{},d=(i?f.delegateType:f.bindType)||d,f=ce.event.special[d]||{},c=ce.extend({type:d,origType:g,data:r,handler:n,guid:n.guid,selector:i,needsContext:i&&ce.expr.match.needsContext.test(i),namespace:h.join(".")},o),(p=u[d])||((p=u[d]=[]).delegateCount=0,f.setup&&!1!==f.setup.call(t,r,h,a)||t.addEventListener&&t.addEventListener(d,a)),f.add&&(f.add.call(t,c),c.handler.guid||(c.handler.guid=n.guid)),i?p.splice(p.delegateCount++,0,c):p.push(c),ce.event.global[d]=!0)}},remove:function(e,t,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=_.hasData(e)&&_.get(e);if(v&&(u=v.events)){l=(t=(t||"").match(D)||[""]).length;while(l--)if(d=g=(s=De.exec(t[l])||[])[1],h=(s[2]||"").split(".").sort(),d){f=ce.event.special[d]||{},p=u[d=(r?f.delegateType:f.bindType)||d]||[],s=s[2]&&new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=o=p.length;while(o--)c=p[o],!i&&g!==c.origType||n&&n.guid!==c.guid||s&&!s.test(c.namespace)||r&&r!==c.selector&&("**"!==r||!c.selector)||(p.splice(o,1),c.selector&&p.delegateCount--,f.remove&&f.remove.call(e,c));a&&!p.length&&(f.teardown&&!1!==f.teardown.call(e,h,v.handle)||ce.removeEvent(e,d,v.handle),delete u[d])}else for(d in u)ce.event.remove(e,d+t[l],n,r,!0);ce.isEmptyObject(u)&&_.remove(e,"handle events")}},dispatch:function(e){var t,n,r,i,o,a,s=new Array(arguments.length),u=ce.event.fix(e),l=(_.get(this,"events")||Object.create(null))[u.type]||[],c=ce.event.special[u.type]||{};for(s[0]=u,t=1;t<arguments.length;t++)s[t]=arguments[t];if(u.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,u)){a=ce.event.handlers.call(this,u,l),t=0;while((i=a[t++])&&!u.isPropagationStopped()){u.currentTarget=i.elem,n=0;while((o=i.handlers[n++])&&!u.isImmediatePropagationStopped())u.rnamespace&&!1!==o.namespace&&!u.rnamespace.test(o.namespace)||(u.handleObj=o,u.data=o.data,void 0!==(r=((ce.event.special[o.origType]||{}).handle||o.handler).apply(i.elem,s))&&!1===(u.result=r)&&(u.preventDefault(),u.stopPropagation()))}return c.postDispatch&&c.postDispatch.call(this,u),u.result}},handlers:function(e,t){var n,r,i,o,a,s=[],u=t.delegateCount,l=e.target;if(u&&l.nodeType&&!("click"===e.type&&1<=e.button))for(;l!==this;l=l.parentNode||this)if(1===l.nodeType&&("click"!==e.type||!0!==l.disabled)){for(o=[],a={},n=0;n<u;n++)void 0===a[i=(r=t[n]).selector+" "]&&(a[i]=r.needsContext?-1<ce(i,this).index(l):ce.find(i,this,null,[l]).length),a[i]&&o.push(r);o.length&&s.push({elem:l,handlers:o})}return l=this,u<t.length&&s.push({elem:l,handlers:t.slice(u)}),s},addProp:function(t,e){Object.defineProperty(ce.Event.prototype,t,{enumerable:!0,configurable:!0,get:v(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[ce.expando]?e:new ce.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return we.test(t.type)&&t.click&&fe(t,"input")&&He(t,"click",!0),!1},trigger:function(e){var t=this||e;return we.test(t.type)&&t.click&&fe(t,"input")&&He(t,"click"),!0},_default:function(e){var t=e.target;return we.test(t.type)&&t.click&&fe(t,"input")&&_.get(t,"click")||fe(t,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},ce.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},ce.Event=function(e,t){if(!(this instanceof ce.Event))return new ce.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?Ne:qe,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&ce.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[ce.expando]=!0},ce.Event.prototype={constructor:ce.Event,isDefaultPrevented:qe,isPropagationStopped:qe,isImmediatePropagationStopped:qe,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=Ne,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=Ne,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=Ne,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},ce.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,"char":!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:!0},ce.event.addProp),ce.each({focus:"focusin",blur:"focusout"},function(r,i){function o(e){if(C.documentMode){var t=_.get(this,"handle"),n=ce.event.fix(e);n.type="focusin"===e.type?"focus":"blur",n.isSimulated=!0,t(e),n.target===n.currentTarget&&t(n)}else ce.event.simulate(i,e.target,ce.event.fix(e))}ce.event.special[r]={setup:function(){var e;if(He(this,r,!0),!C.documentMode)return!1;(e=_.get(this,i))||this.addEventListener(i,o),_.set(this,i,(e||0)+1)},trigger:function(){return He(this,r),!0},teardown:function(){var e;if(!C.documentMode)return!1;(e=_.get(this,i)-1)?_.set(this,i,e):(this.removeEventListener(i,o),_.remove(this,i))},_default:function(e){return _.get(e.target,r)},delegateType:i},ce.event.special[i]={setup:function(){var e=this.ownerDocument||this.document||this,t=C.documentMode?this:e,n=_.get(t,i);n||(C.documentMode?this.addEventListener(i,o):e.addEventListener(r,o,!0)),_.set(t,i,(n||0)+1)},teardown:function(){var e=this.ownerDocument||this.document||this,t=C.documentMode?this:e,n=_.get(t,i)-1;n?_.set(t,i,n):(C.documentMode?this.removeEventListener(i,o):e.removeEventListener(r,o,!0),_.remove(t,i))}}}),ce.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,i){ce.event.special[e]={delegateType:i,bindType:i,handle:function(e){var t,n=e.relatedTarget,r=e.handleObj;return n&&(n===this||ce.contains(this,n))||(e.type=r.origType,t=r.handler.apply(this,arguments),e.type=i),t}}}),ce.fn.extend({on:function(e,t,n,r){return Le(this,e,t,n,r)},one:function(e,t,n,r){return Le(this,e,t,n,r,1)},off:function(e,t,n){var r,i;if(e&&e.preventDefault&&e.handleObj)return r=e.handleObj,ce(e.delegateTarget).off(r.namespace?r.origType+"."+r.namespace:r.origType,r.selector,r.handler),this;if("object"==typeof e){for(i in e)this.off(i,t,e[i]);return this}return!1!==t&&"function"!=typeof t||(n=t,t=void 0),!1===n&&(n=qe),this.each(function(){ce.event.remove(this,e,n,t)})}});var Oe=/<script|<style|<link/i,Pe=/checked\s*(?:[^=]|=\s*.checked.)/i,Me=/^\s*<!\[CDATA\[|\]\]>\s*$/g;function Re(e,t){return fe(e,"table")&&fe(11!==t.nodeType?t:t.firstChild,"tr")&&ce(e).children("tbody")[0]||e}function Ie(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function We(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function Fe(e,t){var n,r,i,o,a,s;if(1===t.nodeType){if(_.hasData(e)&&(s=_.get(e).events))for(i in _.remove(t,"handle events"),s)for(n=0,r=s[i].length;n<r;n++)ce.event.add(t,i,s[i][n]);z.hasData(e)&&(o=z.access(e),a=ce.extend({},o),z.set(t,a))}}function $e(n,r,i,o){r=g(r);var e,t,a,s,u,l,c=0,f=n.length,p=f-1,d=r[0],h=v(d);if(h||1<f&&"string"==typeof d&&!le.checkClone&&Pe.test(d))return n.each(function(e){var t=n.eq(e);h&&(r[0]=d.call(this,e,t.html())),$e(t,r,i,o)});if(f&&(t=(e=Ae(r,n[0].ownerDocument,!1,n,o)).firstChild,1===e.childNodes.length&&(e=t),t||o)){for(s=(a=ce.map(Se(e,"script"),Ie)).length;c<f;c++)u=e,c!==p&&(u=ce.clone(u,!0,!0),s&&ce.merge(a,Se(u,"script"))),i.call(n[c],u,c);if(s)for(l=a[a.length-1].ownerDocument,ce.map(a,We),c=0;c<s;c++)u=a[c],Ce.test(u.type||"")&&!_.access(u,"globalEval")&&ce.contains(l,u)&&(u.src&&"module"!==(u.type||"").toLowerCase()?ce._evalUrl&&!u.noModule&&ce._evalUrl(u.src,{nonce:u.nonce||u.getAttribute("nonce")},l):m(u.textContent.replace(Me,""),u,l))}return n}function Be(e,t,n){for(var r,i=t?ce.filter(t,e):e,o=0;null!=(r=i[o]);o++)n||1!==r.nodeType||ce.cleanData(Se(r)),r.parentNode&&(n&&K(r)&&Ee(Se(r,"script")),r.parentNode.removeChild(r));return e}ce.extend({htmlPrefilter:function(e){return e},clone:function(e,t,n){var r,i,o,a,s,u,l,c=e.cloneNode(!0),f=K(e);if(!(le.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||ce.isXMLDoc(e)))for(a=Se(c),r=0,i=(o=Se(e)).length;r<i;r++)s=o[r],u=a[r],void 0,"input"===(l=u.nodeName.toLowerCase())&&we.test(s.type)?u.checked=s.checked:"input"!==l&&"textarea"!==l||(u.defaultValue=s.defaultValue);if(t)if(n)for(o=o||Se(e),a=a||Se(c),r=0,i=o.length;r<i;r++)Fe(o[r],a[r]);else Fe(e,c);return 0<(a=Se(c,"script")).length&&Ee(a,!f&&Se(e,"script")),c},cleanData:function(e){for(var t,n,r,i=ce.event.special,o=0;void 0!==(n=e[o]);o++)if($(n)){if(t=n[_.expando]){if(t.events)for(r in t.events)i[r]?ce.event.remove(n,r):ce.removeEvent(n,r,t.handle);n[_.expando]=void 0}n[z.expando]&&(n[z.expando]=void 0)}}}),ce.fn.extend({detach:function(e){return Be(this,e,!0)},remove:function(e){return Be(this,e)},text:function(e){return M(this,function(e){return void 0===e?ce.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return $e(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Re(this,e).appendChild(e)})},prepend:function(){return $e(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Re(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return $e(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return $e(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(ce.cleanData(Se(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return ce.clone(this,e,t)})},html:function(e){return M(this,function(e){var t=this[0]||{},n=0,r=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!Oe.test(e)&&!ke[(Te.exec(e)||["",""])[1].toLowerCase()]){e=ce.htmlPrefilter(e);try{for(;n<r;n++)1===(t=this[n]||{}).nodeType&&(ce.cleanData(Se(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var n=[];return $e(this,arguments,function(e){var t=this.parentNode;ce.inArray(this,n)<0&&(ce.cleanData(Se(this)),t&&t.replaceChild(e,this))},n)}}),ce.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,a){ce.fn[e]=function(e){for(var t,n=[],r=ce(e),i=r.length-1,o=0;o<=i;o++)t=o===i?this:this.clone(!0),ce(r[o])[a](t),s.apply(n,t.get());return this.pushStack(n)}});var _e=new RegExp("^("+G+")(?!px)[a-z%]+$","i"),ze=/^--/,Xe=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=ie),t.getComputedStyle(e)},Ue=function(e,t,n){var r,i,o={};for(i in t)o[i]=e.style[i],e.style[i]=t[i];for(i in r=n.call(e),t)e.style[i]=o[i];return r},Ve=new RegExp(Q.join("|"),"i");function Ge(e,t,n){var r,i,o,a,s=ze.test(t),u=e.style;return(n=n||Xe(e))&&(a=n.getPropertyValue(t)||n[t],s&&a&&(a=a.replace(ve,"$1")||void 0),""!==a||K(e)||(a=ce.style(e,t)),!le.pixelBoxStyles()&&_e.test(a)&&Ve.test(t)&&(r=u.width,i=u.minWidth,o=u.maxWidth,u.minWidth=u.maxWidth=u.width=a,a=n.width,u.width=r,u.minWidth=i,u.maxWidth=o)),void 0!==a?a+"":a}function Ye(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}!function(){function e(){if(l){u.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",l.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",J.appendChild(u).appendChild(l);var e=ie.getComputedStyle(l);n="1%"!==e.top,s=12===t(e.marginLeft),l.style.right="60%",o=36===t(e.right),r=36===t(e.width),l.style.position="absolute",i=12===t(l.offsetWidth/3),J.removeChild(u),l=null}}function t(e){return Math.round(parseFloat(e))}var n,r,i,o,a,s,u=C.createElement("div"),l=C.createElement("div");l.style&&(l.style.backgroundClip="content-box",l.cloneNode(!0).style.backgroundClip="",le.clearCloneStyle="content-box"===l.style.backgroundClip,ce.extend(le,{boxSizingReliable:function(){return e(),r},pixelBoxStyles:function(){return e(),o},pixelPosition:function(){return e(),n},reliableMarginLeft:function(){return e(),s},scrollboxSize:function(){return e(),i},reliableTrDimensions:function(){var e,t,n,r;return null==a&&(e=C.createElement("table"),t=C.createElement("tr"),n=C.createElement("div"),e.style.cssText="position:absolute;left:-11111px;border-collapse:separate",t.style.cssText="box-sizing:content-box;border:1px solid",t.style.height="1px",n.style.height="9px",n.style.display="block",J.appendChild(e).appendChild(t).appendChild(n),r=ie.getComputedStyle(t),a=parseInt(r.height,10)+parseInt(r.borderTopWidth,10)+parseInt(r.borderBottomWidth,10)===t.offsetHeight,J.removeChild(e)),a}}))}();var Qe=["Webkit","Moz","ms"],Je=C.createElement("div").style,Ke={};function Ze(e){var t=ce.cssProps[e]||Ke[e];return t||(e in Je?e:Ke[e]=function(e){var t=e[0].toUpperCase()+e.slice(1),n=Qe.length;while(n--)if((e=Qe[n]+t)in Je)return e}(e)||e)}var et=/^(none|table(?!-c[ea]).+)/,tt={position:"absolute",visibility:"hidden",display:"block"},nt={letterSpacing:"0",fontWeight:"400"};function rt(e,t,n){var r=Y.exec(t);return r?Math.max(0,r[2]-(n||0))+(r[3]||"px"):t}function it(e,t,n,r,i,o){var a="width"===t?1:0,s=0,u=0,l=0;if(n===(r?"border":"content"))return 0;for(;a<4;a+=2)"margin"===n&&(l+=ce.css(e,n+Q[a],!0,i)),r?("content"===n&&(u-=ce.css(e,"padding"+Q[a],!0,i)),"margin"!==n&&(u-=ce.css(e,"border"+Q[a]+"Width",!0,i))):(u+=ce.css(e,"padding"+Q[a],!0,i),"padding"!==n?u+=ce.css(e,"border"+Q[a]+"Width",!0,i):s+=ce.css(e,"border"+Q[a]+"Width",!0,i));return!r&&0<=o&&(u+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-o-u-s-.5))||0),u+l}function ot(e,t,n){var r=Xe(e),i=(!le.boxSizingReliable()||n)&&"border-box"===ce.css(e,"boxSizing",!1,r),o=i,a=Ge(e,t,r),s="offset"+t[0].toUpperCase()+t.slice(1);if(_e.test(a)){if(!n)return a;a="auto"}return(!le.boxSizingReliable()&&i||!le.reliableTrDimensions()&&fe(e,"tr")||"auto"===a||!parseFloat(a)&&"inline"===ce.css(e,"display",!1,r))&&e.getClientRects().length&&(i="border-box"===ce.css(e,"boxSizing",!1,r),(o=s in e)&&(a=e[s])),(a=parseFloat(a)||0)+it(e,t,n||(i?"border":"content"),o,r,a)+"px"}function at(e,t,n,r,i){return new at.prototype.init(e,t,n,r,i)}ce.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Ge(e,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,aspectRatio:!0,borderImageSlice:!0,columnCount:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,scale:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeMiterlimit:!0,strokeOpacity:!0},cssProps:{},style:function(e,t,n,r){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,o,a,s=F(t),u=ze.test(t),l=e.style;if(u||(t=Ze(s)),a=ce.cssHooks[t]||ce.cssHooks[s],void 0===n)return a&&"get"in a&&void 0!==(i=a.get(e,!1,r))?i:l[t];"string"===(o=typeof n)&&(i=Y.exec(n))&&i[1]&&(n=te(e,t,i),o="number"),null!=n&&n==n&&("number"!==o||u||(n+=i&&i[3]||(ce.cssNumber[s]?"":"px")),le.clearCloneStyle||""!==n||0!==t.indexOf("background")||(l[t]="inherit"),a&&"set"in a&&void 0===(n=a.set(e,n,r))||(u?l.setProperty(t,n):l[t]=n))}},css:function(e,t,n,r){var i,o,a,s=F(t);return ze.test(t)||(t=Ze(s)),(a=ce.cssHooks[t]||ce.cssHooks[s])&&"get"in a&&(i=a.get(e,!0,n)),void 0===i&&(i=Ge(e,t,r)),"normal"===i&&t in nt&&(i=nt[t]),""===n||n?(o=parseFloat(i),!0===n||isFinite(o)?o||0:i):i}}),ce.each(["height","width"],function(e,u){ce.cssHooks[u]={get:function(e,t,n){if(t)return!et.test(ce.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?ot(e,u,n):Ue(e,tt,function(){return ot(e,u,n)})},set:function(e,t,n){var r,i=Xe(e),o=!le.scrollboxSize()&&"absolute"===i.position,a=(o||n)&&"border-box"===ce.css(e,"boxSizing",!1,i),s=n?it(e,u,n,a,i):0;return a&&o&&(s-=Math.ceil(e["offset"+u[0].toUpperCase()+u.slice(1)]-parseFloat(i[u])-it(e,u,"border",!1,i)-.5)),s&&(r=Y.exec(t))&&"px"!==(r[3]||"px")&&(e.style[u]=t,t=ce.css(e,u)),rt(0,t,s)}}}),ce.cssHooks.marginLeft=Ye(le.reliableMarginLeft,function(e,t){if(t)return(parseFloat(Ge(e,"marginLeft"))||e.getBoundingClientRect().left-Ue(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),ce.each({margin:"",padding:"",border:"Width"},function(i,o){ce.cssHooks[i+o]={expand:function(e){for(var t=0,n={},r="string"==typeof e?e.split(" "):[e];t<4;t++)n[i+Q[t]+o]=r[t]||r[t-2]||r[0];return n}},"margin"!==i&&(ce.cssHooks[i+o].set=rt)}),ce.fn.extend({css:function(e,t){return M(this,function(e,t,n){var r,i,o={},a=0;if(Array.isArray(t)){for(r=Xe(e),i=t.length;a<i;a++)o[t[a]]=ce.css(e,t[a],!1,r);return o}return void 0!==n?ce.style(e,t,n):ce.css(e,t)},e,t,1<arguments.length)}}),((ce.Tween=at).prototype={constructor:at,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||ce.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(ce.cssNumber[n]?"":"px")},cur:function(){var e=at.propHooks[this.prop];return e&&e.get?e.get(this):at.propHooks._default.get(this)},run:function(e){var t,n=at.propHooks[this.prop];return this.options.duration?this.pos=t=ce.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):at.propHooks._default.set(this),this}}).init.prototype=at.prototype,(at.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=ce.css(e.elem,e.prop,""))&&"auto"!==t?t:0},set:function(e){ce.fx.step[e.prop]?ce.fx.step[e.prop](e):1!==e.elem.nodeType||!ce.cssHooks[e.prop]&&null==e.elem.style[Ze(e.prop)]?e.elem[e.prop]=e.now:ce.style(e.elem,e.prop,e.now+e.unit)}}}).scrollTop=at.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},ce.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},ce.fx=at.prototype.init,ce.fx.step={};var st,ut,lt,ct,ft=/^(?:toggle|show|hide)$/,pt=/queueHooks$/;function dt(){ut&&(!1===C.hidden&&ie.requestAnimationFrame?ie.requestAnimationFrame(dt):ie.setTimeout(dt,ce.fx.interval),ce.fx.tick())}function ht(){return ie.setTimeout(function(){st=void 0}),st=Date.now()}function gt(e,t){var n,r=0,i={height:e};for(t=t?1:0;r<4;r+=2-t)i["margin"+(n=Q[r])]=i["padding"+n]=e;return t&&(i.opacity=i.width=e),i}function vt(e,t,n){for(var r,i=(yt.tweeners[t]||[]).concat(yt.tweeners["*"]),o=0,a=i.length;o<a;o++)if(r=i[o].call(n,t,e))return r}function yt(o,e,t){var n,a,r=0,i=yt.prefilters.length,s=ce.Deferred().always(function(){delete u.elem}),u=function(){if(a)return!1;for(var e=st||ht(),t=Math.max(0,l.startTime+l.duration-e),n=1-(t/l.duration||0),r=0,i=l.tweens.length;r<i;r++)l.tweens[r].run(n);return s.notifyWith(o,[l,n,t]),n<1&&i?t:(i||s.notifyWith(o,[l,1,0]),s.resolveWith(o,[l]),!1)},l=s.promise({elem:o,props:ce.extend({},e),opts:ce.extend(!0,{specialEasing:{},easing:ce.easing._default},t),originalProperties:e,originalOptions:t,startTime:st||ht(),duration:t.duration,tweens:[],createTween:function(e,t){var n=ce.Tween(o,l.opts,e,t,l.opts.specialEasing[e]||l.opts.easing);return l.tweens.push(n),n},stop:function(e){var t=0,n=e?l.tweens.length:0;if(a)return this;for(a=!0;t<n;t++)l.tweens[t].run(1);return e?(s.notifyWith(o,[l,1,0]),s.resolveWith(o,[l,e])):s.rejectWith(o,[l,e]),this}}),c=l.props;for(!function(e,t){var n,r,i,o,a;for(n in e)if(i=t[r=F(n)],o=e[n],Array.isArray(o)&&(i=o[1],o=e[n]=o[0]),n!==r&&(e[r]=o,delete e[n]),(a=ce.cssHooks[r])&&"expand"in a)for(n in o=a.expand(o),delete e[r],o)n in e||(e[n]=o[n],t[n]=i);else t[r]=i}(c,l.opts.specialEasing);r<i;r++)if(n=yt.prefilters[r].call(l,o,c,l.opts))return v(n.stop)&&(ce._queueHooks(l.elem,l.opts.queue).stop=n.stop.bind(n)),n;return ce.map(c,vt,l),v(l.opts.start)&&l.opts.start.call(o,l),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always),ce.fx.timer(ce.extend(u,{elem:o,anim:l,queue:l.opts.queue})),l}ce.Animation=ce.extend(yt,{tweeners:{"*":[function(e,t){var n=this.createTween(e,t);return te(n.elem,e,Y.exec(t),n),n}]},tweener:function(e,t){v(e)?(t=e,e=["*"]):e=e.match(D);for(var n,r=0,i=e.length;r<i;r++)n=e[r],yt.tweeners[n]=yt.tweeners[n]||[],yt.tweeners[n].unshift(t)},prefilters:[function(e,t,n){var r,i,o,a,s,u,l,c,f="width"in t||"height"in t,p=this,d={},h=e.style,g=e.nodeType&&ee(e),v=_.get(e,"fxshow");for(r in n.queue||(null==(a=ce._queueHooks(e,"fx")).unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,p.always(function(){p.always(function(){a.unqueued--,ce.queue(e,"fx").length||a.empty.fire()})})),t)if(i=t[r],ft.test(i)){if(delete t[r],o=o||"toggle"===i,i===(g?"hide":"show")){if("show"!==i||!v||void 0===v[r])continue;g=!0}d[r]=v&&v[r]||ce.style(e,r)}if((u=!ce.isEmptyObject(t))||!ce.isEmptyObject(d))for(r in f&&1===e.nodeType&&(n.overflow=[h.overflow,h.overflowX,h.overflowY],null==(l=v&&v.display)&&(l=_.get(e,"display")),"none"===(c=ce.css(e,"display"))&&(l?c=l:(re([e],!0),l=e.style.display||l,c=ce.css(e,"display"),re([e]))),("inline"===c||"inline-block"===c&&null!=l)&&"none"===ce.css(e,"float")&&(u||(p.done(function(){h.display=l}),null==l&&(c=h.display,l="none"===c?"":c)),h.display="inline-block")),n.overflow&&(h.overflow="hidden",p.always(function(){h.overflow=n.overflow[0],h.overflowX=n.overflow[1],h.overflowY=n.overflow[2]})),u=!1,d)u||(v?"hidden"in v&&(g=v.hidden):v=_.access(e,"fxshow",{display:l}),o&&(v.hidden=!g),g&&re([e],!0),p.done(function(){for(r in g||re([e]),_.remove(e,"fxshow"),d)ce.style(e,r,d[r])})),u=vt(g?v[r]:0,r,p),r in v||(v[r]=u.start,g&&(u.end=u.start,u.start=0))}],prefilter:function(e,t){t?yt.prefilters.unshift(e):yt.prefilters.push(e)}}),ce.speed=function(e,t,n){var r=e&&"object"==typeof e?ce.extend({},e):{complete:n||!n&&t||v(e)&&e,duration:e,easing:n&&t||t&&!v(t)&&t};return ce.fx.off?r.duration=0:"number"!=typeof r.duration&&(r.duration in ce.fx.speeds?r.duration=ce.fx.speeds[r.duration]:r.duration=ce.fx.speeds._default),null!=r.queue&&!0!==r.queue||(r.queue="fx"),r.old=r.complete,r.complete=function(){v(r.old)&&r.old.call(this),r.queue&&ce.dequeue(this,r.queue)},r},ce.fn.extend({fadeTo:function(e,t,n,r){return this.filter(ee).css("opacity",0).show().end().animate({opacity:t},e,n,r)},animate:function(t,e,n,r){var i=ce.isEmptyObject(t),o=ce.speed(e,n,r),a=function(){var e=yt(this,ce.extend({},t),o);(i||_.get(this,"finish"))&&e.stop(!0)};return a.finish=a,i||!1===o.queue?this.each(a):this.queue(o.queue,a)},stop:function(i,e,o){var a=function(e){var t=e.stop;delete e.stop,t(o)};return"string"!=typeof i&&(o=e,e=i,i=void 0),e&&this.queue(i||"fx",[]),this.each(function(){var e=!0,t=null!=i&&i+"queueHooks",n=ce.timers,r=_.get(this);if(t)r[t]&&r[t].stop&&a(r[t]);else for(t in r)r[t]&&r[t].stop&&pt.test(t)&&a(r[t]);for(t=n.length;t--;)n[t].elem!==this||null!=i&&n[t].queue!==i||(n[t].anim.stop(o),e=!1,n.splice(t,1));!e&&o||ce.dequeue(this,i)})},finish:function(a){return!1!==a&&(a=a||"fx"),this.each(function(){var e,t=_.get(this),n=t[a+"queue"],r=t[a+"queueHooks"],i=ce.timers,o=n?n.length:0;for(t.finish=!0,ce.queue(this,a,[]),r&&r.stop&&r.stop.call(this,!0),e=i.length;e--;)i[e].elem===this&&i[e].queue===a&&(i[e].anim.stop(!0),i.splice(e,1));for(e=0;e<o;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete t.finish})}}),ce.each(["toggle","show","hide"],function(e,r){var i=ce.fn[r];ce.fn[r]=function(e,t,n){return null==e||"boolean"==typeof e?i.apply(this,arguments):this.animate(gt(r,!0),e,t,n)}}),ce.each({slideDown:gt("show"),slideUp:gt("hide"),slideToggle:gt("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,r){ce.fn[e]=function(e,t,n){return this.animate(r,e,t,n)}}),ce.timers=[],ce.fx.tick=function(){var e,t=0,n=ce.timers;for(st=Date.now();t<n.length;t++)(e=n[t])()||n[t]!==e||n.splice(t--,1);n.length||ce.fx.stop(),st=void 0},ce.fx.timer=function(e){ce.timers.push(e),ce.fx.start()},ce.fx.interval=13,ce.fx.start=function(){ut||(ut=!0,dt())},ce.fx.stop=function(){ut=null},ce.fx.speeds={slow:600,fast:200,_default:400},ce.fn.delay=function(r,e){return r=ce.fx&&ce.fx.speeds[r]||r,e=e||"fx",this.queue(e,function(e,t){var n=ie.setTimeout(e,r);t.stop=function(){ie.clearTimeout(n)}})},lt=C.createElement("input"),ct=C.createElement("select").appendChild(C.createElement("option")),lt.type="checkbox",le.checkOn=""!==lt.value,le.optSelected=ct.selected,(lt=C.createElement("input")).value="t",lt.type="radio",le.radioValue="t"===lt.value;var mt,xt=ce.expr.attrHandle;ce.fn.extend({attr:function(e,t){return M(this,ce.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){ce.removeAttr(this,e)})}}),ce.extend({attr:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return"undefined"==typeof e.getAttribute?ce.prop(e,t,n):(1===o&&ce.isXMLDoc(e)||(i=ce.attrHooks[t.toLowerCase()]||(ce.expr.match.bool.test(t)?mt:void 0)),void 0!==n?null===n?void ce.removeAttr(e,t):i&&"set"in i&&void 0!==(r=i.set(e,n,t))?r:(e.setAttribute(t,n+""),n):i&&"get"in i&&null!==(r=i.get(e,t))?r:null==(r=ce.find.attr(e,t))?void 0:r)},attrHooks:{type:{set:function(e,t){if(!le.radioValue&&"radio"===t&&fe(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,r=0,i=t&&t.match(D);if(i&&1===e.nodeType)while(n=i[r++])e.removeAttribute(n)}}),mt={set:function(e,t,n){return!1===t?ce.removeAttr(e,n):e.setAttribute(n,n),n}},ce.each(ce.expr.match.bool.source.match(/\w+/g),function(e,t){var a=xt[t]||ce.find.attr;xt[t]=function(e,t,n){var r,i,o=t.toLowerCase();return n||(i=xt[o],xt[o]=r,r=null!=a(e,t,n)?o:null,xt[o]=i),r}});var bt=/^(?:input|select|textarea|button)$/i,wt=/^(?:a|area)$/i;function Tt(e){return(e.match(D)||[]).join(" ")}function Ct(e){return e.getAttribute&&e.getAttribute("class")||""}function kt(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(D)||[]}ce.fn.extend({prop:function(e,t){return M(this,ce.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[ce.propFix[e]||e]})}}),ce.extend({prop:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&ce.isXMLDoc(e)||(t=ce.propFix[t]||t,i=ce.propHooks[t]),void 0!==n?i&&"set"in i&&void 0!==(r=i.set(e,n,t))?r:e[t]=n:i&&"get"in i&&null!==(r=i.get(e,t))?r:e[t]},propHooks:{tabIndex:{get:function(e){var t=ce.find.attr(e,"tabindex");return t?parseInt(t,10):bt.test(e.nodeName)||wt.test(e.nodeName)&&e.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),le.optSelected||(ce.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),ce.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){ce.propFix[this.toLowerCase()]=this}),ce.fn.extend({addClass:function(t){var e,n,r,i,o,a;return v(t)?this.each(function(e){ce(this).addClass(t.call(this,e,Ct(this)))}):(e=kt(t)).length?this.each(function(){if(r=Ct(this),n=1===this.nodeType&&" "+Tt(r)+" "){for(o=0;o<e.length;o++)i=e[o],n.indexOf(" "+i+" ")<0&&(n+=i+" ");a=Tt(n),r!==a&&this.setAttribute("class",a)}}):this},removeClass:function(t){var e,n,r,i,o,a;return v(t)?this.each(function(e){ce(this).removeClass(t.call(this,e,Ct(this)))}):arguments.length?(e=kt(t)).length?this.each(function(){if(r=Ct(this),n=1===this.nodeType&&" "+Tt(r)+" "){for(o=0;o<e.length;o++){i=e[o];while(-1<n.indexOf(" "+i+" "))n=n.replace(" "+i+" "," ")}a=Tt(n),r!==a&&this.setAttribute("class",a)}}):this:this.attr("class","")},toggleClass:function(t,n){var e,r,i,o,a=typeof t,s="string"===a||Array.isArray(t);return v(t)?this.each(function(e){ce(this).toggleClass(t.call(this,e,Ct(this),n),n)}):"boolean"==typeof n&&s?n?this.addClass(t):this.removeClass(t):(e=kt(t),this.each(function(){if(s)for(o=ce(this),i=0;i<e.length;i++)r=e[i],o.hasClass(r)?o.removeClass(r):o.addClass(r);else void 0!==t&&"boolean"!==a||((r=Ct(this))&&_.set(this,"__className__",r),this.setAttribute&&this.setAttribute("class",r||!1===t?"":_.get(this,"__className__")||""))}))},hasClass:function(e){var t,n,r=0;t=" "+e+" ";while(n=this[r++])if(1===n.nodeType&&-1<(" "+Tt(Ct(n))+" ").indexOf(t))return!0;return!1}});var St=/\r/g;ce.fn.extend({val:function(n){var r,e,i,t=this[0];return arguments.length?(i=v(n),this.each(function(e){var t;1===this.nodeType&&(null==(t=i?n.call(this,e,ce(this).val()):n)?t="":"number"==typeof t?t+="":Array.isArray(t)&&(t=ce.map(t,function(e){return null==e?"":e+""})),(r=ce.valHooks[this.type]||ce.valHooks[this.nodeName.toLowerCase()])&&"set"in r&&void 0!==r.set(this,t,"value")||(this.value=t))})):t?(r=ce.valHooks[t.type]||ce.valHooks[t.nodeName.toLowerCase()])&&"get"in r&&void 0!==(e=r.get(t,"value"))?e:"string"==typeof(e=t.value)?e.replace(St,""):null==e?"":e:void 0}}),ce.extend({valHooks:{option:{get:function(e){var t=ce.find.attr(e,"value");return null!=t?t:Tt(ce.text(e))}},select:{get:function(e){var t,n,r,i=e.options,o=e.selectedIndex,a="select-one"===e.type,s=a?null:[],u=a?o+1:i.length;for(r=o<0?u:a?o:0;r<u;r++)if(((n=i[r]).selected||r===o)&&!n.disabled&&(!n.parentNode.disabled||!fe(n.parentNode,"optgroup"))){if(t=ce(n).val(),a)return t;s.push(t)}return s},set:function(e,t){var n,r,i=e.options,o=ce.makeArray(t),a=i.length;while(a--)((r=i[a]).selected=-1<ce.inArray(ce.valHooks.option.get(r),o))&&(n=!0);return n||(e.selectedIndex=-1),o}}}}),ce.each(["radio","checkbox"],function(){ce.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<ce.inArray(ce(e).val(),t)}},le.checkOn||(ce.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})});var Et=ie.location,jt={guid:Date.now()},At=/\?/;ce.parseXML=function(e){var t,n;if(!e||"string"!=typeof e)return null;try{t=(new ie.DOMParser).parseFromString(e,"text/xml")}catch(e){}return n=t&&t.getElementsByTagName("parsererror")[0],t&&!n||ce.error("Invalid XML: "+(n?ce.map(n.childNodes,function(e){return e.textContent}).join("\n"):e)),t};var Dt=/^(?:focusinfocus|focusoutblur)$/,Nt=function(e){e.stopPropagation()};ce.extend(ce.event,{trigger:function(e,t,n,r){var i,o,a,s,u,l,c,f,p=[n||C],d=ue.call(e,"type")?e.type:e,h=ue.call(e,"namespace")?e.namespace.split("."):[];if(o=f=a=n=n||C,3!==n.nodeType&&8!==n.nodeType&&!Dt.test(d+ce.event.triggered)&&(-1<d.indexOf(".")&&(d=(h=d.split(".")).shift(),h.sort()),u=d.indexOf(":")<0&&"on"+d,(e=e[ce.expando]?e:new ce.Event(d,"object"==typeof e&&e)).isTrigger=r?2:3,e.namespace=h.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=n),t=null==t?[e]:ce.makeArray(t,[e]),c=ce.event.special[d]||{},r||!c.trigger||!1!==c.trigger.apply(n,t))){if(!r&&!c.noBubble&&!y(n)){for(s=c.delegateType||d,Dt.test(s+d)||(o=o.parentNode);o;o=o.parentNode)p.push(o),a=o;a===(n.ownerDocument||C)&&p.push(a.defaultView||a.parentWindow||ie)}i=0;while((o=p[i++])&&!e.isPropagationStopped())f=o,e.type=1<i?s:c.bindType||d,(l=(_.get(o,"events")||Object.create(null))[e.type]&&_.get(o,"handle"))&&l.apply(o,t),(l=u&&o[u])&&l.apply&&$(o)&&(e.result=l.apply(o,t),!1===e.result&&e.preventDefault());return e.type=d,r||e.isDefaultPrevented()||c._default&&!1!==c._default.apply(p.pop(),t)||!$(n)||u&&v(n[d])&&!y(n)&&((a=n[u])&&(n[u]=null),ce.event.triggered=d,e.isPropagationStopped()&&f.addEventListener(d,Nt),n[d](),e.isPropagationStopped()&&f.removeEventListener(d,Nt),ce.event.triggered=void 0,a&&(n[u]=a)),e.result}},simulate:function(e,t,n){var r=ce.extend(new ce.Event,n,{type:e,isSimulated:!0});ce.event.trigger(r,null,t)}}),ce.fn.extend({trigger:function(e,t){return this.each(function(){ce.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];if(n)return ce.event.trigger(e,t,n,!0)}});var qt=/\[\]$/,Lt=/\r?\n/g,Ht=/^(?:submit|button|image|reset|file)$/i,Ot=/^(?:input|select|textarea|keygen)/i;function Pt(n,e,r,i){var t;if(Array.isArray(e))ce.each(e,function(e,t){r||qt.test(n)?i(n,t):Pt(n+"["+("object"==typeof t&&null!=t?e:"")+"]",t,r,i)});else if(r||"object"!==x(e))i(n,e);else for(t in e)Pt(n+"["+t+"]",e[t],r,i)}ce.param=function(e,t){var n,r=[],i=function(e,t){var n=v(t)?t():t;r[r.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==n?"":n)};if(null==e)return"";if(Array.isArray(e)||e.jquery&&!ce.isPlainObject(e))ce.each(e,function(){i(this.name,this.value)});else for(n in e)Pt(n,e[n],t,i);return r.join("&")},ce.fn.extend({serialize:function(){return ce.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=ce.prop(this,"elements");return e?ce.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!ce(this).is(":disabled")&&Ot.test(this.nodeName)&&!Ht.test(e)&&(this.checked||!we.test(e))}).map(function(e,t){var n=ce(this).val();return null==n?null:Array.isArray(n)?ce.map(n,function(e){return{name:t.name,value:e.replace(Lt,"\r\n")}}):{name:t.name,value:n.replace(Lt,"\r\n")}}).get()}});var Mt=/%20/g,Rt=/#.*$/,It=/([?&])_=[^&]*/,Wt=/^(.*?):[ \t]*([^\r\n]*)$/gm,Ft=/^(?:GET|HEAD)$/,$t=/^\/\//,Bt={},_t={},zt="*/".concat("*"),Xt=C.createElement("a");function Ut(o){return function(e,t){"string"!=typeof e&&(t=e,e="*");var n,r=0,i=e.toLowerCase().match(D)||[];if(v(t))while(n=i[r++])"+"===n[0]?(n=n.slice(1)||"*",(o[n]=o[n]||[]).unshift(t)):(o[n]=o[n]||[]).push(t)}}function Vt(t,i,o,a){var s={},u=t===_t;function l(e){var r;return s[e]=!0,ce.each(t[e]||[],function(e,t){var n=t(i,o,a);return"string"!=typeof n||u||s[n]?u?!(r=n):void 0:(i.dataTypes.unshift(n),l(n),!1)}),r}return l(i.dataTypes[0])||!s["*"]&&l("*")}function Gt(e,t){var n,r,i=ce.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((i[n]?e:r||(r={}))[n]=t[n]);return r&&ce.extend(!0,e,r),e}Xt.href=Et.href,ce.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Et.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Et.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":zt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":ce.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Gt(Gt(e,ce.ajaxSettings),t):Gt(ce.ajaxSettings,e)},ajaxPrefilter:Ut(Bt),ajaxTransport:Ut(_t),ajax:function(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};var c,f,p,n,d,r,h,g,i,o,v=ce.ajaxSetup({},t),y=v.context||v,m=v.context&&(y.nodeType||y.jquery)?ce(y):ce.event,x=ce.Deferred(),b=ce.Callbacks("once memory"),w=v.statusCode||{},a={},s={},u="canceled",T={readyState:0,getResponseHeader:function(e){var t;if(h){if(!n){n={};while(t=Wt.exec(p))n[t[1].toLowerCase()+" "]=(n[t[1].toLowerCase()+" "]||[]).concat(t[2])}t=n[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return h?p:null},setRequestHeader:function(e,t){return null==h&&(e=s[e.toLowerCase()]=s[e.toLowerCase()]||e,a[e]=t),this},overrideMimeType:function(e){return null==h&&(v.mimeType=e),this},statusCode:function(e){var t;if(e)if(h)T.always(e[T.status]);else for(t in e)w[t]=[w[t],e[t]];return this},abort:function(e){var t=e||u;return c&&c.abort(t),l(0,t),this}};if(x.promise(T),v.url=((e||v.url||Et.href)+"").replace($t,Et.protocol+"//"),v.type=t.method||t.type||v.method||v.type,v.dataTypes=(v.dataType||"*").toLowerCase().match(D)||[""],null==v.crossDomain){r=C.createElement("a");try{r.href=v.url,r.href=r.href,v.crossDomain=Xt.protocol+"//"+Xt.host!=r.protocol+"//"+r.host}catch(e){v.crossDomain=!0}}if(v.data&&v.processData&&"string"!=typeof v.data&&(v.data=ce.param(v.data,v.traditional)),Vt(Bt,v,t,T),h)return T;for(i in(g=ce.event&&v.global)&&0==ce.active++&&ce.event.trigger("ajaxStart"),v.type=v.type.toUpperCase(),v.hasContent=!Ft.test(v.type),f=v.url.replace(Rt,""),v.hasContent?v.data&&v.processData&&0===(v.contentType||"").indexOf("application/x-www-form-urlencoded")&&(v.data=v.data.replace(Mt,"+")):(o=v.url.slice(f.length),v.data&&(v.processData||"string"==typeof v.data)&&(f+=(At.test(f)?"&":"?")+v.data,delete v.data),!1===v.cache&&(f=f.replace(It,"$1"),o=(At.test(f)?"&":"?")+"_="+jt.guid+++o),v.url=f+o),v.ifModified&&(ce.lastModified[f]&&T.setRequestHeader("If-Modified-Since",ce.lastModified[f]),ce.etag[f]&&T.setRequestHeader("If-None-Match",ce.etag[f])),(v.data&&v.hasContent&&!1!==v.contentType||t.contentType)&&T.setRequestHeader("Content-Type",v.contentType),T.setRequestHeader("Accept",v.dataTypes[0]&&v.accepts[v.dataTypes[0]]?v.accepts[v.dataTypes[0]]+("*"!==v.dataTypes[0]?", "+zt+"; q=0.01":""):v.accepts["*"]),v.headers)T.setRequestHeader(i,v.headers[i]);if(v.beforeSend&&(!1===v.beforeSend.call(y,T,v)||h))return T.abort();if(u="abort",b.add(v.complete),T.done(v.success),T.fail(v.error),c=Vt(_t,v,t,T)){if(T.readyState=1,g&&m.trigger("ajaxSend",[T,v]),h)return T;v.async&&0<v.timeout&&(d=ie.setTimeout(function(){T.abort("timeout")},v.timeout));try{h=!1,c.send(a,l)}catch(e){if(h)throw e;l(-1,e)}}else l(-1,"No Transport");function l(e,t,n,r){var i,o,a,s,u,l=t;h||(h=!0,d&&ie.clearTimeout(d),c=void 0,p=r||"",T.readyState=0<e?4:0,i=200<=e&&e<300||304===e,n&&(s=function(e,t,n){var r,i,o,a,s=e.contents,u=e.dataTypes;while("*"===u[0])u.shift(),void 0===r&&(r=e.mimeType||t.getResponseHeader("Content-Type"));if(r)for(i in s)if(s[i]&&s[i].test(r)){u.unshift(i);break}if(u[0]in n)o=u[0];else{for(i in n){if(!u[0]||e.converters[i+" "+u[0]]){o=i;break}a||(a=i)}o=o||a}if(o)return o!==u[0]&&u.unshift(o),n[o]}(v,T,n)),!i&&-1<ce.inArray("script",v.dataTypes)&&ce.inArray("json",v.dataTypes)<0&&(v.converters["text script"]=function(){}),s=function(e,t,n,r){var i,o,a,s,u,l={},c=e.dataTypes.slice();if(c[1])for(a in e.converters)l[a.toLowerCase()]=e.converters[a];o=c.shift();while(o)if(e.responseFields[o]&&(n[e.responseFields[o]]=t),!u&&r&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),u=o,o=c.shift())if("*"===o)o=u;else if("*"!==u&&u!==o){if(!(a=l[u+" "+o]||l["* "+o]))for(i in l)if((s=i.split(" "))[1]===o&&(a=l[u+" "+s[0]]||l["* "+s[0]])){!0===a?a=l[i]:!0!==l[i]&&(o=s[0],c.unshift(s[1]));break}if(!0!==a)if(a&&e["throws"])t=a(t);else try{t=a(t)}catch(e){return{state:"parsererror",error:a?e:"No conversion from "+u+" to "+o}}}return{state:"success",data:t}}(v,s,T,i),i?(v.ifModified&&((u=T.getResponseHeader("Last-Modified"))&&(ce.lastModified[f]=u),(u=T.getResponseHeader("etag"))&&(ce.etag[f]=u)),204===e||"HEAD"===v.type?l="nocontent":304===e?l="notmodified":(l=s.state,o=s.data,i=!(a=s.error))):(a=l,!e&&l||(l="error",e<0&&(e=0))),T.status=e,T.statusText=(t||l)+"",i?x.resolveWith(y,[o,l,T]):x.rejectWith(y,[T,l,a]),T.statusCode(w),w=void 0,g&&m.trigger(i?"ajaxSuccess":"ajaxError",[T,v,i?o:a]),b.fireWith(y,[T,l]),g&&(m.trigger("ajaxComplete",[T,v]),--ce.active||ce.event.trigger("ajaxStop")))}return T},getJSON:function(e,t,n){return ce.get(e,t,n,"json")},getScript:function(e,t){return ce.get(e,void 0,t,"script")}}),ce.each(["get","post"],function(e,i){ce[i]=function(e,t,n,r){return v(t)&&(r=r||n,n=t,t=void 0),ce.ajax(ce.extend({url:e,type:i,dataType:r,data:t,success:n},ce.isPlainObject(e)&&e))}}),ce.ajaxPrefilter(function(e){var t;for(t in e.headers)"content-type"===t.toLowerCase()&&(e.contentType=e.headers[t]||"")}),ce._evalUrl=function(e,t,n){return ce.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){ce.globalEval(e,t,n)}})},ce.fn.extend({wrapAll:function(e){var t;return this[0]&&(v(e)&&(e=e.call(this[0])),t=ce(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstElementChild)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(n){return v(n)?this.each(function(e){ce(this).wrapInner(n.call(this,e))}):this.each(function(){var e=ce(this),t=e.contents();t.length?t.wrapAll(n):e.append(n)})},wrap:function(t){var n=v(t);return this.each(function(e){ce(this).wrapAll(n?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not("body").each(function(){ce(this).replaceWith(this.childNodes)}),this}}),ce.expr.pseudos.hidden=function(e){return!ce.expr.pseudos.visible(e)},ce.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},ce.ajaxSettings.xhr=function(){try{return new ie.XMLHttpRequest}catch(e){}};var Yt={0:200,1223:204},Qt=ce.ajaxSettings.xhr();le.cors=!!Qt&&"withCredentials"in Qt,le.ajax=Qt=!!Qt,ce.ajaxTransport(function(i){var o,a;if(le.cors||Qt&&!i.crossDomain)return{send:function(e,t){var n,r=i.xhr();if(r.open(i.type,i.url,i.async,i.username,i.password),i.xhrFields)for(n in i.xhrFields)r[n]=i.xhrFields[n];for(n in i.mimeType&&r.overrideMimeType&&r.overrideMimeType(i.mimeType),i.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest"),e)r.setRequestHeader(n,e[n]);o=function(e){return function(){o&&(o=a=r.onload=r.onerror=r.onabort=r.ontimeout=r.onreadystatechange=null,"abort"===e?r.abort():"error"===e?"number"!=typeof r.status?t(0,"error"):t(r.status,r.statusText):t(Yt[r.status]||r.status,r.statusText,"text"!==(r.responseType||"text")||"string"!=typeof r.responseText?{binary:r.response}:{text:r.responseText},r.getAllResponseHeaders()))}},r.onload=o(),a=r.onerror=r.ontimeout=o("error"),void 0!==r.onabort?r.onabort=a:r.onreadystatechange=function(){4===r.readyState&&ie.setTimeout(function(){o&&a()})},o=o("abort");try{r.send(i.hasContent&&i.data||null)}catch(e){if(o)throw e}},abort:function(){o&&o()}}}),ce.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),ce.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return ce.globalEval(e),e}}}),ce.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),ce.ajaxTransport("script",function(n){var r,i;if(n.crossDomain||n.scriptAttrs)return{send:function(e,t){r=ce("<script>").attr(n.scriptAttrs||{}).prop({charset:n.scriptCharset,src:n.url}).on("load error",i=function(e){r.remove(),i=null,e&&t("error"===e.type?404:200,e.type)}),C.head.appendChild(r[0])},abort:function(){i&&i()}}});var Jt,Kt=[],Zt=/(=)\?(?=&|$)|\?\?/;ce.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Kt.pop()||ce.expando+"_"+jt.guid++;return this[e]=!0,e}}),ce.ajaxPrefilter("json jsonp",function(e,t,n){var r,i,o,a=!1!==e.jsonp&&(Zt.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&Zt.test(e.data)&&"data");if(a||"jsonp"===e.dataTypes[0])return r=e.jsonpCallback=v(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(Zt,"$1"+r):!1!==e.jsonp&&(e.url+=(At.test(e.url)?"&":"?")+e.jsonp+"="+r),e.converters["script json"]=function(){return o||ce.error(r+" was not called"),o[0]},e.dataTypes[0]="json",i=ie[r],ie[r]=function(){o=arguments},n.always(function(){void 0===i?ce(ie).removeProp(r):ie[r]=i,e[r]&&(e.jsonpCallback=t.jsonpCallback,Kt.push(r)),o&&v(i)&&i(o[0]),o=i=void 0}),"script"}),le.createHTMLDocument=((Jt=C.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===Jt.childNodes.length),ce.parseHTML=function(e,t,n){return"string"!=typeof e?[]:("boolean"==typeof t&&(n=t,t=!1),t||(le.createHTMLDocument?((r=(t=C.implementation.createHTMLDocument("")).createElement("base")).href=C.location.href,t.head.appendChild(r)):t=C),o=!n&&[],(i=w.exec(e))?[t.createElement(i[1])]:(i=Ae([e],t,o),o&&o.length&&ce(o).remove(),ce.merge([],i.childNodes)));var r,i,o},ce.fn.load=function(e,t,n){var r,i,o,a=this,s=e.indexOf(" ");return-1<s&&(r=Tt(e.slice(s)),e=e.slice(0,s)),v(t)?(n=t,t=void 0):t&&"object"==typeof t&&(i="POST"),0<a.length&&ce.ajax({url:e,type:i||"GET",dataType:"html",data:t}).done(function(e){o=arguments,a.html(r?ce("<div>").append(ce.parseHTML(e)).find(r):e)}).always(n&&function(e,t){a.each(function(){n.apply(this,o||[e.responseText,t,e])})}),this},ce.expr.pseudos.animated=function(t){return ce.grep(ce.timers,function(e){return t===e.elem}).length},ce.offset={setOffset:function(e,t,n){var r,i,o,a,s,u,l=ce.css(e,"position"),c=ce(e),f={};"static"===l&&(e.style.position="relative"),s=c.offset(),o=ce.css(e,"top"),u=ce.css(e,"left"),("absolute"===l||"fixed"===l)&&-1<(o+u).indexOf("auto")?(a=(r=c.position()).top,i=r.left):(a=parseFloat(o)||0,i=parseFloat(u)||0),v(t)&&(t=t.call(e,n,ce.extend({},s))),null!=t.top&&(f.top=t.top-s.top+a),null!=t.left&&(f.left=t.left-s.left+i),"using"in t?t.using.call(e,f):c.css(f)}},ce.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){ce.offset.setOffset(this,t,e)});var e,n,r=this[0];return r?r.getClientRects().length?(e=r.getBoundingClientRect(),n=r.ownerDocument.defaultView,{top:e.top+n.pageYOffset,left:e.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,n,r=this[0],i={top:0,left:0};if("fixed"===ce.css(r,"position"))t=r.getBoundingClientRect();else{t=this.offset(),n=r.ownerDocument,e=r.offsetParent||n.documentElement;while(e&&(e===n.body||e===n.documentElement)&&"static"===ce.css(e,"position"))e=e.parentNode;e&&e!==r&&1===e.nodeType&&((i=ce(e).offset()).top+=ce.css(e,"borderTopWidth",!0),i.left+=ce.css(e,"borderLeftWidth",!0))}return{top:t.top-i.top-ce.css(r,"marginTop",!0),left:t.left-i.left-ce.css(r,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var e=this.offsetParent;while(e&&"static"===ce.css(e,"position"))e=e.offsetParent;return e||J})}}),ce.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,i){var o="pageYOffset"===i;ce.fn[t]=function(e){return M(this,function(e,t,n){var r;if(y(e)?r=e:9===e.nodeType&&(r=e.defaultView),void 0===n)return r?r[i]:e[t];r?r.scrollTo(o?r.pageXOffset:n,o?n:r.pageYOffset):e[t]=n},t,e,arguments.length)}}),ce.each(["top","left"],function(e,n){ce.cssHooks[n]=Ye(le.pixelPosition,function(e,t){if(t)return t=Ge(e,n),_e.test(t)?ce(e).position()[n]+"px":t})}),ce.each({Height:"height",Width:"width"},function(a,s){ce.each({padding:"inner"+a,content:s,"":"outer"+a},function(r,o){ce.fn[o]=function(e,t){var n=arguments.length&&(r||"boolean"!=typeof e),i=r||(!0===e||!0===t?"margin":"border");return M(this,function(e,t,n){var r;return y(e)?0===o.indexOf("outer")?e["inner"+a]:e.document.documentElement["client"+a]:9===e.nodeType?(r=e.documentElement,Math.max(e.body["scroll"+a],r["scroll"+a],e.body["offset"+a],r["offset"+a],r["client"+a])):void 0===n?ce.css(e,t,i):ce.style(e,t,n,i)},s,n?e:void 0,n)}})}),ce.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){ce.fn[t]=function(e){return this.on(t,e)}}),ce.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)},hover:function(e,t){return this.on("mouseenter",e).on("mouseleave",t||e)}}),ce.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,n){ce.fn[n]=function(e,t){return 0<arguments.length?this.on(n,null,e,t):this.trigger(n)}});var en=/^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;ce.proxy=function(e,t){var n,r,i;if("string"==typeof t&&(n=e[t],t=e,e=n),v(e))return r=ae.call(arguments,2),(i=function(){return e.apply(t||this,r.concat(ae.call(arguments)))}).guid=e.guid=e.guid||ce.guid++,i},ce.holdReady=function(e){e?ce.readyWait++:ce.ready(!0)},ce.isArray=Array.isArray,ce.parseJSON=JSON.parse,ce.nodeName=fe,ce.isFunction=v,ce.isWindow=y,ce.camelCase=F,ce.type=x,ce.now=Date.now,ce.isNumeric=function(e){var t=ce.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},ce.trim=function(e){return null==e?"":(e+"").replace(en,"$1")},"function"==typeof define&&define.amd&&define("jquery",[],function(){return ce});var tn=ie.jQuery,nn=ie.$;return ce.noConflict=function(e){return ie.$===ce&&(ie.$=nn),e&&ie.jQuery===ce&&(ie.jQuery=tn),ce},"undefined"==typeof e&&(ie.jQuery=ie.$=ce),ce});
var mg$ = $.noConflict();
! function() {
	var e = '/* Syntax highlighting for JSON objects */ .json-editor-blackbord {   background: #1c2833;   color: #fff;   font-size: 13px;   font-family: Menlo,Monaco,Consolas,"Courier New",monospace; } @media screen and (min-width: 1600px) {   .json-editor-blackbord {     font-size: 14px;   } }  ul.json-dict, ol.json-array {   list-style-type: none;   margin: 0 0 0 1px;   border-left: 1px dotted #525252;   padding-left: 2em; } .json-string {   /*color: #0B7500;*/   /*color: #BCCB86;*/   color: #0ad161; } .json-literal {   /*color: #1A01CC;*/   /*font-weight: bold;*/   color: #ff8c00; } .json-url {   color: #1e90ff; } .json-property {   color: #4fdee5;   line-height: 160%;   font-weight: 500; }  /* Toggle button */ a.json-toggle {   position: relative;   color: inherit;   text-decoration: none;   cursor: pointer; } a.json-toggle:focus {   outline: none; } a.json-toggle:before {   color: #aaa;   content: "\\25BC"; /* down arrow */   position: absolute;   display: inline-block;   width: 1em;   left: -1em; } a.json-toggle.collapsed:before {   transform: rotate(-90deg); /* Use rotated down arrow, prevents right arrow appearing smaller than down arrow in some browsers */   -ms-transform: rotate(-90deg);   -webkit-transform: rotate(-90deg); }   /* Collapsable placeholder links */ a.json-placeholder {   color: #aaa;   padding: 0 1em;   text-decoration: none;   cursor: pointer; } a.json-placeholder:hover {   text-decoration: underline; }',
		o = function(e) {
			var o = document.getElementsByTagName("head")[0],
				t = document.createElement("style");
			if (o.appendChild(t), t.styleSheet) t.styleSheet.disabled || (t.styleSheet.cssText = e);
			else try {
				t.innerHTML = e
			} catch (n) {
				t.innerText = e
			}
		};
	o(e)
}(),
function(e) {
	function o(e) {
		return e instanceof Object && Object.keys(e).length > 0
	}

	function t(e) {
		var o = /^(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?/;
		return o.test(e)
	}

	function n(e, r) {
		var s = "";
		if ("string" == typeof e) e = e.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;"), s += t(e) ? '<a href="' + e + '" class="json-string json-url">"' + e + '"</a>' : '<span class="json-string">"' + e + '"</span>';
		else if ("number" == typeof e) s += '<span class="json-literal json-literal-number">' + e + "</span>";
		else if ("boolean" == typeof e) s += '<span class="json-literal json-literal-boolean">' + e + "</span>";
		else if (null === e) s += '<span class="json-literal json-literal-null">null</span>';
		else if (e instanceof Array)
			if (e.length > 0) {
				s += '[<ol class="json-array">';
				for (var l = 0; l < e.length; ++l) s += "<li>", o(e[l]) && (s += '<a href class="json-toggle"></a>'), s += n(e[l], r), l < e.length - 1 && (s += ","), s += "</li>";
				s += "</ol>]"
			} else s += "[]";
		else if ("object" == typeof e) {
			var a = Object.keys(e).length;
			if (a > 0) {
				s += '{<ul class="json-dict">';
				for (var i in e)
					if (e.hasOwnProperty(i)) {
						s += "<li>";
						var c = r.withQuotes ? '<span class="json-string json-property">"' + i + '"</span>' : '<span class="json-property">' + i + "</span>";
						s += o(e[i]) ? '<a href class="json-toggle"></a>' + c : c, s += ": " + n(e[i], r), --a > 0 && (s += ","), s += "</li>"
					}
				s += "</ul>}"
			} else s += "{}"
		}
		return s
	}
	e.fn.jsonViewer = function(t, r) {
		return r = r || {}, this.each(function() {
			var s = n(t, r);
			o(t) && (s = '<a href class="json-toggle"></a>' + s), e(this).html(s), e(this).off("click"), e(this).on("click", "a.json-toggle", function() {
				var o = e(this).toggleClass("collapsed").siblings("ul.json-dict, ol.json-array");
				if (o.toggle(), o.is(":visible")) o.siblings(".json-placeholder").remove();
				else {
					var t = o.children("li").length,
						n = t + (t > 1 ? " items" : " item");
					o.after('<a href class="json-placeholder">' + n + "</a>")
				}
				return !1
			}), e(this).on("click", "a.json-placeholder", function() {
				return e(this).siblings("a.json-toggle").click(), !1
			}), 1 == r.collapsed && e(this).find("a.json-toggle").click()
		})
	}
}(mg$),
function(e) {
	function o(e) {
		var o = {
			'"': '\\"',
			"\\": "\\\\",
			"\b": "\\b",
			"\f": "\\f",
			"\n": "\\n",
			"\r": "\\r",
			"	": "\\t"
		};
		return e.replace(/["\\\b\f\n\r\t]/g, function(e) {
			return o[e]
		})
	}

	function t(e) {
		if ("string" == typeof e) return o(e);
		if ("object" == typeof e)
			for (var n in e) e[n] = t(e[n]);
		else if (Array.isArray(e))
			for (var r = 0; r < e.length; r++) e[r] = t(e[r]);
		return e
	}

	function n(o, t, n) {
		n = n || {}, n.editable !== !1 && (n.editable = !0), this.mg$container = e(o), this.options = n, this.load(t)
	}
	n.prototype = {
		constructor: n,
		load: function(e) {
			this.mg$container.jsonViewer(t(e), {
				collapsed: this.options.defaultCollapsed,
				withQuotes: !0
			}).addClass("json-editor-blackbord").attr("contenteditable", !!this.options.editable)
		},
		get: function() {
			try {
				return this.mg$container.find(".collapsed").click(), JSON.parse(this.mg$container.text())
			} catch (e) {
				return false;
			}
		}
	}, window.JsonEditor = n
}(mg$);
/*
 AngularJS v1.5.8
 (c) 2010-2016 Google, Inc. http://angularjs.org
 License: MIT
*/
(function(C){'use strict';function N(a){return function(){var b=arguments[0],d;d="["+(a?a+":":"")+b+"] http://errors.angularjs.org/1.5.8/"+(a?a+"/":"")+b;for(b=1;b<arguments.length;b++){d=d+(1==b?"?":"&")+"p"+(b-1)+"=";var c=encodeURIComponent,e;e=arguments[b];e="function"==typeof e?e.toString().replace(/ \{[\s\S]*$/,""):"undefined"==typeof e?"undefined":"string"!=typeof e?JSON.stringify(e):e;d+=c(e)}return Error(d)}}function ta(a){if(null==a||Va(a))return!1;if(L(a)||G(a)||F&&a instanceof F)return!0;
var b="length"in Object(a)&&a.length;return T(b)&&(0<=b&&(b-1 in a||a instanceof Array)||"function"==typeof a.item)}function q(a,b,d){var c,e;if(a)if(z(a))for(c in a)"prototype"==c||"length"==c||"name"==c||a.hasOwnProperty&&!a.hasOwnProperty(c)||b.call(d,a[c],c,a);else if(L(a)||ta(a)){var f="object"!==typeof a;c=0;for(e=a.length;c<e;c++)(f||c in a)&&b.call(d,a[c],c,a)}else if(a.forEach&&a.forEach!==q)a.forEach(b,d,a);else if(sc(a))for(c in a)b.call(d,a[c],c,a);else if("function"===typeof a.hasOwnProperty)for(c in a)a.hasOwnProperty(c)&&
b.call(d,a[c],c,a);else for(c in a)ua.call(a,c)&&b.call(d,a[c],c,a);return a}function tc(a,b,d){for(var c=Object.keys(a).sort(),e=0;e<c.length;e++)b.call(d,a[c[e]],c[e]);return c}function uc(a){return function(b,d){a(d,b)}}function Yd(){return++pb}function Pb(a,b,d){for(var c=a.$$hashKey,e=0,f=b.length;e<f;++e){var g=b[e];if(D(g)||z(g))for(var h=Object.keys(g),k=0,l=h.length;k<l;k++){var m=h[k],n=g[m];d&&D(n)?da(n)?a[m]=new Date(n.valueOf()):Wa(n)?a[m]=new RegExp(n):n.nodeName?a[m]=n.cloneNode(!0):
Qb(n)?a[m]=n.clone():(D(a[m])||(a[m]=L(n)?[]:{}),Pb(a[m],[n],!0)):a[m]=n}}c?a.$$hashKey=c:delete a.$$hashKey;return a}function S(a){return Pb(a,va.call(arguments,1),!1)}function Zd(a){return Pb(a,va.call(arguments,1),!0)}function Z(a){return parseInt(a,10)}function Rb(a,b){return S(Object.create(a),b)}function A(){}function Xa(a){return a}function ha(a){return function(){return a}}function vc(a){return z(a.toString)&&a.toString!==ma}function y(a){return"undefined"===typeof a}function w(a){return"undefined"!==
typeof a}function D(a){return null!==a&&"object"===typeof a}function sc(a){return null!==a&&"object"===typeof a&&!wc(a)}function G(a){return"string"===typeof a}function T(a){return"number"===typeof a}function da(a){return"[object Date]"===ma.call(a)}function z(a){return"function"===typeof a}function Wa(a){return"[object RegExp]"===ma.call(a)}function Va(a){return a&&a.window===a}function Ya(a){return a&&a.$evalAsync&&a.$watch}function Ga(a){return"boolean"===typeof a}function $d(a){return a&&T(a.length)&&
ae.test(ma.call(a))}function Qb(a){return!(!a||!(a.nodeName||a.prop&&a.attr&&a.find))}function be(a){var b={};a=a.split(",");var d;for(d=0;d<a.length;d++)b[a[d]]=!0;return b}function wa(a){return Q(a.nodeName||a[0]&&a[0].nodeName)}function Za(a,b){var d=a.indexOf(b);0<=d&&a.splice(d,1);return d}function pa(a,b){function d(a,b){var d=b.$$hashKey,e;if(L(a)){e=0;for(var f=a.length;e<f;e++)b.push(c(a[e]))}else if(sc(a))for(e in a)b[e]=c(a[e]);else if(a&&"function"===typeof a.hasOwnProperty)for(e in a)a.hasOwnProperty(e)&&
(b[e]=c(a[e]));else for(e in a)ua.call(a,e)&&(b[e]=c(a[e]));d?b.$$hashKey=d:delete b.$$hashKey;return b}function c(a){if(!D(a))return a;var b=f.indexOf(a);if(-1!==b)return g[b];if(Va(a)||Ya(a))throw xa("cpws");var b=!1,c=e(a);void 0===c&&(c=L(a)?[]:Object.create(wc(a)),b=!0);f.push(a);g.push(c);return b?d(a,c):c}function e(a){switch(ma.call(a)){case "[object Int8Array]":case "[object Int16Array]":case "[object Int32Array]":case "[object Float32Array]":case "[object Float64Array]":case "[object Uint8Array]":case "[object Uint8ClampedArray]":case "[object Uint16Array]":case "[object Uint32Array]":return new a.constructor(c(a.buffer),
a.byteOffset,a.length);case "[object ArrayBuffer]":if(!a.slice){var b=new ArrayBuffer(a.byteLength);(new Uint8Array(b)).set(new Uint8Array(a));return b}return a.slice(0);case "[object Boolean]":case "[object Number]":case "[object String]":case "[object Date]":return new a.constructor(a.valueOf());case "[object RegExp]":return b=new RegExp(a.source,a.toString().match(/[^\/]*$/)[0]),b.lastIndex=a.lastIndex,b;case "[object Blob]":return new a.constructor([a],{type:a.type})}if(z(a.cloneNode))return a.cloneNode(!0)}
var f=[],g=[];if(b){if($d(b)||"[object ArrayBuffer]"===ma.call(b))throw xa("cpta");if(a===b)throw xa("cpi");L(b)?b.length=0:q(b,function(a,d){"$$hashKey"!==d&&delete b[d]});f.push(a);g.push(b);return d(a,b)}return c(a)}function na(a,b){if(a===b)return!0;if(null===a||null===b)return!1;if(a!==a&&b!==b)return!0;var d=typeof a,c;if(d==typeof b&&"object"==d)if(L(a)){if(!L(b))return!1;if((d=a.length)==b.length){for(c=0;c<d;c++)if(!na(a[c],b[c]))return!1;return!0}}else{if(da(a))return da(b)?na(a.getTime(),
b.getTime()):!1;if(Wa(a))return Wa(b)?a.toString()==b.toString():!1;if(Ya(a)||Ya(b)||Va(a)||Va(b)||L(b)||da(b)||Wa(b))return!1;d=U();for(c in a)if("$"!==c.charAt(0)&&!z(a[c])){if(!na(a[c],b[c]))return!1;d[c]=!0}for(c in b)if(!(c in d)&&"$"!==c.charAt(0)&&w(b[c])&&!z(b[c]))return!1;return!0}return!1}function $a(a,b,d){return a.concat(va.call(b,d))}function ab(a,b){var d=2<arguments.length?va.call(arguments,2):[];return!z(b)||b instanceof RegExp?b:d.length?function(){return arguments.length?b.apply(a,
$a(d,arguments,0)):b.apply(a,d)}:function(){return arguments.length?b.apply(a,arguments):b.call(a)}}function ce(a,b){var d=b;"string"===typeof a&&"$"===a.charAt(0)&&"$"===a.charAt(1)?d=void 0:Va(b)?d="$WINDOW":b&&C.document===b?d="$DOCUMENT":Ya(b)&&(d="$SCOPE");return d}function bb(a,b){if(!y(a))return T(b)||(b=b?2:null),JSON.stringify(a,ce,b)}function xc(a){return G(a)?JSON.parse(a):a}function yc(a,b){a=a.replace(de,"");var d=Date.parse("Jan 01, 1970 00:00:00 "+a)/6E4;return isNaN(d)?b:d}function Sb(a,
b,d){d=d?-1:1;var c=a.getTimezoneOffset();b=yc(b,c);d*=b-c;a=new Date(a.getTime());a.setMinutes(a.getMinutes()+d);return a}function ya(a){a=F(a).clone();try{a.empty()}catch(b){}var d=F("<div>").append(a).html();try{return a[0].nodeType===Ma?Q(d):d.match(/^(<[^>]+>)/)[1].replace(/^<([\w\-]+)/,function(a,b){return"<"+Q(b)})}catch(c){return Q(d)}}function zc(a){try{return decodeURIComponent(a)}catch(b){}}function Ac(a){var b={};q((a||"").split("&"),function(a){var c,e,f;a&&(e=a=a.replace(/\+/g,"%20"),
c=a.indexOf("="),-1!==c&&(e=a.substring(0,c),f=a.substring(c+1)),e=zc(e),w(e)&&(f=w(f)?zc(f):!0,ua.call(b,e)?L(b[e])?b[e].push(f):b[e]=[b[e],f]:b[e]=f))});return b}function Tb(a){var b=[];q(a,function(a,c){L(a)?q(a,function(a){b.push(ea(c,!0)+(!0===a?"":"="+ea(a,!0)))}):b.push(ea(c,!0)+(!0===a?"":"="+ea(a,!0)))});return b.length?b.join("&"):""}function qb(a){return ea(a,!0).replace(/%26/gi,"&").replace(/%3D/gi,"=").replace(/%2B/gi,"+")}function ea(a,b){return encodeURIComponent(a).replace(/%40/gi,
"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%3B/gi,";").replace(/%20/g,b?"%20":"+")}function ee(a,b){var d,c,e=Na.length;for(c=0;c<e;++c)if(d=Na[c]+b,G(d=a.getAttribute(d)))return d;return null}function fe(a,b){var d,c,e={};q(Na,function(b){b+="app";!d&&a.hasAttribute&&a.hasAttribute(b)&&(d=a,c=a.getAttribute(b))});q(Na,function(b){b+="app";var e;!d&&(e=a.querySelector("["+b.replace(":","\\:")+"]"))&&(d=e,c=e.getAttribute(b))});d&&(e.strictDi=null!==ee(d,"strict-di"),
b(d,c?[c]:[],e))}function Bc(a,b,d){D(d)||(d={});d=S({strictDi:!1},d);var c=function(){a=F(a);if(a.injector()){var c=a[0]===C.document?"document":ya(a);throw xa("btstrpd",c.replace(/</,"&lt;").replace(/>/,"&gt;"));}b=b||[];b.unshift(["$provide",function(b){b.value("$rootElement",a)}]);d.debugInfoEnabled&&b.push(["$compileProvider",function(a){a.debugInfoEnabled(!0)}]);b.unshift("ng");c=cb(b,d.strictDi);c.invoke(["$rootScope","$rootElement","$compile","$injector",function(a,b,c,d){a.$apply(function(){b.data("$injector",
d);c(b)(a)})}]);return c},e=/^NG_ENABLE_DEBUG_INFO!/,f=/^NG_DEFER_BOOTSTRAP!/;C&&e.test(C.name)&&(d.debugInfoEnabled=!0,C.name=C.name.replace(e,""));if(C&&!f.test(C.name))return c();C.name=C.name.replace(f,"");ca.resumeBootstrap=function(a){q(a,function(a){b.push(a)});return c()};z(ca.resumeDeferredBootstrap)&&ca.resumeDeferredBootstrap()}function ge(){C.name="NG_ENABLE_DEBUG_INFO!"+C.name;C.location.reload()}function he(a){a=ca.element(a).injector();if(!a)throw xa("test");return a.get("$$testability")}
function Cc(a,b){b=b||"_";return a.replace(ie,function(a,c){return(c?b:"")+a.toLowerCase()})}function je(){var a;if(!Dc){var b=rb();(qa=y(b)?C.mg$:b?C[b]:void 0)&&qa.fn.on?(F=qa,S(qa.fn,{scope:Oa.scope,isolateScope:Oa.isolateScope,controller:Oa.controller,injector:Oa.injector,inheritedData:Oa.inheritedData}),a=qa.cleanData,qa.cleanData=function(b){for(var c,e=0,f;null!=(f=b[e]);e++)(c=qa._data(f,"events"))&&c.$destroy&&qa(f).triggerHandler("$destroy");a(b)}):F=O;ca.element=F;Dc=!0}}function sb(a,
b,d){if(!a)throw xa("areq",b||"?",d||"required");return a}function Pa(a,b,d){d&&L(a)&&(a=a[a.length-1]);sb(z(a),b,"not a function, got "+(a&&"object"===typeof a?a.constructor.name||"Object":typeof a));return a}function Qa(a,b){if("hasOwnProperty"===a)throw xa("badname",b);}function Ec(a,b,d){if(!b)return a;b=b.split(".");for(var c,e=a,f=b.length,g=0;g<f;g++)c=b[g],a&&(a=(e=a)[c]);return!d&&z(a)?ab(e,a):a}function tb(a){for(var b=a[0],d=a[a.length-1],c,e=1;b!==d&&(b=b.nextSibling);e++)if(c||a[e]!==
b)c||(c=F(va.call(a,0,e))),c.push(b);return c||a}function U(){return Object.create(null)}function ke(a){function b(a,b,c){return a[b]||(a[b]=c())}var d=N("$injector"),c=N("ng");a=b(a,"angular",Object);a.$$minErr=a.$$minErr||N;return b(a,"module",function(){var a={};return function(f,g,h){if("hasOwnProperty"===f)throw c("badname","module");g&&a.hasOwnProperty(f)&&(a[f]=null);return b(a,f,function(){function a(b,d,e,f){f||(f=c);return function(){f[e||"push"]([b,d,arguments]);return R}}function b(a,
d){return function(b,e){e&&z(e)&&(e.$$moduleName=f);c.push([a,d,arguments]);return R}}if(!g)throw d("nomod",f);var c=[],e=[],p=[],u=a("$injector","invoke","push",e),R={_invokeQueue:c,_configBlocks:e,_runBlocks:p,requires:g,name:f,provider:b("$provide","provider"),factory:b("$provide","factory"),service:b("$provide","service"),value:a("$provide","value"),constant:a("$provide","constant","unshift"),decorator:b("$provide","decorator"),animation:b("$animateProvider","register"),filter:b("$filterProvider",
"register"),controller:b("$controllerProvider","register"),directive:b("$compileProvider","directive"),component:b("$compileProvider","component"),config:u,run:function(a){p.push(a);return this}};h&&u(h);return R})}})}function ia(a,b){if(L(a)){b=b||[];for(var d=0,c=a.length;d<c;d++)b[d]=a[d]}else if(D(a))for(d in b=b||{},a)if("$"!==d.charAt(0)||"$"!==d.charAt(1))b[d]=a[d];return b||a}function le(a){S(a,{bootstrap:Bc,copy:pa,extend:S,merge:Zd,equals:na,element:F,forEach:q,injector:cb,noop:A,bind:ab,
toJson:bb,fromJson:xc,identity:Xa,isUndefined:y,isDefined:w,isString:G,isFunction:z,isObject:D,isNumber:T,isElement:Qb,isArray:L,version:me,isDate:da,lowercase:Q,uppercase:ub,callbacks:{$$counter:0},getTestability:he,$$minErr:N,$$csp:Ba,reloadWithDebugInfo:ge});Ub=ke(C);Ub("ng",["ngLocale"],["$provide",function(a){a.provider({$$sanitizeUri:ne});a.provider("$compile",Fc).directive({a:oe,input:Gc,textarea:Gc,form:pe,script:qe,select:re,style:se,option:te,ngBind:ue,ngBindHtml:ve,ngBindTemplate:we,ngClass:xe,
ngClassEven:ye,ngClassOdd:ze,ngCloak:Ae,ngController:Be,ngForm:Ce,ngHide:De,ngIf:Ee,ngInclude:Fe,ngInit:Ge,ngNonBindable:He,ngPluralize:Ie,ngRepeat:Je,ngShow:Ke,ngStyle:Le,ngSwitch:Me,ngSwitchWhen:Ne,ngSwitchDefault:Oe,ngOptions:Pe,ngTransclude:Qe,ngModel:Re,ngList:Se,ngChange:Te,pattern:Hc,ngPattern:Hc,required:Ic,ngRequired:Ic,minlength:Jc,ngMinlength:Jc,maxlength:Kc,ngMaxlength:Kc,ngValue:Ue,ngModelOptions:Ve}).directive({ngInclude:We}).directive(vb).directive(Lc);a.provider({$anchorScroll:Xe,
$animate:Ye,$animateCss:Ze,$$animateJs:$e,$$animateQueue:af,$$AnimateRunner:bf,$$animateAsyncRun:cf,$browser:df,$cacheFactory:ef,$controller:ff,$document:gf,$exceptionHandler:hf,$filter:Mc,$$forceReflow:jf,$interpolate:kf,$interval:lf,$http:mf,$httpParamSerializer:nf,$httpParamSerializerJQLike:of,$httpBackend:pf,$xhrFactory:qf,$jsonpCallbacks:rf,$location:sf,$log:tf,$parse:uf,$rootScope:vf,$q:wf,$$q:xf,$sce:yf,$sceDelegate:zf,$sniffer:Af,$templateCache:Bf,$templateRequest:Cf,$$testability:Df,$timeout:Ef,
$window:Ff,$$rAF:Gf,$$jqLite:Hf,$$HashMap:If,$$cookieReader:Jf})}])}function db(a){return a.replace(Kf,function(a,d,c,e){return e?c.toUpperCase():c}).replace(Lf,"Moz$1")}function Nc(a){a=a.nodeType;return 1===a||!a||9===a}function Oc(a,b){var d,c,e=b.createDocumentFragment(),f=[];if(Vb.test(a)){d=e.appendChild(b.createElement("div"));c=(Mf.exec(a)||["",""])[1].toLowerCase();c=ja[c]||ja._default;d.innerHTML=c[1]+a.replace(Nf,"<$1></$2>")+c[2];for(c=c[0];c--;)d=d.lastChild;f=$a(f,d.childNodes);d=e.firstChild;
d.textContent=""}else f.push(b.createTextNode(a));e.textContent="";e.innerHTML="";q(f,function(a){e.appendChild(a)});return e}function Pc(a,b){var d=a.parentNode;d&&d.replaceChild(b,a);b.appendChild(a)}function O(a){if(a instanceof O)return a;var b;G(a)&&(a=W(a),b=!0);if(!(this instanceof O)){if(b&&"<"!=a.charAt(0))throw Wb("nosel");return new O(a)}if(b){b=C.document;var d;a=(d=Of.exec(a))?[b.createElement(d[1])]:(d=Oc(a,b))?d.childNodes:[]}Qc(this,a)}function Xb(a){return a.cloneNode(!0)}function wb(a,
b){b||eb(a);if(a.querySelectorAll)for(var d=a.querySelectorAll("*"),c=0,e=d.length;c<e;c++)eb(d[c])}function Rc(a,b,d,c){if(w(c))throw Wb("offargs");var e=(c=xb(a))&&c.events,f=c&&c.handle;if(f)if(b){var g=function(b){var c=e[b];w(d)&&Za(c||[],d);w(d)&&c&&0<c.length||(a.removeEventListener(b,f,!1),delete e[b])};q(b.split(" "),function(a){g(a);yb[a]&&g(yb[a])})}else for(b in e)"$destroy"!==b&&a.removeEventListener(b,f,!1),delete e[b]}function eb(a,b){var d=a.ng339,c=d&&fb[d];c&&(b?delete c.data[b]:
(c.handle&&(c.events.$destroy&&c.handle({},"$destroy"),Rc(a)),delete fb[d],a.ng339=void 0))}function xb(a,b){var d=a.ng339,d=d&&fb[d];b&&!d&&(a.ng339=d=++Pf,d=fb[d]={events:{},data:{},handle:void 0});return d}function Yb(a,b,d){if(Nc(a)){var c=w(d),e=!c&&b&&!D(b),f=!b;a=(a=xb(a,!e))&&a.data;if(c)a[b]=d;else{if(f)return a;if(e)return a&&a[b];S(a,b)}}}function zb(a,b){return a.getAttribute?-1<(" "+(a.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ").indexOf(" "+b+" "):!1}function Ab(a,b){b&&a.setAttribute&&
q(b.split(" "),function(b){a.setAttribute("class",W((" "+(a.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ").replace(" "+W(b)+" "," ")))})}function Bb(a,b){if(b&&a.setAttribute){var d=(" "+(a.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ");q(b.split(" "),function(a){a=W(a);-1===d.indexOf(" "+a+" ")&&(d+=a+" ")});a.setAttribute("class",W(d))}}function Qc(a,b){if(b)if(b.nodeType)a[a.length++]=b;else{var d=b.length;if("number"===typeof d&&b.window!==b){if(d)for(var c=0;c<d;c++)a[a.length++]=
b[c]}else a[a.length++]=b}}function Sc(a,b){return Cb(a,"$"+(b||"ngController")+"Controller")}function Cb(a,b,d){9==a.nodeType&&(a=a.documentElement);for(b=L(b)?b:[b];a;){for(var c=0,e=b.length;c<e;c++)if(w(d=F.data(a,b[c])))return d;a=a.parentNode||11===a.nodeType&&a.host}}function Tc(a){for(wb(a,!0);a.firstChild;)a.removeChild(a.firstChild)}function Db(a,b){b||wb(a);var d=a.parentNode;d&&d.removeChild(a)}function Qf(a,b){b=b||C;if("complete"===b.document.readyState)b.setTimeout(a);else F(b).on("load",
a)}function Uc(a,b){var d=Eb[b.toLowerCase()];return d&&Vc[wa(a)]&&d}function Rf(a,b){var d=function(c,d){c.isDefaultPrevented=function(){return c.defaultPrevented};var f=b[d||c.type],g=f?f.length:0;if(g){if(y(c.immediatePropagationStopped)){var h=c.stopImmediatePropagation;c.stopImmediatePropagation=function(){c.immediatePropagationStopped=!0;c.stopPropagation&&c.stopPropagation();h&&h.call(c)}}c.isImmediatePropagationStopped=function(){return!0===c.immediatePropagationStopped};var k=f.specialHandlerWrapper||
Sf;1<g&&(f=ia(f));for(var l=0;l<g;l++)c.isImmediatePropagationStopped()||k(a,c,f[l])}};d.elem=a;return d}function Sf(a,b,d){d.call(a,b)}function Tf(a,b,d){var c=b.relatedTarget;c&&(c===a||Uf.call(a,c))||d.call(a,b)}function Hf(){this.$get=function(){return S(O,{hasClass:function(a,b){a.attr&&(a=a[0]);return zb(a,b)},addClass:function(a,b){a.attr&&(a=a[0]);return Bb(a,b)},removeClass:function(a,b){a.attr&&(a=a[0]);return Ab(a,b)}})}}function Ca(a,b){var d=a&&a.$$hashKey;if(d)return"function"===typeof d&&
(d=a.$$hashKey()),d;d=typeof a;return d="function"==d||"object"==d&&null!==a?a.$$hashKey=d+":"+(b||Yd)():d+":"+a}function Ra(a,b){if(b){var d=0;this.nextUid=function(){return++d}}q(a,this.put,this)}function Wc(a){a=(Function.prototype.toString.call(a)+" ").replace(Vf,"");return a.match(Wf)||a.match(Xf)}function Yf(a){return(a=Wc(a))?"function("+(a[1]||"").replace(/[\s\r\n]+/," ")+")":"fn"}function cb(a,b){function d(a){return function(b,c){if(D(b))q(b,uc(a));else return a(b,c)}}function c(a,b){Qa(a,
"service");if(z(b)||L(b))b=p.instantiate(b);if(!b.$get)throw Ha("pget",a);return n[a+"Provider"]=b}function e(a,b){return function(){var c=B.invoke(b,this);if(y(c))throw Ha("undef",a);return c}}function f(a,b,d){return c(a,{$get:!1!==d?e(a,b):b})}function g(a){sb(y(a)||L(a),"modulesToLoad","not an array");var b=[],c;q(a,function(a){function d(a){var b,c;b=0;for(c=a.length;b<c;b++){var e=a[b],f=p.get(e[0]);f[e[1]].apply(f,e[2])}}if(!m.get(a)){m.put(a,!0);try{G(a)?(c=Ub(a),b=b.concat(g(c.requires)).concat(c._runBlocks),
d(c._invokeQueue),d(c._configBlocks)):z(a)?b.push(p.invoke(a)):L(a)?b.push(p.invoke(a)):Pa(a,"module")}catch(e){throw L(a)&&(a=a[a.length-1]),e.message&&e.stack&&-1==e.stack.indexOf(e.message)&&(e=e.message+"\n"+e.stack),Ha("modulerr",a,e.stack||e.message||e);}}});return b}function h(a,c){function d(b,e){if(a.hasOwnProperty(b)){if(a[b]===k)throw Ha("cdep",b+" <- "+l.join(" <- "));return a[b]}try{return l.unshift(b),a[b]=k,a[b]=c(b,e)}catch(f){throw a[b]===k&&delete a[b],f;}finally{l.shift()}}function e(a,
c,f){var g=[];a=cb.$$annotate(a,b,f);for(var h=0,k=a.length;h<k;h++){var l=a[h];if("string"!==typeof l)throw Ha("itkn",l);g.push(c&&c.hasOwnProperty(l)?c[l]:d(l,f))}return g}return{invoke:function(a,b,c,d){"string"===typeof c&&(d=c,c=null);c=e(a,c,d);L(a)&&(a=a[a.length-1]);d=11>=Ea?!1:"function"===typeof a&&/^(?:class\b|constructor\()/.test(Function.prototype.toString.call(a)+" ");return d?(c.unshift(null),new (Function.prototype.bind.apply(a,c))):a.apply(b,c)},instantiate:function(a,b,c){var d=
L(a)?a[a.length-1]:a;a=e(a,b,c);a.unshift(null);return new (Function.prototype.bind.apply(d,a))},get:d,annotate:cb.$$annotate,has:function(b){return n.hasOwnProperty(b+"Provider")||a.hasOwnProperty(b)}}}b=!0===b;var k={},l=[],m=new Ra([],!0),n={$provide:{provider:d(c),factory:d(f),service:d(function(a,b){return f(a,["$injector",function(a){return a.instantiate(b)}])}),value:d(function(a,b){return f(a,ha(b),!1)}),constant:d(function(a,b){Qa(a,"constant");n[a]=b;u[a]=b}),decorator:function(a,b){var c=
p.get(a+"Provider"),d=c.$get;c.$get=function(){var a=B.invoke(d,c);return B.invoke(b,null,{$delegate:a})}}}},p=n.$injector=h(n,function(a,b){ca.isString(b)&&l.push(b);throw Ha("unpr",l.join(" <- "));}),u={},R=h(u,function(a,b){var c=p.get(a+"Provider",b);return B.invoke(c.$get,c,void 0,a)}),B=R;n.$injectorProvider={$get:ha(R)};var r=g(a),B=R.get("$injector");B.strictDi=b;q(r,function(a){a&&B.invoke(a)});return B}function Xe(){var a=!0;this.disableAutoScrolling=function(){a=!1};this.$get=["$window",
"$location","$rootScope",function(b,d,c){function e(a){var b=null;Array.prototype.some.call(a,function(a){if("a"===wa(a))return b=a,!0});return b}function f(a){if(a){a.scrollIntoView();var c;c=g.yOffset;z(c)?c=c():Qb(c)?(c=c[0],c="fixed"!==b.getComputedStyle(c).position?0:c.getBoundingClientRect().bottom):T(c)||(c=0);c&&(a=a.getBoundingClientRect().top,b.scrollBy(0,a-c))}else b.scrollTo(0,0)}function g(a){a=G(a)?a:d.hash();var b;a?(b=h.getElementById(a))?f(b):(b=e(h.getElementsByName(a)))?f(b):"top"===
a&&f(null):f(null)}var h=b.document;a&&c.$watch(function(){return d.hash()},function(a,b){a===b&&""===a||Qf(function(){c.$evalAsync(g)})});return g}]}function gb(a,b){if(!a&&!b)return"";if(!a)return b;if(!b)return a;L(a)&&(a=a.join(" "));L(b)&&(b=b.join(" "));return a+" "+b}function Zf(a){G(a)&&(a=a.split(" "));var b=U();q(a,function(a){a.length&&(b[a]=!0)});return b}function Ia(a){return D(a)?a:{}}function $f(a,b,d,c){function e(a){try{a.apply(null,va.call(arguments,1))}finally{if(R--,0===R)for(;B.length;)try{B.pop()()}catch(b){d.error(b)}}}
function f(){t=null;g();h()}function g(){r=K();r=y(r)?null:r;na(r,E)&&(r=E);E=r}function h(){if(v!==k.url()||J!==r)v=k.url(),J=r,q(M,function(a){a(k.url(),r)})}var k=this,l=a.location,m=a.history,n=a.setTimeout,p=a.clearTimeout,u={};k.isMock=!1;var R=0,B=[];k.$$completeOutstandingRequest=e;k.$$incOutstandingRequestCount=function(){R++};k.notifyWhenNoOutstandingRequests=function(a){0===R?a():B.push(a)};var r,J,v=l.href,fa=b.find("base"),t=null,K=c.history?function(){try{return m.state}catch(a){}}:
A;g();J=r;k.url=function(b,d,e){y(e)&&(e=null);l!==a.location&&(l=a.location);m!==a.history&&(m=a.history);if(b){var f=J===e;if(v===b&&(!c.history||f))return k;var h=v&&Ja(v)===Ja(b);v=b;J=e;!c.history||h&&f?(h||(t=b),d?l.replace(b):h?(d=l,e=b.indexOf("#"),e=-1===e?"":b.substr(e),d.hash=e):l.href=b,l.href!==b&&(t=b)):(m[d?"replaceState":"pushState"](e,"",b),g(),J=r);t&&(t=b);return k}return t||l.href.replace(/%27/g,"'")};k.state=function(){return r};var M=[],H=!1,E=null;k.onUrlChange=function(b){if(!H){if(c.history)F(a).on("popstate",
f);F(a).on("hashchange",f);H=!0}M.push(b);return b};k.$$applicationDestroyed=function(){F(a).off("hashchange popstate",f)};k.$$checkUrlChange=h;k.baseHref=function(){var a=fa.attr("href");return a?a.replace(/^(https?\:)?\/\/[^\/]*/,""):""};k.defer=function(a,b){var c;R++;c=n(function(){delete u[c];e(a)},b||0);u[c]=!0;return c};k.defer.cancel=function(a){return u[a]?(delete u[a],p(a),e(A),!0):!1}}function df(){this.$get=["$window","$log","$sniffer","$document",function(a,b,d,c){return new $f(a,c,b,
d)}]}function ef(){this.$get=function(){function a(a,c){function e(a){a!=n&&(p?p==a&&(p=a.n):p=a,f(a.n,a.p),f(a,n),n=a,n.n=null)}function f(a,b){a!=b&&(a&&(a.p=b),b&&(b.n=a))}if(a in b)throw N("$cacheFactory")("iid",a);var g=0,h=S({},c,{id:a}),k=U(),l=c&&c.capacity||Number.MAX_VALUE,m=U(),n=null,p=null;return b[a]={put:function(a,b){if(!y(b)){if(l<Number.MAX_VALUE){var c=m[a]||(m[a]={key:a});e(c)}a in k||g++;k[a]=b;g>l&&this.remove(p.key);return b}},get:function(a){if(l<Number.MAX_VALUE){var b=m[a];
if(!b)return;e(b)}return k[a]},remove:function(a){if(l<Number.MAX_VALUE){var b=m[a];if(!b)return;b==n&&(n=b.p);b==p&&(p=b.n);f(b.n,b.p);delete m[a]}a in k&&(delete k[a],g--)},removeAll:function(){k=U();g=0;m=U();n=p=null},destroy:function(){m=h=k=null;delete b[a]},info:function(){return S({},h,{size:g})}}}var b={};a.info=function(){var a={};q(b,function(b,e){a[e]=b.info()});return a};a.get=function(a){return b[a]};return a}}function Bf(){this.$get=["$cacheFactory",function(a){return a("templates")}]}
function Fc(a,b){function d(a,b,c){var d=/^\s*([@&<]|=(\*?))(\??)\s*(\w*)\s*$/,e=U();q(a,function(a,f){if(a in n)e[f]=n[a];else{var g=a.match(d);if(!g)throw ga("iscp",b,f,a,c?"controller bindings definition":"isolate scope definition");e[f]={mode:g[1][0],collection:"*"===g[2],optional:"?"===g[3],attrName:g[4]||f};g[4]&&(n[a]=e[f])}});return e}function c(a){var b=a.charAt(0);if(!b||b!==Q(b))throw ga("baddir",a);if(a!==a.trim())throw ga("baddir",a);}function e(a){var b=a.require||a.controller&&a.name;
!L(b)&&D(b)&&q(b,function(a,c){var d=a.match(l);a.substring(d[0].length)||(b[c]=d[0]+c)});return b}var f={},g=/^\s*directive\:\s*([\w\-]+)\s+(.*)$/,h=/(([\w\-]+)(?:\:([^;]+))?;?)/,k=be("ngSrc,ngSrcset,src,srcset"),l=/^(?:(\^\^?)?(\?)?(\^\^?)?)?/,m=/^(on[a-z]+|formaction)$/,n=U();this.directive=function B(b,d){Qa(b,"directive");G(b)?(c(b),sb(d,"directiveFactory"),f.hasOwnProperty(b)||(f[b]=[],a.factory(b+"Directive",["$injector","$exceptionHandler",function(a,c){var d=[];q(f[b],function(f,g){try{var h=
a.invoke(f);z(h)?h={compile:ha(h)}:!h.compile&&h.link&&(h.compile=ha(h.link));h.priority=h.priority||0;h.index=g;h.name=h.name||b;h.require=e(h);h.restrict=h.restrict||"EA";h.$$moduleName=f.$$moduleName;d.push(h)}catch(k){c(k)}});return d}])),f[b].push(d)):q(b,uc(B));return this};this.component=function(a,b){function c(a){function e(b){return z(b)||L(b)?function(c,d){return a.invoke(b,this,{$element:c,$attrs:d})}:b}var f=b.template||b.templateUrl?b.template:"",g={controller:d,controllerAs:Xc(b.controller)||
b.controllerAs||"$ctrl",template:e(f),templateUrl:e(b.templateUrl),transclude:b.transclude,scope:{},bindToController:b.bindings||{},restrict:"E",require:b.require};q(b,function(a,b){"$"===b.charAt(0)&&(g[b]=a)});return g}var d=b.controller||function(){};q(b,function(a,b){"$"===b.charAt(0)&&(c[b]=a,z(d)&&(d[b]=a))});c.$inject=["$injector"];return this.directive(a,c)};this.aHrefSanitizationWhitelist=function(a){return w(a)?(b.aHrefSanitizationWhitelist(a),this):b.aHrefSanitizationWhitelist()};this.imgSrcSanitizationWhitelist=
function(a){return w(a)?(b.imgSrcSanitizationWhitelist(a),this):b.imgSrcSanitizationWhitelist()};var p=!0;this.debugInfoEnabled=function(a){return w(a)?(p=a,this):p};var u=10;this.onChangesTtl=function(a){return arguments.length?(u=a,this):u};this.$get=["$injector","$interpolate","$exceptionHandler","$templateRequest","$parse","$controller","$rootScope","$sce","$animate","$$sanitizeUri",function(a,b,c,e,n,t,K,M,H,E){function I(){try{if(!--qa)throw Y=void 0,ga("infchng",u);K.$apply(function(){for(var a=
[],b=0,c=Y.length;b<c;++b)try{Y[b]()}catch(d){a.push(d)}Y=void 0;if(a.length)throw a;})}finally{qa++}}function Da(a,b){if(b){var c=Object.keys(b),d,e,f;d=0;for(e=c.length;d<e;d++)f=c[d],this[f]=b[f]}else this.$attr={};this.$$element=a}function P(a,b,c){pa.innerHTML="<span "+b+">";b=pa.firstChild.attributes;var d=b[0];b.removeNamedItem(d.name);d.value=c;a.attributes.setNamedItem(d)}function x(a,b){try{a.addClass(b)}catch(c){}}function aa(a,b,c,d,e){a instanceof F||(a=F(a));for(var f=/\S+/,g=0,h=a.length;g<
h;g++){var k=a[g];k.nodeType===Ma&&k.nodeValue.match(f)&&Pc(k,a[g]=C.document.createElement("span"))}var l=s(a,b,a,c,d,e);aa.$$addScopeClass(a);var m=null;return function(b,c,d){sb(b,"scope");e&&e.needsNewScope&&(b=b.$parent.$new());d=d||{};var f=d.parentBoundTranscludeFn,g=d.transcludeControllers;d=d.futureParentElement;f&&f.$$boundTransclude&&(f=f.$$boundTransclude);m||(m=(d=d&&d[0])?"foreignobject"!==wa(d)&&ma.call(d).match(/SVG/)?"svg":"html":"html");d="html"!==m?F(da(m,F("<div>").append(a).html())):
c?Oa.clone.call(a):a;if(g)for(var h in g)d.data("$"+h+"Controller",g[h].instance);aa.$$addScopeInfo(d,b);c&&c(d,b);l&&l(b,d,d,f);return d}}function s(a,b,c,d,e,f){function g(a,c,d,e){var f,k,l,m,p,r,v;if(n)for(v=Array(c.length),m=0;m<h.length;m+=3)f=h[m],v[f]=c[f];else v=c;m=0;for(p=h.length;m<p;)k=v[h[m++]],c=h[m++],f=h[m++],c?(c.scope?(l=a.$new(),aa.$$addScopeInfo(F(k),l)):l=a,r=c.transcludeOnThisElement?za(a,c.transclude,e):!c.templateOnThisElement&&e?e:!e&&b?za(a,b):null,c(f,l,k,d,r)):f&&f(a,
k.childNodes,void 0,e)}for(var h=[],k,l,m,p,n,r=0;r<a.length;r++){k=new Da;l=$b(a[r],[],k,0===r?d:void 0,e);(f=l.length?oa(l,a[r],k,b,c,null,[],[],f):null)&&f.scope&&aa.$$addScopeClass(k.$$element);k=f&&f.terminal||!(m=a[r].childNodes)||!m.length?null:s(m,f?(f.transcludeOnThisElement||!f.templateOnThisElement)&&f.transclude:b);if(f||k)h.push(r,f,k),p=!0,n=n||f;f=null}return p?g:null}function za(a,b,c){function d(e,f,g,h,k){e||(e=a.$new(!1,k),e.$$transcluded=!0);return b(e,f,{parentBoundTranscludeFn:c,
transcludeControllers:g,futureParentElement:h})}var e=d.$$slots=U(),f;for(f in b.$$slots)e[f]=b.$$slots[f]?za(a,b.$$slots[f],c):null;return d}function $b(a,b,c,d,e){var f=c.$attr;switch(a.nodeType){case 1:O(b,Aa(wa(a)),"E",d,e);for(var g,k,l,m,p=a.attributes,n=0,r=p&&p.length;n<r;n++){var v=!1,u=!1;g=p[n];k=g.name;l=W(g.value);g=Aa(k);if(m=Ba.test(g))k=k.replace(Yc,"").substr(8).replace(/_(.)/g,function(a,b){return b.toUpperCase()});(g=g.match(Ca))&&V(g[1])&&(v=k,u=k.substr(0,k.length-5)+"end",k=
k.substr(0,k.length-6));g=Aa(k.toLowerCase());f[g]=k;if(m||!c.hasOwnProperty(g))c[g]=l,Uc(a,g)&&(c[g]=!0);ia(a,b,l,g,m);O(b,g,"A",d,e,v,u)}f=a.className;D(f)&&(f=f.animVal);if(G(f)&&""!==f)for(;a=h.exec(f);)g=Aa(a[2]),O(b,g,"C",d,e)&&(c[g]=W(a[3])),f=f.substr(a.index+a[0].length);break;case Ma:if(11===Ea)for(;a.parentNode&&a.nextSibling&&a.nextSibling.nodeType===Ma;)a.nodeValue+=a.nextSibling.nodeValue,a.parentNode.removeChild(a.nextSibling);ca(b,a.nodeValue);break;case 8:hb(a,b,c,d,e)}b.sort(Z);
return b}function hb(a,b,c,d,e){try{var f=g.exec(a.nodeValue);if(f){var h=Aa(f[1]);O(b,h,"M",d,e)&&(c[h]=W(f[2]))}}catch(k){}}function N(a,b,c){var d=[],e=0;if(b&&a.hasAttribute&&a.hasAttribute(b)){do{if(!a)throw ga("uterdir",b,c);1==a.nodeType&&(a.hasAttribute(b)&&e++,a.hasAttribute(c)&&e--);d.push(a);a=a.nextSibling}while(0<e)}else d.push(a);return F(d)}function Zc(a,b,c){return function(d,e,f,g,h){e=N(e[0],b,c);return a(d,e,f,g,h)}}function ac(a,b,c,d,e,f){var g;return a?aa(b,c,d,e,f):function(){g||
(g=aa(b,c,d,e,f),b=c=f=null);return g.apply(this,arguments)}}function oa(a,b,d,e,f,g,h,k,l){function m(a,b,c,d){if(a){c&&(a=Zc(a,c,d));a.require=x.require;a.directiveName=I;if(u===x||x.$$isolateScope)a=ja(a,{isolateScope:!0});h.push(a)}if(b){c&&(b=Zc(b,c,d));b.require=x.require;b.directiveName=I;if(u===x||x.$$isolateScope)b=ja(b,{isolateScope:!0});k.push(b)}}function p(a,e,f,g,l){function m(a,b,c,d){var e;Ya(a)||(d=c,c=b,b=a,a=void 0);fa&&(e=t);c||(c=fa?I.parent():I);if(d){var f=l.$$slots[d];if(f)return f(a,
b,e,c,s);if(y(f))throw ga("noslot",d,ya(I));}else return l(a,b,e,c,s)}var n,E,x,M,B,t,P,I;b===f?(g=d,I=d.$$element):(I=F(f),g=new Da(I,d));B=e;u?M=e.$new(!0):r&&(B=e.$parent);l&&(P=m,P.$$boundTransclude=l,P.isSlotFilled=function(a){return!!l.$$slots[a]});v&&(t=ag(I,g,P,v,M,e,u));u&&(aa.$$addScopeInfo(I,M,!0,!(H&&(H===u||H===u.$$originalDirective))),aa.$$addScopeClass(I,!0),M.$$isolateBindings=u.$$isolateBindings,E=ka(e,g,M,M.$$isolateBindings,u),E.removeWatches&&M.$on("$destroy",E.removeWatches));
for(n in t){E=v[n];x=t[n];var Zb=E.$$bindings.bindToController;x.bindingInfo=x.identifier&&Zb?ka(B,g,x.instance,Zb,E):{};var K=x();K!==x.instance&&(x.instance=K,I.data("$"+E.name+"Controller",K),x.bindingInfo.removeWatches&&x.bindingInfo.removeWatches(),x.bindingInfo=ka(B,g,x.instance,Zb,E))}q(v,function(a,b){var c=a.require;a.bindToController&&!L(c)&&D(c)&&S(t[b].instance,ib(b,c,I,t))});q(t,function(a){var b=a.instance;if(z(b.$onChanges))try{b.$onChanges(a.bindingInfo.initialChanges)}catch(d){c(d)}if(z(b.$onInit))try{b.$onInit()}catch(e){c(e)}z(b.$doCheck)&&
(B.$watch(function(){b.$doCheck()}),b.$doCheck());z(b.$onDestroy)&&B.$on("$destroy",function(){b.$onDestroy()})});n=0;for(E=h.length;n<E;n++)x=h[n],la(x,x.isolateScope?M:e,I,g,x.require&&ib(x.directiveName,x.require,I,t),P);var s=e;u&&(u.template||null===u.templateUrl)&&(s=M);a&&a(s,f.childNodes,void 0,l);for(n=k.length-1;0<=n;n--)x=k[n],la(x,x.isolateScope?M:e,I,g,x.require&&ib(x.directiveName,x.require,I,t),P);q(t,function(a){a=a.instance;z(a.$postLink)&&a.$postLink()})}l=l||{};for(var n=-Number.MAX_VALUE,
r=l.newScopeDirective,v=l.controllerDirectives,u=l.newIsolateScopeDirective,H=l.templateDirective,E=l.nonTlbTranscludeDirective,M=!1,B=!1,fa=l.hasElementTranscludeDirective,t=d.$$element=F(b),x,I,P,K=e,s,Fa=!1,za=!1,w,A=0,C=a.length;A<C;A++){x=a[A];var G=x.$$start,hb=x.$$end;G&&(t=N(b,G,hb));P=void 0;if(n>x.priority)break;if(w=x.scope)x.templateUrl||(D(w)?(X("new/isolated scope",u||r,x,t),u=x):X("new/isolated scope",u,x,t)),r=r||x;I=x.name;if(!Fa&&(x.replace&&(x.templateUrl||x.template)||x.transclude&&
!x.$$tlb)){for(w=A+1;Fa=a[w++];)if(Fa.transclude&&!Fa.$$tlb||Fa.replace&&(Fa.templateUrl||Fa.template)){za=!0;break}Fa=!0}!x.templateUrl&&x.controller&&(w=x.controller,v=v||U(),X("'"+I+"' controller",v[I],x,t),v[I]=x);if(w=x.transclude)if(M=!0,x.$$tlb||(X("transclusion",E,x,t),E=x),"element"==w)fa=!0,n=x.priority,P=t,t=d.$$element=F(aa.$$createComment(I,d[I])),b=t[0],ea(f,va.call(P,0),b),P[0].$$parentNode=P[0].parentNode,K=ac(za,P,e,n,g&&g.name,{nonTlbTranscludeDirective:E});else{var oa=U();P=F(Xb(b)).contents();
if(D(w)){P=[];var Q=U(),O=U();q(w,function(a,b){var c="?"===a.charAt(0);a=c?a.substring(1):a;Q[a]=b;oa[b]=null;O[b]=c});q(t.contents(),function(a){var b=Q[Aa(wa(a))];b?(O[b]=!0,oa[b]=oa[b]||[],oa[b].push(a)):P.push(a)});q(O,function(a,b){if(!a)throw ga("reqslot",b);});for(var V in oa)oa[V]&&(oa[V]=ac(za,oa[V],e))}t.empty();K=ac(za,P,e,void 0,void 0,{needsNewScope:x.$$isolateScope||x.$$newScope});K.$$slots=oa}if(x.template)if(B=!0,X("template",H,x,t),H=x,w=z(x.template)?x.template(t,d):x.template,
w=xa(w),x.replace){g=x;P=Vb.test(w)?$c(da(x.templateNamespace,W(w))):[];b=P[0];if(1!=P.length||1!==b.nodeType)throw ga("tplrt",I,"");ea(f,t,b);C={$attr:{}};w=$b(b,[],C);var Z=a.splice(A+1,a.length-(A+1));(u||r)&&T(w,u,r);a=a.concat(w).concat(Z);$(d,C);C=a.length}else t.html(w);if(x.templateUrl)B=!0,X("template",H,x,t),H=x,x.replace&&(g=x),p=ba(a.splice(A,a.length-A),t,d,f,M&&K,h,k,{controllerDirectives:v,newScopeDirective:r!==x&&r,newIsolateScopeDirective:u,templateDirective:H,nonTlbTranscludeDirective:E}),
C=a.length;else if(x.compile)try{s=x.compile(t,d,K);var Y=x.$$originalDirective||x;z(s)?m(null,ab(Y,s),G,hb):s&&m(ab(Y,s.pre),ab(Y,s.post),G,hb)}catch(ca){c(ca,ya(t))}x.terminal&&(p.terminal=!0,n=Math.max(n,x.priority))}p.scope=r&&!0===r.scope;p.transcludeOnThisElement=M;p.templateOnThisElement=B;p.transclude=K;l.hasElementTranscludeDirective=fa;return p}function ib(a,b,c,d){var e;if(G(b)){var f=b.match(l);b=b.substring(f[0].length);var g=f[1]||f[3],f="?"===f[2];"^^"===g?c=c.parent():e=(e=d&&d[b])&&
e.instance;if(!e){var h="$"+b+"Controller";e=g?c.inheritedData(h):c.data(h)}if(!e&&!f)throw ga("ctreq",b,a);}else if(L(b))for(e=[],g=0,f=b.length;g<f;g++)e[g]=ib(a,b[g],c,d);else D(b)&&(e={},q(b,function(b,f){e[f]=ib(a,b,c,d)}));return e||null}function ag(a,b,c,d,e,f,g){var h=U(),k;for(k in d){var l=d[k],m={$scope:l===g||l.$$isolateScope?e:f,$element:a,$attrs:b,$transclude:c},p=l.controller;"@"==p&&(p=b[l.name]);m=t(p,m,!0,l.controllerAs);h[l.name]=m;a.data("$"+l.name+"Controller",m.instance)}return h}
function T(a,b,c){for(var d=0,e=a.length;d<e;d++)a[d]=Rb(a[d],{$$isolateScope:b,$$newScope:c})}function O(b,e,g,h,k,l,m){if(e===k)return null;k=null;if(f.hasOwnProperty(e)){var p;e=a.get(e+"Directive");for(var n=0,r=e.length;n<r;n++)try{if(p=e[n],(y(h)||h>p.priority)&&-1!=p.restrict.indexOf(g)){l&&(p=Rb(p,{$$start:l,$$end:m}));if(!p.$$bindings){var u=p,v=p,x=p.name,H={isolateScope:null,bindToController:null};D(v.scope)&&(!0===v.bindToController?(H.bindToController=d(v.scope,x,!0),H.isolateScope={}):
H.isolateScope=d(v.scope,x,!1));D(v.bindToController)&&(H.bindToController=d(v.bindToController,x,!0));if(D(H.bindToController)){var E=v.controller,M=v.controllerAs;if(!E)throw ga("noctrl",x);if(!Xc(E,M))throw ga("noident",x);}var t=u.$$bindings=H;D(t.isolateScope)&&(p.$$isolateBindings=t.isolateScope)}b.push(p);k=p}}catch(I){c(I)}}return k}function V(b){if(f.hasOwnProperty(b))for(var c=a.get(b+"Directive"),d=0,e=c.length;d<e;d++)if(b=c[d],b.multiElement)return!0;return!1}function $(a,b){var c=b.$attr,
d=a.$attr;q(a,function(d,e){"$"!=e.charAt(0)&&(b[e]&&b[e]!==d&&(d+=("style"===e?";":" ")+b[e]),a.$set(e,d,!0,c[e]))});q(b,function(b,e){a.hasOwnProperty(e)||"$"===e.charAt(0)||(a[e]=b,"class"!==e&&"style"!==e&&(d[e]=c[e]))})}function ba(a,b,c,d,f,g,h,k){var l=[],m,p,n=b[0],r=a.shift(),u=Rb(r,{templateUrl:null,transclude:null,replace:null,$$originalDirective:r}),H=z(r.templateUrl)?r.templateUrl(b,c):r.templateUrl,E=r.templateNamespace;b.empty();e(H).then(function(e){var v,M;e=xa(e);if(r.replace){e=
Vb.test(e)?$c(da(E,W(e))):[];v=e[0];if(1!=e.length||1!==v.nodeType)throw ga("tplrt",r.name,H);e={$attr:{}};ea(d,b,v);var B=$b(v,[],e);D(r.scope)&&T(B,!0);a=B.concat(a);$(c,e)}else v=n,b.html(e);a.unshift(u);m=oa(a,v,c,f,b,r,g,h,k);q(d,function(a,c){a==v&&(d[c]=b[0])});for(p=s(b[0].childNodes,f);l.length;){e=l.shift();M=l.shift();var t=l.shift(),I=l.shift(),B=b[0];if(!e.$$destroyed){if(M!==n){var P=M.className;k.hasElementTranscludeDirective&&r.replace||(B=Xb(v));ea(t,F(M),B);x(F(B),P)}M=m.transcludeOnThisElement?
za(e,m.transclude,I):I;m(p,e,B,d,M)}}l=null});return function(a,b,c,d,e){a=e;b.$$destroyed||(l?l.push(b,c,d,a):(m.transcludeOnThisElement&&(a=za(b,m.transclude,e)),m(p,b,c,d,a)))}}function Z(a,b){var c=b.priority-a.priority;return 0!==c?c:a.name!==b.name?a.name<b.name?-1:1:a.index-b.index}function X(a,b,c,d){function e(a){return a?" (module: "+a+")":""}if(b)throw ga("multidir",b.name,e(b.$$moduleName),c.name,e(c.$$moduleName),a,ya(d));}function ca(a,c){var d=b(c,!0);d&&a.push({priority:0,compile:function(a){a=
a.parent();var b=!!a.length;b&&aa.$$addBindingClass(a);return function(a,c){var e=c.parent();b||aa.$$addBindingClass(e);aa.$$addBindingInfo(e,d.expressions);a.$watch(d,function(a){c[0].nodeValue=a})}}})}function da(a,b){a=Q(a||"html");switch(a){case "svg":case "math":var c=C.document.createElement("div");c.innerHTML="<"+a+">"+b+"</"+a+">";return c.childNodes[0].childNodes;default:return b}}function ha(a,b){if("srcdoc"==b)return M.HTML;var c=wa(a);if("xlinkHref"==b||"form"==c&&"action"==b||"img"!=
c&&("src"==b||"ngSrc"==b))return M.RESOURCE_URL}function ia(a,c,d,e,f){var g=ha(a,e);f=k[e]||f;var h=b(d,!0,g,f);if(h){if("multiple"===e&&"select"===wa(a))throw ga("selmulti",ya(a));c.push({priority:100,compile:function(){return{pre:function(a,c,k){c=k.$$observers||(k.$$observers=U());if(m.test(e))throw ga("nodomevents");var l=k[e];l!==d&&(h=l&&b(l,!0,g,f),d=l);h&&(k[e]=h(a),(c[e]||(c[e]=[])).$$inter=!0,(k.$$observers&&k.$$observers[e].$$scope||a).$watch(h,function(a,b){"class"===e&&a!=b?k.$updateClass(a,
b):k.$set(e,a)}))}}}})}}function ea(a,b,c){var d=b[0],e=b.length,f=d.parentNode,g,h;if(a)for(g=0,h=a.length;g<h;g++)if(a[g]==d){a[g++]=c;h=g+e-1;for(var k=a.length;g<k;g++,h++)h<k?a[g]=a[h]:delete a[g];a.length-=e-1;a.context===d&&(a.context=c);break}f&&f.replaceChild(c,d);a=C.document.createDocumentFragment();for(g=0;g<e;g++)a.appendChild(b[g]);F.hasData(d)&&(F.data(c,F.data(d)),F(d).off("$destroy"));F.cleanData(a.querySelectorAll("*"));for(g=1;g<e;g++)delete b[g];b[0]=c;b.length=1}function ja(a,
b){return S(function(){return a.apply(null,arguments)},a,b)}function la(a,b,d,e,f,g){try{a(b,d,e,f,g)}catch(h){c(h,ya(d))}}function ka(a,c,d,e,f){function g(b,c,e){z(d.$onChanges)&&c!==e&&(Y||(a.$$postDigest(I),Y=[]),m||(m={},Y.push(h)),m[b]&&(e=m[b].previousValue),m[b]=new Fb(e,c))}function h(){d.$onChanges(m);m=void 0}var k=[],l={},m;q(e,function(e,h){var m=e.attrName,p=e.optional,v,u,x,H;switch(e.mode){case "@":p||ua.call(c,m)||(d[h]=c[m]=void 0);c.$observe(m,function(a){if(G(a)||Ga(a))g(h,a,d[h]),
d[h]=a});c.$$observers[m].$$scope=a;v=c[m];G(v)?d[h]=b(v)(a):Ga(v)&&(d[h]=v);l[h]=new Fb(bc,d[h]);break;case "=":if(!ua.call(c,m)){if(p)break;c[m]=void 0}if(p&&!c[m])break;u=n(c[m]);H=u.literal?na:function(a,b){return a===b||a!==a&&b!==b};x=u.assign||function(){v=d[h]=u(a);throw ga("nonassign",c[m],m,f.name);};v=d[h]=u(a);p=function(b){H(b,d[h])||(H(b,v)?x(a,b=d[h]):d[h]=b);return v=b};p.$stateful=!0;p=e.collection?a.$watchCollection(c[m],p):a.$watch(n(c[m],p),null,u.literal);k.push(p);break;case "<":if(!ua.call(c,
m)){if(p)break;c[m]=void 0}if(p&&!c[m])break;u=n(c[m]);var E=d[h]=u(a);l[h]=new Fb(bc,d[h]);p=a.$watch(u,function(a,b){if(b===a){if(b===E)return;b=E}g(h,a,b);d[h]=a},u.literal);k.push(p);break;case "&":u=c.hasOwnProperty(m)?n(c[m]):A;if(u===A&&p)break;d[h]=function(b){return u(a,b)}}});return{initialChanges:l,removeWatches:k.length&&function(){for(var a=0,b=k.length;a<b;++a)k[a]()}}}var ta=/^\w/,pa=C.document.createElement("div"),qa=u,Y;Da.prototype={$normalize:Aa,$addClass:function(a){a&&0<a.length&&
H.addClass(this.$$element,a)},$removeClass:function(a){a&&0<a.length&&H.removeClass(this.$$element,a)},$updateClass:function(a,b){var c=ad(a,b);c&&c.length&&H.addClass(this.$$element,c);(c=ad(b,a))&&c.length&&H.removeClass(this.$$element,c)},$set:function(a,b,d,e){var f=Uc(this.$$element[0],a),g=bd[a],h=a;f?(this.$$element.prop(a,b),e=f):g&&(this[g]=b,h=g);this[a]=b;e?this.$attr[a]=e:(e=this.$attr[a])||(this.$attr[a]=e=Cc(a,"-"));f=wa(this.$$element);if("a"===f&&("href"===a||"xlinkHref"===a)||"img"===
f&&"src"===a)this[a]=b=E(b,"src"===a);else if("img"===f&&"srcset"===a&&w(b)){for(var f="",g=W(b),k=/(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/,k=/\s/.test(g)?k:/(,)/,g=g.split(k),k=Math.floor(g.length/2),l=0;l<k;l++)var m=2*l,f=f+E(W(g[m]),!0),f=f+(" "+W(g[m+1]));g=W(g[2*l]).split(/\s/);f+=E(W(g[0]),!0);2===g.length&&(f+=" "+W(g[1]));this[a]=b=f}!1!==d&&(null===b||y(b)?this.$$element.removeAttr(e):ta.test(e)?this.$$element.attr(e,b):P(this.$$element[0],e,b));(a=this.$$observers)&&q(a[h],function(a){try{a(b)}catch(d){c(d)}})},
$observe:function(a,b){var c=this,d=c.$$observers||(c.$$observers=U()),e=d[a]||(d[a]=[]);e.push(b);K.$evalAsync(function(){e.$$inter||!c.hasOwnProperty(a)||y(c[a])||b(c[a])});return function(){Za(e,b)}}};var ra=b.startSymbol(),sa=b.endSymbol(),xa="{{"==ra&&"}}"==sa?Xa:function(a){return a.replace(/\{\{/g,ra).replace(/}}/g,sa)},Ba=/^ngAttr[A-Z]/,Ca=/^(.+)Start$/;aa.$$addBindingInfo=p?function(a,b){var c=a.data("$binding")||[];L(b)?c=c.concat(b):c.push(b);a.data("$binding",c)}:A;aa.$$addBindingClass=
p?function(a){x(a,"ng-binding")}:A;aa.$$addScopeInfo=p?function(a,b,c,d){a.data(c?d?"$isolateScopeNoTemplate":"$isolateScope":"$scope",b)}:A;aa.$$addScopeClass=p?function(a,b){x(a,b?"ng-isolate-scope":"ng-scope")}:A;aa.$$createComment=function(a,b){var c="";p&&(c=" "+(a||"")+": ",b&&(c+=b+" "));return C.document.createComment(c)};return aa}]}function Fb(a,b){this.previousValue=a;this.currentValue=b}function Aa(a){return db(a.replace(Yc,""))}function ad(a,b){var d="",c=a.split(/\s+/),e=b.split(/\s+/),
f=0;a:for(;f<c.length;f++){for(var g=c[f],h=0;h<e.length;h++)if(g==e[h])continue a;d+=(0<d.length?" ":"")+g}return d}function $c(a){a=F(a);var b=a.length;if(1>=b)return a;for(;b--;)8===a[b].nodeType&&bg.call(a,b,1);return a}function Xc(a,b){if(b&&G(b))return b;if(G(a)){var d=cd.exec(a);if(d)return d[3]}}function ff(){var a={},b=!1;this.has=function(b){return a.hasOwnProperty(b)};this.register=function(b,c){Qa(b,"controller");D(b)?S(a,b):a[b]=c};this.allowGlobals=function(){b=!0};this.$get=["$injector",
"$window",function(d,c){function e(a,b,c,d){if(!a||!D(a.$scope))throw N("$controller")("noscp",d,b);a.$scope[b]=c}return function(f,g,h,k){var l,m,n;h=!0===h;k&&G(k)&&(n=k);if(G(f)){k=f.match(cd);if(!k)throw cg("ctrlfmt",f);m=k[1];n=n||k[3];f=a.hasOwnProperty(m)?a[m]:Ec(g.$scope,m,!0)||(b?Ec(c,m,!0):void 0);Pa(f,m,!0)}if(h)return h=(L(f)?f[f.length-1]:f).prototype,l=Object.create(h||null),n&&e(g,n,l,m||f.name),S(function(){var a=d.invoke(f,l,g,m);a!==l&&(D(a)||z(a))&&(l=a,n&&e(g,n,l,m||f.name));return l},
{instance:l,identifier:n});l=d.instantiate(f,g,m);n&&e(g,n,l,m||f.name);return l}}]}function gf(){this.$get=["$window",function(a){return F(a.document)}]}function hf(){this.$get=["$log",function(a){return function(b,d){a.error.apply(a,arguments)}}]}function cc(a){return D(a)?da(a)?a.toISOString():bb(a):a}function nf(){this.$get=function(){return function(a){if(!a)return"";var b=[];tc(a,function(a,c){null===a||y(a)||(L(a)?q(a,function(a){b.push(ea(c)+"="+ea(cc(a)))}):b.push(ea(c)+"="+ea(cc(a))))});
return b.join("&")}}}function of(){this.$get=function(){return function(a){function b(a,e,f){null===a||y(a)||(L(a)?q(a,function(a,c){b(a,e+"["+(D(a)?c:"")+"]")}):D(a)&&!da(a)?tc(a,function(a,c){b(a,e+(f?"":"[")+c+(f?"":"]"))}):d.push(ea(e)+"="+ea(cc(a))))}if(!a)return"";var d=[];b(a,"",!0);return d.join("&")}}}function dc(a,b){if(G(a)){var d=a.replace(dg,"").trim();if(d){var c=b("Content-Type");(c=c&&0===c.indexOf(dd))||(c=(c=d.match(eg))&&fg[c[0]].test(d));c&&(a=xc(d))}}return a}function ed(a){var b=
U(),d;G(a)?q(a.split("\n"),function(a){d=a.indexOf(":");var e=Q(W(a.substr(0,d)));a=W(a.substr(d+1));e&&(b[e]=b[e]?b[e]+", "+a:a)}):D(a)&&q(a,function(a,d){var f=Q(d),g=W(a);f&&(b[f]=b[f]?b[f]+", "+g:g)});return b}function fd(a){var b;return function(d){b||(b=ed(a));return d?(d=b[Q(d)],void 0===d&&(d=null),d):b}}function gd(a,b,d,c){if(z(c))return c(a,b,d);q(c,function(c){a=c(a,b,d)});return a}function mf(){var a=this.defaults={transformResponse:[dc],transformRequest:[function(a){return D(a)&&"[object File]"!==
ma.call(a)&&"[object Blob]"!==ma.call(a)&&"[object FormData]"!==ma.call(a)?bb(a):a}],headers:{common:{Accept:"application/json, text/plain, */*"},post:ia(ec),put:ia(ec),patch:ia(ec)},xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",paramSerializer:"$httpParamSerializer"},b=!1;this.useApplyAsync=function(a){return w(a)?(b=!!a,this):b};var d=!0;this.useLegacyPromiseExtensions=function(a){return w(a)?(d=!!a,this):d};var c=this.interceptors=[];this.$get=["$httpBackend","$$cookieReader","$cacheFactory",
"$rootScope","$q","$injector",function(e,f,g,h,k,l){function m(b){function c(a,b){for(var d=0,e=b.length;d<e;){var f=b[d++],g=b[d++];a=a.then(f,g)}b.length=0;return a}function e(a,b){var c,d={};q(a,function(a,e){z(a)?(c=a(b),null!=c&&(d[e]=c)):d[e]=a});return d}function f(a){var b=S({},a);b.data=gd(a.data,a.headers,a.status,g.transformResponse);a=a.status;return 200<=a&&300>a?b:k.reject(b)}if(!D(b))throw N("$http")("badreq",b);if(!G(b.url))throw N("$http")("badreq",b.url);var g=S({method:"get",transformRequest:a.transformRequest,
transformResponse:a.transformResponse,paramSerializer:a.paramSerializer},b);g.headers=function(b){var c=a.headers,d=S({},b.headers),f,g,h,c=S({},c.common,c[Q(b.method)]);a:for(f in c){g=Q(f);for(h in d)if(Q(h)===g)continue a;d[f]=c[f]}return e(d,ia(b))}(b);g.method=ub(g.method);g.paramSerializer=G(g.paramSerializer)?l.get(g.paramSerializer):g.paramSerializer;var h=[],m=[],p=k.when(g);q(R,function(a){(a.request||a.requestError)&&h.unshift(a.request,a.requestError);(a.response||a.responseError)&&m.push(a.response,
a.responseError)});p=c(p,h);p=p.then(function(b){var c=b.headers,d=gd(b.data,fd(c),void 0,b.transformRequest);y(d)&&q(c,function(a,b){"content-type"===Q(b)&&delete c[b]});y(b.withCredentials)&&!y(a.withCredentials)&&(b.withCredentials=a.withCredentials);return n(b,d).then(f,f)});p=c(p,m);d?(p.success=function(a){Pa(a,"fn");p.then(function(b){a(b.data,b.status,b.headers,g)});return p},p.error=function(a){Pa(a,"fn");p.then(null,function(b){a(b.data,b.status,b.headers,g)});return p}):(p.success=hd("success"),
p.error=hd("error"));return p}function n(c,d){function g(a){if(a){var c={};q(a,function(a,d){c[d]=function(c){function d(){a(c)}b?h.$applyAsync(d):h.$$phase?d():h.$apply(d)}});return c}}function l(a,c,d,e){function f(){n(c,a,d,e)}E&&(200<=a&&300>a?E.put(P,[a,c,ed(d),e]):E.remove(P));b?h.$applyAsync(f):(f(),h.$$phase||h.$apply())}function n(a,b,d,e){b=-1<=b?b:0;(200<=b&&300>b?M.resolve:M.reject)({data:a,status:b,headers:fd(d),config:c,statusText:e})}function t(a){n(a.data,a.status,ia(a.headers()),
a.statusText)}function R(){var a=m.pendingRequests.indexOf(c);-1!==a&&m.pendingRequests.splice(a,1)}var M=k.defer(),H=M.promise,E,I,Da=c.headers,P=p(c.url,c.paramSerializer(c.params));m.pendingRequests.push(c);H.then(R,R);!c.cache&&!a.cache||!1===c.cache||"GET"!==c.method&&"JSONP"!==c.method||(E=D(c.cache)?c.cache:D(a.cache)?a.cache:u);E&&(I=E.get(P),w(I)?I&&z(I.then)?I.then(t,t):L(I)?n(I[1],I[0],ia(I[2]),I[3]):n(I,200,{},"OK"):E.put(P,H));y(I)&&((I=id(c.url)?f()[c.xsrfCookieName||a.xsrfCookieName]:
void 0)&&(Da[c.xsrfHeaderName||a.xsrfHeaderName]=I),e(c.method,P,d,l,Da,c.timeout,c.withCredentials,c.responseType,g(c.eventHandlers),g(c.uploadEventHandlers)));return H}function p(a,b){0<b.length&&(a+=(-1==a.indexOf("?")?"?":"&")+b);return a}var u=g("$http");a.paramSerializer=G(a.paramSerializer)?l.get(a.paramSerializer):a.paramSerializer;var R=[];q(c,function(a){R.unshift(G(a)?l.get(a):l.invoke(a))});m.pendingRequests=[];(function(a){q(arguments,function(a){m[a]=function(b,c){return m(S({},c||{},
{method:a,url:b}))}})})("get","delete","head","jsonp");(function(a){q(arguments,function(a){m[a]=function(b,c,d){return m(S({},d||{},{method:a,url:b,data:c}))}})})("post","put","patch");m.defaults=a;return m}]}function qf(){this.$get=function(){return function(){return new C.XMLHttpRequest}}}function pf(){this.$get=["$browser","$jsonpCallbacks","$document","$xhrFactory",function(a,b,d,c){return gg(a,c,a.defer,b,d[0])}]}function gg(a,b,d,c,e){function f(a,b,d){a=a.replace("JSON_CALLBACK",b);var f=
e.createElement("script"),m=null;f.type="text/javascript";f.src=a;f.async=!0;m=function(a){f.removeEventListener("load",m,!1);f.removeEventListener("error",m,!1);e.body.removeChild(f);f=null;var g=-1,u="unknown";a&&("load"!==a.type||c.wasCalled(b)||(a={type:"error"}),u=a.type,g="error"===a.type?404:200);d&&d(g,u)};f.addEventListener("load",m,!1);f.addEventListener("error",m,!1);e.body.appendChild(f);return m}return function(e,h,k,l,m,n,p,u,R,B){function r(){fa&&fa();t&&t.abort()}function J(b,c,e,
f,g){w(M)&&d.cancel(M);fa=t=null;b(c,e,f,g);a.$$completeOutstandingRequest(A)}a.$$incOutstandingRequestCount();h=h||a.url();if("jsonp"===Q(e))var v=c.createCallback(h),fa=f(h,v,function(a,b){var d=200===a&&c.getResponse(v);J(l,a,d,"",b);c.removeCallback(v)});else{var t=b(e,h);t.open(e,h,!0);q(m,function(a,b){w(a)&&t.setRequestHeader(b,a)});t.onload=function(){var a=t.statusText||"",b="response"in t?t.response:t.responseText,c=1223===t.status?204:t.status;0===c&&(c=b?200:"file"==Y(h).protocol?404:
0);J(l,c,b,t.getAllResponseHeaders(),a)};e=function(){J(l,-1,null,null,"")};t.onerror=e;t.onabort=e;q(R,function(a,b){t.addEventListener(b,a)});q(B,function(a,b){t.upload.addEventListener(b,a)});p&&(t.withCredentials=!0);if(u)try{t.responseType=u}catch(K){if("json"!==u)throw K;}t.send(y(k)?null:k)}if(0<n)var M=d(r,n);else n&&z(n.then)&&n.then(r)}}function kf(){var a="{{",b="}}";this.startSymbol=function(b){return b?(a=b,this):a};this.endSymbol=function(a){return a?(b=a,this):b};this.$get=["$parse",
"$exceptionHandler","$sce",function(d,c,e){function f(a){return"\\\\\\"+a}function g(c){return c.replace(n,a).replace(p,b)}function h(a,b,c,d){var e;return e=a.$watch(function(a){e();return d(a)},b,c)}function k(f,k,p,n){function J(a){try{var b=a;a=p?e.getTrusted(p,b):e.valueOf(b);var d;if(n&&!w(a))d=a;else if(null==a)d="";else{switch(typeof a){case "string":break;case "number":a=""+a;break;default:a=bb(a)}d=a}return d}catch(g){c(Ka.interr(f,g))}}if(!f.length||-1===f.indexOf(a)){var v;k||(k=g(f),
v=ha(k),v.exp=f,v.expressions=[],v.$$watchDelegate=h);return v}n=!!n;var q,t,K=0,M=[],H=[];v=f.length;for(var E=[],I=[];K<v;)if(-1!=(q=f.indexOf(a,K))&&-1!=(t=f.indexOf(b,q+l)))K!==q&&E.push(g(f.substring(K,q))),K=f.substring(q+l,t),M.push(K),H.push(d(K,J)),K=t+m,I.push(E.length),E.push("");else{K!==v&&E.push(g(f.substring(K)));break}p&&1<E.length&&Ka.throwNoconcat(f);if(!k||M.length){var Da=function(a){for(var b=0,c=M.length;b<c;b++){if(n&&y(a[b]))return;E[I[b]]=a[b]}return E.join("")};return S(function(a){var b=
0,d=M.length,e=Array(d);try{for(;b<d;b++)e[b]=H[b](a);return Da(e)}catch(g){c(Ka.interr(f,g))}},{exp:f,expressions:M,$$watchDelegate:function(a,b){var c;return a.$watchGroup(H,function(d,e){var f=Da(d);z(b)&&b.call(this,f,d!==e?c:f,a);c=f})}})}}var l=a.length,m=b.length,n=new RegExp(a.replace(/./g,f),"g"),p=new RegExp(b.replace(/./g,f),"g");k.startSymbol=function(){return a};k.endSymbol=function(){return b};return k}]}function lf(){this.$get=["$rootScope","$window","$q","$$q","$browser",function(a,
b,d,c,e){function f(f,k,l,m){function n(){p?f.apply(null,u):f(r)}var p=4<arguments.length,u=p?va.call(arguments,4):[],R=b.setInterval,q=b.clearInterval,r=0,J=w(m)&&!m,v=(J?c:d).defer(),fa=v.promise;l=w(l)?l:0;fa.$$intervalId=R(function(){J?e.defer(n):a.$evalAsync(n);v.notify(r++);0<l&&r>=l&&(v.resolve(r),q(fa.$$intervalId),delete g[fa.$$intervalId]);J||a.$apply()},k);g[fa.$$intervalId]=v;return fa}var g={};f.cancel=function(a){return a&&a.$$intervalId in g?(g[a.$$intervalId].reject("canceled"),b.clearInterval(a.$$intervalId),
delete g[a.$$intervalId],!0):!1};return f}]}function fc(a){a=a.split("/");for(var b=a.length;b--;)a[b]=qb(a[b]);return a.join("/")}function jd(a,b){var d=Y(a);b.$$protocol=d.protocol;b.$$host=d.hostname;b.$$port=Z(d.port)||hg[d.protocol]||null}function kd(a,b){var d="/"!==a.charAt(0);d&&(a="/"+a);var c=Y(a);b.$$path=decodeURIComponent(d&&"/"===c.pathname.charAt(0)?c.pathname.substring(1):c.pathname);b.$$search=Ac(c.search);b.$$hash=decodeURIComponent(c.hash);b.$$path&&"/"!=b.$$path.charAt(0)&&(b.$$path=
"/"+b.$$path)}function ka(a,b){if(0===b.lastIndexOf(a,0))return b.substr(a.length)}function Ja(a){var b=a.indexOf("#");return-1==b?a:a.substr(0,b)}function jb(a){return a.replace(/(#.+)|#$/,"$1")}function gc(a,b,d){this.$$html5=!0;d=d||"";jd(a,this);this.$$parse=function(a){var d=ka(b,a);if(!G(d))throw Gb("ipthprfx",a,b);kd(d,this);this.$$path||(this.$$path="/");this.$$compose()};this.$$compose=function(){var a=Tb(this.$$search),d=this.$$hash?"#"+qb(this.$$hash):"";this.$$url=fc(this.$$path)+(a?"?"+
a:"")+d;this.$$absUrl=b+this.$$url.substr(1)};this.$$parseLinkUrl=function(c,e){if(e&&"#"===e[0])return this.hash(e.slice(1)),!0;var f,g;w(f=ka(a,c))?(g=f,g=w(f=ka(d,f))?b+(ka("/",f)||f):a+g):w(f=ka(b,c))?g=b+f:b==c+"/"&&(g=b);g&&this.$$parse(g);return!!g}}function hc(a,b,d){jd(a,this);this.$$parse=function(c){var e=ka(a,c)||ka(b,c),f;y(e)||"#"!==e.charAt(0)?this.$$html5?f=e:(f="",y(e)&&(a=c,this.replace())):(f=ka(d,e),y(f)&&(f=e));kd(f,this);c=this.$$path;var e=a,g=/^\/[A-Z]:(\/.*)/;0===f.lastIndexOf(e,
0)&&(f=f.replace(e,""));g.exec(f)||(c=(f=g.exec(c))?f[1]:c);this.$$path=c;this.$$compose()};this.$$compose=function(){var b=Tb(this.$$search),e=this.$$hash?"#"+qb(this.$$hash):"";this.$$url=fc(this.$$path)+(b?"?"+b:"")+e;this.$$absUrl=a+(this.$$url?d+this.$$url:"")};this.$$parseLinkUrl=function(b,d){return Ja(a)==Ja(b)?(this.$$parse(b),!0):!1}}function ld(a,b,d){this.$$html5=!0;hc.apply(this,arguments);this.$$parseLinkUrl=function(c,e){if(e&&"#"===e[0])return this.hash(e.slice(1)),!0;var f,g;a==Ja(c)?
f=c:(g=ka(b,c))?f=a+d+g:b===c+"/"&&(f=b);f&&this.$$parse(f);return!!f};this.$$compose=function(){var b=Tb(this.$$search),e=this.$$hash?"#"+qb(this.$$hash):"";this.$$url=fc(this.$$path)+(b?"?"+b:"")+e;this.$$absUrl=a+d+this.$$url}}function Hb(a){return function(){return this[a]}}function md(a,b){return function(d){if(y(d))return this[a];this[a]=b(d);this.$$compose();return this}}function sf(){var a="",b={enabled:!1,requireBase:!0,rewriteLinks:!0};this.hashPrefix=function(b){return w(b)?(a=b,this):
a};this.html5Mode=function(a){return Ga(a)?(b.enabled=a,this):D(a)?(Ga(a.enabled)&&(b.enabled=a.enabled),Ga(a.requireBase)&&(b.requireBase=a.requireBase),Ga(a.rewriteLinks)&&(b.rewriteLinks=a.rewriteLinks),this):b};this.$get=["$rootScope","$browser","$sniffer","$rootElement","$window",function(d,c,e,f,g){function h(a,b,d){var e=l.url(),f=l.$$state;try{c.url(a,b,d),l.$$state=c.state()}catch(g){throw l.url(e),l.$$state=f,g;}}function k(a,b){d.$broadcast("$locationChangeSuccess",l.absUrl(),a,l.$$state,
b)}var l,m;m=c.baseHref();var n=c.url(),p;if(b.enabled){if(!m&&b.requireBase)throw Gb("nobase");p=n.substring(0,n.indexOf("/",n.indexOf("//")+2))+(m||"/");m=e.history?gc:ld}else p=Ja(n),m=hc;var u=p.substr(0,Ja(p).lastIndexOf("/")+1);l=new m(p,u,"#"+a);l.$$parseLinkUrl(n,n);l.$$state=c.state();var R=/^\s*(javascript|mailto):/i;f.on("click",function(a){if(b.rewriteLinks&&!a.ctrlKey&&!a.metaKey&&!a.shiftKey&&2!=a.which&&2!=a.button){for(var e=F(a.target);"a"!==wa(e[0]);)if(e[0]===f[0]||!(e=e.parent())[0])return;
var h=e.prop("href"),k=e.attr("href")||e.attr("xlink:href");D(h)&&"[object SVGAnimatedString]"===h.toString()&&(h=Y(h.animVal).href);R.test(h)||!h||e.attr("target")||a.isDefaultPrevented()||!l.$$parseLinkUrl(h,k)||(a.preventDefault(),l.absUrl()!=c.url()&&(d.$apply(),g.angular["ff-684208-preventDefault"]=!0))}});jb(l.absUrl())!=jb(n)&&c.url(l.absUrl(),!0);var q=!0;c.onUrlChange(function(a,b){y(ka(u,a))?g.location.href=a:(d.$evalAsync(function(){var c=l.absUrl(),e=l.$$state,f;a=jb(a);l.$$parse(a);l.$$state=
b;f=d.$broadcast("$locationChangeStart",a,c,b,e).defaultPrevented;l.absUrl()===a&&(f?(l.$$parse(c),l.$$state=e,h(c,!1,e)):(q=!1,k(c,e)))}),d.$$phase||d.$digest())});d.$watch(function(){var a=jb(c.url()),b=jb(l.absUrl()),f=c.state(),g=l.$$replace,m=a!==b||l.$$html5&&e.history&&f!==l.$$state;if(q||m)q=!1,d.$evalAsync(function(){var b=l.absUrl(),c=d.$broadcast("$locationChangeStart",b,a,l.$$state,f).defaultPrevented;l.absUrl()===b&&(c?(l.$$parse(a),l.$$state=f):(m&&h(b,g,f===l.$$state?null:l.$$state),
k(a,f)))});l.$$replace=!1});return l}]}function tf(){var a=!0,b=this;this.debugEnabled=function(b){return w(b)?(a=b,this):a};this.$get=["$window",function(d){function c(a){a instanceof Error&&(a.stack?a=a.message&&-1===a.stack.indexOf(a.message)?"Error: "+a.message+"\n"+a.stack:a.stack:a.sourceURL&&(a=a.message+"\n"+a.sourceURL+":"+a.line));return a}function e(a){var b=d.console||{},e=b[a]||b.log||A;a=!1;try{a=!!e.apply}catch(k){}return a?function(){var a=[];q(arguments,function(b){a.push(c(b))});
return e.apply(b,a)}:function(a,b){e(a,null==b?"":b)}}return{log:e("log"),info:e("info"),warn:e("warn"),error:e("error"),debug:function(){var c=e("debug");return function(){a&&c.apply(b,arguments)}}()}}]}function Sa(a,b){if("__defineGetter__"===a||"__defineSetter__"===a||"__lookupGetter__"===a||"__lookupSetter__"===a||"__proto__"===a)throw X("isecfld",b);return a}function ig(a){return a+""}function ra(a,b){if(a){if(a.constructor===a)throw X("isecfn",b);if(a.window===a)throw X("isecwindow",b);if(a.children&&
(a.nodeName||a.prop&&a.attr&&a.find))throw X("isecdom",b);if(a===Object)throw X("isecobj",b);}return a}function nd(a,b){if(a){if(a.constructor===a)throw X("isecfn",b);if(a===jg||a===kg||a===lg)throw X("isecff",b);}}function Ib(a,b){if(a&&(a===(0).constructor||a===(!1).constructor||a==="".constructor||a==={}.constructor||a===[].constructor||a===Function.constructor))throw X("isecaf",b);}function mg(a,b){return"undefined"!==typeof a?a:b}function od(a,b){return"undefined"===typeof a?b:"undefined"===
typeof b?a:a+b}function V(a,b){var d,c;switch(a.type){case s.Program:d=!0;q(a.body,function(a){V(a.expression,b);d=d&&a.expression.constant});a.constant=d;break;case s.Literal:a.constant=!0;a.toWatch=[];break;case s.UnaryExpression:V(a.argument,b);a.constant=a.argument.constant;a.toWatch=a.argument.toWatch;break;case s.BinaryExpression:V(a.left,b);V(a.right,b);a.constant=a.left.constant&&a.right.constant;a.toWatch=a.left.toWatch.concat(a.right.toWatch);break;case s.LogicalExpression:V(a.left,b);V(a.right,
b);a.constant=a.left.constant&&a.right.constant;a.toWatch=a.constant?[]:[a];break;case s.ConditionalExpression:V(a.test,b);V(a.alternate,b);V(a.consequent,b);a.constant=a.test.constant&&a.alternate.constant&&a.consequent.constant;a.toWatch=a.constant?[]:[a];break;case s.Identifier:a.constant=!1;a.toWatch=[a];break;case s.MemberExpression:V(a.object,b);a.computed&&V(a.property,b);a.constant=a.object.constant&&(!a.computed||a.property.constant);a.toWatch=[a];break;case s.CallExpression:d=a.filter?!b(a.callee.name).$stateful:
!1;c=[];q(a.arguments,function(a){V(a,b);d=d&&a.constant;a.constant||c.push.apply(c,a.toWatch)});a.constant=d;a.toWatch=a.filter&&!b(a.callee.name).$stateful?c:[a];break;case s.AssignmentExpression:V(a.left,b);V(a.right,b);a.constant=a.left.constant&&a.right.constant;a.toWatch=[a];break;case s.ArrayExpression:d=!0;c=[];q(a.elements,function(a){V(a,b);d=d&&a.constant;a.constant||c.push.apply(c,a.toWatch)});a.constant=d;a.toWatch=c;break;case s.ObjectExpression:d=!0;c=[];q(a.properties,function(a){V(a.value,
b);d=d&&a.value.constant&&!a.computed;a.value.constant||c.push.apply(c,a.value.toWatch)});a.constant=d;a.toWatch=c;break;case s.ThisExpression:a.constant=!1;a.toWatch=[];break;case s.LocalsExpression:a.constant=!1,a.toWatch=[]}}function pd(a){if(1==a.length){a=a[0].expression;var b=a.toWatch;return 1!==b.length?b:b[0]!==a?b:void 0}}function qd(a){return a.type===s.Identifier||a.type===s.MemberExpression}function rd(a){if(1===a.body.length&&qd(a.body[0].expression))return{type:s.AssignmentExpression,
left:a.body[0].expression,right:{type:s.NGValueParameter},operator:"="}}function sd(a){return 0===a.body.length||1===a.body.length&&(a.body[0].expression.type===s.Literal||a.body[0].expression.type===s.ArrayExpression||a.body[0].expression.type===s.ObjectExpression)}function td(a,b){this.astBuilder=a;this.$filter=b}function ud(a,b){this.astBuilder=a;this.$filter=b}function Jb(a){return"constructor"==a}function ic(a){return z(a.valueOf)?a.valueOf():ng.call(a)}function uf(){var a=U(),b=U(),d={"true":!0,
"false":!1,"null":null,undefined:void 0},c,e;this.addLiteral=function(a,b){d[a]=b};this.setIdentifierFns=function(a,b){c=a;e=b;return this};this.$get=["$filter",function(f){function g(c,d,e){var g,k,H;e=e||J;switch(typeof c){case "string":H=c=c.trim();var E=e?b:a;g=E[H];if(!g){":"===c.charAt(0)&&":"===c.charAt(1)&&(k=!0,c=c.substring(2));g=e?r:B;var q=new jc(g);g=(new kc(q,f,g)).parse(c);g.constant?g.$$watchDelegate=p:k?g.$$watchDelegate=g.literal?n:m:g.inputs&&(g.$$watchDelegate=l);e&&(g=h(g));E[H]=
g}return u(g,d);case "function":return u(c,d);default:return u(A,d)}}function h(a){function b(c,d,e,f){var g=J;J=!0;try{return a(c,d,e,f)}finally{J=g}}if(!a)return a;b.$$watchDelegate=a.$$watchDelegate;b.assign=h(a.assign);b.constant=a.constant;b.literal=a.literal;for(var c=0;a.inputs&&c<a.inputs.length;++c)a.inputs[c]=h(a.inputs[c]);b.inputs=a.inputs;return b}function k(a,b){return null==a||null==b?a===b:"object"===typeof a&&(a=ic(a),"object"===typeof a)?!1:a===b||a!==a&&b!==b}function l(a,b,c,d,
e){var f=d.inputs,g;if(1===f.length){var h=k,f=f[0];return a.$watch(function(a){var b=f(a);k(b,h)||(g=d(a,void 0,void 0,[b]),h=b&&ic(b));return g},b,c,e)}for(var l=[],m=[],p=0,n=f.length;p<n;p++)l[p]=k,m[p]=null;return a.$watch(function(a){for(var b=!1,c=0,e=f.length;c<e;c++){var h=f[c](a);if(b||(b=!k(h,l[c])))m[c]=h,l[c]=h&&ic(h)}b&&(g=d(a,void 0,void 0,m));return g},b,c,e)}function m(a,b,c,d){var e,f;return e=a.$watch(function(a){return d(a)},function(a,c,d){f=a;z(b)&&b.apply(this,arguments);w(a)&&
d.$$postDigest(function(){w(f)&&e()})},c)}function n(a,b,c,d){function e(a){var b=!0;q(a,function(a){w(a)||(b=!1)});return b}var f,g;return f=a.$watch(function(a){return d(a)},function(a,c,d){g=a;z(b)&&b.call(this,a,c,d);e(a)&&d.$$postDigest(function(){e(g)&&f()})},c)}function p(a,b,c,d){var e;return e=a.$watch(function(a){e();return d(a)},b,c)}function u(a,b){if(!b)return a;var c=a.$$watchDelegate,d=!1,c=c!==n&&c!==m?function(c,e,f,g){f=d&&g?g[0]:a(c,e,f,g);return b(f,c,e)}:function(c,d,e,f){e=a(c,
d,e,f);c=b(e,c,d);return w(e)?c:e};a.$$watchDelegate&&a.$$watchDelegate!==l?c.$$watchDelegate=a.$$watchDelegate:b.$stateful||(c.$$watchDelegate=l,d=!a.inputs,c.inputs=a.inputs?a.inputs:[a]);return c}var R=Ba().noUnsafeEval,B={csp:R,expensiveChecks:!1,literals:pa(d),isIdentifierStart:z(c)&&c,isIdentifierContinue:z(e)&&e},r={csp:R,expensiveChecks:!0,literals:pa(d),isIdentifierStart:z(c)&&c,isIdentifierContinue:z(e)&&e},J=!1;g.$$runningExpensiveChecks=function(){return J};return g}]}function wf(){this.$get=
["$rootScope","$exceptionHandler",function(a,b){return vd(function(b){a.$evalAsync(b)},b)}]}function xf(){this.$get=["$browser","$exceptionHandler",function(a,b){return vd(function(b){a.defer(b)},b)}]}function vd(a,b){function d(){this.$$state={status:0}}function c(a,b){return function(c){b.call(a,c)}}function e(c){!c.processScheduled&&c.pending&&(c.processScheduled=!0,a(function(){var a,d,e;e=c.pending;c.processScheduled=!1;c.pending=void 0;for(var f=0,g=e.length;f<g;++f){d=e[f][0];a=e[f][c.status];
try{z(a)?d.resolve(a(c.value)):1===c.status?d.resolve(c.value):d.reject(c.value)}catch(h){d.reject(h),b(h)}}}))}function f(){this.promise=new d}var g=N("$q",TypeError),h=function(){var a=new f;a.resolve=c(a,a.resolve);a.reject=c(a,a.reject);a.notify=c(a,a.notify);return a};S(d.prototype,{then:function(a,b,c){if(y(a)&&y(b)&&y(c))return this;var d=new f;this.$$state.pending=this.$$state.pending||[];this.$$state.pending.push([d,a,b,c]);0<this.$$state.status&&e(this.$$state);return d.promise},"catch":function(a){return this.then(null,
a)},"finally":function(a,b){return this.then(function(b){return l(b,!0,a)},function(b){return l(b,!1,a)},b)}});S(f.prototype,{resolve:function(a){this.promise.$$state.status||(a===this.promise?this.$$reject(g("qcycle",a)):this.$$resolve(a))},$$resolve:function(a){function d(a){k||(k=!0,h.$$resolve(a))}function f(a){k||(k=!0,h.$$reject(a))}var g,h=this,k=!1;try{if(D(a)||z(a))g=a&&a.then;z(g)?(this.promise.$$state.status=-1,g.call(a,d,f,c(this,this.notify))):(this.promise.$$state.value=a,this.promise.$$state.status=
1,e(this.promise.$$state))}catch(l){f(l),b(l)}},reject:function(a){this.promise.$$state.status||this.$$reject(a)},$$reject:function(a){this.promise.$$state.value=a;this.promise.$$state.status=2;e(this.promise.$$state)},notify:function(c){var d=this.promise.$$state.pending;0>=this.promise.$$state.status&&d&&d.length&&a(function(){for(var a,e,f=0,g=d.length;f<g;f++){e=d[f][0];a=d[f][3];try{e.notify(z(a)?a(c):c)}catch(h){b(h)}}})}});var k=function(a,b){var c=new f;b?c.resolve(a):c.reject(a);return c.promise},
l=function(a,b,c){var d=null;try{z(c)&&(d=c())}catch(e){return k(e,!1)}return d&&z(d.then)?d.then(function(){return k(a,b)},function(a){return k(a,!1)}):k(a,b)},m=function(a,b,c,d){var e=new f;e.resolve(a);return e.promise.then(b,c,d)},n=function(a){if(!z(a))throw g("norslvr",a);var b=new f;a(function(a){b.resolve(a)},function(a){b.reject(a)});return b.promise};n.prototype=d.prototype;n.defer=h;n.reject=function(a){var b=new f;b.reject(a);return b.promise};n.when=m;n.resolve=m;n.all=function(a){var b=
new f,c=0,d=L(a)?[]:{};q(a,function(a,e){c++;m(a).then(function(a){d.hasOwnProperty(e)||(d[e]=a,--c||b.resolve(d))},function(a){d.hasOwnProperty(e)||b.reject(a)})});0===c&&b.resolve(d);return b.promise};n.race=function(a){var b=h();q(a,function(a){m(a).then(b.resolve,b.reject)});return b.promise};return n}function Gf(){this.$get=["$window","$timeout",function(a,b){var d=a.requestAnimationFrame||a.webkitRequestAnimationFrame,c=a.cancelAnimationFrame||a.webkitCancelAnimationFrame||a.webkitCancelRequestAnimationFrame,
e=!!d,f=e?function(a){var b=d(a);return function(){c(b)}}:function(a){var c=b(a,16.66,!1);return function(){b.cancel(c)}};f.supported=e;return f}]}function vf(){function a(a){function b(){this.$$watchers=this.$$nextSibling=this.$$childHead=this.$$childTail=null;this.$$listeners={};this.$$listenerCount={};this.$$watchersCount=0;this.$id=++pb;this.$$ChildScope=null}b.prototype=a;return b}var b=10,d=N("$rootScope"),c=null,e=null;this.digestTtl=function(a){arguments.length&&(b=a);return b};this.$get=
["$exceptionHandler","$parse","$browser",function(f,g,h){function k(a){a.currentScope.$$destroyed=!0}function l(a){9===Ea&&(a.$$childHead&&l(a.$$childHead),a.$$nextSibling&&l(a.$$nextSibling));a.$parent=a.$$nextSibling=a.$$prevSibling=a.$$childHead=a.$$childTail=a.$root=a.$$watchers=null}function m(){this.$id=++pb;this.$$phase=this.$parent=this.$$watchers=this.$$nextSibling=this.$$prevSibling=this.$$childHead=this.$$childTail=null;this.$root=this;this.$$destroyed=!1;this.$$listeners={};this.$$listenerCount=
{};this.$$watchersCount=0;this.$$isolateBindings=null}function n(a){if(J.$$phase)throw d("inprog",J.$$phase);J.$$phase=a}function p(a,b){do a.$$watchersCount+=b;while(a=a.$parent)}function u(a,b,c){do a.$$listenerCount[c]-=b,0===a.$$listenerCount[c]&&delete a.$$listenerCount[c];while(a=a.$parent)}function s(){}function B(){for(;t.length;)try{t.shift()()}catch(a){f(a)}e=null}function r(){null===e&&(e=h.defer(function(){J.$apply(B)}))}m.prototype={constructor:m,$new:function(b,c){var d;c=c||this;b?
(d=new m,d.$root=this.$root):(this.$$ChildScope||(this.$$ChildScope=a(this)),d=new this.$$ChildScope);d.$parent=c;d.$$prevSibling=c.$$childTail;c.$$childHead?(c.$$childTail.$$nextSibling=d,c.$$childTail=d):c.$$childHead=c.$$childTail=d;(b||c!=this)&&d.$on("$destroy",k);return d},$watch:function(a,b,d,e){var f=g(a);if(f.$$watchDelegate)return f.$$watchDelegate(this,b,d,f,a);var h=this,k=h.$$watchers,l={fn:b,last:s,get:f,exp:e||a,eq:!!d};c=null;z(b)||(l.fn=A);k||(k=h.$$watchers=[]);k.unshift(l);p(this,
1);return function(){0<=Za(k,l)&&p(h,-1);c=null}},$watchGroup:function(a,b){function c(){h=!1;k?(k=!1,b(e,e,g)):b(e,d,g)}var d=Array(a.length),e=Array(a.length),f=[],g=this,h=!1,k=!0;if(!a.length){var l=!0;g.$evalAsync(function(){l&&b(e,e,g)});return function(){l=!1}}if(1===a.length)return this.$watch(a[0],function(a,c,f){e[0]=a;d[0]=c;b(e,a===c?e:d,f)});q(a,function(a,b){var k=g.$watch(a,function(a,f){e[b]=a;d[b]=f;h||(h=!0,g.$evalAsync(c))});f.push(k)});return function(){for(;f.length;)f.shift()()}},
$watchCollection:function(a,b){function c(a){e=a;var b,d,g,h;if(!y(e)){if(D(e))if(ta(e))for(f!==n&&(f=n,u=f.length=0,l++),a=e.length,u!==a&&(l++,f.length=u=a),b=0;b<a;b++)h=f[b],g=e[b],d=h!==h&&g!==g,d||h===g||(l++,f[b]=g);else{f!==p&&(f=p={},u=0,l++);a=0;for(b in e)ua.call(e,b)&&(a++,g=e[b],h=f[b],b in f?(d=h!==h&&g!==g,d||h===g||(l++,f[b]=g)):(u++,f[b]=g,l++));if(u>a)for(b in l++,f)ua.call(e,b)||(u--,delete f[b])}else f!==e&&(f=e,l++);return l}}c.$stateful=!0;var d=this,e,f,h,k=1<b.length,l=0,m=
g(a,c),n=[],p={},r=!0,u=0;return this.$watch(m,function(){r?(r=!1,b(e,e,d)):b(e,h,d);if(k)if(D(e))if(ta(e)){h=Array(e.length);for(var a=0;a<e.length;a++)h[a]=e[a]}else for(a in h={},e)ua.call(e,a)&&(h[a]=e[a]);else h=e})},$digest:function(){var a,g,k,l,m,p,u,r,q=b,t,y=[],A,C;n("$digest");h.$$checkUrlChange();this===J&&null!==e&&(h.defer.cancel(e),B());c=null;do{r=!1;t=this;for(p=0;p<v.length;p++){try{C=v[p],C.scope.$eval(C.expression,C.locals)}catch(F){f(F)}c=null}v.length=0;a:do{if(p=t.$$watchers)for(u=
p.length;u--;)try{if(a=p[u])if(m=a.get,(g=m(t))!==(k=a.last)&&!(a.eq?na(g,k):"number"===typeof g&&"number"===typeof k&&isNaN(g)&&isNaN(k)))r=!0,c=a,a.last=a.eq?pa(g,null):g,l=a.fn,l(g,k===s?g:k,t),5>q&&(A=4-q,y[A]||(y[A]=[]),y[A].push({msg:z(a.exp)?"fn: "+(a.exp.name||a.exp.toString()):a.exp,newVal:g,oldVal:k}));else if(a===c){r=!1;break a}}catch(G){f(G)}if(!(p=t.$$watchersCount&&t.$$childHead||t!==this&&t.$$nextSibling))for(;t!==this&&!(p=t.$$nextSibling);)t=t.$parent}while(t=p);if((r||v.length)&&
!q--)throw J.$$phase=null,d("infdig",b,y);}while(r||v.length);for(J.$$phase=null;K<w.length;)try{w[K++]()}catch(D){f(D)}w.length=K=0},$destroy:function(){if(!this.$$destroyed){var a=this.$parent;this.$broadcast("$destroy");this.$$destroyed=!0;this===J&&h.$$applicationDestroyed();p(this,-this.$$watchersCount);for(var b in this.$$listenerCount)u(this,this.$$listenerCount[b],b);a&&a.$$childHead==this&&(a.$$childHead=this.$$nextSibling);a&&a.$$childTail==this&&(a.$$childTail=this.$$prevSibling);this.$$prevSibling&&
(this.$$prevSibling.$$nextSibling=this.$$nextSibling);this.$$nextSibling&&(this.$$nextSibling.$$prevSibling=this.$$prevSibling);this.$destroy=this.$digest=this.$apply=this.$evalAsync=this.$applyAsync=A;this.$on=this.$watch=this.$watchGroup=function(){return A};this.$$listeners={};this.$$nextSibling=null;l(this)}},$eval:function(a,b){return g(a)(this,b)},$evalAsync:function(a,b){J.$$phase||v.length||h.defer(function(){v.length&&J.$digest()});v.push({scope:this,expression:g(a),locals:b})},$$postDigest:function(a){w.push(a)},
$apply:function(a){try{n("$apply");try{return this.$eval(a)}finally{J.$$phase=null}}catch(b){f(b)}finally{try{J.$digest()}catch(c){throw f(c),c;}}},$applyAsync:function(a){function b(){c.$eval(a)}var c=this;a&&t.push(b);a=g(a);r()},$on:function(a,b){var c=this.$$listeners[a];c||(this.$$listeners[a]=c=[]);c.push(b);var d=this;do d.$$listenerCount[a]||(d.$$listenerCount[a]=0),d.$$listenerCount[a]++;while(d=d.$parent);var e=this;return function(){var d=c.indexOf(b);-1!==d&&(c[d]=null,u(e,1,a))}},$emit:function(a,
b){var c=[],d,e=this,g=!1,h={name:a,targetScope:e,stopPropagation:function(){g=!0},preventDefault:function(){h.defaultPrevented=!0},defaultPrevented:!1},k=$a([h],arguments,1),l,m;do{d=e.$$listeners[a]||c;h.currentScope=e;l=0;for(m=d.length;l<m;l++)if(d[l])try{d[l].apply(null,k)}catch(n){f(n)}else d.splice(l,1),l--,m--;if(g)return h.currentScope=null,h;e=e.$parent}while(e);h.currentScope=null;return h},$broadcast:function(a,b){var c=this,d=this,e={name:a,targetScope:this,preventDefault:function(){e.defaultPrevented=
!0},defaultPrevented:!1};if(!this.$$listenerCount[a])return e;for(var g=$a([e],arguments,1),h,k;c=d;){e.currentScope=c;d=c.$$listeners[a]||[];h=0;for(k=d.length;h<k;h++)if(d[h])try{d[h].apply(null,g)}catch(l){f(l)}else d.splice(h,1),h--,k--;if(!(d=c.$$listenerCount[a]&&c.$$childHead||c!==this&&c.$$nextSibling))for(;c!==this&&!(d=c.$$nextSibling);)c=c.$parent}e.currentScope=null;return e}};var J=new m,v=J.$$asyncQueue=[],w=J.$$postDigestQueue=[],t=J.$$applyAsyncQueue=[],K=0;return J}]}function ne(){var a=
/^\s*(https?|ftp|mailto|tel|file):/,b=/^\s*((https?|ftp|file|blob):|data:image\/)/;this.aHrefSanitizationWhitelist=function(b){return w(b)?(a=b,this):a};this.imgSrcSanitizationWhitelist=function(a){return w(a)?(b=a,this):b};this.$get=function(){return function(d,c){var e=c?b:a,f;f=Y(d).href;return""===f||f.match(e)?d:"unsafe:"+f}}}function og(a){if("self"===a)return a;if(G(a)){if(-1<a.indexOf("***"))throw sa("iwcard",a);a=wd(a).replace("\\*\\*",".*").replace("\\*","[^:/.?&;]*");return new RegExp("^"+
a+"$")}if(Wa(a))return new RegExp("^"+a.source+"$");throw sa("imatcher");}function xd(a){var b=[];w(a)&&q(a,function(a){b.push(og(a))});return b}function zf(){this.SCE_CONTEXTS=la;var a=["self"],b=[];this.resourceUrlWhitelist=function(b){arguments.length&&(a=xd(b));return a};this.resourceUrlBlacklist=function(a){arguments.length&&(b=xd(a));return b};this.$get=["$injector",function(d){function c(a,b){return"self"===a?id(b):!!a.exec(b.href)}function e(a){var b=function(a){this.$$unwrapTrustedValue=
function(){return a}};a&&(b.prototype=new a);b.prototype.valueOf=function(){return this.$$unwrapTrustedValue()};b.prototype.toString=function(){return this.$$unwrapTrustedValue().toString()};return b}var f=function(a){throw sa("unsafe");};d.has("$sanitize")&&(f=d.get("$sanitize"));var g=e(),h={};h[la.HTML]=e(g);h[la.CSS]=e(g);h[la.URL]=e(g);h[la.JS]=e(g);h[la.RESOURCE_URL]=e(h[la.URL]);return{trustAs:function(a,b){var c=h.hasOwnProperty(a)?h[a]:null;if(!c)throw sa("icontext",a,b);if(null===b||y(b)||
""===b)return b;if("string"!==typeof b)throw sa("itype",a);return new c(b)},getTrusted:function(d,e){if(null===e||y(e)||""===e)return e;var g=h.hasOwnProperty(d)?h[d]:null;if(g&&e instanceof g)return e.$$unwrapTrustedValue();if(d===la.RESOURCE_URL){var g=Y(e.toString()),n,p,u=!1;n=0;for(p=a.length;n<p;n++)if(c(a[n],g)){u=!0;break}if(u)for(n=0,p=b.length;n<p;n++)if(c(b[n],g)){u=!1;break}if(u)return e;throw sa("insecurl",e.toString());}if(d===la.HTML)return f(e);throw sa("unsafe");},valueOf:function(a){return a instanceof
g?a.$$unwrapTrustedValue():a}}}]}function yf(){var a=!0;this.enabled=function(b){arguments.length&&(a=!!b);return a};this.$get=["$parse","$sceDelegate",function(b,d){if(a&&8>Ea)throw sa("iequirks");var c=ia(la);c.isEnabled=function(){return a};c.trustAs=d.trustAs;c.getTrusted=d.getTrusted;c.valueOf=d.valueOf;a||(c.trustAs=c.getTrusted=function(a,b){return b},c.valueOf=Xa);c.parseAs=function(a,d){var e=b(d);return e.literal&&e.constant?e:b(d,function(b){return c.getTrusted(a,b)})};var e=c.parseAs,
f=c.getTrusted,g=c.trustAs;q(la,function(a,b){var d=Q(b);c[db("parse_as_"+d)]=function(b){return e(a,b)};c[db("get_trusted_"+d)]=function(b){return f(a,b)};c[db("trust_as_"+d)]=function(b){return g(a,b)}});return c}]}function Af(){this.$get=["$window","$document",function(a,b){var d={},c=!(a.chrome&&a.chrome.app&&a.chrome.app.runtime)&&a.history&&a.history.pushState,e=Z((/android (\d+)/.exec(Q((a.navigator||{}).userAgent))||[])[1]),f=/Boxee/i.test((a.navigator||{}).userAgent),g=b[0]||{},h,k=/^(Moz|webkit|ms)(?=[A-Z])/,
l=g.body&&g.body.style,m=!1,n=!1;if(l){for(var p in l)if(m=k.exec(p)){h=m[0];h=h[0].toUpperCase()+h.substr(1);break}h||(h="WebkitOpacity"in l&&"webkit");m=!!("transition"in l||h+"Transition"in l);n=!!("animation"in l||h+"Animation"in l);!e||m&&n||(m=G(l.webkitTransition),n=G(l.webkitAnimation))}return{history:!(!c||4>e||f),hasEvent:function(a){if("input"===a&&11>=Ea)return!1;if(y(d[a])){var b=g.createElement("div");d[a]="on"+a in b}return d[a]},csp:Ba(),vendorPrefix:h,transitions:m,animations:n,android:e}}]}
function Cf(){var a;this.httpOptions=function(b){return b?(a=b,this):a};this.$get=["$templateCache","$http","$q","$sce",function(b,d,c,e){function f(g,h){f.totalPendingRequests++;if(!G(g)||y(b.get(g)))g=e.getTrustedResourceUrl(g);var k=d.defaults&&d.defaults.transformResponse;L(k)?k=k.filter(function(a){return a!==dc}):k===dc&&(k=null);return d.get(g,S({cache:b,transformResponse:k},a))["finally"](function(){f.totalPendingRequests--}).then(function(a){b.put(g,a.data);return a.data},function(a){if(!h)throw pg("tpload",
g,a.status,a.statusText);return c.reject(a)})}f.totalPendingRequests=0;return f}]}function Df(){this.$get=["$rootScope","$browser","$location",function(a,b,d){return{findBindings:function(a,b,d){a=a.getElementsByClassName("ng-binding");var g=[];q(a,function(a){var c=ca.element(a).data("$binding");c&&q(c,function(c){d?(new RegExp("(^|\\s)"+wd(b)+"(\\s|\\||$)")).test(c)&&g.push(a):-1!=c.indexOf(b)&&g.push(a)})});return g},findModels:function(a,b,d){for(var g=["ng-","data-ng-","ng\\:"],h=0;h<g.length;++h){var k=
a.querySelectorAll("["+g[h]+"model"+(d?"=":"*=")+'"'+b+'"]');if(k.length)return k}},getLocation:function(){return d.url()},setLocation:function(b){b!==d.url()&&(d.url(b),a.$digest())},whenStable:function(a){b.notifyWhenNoOutstandingRequests(a)}}}]}function Ef(){this.$get=["$rootScope","$browser","$q","$$q","$exceptionHandler",function(a,b,d,c,e){function f(f,k,l){z(f)||(l=k,k=f,f=A);var m=va.call(arguments,3),n=w(l)&&!l,p=(n?c:d).defer(),u=p.promise,q;q=b.defer(function(){try{p.resolve(f.apply(null,
m))}catch(b){p.reject(b),e(b)}finally{delete g[u.$$timeoutId]}n||a.$apply()},k);u.$$timeoutId=q;g[q]=p;return u}var g={};f.cancel=function(a){return a&&a.$$timeoutId in g?(g[a.$$timeoutId].reject("canceled"),delete g[a.$$timeoutId],b.defer.cancel(a.$$timeoutId)):!1};return f}]}function Y(a){Ea&&($.setAttribute("href",a),a=$.href);$.setAttribute("href",a);return{href:$.href,protocol:$.protocol?$.protocol.replace(/:$/,""):"",host:$.host,search:$.search?$.search.replace(/^\?/,""):"",hash:$.hash?$.hash.replace(/^#/,
""):"",hostname:$.hostname,port:$.port,pathname:"/"===$.pathname.charAt(0)?$.pathname:"/"+$.pathname}}function id(a){a=G(a)?Y(a):a;return a.protocol===yd.protocol&&a.host===yd.host}function Ff(){this.$get=ha(C)}function zd(a){function b(a){try{return decodeURIComponent(a)}catch(b){return a}}var d=a[0]||{},c={},e="";return function(){var a,g,h,k,l;a=d.cookie||"";if(a!==e)for(e=a,a=e.split("; "),c={},h=0;h<a.length;h++)g=a[h],k=g.indexOf("="),0<k&&(l=b(g.substring(0,k)),y(c[l])&&(c[l]=b(g.substring(k+
1))));return c}}function Jf(){this.$get=zd}function Mc(a){function b(d,c){if(D(d)){var e={};q(d,function(a,c){e[c]=b(c,a)});return e}return a.factory(d+"Filter",c)}this.register=b;this.$get=["$injector",function(a){return function(b){return a.get(b+"Filter")}}];b("currency",Ad);b("date",Bd);b("filter",qg);b("json",rg);b("limitTo",sg);b("lowercase",tg);b("number",Cd);b("orderBy",Dd);b("uppercase",ug)}function qg(){return function(a,b,d,c){if(!ta(a)){if(null==a)return a;throw N("filter")("notarray",
a);}c=c||"$";var e;switch(lc(b)){case "function":break;case "boolean":case "null":case "number":case "string":e=!0;case "object":b=vg(b,d,c,e);break;default:return a}return Array.prototype.filter.call(a,b)}}function vg(a,b,d,c){var e=D(a)&&d in a;!0===b?b=na:z(b)||(b=function(a,b){if(y(a))return!1;if(null===a||null===b)return a===b;if(D(b)||D(a)&&!vc(a))return!1;a=Q(""+a);b=Q(""+b);return-1!==a.indexOf(b)});return function(f){return e&&!D(f)?La(f,a[d],b,d,!1):La(f,a,b,d,c)}}function La(a,b,d,c,e,
f){var g=lc(a),h=lc(b);if("string"===h&&"!"===b.charAt(0))return!La(a,b.substring(1),d,c,e);if(L(a))return a.some(function(a){return La(a,b,d,c,e)});switch(g){case "object":var k;if(e){for(k in a)if("$"!==k.charAt(0)&&La(a[k],b,d,c,!0))return!0;return f?!1:La(a,b,d,c,!1)}if("object"===h){for(k in b)if(f=b[k],!z(f)&&!y(f)&&(g=k===c,!La(g?a:a[k],f,d,c,g,g)))return!1;return!0}return d(a,b);case "function":return!1;default:return d(a,b)}}function lc(a){return null===a?"null":typeof a}function Ad(a){var b=
a.NUMBER_FORMATS;return function(a,c,e){y(c)&&(c=b.CURRENCY_SYM);y(e)&&(e=b.PATTERNS[1].maxFrac);return null==a?a:Ed(a,b.PATTERNS[1],b.GROUP_SEP,b.DECIMAL_SEP,e).replace(/\u00A4/g,c)}}function Cd(a){var b=a.NUMBER_FORMATS;return function(a,c){return null==a?a:Ed(a,b.PATTERNS[0],b.GROUP_SEP,b.DECIMAL_SEP,c)}}function wg(a){var b=0,d,c,e,f,g;-1<(c=a.indexOf(Fd))&&(a=a.replace(Fd,""));0<(e=a.search(/e/i))?(0>c&&(c=e),c+=+a.slice(e+1),a=a.substring(0,e)):0>c&&(c=a.length);for(e=0;a.charAt(e)==mc;e++);
if(e==(g=a.length))d=[0],c=1;else{for(g--;a.charAt(g)==mc;)g--;c-=e;d=[];for(f=0;e<=g;e++,f++)d[f]=+a.charAt(e)}c>Gd&&(d=d.splice(0,Gd-1),b=c-1,c=1);return{d:d,e:b,i:c}}function xg(a,b,d,c){var e=a.d,f=e.length-a.i;b=y(b)?Math.min(Math.max(d,f),c):+b;d=b+a.i;c=e[d];if(0<d){e.splice(Math.max(a.i,d));for(var g=d;g<e.length;g++)e[g]=0}else for(f=Math.max(0,f),a.i=1,e.length=Math.max(1,d=b+1),e[0]=0,g=1;g<d;g++)e[g]=0;if(5<=c)if(0>d-1){for(c=0;c>d;c--)e.unshift(0),a.i++;e.unshift(1);a.i++}else e[d-1]++;
for(;f<Math.max(0,b);f++)e.push(0);if(b=e.reduceRight(function(a,b,c,d){b+=a;d[c]=b%10;return Math.floor(b/10)},0))e.unshift(b),a.i++}function Ed(a,b,d,c,e){if(!G(a)&&!T(a)||isNaN(a))return"";var f=!isFinite(a),g=!1,h=Math.abs(a)+"",k="";if(f)k="\u221e";else{g=wg(h);xg(g,e,b.minFrac,b.maxFrac);k=g.d;h=g.i;e=g.e;f=[];for(g=k.reduce(function(a,b){return a&&!b},!0);0>h;)k.unshift(0),h++;0<h?f=k.splice(h,k.length):(f=k,k=[0]);h=[];for(k.length>=b.lgSize&&h.unshift(k.splice(-b.lgSize,k.length).join(""));k.length>
b.gSize;)h.unshift(k.splice(-b.gSize,k.length).join(""));k.length&&h.unshift(k.join(""));k=h.join(d);f.length&&(k+=c+f.join(""));e&&(k+="e+"+e)}return 0>a&&!g?b.negPre+k+b.negSuf:b.posPre+k+b.posSuf}function Kb(a,b,d,c){var e="";if(0>a||c&&0>=a)c?a=-a+1:(a=-a,e="-");for(a=""+a;a.length<b;)a=mc+a;d&&(a=a.substr(a.length-b));return e+a}function ba(a,b,d,c,e){d=d||0;return function(f){f=f["get"+a]();if(0<d||f>-d)f+=d;0===f&&-12==d&&(f=12);return Kb(f,b,c,e)}}function kb(a,b,d){return function(c,e){var f=
c["get"+a](),g=ub((d?"STANDALONE":"")+(b?"SHORT":"")+a);return e[g][f]}}function Hd(a){var b=(new Date(a,0,1)).getDay();return new Date(a,0,(4>=b?5:12)-b)}function Id(a){return function(b){var d=Hd(b.getFullYear());b=+new Date(b.getFullYear(),b.getMonth(),b.getDate()+(4-b.getDay()))-+d;b=1+Math.round(b/6048E5);return Kb(b,a)}}function nc(a,b){return 0>=a.getFullYear()?b.ERAS[0]:b.ERAS[1]}function Bd(a){function b(a){var b;if(b=a.match(d)){a=new Date(0);var f=0,g=0,h=b[8]?a.setUTCFullYear:a.setFullYear,
k=b[8]?a.setUTCHours:a.setHours;b[9]&&(f=Z(b[9]+b[10]),g=Z(b[9]+b[11]));h.call(a,Z(b[1]),Z(b[2])-1,Z(b[3]));f=Z(b[4]||0)-f;g=Z(b[5]||0)-g;h=Z(b[6]||0);b=Math.round(1E3*parseFloat("0."+(b[7]||0)));k.call(a,f,g,h,b)}return a}var d=/^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;return function(c,d,f){var g="",h=[],k,l;d=d||"mediumDate";d=a.DATETIME_FORMATS[d]||d;G(c)&&(c=yg.test(c)?Z(c):b(c));T(c)&&(c=new Date(c));if(!da(c)||!isFinite(c.getTime()))return c;
for(;d;)(l=zg.exec(d))?(h=$a(h,l,1),d=h.pop()):(h.push(d),d=null);var m=c.getTimezoneOffset();f&&(m=yc(f,m),c=Sb(c,f,!0));q(h,function(b){k=Ag[b];g+=k?k(c,a.DATETIME_FORMATS,m):"''"===b?"'":b.replace(/(^'|'$)/g,"").replace(/''/g,"'")});return g}}function rg(){return function(a,b){y(b)&&(b=2);return bb(a,b)}}function sg(){return function(a,b,d){b=Infinity===Math.abs(Number(b))?Number(b):Z(b);if(isNaN(b))return a;T(a)&&(a=a.toString());if(!ta(a))return a;d=!d||isNaN(d)?0:Z(d);d=0>d?Math.max(0,a.length+
d):d;return 0<=b?oc(a,d,d+b):0===d?oc(a,b,a.length):oc(a,Math.max(0,d+b),d)}}function oc(a,b,d){return G(a)?a.slice(b,d):va.call(a,b,d)}function Dd(a){function b(b){return b.map(function(b){var c=1,d=Xa;if(z(b))d=b;else if(G(b)){if("+"==b.charAt(0)||"-"==b.charAt(0))c="-"==b.charAt(0)?-1:1,b=b.substring(1);if(""!==b&&(d=a(b),d.constant))var e=d(),d=function(a){return a[e]}}return{get:d,descending:c}})}function d(a){switch(typeof a){case "number":case "boolean":case "string":return!0;default:return!1}}
function c(a,b){var c=0,d=a.type,k=b.type;if(d===k){var k=a.value,l=b.value;"string"===d?(k=k.toLowerCase(),l=l.toLowerCase()):"object"===d&&(D(k)&&(k=a.index),D(l)&&(l=b.index));k!==l&&(c=k<l?-1:1)}else c=d<k?-1:1;return c}return function(a,f,g,h){if(null==a)return a;if(!ta(a))throw N("orderBy")("notarray",a);L(f)||(f=[f]);0===f.length&&(f=["+"]);var k=b(f),l=g?-1:1,m=z(h)?h:c;a=Array.prototype.map.call(a,function(a,b){return{value:a,tieBreaker:{value:b,type:"number",index:b},predicateValues:k.map(function(c){var e=
c.get(a);c=typeof e;if(null===e)c="string",e="null";else if("object"===c)a:{if(z(e.valueOf)&&(e=e.valueOf(),d(e)))break a;vc(e)&&(e=e.toString(),d(e))}return{value:e,type:c,index:b}})}});a.sort(function(a,b){for(var c=0,d=k.length;c<d;c++){var e=m(a.predicateValues[c],b.predicateValues[c]);if(e)return e*k[c].descending*l}return m(a.tieBreaker,b.tieBreaker)*l});return a=a.map(function(a){return a.value})}}function Ta(a){z(a)&&(a={link:a});a.restrict=a.restrict||"AC";return ha(a)}function Jd(a,b,d,
c,e){var f=this,g=[];f.$error={};f.$$success={};f.$pending=void 0;f.$name=e(b.name||b.ngForm||"")(d);f.$dirty=!1;f.$pristine=!0;f.$valid=!0;f.$invalid=!1;f.$submitted=!1;f.$$parentForm=Lb;f.$rollbackViewValue=function(){q(g,function(a){a.$rollbackViewValue()})};f.$commitViewValue=function(){q(g,function(a){a.$commitViewValue()})};f.$addControl=function(a){Qa(a.$name,"input");g.push(a);a.$name&&(f[a.$name]=a);a.$$parentForm=f};f.$$renameControl=function(a,b){var c=a.$name;f[c]===a&&delete f[c];f[b]=
a;a.$name=b};f.$removeControl=function(a){a.$name&&f[a.$name]===a&&delete f[a.$name];q(f.$pending,function(b,c){f.$setValidity(c,null,a)});q(f.$error,function(b,c){f.$setValidity(c,null,a)});q(f.$$success,function(b,c){f.$setValidity(c,null,a)});Za(g,a);a.$$parentForm=Lb};Kd({ctrl:this,$element:a,set:function(a,b,c){var d=a[b];d?-1===d.indexOf(c)&&d.push(c):a[b]=[c]},unset:function(a,b,c){var d=a[b];d&&(Za(d,c),0===d.length&&delete a[b])},$animate:c});f.$setDirty=function(){c.removeClass(a,Ua);c.addClass(a,
Mb);f.$dirty=!0;f.$pristine=!1;f.$$parentForm.$setDirty()};f.$setPristine=function(){c.setClass(a,Ua,Mb+" ng-submitted");f.$dirty=!1;f.$pristine=!0;f.$submitted=!1;q(g,function(a){a.$setPristine()})};f.$setUntouched=function(){q(g,function(a){a.$setUntouched()})};f.$setSubmitted=function(){c.addClass(a,"ng-submitted");f.$submitted=!0;f.$$parentForm.$setSubmitted()}}function pc(a){a.$formatters.push(function(b){return a.$isEmpty(b)?b:b.toString()})}function lb(a,b,d,c,e,f){var g=Q(b[0].type);if(!e.android){var h=
!1;b.on("compositionstart",function(){h=!0});b.on("compositionend",function(){h=!1;l()})}var k,l=function(a){k&&(f.defer.cancel(k),k=null);if(!h){var e=b.val();a=a&&a.type;"password"===g||d.ngTrim&&"false"===d.ngTrim||(e=W(e));(c.$viewValue!==e||""===e&&c.$$hasNativeValidators)&&c.$setViewValue(e,a)}};if(e.hasEvent("input"))b.on("input",l);else{var m=function(a,b,c){k||(k=f.defer(function(){k=null;b&&b.value===c||l(a)}))};b.on("keydown",function(a){var b=a.keyCode;91===b||15<b&&19>b||37<=b&&40>=b||
m(a,this,this.value)});if(e.hasEvent("paste"))b.on("paste cut",m)}b.on("change",l);if(Ld[g]&&c.$$hasNativeValidators&&g===d.type)b.on("keydown wheel mousedown",function(a){if(!k){var b=this.validity,c=b.badInput,d=b.typeMismatch;k=f.defer(function(){k=null;b.badInput===c&&b.typeMismatch===d||l(a)})}});c.$render=function(){var a=c.$isEmpty(c.$viewValue)?"":c.$viewValue;b.val()!==a&&b.val(a)}}function Nb(a,b){return function(d,c){var e,f;if(da(d))return d;if(G(d)){'"'==d.charAt(0)&&'"'==d.charAt(d.length-
1)&&(d=d.substring(1,d.length-1));if(Bg.test(d))return new Date(d);a.lastIndex=0;if(e=a.exec(d))return e.shift(),f=c?{yyyy:c.getFullYear(),MM:c.getMonth()+1,dd:c.getDate(),HH:c.getHours(),mm:c.getMinutes(),ss:c.getSeconds(),sss:c.getMilliseconds()/1E3}:{yyyy:1970,MM:1,dd:1,HH:0,mm:0,ss:0,sss:0},q(e,function(a,c){c<b.length&&(f[b[c]]=+a)}),new Date(f.yyyy,f.MM-1,f.dd,f.HH,f.mm,f.ss||0,1E3*f.sss||0)}return NaN}}function mb(a,b,d,c){return function(e,f,g,h,k,l,m){function n(a){return a&&!(a.getTime&&
a.getTime()!==a.getTime())}function p(a){return w(a)&&!da(a)?d(a)||void 0:a}Md(e,f,g,h);lb(e,f,g,h,k,l);var u=h&&h.$options&&h.$options.timezone,q;h.$$parserName=a;h.$parsers.push(function(a){if(h.$isEmpty(a))return null;if(b.test(a))return a=d(a,q),u&&(a=Sb(a,u)),a});h.$formatters.push(function(a){if(a&&!da(a))throw nb("datefmt",a);if(n(a))return(q=a)&&u&&(q=Sb(q,u,!0)),m("date")(a,c,u);q=null;return""});if(w(g.min)||g.ngMin){var s;h.$validators.min=function(a){return!n(a)||y(s)||d(a)>=s};g.$observe("min",
function(a){s=p(a);h.$validate()})}if(w(g.max)||g.ngMax){var r;h.$validators.max=function(a){return!n(a)||y(r)||d(a)<=r};g.$observe("max",function(a){r=p(a);h.$validate()})}}}function Md(a,b,d,c){(c.$$hasNativeValidators=D(b[0].validity))&&c.$parsers.push(function(a){var c=b.prop("validity")||{};return c.badInput||c.typeMismatch?void 0:a})}function Nd(a,b,d,c,e){if(w(c)){a=a(c);if(!a.constant)throw nb("constexpr",d,c);return a(b)}return e}function qc(a,b){a="ngClass"+a;return["$animate",function(d){function c(a,
b){var c=[],d=0;a:for(;d<a.length;d++){for(var e=a[d],m=0;m<b.length;m++)if(e==b[m])continue a;c.push(e)}return c}function e(a){var b=[];return L(a)?(q(a,function(a){b=b.concat(e(a))}),b):G(a)?a.split(" "):D(a)?(q(a,function(a,c){a&&(b=b.concat(c.split(" ")))}),b):a}return{restrict:"AC",link:function(f,g,h){function k(a){a=l(a,1);h.$addClass(a)}function l(a,b){var c=g.data("$classCounts")||U(),d=[];q(a,function(a){if(0<b||c[a])c[a]=(c[a]||0)+b,c[a]===+(0<b)&&d.push(a)});g.data("$classCounts",c);return d.join(" ")}
function m(a,b){var e=c(b,a),f=c(a,b),e=l(e,1),f=l(f,-1);e&&e.length&&d.addClass(g,e);f&&f.length&&d.removeClass(g,f)}function n(a){if(!0===b||(f.$index&1)===b){var c=e(a||[]);if(!p)k(c);else if(!na(a,p)){var d=e(p);m(d,c)}}p=L(a)?a.map(function(a){return ia(a)}):ia(a)}var p;f.$watch(h[a],n,!0);h.$observe("class",function(b){n(f.$eval(h[a]))});"ngClass"!==a&&f.$watch("$index",function(c,d){var g=c&1;if(g!==(d&1)){var m=e(f.$eval(h[a]));g===b?k(m):(g=l(m,-1),h.$removeClass(g))}})}}}]}function Kd(a){function b(a,
b){b&&!f[a]?(k.addClass(e,a),f[a]=!0):!b&&f[a]&&(k.removeClass(e,a),f[a]=!1)}function d(a,c){a=a?"-"+Cc(a,"-"):"";b(ob+a,!0===c);b(Od+a,!1===c)}var c=a.ctrl,e=a.$element,f={},g=a.set,h=a.unset,k=a.$animate;f[Od]=!(f[ob]=e.hasClass(ob));c.$setValidity=function(a,e,f){y(e)?(c.$pending||(c.$pending={}),g(c.$pending,a,f)):(c.$pending&&h(c.$pending,a,f),Pd(c.$pending)&&(c.$pending=void 0));Ga(e)?e?(h(c.$error,a,f),g(c.$$success,a,f)):(g(c.$error,a,f),h(c.$$success,a,f)):(h(c.$error,a,f),h(c.$$success,
a,f));c.$pending?(b(Qd,!0),c.$valid=c.$invalid=void 0,d("",null)):(b(Qd,!1),c.$valid=Pd(c.$error),c.$invalid=!c.$valid,d("",c.$valid));e=c.$pending&&c.$pending[a]?void 0:c.$error[a]?!1:c.$$success[a]?!0:null;d(a,e);c.$$parentForm.$setValidity(a,e,c)}}function Pd(a){if(a)for(var b in a)if(a.hasOwnProperty(b))return!1;return!0}var Cg=/^\/(.+)\/([a-z]*)$/,ua=Object.prototype.hasOwnProperty,Q=function(a){return G(a)?a.toLowerCase():a},ub=function(a){return G(a)?a.toUpperCase():a},Ea,F,qa,va=[].slice,
bg=[].splice,Dg=[].push,ma=Object.prototype.toString,wc=Object.getPrototypeOf,xa=N("ng"),ca=C.angular||(C.angular={}),Ub,pb=0;Ea=C.document.documentMode;A.$inject=[];Xa.$inject=[];var L=Array.isArray,ae=/^\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array\]$/,W=function(a){return G(a)?a.trim():a},wd=function(a){return a.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08")},Ba=function(){if(!w(Ba.rules)){var a=C.document.querySelector("[ng-csp]")||
C.document.querySelector("[data-ng-csp]");if(a){var b=a.getAttribute("ng-csp")||a.getAttribute("data-ng-csp");Ba.rules={noUnsafeEval:!b||-1!==b.indexOf("no-unsafe-eval"),noInlineStyle:!b||-1!==b.indexOf("no-inline-style")}}else{a=Ba;try{new Function(""),b=!1}catch(d){b=!0}a.rules={noUnsafeEval:b,noInlineStyle:!1}}}return Ba.rules},rb=function(){if(w(rb.name_))return rb.name_;var a,b,d=Na.length,c,e;for(b=0;b<d;++b)if(c=Na[b],a=C.document.querySelector("["+c.replace(":","\\:")+"jq]")){e=a.getAttribute(c+
"jq");break}return rb.name_=e},de=/:/g,Na=["ng-","data-ng-","ng:","x-ng-"],ie=/[A-Z]/g,Dc=!1,Ma=3,me={full:"1.5.8",major:1,minor:5,dot:8,codeName:"arbitrary-fallbacks"};O.expando="ng339";var fb=O.cache={},Pf=1;O._data=function(a){return this.cache[a[this.expando]]||{}};var Kf=/([\:\-\_]+(.))/g,Lf=/^moz([A-Z])/,yb={mouseleave:"mouseout",mouseenter:"mouseover"},Wb=N("jqLite"),Of=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,Vb=/<|&#?\w+;/,Mf=/<([\w:-]+)/,Nf=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,
ja={option:[1,'<select multiple="multiple">',"</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};ja.optgroup=ja.option;ja.tbody=ja.tfoot=ja.colgroup=ja.caption=ja.thead;ja.th=ja.td;var Uf=C.Node.prototype.contains||function(a){return!!(this.compareDocumentPosition(a)&16)},Oa=O.prototype={ready:function(a){function b(){d||(d=!0,a())}var d=!1;"complete"===
C.document.readyState?C.setTimeout(b):(this.on("DOMContentLoaded",b),O(C).on("load",b))},toString:function(){var a=[];q(this,function(b){a.push(""+b)});return"["+a.join(", ")+"]"},eq:function(a){return 0<=a?F(this[a]):F(this[this.length+a])},length:0,push:Dg,sort:[].sort,splice:[].splice},Eb={};q("multiple selected checked disabled readOnly required open".split(" "),function(a){Eb[Q(a)]=a});var Vc={};q("input select option textarea button form details".split(" "),function(a){Vc[a]=!0});var bd={ngMinlength:"minlength",
ngMaxlength:"maxlength",ngMin:"min",ngMax:"max",ngPattern:"pattern"};q({data:Yb,removeData:eb,hasData:function(a){for(var b in fb[a.ng339])return!0;return!1},cleanData:function(a){for(var b=0,d=a.length;b<d;b++)eb(a[b])}},function(a,b){O[b]=a});q({data:Yb,inheritedData:Cb,scope:function(a){return F.data(a,"$scope")||Cb(a.parentNode||a,["$isolateScope","$scope"])},isolateScope:function(a){return F.data(a,"$isolateScope")||F.data(a,"$isolateScopeNoTemplate")},controller:Sc,injector:function(a){return Cb(a,
"$injector")},removeAttr:function(a,b){a.removeAttribute(b)},hasClass:zb,css:function(a,b,d){b=db(b);if(w(d))a.style[b]=d;else return a.style[b]},attr:function(a,b,d){var c=a.nodeType;if(c!==Ma&&2!==c&&8!==c)if(c=Q(b),Eb[c])if(w(d))d?(a[b]=!0,a.setAttribute(b,c)):(a[b]=!1,a.removeAttribute(c));else return a[b]||(a.attributes.getNamedItem(b)||A).specified?c:void 0;else if(w(d))a.setAttribute(b,d);else if(a.getAttribute)return a=a.getAttribute(b,2),null===a?void 0:a},prop:function(a,b,d){if(w(d))a[b]=
d;else return a[b]},text:function(){function a(a,d){if(y(d)){var c=a.nodeType;return 1===c||c===Ma?a.textContent:""}a.textContent=d}a.$dv="";return a}(),val:function(a,b){if(y(b)){if(a.multiple&&"select"===wa(a)){var d=[];q(a.options,function(a){a.selected&&d.push(a.value||a.text)});return 0===d.length?null:d}return a.value}a.value=b},html:function(a,b){if(y(b))return a.innerHTML;wb(a,!0);a.innerHTML=b},empty:Tc},function(a,b){O.prototype[b]=function(b,c){var e,f,g=this.length;if(a!==Tc&&y(2==a.length&&
a!==zb&&a!==Sc?b:c)){if(D(b)){for(e=0;e<g;e++)if(a===Yb)a(this[e],b);else for(f in b)a(this[e],f,b[f]);return this}e=a.$dv;g=y(e)?Math.min(g,1):g;for(f=0;f<g;f++){var h=a(this[f],b,c);e=e?e+h:h}return e}for(e=0;e<g;e++)a(this[e],b,c);return this}});q({removeData:eb,on:function(a,b,d,c){if(w(c))throw Wb("onargs");if(Nc(a)){c=xb(a,!0);var e=c.events,f=c.handle;f||(f=c.handle=Rf(a,e));c=0<=b.indexOf(" ")?b.split(" "):[b];for(var g=c.length,h=function(b,c,g){var h=e[b];h||(h=e[b]=[],h.specialHandlerWrapper=
c,"$destroy"===b||g||a.addEventListener(b,f,!1));h.push(d)};g--;)b=c[g],yb[b]?(h(yb[b],Tf),h(b,void 0,!0)):h(b)}},off:Rc,one:function(a,b,d){a=F(a);a.on(b,function e(){a.off(b,d);a.off(b,e)});a.on(b,d)},replaceWith:function(a,b){var d,c=a.parentNode;wb(a);q(new O(b),function(b){d?c.insertBefore(b,d.nextSibling):c.replaceChild(b,a);d=b})},children:function(a){var b=[];q(a.childNodes,function(a){1===a.nodeType&&b.push(a)});return b},contents:function(a){return a.contentDocument||a.childNodes||[]},append:function(a,
b){var d=a.nodeType;if(1===d||11===d){b=new O(b);for(var d=0,c=b.length;d<c;d++)a.appendChild(b[d])}},prepend:function(a,b){if(1===a.nodeType){var d=a.firstChild;q(new O(b),function(b){a.insertBefore(b,d)})}},wrap:function(a,b){Pc(a,F(b).eq(0).clone()[0])},remove:Db,detach:function(a){Db(a,!0)},after:function(a,b){var d=a,c=a.parentNode;b=new O(b);for(var e=0,f=b.length;e<f;e++){var g=b[e];c.insertBefore(g,d.nextSibling);d=g}},addClass:Bb,removeClass:Ab,toggleClass:function(a,b,d){b&&q(b.split(" "),
function(b){var e=d;y(e)&&(e=!zb(a,b));(e?Bb:Ab)(a,b)})},parent:function(a){return(a=a.parentNode)&&11!==a.nodeType?a:null},next:function(a){return a.nextElementSibling},find:function(a,b){return a.getElementsByTagName?a.getElementsByTagName(b):[]},clone:Xb,triggerHandler:function(a,b,d){var c,e,f=b.type||b,g=xb(a);if(g=(g=g&&g.events)&&g[f])c={preventDefault:function(){this.defaultPrevented=!0},isDefaultPrevented:function(){return!0===this.defaultPrevented},stopImmediatePropagation:function(){this.immediatePropagationStopped=
!0},isImmediatePropagationStopped:function(){return!0===this.immediatePropagationStopped},stopPropagation:A,type:f,target:a},b.type&&(c=S(c,b)),b=ia(g),e=d?[c].concat(d):[c],q(b,function(b){c.isImmediatePropagationStopped()||b.apply(a,e)})}},function(a,b){O.prototype[b]=function(b,c,e){for(var f,g=0,h=this.length;g<h;g++)y(f)?(f=a(this[g],b,c,e),w(f)&&(f=F(f))):Qc(f,a(this[g],b,c,e));return w(f)?f:this};O.prototype.bind=O.prototype.on;O.prototype.unbind=O.prototype.off});Ra.prototype={put:function(a,
b){this[Ca(a,this.nextUid)]=b},get:function(a){return this[Ca(a,this.nextUid)]},remove:function(a){var b=this[a=Ca(a,this.nextUid)];delete this[a];return b}};var If=[function(){this.$get=[function(){return Ra}]}],Wf=/^([^\(]+?)=>/,Xf=/^[^\(]*\(\s*([^\)]*)\)/m,Eg=/,/,Fg=/^\s*(_?)(\S+?)\1\s*$/,Vf=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg,Ha=N("$injector");cb.$$annotate=function(a,b,d){var c;if("function"===typeof a){if(!(c=a.$inject)){c=[];if(a.length){if(b)throw G(d)&&d||(d=a.name||Yf(a)),Ha("strictdi",d);
b=Wc(a);q(b[1].split(Eg),function(a){a.replace(Fg,function(a,b,d){c.push(d)})})}a.$inject=c}}else L(a)?(b=a.length-1,Pa(a[b],"fn"),c=a.slice(0,b)):Pa(a,"fn",!0);return c};var Rd=N("$animate"),$e=function(){this.$get=A},af=function(){var a=new Ra,b=[];this.$get=["$$AnimateRunner","$rootScope",function(d,c){function e(a,b,c){var d=!1;b&&(b=G(b)?b.split(" "):L(b)?b:[],q(b,function(b){b&&(d=!0,a[b]=c)}));return d}function f(){q(b,function(b){var c=a.get(b);if(c){var d=Zf(b.attr("class")),e="",f="";q(c,
function(a,b){a!==!!d[b]&&(a?e+=(e.length?" ":"")+b:f+=(f.length?" ":"")+b)});q(b,function(a){e&&Bb(a,e);f&&Ab(a,f)});a.remove(b)}});b.length=0}return{enabled:A,on:A,off:A,pin:A,push:function(g,h,k,l){l&&l();k=k||{};k.from&&g.css(k.from);k.to&&g.css(k.to);if(k.addClass||k.removeClass)if(h=k.addClass,l=k.removeClass,k=a.get(g)||{},h=e(k,h,!0),l=e(k,l,!1),h||l)a.put(g,k),b.push(g),1===b.length&&c.$$postDigest(f);g=new d;g.complete();return g}}}]},Ye=["$provide",function(a){var b=this;this.$$registeredAnimations=
Object.create(null);this.register=function(d,c){if(d&&"."!==d.charAt(0))throw Rd("notcsel",d);var e=d+"-animation";b.$$registeredAnimations[d.substr(1)]=e;a.factory(e,c)};this.classNameFilter=function(a){if(1===arguments.length&&(this.$$classNameFilter=a instanceof RegExp?a:null)&&/(\s+|\/)ng-animate(\s+|\/)/.test(this.$$classNameFilter.toString()))throw Rd("nongcls","ng-animate");return this.$$classNameFilter};this.$get=["$$animateQueue",function(a){function b(a,c,d){if(d){var h;a:{for(h=0;h<d.length;h++){var k=
d[h];if(1===k.nodeType){h=k;break a}}h=void 0}!h||h.parentNode||h.previousElementSibling||(d=null)}d?d.after(a):c.prepend(a)}return{on:a.on,off:a.off,pin:a.pin,enabled:a.enabled,cancel:function(a){a.end&&a.end()},enter:function(e,f,g,h){f=f&&F(f);g=g&&F(g);f=f||g.parent();b(e,f,g);return a.push(e,"enter",Ia(h))},move:function(e,f,g,h){f=f&&F(f);g=g&&F(g);f=f||g.parent();b(e,f,g);return a.push(e,"move",Ia(h))},leave:function(b,c){return a.push(b,"leave",Ia(c),function(){b.remove()})},addClass:function(b,
c,g){g=Ia(g);g.addClass=gb(g.addclass,c);return a.push(b,"addClass",g)},removeClass:function(b,c,g){g=Ia(g);g.removeClass=gb(g.removeClass,c);return a.push(b,"removeClass",g)},setClass:function(b,c,g,h){h=Ia(h);h.addClass=gb(h.addClass,c);h.removeClass=gb(h.removeClass,g);return a.push(b,"setClass",h)},animate:function(b,c,g,h,k){k=Ia(k);k.from=k.from?S(k.from,c):c;k.to=k.to?S(k.to,g):g;k.tempClasses=gb(k.tempClasses,h||"ng-inline-animate");return a.push(b,"animate",k)}}}]}],cf=function(){this.$get=
["$$rAF",function(a){function b(b){d.push(b);1<d.length||a(function(){for(var a=0;a<d.length;a++)d[a]();d=[]})}var d=[];return function(){var a=!1;b(function(){a=!0});return function(d){a?d():b(d)}}}]},bf=function(){this.$get=["$q","$sniffer","$$animateAsyncRun","$document","$timeout",function(a,b,d,c,e){function f(a){this.setHost(a);var b=d();this._doneCallbacks=[];this._tick=function(a){var d=c[0];d&&d.hidden?e(a,0,!1):b(a)};this._state=0}f.chain=function(a,b){function c(){if(d===a.length)b(!0);
else a[d](function(a){!1===a?b(!1):(d++,c())})}var d=0;c()};f.all=function(a,b){function c(f){e=e&&f;++d===a.length&&b(e)}var d=0,e=!0;q(a,function(a){a.done(c)})};f.prototype={setHost:function(a){this.host=a||{}},done:function(a){2===this._state?a():this._doneCallbacks.push(a)},progress:A,getPromise:function(){if(!this.promise){var b=this;this.promise=a(function(a,c){b.done(function(b){!1===b?c():a()})})}return this.promise},then:function(a,b){return this.getPromise().then(a,b)},"catch":function(a){return this.getPromise()["catch"](a)},
"finally":function(a){return this.getPromise()["finally"](a)},pause:function(){this.host.pause&&this.host.pause()},resume:function(){this.host.resume&&this.host.resume()},end:function(){this.host.end&&this.host.end();this._resolve(!0)},cancel:function(){this.host.cancel&&this.host.cancel();this._resolve(!1)},complete:function(a){var b=this;0===b._state&&(b._state=1,b._tick(function(){b._resolve(a)}))},_resolve:function(a){2!==this._state&&(q(this._doneCallbacks,function(b){b(a)}),this._doneCallbacks.length=
0,this._state=2)}};return f}]},Ze=function(){this.$get=["$$rAF","$q","$$AnimateRunner",function(a,b,d){return function(b,e){function f(){a(function(){g.addClass&&(b.addClass(g.addClass),g.addClass=null);g.removeClass&&(b.removeClass(g.removeClass),g.removeClass=null);g.to&&(b.css(g.to),g.to=null);h||k.complete();h=!0});return k}var g=e||{};g.$$prepared||(g=pa(g));g.cleanupStyles&&(g.from=g.to=null);g.from&&(b.css(g.from),g.from=null);var h,k=new d;return{start:f,end:f}}}]},ga=N("$compile"),bc=new function(){};
Fc.$inject=["$provide","$$sanitizeUriProvider"];Fb.prototype.isFirstChange=function(){return this.previousValue===bc};var Yc=/^((?:x|data)[\:\-_])/i,cg=N("$controller"),cd=/^(\S+)(\s+as\s+([\w$]+))?$/,jf=function(){this.$get=["$document",function(a){return function(b){b?!b.nodeType&&b instanceof F&&(b=b[0]):b=a[0].body;return b.offsetWidth+1}}]},dd="application/json",ec={"Content-Type":dd+";charset=utf-8"},eg=/^\[|^\{(?!\{)/,fg={"[":/]$/,"{":/}$/},dg=/^\)\]\}',?\n/,Gg=N("$http"),hd=function(a){return function(){throw Gg("legacy",
a);}},Ka=ca.$interpolateMinErr=N("$interpolate");Ka.throwNoconcat=function(a){throw Ka("noconcat",a);};Ka.interr=function(a,b){return Ka("interr",a,b.toString())};var rf=function(){this.$get=["$window",function(a){function b(a){var b=function(a){b.data=a;b.called=!0};b.id=a;return b}var d=a.angular.callbacks,c={};return{createCallback:function(a){a="_"+(d.$$counter++).toString(36);var f="angular.callbacks."+a,g=b(a);c[f]=d[a]=g;return f},wasCalled:function(a){return c[a].called},getResponse:function(a){return c[a].data},
removeCallback:function(a){delete d[c[a].id];delete c[a]}}}]},Hg=/^([^\?#]*)(\?([^#]*))?(#(.*))?$/,hg={http:80,https:443,ftp:21},Gb=N("$location"),Ig={$$absUrl:"",$$html5:!1,$$replace:!1,absUrl:Hb("$$absUrl"),url:function(a){if(y(a))return this.$$url;var b=Hg.exec(a);(b[1]||""===a)&&this.path(decodeURIComponent(b[1]));(b[2]||b[1]||""===a)&&this.search(b[3]||"");this.hash(b[5]||"");return this},protocol:Hb("$$protocol"),host:Hb("$$host"),port:Hb("$$port"),path:md("$$path",function(a){a=null!==a?a.toString():
"";return"/"==a.charAt(0)?a:"/"+a}),search:function(a,b){switch(arguments.length){case 0:return this.$$search;case 1:if(G(a)||T(a))a=a.toString(),this.$$search=Ac(a);else if(D(a))a=pa(a,{}),q(a,function(b,c){null==b&&delete a[c]}),this.$$search=a;else throw Gb("isrcharg");break;default:y(b)||null===b?delete this.$$search[a]:this.$$search[a]=b}this.$$compose();return this},hash:md("$$hash",function(a){return null!==a?a.toString():""}),replace:function(){this.$$replace=!0;return this}};q([ld,hc,gc],
function(a){a.prototype=Object.create(Ig);a.prototype.state=function(b){if(!arguments.length)return this.$$state;if(a!==gc||!this.$$html5)throw Gb("nostate");this.$$state=y(b)?null:b;return this}});var X=N("$parse"),jg=Function.prototype.call,kg=Function.prototype.apply,lg=Function.prototype.bind,Ob=U();q("+ - * / % === !== == != < > <= >= && || ! = |".split(" "),function(a){Ob[a]=!0});var Jg={n:"\n",f:"\f",r:"\r",t:"\t",v:"\v","'":"'",'"':'"'},jc=function(a){this.options=a};jc.prototype={constructor:jc,
lex:function(a){this.text=a;this.index=0;for(this.tokens=[];this.index<this.text.length;)if(a=this.text.charAt(this.index),'"'===a||"'"===a)this.readString(a);else if(this.isNumber(a)||"."===a&&this.isNumber(this.peek()))this.readNumber();else if(this.isIdentifierStart(this.peekMultichar()))this.readIdent();else if(this.is(a,"(){}[].,;:?"))this.tokens.push({index:this.index,text:a}),this.index++;else if(this.isWhitespace(a))this.index++;else{var b=a+this.peek(),d=b+this.peek(2),c=Ob[b],e=Ob[d];Ob[a]||
c||e?(a=e?d:c?b:a,this.tokens.push({index:this.index,text:a,operator:!0}),this.index+=a.length):this.throwError("Unexpected next character ",this.index,this.index+1)}return this.tokens},is:function(a,b){return-1!==b.indexOf(a)},peek:function(a){a=a||1;return this.index+a<this.text.length?this.text.charAt(this.index+a):!1},isNumber:function(a){return"0"<=a&&"9">=a&&"string"===typeof a},isWhitespace:function(a){return" "===a||"\r"===a||"\t"===a||"\n"===a||"\v"===a||"\u00a0"===a},isIdentifierStart:function(a){return this.options.isIdentifierStart?
this.options.isIdentifierStart(a,this.codePointAt(a)):this.isValidIdentifierStart(a)},isValidIdentifierStart:function(a){return"a"<=a&&"z">=a||"A"<=a&&"Z">=a||"_"===a||"$"===a},isIdentifierContinue:function(a){return this.options.isIdentifierContinue?this.options.isIdentifierContinue(a,this.codePointAt(a)):this.isValidIdentifierContinue(a)},isValidIdentifierContinue:function(a,b){return this.isValidIdentifierStart(a,b)||this.isNumber(a)},codePointAt:function(a){return 1===a.length?a.charCodeAt(0):
(a.charCodeAt(0)<<10)+a.charCodeAt(1)-56613888},peekMultichar:function(){var a=this.text.charAt(this.index),b=this.peek();if(!b)return a;var d=a.charCodeAt(0),c=b.charCodeAt(0);return 55296<=d&&56319>=d&&56320<=c&&57343>=c?a+b:a},isExpOperator:function(a){return"-"===a||"+"===a||this.isNumber(a)},throwError:function(a,b,d){d=d||this.index;b=w(b)?"s "+b+"-"+this.index+" ["+this.text.substring(b,d)+"]":" "+d;throw X("lexerr",a,b,this.text);},readNumber:function(){for(var a="",b=this.index;this.index<
this.text.length;){var d=Q(this.text.charAt(this.index));if("."==d||this.isNumber(d))a+=d;else{var c=this.peek();if("e"==d&&this.isExpOperator(c))a+=d;else if(this.isExpOperator(d)&&c&&this.isNumber(c)&&"e"==a.charAt(a.length-1))a+=d;else if(!this.isExpOperator(d)||c&&this.isNumber(c)||"e"!=a.charAt(a.length-1))break;else this.throwError("Invalid exponent")}this.index++}this.tokens.push({index:b,text:a,constant:!0,value:Number(a)})},readIdent:function(){var a=this.index;for(this.index+=this.peekMultichar().length;this.index<
this.text.length;){var b=this.peekMultichar();if(!this.isIdentifierContinue(b))break;this.index+=b.length}this.tokens.push({index:a,text:this.text.slice(a,this.index),identifier:!0})},readString:function(a){var b=this.index;this.index++;for(var d="",c=a,e=!1;this.index<this.text.length;){var f=this.text.charAt(this.index),c=c+f;if(e)"u"===f?(e=this.text.substring(this.index+1,this.index+5),e.match(/[\da-f]{4}/i)||this.throwError("Invalid unicode escape [\\u"+e+"]"),this.index+=4,d+=String.fromCharCode(parseInt(e,
16))):d+=Jg[f]||f,e=!1;else if("\\"===f)e=!0;else{if(f===a){this.index++;this.tokens.push({index:b,text:c,constant:!0,value:d});return}d+=f}this.index++}this.throwError("Unterminated quote",b)}};var s=function(a,b){this.lexer=a;this.options=b};s.Program="Program";s.ExpressionStatement="ExpressionStatement";s.AssignmentExpression="AssignmentExpression";s.ConditionalExpression="ConditionalExpression";s.LogicalExpression="LogicalExpression";s.BinaryExpression="BinaryExpression";s.UnaryExpression="UnaryExpression";
s.CallExpression="CallExpression";s.MemberExpression="MemberExpression";s.Identifier="Identifier";s.Literal="Literal";s.ArrayExpression="ArrayExpression";s.Property="Property";s.ObjectExpression="ObjectExpression";s.ThisExpression="ThisExpression";s.LocalsExpression="LocalsExpression";s.NGValueParameter="NGValueParameter";s.prototype={ast:function(a){this.text=a;this.tokens=this.lexer.lex(a);a=this.program();0!==this.tokens.length&&this.throwError("is an unexpected token",this.tokens[0]);return a},
program:function(){for(var a=[];;)if(0<this.tokens.length&&!this.peek("}",")",";","]")&&a.push(this.expressionStatement()),!this.expect(";"))return{type:s.Program,body:a}},expressionStatement:function(){return{type:s.ExpressionStatement,expression:this.filterChain()}},filterChain:function(){for(var a=this.expression();this.expect("|");)a=this.filter(a);return a},expression:function(){return this.assignment()},assignment:function(){var a=this.ternary();this.expect("=")&&(a={type:s.AssignmentExpression,
left:a,right:this.assignment(),operator:"="});return a},ternary:function(){var a=this.logicalOR(),b,d;return this.expect("?")&&(b=this.expression(),this.consume(":"))?(d=this.expression(),{type:s.ConditionalExpression,test:a,alternate:b,consequent:d}):a},logicalOR:function(){for(var a=this.logicalAND();this.expect("||");)a={type:s.LogicalExpression,operator:"||",left:a,right:this.logicalAND()};return a},logicalAND:function(){for(var a=this.equality();this.expect("&&");)a={type:s.LogicalExpression,
operator:"&&",left:a,right:this.equality()};return a},equality:function(){for(var a=this.relational(),b;b=this.expect("==","!=","===","!==");)a={type:s.BinaryExpression,operator:b.text,left:a,right:this.relational()};return a},relational:function(){for(var a=this.additive(),b;b=this.expect("<",">","<=",">=");)a={type:s.BinaryExpression,operator:b.text,left:a,right:this.additive()};return a},additive:function(){for(var a=this.multiplicative(),b;b=this.expect("+","-");)a={type:s.BinaryExpression,operator:b.text,
left:a,right:this.multiplicative()};return a},multiplicative:function(){for(var a=this.unary(),b;b=this.expect("*","/","%");)a={type:s.BinaryExpression,operator:b.text,left:a,right:this.unary()};return a},unary:function(){var a;return(a=this.expect("+","-","!"))?{type:s.UnaryExpression,operator:a.text,prefix:!0,argument:this.unary()}:this.primary()},primary:function(){var a;this.expect("(")?(a=this.filterChain(),this.consume(")")):this.expect("[")?a=this.arrayDeclaration():this.expect("{")?a=this.object():
this.selfReferential.hasOwnProperty(this.peek().text)?a=pa(this.selfReferential[this.consume().text]):this.options.literals.hasOwnProperty(this.peek().text)?a={type:s.Literal,value:this.options.literals[this.consume().text]}:this.peek().identifier?a=this.identifier():this.peek().constant?a=this.constant():this.throwError("not a primary expression",this.peek());for(var b;b=this.expect("(","[",".");)"("===b.text?(a={type:s.CallExpression,callee:a,arguments:this.parseArguments()},this.consume(")")):
"["===b.text?(a={type:s.MemberExpression,object:a,property:this.expression(),computed:!0},this.consume("]")):"."===b.text?a={type:s.MemberExpression,object:a,property:this.identifier(),computed:!1}:this.throwError("IMPOSSIBLE");return a},filter:function(a){a=[a];for(var b={type:s.CallExpression,callee:this.identifier(),arguments:a,filter:!0};this.expect(":");)a.push(this.expression());return b},parseArguments:function(){var a=[];if(")"!==this.peekToken().text){do a.push(this.filterChain());while(this.expect(","))
}return a},identifier:function(){var a=this.consume();a.identifier||this.throwError("is not a valid identifier",a);return{type:s.Identifier,name:a.text}},constant:function(){return{type:s.Literal,value:this.consume().value}},arrayDeclaration:function(){var a=[];if("]"!==this.peekToken().text){do{if(this.peek("]"))break;a.push(this.expression())}while(this.expect(","))}this.consume("]");return{type:s.ArrayExpression,elements:a}},object:function(){var a=[],b;if("}"!==this.peekToken().text){do{if(this.peek("}"))break;
b={type:s.Property,kind:"init"};this.peek().constant?(b.key=this.constant(),b.computed=!1,this.consume(":"),b.value=this.expression()):this.peek().identifier?(b.key=this.identifier(),b.computed=!1,this.peek(":")?(this.consume(":"),b.value=this.expression()):b.value=b.key):this.peek("[")?(this.consume("["),b.key=this.expression(),this.consume("]"),b.computed=!0,this.consume(":"),b.value=this.expression()):this.throwError("invalid key",this.peek());a.push(b)}while(this.expect(","))}this.consume("}");
return{type:s.ObjectExpression,properties:a}},throwError:function(a,b){throw X("syntax",b.text,a,b.index+1,this.text,this.text.substring(b.index));},consume:function(a){if(0===this.tokens.length)throw X("ueoe",this.text);var b=this.expect(a);b||this.throwError("is unexpected, expecting ["+a+"]",this.peek());return b},peekToken:function(){if(0===this.tokens.length)throw X("ueoe",this.text);return this.tokens[0]},peek:function(a,b,d,c){return this.peekAhead(0,a,b,d,c)},peekAhead:function(a,b,d,c,e){if(this.tokens.length>
a){a=this.tokens[a];var f=a.text;if(f===b||f===d||f===c||f===e||!(b||d||c||e))return a}return!1},expect:function(a,b,d,c){return(a=this.peek(a,b,d,c))?(this.tokens.shift(),a):!1},selfReferential:{"this":{type:s.ThisExpression},$locals:{type:s.LocalsExpression}}};td.prototype={compile:function(a,b){var d=this,c=this.astBuilder.ast(a);this.state={nextId:0,filters:{},expensiveChecks:b,fn:{vars:[],body:[],own:{}},assign:{vars:[],body:[],own:{}},inputs:[]};V(c,d.$filter);var e="",f;this.stage="assign";
if(f=rd(c))this.state.computing="assign",e=this.nextId(),this.recurse(f,e),this.return_(e),e="fn.assign="+this.generateFunction("assign","s,v,l");f=pd(c.body);d.stage="inputs";q(f,function(a,b){var c="fn"+b;d.state[c]={vars:[],body:[],own:{}};d.state.computing=c;var e=d.nextId();d.recurse(a,e);d.return_(e);d.state.inputs.push(c);a.watchId=b});this.state.computing="fn";this.stage="main";this.recurse(c);e='"'+this.USE+" "+this.STRICT+'";\n'+this.filterPrefix()+"var fn="+this.generateFunction("fn","s,l,a,i")+
e+this.watchFns()+"return fn;";e=(new Function("$filter","ensureSafeMemberName","ensureSafeObject","ensureSafeFunction","getStringValue","ensureSafeAssignContext","ifDefined","plus","text",e))(this.$filter,Sa,ra,nd,ig,Ib,mg,od,a);this.state=this.stage=void 0;e.literal=sd(c);e.constant=c.constant;return e},USE:"use",STRICT:"strict",watchFns:function(){var a=[],b=this.state.inputs,d=this;q(b,function(b){a.push("var "+b+"="+d.generateFunction(b,"s"))});b.length&&a.push("fn.inputs=["+b.join(",")+"];");
return a.join("")},generateFunction:function(a,b){return"function("+b+"){"+this.varsPrefix(a)+this.body(a)+"};"},filterPrefix:function(){var a=[],b=this;q(this.state.filters,function(d,c){a.push(d+"=$filter("+b.escape(c)+")")});return a.length?"var "+a.join(",")+";":""},varsPrefix:function(a){return this.state[a].vars.length?"var "+this.state[a].vars.join(",")+";":""},body:function(a){return this.state[a].body.join("")},recurse:function(a,b,d,c,e,f){var g,h,k=this,l,m,n;c=c||A;if(!f&&w(a.watchId))b=
b||this.nextId(),this.if_("i",this.lazyAssign(b,this.computedMember("i",a.watchId)),this.lazyRecurse(a,b,d,c,e,!0));else switch(a.type){case s.Program:q(a.body,function(b,c){k.recurse(b.expression,void 0,void 0,function(a){h=a});c!==a.body.length-1?k.current().body.push(h,";"):k.return_(h)});break;case s.Literal:m=this.escape(a.value);this.assign(b,m);c(m);break;case s.UnaryExpression:this.recurse(a.argument,void 0,void 0,function(a){h=a});m=a.operator+"("+this.ifDefined(h,0)+")";this.assign(b,m);
c(m);break;case s.BinaryExpression:this.recurse(a.left,void 0,void 0,function(a){g=a});this.recurse(a.right,void 0,void 0,function(a){h=a});m="+"===a.operator?this.plus(g,h):"-"===a.operator?this.ifDefined(g,0)+a.operator+this.ifDefined(h,0):"("+g+")"+a.operator+"("+h+")";this.assign(b,m);c(m);break;case s.LogicalExpression:b=b||this.nextId();k.recurse(a.left,b);k.if_("&&"===a.operator?b:k.not(b),k.lazyRecurse(a.right,b));c(b);break;case s.ConditionalExpression:b=b||this.nextId();k.recurse(a.test,
b);k.if_(b,k.lazyRecurse(a.alternate,b),k.lazyRecurse(a.consequent,b));c(b);break;case s.Identifier:b=b||this.nextId();d&&(d.context="inputs"===k.stage?"s":this.assign(this.nextId(),this.getHasOwnProperty("l",a.name)+"?l:s"),d.computed=!1,d.name=a.name);Sa(a.name);k.if_("inputs"===k.stage||k.not(k.getHasOwnProperty("l",a.name)),function(){k.if_("inputs"===k.stage||"s",function(){e&&1!==e&&k.if_(k.not(k.nonComputedMember("s",a.name)),k.lazyAssign(k.nonComputedMember("s",a.name),"{}"));k.assign(b,k.nonComputedMember("s",
a.name))})},b&&k.lazyAssign(b,k.nonComputedMember("l",a.name)));(k.state.expensiveChecks||Jb(a.name))&&k.addEnsureSafeObject(b);c(b);break;case s.MemberExpression:g=d&&(d.context=this.nextId())||this.nextId();b=b||this.nextId();k.recurse(a.object,g,void 0,function(){k.if_(k.notNull(g),function(){e&&1!==e&&k.addEnsureSafeAssignContext(g);if(a.computed)h=k.nextId(),k.recurse(a.property,h),k.getStringValue(h),k.addEnsureSafeMemberName(h),e&&1!==e&&k.if_(k.not(k.computedMember(g,h)),k.lazyAssign(k.computedMember(g,
h),"{}")),m=k.ensureSafeObject(k.computedMember(g,h)),k.assign(b,m),d&&(d.computed=!0,d.name=h);else{Sa(a.property.name);e&&1!==e&&k.if_(k.not(k.nonComputedMember(g,a.property.name)),k.lazyAssign(k.nonComputedMember(g,a.property.name),"{}"));m=k.nonComputedMember(g,a.property.name);if(k.state.expensiveChecks||Jb(a.property.name))m=k.ensureSafeObject(m);k.assign(b,m);d&&(d.computed=!1,d.name=a.property.name)}},function(){k.assign(b,"undefined")});c(b)},!!e);break;case s.CallExpression:b=b||this.nextId();
a.filter?(h=k.filter(a.callee.name),l=[],q(a.arguments,function(a){var b=k.nextId();k.recurse(a,b);l.push(b)}),m=h+"("+l.join(",")+")",k.assign(b,m),c(b)):(h=k.nextId(),g={},l=[],k.recurse(a.callee,h,g,function(){k.if_(k.notNull(h),function(){k.addEnsureSafeFunction(h);q(a.arguments,function(a){k.recurse(a,k.nextId(),void 0,function(a){l.push(k.ensureSafeObject(a))})});g.name?(k.state.expensiveChecks||k.addEnsureSafeObject(g.context),m=k.member(g.context,g.name,g.computed)+"("+l.join(",")+")"):m=
h+"("+l.join(",")+")";m=k.ensureSafeObject(m);k.assign(b,m)},function(){k.assign(b,"undefined")});c(b)}));break;case s.AssignmentExpression:h=this.nextId();g={};if(!qd(a.left))throw X("lval");this.recurse(a.left,void 0,g,function(){k.if_(k.notNull(g.context),function(){k.recurse(a.right,h);k.addEnsureSafeObject(k.member(g.context,g.name,g.computed));k.addEnsureSafeAssignContext(g.context);m=k.member(g.context,g.name,g.computed)+a.operator+h;k.assign(b,m);c(b||m)})},1);break;case s.ArrayExpression:l=
[];q(a.elements,function(a){k.recurse(a,k.nextId(),void 0,function(a){l.push(a)})});m="["+l.join(",")+"]";this.assign(b,m);c(m);break;case s.ObjectExpression:l=[];n=!1;q(a.properties,function(a){a.computed&&(n=!0)});n?(b=b||this.nextId(),this.assign(b,"{}"),q(a.properties,function(a){a.computed?(g=k.nextId(),k.recurse(a.key,g)):g=a.key.type===s.Identifier?a.key.name:""+a.key.value;h=k.nextId();k.recurse(a.value,h);k.assign(k.member(b,g,a.computed),h)})):(q(a.properties,function(b){k.recurse(b.value,
a.constant?void 0:k.nextId(),void 0,function(a){l.push(k.escape(b.key.type===s.Identifier?b.key.name:""+b.key.value)+":"+a)})}),m="{"+l.join(",")+"}",this.assign(b,m));c(b||m);break;case s.ThisExpression:this.assign(b,"s");c("s");break;case s.LocalsExpression:this.assign(b,"l");c("l");break;case s.NGValueParameter:this.assign(b,"v"),c("v")}},getHasOwnProperty:function(a,b){var d=a+"."+b,c=this.current().own;c.hasOwnProperty(d)||(c[d]=this.nextId(!1,a+"&&("+this.escape(b)+" in "+a+")"));return c[d]},
assign:function(a,b){if(a)return this.current().body.push(a,"=",b,";"),a},filter:function(a){this.state.filters.hasOwnProperty(a)||(this.state.filters[a]=this.nextId(!0));return this.state.filters[a]},ifDefined:function(a,b){return"ifDefined("+a+","+this.escape(b)+")"},plus:function(a,b){return"plus("+a+","+b+")"},return_:function(a){this.current().body.push("return ",a,";")},if_:function(a,b,d){if(!0===a)b();else{var c=this.current().body;c.push("if(",a,"){");b();c.push("}");d&&(c.push("else{"),
d(),c.push("}"))}},not:function(a){return"!("+a+")"},notNull:function(a){return a+"!=null"},nonComputedMember:function(a,b){var d=/[^$_a-zA-Z0-9]/g;return/[$_a-zA-Z][$_a-zA-Z0-9]*/.test(b)?a+"."+b:a+'["'+b.replace(d,this.stringEscapeFn)+'"]'},computedMember:function(a,b){return a+"["+b+"]"},member:function(a,b,d){return d?this.computedMember(a,b):this.nonComputedMember(a,b)},addEnsureSafeObject:function(a){this.current().body.push(this.ensureSafeObject(a),";")},addEnsureSafeMemberName:function(a){this.current().body.push(this.ensureSafeMemberName(a),
";")},addEnsureSafeFunction:function(a){this.current().body.push(this.ensureSafeFunction(a),";")},addEnsureSafeAssignContext:function(a){this.current().body.push(this.ensureSafeAssignContext(a),";")},ensureSafeObject:function(a){return"ensureSafeObject("+a+",text)"},ensureSafeMemberName:function(a){return"ensureSafeMemberName("+a+",text)"},ensureSafeFunction:function(a){return"ensureSafeFunction("+a+",text)"},getStringValue:function(a){this.assign(a,"getStringValue("+a+")")},ensureSafeAssignContext:function(a){return"ensureSafeAssignContext("+
a+",text)"},lazyRecurse:function(a,b,d,c,e,f){var g=this;return function(){g.recurse(a,b,d,c,e,f)}},lazyAssign:function(a,b){var d=this;return function(){d.assign(a,b)}},stringEscapeRegex:/[^ a-zA-Z0-9]/g,stringEscapeFn:function(a){return"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)},escape:function(a){if(G(a))return"'"+a.replace(this.stringEscapeRegex,this.stringEscapeFn)+"'";if(T(a))return a.toString();if(!0===a)return"true";if(!1===a)return"false";if(null===a)return"null";if("undefined"===
typeof a)return"undefined";throw X("esc");},nextId:function(a,b){var d="v"+this.state.nextId++;a||this.current().vars.push(d+(b?"="+b:""));return d},current:function(){return this.state[this.state.computing]}};ud.prototype={compile:function(a,b){var d=this,c=this.astBuilder.ast(a);this.expression=a;this.expensiveChecks=b;V(c,d.$filter);var e,f;if(e=rd(c))f=this.recurse(e);e=pd(c.body);var g;e&&(g=[],q(e,function(a,b){var c=d.recurse(a);a.input=c;g.push(c);a.watchId=b}));var h=[];q(c.body,function(a){h.push(d.recurse(a.expression))});
e=0===c.body.length?A:1===c.body.length?h[0]:function(a,b){var c;q(h,function(d){c=d(a,b)});return c};f&&(e.assign=function(a,b,c){return f(a,c,b)});g&&(e.inputs=g);e.literal=sd(c);e.constant=c.constant;return e},recurse:function(a,b,d){var c,e,f=this,g;if(a.input)return this.inputs(a.input,a.watchId);switch(a.type){case s.Literal:return this.value(a.value,b);case s.UnaryExpression:return e=this.recurse(a.argument),this["unary"+a.operator](e,b);case s.BinaryExpression:return c=this.recurse(a.left),
e=this.recurse(a.right),this["binary"+a.operator](c,e,b);case s.LogicalExpression:return c=this.recurse(a.left),e=this.recurse(a.right),this["binary"+a.operator](c,e,b);case s.ConditionalExpression:return this["ternary?:"](this.recurse(a.test),this.recurse(a.alternate),this.recurse(a.consequent),b);case s.Identifier:return Sa(a.name,f.expression),f.identifier(a.name,f.expensiveChecks||Jb(a.name),b,d,f.expression);case s.MemberExpression:return c=this.recurse(a.object,!1,!!d),a.computed||(Sa(a.property.name,
f.expression),e=a.property.name),a.computed&&(e=this.recurse(a.property)),a.computed?this.computedMember(c,e,b,d,f.expression):this.nonComputedMember(c,e,f.expensiveChecks,b,d,f.expression);case s.CallExpression:return g=[],q(a.arguments,function(a){g.push(f.recurse(a))}),a.filter&&(e=this.$filter(a.callee.name)),a.filter||(e=this.recurse(a.callee,!0)),a.filter?function(a,c,d,f){for(var n=[],p=0;p<g.length;++p)n.push(g[p](a,c,d,f));a=e.apply(void 0,n,f);return b?{context:void 0,name:void 0,value:a}:
a}:function(a,c,d,m){var n=e(a,c,d,m),p;if(null!=n.value){ra(n.context,f.expression);nd(n.value,f.expression);p=[];for(var q=0;q<g.length;++q)p.push(ra(g[q](a,c,d,m),f.expression));p=ra(n.value.apply(n.context,p),f.expression)}return b?{value:p}:p};case s.AssignmentExpression:return c=this.recurse(a.left,!0,1),e=this.recurse(a.right),function(a,d,g,m){var n=c(a,d,g,m);a=e(a,d,g,m);ra(n.value,f.expression);Ib(n.context);n.context[n.name]=a;return b?{value:a}:a};case s.ArrayExpression:return g=[],q(a.elements,
function(a){g.push(f.recurse(a))}),function(a,c,d,e){for(var f=[],p=0;p<g.length;++p)f.push(g[p](a,c,d,e));return b?{value:f}:f};case s.ObjectExpression:return g=[],q(a.properties,function(a){a.computed?g.push({key:f.recurse(a.key),computed:!0,value:f.recurse(a.value)}):g.push({key:a.key.type===s.Identifier?a.key.name:""+a.key.value,computed:!1,value:f.recurse(a.value)})}),function(a,c,d,e){for(var f={},p=0;p<g.length;++p)g[p].computed?f[g[p].key(a,c,d,e)]=g[p].value(a,c,d,e):f[g[p].key]=g[p].value(a,
c,d,e);return b?{value:f}:f};case s.ThisExpression:return function(a){return b?{value:a}:a};case s.LocalsExpression:return function(a,c){return b?{value:c}:c};case s.NGValueParameter:return function(a,c,d){return b?{value:d}:d}}},"unary+":function(a,b){return function(d,c,e,f){d=a(d,c,e,f);d=w(d)?+d:0;return b?{value:d}:d}},"unary-":function(a,b){return function(d,c,e,f){d=a(d,c,e,f);d=w(d)?-d:0;return b?{value:d}:d}},"unary!":function(a,b){return function(d,c,e,f){d=!a(d,c,e,f);return b?{value:d}:
d}},"binary+":function(a,b,d){return function(c,e,f,g){var h=a(c,e,f,g);c=b(c,e,f,g);h=od(h,c);return d?{value:h}:h}},"binary-":function(a,b,d){return function(c,e,f,g){var h=a(c,e,f,g);c=b(c,e,f,g);h=(w(h)?h:0)-(w(c)?c:0);return d?{value:h}:h}},"binary*":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)*b(c,e,f,g);return d?{value:c}:c}},"binary/":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)/b(c,e,f,g);return d?{value:c}:c}},"binary%":function(a,b,d){return function(c,e,f,g){c=a(c,e,
f,g)%b(c,e,f,g);return d?{value:c}:c}},"binary===":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)===b(c,e,f,g);return d?{value:c}:c}},"binary!==":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)!==b(c,e,f,g);return d?{value:c}:c}},"binary==":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)==b(c,e,f,g);return d?{value:c}:c}},"binary!=":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)!=b(c,e,f,g);return d?{value:c}:c}},"binary<":function(a,b,d){return function(c,e,f,g){c=a(c,e,
f,g)<b(c,e,f,g);return d?{value:c}:c}},"binary>":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)>b(c,e,f,g);return d?{value:c}:c}},"binary<=":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)<=b(c,e,f,g);return d?{value:c}:c}},"binary>=":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)>=b(c,e,f,g);return d?{value:c}:c}},"binary&&":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)&&b(c,e,f,g);return d?{value:c}:c}},"binary||":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)||
b(c,e,f,g);return d?{value:c}:c}},"ternary?:":function(a,b,d,c){return function(e,f,g,h){e=a(e,f,g,h)?b(e,f,g,h):d(e,f,g,h);return c?{value:e}:e}},value:function(a,b){return function(){return b?{context:void 0,name:void 0,value:a}:a}},identifier:function(a,b,d,c,e){return function(f,g,h,k){f=g&&a in g?g:f;c&&1!==c&&f&&!f[a]&&(f[a]={});g=f?f[a]:void 0;b&&ra(g,e);return d?{context:f,name:a,value:g}:g}},computedMember:function(a,b,d,c,e){return function(f,g,h,k){var l=a(f,g,h,k),m,n;null!=l&&(m=b(f,
g,h,k),m+="",Sa(m,e),c&&1!==c&&(Ib(l),l&&!l[m]&&(l[m]={})),n=l[m],ra(n,e));return d?{context:l,name:m,value:n}:n}},nonComputedMember:function(a,b,d,c,e,f){return function(g,h,k,l){g=a(g,h,k,l);e&&1!==e&&(Ib(g),g&&!g[b]&&(g[b]={}));h=null!=g?g[b]:void 0;(d||Jb(b))&&ra(h,f);return c?{context:g,name:b,value:h}:h}},inputs:function(a,b){return function(d,c,e,f){return f?f[b]:a(d,c,e)}}};var kc=function(a,b,d){this.lexer=a;this.$filter=b;this.options=d;this.ast=new s(a,d);this.astCompiler=d.csp?new ud(this.ast,
b):new td(this.ast,b)};kc.prototype={constructor:kc,parse:function(a){return this.astCompiler.compile(a,this.options.expensiveChecks)}};var ng=Object.prototype.valueOf,sa=N("$sce"),la={HTML:"html",CSS:"css",URL:"url",RESOURCE_URL:"resourceUrl",JS:"js"},pg=N("$compile"),$=C.document.createElement("a"),yd=Y(C.location.href);zd.$inject=["$document"];Mc.$inject=["$provide"];var Gd=22,Fd=".",mc="0";Ad.$inject=["$locale"];Cd.$inject=["$locale"];var Ag={yyyy:ba("FullYear",4,0,!1,!0),yy:ba("FullYear",2,0,
!0,!0),y:ba("FullYear",1,0,!1,!0),MMMM:kb("Month"),MMM:kb("Month",!0),MM:ba("Month",2,1),M:ba("Month",1,1),LLLL:kb("Month",!1,!0),dd:ba("Date",2),d:ba("Date",1),HH:ba("Hours",2),H:ba("Hours",1),hh:ba("Hours",2,-12),h:ba("Hours",1,-12),mm:ba("Minutes",2),m:ba("Minutes",1),ss:ba("Seconds",2),s:ba("Seconds",1),sss:ba("Milliseconds",3),EEEE:kb("Day"),EEE:kb("Day",!0),a:function(a,b){return 12>a.getHours()?b.AMPMS[0]:b.AMPMS[1]},Z:function(a,b,d){a=-1*d;return a=(0<=a?"+":"")+(Kb(Math[0<a?"floor":"ceil"](a/
60),2)+Kb(Math.abs(a%60),2))},ww:Id(2),w:Id(1),G:nc,GG:nc,GGG:nc,GGGG:function(a,b){return 0>=a.getFullYear()?b.ERANAMES[0]:b.ERANAMES[1]}},zg=/((?:[^yMLdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|m+|s+|a|Z|G+|w+))(.*)/,yg=/^\-?\d+$/;Bd.$inject=["$locale"];var tg=ha(Q),ug=ha(ub);Dd.$inject=["$parse"];var oe=ha({restrict:"E",compile:function(a,b){if(!b.href&&!b.xlinkHref)return function(a,b){if("a"===b[0].nodeName.toLowerCase()){var e="[object SVGAnimatedString]"===ma.call(b.prop("href"))?
"xlink:href":"href";b.on("click",function(a){b.attr(e)||a.preventDefault()})}}}}),vb={};q(Eb,function(a,b){function d(a,d,e){a.$watch(e[c],function(a){e.$set(b,!!a)})}if("multiple"!=a){var c=Aa("ng-"+b),e=d;"checked"===a&&(e=function(a,b,e){e.ngModel!==e[c]&&d(a,b,e)});vb[c]=function(){return{restrict:"A",priority:100,link:e}}}});q(bd,function(a,b){vb[b]=function(){return{priority:100,link:function(a,c,e){if("ngPattern"===b&&"/"==e.ngPattern.charAt(0)&&(c=e.ngPattern.match(Cg))){e.$set("ngPattern",
new RegExp(c[1],c[2]));return}a.$watch(e[b],function(a){e.$set(b,a)})}}}});q(["src","srcset","href"],function(a){var b=Aa("ng-"+a);vb[b]=function(){return{priority:99,link:function(d,c,e){var f=a,g=a;"href"===a&&"[object SVGAnimatedString]"===ma.call(c.prop("href"))&&(g="xlinkHref",e.$attr[g]="xlink:href",f=null);e.$observe(b,function(b){b?(e.$set(g,b),Ea&&f&&c.prop(f,e[g])):"href"===a&&e.$set(g,null)})}}}});var Lb={$addControl:A,$$renameControl:function(a,b){a.$name=b},$removeControl:A,$setValidity:A,
$setDirty:A,$setPristine:A,$setSubmitted:A};Jd.$inject=["$element","$attrs","$scope","$animate","$interpolate"];var Sd=function(a){return["$timeout","$parse",function(b,d){function c(a){return""===a?d('this[""]').assign:d(a).assign||A}return{name:"form",restrict:a?"EAC":"E",require:["form","^^?form"],controller:Jd,compile:function(d,f){d.addClass(Ua).addClass(ob);var g=f.name?"name":a&&f.ngForm?"ngForm":!1;return{pre:function(a,d,e,f){var n=f[0];if(!("action"in e)){var p=function(b){a.$apply(function(){n.$commitViewValue();
n.$setSubmitted()});b.preventDefault()};d[0].addEventListener("submit",p,!1);d.on("$destroy",function(){b(function(){d[0].removeEventListener("submit",p,!1)},0,!1)})}(f[1]||n.$$parentForm).$addControl(n);var q=g?c(n.$name):A;g&&(q(a,n),e.$observe(g,function(b){n.$name!==b&&(q(a,void 0),n.$$parentForm.$$renameControl(n,b),q=c(n.$name),q(a,n))}));d.on("$destroy",function(){n.$$parentForm.$removeControl(n);q(a,void 0);S(n,Lb)})}}}}}]},pe=Sd(),Ce=Sd(!0),Bg=/^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/,
Kg=/^[a-z][a-z\d.+-]*:\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\s:/?#]+|\[[a-f\d:]+\])(?::\d+)?(?:\/[^?#]*)?(?:\?[^#]*)?(?:#.*)?$/i,Lg=/^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+\/0-9=?A-Z^_`a-z{|}~]+(\.[-!#$%&'*+\/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/,Mg=/^\s*(\-|\+)?(\d+|(\d*(\.\d*)))([eE][+-]?\d+)?\s*$/,Td=/^(\d{4,})-(\d{2})-(\d{2})$/,Ud=/^(\d{4,})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,rc=/^(\d{4,})-W(\d\d)$/,Vd=/^(\d{4,})-(\d\d)$/,
Wd=/^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,Ld=U();q(["date","datetime-local","month","time","week"],function(a){Ld[a]=!0});var Xd={text:function(a,b,d,c,e,f){lb(a,b,d,c,e,f);pc(c)},date:mb("date",Td,Nb(Td,["yyyy","MM","dd"]),"yyyy-MM-dd"),"datetime-local":mb("datetimelocal",Ud,Nb(Ud,"yyyy MM dd HH mm ss sss".split(" ")),"yyyy-MM-ddTHH:mm:ss.sss"),time:mb("time",Wd,Nb(Wd,["HH","mm","ss","sss"]),"HH:mm:ss.sss"),week:mb("week",rc,function(a,b){if(da(a))return a;if(G(a)){rc.lastIndex=0;var d=rc.exec(a);
if(d){var c=+d[1],e=+d[2],f=d=0,g=0,h=0,k=Hd(c),e=7*(e-1);b&&(d=b.getHours(),f=b.getMinutes(),g=b.getSeconds(),h=b.getMilliseconds());return new Date(c,0,k.getDate()+e,d,f,g,h)}}return NaN},"yyyy-Www"),month:mb("month",Vd,Nb(Vd,["yyyy","MM"]),"yyyy-MM"),number:function(a,b,d,c,e,f){Md(a,b,d,c);lb(a,b,d,c,e,f);c.$$parserName="number";c.$parsers.push(function(a){if(c.$isEmpty(a))return null;if(Mg.test(a))return parseFloat(a)});c.$formatters.push(function(a){if(!c.$isEmpty(a)){if(!T(a))throw nb("numfmt",
a);a=a.toString()}return a});if(w(d.min)||d.ngMin){var g;c.$validators.min=function(a){return c.$isEmpty(a)||y(g)||a>=g};d.$observe("min",function(a){w(a)&&!T(a)&&(a=parseFloat(a));g=T(a)&&!isNaN(a)?a:void 0;c.$validate()})}if(w(d.max)||d.ngMax){var h;c.$validators.max=function(a){return c.$isEmpty(a)||y(h)||a<=h};d.$observe("max",function(a){w(a)&&!T(a)&&(a=parseFloat(a));h=T(a)&&!isNaN(a)?a:void 0;c.$validate()})}},url:function(a,b,d,c,e,f){lb(a,b,d,c,e,f);pc(c);c.$$parserName="url";c.$validators.url=
function(a,b){var d=a||b;return c.$isEmpty(d)||Kg.test(d)}},email:function(a,b,d,c,e,f){lb(a,b,d,c,e,f);pc(c);c.$$parserName="email";c.$validators.email=function(a,b){var d=a||b;return c.$isEmpty(d)||Lg.test(d)}},radio:function(a,b,d,c){y(d.name)&&b.attr("name",++pb);b.on("click",function(a){b[0].checked&&c.$setViewValue(d.value,a&&a.type)});c.$render=function(){b[0].checked=d.value==c.$viewValue};d.$observe("value",c.$render)},checkbox:function(a,b,d,c,e,f,g,h){var k=Nd(h,a,"ngTrueValue",d.ngTrueValue,
!0),l=Nd(h,a,"ngFalseValue",d.ngFalseValue,!1);b.on("click",function(a){c.$setViewValue(b[0].checked,a&&a.type)});c.$render=function(){b[0].checked=c.$viewValue};c.$isEmpty=function(a){return!1===a};c.$formatters.push(function(a){return na(a,k)});c.$parsers.push(function(a){return a?k:l})},hidden:A,button:A,submit:A,reset:A,file:A},Gc=["$browser","$sniffer","$filter","$parse",function(a,b,d,c){return{restrict:"E",require:["?ngModel"],link:{pre:function(e,f,g,h){h[0]&&(Xd[Q(g.type)]||Xd.text)(e,f,
g,h[0],b,a,d,c)}}}}],Ng=/^(true|false|\d+)$/,Ue=function(){return{restrict:"A",priority:100,compile:function(a,b){return Ng.test(b.ngValue)?function(a,b,e){e.$set("value",a.$eval(e.ngValue))}:function(a,b,e){a.$watch(e.ngValue,function(a){e.$set("value",a)})}}}},ue=["$compile",function(a){return{restrict:"AC",compile:function(b){a.$$addBindingClass(b);return function(b,c,e){a.$$addBindingInfo(c,e.ngBind);c=c[0];b.$watch(e.ngBind,function(a){c.textContent=y(a)?"":a})}}}}],we=["$interpolate","$compile",
function(a,b){return{compile:function(d){b.$$addBindingClass(d);return function(c,d,f){c=a(d.attr(f.$attr.ngBindTemplate));b.$$addBindingInfo(d,c.expressions);d=d[0];f.$observe("ngBindTemplate",function(a){d.textContent=y(a)?"":a})}}}}],ve=["$sce","$parse","$compile",function(a,b,d){return{restrict:"A",compile:function(c,e){var f=b(e.ngBindHtml),g=b(e.ngBindHtml,function(b){return a.valueOf(b)});d.$$addBindingClass(c);return function(b,c,e){d.$$addBindingInfo(c,e.ngBindHtml);b.$watch(g,function(){var d=
f(b);c.html(a.getTrustedHtml(d)||"")})}}}}],Te=ha({restrict:"A",require:"ngModel",link:function(a,b,d,c){c.$viewChangeListeners.push(function(){a.$eval(d.ngChange)})}}),xe=qc("",!0),ze=qc("Odd",0),ye=qc("Even",1),Ae=Ta({compile:function(a,b){b.$set("ngCloak",void 0);a.removeClass("ng-cloak")}}),Be=[function(){return{restrict:"A",scope:!0,controller:"@",priority:500}}],Lc={},Og={blur:!0,focus:!0};q("click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste".split(" "),
function(a){var b=Aa("ng-"+a);Lc[b]=["$parse","$rootScope",function(d,c){return{restrict:"A",compile:function(e,f){var g=d(f[b],null,!0);return function(b,d){d.on(a,function(d){var e=function(){g(b,{$event:d})};Og[a]&&c.$$phase?b.$evalAsync(e):b.$apply(e)})}}}}]});var Ee=["$animate","$compile",function(a,b){return{multiElement:!0,transclude:"element",priority:600,terminal:!0,restrict:"A",$$tlb:!0,link:function(d,c,e,f,g){var h,k,l;d.$watch(e.ngIf,function(d){d?k||g(function(d,f){k=f;d[d.length++]=
b.$$createComment("end ngIf",e.ngIf);h={clone:d};a.enter(d,c.parent(),c)}):(l&&(l.remove(),l=null),k&&(k.$destroy(),k=null),h&&(l=tb(h.clone),a.leave(l).then(function(){l=null}),h=null))})}}}],Fe=["$templateRequest","$anchorScroll","$animate",function(a,b,d){return{restrict:"ECA",priority:400,terminal:!0,transclude:"element",controller:ca.noop,compile:function(c,e){var f=e.ngInclude||e.src,g=e.onload||"",h=e.autoscroll;return function(c,e,m,n,p){var q=0,s,B,r,y=function(){B&&(B.remove(),B=null);s&&
(s.$destroy(),s=null);r&&(d.leave(r).then(function(){B=null}),B=r,r=null)};c.$watch(f,function(f){var m=function(){!w(h)||h&&!c.$eval(h)||b()},t=++q;f?(a(f,!0).then(function(a){if(!c.$$destroyed&&t===q){var b=c.$new();n.template=a;a=p(b,function(a){y();d.enter(a,null,e).then(m)});s=b;r=a;s.$emit("$includeContentLoaded",f);c.$eval(g)}},function(){c.$$destroyed||t!==q||(y(),c.$emit("$includeContentError",f))}),c.$emit("$includeContentRequested",f)):(y(),n.template=null)})}}}}],We=["$compile",function(a){return{restrict:"ECA",
priority:-400,require:"ngInclude",link:function(b,d,c,e){ma.call(d[0]).match(/SVG/)?(d.empty(),a(Oc(e.template,C.document).childNodes)(b,function(a){d.append(a)},{futureParentElement:d})):(d.html(e.template),a(d.contents())(b))}}}],Ge=Ta({priority:450,compile:function(){return{pre:function(a,b,d){a.$eval(d.ngInit)}}}}),Se=function(){return{restrict:"A",priority:100,require:"ngModel",link:function(a,b,d,c){var e=b.attr(d.$attr.ngList)||", ",f="false"!==d.ngTrim,g=f?W(e):e;c.$parsers.push(function(a){if(!y(a)){var b=
[];a&&q(a.split(g),function(a){a&&b.push(f?W(a):a)});return b}});c.$formatters.push(function(a){if(L(a))return a.join(e)});c.$isEmpty=function(a){return!a||!a.length}}}},ob="ng-valid",Od="ng-invalid",Ua="ng-pristine",Mb="ng-dirty",Qd="ng-pending",nb=N("ngModel"),Pg=["$scope","$exceptionHandler","$attrs","$element","$parse","$animate","$timeout","$rootScope","$q","$interpolate",function(a,b,d,c,e,f,g,h,k,l){this.$modelValue=this.$viewValue=Number.NaN;this.$$rawModelValue=void 0;this.$validators={};
this.$asyncValidators={};this.$parsers=[];this.$formatters=[];this.$viewChangeListeners=[];this.$untouched=!0;this.$touched=!1;this.$pristine=!0;this.$dirty=!1;this.$valid=!0;this.$invalid=!1;this.$error={};this.$$success={};this.$pending=void 0;this.$name=l(d.name||"",!1)(a);this.$$parentForm=Lb;var m=e(d.ngModel),n=m.assign,p=m,u=n,s=null,B,r=this;this.$$setOptions=function(a){if((r.$options=a)&&a.getterSetter){var b=e(d.ngModel+"()"),f=e(d.ngModel+"($$$p)");p=function(a){var c=m(a);z(c)&&(c=b(a));
return c};u=function(a,b){z(m(a))?f(a,{$$$p:b}):n(a,b)}}else if(!m.assign)throw nb("nonassign",d.ngModel,ya(c));};this.$render=A;this.$isEmpty=function(a){return y(a)||""===a||null===a||a!==a};this.$$updateEmptyClasses=function(a){r.$isEmpty(a)?(f.removeClass(c,"ng-not-empty"),f.addClass(c,"ng-empty")):(f.removeClass(c,"ng-empty"),f.addClass(c,"ng-not-empty"))};var J=0;Kd({ctrl:this,$element:c,set:function(a,b){a[b]=!0},unset:function(a,b){delete a[b]},$animate:f});this.$setPristine=function(){r.$dirty=
!1;r.$pristine=!0;f.removeClass(c,Mb);f.addClass(c,Ua)};this.$setDirty=function(){r.$dirty=!0;r.$pristine=!1;f.removeClass(c,Ua);f.addClass(c,Mb);r.$$parentForm.$setDirty()};this.$setUntouched=function(){r.$touched=!1;r.$untouched=!0;f.setClass(c,"ng-untouched","ng-touched")};this.$setTouched=function(){r.$touched=!0;r.$untouched=!1;f.setClass(c,"ng-touched","ng-untouched")};this.$rollbackViewValue=function(){g.cancel(s);r.$viewValue=r.$$lastCommittedViewValue;r.$render()};this.$validate=function(){if(!T(r.$modelValue)||
!isNaN(r.$modelValue)){var a=r.$$rawModelValue,b=r.$valid,c=r.$modelValue,d=r.$options&&r.$options.allowInvalid;r.$$runValidators(a,r.$$lastCommittedViewValue,function(e){d||b===e||(r.$modelValue=e?a:void 0,r.$modelValue!==c&&r.$$writeModelToScope())})}};this.$$runValidators=function(a,b,c){function d(){var c=!0;q(r.$validators,function(d,e){var g=d(a,b);c=c&&g;f(e,g)});return c?!0:(q(r.$asyncValidators,function(a,b){f(b,null)}),!1)}function e(){var c=[],d=!0;q(r.$asyncValidators,function(e,g){var h=
e(a,b);if(!h||!z(h.then))throw nb("nopromise",h);f(g,void 0);c.push(h.then(function(){f(g,!0)},function(){d=!1;f(g,!1)}))});c.length?k.all(c).then(function(){g(d)},A):g(!0)}function f(a,b){h===J&&r.$setValidity(a,b)}function g(a){h===J&&c(a)}J++;var h=J;(function(){var a=r.$$parserName||"parse";if(y(B))f(a,null);else return B||(q(r.$validators,function(a,b){f(b,null)}),q(r.$asyncValidators,function(a,b){f(b,null)})),f(a,B),B;return!0})()?d()?e():g(!1):g(!1)};this.$commitViewValue=function(){var a=
r.$viewValue;g.cancel(s);if(r.$$lastCommittedViewValue!==a||""===a&&r.$$hasNativeValidators)r.$$updateEmptyClasses(a),r.$$lastCommittedViewValue=a,r.$pristine&&this.$setDirty(),this.$$parseAndValidate()};this.$$parseAndValidate=function(){var b=r.$$lastCommittedViewValue;if(B=y(b)?void 0:!0)for(var c=0;c<r.$parsers.length;c++)if(b=r.$parsers[c](b),y(b)){B=!1;break}T(r.$modelValue)&&isNaN(r.$modelValue)&&(r.$modelValue=p(a));var d=r.$modelValue,e=r.$options&&r.$options.allowInvalid;r.$$rawModelValue=
b;e&&(r.$modelValue=b,r.$modelValue!==d&&r.$$writeModelToScope());r.$$runValidators(b,r.$$lastCommittedViewValue,function(a){e||(r.$modelValue=a?b:void 0,r.$modelValue!==d&&r.$$writeModelToScope())})};this.$$writeModelToScope=function(){u(a,r.$modelValue);q(r.$viewChangeListeners,function(a){try{a()}catch(c){b(c)}})};this.$setViewValue=function(a,b){r.$viewValue=a;r.$options&&!r.$options.updateOnDefault||r.$$debounceViewValueCommit(b)};this.$$debounceViewValueCommit=function(b){var c=0,d=r.$options;
d&&w(d.debounce)&&(d=d.debounce,T(d)?c=d:T(d[b])?c=d[b]:T(d["default"])&&(c=d["default"]));g.cancel(s);c?s=g(function(){r.$commitViewValue()},c):h.$$phase?r.$commitViewValue():a.$apply(function(){r.$commitViewValue()})};a.$watch(function(){var b=p(a);if(b!==r.$modelValue&&(r.$modelValue===r.$modelValue||b===b)){r.$modelValue=r.$$rawModelValue=b;B=void 0;for(var c=r.$formatters,d=c.length,e=b;d--;)e=c[d](e);r.$viewValue!==e&&(r.$$updateEmptyClasses(e),r.$viewValue=r.$$lastCommittedViewValue=e,r.$render(),
r.$$runValidators(b,e,A))}return b})}],Re=["$rootScope",function(a){return{restrict:"A",require:["ngModel","^?form","^?ngModelOptions"],controller:Pg,priority:1,compile:function(b){b.addClass(Ua).addClass("ng-untouched").addClass(ob);return{pre:function(a,b,e,f){var g=f[0];b=f[1]||g.$$parentForm;g.$$setOptions(f[2]&&f[2].$options);b.$addControl(g);e.$observe("name",function(a){g.$name!==a&&g.$$parentForm.$$renameControl(g,a)});a.$on("$destroy",function(){g.$$parentForm.$removeControl(g)})},post:function(b,
c,e,f){var g=f[0];if(g.$options&&g.$options.updateOn)c.on(g.$options.updateOn,function(a){g.$$debounceViewValueCommit(a&&a.type)});c.on("blur",function(){g.$touched||(a.$$phase?b.$evalAsync(g.$setTouched):b.$apply(g.$setTouched))})}}}}}],Qg=/(\s+|^)default(\s+|$)/,Ve=function(){return{restrict:"A",controller:["$scope","$attrs",function(a,b){var d=this;this.$options=pa(a.$eval(b.ngModelOptions));w(this.$options.updateOn)?(this.$options.updateOnDefault=!1,this.$options.updateOn=W(this.$options.updateOn.replace(Qg,
function(){d.$options.updateOnDefault=!0;return" "}))):this.$options.updateOnDefault=!0}]}},He=Ta({terminal:!0,priority:1E3}),Rg=N("ngOptions"),Sg=/^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/,Pe=["$compile","$document","$parse",function(a,b,d){function c(a,b,c){function e(a,b,c,d,f){this.selectValue=a;this.viewValue=
b;this.label=c;this.group=d;this.disabled=f}function f(a){var b;if(!q&&ta(a))b=a;else{b=[];for(var c in a)a.hasOwnProperty(c)&&"$"!==c.charAt(0)&&b.push(c)}return b}var n=a.match(Sg);if(!n)throw Rg("iexp",a,ya(b));var p=n[5]||n[7],q=n[6];a=/ as /.test(n[0])&&n[1];var s=n[9];b=d(n[2]?n[1]:p);var w=a&&d(a)||b,r=s&&d(s),y=s?function(a,b){return r(c,b)}:function(a){return Ca(a)},v=function(a,b){return y(a,E(a,b))},A=d(n[2]||n[1]),t=d(n[3]||""),K=d(n[4]||""),z=d(n[8]),H={},E=q?function(a,b){H[q]=b;H[p]=
a;return H}:function(a){H[p]=a;return H};return{trackBy:s,getTrackByValue:v,getWatchables:d(z,function(a){var b=[];a=a||[];for(var d=f(a),e=d.length,g=0;g<e;g++){var h=a===d?g:d[g],l=a[h],h=E(l,h),l=y(l,h);b.push(l);if(n[2]||n[1])l=A(c,h),b.push(l);n[4]&&(h=K(c,h),b.push(h))}return b}),getOptions:function(){for(var a=[],b={},d=z(c)||[],g=f(d),h=g.length,n=0;n<h;n++){var p=d===g?n:g[n],q=E(d[p],p),r=w(c,q),p=y(r,q),u=A(c,q),H=t(c,q),q=K(c,q),r=new e(p,r,u,H,q);a.push(r);b[p]=r}return{items:a,selectValueMap:b,
getOptionFromViewValue:function(a){return b[v(a)]},getViewValueFromOption:function(a){return s?ca.copy(a.viewValue):a.viewValue}}}}}var e=C.document.createElement("option"),f=C.document.createElement("optgroup");return{restrict:"A",terminal:!0,require:["select","ngModel"],link:{pre:function(a,b,c,d){d[0].registerOption=A},post:function(d,h,k,l){function m(a,b){a.element=b;b.disabled=a.disabled;a.label!==b.label&&(b.label=a.label,b.textContent=a.label);a.value!==b.value&&(b.value=a.selectValue)}function n(){var a=
t&&p.readValue();if(t)for(var b=t.items.length-1;0<=b;b--){var c=t.items[b];w(c.group)?Db(c.element.parentNode):Db(c.element)}t=K.getOptions();var d={};v&&h.prepend(B);t.items.forEach(function(a){var b;if(w(a.group)){b=d[a.group];b||(b=f.cloneNode(!1),C.appendChild(b),b.label=null===a.group?"null":a.group,d[a.group]=b);var c=e.cloneNode(!1)}else b=C,c=e.cloneNode(!1);b.appendChild(c);m(a,c)});h[0].appendChild(C);s.$render();s.$isEmpty(a)||(b=p.readValue(),(K.trackBy||y?na(a,b):a===b)||(s.$setViewValue(b),
s.$render()))}var p=l[0],s=l[1],y=k.multiple,B;l=0;for(var r=h.children(),A=r.length;l<A;l++)if(""===r[l].value){B=r.eq(l);break}var v=!!B,z=F(e.cloneNode(!1));z.val("?");var t,K=c(k.ngOptions,h,d),C=b[0].createDocumentFragment();y?(s.$isEmpty=function(a){return!a||0===a.length},p.writeValue=function(a){t.items.forEach(function(a){a.element.selected=!1});a&&a.forEach(function(a){if(a=t.getOptionFromViewValue(a))a.element.selected=!0})},p.readValue=function(){var a=h.val()||[],b=[];q(a,function(a){(a=
t.selectValueMap[a])&&!a.disabled&&b.push(t.getViewValueFromOption(a))});return b},K.trackBy&&d.$watchCollection(function(){if(L(s.$viewValue))return s.$viewValue.map(function(a){return K.getTrackByValue(a)})},function(){s.$render()})):(p.writeValue=function(a){var b=t.getOptionFromViewValue(a);b?(h[0].value!==b.selectValue&&(z.remove(),v||B.remove(),h[0].value=b.selectValue,b.element.selected=!0),b.element.setAttribute("selected","selected")):null===a||v?(z.remove(),v||h.prepend(B),h.val(""),B.prop("selected",
!0),B.attr("selected",!0)):(v||B.remove(),h.prepend(z),h.val("?"),z.prop("selected",!0),z.attr("selected",!0))},p.readValue=function(){var a=t.selectValueMap[h.val()];return a&&!a.disabled?(v||B.remove(),z.remove(),t.getViewValueFromOption(a)):null},K.trackBy&&d.$watch(function(){return K.getTrackByValue(s.$viewValue)},function(){s.$render()}));v?(B.remove(),a(B)(d),B.removeClass("ng-scope")):B=F(e.cloneNode(!1));h.empty();n();d.$watchCollection(K.getWatchables,n)}}}}],Ie=["$locale","$interpolate",
"$log",function(a,b,d){var c=/{}/g,e=/^when(Minus)?(.+)$/;return{link:function(f,g,h){function k(a){g.text(a||"")}var l=h.count,m=h.$attr.when&&g.attr(h.$attr.when),n=h.offset||0,p=f.$eval(m)||{},s={},w=b.startSymbol(),B=b.endSymbol(),r=w+l+"-"+n+B,z=ca.noop,v;q(h,function(a,b){var c=e.exec(b);c&&(c=(c[1]?"-":"")+Q(c[2]),p[c]=g.attr(h.$attr[b]))});q(p,function(a,d){s[d]=b(a.replace(c,r))});f.$watch(l,function(b){var c=parseFloat(b),e=isNaN(c);e||c in p||(c=a.pluralCat(c-n));c===v||e&&T(v)&&isNaN(v)||
(z(),e=s[c],y(e)?(null!=b&&d.debug("ngPluralize: no rule defined for '"+c+"' in "+m),z=A,k()):z=f.$watch(e,k),v=c)})}}}],Je=["$parse","$animate","$compile",function(a,b,d){var c=N("ngRepeat"),e=function(a,b,c,d,e,m,n){a[c]=d;e&&(a[e]=m);a.$index=b;a.$first=0===b;a.$last=b===n-1;a.$middle=!(a.$first||a.$last);a.$odd=!(a.$even=0===(b&1))};return{restrict:"A",multiElement:!0,transclude:"element",priority:1E3,terminal:!0,$$tlb:!0,compile:function(f,g){var h=g.ngRepeat,k=d.$$createComment("end ngRepeat",
h),l=h.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);if(!l)throw c("iexp",h);var m=l[1],n=l[2],p=l[3],s=l[4],l=m.match(/^(?:(\s*[\$\w]+)|\(\s*([\$\w]+)\s*,\s*([\$\w]+)\s*\))$/);if(!l)throw c("iidexp",m);var w=l[3]||l[1],y=l[2];if(p&&(!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(p)||/^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(p)))throw c("badident",p);var r,z,v,A,t={$id:Ca};s?r=a(s):(v=function(a,b){return Ca(b)},
A=function(a){return a});return function(a,d,f,g,l){r&&(z=function(b,c,d){y&&(t[y]=b);t[w]=c;t.$index=d;return r(a,t)});var m=U();a.$watchCollection(n,function(f){var g,n,r=d[0],s,u=U(),t,C,F,E,G,D,H;p&&(a[p]=f);if(ta(f))G=f,n=z||v;else for(H in n=z||A,G=[],f)ua.call(f,H)&&"$"!==H.charAt(0)&&G.push(H);t=G.length;H=Array(t);for(g=0;g<t;g++)if(C=f===G?g:G[g],F=f[C],E=n(C,F,g),m[E])D=m[E],delete m[E],u[E]=D,H[g]=D;else{if(u[E])throw q(H,function(a){a&&a.scope&&(m[a.id]=a)}),c("dupes",h,E,F);H[g]={id:E,
scope:void 0,clone:void 0};u[E]=!0}for(s in m){D=m[s];E=tb(D.clone);b.leave(E);if(E[0].parentNode)for(g=0,n=E.length;g<n;g++)E[g].$$NG_REMOVED=!0;D.scope.$destroy()}for(g=0;g<t;g++)if(C=f===G?g:G[g],F=f[C],D=H[g],D.scope){s=r;do s=s.nextSibling;while(s&&s.$$NG_REMOVED);D.clone[0]!=s&&b.move(tb(D.clone),null,r);r=D.clone[D.clone.length-1];e(D.scope,g,w,F,y,C,t)}else l(function(a,c){D.scope=c;var d=k.cloneNode(!1);a[a.length++]=d;b.enter(a,null,r);r=d;D.clone=a;u[D.id]=D;e(D.scope,g,w,F,y,C,t)});m=
u})}}}}],Ke=["$animate",function(a){return{restrict:"A",multiElement:!0,link:function(b,d,c){b.$watch(c.ngShow,function(b){a[b?"removeClass":"addClass"](d,"ng-hide",{tempClasses:"ng-hide-animate"})})}}}],De=["$animate",function(a){return{restrict:"A",multiElement:!0,link:function(b,d,c){b.$watch(c.ngHide,function(b){a[b?"addClass":"removeClass"](d,"ng-hide",{tempClasses:"ng-hide-animate"})})}}}],Le=Ta(function(a,b,d){a.$watch(d.ngStyle,function(a,d){d&&a!==d&&q(d,function(a,c){b.css(c,"")});a&&b.css(a)},
!0)}),Me=["$animate","$compile",function(a,b){return{require:"ngSwitch",controller:["$scope",function(){this.cases={}}],link:function(d,c,e,f){var g=[],h=[],k=[],l=[],m=function(a,b){return function(){a.splice(b,1)}};d.$watch(e.ngSwitch||e.on,function(c){var d,e;d=0;for(e=k.length;d<e;++d)a.cancel(k[d]);d=k.length=0;for(e=l.length;d<e;++d){var s=tb(h[d].clone);l[d].$destroy();(k[d]=a.leave(s)).then(m(k,d))}h.length=0;l.length=0;(g=f.cases["!"+c]||f.cases["?"])&&q(g,function(c){c.transclude(function(d,
e){l.push(e);var f=c.element;d[d.length++]=b.$$createComment("end ngSwitchWhen");h.push({clone:d});a.enter(d,f.parent(),f)})})})}}}],Ne=Ta({transclude:"element",priority:1200,require:"^ngSwitch",multiElement:!0,link:function(a,b,d,c,e){c.cases["!"+d.ngSwitchWhen]=c.cases["!"+d.ngSwitchWhen]||[];c.cases["!"+d.ngSwitchWhen].push({transclude:e,element:b})}}),Oe=Ta({transclude:"element",priority:1200,require:"^ngSwitch",multiElement:!0,link:function(a,b,d,c,e){c.cases["?"]=c.cases["?"]||[];c.cases["?"].push({transclude:e,
element:b})}}),Tg=N("ngTransclude"),Qe=["$compile",function(a){return{restrict:"EAC",terminal:!0,compile:function(b){var d=a(b.contents());b.empty();return function(a,b,f,g,h){function k(){d(a,function(a){b.append(a)})}if(!h)throw Tg("orphan",ya(b));f.ngTransclude===f.$attr.ngTransclude&&(f.ngTransclude="");f=f.ngTransclude||f.ngTranscludeSlot;h(function(a,c){a.length?b.append(a):(k(),c.$destroy())},null,f);f&&!h.isSlotFilled(f)&&k()}}}}],qe=["$templateCache",function(a){return{restrict:"E",terminal:!0,
compile:function(b,d){"text/ng-template"==d.type&&a.put(d.id,b[0].text)}}}],Ug={$setViewValue:A,$render:A},Vg=["$element","$scope",function(a,b){var d=this,c=new Ra;d.ngModelCtrl=Ug;d.unknownOption=F(C.document.createElement("option"));d.renderUnknownOption=function(b){b="? "+Ca(b)+" ?";d.unknownOption.val(b);a.prepend(d.unknownOption);a.val(b)};b.$on("$destroy",function(){d.renderUnknownOption=A});d.removeUnknownOption=function(){d.unknownOption.parent()&&d.unknownOption.remove()};d.readValue=function(){d.removeUnknownOption();
return a.val()};d.writeValue=function(b){d.hasOption(b)?(d.removeUnknownOption(),a.val(b),""===b&&d.emptyOption.prop("selected",!0)):null==b&&d.emptyOption?(d.removeUnknownOption(),a.val("")):d.renderUnknownOption(b)};d.addOption=function(a,b){if(8!==b[0].nodeType){Qa(a,'"option value"');""===a&&(d.emptyOption=b);var g=c.get(a)||0;c.put(a,g+1);d.ngModelCtrl.$render();b[0].hasAttribute("selected")&&(b[0].selected=!0)}};d.removeOption=function(a){var b=c.get(a);b&&(1===b?(c.remove(a),""===a&&(d.emptyOption=
void 0)):c.put(a,b-1))};d.hasOption=function(a){return!!c.get(a)};d.registerOption=function(a,b,c,h,k){if(h){var l;c.$observe("value",function(a){w(l)&&d.removeOption(l);l=a;d.addOption(a,b)})}else k?a.$watch(k,function(a,e){c.$set("value",a);e!==a&&d.removeOption(e);d.addOption(a,b)}):d.addOption(c.value,b);b.on("$destroy",function(){d.removeOption(c.value);d.ngModelCtrl.$render()})}}],re=function(){return{restrict:"E",require:["select","?ngModel"],controller:Vg,priority:1,link:{pre:function(a,b,
d,c){var e=c[1];if(e){var f=c[0];f.ngModelCtrl=e;b.on("change",function(){a.$apply(function(){e.$setViewValue(f.readValue())})});if(d.multiple){f.readValue=function(){var a=[];q(b.find("option"),function(b){b.selected&&a.push(b.value)});return a};f.writeValue=function(a){var c=new Ra(a);q(b.find("option"),function(a){a.selected=w(c.get(a.value))})};var g,h=NaN;a.$watch(function(){h!==e.$viewValue||na(g,e.$viewValue)||(g=ia(e.$viewValue),e.$render());h=e.$viewValue});e.$isEmpty=function(a){return!a||
0===a.length}}}},post:function(a,b,d,c){var e=c[1];if(e){var f=c[0];e.$render=function(){f.writeValue(e.$viewValue)}}}}}},te=["$interpolate",function(a){return{restrict:"E",priority:100,compile:function(b,d){if(w(d.value))var c=a(d.value,!0);else{var e=a(b.text(),!0);e||d.$set("value",b.text())}return function(a,b,d){var k=b.parent();(k=k.data("$selectController")||k.parent().data("$selectController"))&&k.registerOption(a,b,d,c,e)}}}}],se=ha({restrict:"E",terminal:!1}),Ic=function(){return{restrict:"A",
require:"?ngModel",link:function(a,b,d,c){c&&(d.required=!0,c.$validators.required=function(a,b){return!d.required||!c.$isEmpty(b)},d.$observe("required",function(){c.$validate()}))}}},Hc=function(){return{restrict:"A",require:"?ngModel",link:function(a,b,d,c){if(c){var e,f=d.ngPattern||d.pattern;d.$observe("pattern",function(a){G(a)&&0<a.length&&(a=new RegExp("^"+a+"$"));if(a&&!a.test)throw N("ngPattern")("noregexp",f,a,ya(b));e=a||void 0;c.$validate()});c.$validators.pattern=function(a,b){return c.$isEmpty(b)||
y(e)||e.test(b)}}}}},Kc=function(){return{restrict:"A",require:"?ngModel",link:function(a,b,d,c){if(c){var e=-1;d.$observe("maxlength",function(a){a=Z(a);e=isNaN(a)?-1:a;c.$validate()});c.$validators.maxlength=function(a,b){return 0>e||c.$isEmpty(b)||b.length<=e}}}}},Jc=function(){return{restrict:"A",require:"?ngModel",link:function(a,b,d,c){if(c){var e=0;d.$observe("minlength",function(a){e=Z(a)||0;c.$validate()});c.$validators.minlength=function(a,b){return c.$isEmpty(b)||b.length>=e}}}}};C.angular.bootstrap?
C.console&&console.log("WARNING: Tried to load angular more than once."):(je(),le(ca),ca.module("ngLocale",[],["$provide",function(a){function b(a){a+="";var b=a.indexOf(".");return-1==b?0:a.length-b-1}a.value("$locale",{DATETIME_FORMATS:{AMPMS:["AM","PM"],DAY:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),ERANAMES:["Before Christ","Anno Domini"],ERAS:["BC","AD"],FIRSTDAYOFWEEK:6,MONTH:"January February March April May June July August September October November December".split(" "),
SHORTDAY:"Sun Mon Tue Wed Thu Fri Sat".split(" "),SHORTMONTH:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),STANDALONEMONTH:"January February March April May June July August September October November December".split(" "),WEEKENDRANGE:[5,6],fullDate:"EEEE, MMMM d, y",longDate:"MMMM d, y",medium:"MMM d, y h:mm:ss a",mediumDate:"MMM d, y",mediumTime:"h:mm:ss a","short":"M/d/yy h:mm a",shortDate:"M/d/yy",shortTime:"h:mm a"},NUMBER_FORMATS:{CURRENCY_SYM:"$",DECIMAL_SEP:".",GROUP_SEP:",",
PATTERNS:[{gSize:3,lgSize:3,maxFrac:3,minFrac:0,minInt:1,negPre:"-",negSuf:"",posPre:"",posSuf:""},{gSize:3,lgSize:3,maxFrac:2,minFrac:2,minInt:1,negPre:"-\u00a4",negSuf:"",posPre:"\u00a4",posSuf:""}]},id:"en-us",localeID:"en_US",pluralCat:function(a,c){var e=a|0,f=c;void 0===f&&(f=Math.min(b(a),3));Math.pow(10,f);return 1==e&&0==f?"one":"other"}})}]),F(C.document).ready(function(){fe(C.document,Bc)}))})(window);!window.angular.$$csp().noInlineStyle&&window.angular.element(document.head).prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>');
// # sourceMappingURL=angular.min.js.map

/**
 * State-based routing for AngularJS
 * @version v0.3.1
 * @link http://angular-ui.github.com/
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
"undefined"!=typeof module&&"undefined"!=typeof exports&&module.exports===exports&&(module.exports="ui.router"),function(a,b,c){"use strict";function d(a,b){return R(new(R(function(){},{prototype:a})),b)}function e(a){return Q(arguments,function(b){b!==a&&Q(b,function(b,c){a.hasOwnProperty(c)||(a[c]=b)})}),a}function f(a,b){var c=[];for(var d in a.path){if(a.path[d]!==b.path[d])break;c.push(a.path[d])}return c}function g(a){if(Object.keys)return Object.keys(a);var b=[];return Q(a,function(a,c){b.push(c)}),b}function h(a,b){if(Array.prototype.indexOf)return a.indexOf(b,Number(arguments[2])||0);var c=a.length>>>0,d=Number(arguments[2])||0;for(d=0>d?Math.ceil(d):Math.floor(d),0>d&&(d+=c);c>d;d++)if(d in a&&a[d]===b)return d;return-1}function i(a,b,c,d){var e,i=f(c,d),j={},k=[];for(var l in i)if(i[l]&&i[l].params&&(e=g(i[l].params),e.length))for(var m in e)h(k,e[m])>=0||(k.push(e[m]),j[e[m]]=a[e[m]]);return R({},j,b)}function j(a,b,c){if(!c){c=[];for(var d in a)c.push(d)}for(var e=0;e<c.length;e++){var f=c[e];if(a[f]!=b[f])return!1}return!0}function k(a,b){var c={};return Q(a,function(a){c[a]=b[a]}),c}function l(a){var b={},c=Array.prototype.concat.apply(Array.prototype,Array.prototype.slice.call(arguments,1));return Q(c,function(c){c in a&&(b[c]=a[c])}),b}function m(a){var b={},c=Array.prototype.concat.apply(Array.prototype,Array.prototype.slice.call(arguments,1));for(var d in a)-1==h(c,d)&&(b[d]=a[d]);return b}function n(a,b){var c=P(a),d=c?[]:{};return Q(a,function(a,e){b(a,e)&&(d[c?d.length:e]=a)}),d}function o(a,b){var c=P(a)?[]:{};return Q(a,function(a,d){c[d]=b(a,d)}),c}function p(a,b){var d=1,f=2,i={},j=[],k=i,l=R(a.when(i),{$$promises:i,$$values:i});this.study=function(i){function n(a,c){if(s[c]!==f){if(r.push(c),s[c]===d)throw r.splice(0,h(r,c)),new Error("Cyclic dependency: "+r.join(" -> "));if(s[c]=d,N(a))q.push(c,[function(){return b.get(a)}],j);else{var e=b.annotate(a);Q(e,function(a){a!==c&&i.hasOwnProperty(a)&&n(i[a],a)}),q.push(c,a,e)}r.pop(),s[c]=f}}function o(a){return O(a)&&a.then&&a.$$promises}if(!O(i))throw new Error("'invocables' must be an object");var p=g(i||{}),q=[],r=[],s={};return Q(i,n),i=r=s=null,function(d,f,g){function h(){--u||(v||e(t,f.$$values),r.$$values=t,r.$$promises=r.$$promises||!0,delete r.$$inheritedValues,n.resolve(t))}function i(a){r.$$failure=a,n.reject(a)}function j(c,e,f){function j(a){l.reject(a),i(a)}function k(){if(!L(r.$$failure))try{l.resolve(b.invoke(e,g,t)),l.promise.then(function(a){t[c]=a,h()},j)}catch(a){j(a)}}var l=a.defer(),m=0;Q(f,function(a){s.hasOwnProperty(a)&&!d.hasOwnProperty(a)&&(m++,s[a].then(function(b){t[a]=b,--m||k()},j))}),m||k(),s[c]=l.promise}if(o(d)&&g===c&&(g=f,f=d,d=null),d){if(!O(d))throw new Error("'locals' must be an object")}else d=k;if(f){if(!o(f))throw new Error("'parent' must be a promise returned by $resolve.resolve()")}else f=l;var n=a.defer(),r=n.promise,s=r.$$promises={},t=R({},d),u=1+q.length/3,v=!1;if(L(f.$$failure))return i(f.$$failure),r;f.$$inheritedValues&&e(t,m(f.$$inheritedValues,p)),R(s,f.$$promises),f.$$values?(v=e(t,m(f.$$values,p)),r.$$inheritedValues=m(f.$$values,p),h()):(f.$$inheritedValues&&(r.$$inheritedValues=m(f.$$inheritedValues,p)),f.then(h,i));for(var w=0,x=q.length;x>w;w+=3)d.hasOwnProperty(q[w])?h():j(q[w],q[w+1],q[w+2]);return r}},this.resolve=function(a,b,c,d){return this.study(a)(b,c,d)}}function q(a,b,c){this.fromConfig=function(a,b,c){return L(a.template)?this.fromString(a.template,b):L(a.templateUrl)?this.fromUrl(a.templateUrl,b):L(a.templateProvider)?this.fromProvider(a.templateProvider,b,c):null},this.fromString=function(a,b){return M(a)?a(b):a},this.fromUrl=function(c,d){return M(c)&&(c=c(d)),null==c?null:a.get(c,{cache:b,headers:{Accept:"text/html"}}).then(function(a){return a.data})},this.fromProvider=function(a,b,d){return c.invoke(a,null,d||{params:b})}}function r(a,b,e){function f(b,c,d,e){if(q.push(b),o[b])return o[b];if(!/^\w+([-.]+\w+)*(?:\[\])?$/.test(b))throw new Error("Invalid parameter name '"+b+"' in pattern '"+a+"'");if(p[b])throw new Error("Duplicate parameter name '"+b+"' in pattern '"+a+"'");return p[b]=new U.Param(b,c,d,e),p[b]}function g(a,b,c,d){var e=["",""],f=a.replace(/[\\\[\]\^$*+?.()|{}]/g,"\\$&");if(!b)return f;switch(c){case!1:e=["(",")"+(d?"?":"")];break;case!0:f=f.replace(/\/$/,""),e=["(?:/(",")|/)?"];break;default:e=["("+c+"|",")?"]}return f+e[0]+b+e[1]}function h(e,f){var g,h,i,j,k;return g=e[2]||e[3],k=b.params[g],i=a.substring(m,e.index),h=f?e[4]:e[4]||("*"==e[1]?".*":null),h&&(j=U.type(h)||d(U.type("string"),{pattern:new RegExp(h,b.caseInsensitive?"i":c)})),{id:g,regexp:h,segment:i,type:j,cfg:k}}b=R({params:{}},O(b)?b:{});var i,j=/([:*])([\w\[\]]+)|\{([\w\[\]]+)(?:\:\s*((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g,k=/([:]?)([\w\[\].-]+)|\{([\w\[\].-]+)(?:\:\s*((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g,l="^",m=0,n=this.segments=[],o=e?e.params:{},p=this.params=e?e.params.$$new():new U.ParamSet,q=[];this.source=a;for(var r,s,t;(i=j.exec(a))&&(r=h(i,!1),!(r.segment.indexOf("?")>=0));)s=f(r.id,r.type,r.cfg,"path"),l+=g(r.segment,s.type.pattern.source,s.squash,s.isOptional),n.push(r.segment),m=j.lastIndex;t=a.substring(m);var u=t.indexOf("?");if(u>=0){var v=this.sourceSearch=t.substring(u);if(t=t.substring(0,u),this.sourcePath=a.substring(0,m+u),v.length>0)for(m=0;i=k.exec(v);)r=h(i,!0),s=f(r.id,r.type,r.cfg,"search"),m=j.lastIndex}else this.sourcePath=a,this.sourceSearch="";l+=g(t)+(b.strict===!1?"/?":"")+"$",n.push(t),this.regexp=new RegExp(l,b.caseInsensitive?"i":c),this.prefix=n[0],this.$$paramNames=q}function s(a){R(this,a)}function t(){function a(a){return null!=a?a.toString().replace(/~/g,"~~").replace(/\//g,"~2F"):a}function e(a){return null!=a?a.toString().replace(/~2F/g,"/").replace(/~~/g,"~"):a}function f(){return{strict:p,caseInsensitive:m}}function i(a){return M(a)||P(a)&&M(a[a.length-1])}function j(){for(;w.length;){var a=w.shift();if(a.pattern)throw new Error("You cannot override a type's .pattern at runtime.");b.extend(u[a.name],l.invoke(a.def))}}function k(a){R(this,a||{})}U=this;var l,m=!1,p=!0,q=!1,u={},v=!0,w=[],x={string:{encode:a,decode:e,is:function(a){return null==a||!L(a)||"string"==typeof a},pattern:/[^\/]*/},"int":{encode:a,decode:function(a){return parseInt(a,10)},is:function(a){return L(a)&&this.decode(a.toString())===a},pattern:/\d+/},bool:{encode:function(a){return a?1:0},decode:function(a){return 0!==parseInt(a,10)},is:function(a){return a===!0||a===!1},pattern:/0|1/},date:{encode:function(a){return this.is(a)?[a.getFullYear(),("0"+(a.getMonth()+1)).slice(-2),("0"+a.getDate()).slice(-2)].join("-"):c},decode:function(a){if(this.is(a))return a;var b=this.capture.exec(a);return b?new Date(b[1],b[2]-1,b[3]):c},is:function(a){return a instanceof Date&&!isNaN(a.valueOf())},equals:function(a,b){return this.is(a)&&this.is(b)&&a.toISOString()===b.toISOString()},pattern:/[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,capture:/([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/},json:{encode:b.toJson,decode:b.fromJson,is:b.isObject,equals:b.equals,pattern:/[^\/]*/},any:{encode:b.identity,decode:b.identity,equals:b.equals,pattern:/.*/}};t.$$getDefaultValue=function(a){if(!i(a.value))return a.value;if(!l)throw new Error("Injectable functions cannot be called at configuration time");return l.invoke(a.value)},this.caseInsensitive=function(a){return L(a)&&(m=a),m},this.strictMode=function(a){return L(a)&&(p=a),p},this.defaultSquashPolicy=function(a){if(!L(a))return q;if(a!==!0&&a!==!1&&!N(a))throw new Error("Invalid squash policy: "+a+". Valid policies: false, true, arbitrary-string");return q=a,a},this.compile=function(a,b){return new r(a,R(f(),b))},this.isMatcher=function(a){if(!O(a))return!1;var b=!0;return Q(r.prototype,function(c,d){M(c)&&(b=b&&L(a[d])&&M(a[d]))}),b},this.type=function(a,b,c){if(!L(b))return u[a];if(u.hasOwnProperty(a))throw new Error("A type named '"+a+"' has already been defined.");return u[a]=new s(R({name:a},b)),c&&(w.push({name:a,def:c}),v||j()),this},Q(x,function(a,b){u[b]=new s(R({name:b},a))}),u=d(u,{}),this.$get=["$injector",function(a){return l=a,v=!1,j(),Q(x,function(a,b){u[b]||(u[b]=new s(a))}),this}],this.Param=function(a,d,e,f){function j(a){var b=O(a)?g(a):[],c=-1===h(b,"value")&&-1===h(b,"type")&&-1===h(b,"squash")&&-1===h(b,"array");return c&&(a={value:a}),a.$$fn=i(a.value)?a.value:function(){return a.value},a}function k(c,d,e){if(c.type&&d)throw new Error("Param '"+a+"' has two type configurations.");return d?d:c.type?b.isString(c.type)?u[c.type]:c.type instanceof s?c.type:new s(c.type):"config"===e?u.any:u.string}function m(){var b={array:"search"===f?"auto":!1},c=a.match(/\[\]$/)?{array:!0}:{};return R(b,c,e).array}function p(a,b){var c=a.squash;if(!b||c===!1)return!1;if(!L(c)||null==c)return q;if(c===!0||N(c))return c;throw new Error("Invalid squash policy: '"+c+"'. Valid policies: false, true, or arbitrary string")}function r(a,b,d,e){var f,g,i=[{from:"",to:d||b?c:""},{from:null,to:d||b?c:""}];return f=P(a.replace)?a.replace:[],N(e)&&f.push({from:e,to:c}),g=o(f,function(a){return a.from}),n(i,function(a){return-1===h(g,a.from)}).concat(f)}function t(){if(!l)throw new Error("Injectable functions cannot be called at configuration time");var a=l.invoke(e.$$fn);if(null!==a&&a!==c&&!x.type.is(a))throw new Error("Default value ("+a+") for parameter '"+x.id+"' is not an instance of Type ("+x.type.name+")");return a}function v(a){function b(a){return function(b){return b.from===a}}function c(a){var c=o(n(x.replace,b(a)),function(a){return a.to});return c.length?c[0]:a}return a=c(a),L(a)?x.type.$normalize(a):t()}function w(){return"{Param:"+a+" "+d+" squash: '"+A+"' optional: "+z+"}"}var x=this;e=j(e),d=k(e,d,f);var y=m();d=y?d.$asArray(y,"search"===f):d,"string"!==d.name||y||"path"!==f||e.value!==c||(e.value="");var z=e.value!==c,A=p(e,z),B=r(e,y,z,A);R(this,{id:a,type:d,location:f,array:y,squash:A,replace:B,isOptional:z,value:v,dynamic:c,config:e,toString:w})},k.prototype={$$new:function(){return d(this,R(new k,{$$parent:this}))},$$keys:function(){for(var a=[],b=[],c=this,d=g(k.prototype);c;)b.push(c),c=c.$$parent;return b.reverse(),Q(b,function(b){Q(g(b),function(b){-1===h(a,b)&&-1===h(d,b)&&a.push(b)})}),a},$$values:function(a){var b={},c=this;return Q(c.$$keys(),function(d){b[d]=c[d].value(a&&a[d])}),b},$$equals:function(a,b){var c=!0,d=this;return Q(d.$$keys(),function(e){var f=a&&a[e],g=b&&b[e];d[e].type.equals(f,g)||(c=!1)}),c},$$validates:function(a){var d,e,f,g,h,i=this.$$keys();for(d=0;d<i.length&&(e=this[i[d]],f=a[i[d]],f!==c&&null!==f||!e.isOptional);d++){if(g=e.type.$normalize(f),!e.type.is(g))return!1;if(h=e.type.encode(g),b.isString(h)&&!e.type.pattern.exec(h))return!1}return!0},$$parent:c},this.ParamSet=k}function u(a,d){function e(a){var b=/^\^((?:\\[^a-zA-Z0-9]|[^\\\[\]\^$*+?.()|{}]+)*)/.exec(a.source);return null!=b?b[1].replace(/\\(.)/g,"$1"):""}function f(a,b){return a.replace(/\$(\$|\d{1,2})/,function(a,c){return b["$"===c?0:Number(c)]})}function g(a,b,c){if(!c)return!1;var d=a.invoke(b,b,{$match:c});return L(d)?d:!0}function h(d,e,f,g,h){function m(a,b,c){return"/"===q?a:b?q.slice(0,-1)+a:c?q.slice(1)+a:a}function n(a){function b(a){var b=a(f,d);return b?(N(b)&&d.replace().url(b),!0):!1}if(!a||!a.defaultPrevented){p&&d.url()===p;p=c;var e,g=j.length;for(e=0;g>e;e++)if(b(j[e]))return;k&&b(k)}}function o(){return i=i||e.$on("$locationChangeSuccess",n)}var p,q=g.baseHref(),r=d.url();return l||o(),{sync:function(){n()},listen:function(){return o()},update:function(a){return a?void(r=d.url()):void(d.url()!==r&&(d.url(r),d.replace()))},push:function(a,b,e){var f=a.format(b||{});null!==f&&b&&b["#"]&&(f+="#"+b["#"]),d.url(f),p=e&&e.$$avoidResync?d.url():c,e&&e.replace&&d.replace()},href:function(c,e,f){if(!c.validates(e))return null;var g=a.html5Mode();b.isObject(g)&&(g=g.enabled),g=g&&h.history;var i=c.format(e);if(f=f||{},g||null===i||(i="#"+a.hashPrefix()+i),null!==i&&e&&e["#"]&&(i+="#"+e["#"]),i=m(i,g,f.absolute),!f.absolute||!i)return i;var j=!g&&i?"/":"",k=d.port();return k=80===k||443===k?"":":"+k,[d.protocol(),"://",d.host(),k,j,i].join("")}}}var i,j=[],k=null,l=!1;this.rule=function(a){if(!M(a))throw new Error("'rule' must be a function");return j.push(a),this},this.otherwise=function(a){if(N(a)){var b=a;a=function(){return b}}else if(!M(a))throw new Error("'rule' must be a function");return k=a,this},this.when=function(a,b){var c,h=N(b);if(N(a)&&(a=d.compile(a)),!h&&!M(b)&&!P(b))throw new Error("invalid 'handler' in when()");var i={matcher:function(a,b){return h&&(c=d.compile(b),b=["$match",function(a){return c.format(a)}]),R(function(c,d){return g(c,b,a.exec(d.path(),d.search()))},{prefix:N(a.prefix)?a.prefix:""})},regex:function(a,b){if(a.global||a.sticky)throw new Error("when() RegExp must not be global or sticky");return h&&(c=b,b=["$match",function(a){return f(c,a)}]),R(function(c,d){return g(c,b,a.exec(d.path()))},{prefix:e(a)})}},j={matcher:d.isMatcher(a),regex:a instanceof RegExp};for(var k in j)if(j[k])return this.rule(i[k](a,b));throw new Error("invalid 'what' in when()")},this.deferIntercept=function(a){a===c&&(a=!0),l=a},this.$get=h,h.$inject=["$location","$rootScope","$injector","$browser","$sniffer"]}function v(a,e){function f(a){return 0===a.indexOf(".")||0===a.indexOf("^")}function m(a,b){if(!a)return c;var d=N(a),e=d?a:a.name,g=f(e);if(g){if(!b)throw new Error("No reference point given for path '"+e+"'");b=m(b);for(var h=e.split("."),i=0,j=h.length,k=b;j>i;i++)if(""!==h[i]||0!==i){if("^"!==h[i])break;if(!k.parent)throw new Error("Path '"+e+"' not valid for state '"+b.name+"'");k=k.parent}else k=b;h=h.slice(i).join("."),e=k.name+(k.name&&h?".":"")+h}var l=z[e];return!l||!d&&(d||l!==a&&l.self!==a)?c:l}function n(a,b){A[a]||(A[a]=[]),A[a].push(b)}function p(a){for(var b=A[a]||[];b.length;)q(b.shift())}function q(b){b=d(b,{self:b,resolve:b.resolve||{},toString:function(){return this.name}});var c=b.name;if(!N(c)||c.indexOf("@")>=0)throw new Error("State must have a valid name");if(z.hasOwnProperty(c))throw new Error("State '"+c+"' is already defined");var e=-1!==c.indexOf(".")?c.substring(0,c.lastIndexOf(".")):N(b.parent)?b.parent:O(b.parent)&&N(b.parent.name)?b.parent.name:"";if(e&&!z[e])return n(e,b.self);for(var f in C)M(C[f])&&(b[f]=C[f](b,C.$delegates[f]));return z[c]=b,!b[B]&&b.url&&a.when(b.url,["$match","$stateParams",function(a,c){y.$current.navigable==b&&j(a,c)||y.transitionTo(b,a,{inherit:!0,location:!1})}]),p(c),b}function r(a){return a.indexOf("*")>-1}function s(a){for(var b=a.split("."),c=y.$current.name.split("."),d=0,e=b.length;e>d;d++)"*"===b[d]&&(c[d]="*");return"**"===b[0]&&(c=c.slice(h(c,b[1])),c.unshift("**")),"**"===b[b.length-1]&&(c.splice(h(c,b[b.length-2])+1,Number.MAX_VALUE),c.push("**")),b.length!=c.length?!1:c.join("")===b.join("")}function t(a,b){return N(a)&&!L(b)?C[a]:M(b)&&N(a)?(C[a]&&!C.$delegates[a]&&(C.$delegates[a]=C[a]),C[a]=b,this):this}function u(a,b){return O(a)?b=a:b.name=a,q(b),this}function v(a,e,f,h,l,n,p,q,t){function u(b,c,d,f){var g=a.$broadcast("$stateNotFound",b,c,d);if(g.defaultPrevented)return p.update(),D;if(!g.retry)return null;if(f.$retry)return p.update(),E;var h=y.transition=e.when(g.retry);return h.then(function(){return h!==y.transition?A:(b.options.$retry=!0,y.transitionTo(b.to,b.toParams,b.options))},function(){return D}),p.update(),h}function v(a,c,d,g,i,j){function m(){var c=[];return Q(a.views,function(d,e){var g=d.resolve&&d.resolve!==a.resolve?d.resolve:{};g.$template=[function(){return f.load(e,{view:d,locals:i.globals,params:n,notify:j.notify})||""}],c.push(l.resolve(g,i.globals,i.resolve,a).then(function(c){if(M(d.controllerProvider)||P(d.controllerProvider)){var f=b.extend({},g,i.globals);c.$$controller=h.invoke(d.controllerProvider,null,f)}else c.$$controller=d.controller;c.$$state=a,c.$$controllerAs=d.controllerAs,c.$$resolveAs=d.resolveAs,i[e]=c}))}),e.all(c).then(function(){return i.globals})}var n=d?c:k(a.params.$$keys(),c),o={$stateParams:n};i.resolve=l.resolve(a.resolve,o,i.resolve,a);var p=[i.resolve.then(function(a){i.globals=a})];return g&&p.push(g),e.all(p).then(m).then(function(a){return i})}var A=e.reject(new Error("transition superseded")),C=e.reject(new Error("transition prevented")),D=e.reject(new Error("transition aborted")),E=e.reject(new Error("transition failed"));return x.locals={resolve:null,globals:{$stateParams:{}}},y={params:{},current:x.self,$current:x,transition:null},y.reload=function(a){return y.transitionTo(y.current,n,{reload:a||!0,inherit:!1,notify:!0})},y.go=function(a,b,c){return y.transitionTo(a,b,R({inherit:!0,relative:y.$current},c))},y.transitionTo=function(b,c,f){c=c||{},f=R({location:!0,inherit:!1,relative:null,notify:!0,reload:!1,$retry:!1},f||{});var g,j=y.$current,l=y.params,o=j.path,q=m(b,f.relative),r=c["#"];if(!L(q)){var s={to:b,toParams:c,options:f},t=u(s,j.self,l,f);if(t)return t;if(b=s.to,c=s.toParams,f=s.options,q=m(b,f.relative),!L(q)){if(!f.relative)throw new Error("No such state '"+b+"'");throw new Error("Could not resolve '"+b+"' from state '"+f.relative+"'")}}if(q[B])throw new Error("Cannot transition to abstract state '"+b+"'");if(f.inherit&&(c=i(n,c||{},y.$current,q)),!q.params.$$validates(c))return E;c=q.params.$$values(c),b=q;var z=b.path,D=0,F=z[D],G=x.locals,H=[];if(f.reload){if(N(f.reload)||O(f.reload)){if(O(f.reload)&&!f.reload.name)throw new Error("Invalid reload state object");var I=f.reload===!0?o[0]:m(f.reload);if(f.reload&&!I)throw new Error("No such reload state '"+(N(f.reload)?f.reload:f.reload.name)+"'");for(;F&&F===o[D]&&F!==I;)G=H[D]=F.locals,D++,F=z[D]}}else for(;F&&F===o[D]&&F.ownParams.$$equals(c,l);)G=H[D]=F.locals,D++,F=z[D];if(w(b,c,j,l,G,f))return r&&(c["#"]=r),y.params=c,S(y.params,n),S(k(b.params.$$keys(),n),b.locals.globals.$stateParams),f.location&&b.navigable&&b.navigable.url&&(p.push(b.navigable.url,c,{$$avoidResync:!0,replace:"replace"===f.location}),p.update(!0)),y.transition=null,e.when(y.current);if(c=k(b.params.$$keys(),c||{}),r&&(c["#"]=r),f.notify&&a.$broadcast("$stateChangeStart",b.self,c,j.self,l,f).defaultPrevented)return a.$broadcast("$stateChangeCancel",b.self,c,j.self,l),null==y.transition&&p.update(),C;for(var J=e.when(G),K=D;K<z.length;K++,F=z[K])G=H[K]=d(G),J=v(F,c,F===b,J,G,f);var M=y.transition=J.then(function(){var d,e,g;if(y.transition!==M)return A;for(d=o.length-1;d>=D;d--)g=o[d],g.self.onExit&&h.invoke(g.self.onExit,g.self,g.locals.globals),g.locals=null;for(d=D;d<z.length;d++)e=z[d],e.locals=H[d],e.self.onEnter&&h.invoke(e.self.onEnter,e.self,e.locals.globals);return y.transition!==M?A:(y.$current=b,y.current=b.self,y.params=c,S(y.params,n),y.transition=null,f.location&&b.navigable&&p.push(b.navigable.url,b.navigable.locals.globals.$stateParams,{$$avoidResync:!0,replace:"replace"===f.location}),f.notify&&a.$broadcast("$stateChangeSuccess",b.self,c,j.self,l),p.update(!0),y.current)}).then(null,function(d){return y.transition!==M?A:(y.transition=null,g=a.$broadcast("$stateChangeError",b.self,c,j.self,l,d),g.defaultPrevented||p.update(),e.reject(d))});return M},y.is=function(a,b,d){d=R({relative:y.$current},d||{});var e=m(a,d.relative);return L(e)?y.$current!==e?!1:b?j(e.params.$$values(b),n):!0:c},y.includes=function(a,b,d){if(d=R({relative:y.$current},d||{}),N(a)&&r(a)){if(!s(a))return!1;a=y.$current.name}var e=m(a,d.relative);return L(e)?L(y.$current.includes[e.name])?b?j(e.params.$$values(b),n,g(b)):!0:!1:c},y.href=function(a,b,d){d=R({lossy:!0,inherit:!0,absolute:!1,relative:y.$current},d||{});var e=m(a,d.relative);if(!L(e))return null;d.inherit&&(b=i(n,b||{},y.$current,e));var f=e&&d.lossy?e.navigable:e;return f&&f.url!==c&&null!==f.url?p.href(f.url,k(e.params.$$keys().concat("#"),b||{}),{absolute:d.absolute}):null},y.get=function(a,b){if(0===arguments.length)return o(g(z),function(a){return z[a].self});var c=m(a,b||y.$current);return c&&c.self?c.self:null},y}function w(a,b,c,d,e,f){function g(a,b,c){function d(b){return"search"!=a.params[b].location}var e=a.params.$$keys().filter(d),f=l.apply({},[a.params].concat(e)),g=new U.ParamSet(f);return g.$$equals(b,c)}return!f.reload&&a===c&&(e===c.locals||a.self.reloadOnSearch===!1&&g(c,d,b))?!0:void 0}var x,y,z={},A={},B="abstract",C={parent:function(a){if(L(a.parent)&&a.parent)return m(a.parent);var b=/^(.+)\.[^.]+$/.exec(a.name);return b?m(b[1]):x},data:function(a){return a.parent&&a.parent.data&&(a.data=a.self.data=d(a.parent.data,a.data)),a.data},url:function(a){var b=a.url,c={params:a.params||{}};if(N(b))return"^"==b.charAt(0)?e.compile(b.substring(1),c):(a.parent.navigable||x).url.concat(b,c);if(!b||e.isMatcher(b))return b;throw new Error("Invalid url '"+b+"' in state '"+a+"'")},navigable:function(a){return a.url?a:a.parent?a.parent.navigable:null},ownParams:function(a){var b=a.url&&a.url.params||new U.ParamSet;return Q(a.params||{},function(a,c){b[c]||(b[c]=new U.Param(c,null,a,"config"))}),b},params:function(a){var b=l(a.ownParams,a.ownParams.$$keys());return a.parent&&a.parent.params?R(a.parent.params.$$new(),b):new U.ParamSet},views:function(a){var b={};return Q(L(a.views)?a.views:{"":a},function(c,d){d.indexOf("@")<0&&(d+="@"+a.parent.name),c.resolveAs=c.resolveAs||a.resolveAs||"$resolve",b[d]=c}),b},path:function(a){return a.parent?a.parent.path.concat(a):[]},includes:function(a){var b=a.parent?R({},a.parent.includes):{};return b[a.name]=!0,b},$delegates:{}};x=q({name:"",url:"^",views:null,"abstract":!0}),x.navigable=null,this.decorator=t,this.state=u,this.$get=v,v.$inject=["$rootScope","$q","$view","$injector","$resolve","$stateParams","$urlRouter","$location","$urlMatcherFactory"]}function w(){function a(a,b){return{load:function(a,c){var d,e={template:null,controller:null,view:null,locals:null,notify:!0,async:!0,params:{}};return c=R(e,c),c.view&&(d=b.fromConfig(c.view,c.params,c.locals)),d}}}this.$get=a,a.$inject=["$rootScope","$templateFactory"]}function x(){var a=!1;this.useAnchorScroll=function(){a=!0},this.$get=["$anchorScroll","$timeout",function(b,c){return a?b:function(a){return c(function(){a[0].scrollIntoView()},0,!1)}}]}function y(a,c,d,e,f){function g(){return c.has?function(a){return c.has(a)?c.get(a):null}:function(a){try{return c.get(a)}catch(b){return null}}}function h(a,c){var d=function(){return{enter:function(a,b,c){b.after(a),c()},leave:function(a,b){a.remove(),b()}}};if(k)return{enter:function(a,c,d){b.version.minor>2?k.enter(a,null,c).then(d):k.enter(a,null,c,d)},leave:function(a,c){b.version.minor>2?k.leave(a).then(c):k.leave(a,c)}};if(j){var e=j&&j(c,a);return{enter:function(a,b,c){e.enter(a,null,b),c()},leave:function(a,b){e.leave(a),b()}}}return d()}var i=g(),j=i("$animator"),k=i("$animate"),l={restrict:"ECA",terminal:!0,priority:400,transclude:"element",compile:function(c,g,i){return function(c,g,j){function k(){if(m&&(m.remove(),m=null),o&&(o.$destroy(),o=null),n){var a=n.data("$uiViewAnim");s.leave(n,function(){a.$$animLeave.resolve(),m=null}),m=n,n=null}}function l(h){var l,m=A(c,j,g,e),t=m&&a.$current&&a.$current.locals[m];if(h||t!==p){l=c.$new(),p=a.$current.locals[m],l.$emit("$viewContentLoading",m);var u=i(l,function(a){var e=f.defer(),h=f.defer(),i={$animEnter:e.promise,$animLeave:h.promise,$$animLeave:h};a.data("$uiViewAnim",i),s.enter(a,g,function(){e.resolve(),o&&o.$emit("$viewContentAnimationEnded"),(b.isDefined(r)&&!r||c.$eval(r))&&d(a)}),k()});n=u,o=l,o.$emit("$viewContentLoaded",m),o.$eval(q)}}var m,n,o,p,q=j.onload||"",r=j.autoscroll,s=h(j,c);g.inheritedData("$uiView");c.$on("$stateChangeSuccess",function(){l(!1)}),l(!0)}}};return l}function z(a,c,d,e){return{restrict:"ECA",priority:-400,compile:function(f){var g=f.html();return function(f,h,i){var j=d.$current,k=A(f,i,h,e),l=j&&j.locals[k];if(l){h.data("$uiView",{name:k,state:l.$$state}),h.html(l.$template?l.$template:g);var m=b.extend({},l);f[l.$$resolveAs]=m;var n=a(h.contents());if(l.$$controller){l.$scope=f,l.$element=h;var o=c(l.$$controller,l);l.$$controllerAs&&(f[l.$$controllerAs]=o,f[l.$$controllerAs][l.$$resolveAs]=m),M(o.$onInit)&&o.$onInit(),h.data("$ngControllerController",o),h.children().data("$ngControllerController",o)}n(f)}}}}}function A(a,b,c,d){var e=d(b.uiView||b.name||"")(a),f=c.inheritedData("$uiView");return e.indexOf("@")>=0?e:e+"@"+(f?f.state.name:"")}function B(a,b){var c,d=a.match(/^\s*({[^}]*})\s*$/);if(d&&(a=b+"("+d[1]+")"),c=a.replace(/\n/g," ").match(/^([^(]+?)\s*(\((.*)\))?$/),!c||4!==c.length)throw new Error("Invalid state ref '"+a+"'");return{state:c[1],paramExpr:c[3]||null}}function C(a){var b=a.parent().inheritedData("$uiView");return b&&b.state&&b.state.name?b.state:void 0}function D(a){var b="[object SVGAnimatedString]"===Object.prototype.toString.call(a.prop("href")),c="FORM"===a[0].nodeName;return{attr:c?"action":b?"xlink:href":"href",isAnchor:"A"===a.prop("tagName").toUpperCase(),clickable:!c}}function E(a,b,c,d,e){return function(f){var g=f.which||f.button,h=e();if(!(g>1||f.ctrlKey||f.metaKey||f.shiftKey||a.attr("target"))){var i=c(function(){b.go(h.state,h.params,h.options)});f.preventDefault();var j=d.isAnchor&&!h.href?1:0;f.preventDefault=function(){j--<=0&&c.cancel(i)}}}}function F(a,b){return{relative:C(a)||b.$current,inherit:!0}}function G(a,c){return{restrict:"A",require:["?^uiSrefActive","?^uiSrefActiveEq"],link:function(d,e,f,g){var h,i=B(f.uiSref,a.current.name),j={state:i.state,href:null,params:null},k=D(e),l=g[1]||g[0],m=null;j.options=R(F(e,a),f.uiSrefOpts?d.$eval(f.uiSrefOpts):{});var n=function(c){c&&(j.params=b.copy(c)),j.href=a.href(i.state,j.params,j.options),m&&m(),l&&(m=l.$$addStateInfo(i.state,j.params)),null!==j.href&&f.$set(k.attr,j.href)};i.paramExpr&&(d.$watch(i.paramExpr,function(a){a!==j.params&&n(a)},!0),j.params=b.copy(d.$eval(i.paramExpr))),n(),k.clickable&&(h=E(e,a,c,k,function(){return j}),e.bind("click",h),d.$on("$destroy",function(){e.unbind("click",h)}))}}}function H(a,b){return{restrict:"A",require:["?^uiSrefActive","?^uiSrefActiveEq"],link:function(c,d,e,f){function g(b){m.state=b[0],m.params=b[1],m.options=b[2],m.href=a.href(m.state,m.params,m.options),n&&n(),j&&(n=j.$$addStateInfo(m.state,m.params)),m.href&&e.$set(i.attr,m.href)}var h,i=D(d),j=f[1]||f[0],k=[e.uiState,e.uiStateParams||null,e.uiStateOpts||null],l="["+k.map(function(a){return a||"null"}).join(", ")+"]",m={state:null,params:null,options:null,href:null},n=null;c.$watch(l,g,!0),g(c.$eval(l)),i.clickable&&(h=E(d,a,b,i,function(){return m}),d.bind("click",h),c.$on("$destroy",function(){d.unbind("click",h)}))}}}function I(a,b,c){return{restrict:"A",controller:["$scope","$element","$attrs","$timeout",function(b,d,e,f){function g(b,c,e){var f=a.get(b,C(d)),g=h(b,c),i={state:f||{name:b},params:c,hash:g};return p.push(i),q[g]=e,function(){var a=p.indexOf(i);-1!==a&&p.splice(a,1)}}function h(a,c){if(!N(a))throw new Error("state should be a string");return O(c)?a+T(c):(c=b.$eval(c),O(c)?a+T(c):a)}function i(){for(var a=0;a<p.length;a++)l(p[a].state,p[a].params)?j(d,q[p[a].hash]):k(d,q[p[a].hash]),m(p[a].state,p[a].params)?j(d,n):k(d,n)}function j(a,b){f(function(){a.addClass(b)})}function k(a,b){a.removeClass(b)}function l(b,c){return a.includes(b.name,c)}function m(b,c){return a.is(b.name,c)}var n,o,p=[],q={};n=c(e.uiSrefActiveEq||"",!1)(b);try{o=b.$eval(e.uiSrefActive)}catch(r){}o=o||c(e.uiSrefActive||"",!1)(b),O(o)&&Q(o,function(c,d){if(N(c)){var e=B(c,a.current.name);g(e.state,b.$eval(e.paramExpr),d)}}),this.$$addStateInfo=function(a,b){if(!(O(o)&&p.length>0)){var c=g(a,b,o);return i(),c}},b.$on("$stateChangeSuccess",i),i()}]}}function J(a){var b=function(b,c){return a.is(b,c)};return b.$stateful=!0,b}function K(a){var b=function(b,c,d){return a.includes(b,c,d)};return b.$stateful=!0,b}var L=b.isDefined,M=b.isFunction,N=b.isString,O=b.isObject,P=b.isArray,Q=b.forEach,R=b.extend,S=b.copy,T=b.toJson;b.module("ui.router.util",["ng"]),b.module("ui.router.router",["ui.router.util"]),b.module("ui.router.state",["ui.router.router","ui.router.util"]),b.module("ui.router",["ui.router.state"]),b.module("ui.router.compat",["ui.router"]),p.$inject=["$q","$injector"],b.module("ui.router.util").service("$resolve",p),q.$inject=["$http","$templateCache","$injector"],b.module("ui.router.util").service("$templateFactory",q);var U;r.prototype.concat=function(a,b){var c={caseInsensitive:U.caseInsensitive(),strict:U.strictMode(),squash:U.defaultSquashPolicy()};return new r(this.sourcePath+a+this.sourceSearch,R(c,b),this)},r.prototype.toString=function(){return this.source},r.prototype.exec=function(a,b){function c(a){function b(a){return a.split("").reverse().join("")}function c(a){return a.replace(/\\-/g,"-")}var d=b(a).split(/-(?!\\)/),e=o(d,b);return o(e,c).reverse()}var d=this.regexp.exec(a);if(!d)return null;b=b||{};var e,f,g,h=this.parameters(),i=h.length,j=this.segments.length-1,k={};if(j!==d.length-1)throw new Error("Unbalanced capture group in route '"+this.source+"'");var l,m;for(e=0;j>e;e++){for(g=h[e],l=this.params[g],m=d[e+1],f=0;f<l.replace.length;f++)l.replace[f].from===m&&(m=l.replace[f].to);m&&l.array===!0&&(m=c(m)),L(m)&&(m=l.type.decode(m)),k[g]=l.value(m)}for(;i>e;e++){for(g=h[e],k[g]=this.params[g].value(b[g]),l=this.params[g],m=b[g],f=0;f<l.replace.length;f++)l.replace[f].from===m&&(m=l.replace[f].to);L(m)&&(m=l.type.decode(m)),k[g]=l.value(m)}return k},r.prototype.parameters=function(a){return L(a)?this.params[a]||null:this.$$paramNames},r.prototype.validates=function(a){return this.params.$$validates(a)},r.prototype.format=function(a){function b(a){return encodeURIComponent(a).replace(/-/g,function(a){return"%5C%"+a.charCodeAt(0).toString(16).toUpperCase()})}a=a||{};var c=this.segments,d=this.parameters(),e=this.params;if(!this.validates(a))return null;var f,g=!1,h=c.length-1,i=d.length,j=c[0];for(f=0;i>f;f++){var k=h>f,l=d[f],m=e[l],n=m.value(a[l]),p=m.isOptional&&m.type.equals(m.value(),n),q=p?m.squash:!1,r=m.type.encode(n);if(k){var s=c[f+1],t=f+1===h;if(q===!1)null!=r&&(j+=P(r)?o(r,b).join("-"):encodeURIComponent(r)),j+=s;else if(q===!0){var u=j.match(/\/$/)?/\/?(.*)/:/(.*)/;j+=s.match(u)[1]}else N(q)&&(j+=q+s);t&&m.squash===!0&&"/"===j.slice(-1)&&(j=j.slice(0,-1))}else{if(null==r||p&&q!==!1)continue;if(P(r)||(r=[r]),0===r.length)continue;r=o(r,encodeURIComponent).join("&"+l+"="),j+=(g?"&":"?")+(l+"="+r),g=!0}}return j},s.prototype.is=function(a,b){return!0},s.prototype.encode=function(a,b){return a},s.prototype.decode=function(a,b){return a},s.prototype.equals=function(a,b){return a==b},s.prototype.$subPattern=function(){var a=this.pattern.toString();return a.substr(1,a.length-2)},s.prototype.pattern=/.*/,s.prototype.toString=function(){return"{Type:"+this.name+"}"},s.prototype.$normalize=function(a){return this.is(a)?a:this.decode(a)},s.prototype.$asArray=function(a,b){function d(a,b){function d(a,b){return function(){return a[b].apply(a,arguments)}}function e(a){return P(a)?a:L(a)?[a]:[]}function f(a){switch(a.length){case 0:return c;case 1:return"auto"===b?a[0]:a;default:return a}}function g(a){return!a}function h(a,b){return function(c){if(P(c)&&0===c.length)return c;c=e(c);var d=o(c,a);return b===!0?0===n(d,g).length:f(d)}}function i(a){return function(b,c){var d=e(b),f=e(c);if(d.length!==f.length)return!1;for(var g=0;g<d.length;g++)if(!a(d[g],f[g]))return!1;return!0}}this.encode=h(d(a,"encode")),this.decode=h(d(a,"decode")),this.is=h(d(a,"is"),!0),this.equals=i(d(a,"equals")),this.pattern=a.pattern,this.$normalize=h(d(a,"$normalize")),this.name=a.name,this.$arrayMode=b}if(!a)return this;if("auto"===a&&!b)throw new Error("'auto' array mode is for query parameters only");return new d(this,a)},b.module("ui.router.util").provider("$urlMatcherFactory",t),b.module("ui.router.util").run(["$urlMatcherFactory",function(a){}]),u.$inject=["$locationProvider","$urlMatcherFactoryProvider"],b.module("ui.router.router").provider("$urlRouter",u),v.$inject=["$urlRouterProvider","$urlMatcherFactoryProvider"],b.module("ui.router.state").factory("$stateParams",function(){return{}}).constant("$state.runtime",{autoinject:!0}).provider("$state",v).run(["$injector",function(a){
a.get("$state.runtime").autoinject&&a.get("$state")}]),w.$inject=[],b.module("ui.router.state").provider("$view",w),b.module("ui.router.state").provider("$uiViewScroll",x),y.$inject=["$state","$injector","$uiViewScroll","$interpolate","$q"],z.$inject=["$compile","$controller","$state","$interpolate"],b.module("ui.router.state").directive("uiView",y),b.module("ui.router.state").directive("uiView",z),G.$inject=["$state","$timeout"],H.$inject=["$state","$timeout"],I.$inject=["$state","$stateParams","$interpolate"],b.module("ui.router.state").directive("uiSref",G).directive("uiSrefActive",I).directive("uiSrefActiveEq",I).directive("uiState",H),J.$inject=["$state"],K.$inject=["$state"],b.module("ui.router.state").filter("isState",J).filter("includedByState",K)}(window,window.angular);
/*global angular:true, browser:true */

/**
 * @license HTTP Auth Interceptor Module for AngularJS
 * (c) 2012 Witold Szczerba
 * License: MIT
 */
(function() {
	'use strict';

	angular.module('http-auth-interceptor', ['http-auth-interceptor-buffer'])

		.factory('authService', ['$rootScope', 'httpBuffer', function($rootScope, httpBuffer) {
			return {
				/**
				 * Call this function to indicate that authentication was successfull and trigger a
				 * retry of all deferred requests.
				 * @param data an optional argument to pass on to $broadcast which may be useful for
				 * example if you need to pass through details of the user that was logged in
				 * @param configUpdater an optional transformation function that can modify the
				 * requests that are retried after having logged in.  This can be used for example
				 * to add an authentication token.  It must return the request.
				 */
				loginConfirmed: function(data, accessToken) {
					var updater = function(config) {
						config.headers.AccessToken = accessToken;
						return config;
					};
					httpBuffer.retryAll(updater);
				},

				/**
				 * Call this function to indicate that authentication should not proceed.
				 * All deferred requests will be abandoned or rejected (if reason is provided).
				 * @param data an optional argument to pass on to $broadcast.
				 * @param reason if provided, the requests are rejected; abandoned otherwise.
				 */
				loginCancelled: function(data, reason) {
					httpBuffer.rejectAll(reason);
				}
			};
		}])

		/**
		 * $http interceptor.
		 * On 401 response (without 'ignoreAuthModule' option) stores the request
		 * and broadcasts 'event:auth-loginRequired'.
		 * On 403 response (without 'ignoreAuthModule' option) discards the request
		 * and broadcasts 'event:auth-forbidden'.
		 */
		.config(['$httpProvider', function($httpProvider) {
			$httpProvider.interceptors.push(['$rootScope', '$q', 'httpBuffer', 'mgError', function($rootScope, $q, httpBuffer, mgError) {
				return {
					'request': function(config) {
						var u = config.url;
						if (u && u.indexOf('api-v3') !== -1) {
							GmCXt.log(15, "REQUEST: " + u, {
								info: config
							});
						}
						return config;
					},
					'requestError': function(r) {
						//if (canRecover(r)) {
						//	return responseOrNewPromise
						//}

						var config = r.config || {};
						GmCXt.log(15, "REQUEST ERROR: " + config.url, {
							info: r
						});

						return $q.reject(r);
					},
					response: function(r) {
						var config = r.config || {};

						if (config.url.indexOf(GmCXt.conf.webServiceUrl) !== -1) {

							GmCXt.log(15, "RESPONSE: " + config.url, {
								info: r
							});

							if (r.data.error) {
								if (r.data.code === 1014) {
									$rootScope.$broadcast('event:maintenance');
								}
							}
						}

						return r;
					},
					responseError: function(r) {

						var config = r.config || {};

						if (!config.ignoreAuthModule) {

							GmCXt.log(15, "RESPONSE ERROR: " + config.url, {
								info: r
							});

							switch (r.status) {
								case 401:
									if (r.config && r.config.params && r.config.params.edcastRequest)
										break;

									if (r.config && r.config.url.indexOf("/user/token") !== -1) {
										$rootScope.$broadcast('event:auth-relogin');
										break;
									}

									if (r.config && r.config.url.indexOf('user/signout') !== -1) {
										$rootScope.$broadcast('event:logout');
										break;
									}

									var deferred = $q.defer();
									var bufferLength = httpBuffer.append(config, deferred);

									if (bufferLength > 0) {
										if (r.data.code === 1014) {
											$rootScope.$broadcast('event:maintenance');
										} else {
											var d = r.data;
											var c = r.config;

											d.url = c.url;
											d.data = c.data;
											d.method_type = c.method;
											mgError.on(d);
										}
									}

									httpBuffer.rejectAll();
									$q.reject(r);
									return deferred.promise;

									break;

								case 403:

									if (r && r.config && r.config.url && r.config.url.indexOf("analytics/create") !== -1)
										break;

									$rootScope.$broadcast('event:api-service-error', r);
									break;

								case 409:
									$rootScope.$broadcast('event:duplicate-tag-exist');
									break;

								case 422:

									break;

								default:

									if (r && r.config && r.config.params && r.config.params.edcastRequest)
										break;

									if (r && r.config && r.config.url && r.config.url.indexOf("analytics/create") !== -1)
										break;
							}
						}
						// otherwise, default behaviour
						return $q.reject(r);
					}
				};
			}]);
		}]);

	/**
	 * Private module, a utility, required internally by 'http-auth-interceptor'.
	 */
	angular.module('http-auth-interceptor-buffer', [])

		.factory('httpBuffer', ['$injector', function($injector) {
			/** Holds all the requests, so they can be re-requested in future. */
			var buffer = [];

			/** Service initialized later because of circular dependency problem. */
			var $http;

			function retryHttpRequest(config, deferred) {
				function successCallback(response) {
					deferred.resolve(response);
				}

				function errorCallback(response) {
					deferred.reject(response);
				}
				$http = $http || $injector.get('$http');
				$http(config).then(successCallback, errorCallback);
			}

			return {
				/**
				 * Appends HTTP request configuration object with deferred response attached to buffer.
				 * @return {Number} The new length of the buffer.
				 */
				append: function(config, deferred) {
					return buffer.push({
						config: config,
						deferred: deferred
					});
				},

				/**
				 * Abandon or reject (if reason provided) all the buffered requests.
				 */
				rejectAll: function(reason) {
					if (reason) {
						for (var i = 0; i < buffer.length; ++i) {
							buffer[i].deferred.reject(reason);
						}
					}
					buffer = [];
				},

				/**
				 * Retries all the buffered requests clears the buffer.
				 */
				retryAll: function(updater) {
					for (var i = 0; i < buffer.length; ++i) {
						var _cfg = updater(buffer[i].config);
						if (_cfg !== false)
							retryHttpRequest(_cfg, buffer[i].deferred);
					}
					buffer = [];
				}
			};
		}]);
})();
/*
 AngularJS v1.5.8
 (c) 2010-2016 Google, Inc. http://angularjs.org
 License: MIT
*/
(function(s,g){'use strict';function H(g){var l=[];t(l,A).chars(g);return l.join("")}var B=g.$$minErr("$sanitize"),C,l,D,E,q,A,F,t;g.module("ngSanitize",[]).provider("$sanitize",function(){function k(a,e){var b={},c=a.split(","),h;for(h=0;h<c.length;h++)b[e?q(c[h]):c[h]]=!0;return b}function I(a){for(var e={},b=0,c=a.length;b<c;b++){var h=a[b];e[h.name]=h.value}return e}function G(a){return a.replace(/&/g,"&amp;").replace(J,function(a){var b=a.charCodeAt(0);a=a.charCodeAt(1);return"&#"+(1024*(b-55296)+
(a-56320)+65536)+";"}).replace(K,function(a){return"&#"+a.charCodeAt(0)+";"}).replace(/</g,"&lt;").replace(/>/g,"&gt;")}function u(a){if(a.nodeType===s.Node.ELEMENT_NODE)for(var e=a.attributes,b=0,c=e.length;b<c;b++){var h=e[b],d=h.name.toLowerCase();if("xmlns:ns1"===d||0===d.lastIndexOf("ns1:",0))a.removeAttributeNode(h),b--,c--}(e=a.firstChild)&&u(e);(e=a.nextSibling)&&u(e)}var v=!1;this.$get=["$$sanitizeUri",function(a){v&&l(w,x);return function(e){var b=[];F(e,t(b,function(b,h){return!/^unsafe:/.test(a(b,
h))}));return b.join("")}}];this.enableSvg=function(a){return E(a)?(v=a,this):v};C=g.bind;l=g.extend;D=g.forEach;E=g.isDefined;q=g.lowercase;A=g.noop;F=function(a,e){null===a||void 0===a?a="":"string"!==typeof a&&(a=""+a);f.innerHTML=a;var b=5;do{if(0===b)throw B("uinput");b--;s.document.documentMode&&u(f);a=f.innerHTML;f.innerHTML=a}while(a!==f.innerHTML);for(b=f.firstChild;b;){switch(b.nodeType){case 1:e.start(b.nodeName.toLowerCase(),I(b.attributes));break;case 3:e.chars(b.textContent)}var c;if(!(c=
b.firstChild)&&(1==b.nodeType&&e.end(b.nodeName.toLowerCase()),c=b.nextSibling,!c))for(;null==c;){b=b.parentNode;if(b===f)break;c=b.nextSibling;1==b.nodeType&&e.end(b.nodeName.toLowerCase())}b=c}for(;b=f.firstChild;)f.removeChild(b)};t=function(a,e){var b=!1,c=C(a,a.push);return{start:function(a,d){a=q(a);!b&&z[a]&&(b=a);b||!0!==w[a]||(c("<"),c(a),D(d,function(b,d){var f=q(d),g="img"===a&&"src"===f||"background"===f;!0!==m[f]||!0===n[f]&&!e(b,g)||(c(" "),c(d),c('="'),c(G(b)),c('"'))}),c(">"))},end:function(a){a=
q(a);b||!0!==w[a]||!0===y[a]||(c("</"),c(a),c(">"));a==b&&(b=!1)},chars:function(a){b||c(G(a))}}};var J=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,K=/([^\#-~ |!])/g,y=k("area,br,col,hr,img,wbr"),d=k("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),r=k("rp,rt"),p=l({},r,d),d=l({},d,k("address,article,aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,section,table,ul")),r=l({},r,k("a,abbr,acronym,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,samp,small,span,strike,strong,sub,sup,time,tt,u,var")),
x=k("circle,defs,desc,ellipse,font-face,font-face-name,font-face-src,g,glyph,hkern,image,linearGradient,line,marker,metadata,missing-glyph,mpath,path,polygon,polyline,radialGradient,rect,stop,svg,switch,text,title,tspan"),z=k("script,style"),w=l({},y,d,r,p),n=k("background,cite,href,longdesc,src,xlink:href"),p=k("abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,scope,scrolling,shape,size,span,start,summary,tabindex,target,title,type,valign,value,vspace,width"),
r=k("accent-height,accumulate,additive,alphabetic,arabic-form,ascent,baseProfile,bbox,begin,by,calcMode,cap-height,class,color,color-rendering,content,cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,font-size,font-stretch,font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,gradientUnits,hanging,height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,keySplines,keyTimes,lang,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mathematical,max,min,offset,opacity,orient,origin,overline-position,overline-thickness,panose-1,path,pathLength,points,preserveAspectRatio,r,refX,refY,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,stemv,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,underline-position,underline-thickness,unicode,unicode-range,units-per-em,values,version,viewBox,visibility,width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,zoomAndPan",
!0),m=l({},n,r,p),f;(function(a){if(a.document&&a.document.implementation)a=a.document.implementation.createHTMLDocument("inert");else throw B("noinert");var e=(a.documentElement||a.getDocumentElement()).getElementsByTagName("body");1===e.length?f=e[0]:(e=a.createElement("html"),f=a.createElement("body"),e.appendChild(f),a.appendChild(e))})(s)});g.module("ngSanitize").filter("linky",["$sanitize",function(k){var l=/((ftp|https?):\/\/|(www\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\S*[^\s.;,(){}<>"\u201d\u2019]/i,
q=/^mailto:/i,u=g.$$minErr("linky"),v=g.isDefined,s=g.isFunction,t=g.isObject,y=g.isString;return function(d,g,p){function x(a){a&&m.push(H(a))}function z(a,b){var c,d=w(a);m.push("<a ");for(c in d)m.push(c+'="'+d[c]+'" ');!v(g)||"target"in d||m.push('target="',g,'" ');m.push('href="',a.replace(/"/g,"&quot;"),'">');x(b);m.push("</a>")}if(null==d||""===d)return d;if(!y(d))throw u("notstring",d);for(var w=s(p)?p:t(p)?function(){return p}:function(){return{}},n=d,m=[],f,a;d=n.match(l);)f=d[0],d[2]||
d[4]||(f=(d[3]?"http://":"mailto:")+f),a=d.index,x(n.substr(0,a)),z(f,d[0].replace(q,"")),n=n.substring(a+d[0].length);x(n);return k(m.join(""))}}])})(window,window.angular);
// # sourceMappingURL=angular-sanitize.min.js.map

/*!
    localForage -- Offline Storage, Improved
    Version 1.7.3
    https://localforage.github.io/localForage
    (c) 2013-2017 Mozilla, Apache License 2.0
*/
! function(a) {
	if ("object" == typeof exports && "undefined" != typeof module) module.exports = a();
	else if ("function" == typeof define && define.amd) define([], a);
	else {
		var b;
		b = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this, b.localforage = a()
	}
}(function() {
	return function a(b, c, d) {
		function e(g, h) {
			if (!c[g]) {
				if (!b[g]) {
					var i = "function" == typeof require && require;
					if (!h && i) return i(g, !0);
					if (f) return f(g, !0);
					var j = new Error("Cannot find module '" + g + "'");
					throw j.code = "MODULE_NOT_FOUND", j
				}
				var k = c[g] = {
					exports: {}
				};
				b[g][0].call(k.exports, function(a) {
					var c = b[g][1][a];
					return e(c || a)
				}, k, k.exports, a, b, c, d)
			}
			return c[g].exports
		}
		for (var f = "function" == typeof require && require, g = 0; g < d.length; g++) e(d[g]);
		return e
	}({
		1: [function(a, b, c) {
			(function(a) {
				"use strict";

				function c() {
					k = !0;
					for (var a, b, c = l.length; c;) {
						for (b = l, l = [], a = -1; ++a < c;) b[a]();
						c = l.length
					}
					k = !1
				}

				function d(a) {
					1 !== l.push(a) || k || e()
				}
				var e, f = a.MutationObserver || a.WebKitMutationObserver;
				if (f) {
					var g = 0,
						h = new f(c),
						i = a.document.createTextNode("");
					h.observe(i, {
						characterData: !0
					}), e = function() {
						i.data = g = ++g % 2
					}
				} else if (a.setImmediate || void 0 === a.MessageChannel) e = "document" in a && "onreadystatechange" in a.document.createElement("script") ? function() {
					var b = a.document.createElement("script");
					b.onreadystatechange = function() {
						c(), b.onreadystatechange = null, b.parentNode.removeChild(b), b = null
					}, a.document.documentElement.appendChild(b)
				} : function() {
					setTimeout(c, 0)
				};
				else {
					var j = new a.MessageChannel;
					j.port1.onmessage = c, e = function() {
						j.port2.postMessage(0)
					}
				}
				var k, l = [];
				b.exports = d
			}).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
		}, {}],
		2: [function(a, b, c) {
			"use strict";

			function d() {}

			function e(a) {
				if ("function" != typeof a) throw new TypeError("resolver must be a function");
				this.state = s, this.queue = [], this.outcome = void 0, a !== d && i(this, a)
			}

			function f(a, b, c) {
				this.promise = a, "function" == typeof b && (this.onFulfilled = b, this.callFulfilled = this.otherCallFulfilled), "function" == typeof c && (this.onRejected = c, this.callRejected = this.otherCallRejected)
			}

			function g(a, b, c) {
				o(function() {
					var d;
					try {
						d = b(c)
					} catch (b) {
						return p.reject(a, b)
					}
					d === a ? p.reject(a, new TypeError("Cannot resolve promise with itself")) : p.resolve(a, d)
				})
			}

			function h(a) {
				var b = a && a.then;
				if (a && ("object" == typeof a || "function" == typeof a) && "function" == typeof b) return function() {
					b.apply(a, arguments)
				}
			}

			function i(a, b) {
				function c(b) {
					f || (f = !0, p.reject(a, b))
				}

				function d(b) {
					f || (f = !0, p.resolve(a, b))
				}

				function e() {
					b(d, c)
				}
				var f = !1,
					g = j(e);
				"error" === g.status && c(g.value)
			}

			function j(a, b) {
				var c = {};
				try {
					c.value = a(b), c.status = "success"
				} catch (a) {
					c.status = "error", c.value = a
				}
				return c
			}

			function k(a) {
				return a instanceof this ? a : p.resolve(new this(d), a)
			}

			function l(a) {
				var b = new this(d);
				return p.reject(b, a)
			}

			function m(a) {
				function b(a, b) {
					function d(a) {
						g[b] = a, ++h !== e || f || (f = !0, p.resolve(j, g))
					}
					c.resolve(a).then(d, function(a) {
						f || (f = !0, p.reject(j, a))
					})
				}
				var c = this;
				if ("[object Array]" !== Object.prototype.toString.call(a)) return this.reject(new TypeError("must be an array"));
				var e = a.length,
					f = !1;
				if (!e) return this.resolve([]);
				for (var g = new Array(e), h = 0, i = -1, j = new this(d); ++i < e;) b(a[i], i);
				return j
			}

			function n(a) {
				function b(a) {
					c.resolve(a).then(function(a) {
						f || (f = !0, p.resolve(h, a))
					}, function(a) {
						f || (f = !0, p.reject(h, a))
					})
				}
				var c = this;
				if ("[object Array]" !== Object.prototype.toString.call(a)) return this.reject(new TypeError("must be an array"));
				var e = a.length,
					f = !1;
				if (!e) return this.resolve([]);
				for (var g = -1, h = new this(d); ++g < e;) b(a[g]);
				return h
			}
			var o = a(1),
				p = {},
				q = ["REJECTED"],
				r = ["FULFILLED"],
				s = ["PENDING"];
			b.exports = e, e.prototype.catch = function(a) {
				return this.then(null, a)
			}, e.prototype.then = function(a, b) {
				if ("function" != typeof a && this.state === r || "function" != typeof b && this.state === q) return this;
				var c = new this.constructor(d);
				if (this.state !== s) {
					g(c, this.state === r ? a : b, this.outcome)
				} else this.queue.push(new f(c, a, b));
				return c
			}, f.prototype.callFulfilled = function(a) {
				p.resolve(this.promise, a)
			}, f.prototype.otherCallFulfilled = function(a) {
				g(this.promise, this.onFulfilled, a)
			}, f.prototype.callRejected = function(a) {
				p.reject(this.promise, a)
			}, f.prototype.otherCallRejected = function(a) {
				g(this.promise, this.onRejected, a)
			}, p.resolve = function(a, b) {
				var c = j(h, b);
				if ("error" === c.status) return p.reject(a, c.value);
				var d = c.value;
				if (d) i(a, d);
				else {
					a.state = r, a.outcome = b;
					for (var e = -1, f = a.queue.length; ++e < f;) a.queue[e].callFulfilled(b)
				}
				return a
			}, p.reject = function(a, b) {
				a.state = q, a.outcome = b;
				for (var c = -1, d = a.queue.length; ++c < d;) a.queue[c].callRejected(b);
				return a
			}, e.resolve = k, e.reject = l, e.all = m, e.race = n
		}, {
			1: 1
		}],
		3: [function(a, b, c) {
			(function(b) {
				"use strict";
				"function" != typeof b.Promise && (b.Promise = a(2))
			}).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
		}, {
			2: 2
		}],
		4: [function(a, b, c) {
			"use strict";

			function d(a, b) {
				if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
			}

			function e() {
				try {
					if ("undefined" != typeof indexedDB) return indexedDB;
					if ("undefined" != typeof webkitIndexedDB) return webkitIndexedDB;
					if ("undefined" != typeof mozIndexedDB) return mozIndexedDB;
					if ("undefined" != typeof OIndexedDB) return OIndexedDB;
					if ("undefined" != typeof msIndexedDB) return msIndexedDB
				} catch (a) {
					return
				}
			}

			function f() {
				try {
					if (!ua) return !1;
					var a = "undefined" != typeof openDatabase && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform),
						b = "function" == typeof fetch && -1 !== fetch.toString().indexOf("[native code");
					return (!a || b) && "undefined" != typeof indexedDB && "undefined" != typeof IDBKeyRange
				} catch (a) {
					return !1
				}
			}

			function g(a, b) {
				a = a || [], b = b || {};
				try {
					return new Blob(a, b)
				} catch (f) {
					if ("TypeError" !== f.name) throw f;
					for (var c = "undefined" != typeof BlobBuilder ? BlobBuilder : "undefined" != typeof MSBlobBuilder ? MSBlobBuilder : "undefined" != typeof MozBlobBuilder ? MozBlobBuilder : WebKitBlobBuilder, d = new c, e = 0; e < a.length; e += 1) d.append(a[e]);
					return d.getBlob(b.type)
				}
			}

			function h(a, b) {
				b && a.then(function(a) {
					b(null, a)
				}, function(a) {
					b(a)
				})
			}

			function i(a, b, c) {
				"function" == typeof b && a.then(b), "function" == typeof c && a.catch(c)
			}

			function j(a) {
				return "string" != typeof a && (console.warn(a + " used as a key, but it is not a string."), a = String(a)), a
			}

			function k() {
				if (arguments.length && "function" == typeof arguments[arguments.length - 1]) return arguments[arguments.length - 1]
			}

			function l(a) {
				for (var b = a.length, c = new ArrayBuffer(b), d = new Uint8Array(c), e = 0; e < b; e++) d[e] = a.charCodeAt(e);
				return c
			}

			function m(a) {
				return new va(function(b) {
					var c = a.transaction(wa, Ba),
						d = g([""]);
					c.objectStore(wa).put(d, "key"), c.onabort = function(a) {
						a.preventDefault(), a.stopPropagation(), b(!1)
					}, c.oncomplete = function() {
						var a = navigator.userAgent.match(/Chrome\/(\d+)/),
							c = navigator.userAgent.match(/Edge\//);
						b(c || !a || parseInt(a[1], 10) >= 43)
					}
				}).catch(function() {
					return !1
				})
			}

			function n(a) {
				return "boolean" == typeof xa ? va.resolve(xa) : m(a).then(function(a) {
					return xa = a
				})
			}

			function o(a) {
				var b = ya[a.name],
					c = {};
				c.promise = new va(function(a, b) {
					c.resolve = a, c.reject = b
				}), b.deferredOperations.push(c), b.dbReady ? b.dbReady = b.dbReady.then(function() {
					return c.promise
				}) : b.dbReady = c.promise
			}

			function p(a) {
				var b = ya[a.name],
					c = b.deferredOperations.pop();
				if (c) return c.resolve(), c.promise
			}

			function q(a, b) {
				var c = ya[a.name],
					d = c.deferredOperations.pop();
				if (d) return d.reject(b), d.promise
			}

			function r(a, b) {
				return new va(function(c, d) {
					if (ya[a.name] = ya[a.name] || B(), a.db) {
						if (!b) return c(a.db);
						o(a), a.db.close()
					}
					var e = [a.name];
					b && e.push(a.version);
					var f = ua.open.apply(ua, e);
					b && (f.onupgradeneeded = function(b) {
						var c = f.result;
						try {
							c.createObjectStore(a.storeName), b.oldVersion <= 1 && c.createObjectStore(wa)
						} catch (c) {
							if ("ConstraintError" !== c.name) throw c;
							console.warn('The database "' + a.name + '" has been upgraded from version ' + b.oldVersion + " to version " + b.newVersion + ', but the storage "' + a.storeName + '" already exists.')
						}
					}), f.onerror = function(a) {
						a.preventDefault(), d(f.error)
					}, f.onsuccess = function() {
						c(f.result), p(a)
					}
				})
			}

			function s(a) {
				return r(a, !1)
			}

			function t(a) {
				return r(a, !0)
			}

			function u(a, b) {
				if (!a.db) return !0;
				var c = !a.db.objectStoreNames.contains(a.storeName),
					d = a.version < a.db.version,
					e = a.version > a.db.version;
				if (d && (a.version !== b && console.warn('The database "' + a.name + "\" can't be downgraded from version " + a.db.version + " to version " + a.version + "."), a.version = a.db.version), e || c) {
					if (c) {
						var f = a.db.version + 1;
						f > a.version && (a.version = f)
					}
					return !0
				}
				return !1
			}

			function v(a) {
				return new va(function(b, c) {
					var d = new FileReader;
					d.onerror = c, d.onloadend = function(c) {
						var d = btoa(c.target.result || "");
						b({
							__local_forage_encoded_blob: !0,
							data: d,
							type: a.type
						})
					}, d.readAsBinaryString(a)
				})
			}

			function w(a) {
				return g([l(atob(a.data))], {
					type: a.type
				})
			}

			function x(a) {
				return a && a.__local_forage_encoded_blob
			}

			function y(a) {
				var b = this,
					c = b._initReady().then(function() {
						var a = ya[b._dbInfo.name];
						if (a && a.dbReady) return a.dbReady
					});
				return i(c, a, a), c
			}

			function z(a) {
				o(a);
				for (var b = ya[a.name], c = b.forages, d = 0; d < c.length; d++) {
					var e = c[d];
					e._dbInfo.db && (e._dbInfo.db.close(), e._dbInfo.db = null)
				}
				return a.db = null, s(a).then(function(b) {
					return a.db = b, u(a) ? t(a) : b
				}).then(function(d) {
					a.db = b.db = d;
					for (var e = 0; e < c.length; e++) c[e]._dbInfo.db = d
				}).catch(function(b) {
					throw q(a, b), b
				})
			}

			function A(a, b, c, d) {
				void 0 === d && (d = 1);
				try {
					var e = a.db.transaction(a.storeName, b);
					c(null, e)
				} catch (e) {
					if (d > 0 && (!a.db || "InvalidStateError" === e.name || "NotFoundError" === e.name)) return va.resolve().then(function() {
						if (!a.db || "NotFoundError" === e.name && !a.db.objectStoreNames.contains(a.storeName) && a.version <= a.db.version) return a.db && (a.version = a.db.version + 1), t(a)
					}).then(function() {
						return z(a).then(function() {
							A(a, b, c, d - 1)
						})
					}).catch(c);
					c(e)
				}
			}

			function B() {
				return {
					forages: [],
					db: null,
					dbReady: null,
					deferredOperations: []
				}
			}

			function C(a) {
				function b() {
					return va.resolve()
				}
				var c = this,
					d = {
						db: null
					};
				if (a)
					for (var e in a) d[e] = a[e];
				var f = ya[d.name];
				f || (f = B(), ya[d.name] = f), f.forages.push(c), c._initReady || (c._initReady = c.ready, c.ready = y);
				for (var g = [], h = 0; h < f.forages.length; h++) {
					var i = f.forages[h];
					i !== c && g.push(i._initReady().catch(b))
				}
				var j = f.forages.slice(0);
				return va.all(g).then(function() {
					return d.db = f.db, s(d)
				}).then(function(a) {
					return d.db = a, u(d, c._defaultConfig.version) ? t(d) : a
				}).then(function(a) {
					d.db = f.db = a, c._dbInfo = d;
					for (var b = 0; b < j.length; b++) {
						var e = j[b];
						e !== c && (e._dbInfo.db = d.db, e._dbInfo.version = d.version)
					}
				})
			}

			function D(a, b) {
				var c = this;
				a = j(a);
				var d = new va(function(b, d) {
					c.ready().then(function() {
						A(c._dbInfo, Aa, function(e, f) {
							if (e) return d(e);
							try {
								var g = f.objectStore(c._dbInfo.storeName),
									h = g.get(a);
								h.onsuccess = function() {
									var a = h.result;
									void 0 === a && (a = null), x(a) && (a = w(a)), b(a)
								}, h.onerror = function() {
									d(h.error)
								}
							} catch (a) {
								d(a)
							}
						})
					}).catch(d)
				});
				return h(d, b), d
			}

			function E(a, b) {
				var c = this,
					d = new va(function(b, d) {
						c.ready().then(function() {
							A(c._dbInfo, Aa, function(e, f) {
								if (e) return d(e);
								try {
									var g = f.objectStore(c._dbInfo.storeName),
										h = g.openCursor(),
										i = 1;
									h.onsuccess = function() {
										var c = h.result;
										if (c) {
											var d = c.value;
											x(d) && (d = w(d));
											var e = a(d, c.key, i++);
											void 0 !== e ? b(e) : c.continue()
										} else b()
									}, h.onerror = function() {
										d(h.error)
									}
								} catch (a) {
									d(a)
								}
							})
						}).catch(d)
					});
				return h(d, b), d
			}

			function F(a, b, c) {
				var d = this;
				a = j(a);
				var e = new va(function(c, e) {
					var f;
					d.ready().then(function() {
						return f = d._dbInfo, "[object Blob]" === za.call(b) ? n(f.db).then(function(a) {
							return a ? b : v(b)
						}) : b
					}).then(function(b) {
						A(d._dbInfo, Ba, function(f, g) {
							if (f) return e(f);
							try {
								var h = g.objectStore(d._dbInfo.storeName);
								null === b && (b = void 0);
								var i = h.put(b, a);
								g.oncomplete = function() {
									void 0 === b && (b = null), c(b)
								}, g.onabort = g.onerror = function() {
									var a = i.error ? i.error : i.transaction.error;
									e(a)
								}
							} catch (a) {
								e(a)
							}
						})
					}).catch(e)
				});
				return h(e, c), e
			}

			function G(a, b) {
				var c = this;
				a = j(a);
				var d = new va(function(b, d) {
					c.ready().then(function() {
						A(c._dbInfo, Ba, function(e, f) {
							if (e) return d(e);
							try {
								var g = f.objectStore(c._dbInfo.storeName),
									h = g.delete(a);
								f.oncomplete = function() {
									b()
								}, f.onerror = function() {
									d(h.error)
								}, f.onabort = function() {
									var a = h.error ? h.error : h.transaction.error;
									d(a)
								}
							} catch (a) {
								d(a)
							}
						})
					}).catch(d)
				});
				return h(d, b), d
			}

			function H(a) {
				var b = this,
					c = new va(function(a, c) {
						b.ready().then(function() {
							A(b._dbInfo, Ba, function(d, e) {
								if (d) return c(d);
								try {
									var f = e.objectStore(b._dbInfo.storeName),
										g = f.clear();
									e.oncomplete = function() {
										a()
									}, e.onabort = e.onerror = function() {
										var a = g.error ? g.error : g.transaction.error;
										c(a)
									}
								} catch (a) {
									c(a)
								}
							})
						}).catch(c)
					});
				return h(c, a), c
			}

			function I(a) {
				var b = this,
					c = new va(function(a, c) {
						b.ready().then(function() {
							A(b._dbInfo, Aa, function(d, e) {
								if (d) return c(d);
								try {
									var f = e.objectStore(b._dbInfo.storeName),
										g = f.count();
									g.onsuccess = function() {
										a(g.result)
									}, g.onerror = function() {
										c(g.error)
									}
								} catch (a) {
									c(a)
								}
							})
						}).catch(c)
					});
				return h(c, a), c
			}

			function J(a, b) {
				var c = this,
					d = new va(function(b, d) {
						if (a < 0) return void b(null);
						c.ready().then(function() {
							A(c._dbInfo, Aa, function(e, f) {
								if (e) return d(e);
								try {
									var g = f.objectStore(c._dbInfo.storeName),
										h = !1,
										i = g.openCursor();
									i.onsuccess = function() {
										var c = i.result;
										if (!c) return void b(null);
										0 === a ? b(c.key) : h ? b(c.key) : (h = !0, c.advance(a))
									}, i.onerror = function() {
										d(i.error)
									}
								} catch (a) {
									d(a)
								}
							})
						}).catch(d)
					});
				return h(d, b), d
			}

			function K(a) {
				var b = this,
					c = new va(function(a, c) {
						b.ready().then(function() {
							A(b._dbInfo, Aa, function(d, e) {
								if (d) return c(d);
								try {
									var f = e.objectStore(b._dbInfo.storeName),
										g = f.openCursor(),
										h = [];
									g.onsuccess = function() {
										var b = g.result;
										if (!b) return void a(h);
										h.push(b.key), b.continue()
									}, g.onerror = function() {
										c(g.error)
									}
								} catch (a) {
									c(a)
								}
							})
						}).catch(c)
					});
				return h(c, a), c
			}

			function L(a, b) {
				b = k.apply(this, arguments);
				var c = this.config();
				a = "function" != typeof a && a || {}, a.name || (a.name = a.name || c.name, a.storeName = a.storeName || c.storeName);
				var d, e = this;
				if (a.name) {
					var f = a.name === c.name && e._dbInfo.db,
						g = f ? va.resolve(e._dbInfo.db) : s(a).then(function(b) {
							var c = ya[a.name],
								d = c.forages;
							c.db = b;
							for (var e = 0; e < d.length; e++) d[e]._dbInfo.db = b;
							return b
						});
					d = a.storeName ? g.then(function(b) {
						if (b.objectStoreNames.contains(a.storeName)) {
							var c = b.version + 1;
							o(a);
							var d = ya[a.name],
								e = d.forages;
							b.close();
							for (var f = 0; f < e.length; f++) {
								var g = e[f];
								g._dbInfo.db = null, g._dbInfo.version = c
							}
							return new va(function(b, d) {
								var e = ua.open(a.name, c);
								e.onerror = function(a) {
									e.result.close(), d(a)
								}, e.onupgradeneeded = function() {
									e.result.deleteObjectStore(a.storeName)
								}, e.onsuccess = function() {
									var a = e.result;
									a.close(), b(a)
								}
							}).then(function(a) {
								d.db = a;
								for (var b = 0; b < e.length; b++) {
									var c = e[b];
									c._dbInfo.db = a, p(c._dbInfo)
								}
							}).catch(function(b) {
								throw (q(a, b) || va.resolve()).catch(function() {}), b
							})
						}
					}) : g.then(function(b) {
						o(a);
						var c = ya[a.name],
							d = c.forages;
						b.close();
						for (var e = 0; e < d.length; e++) {
							d[e]._dbInfo.db = null
						}
						return new va(function(b, c) {
							var d = ua.deleteDatabase(a.name);
							d.onerror = d.onblocked = function(a) {
								var b = d.result;
								b && b.close(), c(a)
							}, d.onsuccess = function() {
								var a = d.result;
								a && a.close(), b(a)
							}
						}).then(function(a) {
							c.db = a;
							for (var b = 0; b < d.length; b++) p(d[b]._dbInfo)
						}).catch(function(b) {
							throw (q(a, b) || va.resolve()).catch(function() {}), b
						})
					})
				} else d = va.reject("Invalid arguments");
				return h(d, b), d
			}

			function M() {
				return "function" == typeof openDatabase
			}

			function N(a) {
				var b, c, d, e, f, g = .75 * a.length,
					h = a.length,
					i = 0;
				"=" === a[a.length - 1] && (g--, "=" === a[a.length - 2] && g--);
				var j = new ArrayBuffer(g),
					k = new Uint8Array(j);
				for (b = 0; b < h; b += 4) c = Da.indexOf(a[b]), d = Da.indexOf(a[b + 1]), e = Da.indexOf(a[b + 2]), f = Da.indexOf(a[b + 3]), k[i++] = c << 2 | d >> 4, k[i++] = (15 & d) << 4 | e >> 2, k[i++] = (3 & e) << 6 | 63 & f;
				return j
			}

			function O(a) {
				var b, c = new Uint8Array(a),
					d = "";
				for (b = 0; b < c.length; b += 3) d += Da[c[b] >> 2], d += Da[(3 & c[b]) << 4 | c[b + 1] >> 4], d += Da[(15 & c[b + 1]) << 2 | c[b + 2] >> 6], d += Da[63 & c[b + 2]];
				return c.length % 3 == 2 ? d = d.substring(0, d.length - 1) + "=" : c.length % 3 == 1 && (d = d.substring(0, d.length - 2) + "=="), d
			}

			function P(a, b) {
				var c = "";
				if (a && (c = Ua.call(a)), a && ("[object ArrayBuffer]" === c || a.buffer && "[object ArrayBuffer]" === Ua.call(a.buffer))) {
					var d, e = Ga;
					a instanceof ArrayBuffer ? (d = a, e += Ia) : (d = a.buffer, "[object Int8Array]" === c ? e += Ka : "[object Uint8Array]" === c ? e += La : "[object Uint8ClampedArray]" === c ? e += Ma : "[object Int16Array]" === c ? e += Na : "[object Uint16Array]" === c ? e += Pa : "[object Int32Array]" === c ? e += Oa : "[object Uint32Array]" === c ? e += Qa : "[object Float32Array]" === c ? e += Ra : "[object Float64Array]" === c ? e += Sa : b(new Error("Failed to get type for BinaryArray"))), b(e + O(d))
				} else if ("[object Blob]" === c) {
					var f = new FileReader;
					f.onload = function() {
						var c = Ea + a.type + "~" + O(this.result);
						b(Ga + Ja + c)
					}, f.readAsArrayBuffer(a)
				} else try {
					b(JSON.stringify(a))
				} catch (c) {
					console.error("Couldn't convert value into a JSON string: ", a), b(null, c)
				}
			}

			function Q(a) {
				if (a.substring(0, Ha) !== Ga) return JSON.parse(a);
				var b, c = a.substring(Ta),
					d = a.substring(Ha, Ta);
				if (d === Ja && Fa.test(c)) {
					var e = c.match(Fa);
					b = e[1], c = c.substring(e[0].length)
				}
				var f = N(c);
				switch (d) {
					case Ia:
						return f;
					case Ja:
						return g([f], {
							type: b
						});
					case Ka:
						return new Int8Array(f);
					case La:
						return new Uint8Array(f);
					case Ma:
						return new Uint8ClampedArray(f);
					case Na:
						return new Int16Array(f);
					case Pa:
						return new Uint16Array(f);
					case Oa:
						return new Int32Array(f);
					case Qa:
						return new Uint32Array(f);
					case Ra:
						return new Float32Array(f);
					case Sa:
						return new Float64Array(f);
					default:
						throw new Error("Unkown type: " + d)
				}
			}

			function R(a, b, c, d) {
				a.executeSql("CREATE TABLE IF NOT EXISTS " + b.storeName + " (id INTEGER PRIMARY KEY, key unique, value)", [], c, d)
			}

			function S(a) {
				var b = this,
					c = {
						db: null
					};
				if (a)
					for (var d in a) c[d] = "string" != typeof a[d] ? a[d].toString() : a[d];
				var e = new va(function(a, d) {
					try {
						c.db = openDatabase(c.name, String(c.version), c.description, c.size)
					} catch (a) {
						return d(a)
					}
					c.db.transaction(function(e) {
						R(e, c, function() {
							b._dbInfo = c, a()
						}, function(a, b) {
							d(b)
						})
					}, d)
				});
				return c.serializer = Va, e
			}

			function T(a, b, c, d, e, f) {
				a.executeSql(c, d, e, function(a, g) {
					g.code === g.SYNTAX_ERR ? a.executeSql("SELECT name FROM sqlite_master WHERE type='table' AND name = ?", [b.storeName], function(a, h) {
						h.rows.length ? f(a, g) : R(a, b, function() {
							a.executeSql(c, d, e, f)
						}, f)
					}, f) : f(a, g)
				}, f)
			}

			function U(a, b) {
				var c = this;
				a = j(a);
				var d = new va(function(b, d) {
					c.ready().then(function() {
						var e = c._dbInfo;
						e.db.transaction(function(c) {
							T(c, e, "SELECT * FROM " + e.storeName + " WHERE key = ? LIMIT 1", [a], function(a, c) {
								var d = c.rows.length ? c.rows.item(0).value : null;
								d && (d = e.serializer.deserialize(d)), b(d)
							}, function(a, b) {
								d(b)
							})
						})
					}).catch(d)
				});
				return h(d, b), d
			}

			function V(a, b) {
				var c = this,
					d = new va(function(b, d) {
						c.ready().then(function() {
							var e = c._dbInfo;
							e.db.transaction(function(c) {
								T(c, e, "SELECT * FROM " + e.storeName, [], function(c, d) {
									for (var f = d.rows, g = f.length, h = 0; h < g; h++) {
										var i = f.item(h),
											j = i.value;
										if (j && (j = e.serializer.deserialize(j)), void 0 !== (j = a(j, i.key, h + 1))) return void b(j)
									}
									b()
								}, function(a, b) {
									d(b)
								})
							})
						}).catch(d)
					});
				return h(d, b), d
			}

			function W(a, b, c, d) {
				var e = this;
				a = j(a);
				var f = new va(function(f, g) {
					e.ready().then(function() {
						void 0 === b && (b = null);
						var h = b,
							i = e._dbInfo;
						i.serializer.serialize(b, function(b, j) {
							j ? g(j) : i.db.transaction(function(c) {
								T(c, i, "INSERT OR REPLACE INTO " + i.storeName + " (key, value) VALUES (?, ?)", [a, b], function() {
									f(h)
								}, function(a, b) {
									g(b)
								})
							}, function(b) {
								if (b.code === b.QUOTA_ERR) {
									if (d > 0) return void f(W.apply(e, [a, h, c, d - 1]));
									g(b)
								}
							})
						})
					}).catch(g)
				});
				return h(f, c), f
			}

			function X(a, b, c) {
				return W.apply(this, [a, b, c, 1])
			}

			function Y(a, b) {
				var c = this;
				a = j(a);
				var d = new va(function(b, d) {
					c.ready().then(function() {
						var e = c._dbInfo;
						e.db.transaction(function(c) {
							T(c, e, "DELETE FROM " + e.storeName + " WHERE key = ?", [a], function() {
								b()
							}, function(a, b) {
								d(b)
							})
						})
					}).catch(d)
				});
				return h(d, b), d
			}

			function Z(a) {
				var b = this,
					c = new va(function(a, c) {
						b.ready().then(function() {
							var d = b._dbInfo;
							d.db.transaction(function(b) {
								T(b, d, "DELETE FROM " + d.storeName, [], function() {
									a()
								}, function(a, b) {
									c(b)
								})
							})
						}).catch(c)
					});
				return h(c, a), c
			}

			function $(a) {
				var b = this,
					c = new va(function(a, c) {
						b.ready().then(function() {
							var d = b._dbInfo;
							d.db.transaction(function(b) {
								T(b, d, "SELECT COUNT(key) as c FROM " + d.storeName, [], function(b, c) {
									var d = c.rows.item(0).c;
									a(d)
								}, function(a, b) {
									c(b)
								})
							})
						}).catch(c)
					});
				return h(c, a), c
			}

			function _(a, b) {
				var c = this,
					d = new va(function(b, d) {
						c.ready().then(function() {
							var e = c._dbInfo;
							e.db.transaction(function(c) {
								T(c, e, "SELECT key FROM " + e.storeName + " WHERE id = ? LIMIT 1", [a + 1], function(a, c) {
									var d = c.rows.length ? c.rows.item(0).key : null;
									b(d)
								}, function(a, b) {
									d(b)
								})
							})
						}).catch(d)
					});
				return h(d, b), d
			}

			function aa(a) {
				var b = this,
					c = new va(function(a, c) {
						b.ready().then(function() {
							var d = b._dbInfo;
							d.db.transaction(function(b) {
								T(b, d, "SELECT key FROM " + d.storeName, [], function(b, c) {
									for (var d = [], e = 0; e < c.rows.length; e++) d.push(c.rows.item(e).key);
									a(d)
								}, function(a, b) {
									c(b)
								})
							})
						}).catch(c)
					});
				return h(c, a), c
			}

			function ba(a) {
				return new va(function(b, c) {
					a.transaction(function(d) {
						d.executeSql("SELECT name FROM sqlite_master WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'", [], function(c, d) {
							for (var e = [], f = 0; f < d.rows.length; f++) e.push(d.rows.item(f).name);
							b({
								db: a,
								storeNames: e
							})
						}, function(a, b) {
							c(b)
						})
					}, function(a) {
						c(a)
					})
				})
			}

			function ca(a, b) {
				b = k.apply(this, arguments);
				var c = this.config();
				a = "function" != typeof a && a || {}, a.name || (a.name = a.name || c.name, a.storeName = a.storeName || c.storeName);
				var d, e = this;
				return d = a.name ? new va(function(b) {
					var d;
					d = a.name === c.name ? e._dbInfo.db : openDatabase(a.name, "", "", 0), b(a.storeName ? {
						db: d,
						storeNames: [a.storeName]
					} : ba(d))
				}).then(function(a) {
					return new va(function(b, c) {
						a.db.transaction(function(d) {
							function e(a) {
								return new va(function(b, c) {
									d.executeSql("DROP TABLE IF EXISTS " + a, [], function() {
										b()
									}, function(a, b) {
										c(b)
									})
								})
							}
							for (var f = [], g = 0, h = a.storeNames.length; g < h; g++) f.push(e(a.storeNames[g]));
							va.all(f).then(function() {
								b()
							}).catch(function(a) {
								c(a)
							})
						}, function(a) {
							c(a)
						})
					})
				}) : va.reject("Invalid arguments"), h(d, b), d
			}

			function da() {
				try {
					return "undefined" != typeof localStorage && "setItem" in localStorage && !!localStorage.setItem
				} catch (a) {
					return !1
				}
			}

			function ea(a, b) {
				var c = a.name + "/";
				return a.storeName !== b.storeName && (c += a.storeName + "/"), c
			}

			function fa() {
				var a = "_localforage_support_test";
				try {
					return localStorage.setItem(a, !0), localStorage.removeItem(a), !1
				} catch (a) {
					return !0
				}
			}

			function ga() {
				return !fa() || localStorage.length > 0
			}

			function ha(a) {
				var b = this,
					c = {};
				if (a)
					for (var d in a) c[d] = a[d];
				return c.keyPrefix = ea(a, b._defaultConfig), ga() ? (b._dbInfo = c, c.serializer = Va, va.resolve()) : va.reject()
			}

			function ia(a) {
				var b = this,
					c = b.ready().then(function() {
						for (var a = b._dbInfo.keyPrefix, c = localStorage.length - 1; c >= 0; c--) {
							var d = localStorage.key(c);
							0 === d.indexOf(a) && localStorage.removeItem(d)
						}
					});
				return h(c, a), c
			}

			function ja(a, b) {
				var c = this;
				a = j(a);
				var d = c.ready().then(function() {
					var b = c._dbInfo,
						d = localStorage.getItem(b.keyPrefix + a);
					return d && (d = b.serializer.deserialize(d)), d
				});
				return h(d, b), d
			}

			function ka(a, b) {
				var c = this,
					d = c.ready().then(function() {
						for (var b = c._dbInfo, d = b.keyPrefix, e = d.length, f = localStorage.length, g = 1, h = 0; h < f; h++) {
							var i = localStorage.key(h);
							if (0 === i.indexOf(d)) {
								var j = localStorage.getItem(i);
								if (j && (j = b.serializer.deserialize(j)), void 0 !== (j = a(j, i.substring(e), g++))) return j
							}
						}
					});
				return h(d, b), d
			}

			function la(a, b) {
				var c = this,
					d = c.ready().then(function() {
						var b, d = c._dbInfo;
						try {
							b = localStorage.key(a)
						} catch (a) {
							b = null
						}
						return b && (b = b.substring(d.keyPrefix.length)), b
					});
				return h(d, b), d
			}

			function ma(a) {
				var b = this,
					c = b.ready().then(function() {
						for (var a = b._dbInfo, c = localStorage.length, d = [], e = 0; e < c; e++) {
							var f = localStorage.key(e);
							0 === f.indexOf(a.keyPrefix) && d.push(f.substring(a.keyPrefix.length))
						}
						return d
					});
				return h(c, a), c
			}

			function na(a) {
				var b = this,
					c = b.keys().then(function(a) {
						return a.length
					});
				return h(c, a), c
			}

			function oa(a, b) {
				var c = this;
				a = j(a);
				var d = c.ready().then(function() {
					var b = c._dbInfo;
					localStorage.removeItem(b.keyPrefix + a)
				});
				return h(d, b), d
			}

			function pa(a, b, c) {
				var d = this;
				a = j(a);
				var e = d.ready().then(function() {
					void 0 === b && (b = null);
					var c = b;
					return new va(function(e, f) {
						var g = d._dbInfo;
						g.serializer.serialize(b, function(b, d) {
							if (d) f(d);
							else try {
								localStorage.setItem(g.keyPrefix + a, b), e(c)
							} catch (a) {
								"QuotaExceededError" !== a.name && "NS_ERROR_DOM_QUOTA_REACHED" !== a.name || f(a), f(a)
							}
						})
					})
				});
				return h(e, c), e
			}

			function qa(a, b) {
				if (b = k.apply(this, arguments), a = "function" != typeof a && a || {}, !a.name) {
					var c = this.config();
					a.name = a.name || c.name, a.storeName = a.storeName || c.storeName
				}
				var d, e = this;
				return d = a.name ? new va(function(b) {
					b(a.storeName ? ea(a, e._defaultConfig) : a.name + "/")
				}).then(function(a) {
					for (var b = localStorage.length - 1; b >= 0; b--) {
						var c = localStorage.key(b);
						0 === c.indexOf(a) && localStorage.removeItem(c)
					}
				}) : va.reject("Invalid arguments"), h(d, b), d
			}

			function ra(a, b) {
				a[b] = function() {
					var c = arguments;
					return a.ready().then(function() {
						return a[b].apply(a, c)
					})
				}
			}

			function sa() {
				for (var a = 1; a < arguments.length; a++) {
					var b = arguments[a];
					if (b)
						for (var c in b) b.hasOwnProperty(c) && ($a(b[c]) ? arguments[0][c] = b[c].slice() : arguments[0][c] = b[c])
				}
				return arguments[0]
			}
			var ta = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(a) {
					return typeof a
				} : function(a) {
					return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
				},
				ua = e();
			"undefined" == typeof Promise && a(3);
			var va = Promise,
				wa = "local-forage-detect-blob-support",
				xa = void 0,
				ya = {},
				za = Object.prototype.toString,
				Aa = "readonly",
				Ba = "readwrite",
				Ca = {
					_driver: "asyncStorage",
					_initStorage: C,
					_support: f(),
					iterate: E,
					getItem: D,
					setItem: F,
					removeItem: G,
					clear: H,
					length: I,
					key: J,
					keys: K,
					dropInstance: L
				},
				Da = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
				Ea = "~~local_forage_type~",
				Fa = /^~~local_forage_type~([^~]+)~/,
				Ga = "__lfsc__:",
				Ha = Ga.length,
				Ia = "arbf",
				Ja = "blob",
				Ka = "si08",
				La = "ui08",
				Ma = "uic8",
				Na = "si16",
				Oa = "si32",
				Pa = "ur16",
				Qa = "ui32",
				Ra = "fl32",
				Sa = "fl64",
				Ta = Ha + Ia.length,
				Ua = Object.prototype.toString,
				Va = {
					serialize: P,
					deserialize: Q,
					stringToBuffer: N,
					bufferToString: O
				},
				Wa = {
					_driver: "webSQLStorage",
					_initStorage: S,
					_support: M(),
					iterate: V,
					getItem: U,
					setItem: X,
					removeItem: Y,
					clear: Z,
					length: $,
					key: _,
					keys: aa,
					dropInstance: ca
				},
				Xa = {
					_driver: "localStorageWrapper",
					_initStorage: ha,
					_support: da(),
					iterate: ka,
					getItem: ja,
					setItem: pa,
					removeItem: oa,
					clear: ia,
					length: na,
					key: la,
					keys: ma,
					dropInstance: qa
				},
				Ya = function(a, b) {
					return a === b || "number" == typeof a && "number" == typeof b && isNaN(a) && isNaN(b)
				},
				Za = function(a, b) {
					for (var c = a.length, d = 0; d < c;) {
						if (Ya(a[d], b)) return !0;
						d++
					}
					return !1
				},
				$a = Array.isArray || function(a) {
					return "[object Array]" === Object.prototype.toString.call(a)
				},
				_a = {},
				ab = {},
				bb = {
					INDEXEDDB: Ca,
					WEBSQL: Wa,
					LOCALSTORAGE: Xa
				},
				cb = [bb.INDEXEDDB._driver, bb.WEBSQL._driver, bb.LOCALSTORAGE._driver],
				db = ["dropInstance"],
				eb = ["clear", "getItem", "iterate", "key", "keys", "length", "removeItem", "setItem"].concat(db),
				fb = {
					description: "",
					driver: cb.slice(),
					name: "localforage",
					size: 4980736,
					storeName: "keyvaluepairs",
					version: 1
				},
				gb = function() {
					function a(b) {
						d(this, a);
						for (var c in bb)
							if (bb.hasOwnProperty(c)) {
								var e = bb[c],
									f = e._driver;
								this[c] = f, _a[f] || this.defineDriver(e)
							}
						this._defaultConfig = sa({}, fb), this._config = sa({}, this._defaultConfig, b), this._driverSet = null, this._initDriver = null, this._ready = !1, this._dbInfo = null, this._wrapLibraryMethodsWithReady(), this.setDriver(this._config.driver).catch(function() {})
					}
					return a.prototype.config = function(a) {
						if ("object" === (void 0 === a ? "undefined" : ta(a))) {
							if (this._ready) return new Error("Can't call config() after localforage has been used.");
							for (var b in a) {
								if ("storeName" === b && (a[b] = a[b].replace(/\W/g, "_")), "version" === b && "number" != typeof a[b]) return new Error("Database version must be a number.");
								this._config[b] = a[b]
							}
							return !("driver" in a && a.driver) || this.setDriver(this._config.driver)
						}
						return "string" == typeof a ? this._config[a] : this._config
					}, a.prototype.defineDriver = function(a, b, c) {
						var d = new va(function(b, c) {
							try {
								var d = a._driver,
									e = new Error("Custom driver not compliant; see https://mozilla.github.io/localForage/#definedriver");
								if (!a._driver) return void c(e);
								for (var f = eb.concat("_initStorage"), g = 0, i = f.length; g < i; g++) {
									var j = f[g];
									if ((!Za(db, j) || a[j]) && "function" != typeof a[j]) return void c(e)
								}(function() {
									for (var b = function(a) {
											return function() {
												var b = new Error("Method " + a + " is not implemented by the current driver"),
													c = va.reject(b);
												return h(c, arguments[arguments.length - 1]), c
											}
										}, c = 0, d = db.length; c < d; c++) {
										var e = db[c];
										a[e] || (a[e] = b(e))
									}
								})();
								var k = function(c) {
									_a[d] && console.info("Redefining LocalForage driver: " + d), _a[d] = a, ab[d] = c, b()
								};
								"_support" in a ? a._support && "function" == typeof a._support ? a._support().then(k, c) : k(!!a._support) : k(!0)
							} catch (a) {
								c(a)
							}
						});
						return i(d, b, c), d
					}, a.prototype.driver = function() {
						return this._driver || null
					}, a.prototype.getDriver = function(a, b, c) {
						var d = _a[a] ? va.resolve(_a[a]) : va.reject(new Error("Driver not found."));
						return i(d, b, c), d
					}, a.prototype.getSerializer = function(a) {
						var b = va.resolve(Va);
						return i(b, a), b
					}, a.prototype.ready = function(a) {
						var b = this,
							c = b._driverSet.then(function() {
								return null === b._ready && (b._ready = b._initDriver()), b._ready
							});
						return i(c, a, a), c
					}, a.prototype.setDriver = function(a, b, c) {
						function d() {
							g._config.driver = g.driver()
						}

						function e(a) {
							return g._extend(a), d(), g._ready = g._initStorage(g._config), g._ready
						}

						function f(a) {
							return function() {
								function b() {
									for (; c < a.length;) {
										var f = a[c];
										return c++, g._dbInfo = null, g._ready = null, g.getDriver(f).then(e).catch(b)
									}
									d();
									var h = new Error("No available storage method found.");
									return g._driverSet = va.reject(h), g._driverSet
								}
								var c = 0;
								return b()
							}
						}
						var g = this;
						$a(a) || (a = [a]);
						var h = this._getSupportedDrivers(a),
							j = null !== this._driverSet ? this._driverSet.catch(function() {
								return va.resolve()
							}) : va.resolve();
						return this._driverSet = j.then(function() {
							var a = h[0];
							return g._dbInfo = null, g._ready = null, g.getDriver(a).then(function(a) {
								g._driver = a._driver, d(), g._wrapLibraryMethodsWithReady(), g._initDriver = f(h)
							})
						}).catch(function() {
							d();
							var a = new Error("No available storage method found.");
							return g._driverSet = va.reject(a), g._driverSet
						}), i(this._driverSet, b, c), this._driverSet
					}, a.prototype.supports = function(a) {
						return !!ab[a]
					}, a.prototype._extend = function(a) {
						sa(this, a)
					}, a.prototype._getSupportedDrivers = function(a) {
						for (var b = [], c = 0, d = a.length; c < d; c++) {
							var e = a[c];
							this.supports(e) && b.push(e)
						}
						return b
					}, a.prototype._wrapLibraryMethodsWithReady = function() {
						for (var a = 0, b = eb.length; a < b; a++) ra(this, eb[a])
					}, a.prototype.createInstance = function(b) {
						return new a(b)
					}, a
				}(),
				hb = new gb;
			b.exports = hb
		}, {
			3: 3
		}]
	}, {}, [4])(4)
});
/**
 * angular-localforage - Angular service & directive for https://github.com/mozilla/localForage (Offline storage, improved.)
 * @version v1.3.8
 * @link https://github.com/ocombe/angular-localForage
 * @license MIT
 * @author Olivier Combe <olivier.combe@gmail.com>
 */
! function(e, r) {
	"use strict";
	var t = e && e.angular || window && window.angular;
	if ("function" == typeof define && define.amd) define(["localforage"], function(e) {
		return r(t, e)
	});
	else {
		if ("object" != typeof exports && "object" != typeof global) return r(t, e.localforage);
		"undefined" == typeof module ? global.module.exports = r(t, require("localforage")) : module.exports = r(t, require("localforage"))
	}
}(this, function(e, r, t) {
	"use strict";
	var n = e.module("LocalForageModule", ["ng"]);
	return n.provider("$localForage", function() {
		var t = {},
			n = {
				name: "lf"
			},
			o = {
				setItem: !1,
				removeItem: !1
			},
			i = {};
		this.setNotify = function(e, r) {
			o = {
				setItem: e,
				removeItem: r
			}
		}, this.config = function(r) {
			if (!e.isObject(r)) throw new Error("The config parameter should be an object");
			e.extend(n, r)
		}, this.$get = ["$rootScope", "$q", "$parse", function(a, f, s) {
			function u(r, t) {
				return function(n) {
					if ((e.isObject(n) && n.name ? "InvalidStateError" === n.name : e.isString(n) && "InvalidStateError" === n) && "asyncStorage" === this.driver() || e.isObject(n) && n.code && 5 === n.code) {
						var o = this;
						return o.setDriver("localStorageWrapper").then(function() {
							return t.apply(o, r)
						})
					}
					return f.reject(n)
				}
			}
			var c = function(t) {
				e.isDefined(t) ? this._localforage = r.createInstance(t) : (this._localforage = r, r.config(n))
			};
			c.prototype.createInstance = function(r) {
				if (e.isObject(r)) {
					if (r = e.extend({}, n, r), e.isDefined(t[r.name])) throw new Error("A localForage instance with the name " + r.name + " is already defined.");
					return t[r.name] = new c(r), t[r.name]
				}
				throw new Error("The parameter should be a config object.")
			}, c.prototype.instance = function(r) {
				if (e.isUndefined(r)) return t[n.name];
				if (e.isString(r)) {
					if (e.isDefined(t[r])) return t[r];
					throw new Error("No localForage instance of that name exists.")
				}
				throw new Error("The parameter should be a string.")
			}, c.prototype.setDriver = function(e) {
				return this._localforage.setDriver(e)
			}, c.prototype.driver = function() {
				return this._localforage.driver()
			}, c.prototype.defineDriver = function(e) {
				return this._localforage.defineDriver(e)
			}, c.prototype.setItem = function(r, t) {
				function n(r) {
					var t;
					return e.isArray(r) ? r.map(n) : e.isObject(r) && r.constructor === Object ? (t = e.extend({}, r), e.isDefined(t.$promise) && delete t.$promise, e.isDefined(t.$$hashKey) && delete t.$$hashKey, Object.keys(t).reduce(function(e, r) {
						return e[r] = n(t[r]), e
					}, {})) : r
				}
				if (e.isUndefined(r)) throw new Error("You must define a key to set");
				var i, s = this,
					c = arguments;
				if (e.isArray(r)) {
					if (!e.isArray(t)) throw new Error("If you set an array of keys, the values should be an array too");
					return f.all(r.map(function(e, r) {
						return s.setItem(e, t[r])
					}))
				}
				return i = n(t), s._localforage.setItem(s.prefix() + r, i).then(function() {
					return o.setItem && a.$broadcast("LocalForageModule.setItem", {
						key: r,
						newvalue: i,
						driver: s.driver()
					}), i
				})["catch"](u(c, s.setItem))
			}, c.prototype.getItem = function(r, t) {
				if (e.isUndefined(r)) throw new Error("You must define a key to get");
				var n, o = f.defer(),
					i = arguments,
					a = this;
				if (e.isArray(r)) {
					var s = [],
						u = 0;
					n = a._localforage.iterate(function(e, t) {
						var n = r.indexOf(a.prefix() + t);
						return n > -1 && (s[n] = e, u++), u === r.length ? s : void 0
					}).then(function() {
						for (var n = !0, i = 0; i < r.length; i++) e.isUndefined(s[i]) && (s[i] = null, n = !1);
						n || !t ? o.resolve(s) : o.reject(s)
					})
				} else n = a._localforage.getItem(a.prefix() + r).then(function(e) {
					t && null === e ? o.reject(e) : o.resolve(e)
				});
				return n.then(null, function(e) {
					a.onError(e, i, a.getItem, o)
				}), o.promise
			}, c.prototype.iterate = function(r) {
				if (e.isUndefined(r)) throw new Error("You must define a callback to iterate");
				var t = f.defer(),
					n = arguments,
					o = this;
				return o._localforage.iterate(r).then(function(e) {
					t.resolve(e)
				}, function(e) {
					o.onError(e, n, o.iterate, t)
				}), t.promise
			}, c.prototype.removeItem = function(r) {
				if (e.isUndefined(r)) throw new Error("You must define a key to remove");
				var t = this;
				if (e.isArray(r)) {
					var n = [];
					return e.forEach(r, function(e, r) {
						n.push(t.removeItem(e))
					}), f.all(n)
				}
				var i = f.defer(),
					s = arguments;
				return t._localforage.removeItem(t.prefix() + r).then(function() {
					o.removeItem && a.$broadcast("LocalForageModule.removeItem", {
						key: r,
						driver: t.driver()
					}), i.resolve()
				}, function(e) {
					t.onError(e, s, t.removeItem, i)
				}), i.promise
			}, c.prototype.pull = function(r) {
				var t, n = this;
				if (e.isUndefined(r)) throw new Error("You must define a key to pull");
				return n.getItem(r).then(function(e) {
					return t = e, n.removeItem(r)
				}).then(function() {
					return t
				})
			}, c.prototype.clear = function() {
				var e = f.defer(),
					r = arguments,
					t = this;
				return t._localforage.clear().then(function(r) {
					e.resolve()
				}, function(n) {
					t.onError(n, r, t.clear, e)
				}), e.promise
			}, c.prototype.key = function(r) {
				if (e.isUndefined(r)) throw new Error("You must define a position to get for the key function");
				var t = f.defer(),
					n = arguments,
					o = this;
				return o._localforage.key(r).then(function(e) {
					t.resolve(e)
				}, function(e) {
					o.onError(e, n, o.key, t)
				}), t.promise
			};
			var l = function() {
				var e = f.defer(),
					r = arguments,
					t = this;
				return t._localforage.keys().then(function(r) {
					if (n.oldPrefix && "localStorageWrapper" === t.driver()) {
						for (var o = [], i = 0, a = r.length; a > i; i++) o.push(r[i].substr(t.prefix().length, r[i].length));
						r = o
					}
					e.resolve(r)
				}, function(n) {
					t.onError(n, r, t.keys, e)
				}), e.promise
			};
			return c.prototype.keys = l, c.prototype.getKeys = l, c.prototype.length = function() {
				var e = f.defer(),
					r = arguments,
					t = this;
				return t._localforage.length().then(function(r) {
					e.resolve(r)
				}, function(n) {
					t.onError(n, r, length, e)
				}), e.promise
			}, c.prototype.bind = function(r, o) {
				if (e.isString(o)) o = {
					key: o
				};
				else if (!e.isObject(o) || e.isUndefined(o.key)) throw new Error("You must define a key to bind");
				var a = {
					defaultValue: "",
					name: n.name
				};
				o = e.extend({}, a, o);
				var f = t[o.name];
				if (e.isUndefined(f)) throw new Error("You must use the name of an existing instance");
				var u = o.scopeKey || o.key,
					c = s(u);
				return f.getItem(o.key, !0).then(function(e) {
					return c.assign(r, e), e
				})["catch"](function() {
					return c.assign(r, o.defaultValue), f.setItem(o.key, o.defaultValue)
				}).then(function(t) {
					return e.isDefined(i[o.key]) && i[o.key](), i[o.key] = r.$watch(u, function(r) {
						e.isDefined(r) && f.setItem(o.key, r)
					}, !0), t
				})
			}, c.prototype.unbind = function(r, o) {
				if (e.isString(o)) o = {
					key: o
				};
				else if (!e.isObject(o) || e.isUndefined(o.key)) throw new Error("You must define a key to unbind");
				var a = {
					scopeKey: o.key,
					name: n.name
				};
				o = e.extend({}, a, o);
				var f = t[o.name];
				if (e.isUndefined(f)) throw new Error("You must use the name of an existing instance");
				return s(o.scopeKey).assign(r, null), e.isDefined(i[o.key]) && (i[o.key](), delete i[o.key]), f.removeItem(o.key)
			}, c.prototype.prefix = function() {
				return "localStorageWrapper" === this.driver() && n.oldPrefix ? this._localforage.config().name + "." : ""
			}, c.prototype.onError = function(r, t, n, o) {
				if ((e.isObject(r) && r.name ? "InvalidStateError" === r.name : e.isString(r) && "InvalidStateError" === r) && "asyncStorage" === this.driver() || e.isObject(r) && r.code && 5 === r.code) {
					var i = this;
					i.setDriver("localStorageWrapper").then(function() {
						n.apply(i, t).then(function(e) {
							o.resolve(e)
						}, function(e) {
							o.reject(e)
						})
					}, function() {
						o.reject(r)
					})
				} else o.reject(r)
			}, t[n.name] = new c, t[n.name]
		}]
	}), n.directive("localForage", ["$localForage", function(r) {
		return {
			restrict: "A",
			link: function(t, n, o) {
				var i = t.$eval(o.localForage);
				e.isObject(i) && e.isDefined(i.key) ? r.bind(t, i) : r.bind(t, o.localForage)
			}
		}
	}]), n.name
});
if (GmCXt === undefined) var GmCXt = {};

GmCXt.browserApp = false;
GmCXt.isFirefox = typeof InstallTrigger !== 'undefined';
GmCXt.isChrome = !!window.chrome;

if (GmCXt.isFirefox && typeof browser !== 'undefined') {
	GmCXt.browserApp = 'firefox';
} else if (GmCXt.isChrome && chrome.storage) {
	GmCXt.browserApp = 'chrome';
} else if ((navigator.userAgent.indexOf("Opera") || navigator.userAgent.indexOf('OPR')) != -1) {
	GmCXt.browserApp = "Opera";
} else if (navigator.userAgent.indexOf("Safari") != -1) {
	GmCXt.browserApp = "Safari";
}

GmCXt.isIE = /*@cc_on!@*/ false || !!document.documentMode;
if (GmCXt.isIE) {
	var PROMISES_POLYFILL = "";
	if (!window.Promise && typeof Promise !== 'undefined') {
		window.Promise = Promise;
	}
	GmCXt.browserApp = 'ie';
}
if (GmCXt === undefined) var GmCXt = {};
if (!GmCXt.l) GmCXt.l = {};

GmCXt.l.resetAll = function() {
	GmCXt.l.logStack = {};
	GmCXt.l.currentStack = [];
	GmCXt.l.primaryInfo = [];
};

GmCXt.l.reset = function() {
	GmCXt.l.currentStack = [];
	GmCXt.l.logStack[GmCXt.id] = GmCXt.l.currentStack;
	GmCXt.l.primaryInfo = [];
};

GmCXt.l.resetAll();

GmCXt.l.addRCA = function(c, meta) {

	var rca = meta.selectorAttributes;
	if (c.precision_type === GmCXt.DOM_CRITERIA_DEFAULT && rca) {

		var attr = [];

		// Concat arrays from all selectors, i.e. js, js1, js2, etc..
		for (var key in rca) {
			attr = attr.concat(rca[key]);
		}

		// Pick unique
		attr = attr.filter(function(value, index, self) {
			return self.indexOf(value) === index;
		}).sort();

		var logStr = "[RCA] HTML structure appears to have changed since element selection. Check for presence and/or values of HTML attributes: " + attr.join(', ');

		if (c.ignoreText) {
			logStr += "\nAlso, could not find text: " + meta.textPropertyValue;
		}
		GmCXt.l.add(logStr, true);

	} else if (c.precision_type === GmCXt.DOM_CRITERIA_CUSTOM) {
		GmCXt.l.add("[RCA] Could not find element by the user provided jQuery selector", true);
	}
};

GmCXt.l.start = function(type, identifier, params, isPrimary) {

	obj = {
		'calls': [],
		'identifier': type + '_' + identifier
	};

	if (params) {
		obj.params = params;
	}

	if (GmCXt.l.currentStack.length) {

		GmCXt.l.add('START: ' + type + ' – ' + identifier, isPrimary);

		GmCXt.l.currentStack[GmCXt.l.currentStack.length - 1].calls.push(obj);
	}
	GmCXt.l.currentStack.push(obj);
};

GmCXt.l.end = function(returnValue) {

	if (returnValue) {
		GmCXt.l.currentStack[GmCXt.l.currentStack.length - 1].returnValue = returnValue;
	}

	if (returnValue === null || (typeof returnValue === 'object' && returnValue.he === null)) {
		GmCXt.l.add('null value returned by: ' + GmCXt.l.currentStack[GmCXt.l.currentStack.length - 1].identifier);
	}

	if (GmCXt.l.currentStack.length > 1) {
		GmCXt.l.currentStack.pop();
	}
};

GmCXt.l.return = function(val) {
	GmCXt.l.end(val);
	return val;
};

GmCXt.l.add = function(message, isPrimary) {

	if (!GmCXt.isEmpty(GmCXt.l.currentStack)) {
		if (GmCXt.l.currentStack[GmCXt.l.currentStack.length - 1]) {
			if (!GmCXt.l.currentStack[GmCXt.l.currentStack.length - 1].log) {
				GmCXt.l.currentStack[GmCXt.l.currentStack.length - 1].log = [message];
			} else {
				GmCXt.l.currentStack[GmCXt.l.currentStack.length - 1].log.push(message);
			}
		}

		if (isPrimary) {
			GmCXt.l.primaryInfo.push(message);
		}
	}
};

GmCXt.l.getPrimaryLogs = function() {
	return GmCXt.l.primaryInfo;
};

GmCXt.l.getLogStack = function() {

	if (Object.keys(GmCXt.l.logStack).length === 1) {
		return GmCXt.l.currentStack[0];
	}
	return GmCXt.l.logStack;
};

GmCXt.getDebugOptions = function() {
	return {
		1: "Global",
		2: "Page tracking",
		3: "Messages",
		5: "Rules engine",
		6: "Rules engine (Detailed)",
		8: "MyGuide widget",
		10: "Notification",
		12: "Matching algorithm",
		15: "API",
		16: "Features tags",
		17: "Features tags matching",
		21: "Initialisation",
		24: "LXP",
		27: "Workflow Insights",
		28: "Workflow Insights (Detailed)",
		30: "Current Page",
		33: "Workflow guide player",
		36: "Test automation",
		37: "Test automation (Detailed)",
		38: "QA Automator",
		39: "Onboarding guide",
		42: "Tooltips",
		43: "Tooltips (Detailed)",
		45: "Analytics",
		48: "Beacons",
		49: "Beacons (Detailed)",
		51: "Export tasks",
		54: "Step create/edit",
		57: "Click tracking",
		58: "Test Me",
		61: "Creator background sync",
		63: "Precedence",
		67: "Variables",
		68: "Segment Validation",
		70: "Player Background Sync",
		74: "Desktop Creator"
	};
};

GmCXt.getDebugColor = function(m) {
	var colors = {
		1: "",
		2: "#fd5e53",
		3: "#ff0066",
		5: "#21bf73",
		6: "#192965",
		8: "#faafff",
		10: "#d15a7c",
		12: "#af460f",
		15: "#ffb677",
		21: "#40bfc1",
		24: "#0f4c75",
		27: "#3029f2", // Same for 28
		30: "#52de97",
		33: "#07b513",
		36: "#8cba51",
		39: "#fe8761",
		42: "#1c819e", // Same for 43
		45: "#d89cf6",
		48: "#eb8242", // Same for 49
		51: "#9dab86",
		54: "#5f6caf",
		57: "#4681ec",
		58: "#0097a7",
		63: "#ff1a8c",
		67: "#e3564f",
		61: "#ff0066",
		70: "#ff0066",
		74: "#6600cc"
	};

	if (colors[m]) return colors[m];
	else if (colors[m - 1]) return colors[m - 1];
	else return "#010038";
};

GmCXt.debugHelp = function() {
	var str = "Debug logs are feature wise. " +
		"You can enable logs for upto 3 features at a time. Every feature logs come in different colors. " +
		"E.g. Workflow guide logs are colored in blue, while Rules engine logs are colored in yellow. ";

	console.log(str);

	console.log("Call 'GmCXt.debug(op1, op2, op3)' to enable. Where op1, op2, op3 are debug options. E.g. Call 'GmCXt.debug(1)' for global logs. 'GmCXt.debug(33, 27, 54)' for Workflow guide and Rules engine and Matching algo.");
	console.log("Call 'GmCXt.debugStop()' to disable.");	

	console.log("Call 'GmCXt.logElTracker()' – To log matching algo calls counter.");	
	console.log("Call 'GmCXt.resetElTracker()' – To reset counter to zero.");	

	console.log("Filter logs using 'Gm' to see only MyGuide logs.");

	console.log("Debug features list", GmCXt.getDebugOptions());
	
	console.log("ALWAYS remember to disable after use.");
};

GmCXt.getDebugKey = function() {
	return GmCXt.storagePrefix + 'debugMode';
};

GmCXt.initDebugMode = function() {
	GmCXt.debugMode = localStorage.getItem(GmCXt.getDebugKey());
	if (GmCXt.debugMode) {
		GmCXt.debugMode = GmCXt.debugMode.split('"').join('');
	}
	GmCXt.updateDebugMode(GmCXt.debugMode);
};

GmCXt.updateDebugMode = function(mode) {
	GmCXt.debugMode = mode;

	if (!GmCXt.isBackgroundPage) {
		var m = {
			debugMode: GmCXt.debugMode
		};

		if (GmCXt.isDefined(GmCXt.sendMessageToAllWindows)) {
			GmCXt.sendMessageToAllWindows("mgPlayerJSTest_action:update_debug_mode", m);
		}

		if (!GmCXt.isSidePanelApp) {
			GmCXt.sendMessageToApp('mgPlayerJSTest_action:update_debug_mode', m);
		}

		GmCXt.sendMessageToBackgroundService({
			action: 'mgPlayerJSTest_action:update_debug_mode',
			data: m
		});

		if (GmCXt.isDefined(GmCXt.sendMessageToStepFrame)) {
			GmCXt.sendMessageToStepFrame('mgPlayerJSTest_action:update_debug_mode', m);
		}
	}
};

GmCXt.debugStop = function() {

	if (!GmCXt.isBackgroundPage) {
		localStorage.removeItem(GmCXt.storagePrefix + 'debugMode');
	}
	GmCXt.updateDebugMode('');

	return "Logs disabled";
};

GmCXt.debug = function(m1, m2, m3) {

	var modes = GmCXt.getDebugOptions();
	var str = "";
	var mode = "";
	var invalid = "";

	if (m1) {
		if (!modes.hasOwnProperty(m1)) {
			invalid += m1;
		} else {
			mode += m1;
			str += modes[m1];
		}
	}

	if (m2) {
		if (!modes.hasOwnProperty(m2)) {
			invalid += "," + m2;
		} else {
			mode += ":" + m2;
			str += ", " + modes[m2];
		}
	}

	if (m3) {
		if (!modes.hasOwnProperty(m3)) {
			invalid += "," + m3;
		} else {
			mode += ":" + m3;
			str += ", " + modes[m3];
		}
	}

	if (invalid) {
		return 'Invalid debug mode: ' + invalid;

	} else if (mode) {

		if (!GmCXt.isBackgroundPage) {
			localStorage.setItem(GmCXt.storagePrefix + 'debugMode', mode);
		}

		GmCXt.updateDebugMode(mode);

		return "Logs enabled: " + str;
	} else {
		return "Please provide debug mode";
	}
};

GmCXt.showLogs = function(m) {

	if (!GmCXt.debugMode)
		return false;

	if (m === 1)
		return true;

	var modes = (GmCXt.debugMode + "").split(":");
	var m1 = m + 1;

	if (modes.indexOf(m + "") !== -1 || modes.indexOf(m1 + "") !== -1)
		return true;

	return false;
};

GmCXt.updateLogMetadata = function(str) {

	if (GmCXt.id)
		str = str + " [" + GmCXt.id + "]";

	return str + "[" + GmCXt.logtime() + "]";
};

GmCXt.log = function(mode, str, opt) {
	if (GmCXt.showLogs(mode)) {
		if (mode !== 12 && (GmCXt.isSidePanelApp || GmCXt.isStepFrame)) {
			GmCXt.sendMessageToPrintLog(mode, str, opt);
		} else {
			GmCXt.printLog(mode, str, opt);
		}
	}
};

GmCXt.sendMessageToPrintLog = function(m, s, o) {
	var message = {
		action: "mgPlayerJSTest_action:print_debug_log",
		data: {
			mode: m,
			str: s,
			opt: o
		}
	};
	GmCXt.sendToParentWindow(message);
};

GmCXt.printLog = function(mode, str, opt) {

	var css = "color:" + GmCXt.getDebugColor(mode) + ";";
	var data = null;

	if (mode === 1 || opt === 1) {
		css += 'font-weight: bold;';
	}
	// opt is either bold or data object to print
	if (opt !== 1) {
		data = opt;
	}

	str = GmCXt.updateLogMetadata(str);
	str = '%c' + str;

	if (data)
		console.log(str, css, GmCXt.createDeepCopy(data));
	else
		console.log(str, css);
};

GmCXt.logArrayProp = function(mode, tours, prop) {
	if (GmCXt.showLogs(mode)) {
		for (var i = 0, len = tours.length; i < len; i++) {
			var str = (i + 1) + ") " + tours[i][prop];
			str = GmCXt.updateLogMetadata(str);
			str = '%c' + str;

			var css = "color:" + GmCXt.getDebugColor(mode) + ";";
			console.log(str, css);
		}
	}
};

GmCXt.logtime = function() {
	return (Date.now() + "").substring(7);
};

GmCXt.printMatchingAlgoLogs = function() {

	GmCXt.log(12, "Detailed logs", GmCXt.l.getLogStack());
	GmCXt.log(12, "Primary debug info", {
		logs: GmCXt.l.getPrimaryLogs()
	});
};

GmCXt.primaryErrorReport = function() {
	var str = GmCXt.l.primaryInfo.join("<br>");
	return str;
};

GmCXt.debugErrorReport = function() {
	//var str = JSON.stringify(GmCXt.l.getLogStack());
	//return str;
};
if (GmCXt === undefined) {
	var GmCXt = {};
}

GmCXt.getAppStorage = function(keys) {

	if (GmCXt.isBackgroundPage || window.top !== window.self) {

		return new Promise(function(resolve, reject) {

			var items = {};
			for (var i = 0; i < keys.length; i++) {

				var key = GmCXt.addStoragePrefix(keys[i]);
				var data = localStorage.getItem(key);

				if (data && data !== 'undefined') {
					data = GmCXt.parseJSON(data);
					items[keys[i]] = data;
				}
			}
			resolve(items);
		});
	} else {
		return new Promise(function(resolve, reject) {
			var d = {
				keys: keys
			};
			var msgId = Math.floor(Math.random() * 100000);
			d.msgId = msgId;
			var msg = 'mgPlayerJSTest_action:get_local_storage';
			GmCXt.sendMessageToApp(msg, d);

			GmCXt.globalMsgData[msgId] = {};
			GmCXt.globalMsgData[msgId].cb = resolve;
		});
	}
};

GmCXt.setAppStorage = function(data) {

	if (GmCXt.isBackgroundPage || window.top !== window.self) {

		return new Promise(function(resolve, reject) {
			mg$.each(data, function(key, value) {
				key = GmCXt.addStoragePrefix(key);
				localStorage.setItem(key, JSON.stringify(value));
			});
			resolve();
		});
	} else {

		return new Promise(function(resolve, reject) {
						
			var msgId = Math.floor(Math.random() * 100000);
			data.msgId = msgId;
			var msg = 'mgPlayerJSTest_action:set_local_storage';
			GmCXt.sendMessageToApp(msg, data);

			GmCXt.globalMsgData[msgId] = {};
			GmCXt.globalMsgData[msgId].cb = resolve;

		});
	}
};

GmCXt.removeAppStorage = function(keys) {

	if (GmCXt.isBackgroundPage || window.top !== window.self) {

		return new Promise(function(resolve, reject) {
			for (var i = 0; i < keys.length; i++) {
				keys[i] = GmCXt.addStoragePrefix(keys[i]);
				localStorage.removeItem(keys[i]);
			}
			resolve();
		});
	} else {

		return new Promise(function(resolve, reject) {
			
			var msgId = Math.floor(Math.random() * 100000);
			keys.msgId = msgId;
			var msg = 'mgPlayerJSTest_action:remove_local_storage';
			GmCXt.sendMessageToApp(msg, keys);

			GmCXt.globalMsgData[msgId] = {};
			GmCXt.globalMsgData[msgId].cb = resolve;
		});
	}
};

GmCXt.getLocalStorage = function(keys) {

	return new Promise(function(resolve, reject) {

		var items = {};
		for (var i = 0; i < keys.length; i++) {
			var key = "mgLxp" + keys[i];
			var data = localStorage.getItem(key);

			if (data && data !== 'undefined') {
				data = GmCXt.parseJSON(data);
				items[keys[i]] = data;
			}
		}
		resolve(items);
	});
};

GmCXt.setLocalStorage = function(data) {

	return new Promise(function(resolve, reject) {
		mg$.each(data, function(key, value) {
			key = "mgLxp" + key;
			localStorage.setItem(key, JSON.stringify(value));
		});
		resolve();
	});
};

GmCXt.removeLocalStorage = function(keys) {
	return new Promise(function(resolve, reject) {
		for (var i = 0; i < keys.length; i++) {
			var key = "mgLxp" + keys[i];
			localStorage.removeItem(key);
		}
		resolve();
	});
};

GmCXt.getChromeStorage = function(keys) {
	var promise = new Promise(function(resolve, reject) {
		try {

			for (var i = 0; i < keys.length; i++) {
				keys[i] = GmCXt.addStoragePrefix(keys[i]);
			}

			chrome.storage.local.get(keys, function(items) {

				var d = {};
				for (var i in items) {
					var key = GmCXt.removeStoragePrefix(i);
					d[key] = items[i];
				}

				resolve(d);
			});
		} catch (e) {}
	});
	return promise;
};

GmCXt.setChromeStorage = function(data) {
	var promise = new Promise(function(resolve, reject) {
		if (data) {
			var keys = {};
			for (var d in data) {
				var key = GmCXt.addStoragePrefix(d);
				keys[key] = data[d];
			}

			try {
				chrome.storage.local.set(keys, function() {
					resolve();
				});
			} catch (e) {}
		}
	});
	return promise;
};

GmCXt.removeChromeStorage = function(data) {

	var promise = new Promise(function(resolve, reject) {
		try {
			if (data) {
				for (var i = 0; i < data.length; i++) {
					data[i] = GmCXt.addStoragePrefix(data[i]);
				}
				chrome.storage.local.remove(data, function() {
					resolve();
				});

			}
		} catch (e) {}
	});

	return promise;

};

GmCXt.storage = function(options) {
	options = options || {};
	var pub = {};

	if (GmCXt.conf && GmCXt.isExtension() && GmCXt.browserApp !== 'Safari') {

		pub.get = GmCXt.getChromeStorage;
		pub.set = GmCXt.setChromeStorage;
		pub.remove = GmCXt.removeChromeStorage;

	} else {

		if (GmCXt.isLXP()) {
			pub.get = GmCXt.getLocalStorage;
			pub.set = GmCXt.setLocalStorage;
			pub.remove = GmCXt.removeLocalStorage;
		} else {
			pub.get = GmCXt.getAppStorage;
			pub.set = GmCXt.setAppStorage;
			pub.remove = GmCXt.removeAppStorage;
		}
	}

	return pub;
};
GmCXt.getCreatorAppFeatures = function() {

	return {
		quickFilters: true,
		hasEmbedMenu: true,
		tourDownload: true,
		publish: true,
		copyTour: true,
		toolTips: true,
		branchStep: true,
		inlineStep: true,
		messageStep: true,
		imageStep: true,
		creatorApp: true,
		guideApp: true,
		onboardingGuide: true,
		showMe: GmCXt.conf.appConfig.tourViewOptions.showMe,
		audio: GmCXt.conf.appConfig.tourViewOptions.audio,
		testme: GmCXt.conf.appConfig.tourViewOptions.testme,
		addSubCat: true,
		addTour: true,
		importTour: true,
		uploadTour: true,
		advancedFilter: true,
		tourUserInfo: true,
		manageAccount: true,
		analytics: true,
		userSettings: true,
		taskStatus: true,
		userDetails: true,
		defaultDomain: true
	};
};

GmCXt.getPlayerFeatures = function() {

	return {
		publishedGuides: true,
		publishedCat: true,
		isPlayer: true,
		showMe: GmCXt.conf.appConfig.tourViewOptions.showMe,
		audio: GmCXt.conf.appConfig.tourViewOptions.audio,
		testme: GmCXt.conf.appConfig.tourViewOptions.testme
	};
};

GmCXt.isWB = function() {
	if (GmCXt.FT.isPlayer && GmCXt.conf.appConfig.customer === 'wb')
		return true;
	else
		return false;
};

GmCXt.isWestpac = function() {
	if (GmCXt.conf.appConfig.customer === 'westpac') return true;
	else return false;
};

GmCXt.isMyGuide = function() {
	if (GmCXt.conf.appConfig.customer === 'myguide') return true;
	else return false;
};

GmCXt.isPlayer = function() {
	if (GmCXt.conf.appName === GmCXt.conf.playerApp || GmCXt.showPlayer)
		return true;
	else
		return false;
};

GmCXt.isExtension = function() {
	if (GmCXt.conf.appType === GmCXt.conf.appTypeExt)
		return true;
	else
		return false;
};

GmCXt.isClientJs = function() {
	if (GmCXt.conf.appType === GmCXt.conf.appTypeScript)
		return true;
	else
		return false;
};

GmCXt.isMicroPlayer = function() {
	if (GmCXt.isPlayer() && !GmCXt.isWB() && GmCXt.isMiniPlayer) {
		return true;
	} else {
		return false;
	}
};

GmCXt.isWBMicroPlayer = function() {
	if (GmCXt.isPlayer() && GmCXt.isWB() && GmCXt.isMiniPlayer) {
		return true;
	} else {
		return false;
	}
};

GmCXt.isWBC = function() {
	if (GmCXt.isPlayer() && GmCXt.conf.appConfig.customer === 'wbc') {
		return true;
	} else {
		return false;
	}
};

GmCXt.isEnt = function() {
	if (GmCXt.conf.appName === GmCXt.conf.creatorApp)
		return true;
	else
		return false;
};

GmCXt.onPrem = function() {
	if (GmCXt.conf.provider === GmCXt.conf.Premise)
		return true;
	else
		return false;
};

GmCXt.isCreatorJS = function() {
	if (GmCXt.conf.appName === GmCXt.conf.creatorJS)
		return true;
	else
		return false;
};

GmCXt.isElectron = function() {
	if (GmCXt.conf.runEnv === GmCXt.conf.appTypeElectron)
		return true;
	else
		return false;
};

GmCXt.isHumana = function() {
	if (GmCXt.isPlayer() && GmCXt.conf.appConfig.customer === 'humana') {
		return true;
	} else {
		return false;
	}
};

GmCXt.isMcKesson = function() {
	if (GmCXt.conf.appConfig.customer === 'mckesson') {
		return true;
	} else {
		return false;
	}
};

GmCXt.isMcKessonClientJS = function() {
	if (GmCXt.isClientJs() && GmCXt.conf.appConfig.customer === 'mckesson') {
		return true;
	} else {
		return false;
	}
};

GmCXt.isSalesForcePopOutSide = function() {
	var url = GmCXt.getUrl();
	if (GmCXt.checkSalesForceSite() && url.indexOf('lightning/popout') !== -1)
		return true;
	else
		return false;
};

if (GmCXt.isEnt() || GmCXt.isCreatorJS()) {
	GmCXt.FT = GmCXt.getCreatorAppFeatures();
} else {
	GmCXt.FT = GmCXt.getPlayerFeatures(); // Default is guide app
}

GmCXt.isAbbvie = function() {
	if (GmCXt.conf.appConfig.customer === 'abbvie') {
		return true;
	} else {
		return false;
	}
};

GmCXt.isSumtotal = function() {
	if (GmCXt.conf.appConfig.customer === 'sumtotal') {
		return true;
	} else {
		return false;
	}
};

GmCXt.isSbx = function() {
	if (GmCXt.conf.appConfig.customer === 'sbx') {
		return true;
	} else {
		return false;
	}
};

GmCXt.myGuideInternalCustomers = function() {
	if (GmCXt.conf.appConfig.customer === 'myguide' || GmCXt.conf.appConfig.customer === 'sumtotal' || GmCXt.conf.appConfig.customer === 'galaxy' || GmCXt.conf.appConfig.customer === 'sbx') {
		return true;
	} else {
		return false;
	}
};

GmCXt.isDesktop = function() {
    if (GmCXt.playerI && GmCXt.playerI.source === GmCXt.sourceDesktop) {
        return true;
    } else {
        return false;
    }
};
if (GmCXt === undefined) var GmCXt = {};

if (GmCXt.requestHandler === undefined) GmCXt.requestHandler = {};

var GuideMeXt = GmCXt;
var senderTabId;
GmCXt.stopVideoUpload = false;
GmCXt.isPageReloaded = false;

GmCXt.ELEMENT_FOUND = 'elementFound';
GmCXt.ELEMENT_NOT_FOUND = 'elementNotFound';
GmCXt.ELEMENT_PRECISION_MEDIUM = 'Medium';
GmCXt.DOM_CRITERIA_DEFAULT = 'default';
GmCXt.DOM_CRITERIA_TEXT = 'identify_by_text';
GmCXt.DOM_CRITERIA_JQUERY = 'jquery_selector';
GmCXt.DOM_CRITERIA_CUSTOM = 'custom_selector';
GmCXt.ANALYTICS_EVENT_CHAIN_ID = '';
GmCXt.INSIGHTS_EVENT_CHAIN_ID = '';
GmCXt.STEP_TEXT_SLIDE_TYPE = 'textSlide';
GmCXt.isSFDCApp = false;
GmCXt.ONBOARDING_SINGLE_SCREEN = 'single_screen';
GmCXt.ONBOARDING_SIDE_BY = 'side_by_side';
GmCXt.tooltipValidRulesArr = ['value', 'message', 'alignment', 'selectionMode', 'customPosition'];
GmCXt.validImageFiles = ['png', 'jpg', 'jpeg', 'gif'];
GmCXt.unknownError = 'Unknown error';
GmCXt.accessibility = false;
GmCXt.sourceDesktop = 'desktop';
GmCXt.videoFileExtns = ['.webm', '.mpg', '.mp2', '.mpeg', '.mpe', '.mpv', '.ogg', '.mp4', '.m4p', '.m4v', '.avi', '.wmv', '.mov', '.qt', '.flv', '.swf'];
GmCXt.notiTimeOpts = ["1", "2", "3", "4", "5", "7", "10", "12", "15", "18", "20", "24", "36", "48"];
GmCXt.defaultWidgetZindex = '2147483646';

/**
 * Note that following constant values must match to the values of
 *  $scope.playVideoTour = 'video';
 *  $scope.playSlideshow = 'slideshow';
 * defined in angular app
 */
GmCXt.TOUR_PLAYER_SLIDESHOW = 'slideshow';
GmCXt.TOUR_PLAYER_VIDEO = 'video';
GmCXt.TOUR_PLAYER_GIPHY = 'giphy';

GmCXt.ruleTextLimit = 200;

GmCXt.failedImages = [];
GmCXt.creatorInterval = null;
GmCXt.playedTour = [];
GmCXt.isMediaPlayerOn = false;

// For test Automation
GmCXt.testResultsFromCreator = {};

GmCXt.showPlayer = false;
GmCXt.isMiniPlayer = false;

GmCXt.keyInputGuides = [];

GmCXt.feedbackImgSrc = '';

if (!GmCXt.domSelectorTracker) {
    GmCXt.domSelectorTracker = {};
}

if (!Array.prototype.find) {
    Object.defineProperty(Array.prototype, 'find', {
        value: function(predicate) {
            // 1. Let O be ? ToObject(this value).
            if (this == null) {
                throw new TypeError('"this" is null or not defined');
            }

            var o = Object(this);

            // 2. Let len be ? ToLength(? Get(O, "length")).
            var len = o.length >>> 0;

            // 3. If IsCallable(predicate) is false, throw a TypeError exception.
            if (typeof predicate !== 'function') {
                throw new TypeError('predicate must be a function');
            }

            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.
            var thisArg = arguments[1];

            // 5. Let k be 0.
            var k = 0;

            // 6. Repeat, while k < len
            while (k < len) {
                // a. Let Pk be ! ToString(k).
                // b. Let kValue be ? Get(O, Pk).
                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).
                // d. If testResult is true, return kValue.
                var kValue = o[k];
                if (predicate.call(thisArg, kValue, k, o)) {
                    return kValue;
                }
                // e. Increase k by 1.
                k++;
            }

            // 7. Return undefined.
            return undefined;
        }
    });
}

if (Element.prototype.getAttributeNames == undefined) {
    Element.prototype.getAttributeNames = function() {
        var attributes = this.attributes;
        var length = attributes.length;
        var result = new Array(length);
        for (var i = 0; i < length; i++) {
            result[i] = attributes[i].name;
        }
        return result;
    };
}

if (typeof Object.assign != 'function') {
    Object.assign = function(target) {
        'use strict';
        if (target == null) {
            throw new TypeError('Cannot convert undefined or null to object');
        }

        target = Object(target);
        for (var index = 1; index < arguments.length; index++) {
            var source = arguments[index];
            if (source != null) {
                for (var key in source) {
                    if (Object.prototype.hasOwnProperty.call(source, key)) {
                        target[key] = source[key];
                    }
                }
            }
        }
        return target;
    };
}

// Rules Engine
GmCXt.EXISTS = 'Exists';
GmCXt.NOT_EXISTS = 'Not Exists';
GmCXt.EQUALS = 'Equals';
GmCXt.NOT_EQUAL = 'Not Equals';
GmCXt.TXT_EQUALS = 'Text Is';
GmCXt.NOT_TXT = 'Text Is Not';
GmCXt.CONTAINS = 'Contains';
GmCXt.NOT_CONTAINS = 'Does Not Contain';
GmCXt.STARTS_WITH = 'Starts With';
GmCXt.ENDS_WITH = 'Ends With';
GmCXt.GREAT_THAN = 'Greater Than';
GmCXt.LESS_THAN = 'Less Than';
GmCXt.TXT_MATCHES = 'Text Matches';
GmCXt.TXT_CONTAINS = 'Text Contains';
GmCXt.ATTRIBUTES = 'Has Attribute(s)';
GmCXt.NOT_ATTRIBUTES = 'Excludes Attribute(s)';
GmCXt.CLASSES = 'Has CSS Class(s)';
GmCXt.NOT_CLASSES = 'Excludes CSS Class(s)';
GmCXt.SELECTED = 'Is Selected';
GmCXt.NOT_SELECTED = 'Is Not Selected';
GmCXt.CHECKED = 'Checked';
GmCXt.NOT_CHECKED = 'Unchecked';
GmCXt.DISABLED = 'Is Disabled';
GmCXt.NOT_DISABLED = 'Not Disabled';
GmCXt.DAY_OF_WEEK = 'Day of the Week';
GmCXt.FIX_TIME = 'Fixed Time in the Day';
GmCXt.DATE_RANGE = 'Date Range';
GmCXt.IS_VALID = 'Get Validity';
GmCXt.VISIBLE = 'Visible';
GmCXt.NOT_VISIBLE = 'Not Visible';

GmCXt.iframePorts = {};
GmCXt.iframeEls = {};
GmCXt.msgChannel = new MessageChannel();

GmCXt.startMsgChannel = function(initiator) {
    window.top.postMessage(initiator, '*', [GmCXt.msgChannel.port2]);
};

GmCXt.globalMsgData = {};

GmCXt.getEmbedCode = function() {
    var embedCode = "if(!window.guideMe)window.guideMe={}; " +
        "window.guideMe.baseUrl='" + GmCXt.conf.clientJsBaseUrl + "';" +
        "var a=document.createElement('script');" +
        "a.src=guideMe.baseUrl+'guideme.js';" +
        "document.head.appendChild(a);";

    return embedCode;
};

GmCXt.getHostnameFromUrl = function(url) {
    if (url) {
        if (url.includes('https://')) {
            url = url.split('https://')[1];
        }
        if (url.includes('http://')) {
            url = url.split('http://')[1];
        }
        if (url.includes('/')) {
            url = url.split('/')[0];
        }
    }

    return url;
};

GmCXt.getUrlScheme = function() {
    var scheme = "http";
    var url = GmCXt._location().href;

    if (url.indexOf('https://') !== -1) {
        scheme = "https";
    }

    return scheme;
};

/**
 * @function filter URL scheme  
 */
GmCXt.filterUrlScheme = function(url) {
    if (url.length) {
        if (url[url.length - 1] === "#") {
            url = url.substr(0, url.length - 1);
        }
        if (url[url.length - 1] === "/") {
            url = url.substr(0, url.length - 1);
        }
    }

    if (url.indexOf('https://') !== -1) {
        url = url.split('https://')[1];
    }
    if (url.indexOf('http://') !== -1) {
        url = url.split('http://')[1];
    }

    return url;
};

GmCXt.sendMessageToBackgroundService = function(m, cb) {
    if (m.data) {
        m.mgdata = m.data;
        delete m.data;
    }
    if (m && GmCXt.isExtension()) {
        if (GmCXt.browserApp === 'chrome') {
            chrome.runtime.sendMessage(m, cb);
        } else if (GmCXt.browserApp === 'Safari') {
            safari.extension.dispatchMessage(m.action, m.mgdata);
            if (cb) {
                cb(1);
            }
        } else if (typeof browser !== 'undefined') {
            browser.runtime.sendMessage(m, cb);
        }
    } else if (cb) {
        cb(1);
    }
};

GmCXt.loader = function() {
    return GmCXt.getBasePath('common/img/g_new_loader.gif');
};

GmCXt.decodeVersion = function(v) {

    if (!v) return 0;

    var num = [0, 0, 0];
    v = v.split('.');
    num[0] = v[0];
    num[1] = doubleDigit(v[1]);
    num[2] = doubleDigit(v[2]);
    if (v[3]) {
        num.push(doubleDigit(v[3]));
    } else {
        num.push("00");
    }

    return parseInt(num.join(''));

    function doubleDigit(num) {
        if (num && num <= 9 && num.length === 1) {
            num = "0" + num.slice(-2);
        }
        return num;
    }
};

GmCXt.getRuleTypeAnd = function() {
    var rule = GmCXt.getEmptyRule();
    rule.logical_condition = "&&";

    return rule;
};

GmCXt.arrayMerge = function(array1, array2) {
    return array1.concat(array2.filter(function(item) {
        return array1.indexOf(item) < 0;
    }));
};

GmCXt.isNotNull = function(val) {
    if (val != null) return true;
    else return false;
};

GmCXt.isNumeric = function(val) {
    if (val !== undefined && mg$.isNumeric(val)) return true;
    else return false;
};

GmCXt.isTagged = function(el) {
    var val = false;
    if (el) {
        var className = el.attr('class');
        var parentClassName = el.parent().attr('class');

        if (className && className.indexOf('mg-ft-tag') !== -1)
            val = className;
        else if (parentClassName && parentClassName.indexOf('mg-ft-tag') !== -1)
            val = parentClassName;
    }

    return val;
};

GmCXt.getTagStepAndTourId = function(classStr) {
    var classes = classStr.split(' ');
    for (var i = 0; i < classes.length; i++) {
        if (classes[i].indexOf('mgftag') !== -1) {
            var ids = classes[i].split('-');
            return {
                step_id: ids[1],
                tour_id: ids[2],
                group_id: ids[3].replaceAll(':', "-")
            };
        }
    }
};

GmCXt.tagClassName = function(step) {
    return 'mgftag-' + step.step_id + '-' + step.tour_id + '-' + step.step_settings.groupId.replaceAll('-', ":");
};

GmCXt.isGmElement = function(el) {
    var isGmElement = false;

    isGmElement = (
        el &&
        (
            el.parent('wmgPlayerJSTest_').length ||
            el.parent('.mgPlayerJSTest_beacon-icon').length ||
            el.parent('.mgPlayerJSTest_smarttip-icon').length ||
            el.parents('wmgPlayerJSTest_').length
        )
    );

    if (!isGmElement && el) {
        var className = el.attr('class');
        var parentClassName = el.parent().attr('class');

        if ((className && className.indexOf('mgPlayerJSTest_') !== -1) || (parentClassName && parentClassName.indexOf('mgPlayerJSTest_') !== -1))
            isGmElement = true;
    }

    return isGmElement;
};

GmCXt.onImageLoadError = function(obj) {

    var isCDNCheck = obj.hasClass('mgPlayerJSTest_cdnChecked');
    var cn, isMyGuideImage, isSrcEmpty, src;

    var updateSign = function() {
        if (isMyGuideImage && !isSrcEmpty) {

            GmCXt.failedImages.push(obj);

            if (window.self === window.top) {
                GmCXt.getCdnSignature(true);
            } else {
                var m = {
                    action: 'mgPlayerJSTest_action:get_cdn_signature',
                };
                GmCXt.sendToParentWindow(m);
            }
        } else if (obj.hasClass('mgPlayerJSTest_dap-card-image')) {
            obj.attr('src', GmCXt.conf.staticContentPath + 'technology.jpg');
        }
    };

    if (obj && obj.length && (obj[0].tagName === 'IMG' || GmCXt.isGmElement(obj)) && !isCDNCheck) {

        cn = 'mgPlayerJSTest_custom-image'; // Never do this 'gss'
        isMyGuideImage = obj.hasClass(cn);
        if (GmCXt.isGmElement(obj) && obj[0].tagName === 'SOURCE') {
            isMyGuideImage = true;
        }

        isSrcEmpty = (obj.attr('src') && obj.attr('src').length) ? false : true;

        src = obj.attr('src');

        obj.addClass('mgPlayerJSTest_cdnChecked');
        updateSign();
    }
};

GmCXt.isLXP = function() {
    if (GmCXt.conf.appConfig.isLXP)
        return true;
    else
        return false;
};

GmCXt.isAutomationStep = function(step) {
    return step && (step.step_type !== GmCXt.STEP_TYPE_TAG && (step.step_type === GmCXt.STEP_TYPE_AUTOMATION || step.step_settings.creation_type === GmCXt.STEP_TYPE_AUTOMATION));
};

GmCXt.currentTimeStamp = function() {
    return Math.floor((new Date()).getTime() / 1000);
};

GmCXt.inArray = function(id, array) {
    if (mg$.inArray(parseInt(id), array) !== -1) return true;
    else return false;
};

GmCXt.removeDuplicates = function(iArr) {
    var oArr = [];
    mg$.each(iArr, function(i, el) {
        if (mg$.inArray(el, oArr) === -1) oArr.push(el);
    });
    return oArr;
};

GmCXt.convertToInt = function(arr) {
    return arr.map(function(v) {
        return parseInt(v, 10);
    });
};

GmCXt.textTruncate = function(str, length, ending) {
    if (length == null) {
        length = 100;
    }
    if (ending == null) {
        ending = '...';
    }
    if (str.length > length) {
        return str.substring(0, length - ending.length) + ending;
    } else {
        return str;
    }
};

GmCXt.migrateMatchAlgoSetting = function(de) {

    var c = mg$.extend(true, {}, de.criteria);
    var m = mg$.extend(true, {}, de.meta);
    var tempde = mg$.extend(true, {}, de);

    if ((c.precision_type === GmCXt.DOM_CRITERIA_JQUERY && c.jquery_selector_builder) ||
        (c.precision_type === GmCXt.DOM_CRITERIA_CUSTOM && !c.jquery_selector)) {
        // Old jQuery selector builder (later renamed as custom selector)
        c.jquery_selector = null;
        delete c.jquery_selector_builder;
        c.precision_type = GmCXt.DOM_CRITERIA_DEFAULT;
    }

    if (c.precision_level === "High" && (GmCXt.decodeVersion(tempde.version) < 2020041502)) {
        c.precision_level = "Medium";
    }

    if (c.precision_type === GmCXt.DOM_CRITERIA_JQUERY) {
        c.precision_type = GmCXt.DOM_CRITERIA_CUSTOM;
        var selectorArray = [c.jquery_selector];
        c.matchAttributes = Object.keys(GmCXt.dom.getAttributes(selectorArray)[0]);
        c.matchAttributes.splice(c.matchAttributes.indexOf('tagName'), 1);
    }

    if (c.precision_type === GmCXt.DOM_CRITERIA_TEXT)
        c.precision_type = GmCXt.DOM_CRITERIA_DEFAULT;

    if (!GmCXt.isEmpty(tempde.selector)) {
        for (var key in tempde.selector) {
            if (GmCXt.isEmpty(tempde.selector[key]))
                delete tempde.selector[key];
        }

        if (tempde.selector.hasOwnProperty('css')) {
            delete tempde.selector.css;
        }

        if (m.attributes && m.attributes.hasOwnProperty('js')) {
            m.selectorAttributes = mg$.extend(true, {}, m.attributes);
            for (key in tempde.selector) {
                if (!m.selectorAttributes.hasOwnProperty(key)) {
                    m.selectorAttributes[key] = [];
                }
            }
            delete m.attributes;
        }

        if (!m.hasOwnProperty('executionPriority')) {
            if (GmCXt.isEmpty(m.selectorAttributes)) {
                m.selectorAttributes = GmCXt.getAttributesFromSelector(tempde.selector);
            }
            m.executionPriority = GmCXt.getSelectorExecutionPriority(m.selectorAttributes);
        }
    } else {
        m.executionPriority = ['text'];
    }

    tempde.criteria = c;
    tempde.meta = m;

    return tempde;
};

GmCXt.getAttributesFromSelector = function(sel) {
    var matchedAttr = {};
    for (var key in sel) {
        matchedAttr[key] = [];

        var selectorAttr = GmCXt.dom.getMatchAttributes(key);
        var jsSelector = sel[key];

        for (var i = 0; i < selectorAttr.length; i++) {
            var attr = selectorAttr[i];

            for (var j = 0; j < jsSelector.length; j++) {

                var present = false;
                if (jsSelector[j].includes("[" + attr + "=")) {
                    present = true;
                } else if (attr === 'text') {
                    if (jsSelector[j].includes("[placeholder=") || jsSelector[j].includes("[value="))
                        present = true;
                }

                if (present) {
                    matchedAttr[key].push(attr);
                    break;
                }
            }
        }
    }
    return matchedAttr;
};

GmCXt.getSelectorExecutionPriority = function(selectorAttributes) {
    var priority = Object.keys(selectorAttributes);
    priority.push('text');

    function getNumberOfAttrs(s) {
        if (s === 'text')
            return 3; // Prioritize text selector above jsSelectors with attribute length < 3
        else if (s === 'custom')
            return 0;
        else
            return selectorAttributes[s].length;
    }

    priority = priority.sort(function(a, b) {
        l1 = getNumberOfAttrs(a);
        l2 = getNumberOfAttrs(b);

        // Sort in desc order of length
        if (l2 > l1) return 1;
        if (l2 < l1) return -1;

        return 0;
    });

    return priority;
};

GmCXt.containBranchStep = function(tour) {
    if (!tour && !GmCXt.isDefined(tour.steps)) return false;

    var steps = mg$.extend({}, tour.steps);
    for (var ind in steps) {
        var step = steps[ind];
        if (GmCXt.checkForBranchVariationSteps(step)) {
            return true;
        }
    }
    return false;
};

GmCXt.extendArray = function(arr) {
    var p = mg$.extend({}, arr);
    var newArr = [];
    for (var k in p) {
        if (p.hasOwnProperty(k)) {
            newArr.push(p[k]);
        }
    }
    return newArr;
};

GmCXt.getRuleText = function(el) {
    var elValue = '';
    var elTagName = el.tagName.toLowerCase();

    if (elTagName === 'select') {
        elValue = el.options[el.selectedIndex].textContent;
    } else if (elTagName === 'input' && el.value) {
        elValue = el.value;
    } else {
        elValue = el.textContent.trim();
    }
    return elValue;
};

GmCXt.getElementText = function(el) {

    var elValue = GmCXt.getRuleText(el);

    if (!elValue) {

        var value = el.getAttribute('value');
        var placeholder = el.getAttribute('placeholder');
        var name = el.getAttribute('name');

        if ((el.tagName === 'INPUT' || el.tagName === 'BUTTON') &&
            (el.type === 'submit' || el.type === 'button') &&
            value
        ) {
            elValue = value;
        }

        if (!elValue && el.tagName === 'INPUT' && placeholder) {
            elValue = placeholder;
        }
        if (!elValue && el.tagName === 'INPUT' && name) {
            elValue = name;
        }
    }

    return elValue.trim();
};

GmCXt.defaultTrue = function(val) {
    if (typeof val === 'undefined')
        return true;
    else
        return val;
};

GmCXt.getOrgLevelBrandLogoSetting = function() {
    return GmCXt.getStepSettings().hideBrandLogo;
};

GmCXt.convertType = function(value) {
    var v = Number(value);
    return !isNaN(v) ? v :
        value === "undefined" ? undefined :
        value === "null" ? null :
        value === "true" ? true :
        value === "false" ? false :
        value;
};

GmCXt.isMyGuideIframe = function(url) {
    if (url.indexOf('side_panel/src/index.html') !== -1) {
        return true;
    } else
        return false;
};

GmCXt.getCurrentStepIndex = function(t, step_id) {
    var index = -1;
    if (t && step_id) {
        t.steps.forEach(function(step, i) {
            if (step.step_id === step_id) {
                index = i;
            }
        });
    } else {
        GmCXt.playerI.tour.steps.forEach(function(step, i) {
            if (step.step_id == GmCXt.playerI.currentStepId) {
                index = i;
            }
        });
    }
    return index;
};

GmCXt.isOne = function(val) {
    if (val && val.length === 1) return true;
    else return false;
};

GmCXt.isZero = function(val) {
    if (val && val.length === 0) return true;
    else return false;
};

GmCXt.isMoreThanOne = function(val) {
    if (val && val.length > 1) return true;
    else return false;
};

GmCXt.isMany = function(val) {
    if (val && val.length > 0) return true;
    else return false;
};

GmCXt.reverse = function(s) {
    return mg$.extend([], s).reverse();
};

GmCXt.getValidationTypes = function(val) {
    return {
        required: val,
        numeric: val,
        date: val,
        time: val,
        email: val,
        url: val,
        phone: val,
        charCount: val,
        bulletCount: val,
        regex: val
    };
};

GmCXt.getDiableEleDefaultVal = function() {
    return {
        opacity: '0.5',
        color: '#C0C0C0'
    };
};

GmCXt.isFalse = function(val) {
    if (val === 0 || val === 'false' || val === false || val === '0' || val === '' || val === "undefined" || val === undefined)
        return true;
    else
        return false;
};

GmCXt.validateText = function(str) {
    str = str.trim();
    return str != '' && str.length > 0 && str.length < 100;
};

GmCXt.getStepInfoLog = function(step) {
    var title = step.step_title;
    if (step.step_type === 'smartTip') {
        title = step.step_settings.smartTip.guidanceMessage;
    }

    title = mg$('<span />').html(GmCXt.updateOrgAndAddSignature(title)).text().trim();
    if (title.length > 50) {
        title = title.substr(0, 50);
    }
    return "[" + step.step_type.toUpperCase() + "] [" + step.step_id + "] " + title;
};

GmCXt.isAnonymousUser = function() {
    if (GmCXt.user && !GmCXt.isEmpty(GmCXt.organization)) {
        var anonymous = 'anonymous-' + GmCXt.organization.organization_id;
        var userEmail = GmCXt.user.user_email;

        if ((userEmail.indexOf(anonymous) !== -1 || userEmail === 'End+user@edcast.com') && !GmCXt.user.signin_user_email)
            return true;
        else
            return false;
    } else
        return false;
};

GmCXt.getAttributePriority = function(attr, el) {
    switch (attr) {
        case 'id':
            return 1;
        case 'class':
            return 2;
        case 'text':
        case 'name':
        case 'title':
        case 'placeholder':
            return 3;
        default: {
            if (attr === 'value' && el.tagName !== 'INPUT')
                return 3;

            if (attr.includes('Id') || attr.toLowerCase().indexOf('id') === 0 ||
                attr.toLowerCase().includes('_id') || attr.toLowerCase().includes('-id')) {
                return 1;
            }

            if (attr.indexOf('aria') === 0)
                return 4;

            if (typeof el.getAttribute(attr) === 'boolean')
                return 5;

            return 6;
        }
    }
};

GmCXt.skipMyGuideAttributes = function(attr) {
    attr = attr.filter(function(attr) {
        return (attr.indexOf('gm') !== 0);
    });
    return attr;
};

GmCXt.skipSpecialCharValues = function(attrList, he) {

    var textAttr = ['text', 'placeholder', 'value', 'title', 'name'];

    attrList = attrList.filter(function(attr) {
        if (attr === 'text') return true;

        value = he.getAttribute(attr);
        if (!GmCXt.isEmpty(value)) {
            if (textAttr.includes(attr)) return true;

            if (!value.match(/[[\]{}():*+?.,\\^$|#]/g)) return true;
        }

        return false;
    });

    return attrList;
};

GmCXt.skipMyGuideClasses = function(attrList, meta) {
    if (meta && meta.elAttributes && !meta.elAttributes.class) {
        var index = attrList.indexOf('class');
        if (index > -1) {
            attrList.splice(index, 1);
        }
    }
    return attrList;
};

GmCXt.getCustomMatchAttributes = function(he, meta) {
    var attrList = he.getAttributeNames();

    if (!GmCXt.isEmpty(meta.textPropertyValue) && meta.textPropertyName === 'textContent')
        attrList.push('text');

    attrList = GmCXt.skipMyGuideAttributes(attrList);

    attrList = GmCXt.skipSpecialCharValues(attrList, he);

    attrList = GmCXt.skipMyGuideClasses(attrList, meta);

    return attrList;
};

GmCXt.isClickableColumnHeader = function(el) {
    if (!GmCXt.isEmpty(el.customSettings)) {
        for (var key in el.customSettings) {
            if (!GmCXt.isEmpty(el.customSettings[key])) {
                var s = el.customSettings[key];
                break;
            }
        }
        if (s && s.tableCategory && s.isClickable) {
            return true;
        }
    }
    return false;
};

GmCXt.visibleInViewport = function(pos, winHeight, winWidth) {

    var elHeight = Math.abs(pos.height);
    var elWidth = Math.abs(pos.width);

    var elTop = pos.top;
    var elBottom = pos.top + elHeight;
    var elLeft = pos.left;
    var elRight = pos.left + elWidth;

    var bufferH = Math.round(winHeight * 12 / 100);
    var bufferW = Math.round(winWidth * 12 / 100); // 12% buffer

    bufferH = bufferH > elHeight ? 0 : bufferH;
    bufferW = bufferW > elWidth ? 0 : bufferW; // Do not use buffer for elements smaller than buffer

    if (elTop > (winHeight - bufferH) || elBottom < bufferH ||
        elLeft > (winWidth - bufferW) || elRight < bufferW) { // Completely outside window
        return false;
    }

    if (elHeight > winHeight || elWidth > winWidth) { // Do not check partially-in-viewport for el bigger than viewport
        return true;
    }

    return !(elTop < 0 || elBottom > winHeight ||
        elLeft < 0 || elRight > winWidth); //partially in viewport
};

GmCXt.sendToParentWindow = function(m) {
    if (m.data) {
        if (GmCXt.isDefined(GmCXt.isSidePanelApp)) {
            m.data.fromSidePanel = GmCXt.isSidePanelApp;
        }

        if (m.action !== "mgPlayerJSTest_action:update_custom_labels" &&
            m.action !== "mgPlayerJSTest_action:set_lang_content_script" &&
            m.action !== "mgPlayerJSTest_action:update:player_mode" &&
            m.action !== "mgPlayerJSTest_action:save_user_info" &&
            m.action !== "mgPlayerJSTest_action:payload_event_call"
        ) {
            m.data.user = GmCXt.user;
        }

        if (m.action === "mgPlayerJSTest_action:payload_event_call") {
            delete m.data.fromSidePanel;
        }
    }
    GmCXt.msgChannel.port1.postMessage(GmCXt.formatMsg(m));
};

GmCXt.msgToThisWin = function(m) {
    GmCXt.msgChannel.port1.postMessage(GmCXt.formatMsg(m));
};

GmCXt.handleError = function(apiName) {
    console.dir("There is error in API response: " + apiName);
};

GmCXt.getBrandingSetting = function() {
    var setting = false;
    if (GmCXt.appList) {
        var activeApp = GmCXt.appList['app:' + GmCXt.activeAppId];
    }

    if (activeApp && activeApp.settings) {
        setting = activeApp.settings;
    }
    return setting;
};

GmCXt.getBrandLogo = function() {
    return GmCXt.getBrandingSetting().logo;
};

GmCXt.brandLogo = function() {

    var brandLogo = GmCXt.getDefaultIcon();
    var logo = GmCXt.getBrandLogo();

    if (logo && !GmCXt.isDefaultIcon(logo)) {
        brandLogo = logo + GmCXt.getCdnSign();
    }

    return brandLogo;
};

GmCXt.getPopupLogo = function() {
    var brandLogo = GmCXt.getDefaultIcon();

    var logo = GmCXt.getBrandLogo();
    if (logo && !GmCXt.isDefaultIcon(logo)) {
        brandLogo = logo + GmCXt.getCdnSign();
    }

    return "<img class='mgPlayerJSTest_logo-image' src='" + brandLogo + "' alt='" + GmCXt.label.brandLogo + "' />";
};

GmCXt.seggregateRules = function(ruleGroup) {
    var rules = {
        dom: [],
        url: [],
        api: []
    };
    for (var i = 0; i < ruleGroup.length; i++) {
        rule = ruleGroup[i];
        if (rule.type.includes('Select ') || rule.type === "Variables") {
            rule.domRule = true;
            rules.dom.push(rule);
            ruleGroup.checkDom = true;
        } else if (rule.condition === 'Get Validity') {
            rule.apiRule = true;
            rules.api.push(rule);
            ruleGroup.checkApi = true;
        } else {
            rules.url.push(rule);
        }
    }
    return rules;
};

GmCXt.numberOfDomRules = function(rules) {
    var count = 0;
    for (var i = 0; i < rules.length; i++) {
        if (rules[i].type === 'Select Element' || rules[i].type === 'Select Table' || rules[i].type === 'Variables') {
            count++;
        }
    }
    return count;
};

GmCXt.buildGuidePlayStructure = function(tour) {
    var steps = tour.steps;
    var playStructure = [];
    for (var i = 0, j = steps.length; i < j; i++) {
        var item = {
            id: steps[i].step_id
        };
        if (steps[i + 1]) item.tail = steps[i + 1].step_id;
        else item.tail = null;

        playStructure.push(item);
    }

    return playStructure;
};

GmCXt.getStepsForPS = function(steps, type) {
    if (GmCXt.playerI && (GmCXt.playerI.automate || GmCXt.playerI.isAutomation) || GmCXt.isAutomationRunning() || type === "doitforme") {
        return steps;
    } else {
        return GmCXt.filterOutAutomationSteps(steps);
    }
};

GmCXt.getGuidePlayStructure = function(tour, type) {

    var playStructure = tour.tour_settings.play_structure;
    tour.steps = GmCXt.getStepsForPS(tour.steps, type);

    if (!GmCXt.containBranchStep(tour)) {
        return GmCXt.buildGuidePlayStructure(tour);

    } else if (mg$.isArray(playStructure) && playStructure.length) {
        playStructure = GmCXt.repairPlayStructure(playStructure, tour.steps);
        return playStructure;
    }
};

GmCXt.initialiseRuleGroup = function() {
    var rule = GmCXt.getEmptyRule();
    return GmCXt.ruleEngine.getGroupedRules([rule]);
};

GmCXt.reloadFailedImages = function() {
    if (GmCXt.failedImages && GmCXt.failedImages.length) {
        for (var i = 0; i < GmCXt.failedImages.length; i++) {
            var obj = GmCXt.failedImages[i];
            if (obj.length) {
                var src = obj.attr('src');
                if (src) {
                    src = src.split("?");
                    if (src[0] && src.length > 1) {
                        var newSrc = src[0] + GmCXt.getCdnSign();
                        obj.attr('src', newSrc);
                    }
                }
            }
        }

        GmCXt.failedImages = [];
    }

    if (window.self === window.top) {
        var msg = "mgPlayerJSTest_action:reload_images";
        GmCXt.sendMessageToApp(msg);
        GmCXt.sendMessageToStepFrame(msg);
    }

    GmCXt.waitForCdnSignature = false;
};

GmCXt.getRuleTypes = function(urlOnly, skipFreq, skipEl, skipVar, showUserCreationDate, showDate, showTime) {

    var rules = [{
        'name': `${GmCXt.label.url}`,
        'value': 'URL'
    }, {
        'name': `${GmCXt.label.urlHostname}`,
        'value': 'URL Hostname'
    }, {
        'name': `${GmCXt.label.urlPath}`,
        'value': 'URL Path'
    }, {
        'name': `${GmCXt.label.urlParameter}`,
        'value': 'URL Parameters'
    }, {
        'name': `${GmCXt.label.urlHash}`,
        'value': 'URL Hash'
    }, {
        'name': `${GmCXt.label.pageTitle}`,
        'value': 'Page Title'
    }];

    if (!urlOnly) {
        if (!skipFreq) {
            rules.push({
                'name': `${GmCXt.label.displayFrequency}`,
                'value': 'Display Frequency'
            });
        }
        var variable = GmCXt.getVariableData();

        if (!skipVar && variable && variable.length > 0) {
            rules.push({
                'name': `${GmCXt.label.variables}`,
                'value': 'Variables'
            });
        }

        if (!skipEl) {
            rules.push({
                'name': `${GmCXt.label.selectElement}`,
                'value': 'Select Element'
            });
        }
    }

    if (showUserCreationDate) {
        rules.push({
            'name': `${GmCXt.label.userCreationDate}`,
            'value': 'Creation Date'
        });
    }

    if (showDate) {
        rules.push({
            'name': `${GmCXt.label.date}`,
            'value': 'Date'
        });
    }

    if (showTime) {
        rules.push({
            'name': `${GmCXt.label.time}`,
            'value': 'Time'
        });
    }

    return rules;
};

GmCXt.getRuleOperators = function(apiRule) {
    var conditionsArr = [{
        'type': 'URL',
        'condition': [GmCXt.EQUALS, GmCXt.NOT_EQUAL, GmCXt.CONTAINS, GmCXt.NOT_CONTAINS, GmCXt.STARTS_WITH, GmCXt.ENDS_WITH]
    }, {
        'type': 'URL Hostname',
        'condition': [GmCXt.EQUALS, GmCXt.NOT_EQUAL, GmCXt.CONTAINS, GmCXt.NOT_CONTAINS, GmCXt.STARTS_WITH, GmCXt.ENDS_WITH]
    }, {
        'type': 'URL Path',
        'condition': [GmCXt.EQUALS, GmCXt.NOT_EQUAL, GmCXt.CONTAINS, GmCXt.NOT_CONTAINS, GmCXt.STARTS_WITH, GmCXt.ENDS_WITH]
    }, {
        'type': 'URL Parameters',
        'condition': [GmCXt.EQUALS, GmCXt.NOT_EQUAL, GmCXt.CONTAINS, GmCXt.NOT_CONTAINS, GmCXt.STARTS_WITH, GmCXt.ENDS_WITH]
    }, {
        'type': 'URL Hash',
        'condition': [GmCXt.EQUALS, GmCXt.NOT_EQUAL, GmCXt.CONTAINS, GmCXt.NOT_CONTAINS, GmCXt.STARTS_WITH, GmCXt.ENDS_WITH]
    }, {
        'type': 'Page Title',
        'condition': [GmCXt.EQUALS, GmCXt.NOT_EQUAL, GmCXt.CONTAINS, GmCXt.NOT_CONTAINS, GmCXt.STARTS_WITH, GmCXt.ENDS_WITH]
    }, {
        'type': 'Other Element on Page',
        'condition': [GmCXt.EXISTS, GmCXt.NOT_EXISTS]
    }, {
        'type': 'Window Variable',
        'condition': [GmCXt.EQUALS, GmCXt.NOT_EQUAL, GmCXt.CONTAINS, GmCXt.NOT_CONTAINS, GmCXt.STARTS_WITH, GmCXt.ENDS_WITH]
    }, {
        'type': 'Display Frequency',
        'condition': [GmCXt.DAY_OF_WEEK, GmCXt.FIX_TIME, GmCXt.DATE_RANGE]
    }, {
        'type': 'Select Element',
        'condition': [GmCXt.EXISTS, GmCXt.NOT_EXISTS, GmCXt.VISIBLE, GmCXt.NOT_VISIBLE]
    }, {
        'type': 'Variables',
        'condition': [GmCXt.TXT_EQUALS, GmCXt.NOT_TXT, GmCXt.TXT_CONTAINS, GmCXt.NOT_CONTAINS, GmCXt.TXT_MATCHES],
        'variableData': GmCXt.getVariableData()
    }, {
        'type': 'Creation Date',
        'condition': [GmCXt.EQUALS, GmCXt.GREAT_THAN, GmCXt.LESS_THAN],
    }, {
        'type': 'Date',
        'condition': [GmCXt.EQUALS, GmCXt.GREAT_THAN, GmCXt.LESS_THAN],
    }, {
        'type': 'Time',
        'condition': [GmCXt.EQUALS, GmCXt.GREAT_THAN, GmCXt.LESS_THAN],
    }];

    if (apiRule) {
        conditionsArr[10].condition.push(GmCXt.IS_VALID);
    }

    return conditionsArr;
};

GmCXt.getEmptyRule = function() {
    return {
        'type': '',
        'name': '',
        'condition': '',
        'value': '',
        'logical_condition': ''
    };
};

GmCXt.getLXPLang = function() {
    if (GmCXt.isLXP() && !GmCXt.isFalse(GmCXt.mgActiveLang) && GmCXt.mgActiveLang.indexOf('en-') === -1)
        return GmCXt.mgActiveLang;
    else
        return false;
};

GmCXt.getOrgSettings = function() {

    var os = false;

    if (GmCXt.organization && !GmCXt.isEmpty(GmCXt.organization)) {
        os = GmCXt.organization.settings;
    }

    return os;
};

GmCXt.getWidgetSettings = function() {

    var ws = false;

    if (GmCXt.appList && GmCXt.activeAppId) {
        var activeApp = GmCXt.appList['app:' + GmCXt.activeAppId];

        if (activeApp && activeApp.settings) {
            ws = activeApp.settings;
            ws.clientVersion = activeApp.settings.version;
        }
    }
    if (GmCXt.isWestpac()) {
        ws.guide_count_on_widget = false;
    }

    return ws;
};

GmCXt.getStepSettings = function() {

    var appSettings = false;

    if (!GmCXt.isEmpty(GmCXt.appList)) {
        var activeApp = GmCXt.appList['app:' + GmCXt.activeAppId];

        if (activeApp && activeApp.settings) {
            appSettings = activeApp.settings;
        }
    } else if (window.self !== window.top && !GmCXt.isEmpty(GmCXt.activeAppSettings)) {
        appSettings = GmCXt.activeAppSettings;
    }

    if (GmCXt.isDesktop()) {
        appSettings = (!GmCXt.isEmpty(GmCXt.playerI.tour.steps[0].orgSettings)) ? GmCXt.playerI.tour.steps[0].orgSettings : GmCXt.playerI.tour.steps[0].appSettings;
        appSettings = GmCXt.validateDataModel(appSettings, GmCXt.model.organization.settings._obj);
    }

    return appSettings;
};

GmCXt.getAppSetting = function(opt) {
    var appSettings = false;
    if (!GmCXt.isEmpty(GmCXt.appList) && GmCXt.activeAppId) {

        if (!GmCXt.appList['app:' + GmCXt.activeAppId] && GmCXt.user) {
            GmCXt.logoutUser();
        } else {
            appSettings = GmCXt.appList['app:' + GmCXt.activeAppId].settings;
        }

    } else if (window.self !== window.top && !GmCXt.isEmpty(GmCXt.activeAppSettings)) {
        appSettings = GmCXt.activeAppSettings;
    }

    if (appSettings && opt) {
        return appSettings[opt];
    }

    return appSettings;
};

GmCXt.getCdnSign = function() {
    var sign = '';

    if (GmCXt.user) {
        sign = GmCXt.user.cdn_signature;
    }

    return sign;
};

GmCXt.serviceNow = function() {
    if (GmCXt.urlParts.host.indexOf("service-now.com") !== -1)
        return true;
    else
        return false;
};

GmCXt.getDefaultIcon = function() {
    return GmCXt.conf.staticContentPath + GmCXt.conf.appConfig.defaultIcon;
};

GmCXt.getChatDefaultIcon = function() {
    return GmCXt.conf.staticContentPath + "chat_bot_icon.png";
};

GmCXt.getDefaultGuideIcon = function() {
    return GmCXt.conf.staticContentPath + 'default_guide.png';
};

GmCXt.isFalseObj = function(o) {
    if (!o || typeof o !== "object") return true;

    var r = true;
    for (var i in o) {
        if (o[i] === true) {
            r = false;
            break;
        }
    }
    return r;
};

GmCXt.getRectObject = function(rect) {
    var obj = {
        top: rect.top,
        left: rect.left,
        bottom: rect.bottom,
        right: rect.right,
        width: rect.width,
        height: rect.height,
        x: rect.x,
        y: rect.y
    };
    return obj;
};

GmCXt.redirect = function(to) {
    GmCXt.log(1, "ROUTE to " + to);
    GmCXt.timeout(function() {
        location.replace(to);
    }, 0);
};

GmCXt.getPosition = function(cssPos) {
    if (cssPos) {
        return 'mgPlayerJSTest_fixed-position';
    } else {
        return 'mgPlayerJSTest_absolute-position';
    }
};

GmCXt.isInspectToolON = function() {

    if ((GmCXt.selectorTool && GmCXt.selectorTool.status !== 'inactive') ||
        (GmCXt.selectorToolFill && GmCXt.selectorToolFill.status !== 'inactive') ||
        (GmCXt.selectorToolRules && GmCXt.selectorToolRules.status !== 'inactive')
    ) {
        return true;
    }

    return false;
};

GmCXt.getExtUrl = function(localUrl) {
    var url = GmCXt.getBrowserUrl(localUrl);

    return url;
};

GmCXt.getBaseUrl = function(f) {

    if (GmCXt.isExtension()) {
        return GmCXt.getExtUrl(f);
    } else {
        if (GmCXt.isClientJs() && !GmCXt.conf.baseUrl && GmCXt.conf.clientJsBaseUrl) {
            GmCXt.conf.baseUrl = GmCXt.conf.clientJsBaseUrl;
        }
        return GmCXt.conf.baseUrl + f;
    }
};

GmCXt.capitalizeFirstLetter = function(str) {
    str = str || "";
    return str.charAt(0).toUpperCase() + str.slice(1);
};

GmCXt.encode = function(args) {
    var data = '';
    if (args) {
        var argcount = 0;
        for (var key in args) {
            if (args.hasOwnProperty(key)) {
                if (argcount++) data += '&';
                data += encodeURIComponent(key) + '=' + encodeURIComponent(args[key]);
            }
        }
    }
    return data;
};

GmCXt.returnNavigator = function() {
    return navigator.getUserMedia || navigator.webkitGetUserMedia ||
        navigator.mozGetUserMedia || navigator.msGetUserMedia;
};

GmCXt.getDefaultError = function() {
    return {
        code: 403,
        message: [GmCXt.unknownError]
    };
};

GmCXt.getCodeError = function() {
    return {
        code: 405,
        message: [GmCXt.unknownError]
    };
};

GmCXt.getIcons = function(imgPath, target, cb) {

    var p = 'common/icons/' + imgPath;
    p = GmCXt.getBaseUrl(p);

    mg$.get(p, function(data) {
        target.html(data);
        if (cb) cb();
    });
};

GmCXt.externalApiCall = function(url) {
    var params = {
        url: url,
        method: 'GET',
        data: '',
    };
    var promise = GmCXt.xhr(params, true, true);

    return promise;
};

GmCXt.checkFileExist = function(url) {

    var params = {
        url: url,
        method: 'GET',
    };
    var promise = GmCXt.xhr(params, true);

    return promise;
};

/**
 * @function
 * @returns Current webpage url
 */
GmCXt.getUrl = function() {
    var url = GmCXt._location().href;
    return GmCXt.filterUrlScheme(url);
};

GmCXt.checkWorkdayTextfield = function(el, identifier) {
    var customSettings = el.customSettings;
    if (customSettings && customSettings.workday && !customSettings.workday.isTableHeader) {
        var workday = customSettings.workday;
        if (!workday.isWDCustomSelect || identifier !== 'rules-engine-request') {
            return Object.keys(workday).some(function(k) {
                return workday[k];
            });
        }
    }

    return false;
};

GmCXt.hasPageScroll = function() {
    if (mg$(document).height() > mg$(window).height()) {
        return true;
    } else {
        return false;
    }
};

GmCXt.filterMyguideClassValue = function(classVal) {
    var classes = [];
    classes = classVal.split(/\s+/);
    classes = classes.filter(function(className) {
        if (className.indexOf("doitforme-") === -1 && className.indexOf("mg-smarttip") === -1) {
            return true;
        }
    });

    classVal = classes.join(' ');
    return classVal.trim();
};

GmCXt.getAttributeValues = function(el, attributes) {

    if (el.nodeType !== 1) {
        return {};
    }

    var attrList = attributes || el.getAttributeNames();

    var attrObj = {
        tagName: el.tagName
    };

    attrList.forEach(function(attr) {
        var value = el.getAttribute(attr);

        if (!GmCXt.isEmpty(value)) {
            attrObj[attr] = value;
        }
    });

    if (attrObj.class) {
        attrObj.class = GmCXt.filterMyguideClassValue(attrObj.class);
        if (GmCXt.isEmpty(attrObj.class)) {
            delete attrObj.class;
        }
    }

    if (el.textContent && el.textContent.length > 500) {
        delete attrObj.text;
    } else if (!GmCXt.isEmpty(el.textContent)) {
        attrObj.text = el.textContent.trim();
    }

    return attrObj;
};

GmCXt.isOnboarding = function(t) {
    if (t && t.tour_type && t.tour_type.indexOf('onboarding_tour') !== -1) return true;
    else return false;
};

GmCXt.isFeatureTags = function(t) {
    if (t && t.tour_type.indexOf('insights') >= 0) return true;
    else return false;
};

GmCXt.isBotGuide = function(t) {
    if (t && t.tour_type === 'bot') return true;
    else return false;
};

GmCXt.isChatEnable = function() {
    var flag = false;
    if (!GmCXt.isEmpty(GmCXt.appList)) {
        var activeApp = GmCXt.appList['app:' + GmCXt.activeAppId];
        if (activeApp && activeApp.settings.enable_chatbot) {
            flag = true;
        }
    }
    return flag;
};

GmCXt.isGuide = function(t) {

    if (GmCXt.isOnboarding(t))
        return false;
    if (t && (
            t.tour_type.indexOf('walkthrough_tour') !== -1 ||
            t.tour_type.indexOf('videoScreencast') !== -1 ||
            t.tour_type.indexOf('videoCapture') !== -1
        )) {
        return true;
    } else
        return false;
};

GmCXt.updateScrollTop = function() {
    if (GmCXt.stepReq.changeElement && GmCXt.stepReq.changeElement.isChanged) {
        var scrollTo = GmCXt.stepReq.changeElement.scrollTo;
        if (GmCXt.stepReq.step.step_type === GmCXt.STEP_TYPE_SMART_TIP) {
            mg$('.create-smarttip-step-wrapper').scrollTop(scrollTo);
        } else {
            mg$('.step-create-section-wrapper').scrollTop(scrollTo);
        }
        delete GmCXt.stepReq.changeElement;
    }
};

GmCXt.printStorageSize = function() {
    var x, xLen, log = [],
        total = 0;
    for (x in localStorage) {
        if (!localStorage.hasOwnProperty(x)) {
            continue;
        }
        xLen = ((localStorage[x].length + x.length) / 1024);
        log.push(x.substr(0, 30) + " = " + xLen.toFixed(2) + " KB");
        total += xLen;
    }
    if (total > 1024) {
        log.unshift("Total = " + (total / 1024).toFixed(2) + " MB");
    } else {
        log.unshift("Total = " + total.toFixed(2) + " KB");
    }

    console.dir(log.join("\n"));
};

GmCXt.getVarSize = function(data) {
    var total = 0;
    data = JSON.stringify(data);
    total = data.length / 1024;
    return total.toFixed(2);
};

GmCXt.enableContinueInParent = function(tour, order) {

    if (GmCXt.containBranchStep(tour)) {
        return true;
    } else if (tour.steps.length) {
        var steps = tour.steps;
        for (var i = 0; i < order - 1; i++) {
            if (steps[i].step_settings.pageReloadOption === 'new_tab') {
                return true;
            }
        }
    }
    return false;
};

GmCXt.initPlayerModeFeatures = function(showPlayer, isMiniPlayer, isPlayerMode) {
    GmCXt.showPlayer = showPlayer;
    GmCXt.isMiniPlayer = isMiniPlayer;
    GmCXt.playerMode = isPlayerMode;
    if (GmCXt.isPlayer()) {
        GmCXt.FT = GmCXt.getPlayerFeatures();
    } else {
        GmCXt.FT = GmCXt.getCreatorAppFeatures();
    }

    if (GmCXt.isMicroPlayer()) {
        mg$(".mgPlayerJSTest_panel").addClass('mgPlayerJSTest_theme-mplayer');
    } else {
        mg$(".mgPlayerJSTest_panel").removeClass('mgPlayerJSTest_theme-mplayer');
    }
};

GmCXt.matchUrlRegEx = function(regExUrl, url2) {
    var match = false;

    var regexString = '';
    var splitArr = regExUrl.split("[*.]");

    for (var i = 0; i < splitArr.length; i++) {

        if (i === splitArr.length - 1) {
            regexString += splitArr[i];
        } else {
            regexString += splitArr[i] + "([a-zA-Z0-9:!+@#$&()?\\-_`.%+,=\\/]*)";
        }
    }
    var regexPattern = new RegExp("^" + regexString + '$');
    match = regexPattern.test(url2);

    return match;
};

GmCXt.trimAndLowerCaseURL = function(url) {
    var newURL = '';
    url = GmCXt.filterUrlScheme(url);
    if (url) {
        newURL = url.toLowerCase();
        if (newURL.indexOf("www.") === 0) {
            newURL = newURL.slice(4, newURL.length);
        }
    }
    return newURL;
};

function getTailFromBranchStep(branches, e, sId, tour) {
    var bInd = 0;
    var retVal = null;
    var pi = GmCXt.playerI;
    var currentStep = null;
    var getStep = function(stepId, tour) {
        if (stepId) {
            for (var i = 0; i < tour.steps.length; i++) {
                if (parseInt(tour.steps[i].step_id) === parseInt(stepId)) {
                    return tour.steps[i];
                }
            }
        } else {
            return false;
        }
    };

    if (pi) {
        currentStep = getStep(pi.currentStepId, pi.tour);
    } else {
        currentStep = getStep(sId, tour);
    }

    for (bInd = 0; bInd < branches.length; bInd++) {
        if (GmCXt.isStepInlineBranch(currentStep)) {
            if (e) {
                if (bInd === 1) {
                    var b = branches[bInd];
                    if (b.tail) {
                        retVal = b.tail;
                        break;
                    }
                }
            } else {
                var b = branches[bInd];
                if (b.tail) {
                    retVal = b.tail;
                    break;
                }
            }
        } else {
            var b = branches[bInd];
            if (b.tail) {
                retVal = b.tail;
                break;
            }
        }
    }

    return retVal;
}

GmCXt.getTail = function(id, playStructure, e, t) {
    if (!id || !playStructure) return false;

    var tail = null;

    for (var i = 0; i < playStructure.length; i++) {

        if (!GmCXt.isEmpty(playStructure[i]) && parseInt(playStructure[i].id) === parseInt(id)) {

            if (playStructure[i].branch) {
                tail = getTailFromBranchStep(playStructure[i].branch, e, id, t);
            } else {
                tail = playStructure[i].tail;
            }

        }
    }
    let sameTail = GmCXt.numberOfSameTail(tail, playStructure);
    if (sameTail > 1) {
        GmCXt.playerI.mergingFromId = id;
    }
    return tail;
};

GmCXt.getPageDomain = function() {
    var d = (GmCXt._location().host.match(/([^.]+)\.\w{2,3}(?:\.\w{2})?$/) || [])[1];
    if (d)
        return d;
    else
        return GmCXt._location().host;
};

GmCXt.getDomain = function(url) {
    url = url.split("/")[0];
    var d = (url.match(/([^.]+)\.\w{2,3}(?:\.\w{2})?$/) || [])[1];
    if (d)
        return d;
    else
        return url;
};

GmCXt.getUrlParam = function() {
    var param = '';
    var temp = GmCXt.urlParts.href.split("?");
    if (temp[1]) {
        param = '?' + temp[1];
    }

    return param;
};

GmCXt.getURLWithPort = function() {
    var url = GmCXt.urlParts.host;
    if (GmCXt.urlParts.port) {
        url += ":" + GmCXt.urlParts.port;
    }
    return url;
};

GmCXt.isFQDN = function() {
    var os = GmCXt.getOrgSettings();
    var as = (GmCXt.organization && !GmCXt.isEmpty(GmCXt.organization)) ? GmCXt.organization.admin_settings : {};

    if (!GmCXt.isEmpty(os) && os.fqdn) {
        return true;
    } else if (GmCXt.isPlayer() && as.app_switcher === false) {
        return true;
    } else {
        return false;
    }
};

GmCXt.isDomainInActiveApp = function() {
    if (!GmCXt.isFQDN()) {
        return true;
    }

    var domainMatch = false;
    if (!GmCXt.isEmpty(GmCXt.appList) && GmCXt.activeAppId) {
        var activeApp = GmCXt.appList['app:' + GmCXt.activeAppId];
        var domains = activeApp && activeApp.settings.domains;

        if (activeApp && activeApp.settings && activeApp.settings.sandbox) {
            domainMatch = true;
        } else if (domains) {

            var matchedDomain = GmCXt.getCurrentDomainApp(domains, GmCXt.urlParts.fullUrl);

            if (!GmCXt.isEmpty(matchedDomain)) {
                domainMatch = true;
            }
        }
    }
    return domainMatch;
};

GmCXt.getActiveAppSetting = function() {
    if (GmCXt.isEmpty(GmCXt.appList)) return {};

    var app = GmCXt.appList['app:' + GmCXt.activeAppId];
    if (app && app.settings) {
        return app.settings;
    } else {
        return {};
    }
};

GmCXt.findDomainMatch = function(domainList, fullUrl, oldPathLength) {

    var match = {};

    var url = GmCXt.getHostnameFromUrl(fullUrl);
    url = GmCXt.trimAndLowerCaseURL(url);

    for (var i = 0; i < domainList.length; i++) {
        var appUrl = domainList[i].url;
        appUrl = GmCXt.trimAndLowerCaseURL(appUrl);
        fullUrl = GmCXt.trimAndLowerCaseURL(fullUrl);
        if (appUrl.indexOf('/') >= 0 && fullUrl.indexOf(appUrl) >= 0) {
            var pathLength = (appUrl.match(/\//g) || []).length;
            if (oldPathLength && oldPathLength > pathLength) {
                continue;
            } else {
                match = domainList[i];
                match.pathMatch = true;
                match.pathLength = pathLength;
            }
        } else if (url === appUrl && !oldPathLength) {
            match = domainList[i];
        } else if (appUrl.indexOf("[*.]") > -1) {
            var regExMatch = GmCXt.matchUrlRegEx(appUrl, url);

            if (regExMatch) {
                match = domainList[i];
            }
        }
    }

    return match;
};

GmCXt.getCurrentDomainApp = function(domainList, currUrl, pathLength) {

    if (!domainList) {
        return {};
    }

    if (GmCXt.isElectron()) {
        return GmCXt.getCurrentMyGuideApp(domainList);
    } else {
        return GmCXt.findDomainMatch(domainList, currUrl, pathLength);
    }
};

GmCXt.getCurrentMyGuideApp = function(domainList) {

    var match = {};
    var hostApp = GmCXt.elAppName.toLowerCase();

    for (var i = 0; i < domainList.length; i++) {
        if (domainList[i].appName && (hostApp === domainList[i].appName.toLowerCase())) {
            match = domainList[i];
            break;
        }
    }

    return match;
};

GmCXt.isMirrorApp = function() {
    var isMirrorApp = false;
    if (GmCXt.organization && !GmCXt.isEmpty(GmCXt.organization) && GmCXt.organization.has_mirror_apps &&
        parseInt(GmCXt.organization.has_mirror_apps) !== 0) {
        isMirrorApp = true;
    }
    return isMirrorApp;
};

GmCXt.getBaseAppId = function() {
    var baseAppId = GmCXt.activeAppId;
    if (GmCXt.activeAppId && GmCXt.appList && !GmCXt.inPlayer) {
        for (var key in GmCXt.appList) {
            var app = GmCXt.appList[key];
            if (GmCXt.activeAppId === app.application_id &&
                app.base_app_id && parseInt(app.base_app_id) !== 0) {
                baseAppId = app.base_app_id;
                break;
            }
        }
    }
    return baseAppId;
};

GmCXt.checkDomainInApps = function(url) {

    var ob = {
        domainMatch: false,
        appName: false
    };
    var pathLength = false;

    for (var key in GmCXt.appList) {
        var app = GmCXt.appList[key];
        var domains = app.settings.domains;
        var matchedDomain = GmCXt.getCurrentDomainApp(domains, url, pathLength);

        if (!GmCXt.isEmpty(matchedDomain)) {

            ob = {
                domainMatch: true,
                appName: app.title,
                appId: app.application_id,
                env: matchedDomain.env,
                app_env: matchedDomain.app_env,
                baseAppId: app.base_app_id
            };
        }
        if (matchedDomain.pathLength) {
            pathLength = matchedDomain.pathLength;
        }
    }
    var str = "DOMAIN CHECK. [" + url + "] " + (ob.domainMatch ? "EXISTS" : "DOES NOT EXIST");
    GmCXt.log(1, str, ob);

    return ob;
};

GmCXt.getAppEnvByDomain = function() {

    var activeDomain = GmCXt.checkDomainInApps(GmCXt.urlParts.fullUrl);
    var env;

    if (!GmCXt.isDefined(activeDomain.app_env)) {
        env = 'env_3';
    } else if (GmCXt.isDefined(activeDomain.app_env)) {
        env = activeDomain.app_env;
    }

    GmCXt.log(1, "DOMAIN ENVIRONMENT: " + env);

    return env;
};

GmCXt.updateOrgAndAddSignature = function(str) {

    if (str && GmCXt.containsMedia(str)) {

        if (GmCXt.organization && !GmCXt.isEmpty(GmCXt.organization)) {
            var orgId = GmCXt.organization.organization_id;
            str = str.replace(/[-][0-9]*[/]/g, '-' + orgId + '/');
        }

        str = str.replace(/.mp4(.*?)\"/g, '.mp4' + GmCXt.getCdnSign() + '"');
        str = str.replace(/.gif(.*?)\"/g, '.gif' + GmCXt.getCdnSign() + '"');

        str = str.replace(/.png(.*?)\"/g, '.png' + GmCXt.getCdnSign() + '"');
        str = str.replace(/.html(.*?)\"/g, '.html' + GmCXt.getCdnSign() + '"');
        str = str.replace(/.txt(.*?)\"/g, '.txt' + GmCXt.getCdnSign() + '"');
        str = str.replace(/\.pdf(.*?)\"/g, '.pdf' + GmCXt.getCdnSign() + '"');
    }

    return str;
};

GmCXt.containsMedia = function(str) {
    if (str.indexOf('.png') >= 0 ||
        str.indexOf('.gif') >= 0 ||
        str.indexOf('.mp4') >= 0 ||
        str.indexOf('.html') >= 0 ||
        str.indexOf('.txt') >= 0 ||
        str.indexOf('.pdf') >= 0)
        return true;
    else
        return false;
};

GmCXt.isUrlAbsolute = function(url) {
    if (url.indexOf('//') === 0) {
        return true;
    } // URL is protocol-relative (= absolute)
    if (url.indexOf('://') === -1) {
        return false;
    } // URL has no protocol (= relative)
    if (url.indexOf('.') === -1) {
        return false;
    } // URL does not contain a dot, i.e. no TLD (= relative, possibly REST)
    if (url.indexOf('/') === -1) {
        return false;
    } // URL does not contain a single slash (= relative)
    if (url.indexOf(':') > url.indexOf('/')) {
        return false;
    } // The first colon comes after the first slash (= relative)
    if (url.indexOf('://') < url.indexOf('.')) {
        return true;
    } // Protocol is defined before first dot (= absolute)
    return false; // Anything else must be relative
};

GmCXt.getOnPremJsonURL = function() {
    var retUrl = GmCXt.conf.webServiceUrl;
    return retUrl;
};

GmCXt.branchStepExist = function(t) {
    var isBranch = false;

    if (t && t.tour_settings && t.tour_settings.play_structure) {
        t.tour_settings.play_structure.forEach(function(s, key) {
            if (s.branch) {
                isBranch = true;
            }
        });
    }

    return isBranch;
};

GmCXt.branchStepExistInPS = function() {
    var isBranch = false;

    if (GmCXt.playerI.playStructure) {
        GmCXt.playerI.playStructure.forEach(function(s, key) {
            if (s.branch) {
                isBranch = true;
            }
        });
    }

    return isBranch;
};

GmCXt.restartInParent = function(hideLog) {
    if (!hideLog) {
        GmCXt.log(33, "BACK to parent window");
    }
    GmCXt.storage().set({
        'restartInParent': true
    });
};

GmCXt.getSleepTime = function(lbls) {
    var t = 24;

    var nt = GmCXt.getAppSetting('notificationsTime');

    if (nt) {
        t = parseFloat(nt);
        if (t < 1) t = 1;
    }

    var hourString = t > 1 ? lbls.hours : lbls.hour;
    t = t + ' ' + hourString;

    if ((nt && typeof nt !== 'number') && (nt.includes("week") || nt.includes("hour"))) {
        t = nt;
    }

    return t;
};

GmCXt.getIframeAttributes = function(node) {
    var attrs = {};
    mg$.each(node[0].attributes, function(index, attribute) {
        attrs[attribute.name] = attribute.value;
    });

    attrs.isVisible = GmCXt.getElVisibility(node[0], true) === 'visible';

    return attrs;
};

GmCXt.isDomainMatch = function(startURLDomain, stepDomain) {
    return (GmCXt.getDomain(startURLDomain) === GmCXt.getDomain(stepDomain));
};

GmCXt.getDefaultDomain = function(stepURL, tour) {
    var defaultURL = stepURL;
    if (tour.allDomains.length > 0) {
        var allDomains = tour.allDomains;
        for (var i = 0; i < allDomains.length; i++) {
            if (allDomains[i].isDefault) {
                defaultURL = allDomains[i].url;
                break;
            }
        }
    }
    return GmCXt.getHostnameFromUrl(defaultURL);
};

GmCXt.getRedirectUrlForAuto = function(stepURL, tour, startURLDomain) {
    var stepDomain = GmCXt.getHostnameFromUrl(stepURL);
    if (startURLDomain) {
        if (GmCXt.isDomainMatch(startURLDomain, stepDomain)) {
            stepURL = stepURL.replace(stepDomain, startURLDomain);
        }
    }

    // Change this flag to true when multiple domain support is needed.
    var redirectToDefaultDomain = false;
    if (redirectToDefaultDomain) {
        var appDomain = GmCXt.getDefaultDomain(stepURL, tour);
        if (appDomain) {
            stepURL = stepURL.replace(stepDomain, appDomain);
        }
    }
    var completeURL = '';
    if (!stepURL.startsWith('http')) {
        completeURL = location.protocol + '//' + stepURL;
    } else {
        completeURL = stepURL;
    }
    GmCXt.log(33, "REDIRECTING TO URL - ", {
        URL: completeURL
    });
    return completeURL;
};

function showDomainNotConfiguredPopup(redirectUrl) {
    GmCXt.cleanPlayer();
    GmCXt.auto.destroyAutomation();
    var option = {
        description: GmCXt.label.missingDomainAppConfig,
        button1: GmCXt.label.ok,
        closeTour: true
    };
    GmCXt.alertV2(option).show();
}

GmCXt.changeUrl = function(stepURL, tour, startURLDomain) {
    var redirectUrl = GmCXt.getRedirectUrlForAuto(stepURL, tour, startURLDomain);

    // When redirected by tour player
    if (!startURLDomain) {
        window.location = redirectUrl;
        return;
    }

    // When triggered by Automation
    var source = GmCXt.checkDomainInApps(stepURL);
    var destination = GmCXt.checkDomainInApps(redirectUrl);
    var os = GmCXt.getOrgSettings();

    if (os.fqdn && (!source.domainMatch || !destination.domainMatch)) {

        if (GmCXt.isAutomationRunning()) {

            var errorDomains = '';
            if (!source.domainMatch) {
                errorDomains += 'Source (' + GmCXt.getHostnameFromUrl(stepURL) + ') domain not configured. ';
            }
            if (!destination.domainMatch) {
                errorDomains += 'Destination (' + GmCXt.getHostnameFromUrl(redirectUrl) + ') domain not configured.';
            }

            GmCXt.auto.fail(null, {
                errorMessage: errorDomains
            });
        } else {
            showDomainNotConfiguredPopup(redirectUrl);
        }
    } else {
        window.location = redirectUrl;
    }
};

GmCXt.validateTargetFrame = function(stepFrame, currentFrame) {
    if (!GmCXt.isEmpty(stepFrame) && !GmCXt.isEmpty(currentFrame)) {

        if (!GmCXt.isEmpty(currentFrame.isVisible) && !currentFrame.isVisible) {
            return false; // Current frame not visible
        }

        return GmCXt.compareObjectsByPercentMatch(stepFrame, currentFrame);

    }
    return false;
};

GmCXt.cleanPlayerI = function() {
    GmCXt.tourPlayerI = null;
    GmCXt.playerI = null;
};

GmCXt.cleanPlayer = function() {

    GmCXt.log(33, 'Player instance cleared.');

    if (GmCXt.playerI) {
        GmCXt.trackGuide();
        window.removeEventListener("mouseup", GmCXt.registerClickListner, true);
        window.removeEventListener("mousedown", GmCXt.registerClickListner, true);
        window.removeEventListener("keyup", GmCXt.registerClickListner, true);
        window.removeEventListener("keydown", GmCXt.registerClickListner, true);
    }

    GmCXt.cleanPlayerI();

    GmCXt.sendMessageToApp("mgPlayerJSTest_action:clean_tour_player");

    GmCXt.storage().set({
        'mgPlayerJSTest_GM_PLAYER_STORAGE_KEY': null
    });

    GmCXt.storage().remove(['mgPlayerJSTest_GM_PLAYER_STORAGE_KEY']);
};

GmCXt.compareAttributes = function(el, topEl) {

    var topElAttrs = GmCXt.getAttributeValues(topEl);
    var elAttrs = GmCXt.getAttributeValues(el);
    var attrsMatch = GmCXt.compareObjectsByPercentMatch(topElAttrs, elAttrs, 100);

    return attrsMatch;
};

GmCXt.filterParentNodes = function(nodes, text) {

    // filter parent nodes retured by "text contains" query.
    var text = text.trim().toLowerCase();

    nodes = nodes.filter(function(index, node) {
        if (node.innerText && node.innerText.trim().toLowerCase() === text) {
            mg$(node).parents().addClass('mgPlayerJSTest_dummy-class');
            return true;
        }
        return false;
    });

    var childNodes = nodes.filter(function(index, node) {
        return !mg$(node).hasClass('mgPlayerJSTest_dummy-class');
    });

    mg$('.mgPlayerJSTest_dummy-class').removeClass('mgPlayerJSTest_dummy-class');

    if (childNodes.length === 1) {
        GmCXt.l.add('All nodes resulting from the query are hierachichally linked (parent-child)');
        return nodes;
    }

    if (childNodes.length === 2 && GmCXt.compareAttributes(nodes[0], nodes[1])) {
        // LXP header has two identical elements placed on top of each other
        if (GmCXt.getElVisibility(nodes[0]) === 'visible') {
            return nodes.slice(0, 1);
        } else if (GmCXt.getElVisibility(nodes[1]) === 'visible') {
            return nodes.slice(1);
        }
    }

    GmCXt.l.add('Text is present at multiple places on the screen');
    return [];
};

GmCXt.getElectronAppName = function() {
    var app = require('electron').remote.app;
    return app.name || app.getName();
};

GmCXt.getErrObj = function(msg, data, isAnalytics) {
    var code = isAnalytics ? data.code : parseInt(data.code);

    if (msg[0] && msg[0].message) {
        msg = msg[0].message;
    }

    if (typeof data.info === "string") {
        msg += " : " + data.info;
    }

    var eObj = {
        build: GmCXt.conf.appName,
        version: GmCXt.conf.version,
        type: 'CODE ERROR',
        code: code,
        message: msg,
        browser: GmCXt.browserApp
    };

    if (!GmCXt.isBackgroundPage) {
        eObj.current_url = GmCXt.urlParts.fullUrl;
    } else {
        eObj.current_url = '';
    }

    if (data.info.apiUrl) {
        eObj.type = "Insights";
        eObj.message += " , api: " + data.info.apiUrl;

        if (data.apiData)
            eObj.apiData = JSON.stringify(data.apiData);
    }

    if (GmCXt.user && GmCXt.organization && !GmCXt.isEmpty(GmCXt.organization)) {
        eObj.organization_id = GmCXt.organization.organization_id;
        eObj.organization_name = GmCXt.organization.name;
        eObj.application_id = GmCXt.activeAppId;
        eObj.user_id = GmCXt.user.user_id;
        eObj.user_email = GmCXt.user.user_email;
    }
    return eObj;
};

// Elements might have classes like 'mgPlayerJSTest_select-outline' or 'mgPlayerJSTest_dummy-class'
GmCXt.checkMyGuideClass = function(className) {

    var mgClass = false;
    if (className && typeof className === 'string') {
        var arrClass = className.split(/\s+/).filter(Boolean);
        mgClass = arrClass.filter(function(cls) {
            return cls.indexOf('mgPlayerJSTest_') === 0;
        })[0];
    }
    return mgClass;
};

GmCXt.hasMyGuideEl = function(nodes) {
    if (nodes) {
        for (var i = 0; i < nodes.length; i++) {
            if (GmCXt.checkMyGuideClass(nodes[i].className)) {
                return true;
            }
        }
    }
    return false;
};

GmCXt.isSelect = function(el) {
    if (!GmCXt.isEmpty(el.customSettings)) {
        var s = el.customSettings.salesforce;
        var wd = el.customSettings.workday;

        if (!GmCXt.isEmpty(s) && (s.customSelect || s.customInput || s.globalSearch)) {
            return true;
        }
        if (!GmCXt.isEmpty(wd) && (wd.isWDCustomSelect || wd.isSelectBox)) {
            return true;
        }
    }
    if (!GmCXt.isEmpty(el.meta.elAttributes)) {
        if (el.meta.elAttributes.tagName === 'SELECT') {
            return true;
        }
    }
    if (!GmCXt.isEmpty(el.targetInfo) && el.targetInfo.tagName === 'SELECT') {
        return true;
    }
    return false;
};

GmCXt.isInput = function(el) {

    var inputType = ['text', 'password', 'email', 'search'];

    if (!GmCXt.isEmpty(el.customSettings)) {
        var s = el.customSettings.salesforce;
        var wd = el.customSettings.workday;
        if (!GmCXt.isEmpty(s) && s.isInput) {
            return true;
        }
        if (!GmCXt.isEmpty(wd) && wd.isInput && !wd.isCheckbox) {
            return true;
        }
    }
    if (!GmCXt.isEmpty(el.meta.elAttributes)) {
        if (el.meta.elAttributes.tagName === 'INPUT' && inputType.includes(el.meta.elAttributes.type)) {
            return true;
        }
    }
    if (!GmCXt.isEmpty(el.targetInfo) && el.targetInfo.tagName === 'INPUT' && inputType.includes(el.targetInfo.type)) {
        return true;
    }

    return false;
};

GmCXt.sortToursByModifcationDate = function(tours) {
    return tours.sort(function(a, b) {
        return parseInt(b.modification_date) - parseInt(a.modification_date);
    });
};

GmCXt.getStepDelayOptions = function() {
    return [{
        'value': 1
    }, {
        'value': 2
    }, {
        'value': 3
    }, {
        'value': 4
    }, {
        'value': 5
    }, {
        'value': 6
    }, {
        'value': 7
    }, {
        'value': 8
    }, {
        'value': 9
    }, {
        'value': 10
    }, {
        'value': 15
    }, {
        'value': 20
    }, {
        'value': 25
    }, {
        'value': 30
    }];
};

GmCXt.getRuleDelayOptions = function() {
    return [{
        'key': 1,
        'value': 1000
    }, {
        'key': 2,
        'value': 2000
    }, {
        'key': 3,
        'value': 3000
    }, {
        'key': 4,
        'value': 4000
    }, {
        'key': 5,
        'value': 5000
    }, {
        'key': 6,
        'value': 6000
    }, {
        'key': 7,
        'value': 7000
    }, {
        'key': 8,
        'value': 8000
    }, {
        'key': 9,
        'value': 9000
    }, {
        'key': 10,
        'value': 10000
    }];
};

GmCXt.checkStepLimit = function(stepCount) {
    var adminStepLimit = GmCXt.organization.admin_settings.step_limit;
    return stepCount >= adminStepLimit ? true : false;
};

GmCXt.getOrgColor = function() {
    var color_map = [];
    var getOrg = GmCXt.getOrgSettings();
    if (!GmCXt.isEmpty(getOrg.stepDefaultColorArray)) {
        var colorArr = mg$.extend([], getOrg.stepDefaultColorArray);
        for (var key in colorArr.reverse()) {
            if (getOrg.stepDefaultColorArray.hasOwnProperty(key)) {
                color_map.push(colorArr[key], '');
            }
        }
    }
    return color_map;
};

GmCXt.getFontFile = function() {
    var i = 'common/lib/fonts/';
    if (GmCXt.isExtension()) {
        i = GmCXt.getBrowserUrl(i);
    } else {
        i = GmCXt.conf.baseUrl + i;
    }

    return i;
};

GmCXt.getCustomFontStyle = function() {
    var styleElem = document.getElementById('mgPlayerJSTest_nunito-font-style');
    if (!GmCXt.isEmpty(styleElem)) styleElem.remove();

    var newStyle = document.createElement('style');
    newStyle.id = "mgPlayerJSTest_nunito-font-style";
    var FontName = "Nunito";
    var FontUrl = GmCXt.getFontFile() + "Nunito-Regular.woff";
    newStyle.appendChild(document.createTextNode("@font-face { font-family: '" + FontName + "'; src: url('" + FontUrl + "') format('woff');}"));

    var FontName = "Calibri";
    var FontUrl = GmCXt.getFontFile() + "Calibri-Regular.woff";
    newStyle.appendChild(document.createTextNode("@font-face { font-family: '" + FontName + "'; src: url('" + FontUrl + "') format('woff');}"));

    var FontName = "Frutiger";
    var FontUrl = GmCXt.getFontFile() + "Frutiger.woff";
    newStyle.appendChild(document.createTextNode("@font-face { font-family: '" + FontName + "'; src: url('" + FontUrl + "') format('woff');}"));

    return newStyle;
};

GmCXt.isUrlValid = function(userInput) {
    if (GmCXt.isEmpty(userInput)) return true;
    var res = userInput.match(/(http(s)?:\/\/.)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/g);
    if (res == null)
        return false;
    else
        return true;
};

GmCXt.getURLMediaType = function(url) {
    if (!GmCXt.isUrlValid(url)) return false;

    if (url.search(/^http[s]?\:\/\//) === -1) {
        return 'https://' + url;
    }

    var ext = url.split('/').pop().match(/^[\w\s-,.]+\.([a-zA-Z0-9]{3,4})/);
    if (ext) {
        ext = ext[1];
    }

    url = new URL(url);
    var mediaType = "";
    if (ext && GmCXt.videoFileExtns.indexOf("." + ext) !== -1) {
        mediaType = "video";
    } else if (ext === "pdf") {
        mediaType = "pdf";
    }

    return mediaType;
};

function tinyMceEditLink(editor) {
    function onUrlTextChange(urlElem, modelElems) {
        if (urlElem.value && GmCXt.getURLMediaType(urlElem.value)) {
            modelElems[3].style.display = "none";
        } else {
            modelElems[3].style.display = "block";
        }
    }

    editor.windowManager.oldOpen = editor.windowManager.open;
    editor.windowManager.open = function(t, r) {
        var modal = this.oldOpen.apply(this, [t, r]);

        var modelElems = mg$(".tox-form__group");
        var modelBtnElems = mg$(".tox-button");
        var urlElem = modelElems[0].getElementsByTagName("input")[0];

        if (t.title === "Insert/Edit Image") {

            modelBtnElems[modelBtnElems.length - 1].onclick = function(event) {
                if (urlElem.value && GmCXt.isUrlValid(urlElem.value)) {
                    var image = new Image();
                    image.onerror = function(e) {
                        GmCXt.toastMsg("Invalid Image URL").show();

                        var i = 0;
                        var elImg = editor.selection.getSel().baseNode.children;
                        for (i; i < elImg.length; i++) {
                            if ((elImg[i].tagName === 'IMG') && (elImg[i].src === urlElem.value)) {
                                editor.selection.getSel().baseNode.children[i].remove();
                            }
                        }

                        editor.execCommand('mceInsertContent', false, '');
                    };
                    image.src = urlElem.value;
                }
            };
        }

        if (t.title === "Insert/Edit Link") {

            urlElem.onkeyup = function() {
                onUrlTextChange(urlElem, modelElems);
            };

            urlElem.onchange = function() {
                onUrlTextChange(urlElem, modelElems);
            };

            if (urlElem.value) {
                onUrlTextChange(urlElem, modelElems);
            }
        }
        return modal; // Template plugin is dependent on this return value
    };
}

GmCXt.getTitleEditor = function(identifier, flag) {

    var toolbar1 = "undo redo | code | bold italic underline | alignleft aligncenter alignright alignjustify";
    if (flag) toolbar1 = toolbar1.replace('bold', '');

    var orgColor = GmCXt.getOrgColor();

    var newStyle = GmCXt.getCustomFontStyle();

    var returnObj = {
        selector: identifier,
        height: 300,
        min_height: 200,
        max_chars: 250, // max. allowed chars
        skin_url: "../../common/lib/tinymce/skins/ui/oxide",
        content_css: "../../common/lib/tinymce/skins/ui/oxide/content.min.css",
        content_style: newStyle.innerHTML,
        plugins: [
            "autolink link charmap anchor",
            "visualblocks code",
            "paste textpattern fullscreen"
        ],
        target_list: GmCXt.tinymceTargetList,
        toolbar2: "link| forecolor backcolor | outdent indent | bullist numlist",
        font_formats: "Arial=arial, sans-serif;Calibri=calibri, sans-serif; Comic Sans MS='comic sans ms',sans-serif; Courier New='courier new', monospace; Cursive=cursive, sans-serif; Fantasy=fantasy, sans-serif; Frutiger=Frutiger, sans-serif; Garamond=garamond, serif; Georgia=georgia, serif; Helvetica='Helvetica Neue', Helvetica, Arial, sans-serif; Monospace=monospace, sans-serif; Narrow='arial narrow', sans-serif; Nunito='Nunito', sans-serif; Proxima Nova=proxima_nova_rgregular; Sans-Serif=Arial, Helvetica, sans-serif; Serif='times new roman', serif; Tahoma=tahoma, sans-serif; Trebuchet MS='trebuchet ms', sans-serif; Verdana=verdana, sans-serif; Wide='arial black', sans-serif;",
        fontsize_formats: "xx-small x-small small medium large x-large xx-large",
        init_instance_callback: function(editor) {
            editor.name = identifier;

            var pathElem = mg$('#' + editor.id).next().find('.tox-statusbar__path');

            mg$('<div class="mgPlayerJSTest_char_count mgPlayerJSTest_display-flex mgPlayerJSTest_align-items-center" style="text-align:right"></div>').insertAfter(pathElem);

            var toolElem2 = mg$('#' + editor.id).next().find('.tox-toolbar');
            toolElem2[0].childNodes[1].firstElementChild.setAttribute('id', 'mgPlayerJSTest_title-tool-text-color');
            toolElem2[0].childNodes[1].lastElementChild.setAttribute('id', 'mgPlayerJSTest_title-tool-bg-color');

            GmCXt.tinymce_updateCharCounter(this, GmCXt.tinymce_getContentLength());

        },
        setup: GmCXt.tinyMcePasteSetup,
        paste_preprocess: GmCXt.tinyMcePasteProcess,
        menubar: 'format'
    };
    if (orgColor.length > 1) {
        returnObj.color_map = orgColor;
    }
    returnObj.toolbar1 = toolbar1;
    return returnObj;
};

GmCXt.getDescEditor = function(identifier, maxChar) {
    var char = 800;
    if (maxChar) char = maxChar;
    var orgColor = GmCXt.getOrgColor();

    var newStyle = GmCXt.getCustomFontStyle();

    var returnObj = {
        selector: identifier,
        plugins: [
            "advlist autolink lists link image charmap hr anchor",
            "searchreplace visualblocks visualchars code",
            "insertdatetime media nonbreaking save table directionality",
            "paste textpattern fullscreen"
        ],
        content_style: newStyle.innerHTML,
        target_list: GmCXt.tinymceTargetList,
        toolbar1: "insertfile undo redo | code | bold italic underline | alignleft aligncenter alignright alignjustify",
        toolbar2: "link image | forecolor backcolor | outdent indent | bullist numlist",
        font_formats: "Arial=arial, sans-serif;Calibri=calibri, sans-serif; Comic Sans MS='comic sans ms',sans-serif; Courier New='courier new', monospace; Cursive=cursive, sans-serif; Fantasy=fantasy, sans-serif; Frutiger=Frutiger, sans-serif; Garamond=garamond, serif; Georgia=georgia, serif; Helvetica='Helvetica Neue', Helvetica, Arial, sans-serif; Monospace=monospace, sans-serif; Narrow='arial narrow', sans-serif; Nunito='Nunito', sans-serif; Proxima Nova=proxima_nova_rgregular; Sans-Serif=Arial, Helvetica, sans-serif; Serif='times new roman', serif; Tahoma=tahoma, sans-serif; Trebuchet MS='trebuchet ms', sans-serif; Verdana=verdana, sans-serif; Wide='arial black', sans-serif;",
        fontsize_formats: "xx-small x-small small medium large x-large xx-large",
        image_advtab: false,
        media_live_embeds: true,
        media_poster: false,
        min_height: 200,
        height: 300,
        max_chars: char,
        skin_url: '../../common/lib/tinymce/skins/ui/oxide',
        content_css: "../../common/lib/tinymce/skins/ui/oxide/content.min.css",
        image_class_list: [{
            title: 'Custom Class',
            value: 'mgPlayerJSTest_custom-image'
        }],
        file_picker_types: "image media",
        file_picker_callback: function(callback, value, meta) {
            if (meta.filetype == 'image') {
                mg$('#mgPlayerJSTest_upload-image').val('');
                mg$('#mgPlayerJSTest_upload-image').trigger('click');
                mg$('#mgPlayerJSTest_upload-image').off('change');
                mg$('#mgPlayerJSTest_upload-image').on('change', function() {
                    var file = this.files[0];

                    if (file) {
                        var fileName = file.name;
                        var ext = fileName.split('.').pop().toLowerCase();

                        if (GmCXt.validImageFiles.indexOf(ext) === -1) {
                            GmCXt.showAlertToastMsg(GmCXt.label.invalidImageFileFormat);
                            return;
                        }
                    }

                    if (file && file.size > 5240000) {
                        GmCXt.showAlertToastMsg(GmCXt.label.beaconMaxSizeMessage);
                        return;
                    } else if (file && file.size < 5240000) {
                        var reader = new FileReader();
                        reader.onload = function(e) {
                            GmCXt.vidImageLoader();
                            GmCXt.saveImage(e.target.result).then(function(result) {
                                GmCXt.removeVidImageLoader();
                                if (result) {
                                    callback(result.image_path + GmCXt.user.cdn_signature, {
                                        alt: ''
                                    });
                                }
                                mg$(".mgPlayerJSTest_spinner-wrapper").remove();
                            }).catch(function(error) {
                                throw new Error(error);
                            });
                        };
                        reader.readAsDataURL(file);
                    }
                });
            } else if (meta.filetype == 'media') {
                mg$('#mgPlayerJSTest_upload-video').val('');
                mg$('#mgPlayerJSTest_upload-video').trigger('click');
                mg$('#mgPlayerJSTest_upload-video').off('change');
                mg$('#mgPlayerJSTest_upload-video').on('change', function() {
                    var file = this.files[0];
                    if (file) {
                        var reader = new FileReader();
                        reader.onload = function(e) {
                            GmCXt.readFile(file, callback);
                        };
                        reader.readAsDataURL(file);
                    }
                });
            }
        },
        init_instance_callback: function(editor) {
            editor.name = identifier;

            var pathElem = mg$('#' + editor.id).next().find('.tox-statusbar__path');

            mg$('<div class="mgPlayerJSTest_char_count mgPlayerJSTest_display-flex mgPlayerJSTest_align-items-center" style="text-align:right"></div>').insertAfter(pathElem);

            var toolElem = mg$('#' + editor.id).next().find('.tox-toolbar');
            toolElem[1].childNodes[1].firstElementChild.setAttribute('id', 'mgPlayerJSTest_desc-tool-text-color');
            toolElem[1].childNodes[1].lastElementChild.setAttribute('id', 'mgPlayerJSTest_desc-tool-bg-color');

            GmCXt.tinymce_updateCharCounter(this, GmCXt.tinymce_getContentLength());

            editor.on('ExecCommand', function(e) {
                console.log('The ' + e.command + ' command was fired.');
                if (e.command === "InsertOrderedList" || e.command === "InsertUnorderedList" || e.command === "mceApplyTextcolor") {
                    var node = tinymce.get(tinymce.activeEditor.id).contentDocument.body;
                    if (node) {
                        mg$(node).find("li").each(function() {
                            var children = mg$(this).find("span:first");
                            if (children.length > 0) {
                                mg$(this).removeAttr('data-mce-style');
                                if (children.css("color") != "undefined") {
                                    mg$(this).css("color", children.css("color"));
                                }
                            }
                        });
                    }
                }
            });
        },

        setup: GmCXt.tinyMcePasteSetup,
        paste_preprocess: GmCXt.tinyMcePasteProcess
    };

    if (orgColor.length > 1) {
        returnObj.color_map = orgColor;
    }
    return returnObj;
};

GmCXt.tinymce_getContentLength = function() {
    return tinymce.get(tinymce.activeEditor.id).contentDocument.body.textContent.trim().length;
};

GmCXt.tinymce_updateCharCounter = function(el, len) {
    mg$('#' + el.id).next().find('.mgPlayerJSTest_char_count').html('<div id="mgPlayerJSTest_text_count-' + el.id + '">' + len + '</div>/' + el.settings.max_chars);

    if (len > el.settings.max_chars) {
        mg$('#mgPlayerJSTest_text_count-' + el.id).css('color', 'red');
    } else {
        mg$('#mgPlayerJSTest_text_count-' + el.id).css('color', '');
    }
};

GmCXt.attachDragEvents = function(elmnt, dragEl) {
    var pos1 = 0,
        pos2 = 0,
        pos3 = 0,
        pos4 = 0;
    dragEl.onmousedown = dragMouseDown;
    dragEl.onmouseup = dragMouseUp;

    if (window.matchMedia("(max-width: 480px)").matches) {
        dragEl.ontouchstart = dragMouseDown;
        dragEl.ontouchend = dragMouseUp;
    }

    function resetDragEvents() {
        document.onmouseup = null;
        document.onmousemove = null;
        document.onmouseout = null;

        if (window.matchMedia("(max-width: 480px)").matches) {
            document.ontouchstart = null;
            document.ontouchmove = null;
            document.ontouchend = null;
        }
    }

    function dragMouseUp(e) {
        resetDragEvents();

        if (GmCXt.isMicroPlayer()) {
            mg$("#mgPlayerJSTest_micro_player_drag .mgPlayerJSTest_title-tooltip-wrapper").removeAttr("style");
        }
    }

    function dragOutEvent(e) {
        GmCXt.timeout(function() {
            mg$('.mgPlayerJSTest_slideshow_drag_over').hide();
        }, GmCXt.t.drag);

        if (dragEl.id === 'mgPlayerJSTest_mPlayer-drag') {
            resetDragEvents();
        }
    }

    function dragMouseDown(e) {
        e.preventDefault();
        e = e || window.event;
        // get the mouse cursor position at startup:
        if (window.matchMedia("(max-width: 480px)").matches) {
            e.clientX = e.targetTouches[0].clientX;
            e.clientY = e.targetTouches[0].clientY;
        }

        pos3 = e.clientX;
        pos4 = e.clientY;
        document.onmouseup = closeDragElement;
        document.onmouseout = dragOutEvent;
        // call a function whenever the cursor moves:
        document.onmousemove = elementDrag;

        if (window.matchMedia("(max-width: 480px)").matches) {
            document.ontouchend = closeDragElement;
            document.ontouchcancel = dragOutEvent;
            document.ontouchmove = elementDrag;
        }

        if (GmCXt.isMicroPlayer()) {
            mg$("#mgPlayerJSTest_micro_player_drag .mgPlayerJSTest_title-tooltip-wrapper").css("display", "none");
        }
    }

    function elementDrag(e) {
        mg$('.mgPlayerJSTest_slideshow_drag_over').show();
        e = e || window.event;
        // calculate the new cursor position:
        var wWdth = mg$(window).width();
        var wHgth = mg$(window).height();
        var offset = 50;

        if (window.matchMedia("(max-width: 480px)").matches) {
            e.clientX = e.targetTouches[0].clientX;
            e.clientY = e.targetTouches[0].clientY;
        }

        if (e.clientX > offset && e.clientY > offset && e.clientX < (wWdth - offset) && e.clientY < (wHgth - offset)) {
            pos1 = pos3 - e.clientX;
            pos2 = pos4 - e.clientY;
            pos3 = e.clientX;
            pos4 = e.clientY;
            // set the element's new position:
            elmnt.style.top = (elmnt.offsetTop - pos2) + "px";
            elmnt.style.left = (elmnt.offsetLeft - pos1) + "px";

            if (GmCXt.isMicroPlayer()) {
                elmnt.style.right = "initial";
                elmnt.style.transition = "initial";
            }

            if (!GmCXt.isMicroPlayer()) {
                mg$(elmnt)
                    .removeClass('top-left')
                    .removeClass('top-middle')
                    .removeClass('top-right')
                    .removeClass('right-top')
                    .removeClass('right-middle')
                    .removeClass('right-bottom')
                    .removeClass('bottom-left')
                    .removeClass('bottom-middle')
                    .removeClass('bottom-right')
                    .removeClass('left-top')
                    .removeClass('left-middle')
                    .removeClass('left-bottom');
            }
        }
    }

    function closeDragElement() {
        /* stop moving when mouse button is released:*/
        resetDragEvents();

        mg$('.mgPlayerJSTest_slideshow_drag_over').hide();
    }
};

GmCXt.removeInvalidRules = function(rules) {

    var conditionArray = [GmCXt.STARTS_WITH, GmCXt.ENDS_WITH,
        GmCXt.EQUALS, GmCXt.NOT_EQUAL,
        GmCXt.CONTAINS, GmCXt.NOT_CONTAINS,
        GmCXt.TXT_EQUALS, GmCXt.NOT_TXT,
        GmCXt.TXT_CONTAINS, GmCXt.TXT_MATCHES,
        GmCXt.GREAT_THAN, GmCXt.LESS_THAN,
        GmCXt.CLASSES, GmCXt.NOT_CLASSES,
        GmCXt.ATTRIBUTES, GmCXt.NOT_ATTRIBUTES
    ];

    for (var i = rules.length - 1; i >= 0; i--) {
        if (rules[i].type === 'Select Table') {
            delete rules[i].filteredColumns;
            rules[i].columnConditions = rules[i].columnConditions.filter(function(col) {
                if (col.key && col.value) {
                    return col;
                }
            });

            if (rules[i].columnConditions.length === 0) {
                GmCXt.removeFromRuleArray(rules, i);
            }

        } else if (rules[i].type === 'Select Element') {

            if (GmCXt.isEmpty(rules[i].element) ||
                (GmCXt.isEmpty(rules[i].value) && conditionArray.includes(rules[i].condition))) {
                GmCXt.removeFromRuleArray(rules, i);
            }
        } else if (GmCXt.isEmpty(rules[i].value) || GmCXt.isEmpty(rules[i].type) || GmCXt.isEmpty(rules[i].condition)) {
            GmCXt.removeFromRuleArray(rules, i);
        } else if (rules[i].type === 'Creation Date' && rules[i].userCreationDate) {
            delete rules[i].userCreationDate;
        } else if (rules[i].type === 'Date' && rules[i].date) {
            delete rules[i].date;
        } else if (rules[i].type === 'Time' && rules[i].time) {
            delete rules[i].time;
        } else if (i === 0) {
            rules[i].logical_condition = '';
        }
    }

    return rules;
};

GmCXt.removeFromRuleArray = function(rules, i) {
    if (rules[i].logical_condition === '' || rules[i].logical_condition === '||') {

        if (rules[i + 1]) {
            if (i === 0)
                rules[i + 1].logical_condition = '';
            else if (rules[i + 1].logical_condition === '&&')
                rules[i + 1].logical_condition = rules[i].logical_condition;
        }

    }
    rules.splice(i, 1);
};

GmCXt.replaceCdnSignFromString = function(str) {

    if (!str) return str;

    var c = GmCXt.user.cdn_signature;

    if (!c) return str;

    var cdnFirstFive = c.slice(0, 5);
    var cdnStart = str.indexOf(cdnFirstFive);

    if (cdnStart > 0) {
        var cdnLastFive = c.slice(c.length - 5, c.length);
        var cdnEnd = str.indexOf(cdnLastFive) + 5;
        var modCdn = str.slice(cdnStart, cdnEnd);

        str = str.replace(modCdn, "");

        str = GmCXt.replaceCdnSignFromString(str);
    }

    return str;
};

GmCXt.replaceCdnSignFromMsgStep = function(s) {

    var domElems = s.step_settings.domElems;

    if (domElems) {
        for (var i = 0; i < domElems.length; i++) {

            if (domElems[i].title) {
                domElems[i].title = GmCXt.replaceCdnSignFromString(domElems[i].title);
            }
        }
    }
    return s;
};

GmCXt.replaceCdnSignFromImgStep = function(s) {

    var highArea = s.highlightedArea;
    if (highArea) {
        for (var i = 0; i < highArea.length; i++) {
            if (highArea[i].title)
                highArea[i].title = GmCXt.replaceCdnSignFromString(highArea[i].title);

        }
    }
    return s;
};

GmCXt.replaceCdnSignFromStep = function(s) {

    s.step_title = GmCXt.replaceCdnSignFromString(s.step_title);
    s.step_description = GmCXt.replaceCdnSignFromString(s.step_description);

    switch (s.step_type) {
        case GmCXt.STEP_TYPE_MESSAGE:
            s = GmCXt.replaceCdnSignFromMsgStep(s);
            break;
        case GmCXt.STEP_TYPE_IMAGE:
            s = GmCXt.replaceCdnSignFromImgStep(s);
            break;
    }
    return s;
};

GmCXt.isDefaultIcon = function(str) {
    if (str &&
        (str.indexOf('edcast.png') >= 0 ||
            str.indexOf('guidemeg.png') >= 0 ||
            str.indexOf('widget_icon.png') >= 0 ||
            str.indexOf('chat_bot_icon.png') >= 0 ||
            str.indexOf('default') >= 0 ||
            str.indexOf('myguide.png') >= 0 ||
            str.indexOf(GmCXt.conf.appConfig.defaultIcon) >= 0)) {
        return true;
    } else {
        return false;
    }
};

GmCXt.syncPlayerInst = function(m) {
    if (m === "mgPlayerJSTest_action:started;task:select_existing_dom_element" ||
        m === "mgPlayerJSTest_action:started;task:select_existing_dom_element:target_frame_only" ||
        m === "mgPlayerJSTest_action:started;task:select_dom_element_tooltips" ||
        m === "mgPlayerJSTest_action:task:init_new_iframe" ||
        m === "mgPlayerJSTest_action:update_player_instance" ||
        m === "mgPlayerJSTest_action:play_slideshow" ||
        m === "mgPlayerJSTest_action:play_video_step" ||
        m === "mgPlayerJSTest_action:play_image_step" ||
        m === "mgPlayerJSTest_action:click; on:mgPlayerJSTest_slideshow-close" ||
        m === "mgPlayerJSTest_action:mark_auto_tour_donotshow" ||
        m === "mgPlayerJSTest_action:update_player_instance_app" ||
        m === "mgPlayerJSTest_action:close_guide") {
        return true;
    } else {
        return false;
    }
};

GmCXt.syncCreateInst = function(m) {
    if (m === "mgPlayerJSTest_action:started;task:highlight_element" ||
        m === "mgPlayerJSTest_action:started;task:edit_step_select_existing_dom_element" ||
        m === "mgPlayerJSTest_action:completed;task:edit_step_select_existing_dom_element" ||
        m === "mgPlayerJSTest_action:started;task:edit_step_select_existing_dom_element:target_frame_only" ||
        m === "mgPlayerJSTest_action:started;task:select_new_dom_element" ||
        m === "mgPlayerJSTest_action:started;task:select_new_dom_element_for_edit_step" ||
        m === "mgPlayerJSTest_action:narrow_element_selection" ||
        m === "mgPlayerJSTest_action:started;task:narrow_element_selection" ||
        m === "mgPlayerJSTest_action:expand_element_selection" ||
        m === "mgPlayerJSTest_action:started;task:expand_element_selection" ||
        m === "mgPlayerJSTest_action:started;task:select_element_for_message_step" ||
        m === "mgPlayerJSTest_action:started;task:select_element_for_branching_step" ||
        m === "mgPlayerJSTest_action:started;task:select_new_element_for_dom_select_rule" ||
        m === "mgPlayerJSTest_action:started;task:select_new_table_for_dom_select_rule" ||
        m === "mgPlayerJSTest_action:started;task:delete_element_for_message_step" ||
        m === "mgPlayerJSTest_action:started;task:select_dom_element_for_beacon" ||
        m === "mgPlayerJSTest_action:started;task:blackout_dom_element" ||
        m === "mgPlayerJSTest_action:started;task:edit_message_step_select_existing_dom_element" ||
        m === "mgPlayerJSTest_action:started;task:step_blackout_area_existing_dom_element" ||
        m === "mgPlayerJSTest_action:started;task:edit_beacon_select_existing_dom_element" ||
        m === "mgPlayerJSTest_action:started;task:edit_beacon_select_existing_dom_element:target_frame_only" ||
        m === "mgPlayerJSTest_action:started:select_new_dom_element_for_smart_tip" ||
        m === "mgPlayerJSTest_action:find_element_to_get_precision" ||
        m === "mgPlayerJSTest_action:find_element_to_get_precision_for_rules" ||
        m === "mgPlayerJSTest_action:started;task:select_dom_element_for_matching_in_rules" ||
        m === "mgPlayerJSTest_action:do;task:enable_jQuery_selector" ||
        m === "mgPlayerJSTest_action:save_step" ||
        m === "mgPlayerJSTest_action:click;on:save-beacon-settings" ||
        m === "mgPlayerJSTest_action:reselect_beacon_element" ||
        m === "mgPlayerJSTest_action:reselect_element" ||
        m === "mgPlayerJSTest_action:select_element" ||
        m === "mgPlayerJSTest_action:blackout_element" ||
        m === "mgPlayerJSTest_action:delete_step_element" ||
        m === "mgPlayerJSTest_action:find_element_precision" ||
        m === "mgPlayerJSTest_action:find_element_precision_for_rules" ||
        m === "mgPlayerJSTest_action:save_elem" ||
        m === "mgPlayerJSTest_action:update_elem_tag" ||
        m === "mgPlayerJSTest_action:select_element_tag" ||
        m === "mgPlayerJSTest_action:started;task:edit_tag_select_existing_dom_element") {
        return true;
    } else {
        return false;
    }
};

GmCXt.setAutoTour = function(id) {
    if (window.self === window.top) {
        localStorage.setItem(GmCXt.storagePrefix + 'autoLaunchTour', id);
    } else {
        var data = {
            tourId: id
        };
        if (GmCXt.isSidePanelApp) {
            var m = {
                action: "mgPlayerJSTest_action:set_auto_tour"
            };
            m.data = data;
            GmCXt.sendToParentWindow(m);
        } else {
            GmCXt.sendMessageToParentWindow('mgPlayerJSTest_action:set_auto_tour', data);
        }
    }
};

GmCXt.getPreviousStep = function() {
    if (GmCXt.playerI) {
        var previousStepId = GmCXt.getPreviousStepId(GmCXt.playerI.currentStepId);
        if (previousStepId) {
            var step = GmCXt.createDeepCopy(GmCXt.getStepFromPlayerI(previousStepId));
            return step;
        } else {
            return null;
        }
    } else {
        return null;
    }
};

GmCXt.getPreviousStepId = function(id, mode) {
    var previousStepId = null;
    var PS = GmCXt.playerI.playStructure;
    var sameTail = GmCXt.numberOfSameTail(id, PS);
    if (sameTail > 1) {
        previousStepId = GmCXt.playerI.mergingFromId;
    } else {
        if (PS && PS.length) {
            for (var i = 0; i < PS.length; i++) {
                if (PS[i] && parseInt(PS[i].tail) === parseInt(id)) {
                    previousStepId = PS[i].id;
                    break;
                } else if (PS[i] && PS[i].branch) {
                    for (var j = 0; j < PS[i].branch.length; j++) {
                        if (parseInt(PS[i].branch[j].tail) === id) {

                            if (mode === 'slideshow') previousStepId = PS[i].id;
                            else previousStepId = GmCXt.getPreviousStepId(PS[i].id);

                            break;
                        }
                    }
                }
            }
        }
    }
    return previousStepId;
};

GmCXt.getPreviousStepsList = function(id) {
    var previousSteps = [];
    var PS = GmCXt.playerI.tour.tour_settings.play_structure;

    if (PS && PS.length) {
        for (var i = 0; i < PS.length; i++) {
            if (PS[i] && parseInt(PS[i].tail) === parseInt(id)) {
                previousSteps.push(PS[i].id);
            } else if (PS[i] && PS[i].branch) {
                for (var j = 0; j < PS[i].branch.length; j++) {
                    if (parseInt(PS[i].branch[j].tail) === id) {
                        previousSteps.push(PS[i].id);
                    }
                }
            }
        }
    }
    return previousSteps;
};

GmCXt.getFirstStepId = function() {
    var id = null;
    var playStructure = GmCXt.playerI.playStructure;

    if (playStructure && playStructure.length) {
        var firstStepObj = playStructure[0];
        if (firstStepObj && firstStepObj.id) {
            id = firstStepObj.id;
        }
    }
    return id;
};

//Always extract/extend data returned by this function before use. 
GmCXt.getStepFromPlayerI = function(step_id) {
    var step = false;
    var steps = [];

    var steps = GmCXt.playerI.tour.steps;

    for (var i = 0; i < steps.length; i++) {
        if (parseInt(steps[i].step_id) === parseInt(step_id)) {
            step = steps[i];
            break;
        }
    }
    return step;
};

GmCXt.getStepFromTourData = function(step_id, tour) {
    var step = false;
    var steps = [];

    var steps = tour.steps;

    for (var i = 0; i < steps.length; i++) {
        if (parseInt(steps[i].step_id) === parseInt(step_id)) {
            step = steps[i];
            break;
        }
    }
    return step;
};

GmCXt.getNextBotStepFromTour = function(step_id, tour) {
    var step = false;
    var steps = tour.steps;

    for (var i = 0; i < steps.length; i++) {
        if (parseInt(steps[i].step_id) === parseInt(step_id)) {
            if ((steps[i].step_settings.automation.enableBot &&
                    steps[i].step_settings.automation.botQuestion) ||
                (steps[i].step_type === GmCXt.STEP_TYPE_GUIDE ||
                    steps[i].step_type === GmCXt.STEP_TYPE_BRANCH ||
                    steps[i].step_type === "textSlide")) {
                step = steps[i];
                break;
            } else {
                step_id = GmCXt.getTail(steps[i].step_id, tour.tour_settings.play_structure, null, tour);
                GmCXt.getNextBotStepFromTour(step_id, tour);
            }
        }
    }
    return step;
};

GmCXt.isGuideAudioDisabled = function() {

    if (!GmCXt.isEmpty(GmCXt.playerI) && !GmCXt.isEmpty(GmCXt.playerI.tour)) {
        var s = GmCXt.playerI.tour.tour_settings;
        var val = s.disableAudio;

        return typeof val === 'undefined' ? false : val;
    } else {
        return false;
    }
};

GmCXt.setTourUuid = function(tourId) {

    if (!GmCXt.playerI.uuids) GmCXt.playerI.uuids = {};

    if (!GmCXt.playerI.uuids["tour:" + tourId])
        GmCXt.playerI.uuids["tour:" + tourId] = GmCXt.getUUID();
};

GmCXt.getGlobalAudioPrference = function() {
    var val = GmCXt.getStepSettings().playAudio;
    return typeof val === 'undefined' ? true : val;
};

GmCXt.getAudioPreference = function(pref) {

    var flag = false;
    var userPref = (pref === undefined || pref === true);

    if (GmCXt.getGlobalAudioPrference()) {

        if (!GmCXt.isGuideAudioDisabled()) {

            if (userPref) flag = true;
        }

    } else if (GmCXt.isGuideAudioEnabled()) {
        if (userPref) flag = true;
    }
    return flag;
};

GmCXt.isGuideAudioEnabled = function() {

    var s = GmCXt.playerI.tour.tour_settings;
    var val = s.enableAudio;

    return typeof val === 'undefined' ? true : val;
};

GmCXt.isLastStep = function(stepId, playStructure) {

    var flag = false;

    if (GmCXt.getTail(stepId, playStructure) === null) {
        flag = true;
    }
    return flag;
};

GmCXt.isFirstStep = function(sid) {

    if (!GmCXt.playerI) return false;

    var stepId = sid || GmCXt.playerI.currentStepId;

    // TODO, need to check behaviour when first step of tour in branch step
    if (stepId && GmCXt.playerI.tour) {
        var PS = GmCXt.getGuidePlayStructure(GmCXt.playerI.tour);

        if (PS && PS[0]) {
            var first = PS[0];

            if (first.id === stepId) {
                return true;
            }
        }
    }

    return false;
};

GmCXt.getFirstNonAutomationStep = function() {
    var id = null;
    var playStructure = GmCXt.getGuidePlayStructure(GmCXt.playerI.tour);
    if (playStructure) {
        for (var i = 0; i < playStructure.length; i++) {
            var stepObj = playStructure[i];
            if (stepObj && stepObj.id) {
                id = stepObj.id;
            }
            var step = GmCXt.getStepFromPlayerI(id);
            if (!GmCXt.isAutomationStep(step)) {
                return step;
            }
        }
    }
};

GmCXt.isFirstNonAutomationStep = function() {
    if (!GmCXt.playerI) return false;

    if (GmCXt.playerI.currentStepId && GmCXt.playerI.tour) {
        var s = GmCXt.getFirstNonAutomationStep();
        if (s && (s.step_id === GmCXt.playerI.currentStepId)) {
            return true;
        }
    }
    return false;
};

GmCXt.filterOutAutomationSteps = function(steps) {
    return steps.filter(function(s) {
        return (!GmCXt.isAutomationStep(s));
    });
};

GmCXt.initGlobals = function(action, data) {

    if (data) {

        if (data.debugMode) GmCXt.debugMode = data.debugMode;

        if (data.urlParts) GmCXt.urlParts = data.urlParts;

        if (GmCXt.syncCreateInst(action)) {
            if (window.self !== window.top) {
                if (data.stepReq || data.stepReq === null) {
                    GmCXt.stepReq = data.stepReq;
                }
            } else {
                if (GmCXt.stepReq && data.syncStepReq) {
                    GmCXt.stepReq = data.stepReq;
                }
            }
        }
        if (GmCXt.syncPlayerInst(action)) {
            if (window.self !== window.top) {
                if (data.playerInstance || data.playerInstance === null) {
                    GmCXt.playerI = data.playerInstance;
                }
            } else if (data.playerInstance && data.fromSidePanel) {
                GmCXt.playerI = data.playerInstance;
            }
        }
    }
};

GmCXt.verifyMsg = function(event) {
    if (mg$(window).width() <= 1 || mg$(window).height() <= 1) {
        return false;
    }

    event.data = GmCXt.parseJSON(event.data);
    event.data = GmCXt.convertMgdata(event.data);

    var message = event.data;
    var action = message ? message.action : '';

    GmCXt.log(3, "VERIFY MESSAGE " + action);
    if (!message || !action) return false;

    if (action && action.indexOf('MyGuideReporting:Ack') !== -1 &&
        message.data === GmCXt.getAppName()) {
        return; //Reject acknowledgement from self 
    }

    if (action && action.indexOf('MyGuideReporting') !== -1) {
        GmCXt.saveAppPresence(message);
    }

    var valid = false;
    var data = message.data;

    var fromSelf = (action.indexOf('mgPlayerJSTest_action:') !== -1);

    // for salesforce and service now app backword compatibility 
    if (action === "gmPlayerXt_action:init_sfdc_env" ||
        action === "gmPlayerXt_action:sfdc_play_tour" ||
        action === "gmPlayerXt_action:init_snow" ||
        action === "myguide_action:find_element_request_from_insight" ||
        action === "myguide_action:paste_tour_from_myguide_library" ||
        action === "gmPlayerXt_action:snow_panel_open") {
        fromSelf = true;
    }

    if (fromSelf) {
        if (message && message.data && message.data.sender === "other") {
            delete message.data.organization;
            delete message.data.user;
        }
        GmCXt.initGlobalUser(message);
        GmCXt.initGlobals(action, data);
        valid = true;
    }

    return valid;
};

GmCXt.getMsgPrefix = function() {
    var newPrefix = 'GM:action';

    if (GmCXt.conf.msgPrefix !== "") {
        newPrefix = (GmCXt.conf.msgPrefix + "action");
    }
    return newPrefix;
};

GmCXt.initGlobalUser = function(m) {
    if (m.data && (window.self !== window.top || m.data.fromSidePanel)) {
        if (m.data.user && !GmCXt.isEmpty(m.data.user)) {
            GmCXt.updateGlobalUser(m.data.user);
        }
    }
};

GmCXt.getTourUuid = function(tourId) {
    if (GmCXt.playerI.uuids && GmCXt.playerI.uuids["tour:" + tourId])
        return GmCXt.playerI.uuids["tour:" + tourId];
    else {
        GmCXt.setTourUuid(tourId);
        GmCXt.getTourUuid(tourId);
    }
};

GmCXt.editStepWrapper = function(tour, step, previousStep, language, isDefaultLang, isEditOnImage) {

    var ts = tour.tour_settings;

    var tourStepSettings = false;
    if (!GmCXt.isEmpty(ts.step_settings)) {
        tourStepSettings = ts.step_settings;
    }

    if (step.step_type === GmCXt.STEP_TYPE_INLINE && tour.tour_settings.enableBot) {
        tourStepSettings.tourEnableBot = true;
    }

    var message = {
        data: {
            tourId: tour.tour_id,
            category_id: tour.category_id,
            stepCount: tour.steps.length,
            step: step,
            tourStepSettings: tourStepSettings,
            isGuide: GmCXt.isGuide(tour),
            language: language,
            isDefaultLang: isDefaultLang,
            guideRule: tour.tour_settings.rules,
            previousStep: previousStep || {},
            enableContinueInParent: GmCXt.enableContinueInParent(tour, step.step_order)
        }
    };

    if (isEditOnImage) {
        message.data.isEditOnImage = true;
    }

    if (step.step_type === 'smartTip') {
        message.data.appCode = GmCXt.appList['app:' + GmCXt.activeAppId].external_id;
    }

    if (step.step_type === 'inline' ||
        step.step_type === 'smartTip' ||
        step.step_type === GmCXt.STEP_TYPE_EXTERNAL_AUTOMATION) {

        message.action = "mgPlayerJSTest_action:edit_step,type:inline";

        if (!isEditOnImage)
            step.step_settings.element = GmCXt.migrateMatchAlgoSetting(step.step_settings.element);

    } else if (GmCXt.isAutomationStep(step)) {
        message.action = "mgPlayerJSTest_action:edit_step,type:automation";

        if (!isEditOnImage)
            step.step_settings.element = GmCXt.migrateMatchAlgoSetting(step.step_settings.element);

    } else if (step.step_type === 'message') {

        message.action = "mgPlayerJSTest_action:edit_step,type:message";

        var domElems = step.step_settings.domElems;
        for (var index in domElems) {
            domElems[index].element = GmCXt.migrateMatchAlgoSetting(domElems[index].element);
        }

    } else if (step.step_type === 'image') {
        message.action = "mgPlayerJSTest_action:edit_step,type:image";
    }

    GmCXt.sendToParentWindow(message);
};

GmCXt.toastMsg = function(message) {

    var self = {
        message: message || 'Default message'
    };

    return {
        show: function() {
            mg$("#mgPlayerJSTest_toast-msg").remove();

            var html = "<wmgPlayerJSTest_ id='mgPlayerJSTest_toast-msg'></wmgPlayerJSTest_>";
            if (GmCXt.browserApp === 'ie') {
                mg$("body").append(html);
            } else {
                mg$("html").append(html);
            }

            mg$("#mgPlayerJSTest_toast-msg").html(self.message);
            mg$("#mgPlayerJSTest_toast-msg").fadeIn();
            GmCXt.timeout(function() {
                mg$('#mgPlayerJSTest_toast-msg').fadeOut(500);
            }, GmCXt.t.toastMsg);
        }
    };
};

GmCXt.showToastMsg = function(message) {
    mg$("#mgPlayerJSTest_toast-msg").html(message);
    mg$("#mgPlayerJSTest_toast-msg").fadeIn();
};

GmCXt.hideToastMsg = function() {
    mg$('#mgPlayerJSTest_toast-msg').fadeOut(100);
};

GmCXt.toastMsgPersistent = function(message) {
    return {
        show: function() {
            var htmlstr = "<div class='mgPlayerJSTest_toast-msg-wrapper'><div id='mgPlayerJSTest_toast-msg-close' >x</div>";
            htmlstr += "<div id='mgPlayerJSTest_toast-msg-text' >" + message + "</div></div>";
            mg$("#mgPlayerJSTest_toast-msg").html(htmlstr);
            mg$("#mgPlayerJSTest_toast-msg").fadeIn();

            mg$("#mgPlayerJSTest_toast-msg-close").click(function() {
                GmCXt.toastMsgPersistent().hide();
            });
        },
        hide: function() {
            mg$('#mgPlayerJSTest_toast-msg').fadeOut(500);
        }
    };
};

GmCXt.clearScreen = function() {
    mg$('.mgPlayerJSTest_inline-step-capture-screen').remove();
};

GmCXt.unlockScroll = function() {

    if (GmCXt.lockScrollPosition === true) {
        GmCXt.lockScrollPosition = false;
        mg$('html').css('overflow', '');
        //mg$('body').css('overflow', '');
        document.removeEventListener('wheel', stopEventPropagation, true);
    }
};

GmCXt.getNewGroup = function() {
    var rule = GmCXt.getEmptyRule();
    rule.logical_condition = "||";

    return [rule];
};

GmCXt.showAlertToastMsg = function(msg) {
    var obj = {
        action: "mgPlayerJSTest_action:show_toast_message",
        data: msg
    };
    GmCXt.sendToParentWindow(obj);
};

GmCXt.setDefault = function(data, prop, val) {
    if (!data[prop]) {
        data[prop] = val;
    }
};

GmCXt.sanitizeText = function(text) {
    return mg$('<span />').html(text).text();
};

GmCXt.sanitizeTextHtml = function(step) {
    var s = mg$.extend({}, step);
    if (s.step_audio_text)
        s.step_audio_text = GmCXt.sanitizeText(s.step_audio_text);
    s = GmCXt.replaceCdnSignFromStep(s);
    return s;
};

GmCXt.tinymceTargetList = [{
    title: 'Current tab',
    value: '_self'
}, {
    title: 'New tab',
    value: '_blank'
}];

GmCXt.saveImage = function(imageStr) {

    return new Promise(function(resolve, reject) {
        var formData = new FormData();
        formData.append('image_data', imageStr.replace('data:image/jpeg;base64,', ''));

        var options = {
            args: formData
        };
        GmCXt.api.uploadFileBase64(options).then(function(result) {
            resolve(result.data);
        }).catch(function(result) {
            resolve(false);
        });
    });
};

GmCXt.tinyMcePasteSetup = function(ed) {
    var allowedKeys = [8, 37, 38, 39, 40, 46]; // backspace, delete and cursor keys
    ed.on('init', function(e) {
        tinyMceEditLink(ed);
    });
    ed.on('keydown', function(e) {
        if (allowedKeys.indexOf(e.keyCode) != -1) return true;
        if (GmCXt.tinymce_getContentLength() + 1 > this.settings.max_chars) {
            e.preventDefault();
            e.stopPropagation();
            return false;
        }
        return true;
    });
    ed.on('keyup', function(e) {
        if (GmCXt.tinymce_getContentLength() === 0) {
            var scope = angular.element('.step-create-section-container').scope();
            if (scope) {
                if (this.name === "#mgPlayerJSTest_step_title") {
                    scope.step.step_title = "";
                    mg$("#mgPlayerJSTest_title-tool-text-color #tox-icon-text-color__color").attr({
                        'fill': '#222f3e',
                        'stroke': '#222f3e'
                    });

                    mg$("#mgPlayerJSTest_title-tool-bg-color #tox-icon-highlight-bg-color__color").attr({
                        'fill': '#222f3e',
                        'stroke': '#222f3e'
                    });
                }
                if (this.name === "#mgPlayerJSTest_step_description") {
                    scope.step.step_description = "";
                    mg$("#mgPlayerJSTest_desc-tool-text-color #tox-icon-text-color__color").attr({
                        'fill': '#222f3e',
                        'stroke': '#222f3e'
                    });

                    mg$("#mgPlayerJSTest_desc-tool-bg-color #tox-icon-highlight-bg-color__color").attr({
                        'fill': '#222f3e',
                        'stroke': '#222f3e'
                    });
                }

                if (this.name === "#mgPlayerJSTest_smart_textarea")
                    scope.step.step_settings.smartTip.guidanceMessage = "";
                if (this.name === "#mgPlayerJSTest_step_tooltip") {
                    if (scope.stepDomElms) {
                        scope.stepDomElms[scope.elemSelectedIndex].title = "";
                    }
                    if (scope.tooltips) {
                        scope.tooltips[scope.elemSelectedIndex].title = "";
                    }
                }
            }
        }
        GmCXt.tinymce_updateCharCounter(this, GmCXt.tinymce_getContentLength());
    });
};

GmCXt.tinyMcePasteProcess = function(plugin, args) {
    var editor = tinymce.get(tinymce.activeEditor.id);
    var len = editor.contentDocument.body.textContent.trim().length;
    var pasteTextLen = GmCXt.sanitizeText(args.content).trim().length;

    if (len + pasteTextLen > editor.settings.max_chars) {
        GmCXt.toastMsg('Pasting this exceeds the maximum allowed number of ' + editor.settings.max_chars + ' characters.').show();
        args.content = '';
    } else {
        GmCXt.tinymce_updateCharCounter(editor, len + pasteTextLen);
    }
};

GmCXt.tinyMCETextContentChange = function() {
    if (tinyMCE.activeEditor && tinyMCE.activeEditor.selection) {
        tinyMCE.activeEditor.selection.collapse(false);
    }
};

GmCXt.videoReturnListener = function(callback) {

    var listen = function(event) {

        event = GmCXt.parseJSON(event);
        event = GmCXt.convertMgdata(event);

        if (event.action === "mgPlayerJSTest_action:save_video_in_background;task:upload_video;completed") {
            GmCXt.removeVidImageLoader();
            callback(event.data.videoUrl + GmCXt.user.cdn_signature, {
                alt: ''
            });
        }

        return true;
    };

    if (GmCXt.isExtension()) {
        if (GmCXt.browserApp === 'chrome') {
            chrome.runtime.onMessage.addListener(listen);
        }
    }
};

GmCXt.sendVideoUploadMessage = function(url, cb) {
    var m = {
        data: {
            videoUrl: url,
        },
        action: "mgPlayerJSTest_action:save_video_in_background;task:upload_video"
    };
    GmCXt.videoReturnListener(cb);
    GmCXt.sendMessageToBackgroundService(m);
};

GmCXt.readFile = function(file, cb) {
    if (file) {
        var fileSize = file.size;
        fileSize = ((fileSize / 1024) / 1024).toFixed(4);

        if (!file.type || file.type !== 'video/mp4') {
            GmCXt.showAlertToastMsg(GmCXt.label.imgUploadErr);
            return;
        }

        if (fileSize > 10) {
            GmCXt.showAlertToastMsg(GmCXt.label.imgUploadErr);
            return;
        }
        mg$(".disabledSaveBtn").prop("disabled", true);
        mg$(".disabledSaveBtn").addClass("mgPlayerJSTest_disabled");
        var url = window.URL.createObjectURL(file);
        var vid = document.getElementById('mgPlayerJSTest_video-container-currupt-file-test');
        vid.src = url;
        var promise = vid.play();
        if (promise !== undefined) {
            promise.then(function() {
                mg$('.mgPlayerJSTest_screen-container').show();
                GmCXt.vidImageLoader();
                GmCXt.sendVideoUploadMessage(url, cb);
                vid.pause();
            }).catch(function() {
                mg$('.mgPlayerJSTest_screen-container').hide();
                GmCXt.showAlertToastMsg(GmCXt.label.curruptVideoFileMsg);
                return;
            });
        }
    }
};

GmCXt.vidImageLoader = function() {
    mg$(".disabledSaveBtn").prop("disabled", true);
    mg$(".disabledSaveBtn").addClass("mgPlayerJSTest_disabled");
    mg$(".tox-button").addClass("mgPlayerJSTest_disabled");
    var spinner = "<div class='mgPlayerJSTest_spinner-wrapper'><img src='" + GmCXt.getBasePath('common/img/g_new_loader.gif') + "'/></div>";
    mg$('.tox-dialog').append(spinner);
};

GmCXt.removeVidImageLoader = function() {
    mg$(".disabledSaveBtn").prop("disabled", false);
    mg$(".disabledSaveBtn").removeClass("mgPlayerJSTest_disabled");
    mg$(".tox-button").removeClass("mgPlayerJSTest_disabled");
    mg$('.mgPlayerJSTest_spinner-wrapper').remove();
};

GmCXt.getStepSortedByPS = function(PS, stepId) {

    var steps = [];

    var firstStep;
    if (stepId) {
        firstStep = GmCXt.getStepFromPlayerI(stepId);
    } else {
        firstStep = GmCXt.getStepFromPlayerI(PS[0].id);
    }

    steps.push(firstStep);

    var seedStepID = firstStep.step_id;
    if (firstStep.step_type !== GmCXt.STEP_TYPE_BRANCH || !stepId) {
        for (var i = 0; i < PS.length; i++) {
            var nextStepId = GmCXt.getTail(seedStepID, PS);
            if (nextStepId) {
                stepToPush = GmCXt.getStepFromPlayerI(nextStepId);
                if (stepToPush) {
                    seedStepID = stepToPush.step_id;
                    steps.push(stepToPush);
                    if (stepToPush.step_type === GmCXt.STEP_TYPE_BRANCH &&
                        stepToPush.step_id !== GmCXt.playerI.currentStepId) {
                        break;
                    }
                } else {
                    break;
                }

            } else {
                break;
            }
        }
    }
    return steps;
};

GmCXt.isEditAnywhere = function(step) {

    var type = step.step_type;
    var el = step.step_settings.element;

    if (type === GmCXt.STEP_TYPE_SMART_TIP) {
        if (el.version && GmCXt.decodeVersion(el.version) < 2020041500) {
            return false;
        } else if (step.image_url && step.image_url.indexOf('default') >= 0) {
            return false;
        } else {
            return true;
        }
    }
    if (step.image_url && step.image_url.indexOf('default') >= 0) {
        return false;
    } else {
        return true;
    }
};

GmCXt.getDoNotShowTours = function(isNotif) {

    return GmCXt.storage().get(['tourIdArray', 'tourIdOnBoardingArray'])
        .then(function(st) {
            return GmCXt.processDoNotShowGuides(st, isNotif);
        });
};

GmCXt.saveSeenToursInDb = function(tour, userSettings) {

    if (!GmCXt.isEmpty(tour)) {

        userSettings.viewed_guide_notifications = tour;

        GmCXt.updateUserProfileSettings(userSettings);

        GmCXt.storage().remove(['tourIdArray']);
    }
};

GmCXt.processDoNotShowGuides = function(st, isNotif) {

    var obj = {};
    var tours = [];
    var userSettings = GmCXt.user.settings || {};

    if (GmCXt.isAnonymousUser()) {
        tours = st.tourIdArray || {};
        if (mg$.isArray(st.tourIdOnBoardingArray)) {
            tours = mg$.extend({}, tours, GmCXt.arrayToObjectNot(st.tourIdOnBoardingArray));
            GmCXt.storage().set({
                'tourIdArray': tours
            });
            GmCXt.storage().remove(['tourIdOnBoardingArray']);
        }
    } else {
        tours = userSettings.viewed_guide_notifications || {};
        if (mg$.isArray(userSettings.viewed_onboarding_guide_notifications)) {
            tours = mg$.extend({}, tours, GmCXt.arrayToObjectNot(userSettings.viewed_onboarding_guide_notifications));
            delete userSettings.viewed_onboarding_guide_notifications;
            GmCXt.saveSeenToursInDb(tours, userSettings);
        }
    }

    if (Array.isArray(tours)) {
        obj = GmCXt.arrayToObjectNot(tours);
        if (!GmCXt.isAnonymousUser()) GmCXt.saveSeenToursInDb(obj, userSettings);
    } else {
        obj = tours;
    }

    return obj;
};

GmCXt.arrayToObjectNot = function(tours) {
    var tempObj = {};
    for (var key in tours) {
        if (tours[key]) tempObj[tours[key]] = 1;
    }
    return tempObj;
};

GmCXt.escapeHtml = function(str) {
    if (str) {
        str = str.replace(/&/g, "&amp;")
            .replace(/</g, "&lt;")
            .replace(/>/g, "&gt;")
            .replace(/"/g, "&quot;")
            .replace(/'/g, "&#039;");
    }
    return str;
};

GmCXt.removeNotif = function() {
    mg$(".mgPlayerJSTest_overlay-tours-popup").remove();
    mg$(".mgPlayerJSTest_overlay-container").remove();
};

GmCXt.getObjectSize = function(obj) {
    var size = 0,
        key;
    for (key in obj) {
        if (obj.hasOwnProperty(key))
            size++;
    }
    return size;
};

GmCXt.updateUserProfileSettings = function(userSettings) {
    var user = GmCXt.user;
    user.settings = userSettings;

    GmCXt.sendMessageToApp('mgPlayerJSTest_action:update_user_data', {
        user: user
    });

    GmCXt.sendMessageToApp('mgPlayerJSTest_action:update_organization_data', {
        organization: GmCXt.organization
    });
};

GmCXt.updatePlayedSteps = function(step) {
    GmCXt.sendMessageToApp("mgPlayerJSTest_action:update_played_step", {
        playedStep: step
    });
};

GmCXt.lastCheckWidgetIcon = 0;

GmCXt.getWidgetIcon = function() {

    return new Promise(function(resolve, reject) {

        var i = 'common/img/widget_icon.png';

        if (GmCXt.isExtension()) {
            i = GmCXt.getBrowserUrl(i);
        } else {
            i = GmCXt.conf.baseUrl + i;
        }

        var s = GmCXt.getWidgetSettings();

        if (s && s.widget_icon_path && !GmCXt.isDefaultIcon(s.widget_icon_path)) {
            i = s.widget_icon_path + GmCXt.getCdnSign();
        }

        //check if widgetIcon needs to get new signature. 
        var isSignExp = (GmCXt.getCurrentTimeInMilSec() - GmCXt.lastCheckWidgetIcon > GmCXt.t.refreshWidget) ? true : false;

        resolve(i);
    });
};

GmCXt.getChatIcon = function() {

    return new Promise(function(resolve, reject) {
        var i = GmCXt.conf.staticContentPath + "chat_bot_icon.png";

        var s = GmCXt.getAppSetting();

        if (s && s.chat_icon_path && !GmCXt.isDefaultIcon(s.chat_icon_path)) {
            i = s.chat_icon_path + GmCXt.getCdnSign();
        }

        //check if widgetIcon needs to get new signature. 
        var isSignExp = (GmCXt.getCurrentTimeInMilSec() - GmCXt.lastCheckWidgetIcon > GmCXt.t.refreshWidget) ? true : false;

        resolve(i);
    });
};

GmCXt.getWidgetAlignment = function() {
    var alignment = "right";
    return alignment;
};

GmCXt.visibleWindow = function(data) {
    if (data.checkIframe) {
        if (!GmCXt.isEmpty(data.frame.attributes) &&
            !data.frame.attributes.isVisible) {
            return false;
        }
    }
    return true;
};

GmCXt.getSteps = function(data) {

    if (GmCXt.isSidePanelApp) {
        return new Promise(function(resolve, reject) {
            GmCXt.api.getTour(data).then(function(_tour) {
                resolve(_tour);
            });
        });
    } else {
        return new Promise(function(resolve, reject) {
            GmCXt.callApi(data, "tour")
                .then(function(_tour) {
                    resolve(_tour);
                });
        });
    }
};

GmCXt.checkIfInvalidSegment = function(data) {
    return new Promise(function(resolve, reject) {
        GmCXt.getSteps(data).then(function(_tour) {
            var flag = true;
            if (!_tour) {
                flag = false;
            }
            resolve(flag);
        });
    });
};

GmCXt.updatePlayStructureLinkGuide = function(tour, playerInstance, cb) {

    var linkPS = GmCXt.getGuidePlayStructure(tour);

    var pi;
    if (GmCXt.playerI) {
        pi = GmCXt.playerI;
    } else if (playerInstance) {
        pi = playerInstance;
    }

    var tailCurrent = linkPS[0].id;
    var PS = pi.playStructure;
    var isFirstStepLink = false;

    for (var i = 0; i < PS.length; i++) {
        if (PS[i].tail === pi.currentStepId) {
            PS[i].tail = tailCurrent;
        } else if (PS[i].branch) {
            for (var j = 0; j < PS[i].branch.length; j++) {
                if (PS[i].branch[j].tail === pi.currentStepId) {
                    PS[i].branch[j].tail = tailCurrent;
                }
            }
        }
        if (PS[i].id === pi.currentStepId) {
            linkPS = GmCXt.updatePSLastTail(linkPS, PS[i].tail);
            PS[i].tail = null;
            if (i === 0) {
                isFirstStepLink = true;
            }
        }
    }

    pi.linkGuideFS = linkPS[0].id;

    if (isFirstStepLink) {
        PS[0] = linkPS[0];
        linkPS.splice(0, 1);
        pi.startStepId = PS[0].id;
    }

    var finalPS = mg$.extend([], PS.concat(linkPS));
    if (pi.type === GmCXt.TOUR_PLAYER_SLIDESHOW) {
        GmCXt.playerI = pi;
        GmCXt.playerI.playStructure = finalPS;
    } else if (playerInstance && !GmCXt.playerI) {
        if (cb) cb(finalPS);
    } else {
        GmCXt.sendMessageToParentWindow("mgPlayerJSTest_action:update_PI_PS", finalPS);
    }
};

GmCXt.updatePSLastTail = function(PS, tail) {
    for (var i = 0; i < PS.length; i++) {
        if (PS[i].branch) {
            for (var j = 0; j < PS[i].branch.length; j++) {
                if (PS[i].branch[j].tail === null) {
                    PS[i].branch[j].tail = tail;
                }
            }
        } else if (PS[i].tail === null) {
            PS[i].tail = tail;
        }
    }
    return PS;
};

GmCXt.concatLinkGuideSteps = function(newSteps, tour, step_id, cb) {

    var guideStepIndex;
    if (tour && step_id) {
        guideStepIndex = GmCXt.getCurrentStepIndex(tour, step_id);
    } else {
        guideStepIndex = GmCXt.getCurrentStepIndex();
    }

    var steps = [];
    if (tour) {
        steps = mg$.extend([], tour.steps);
    } else {
        steps = mg$.extend([], GmCXt.playerI.tour.steps);
    }

    if (tour && step_id) {
        steps = steps.filter(function(step, i) {
            return step.step_id !== step_id;
        });
    } else {
        steps = steps.filter(function(step, i) {
            return step.step_id !== GmCXt.playerI.currentStepId;
        });
    }

    steps.splice.apply(steps, [guideStepIndex, 0].concat(newSteps));
    if (GmCXt.playerI) {
        if (GmCXt.playerI.type === GmCXt.TOUR_PLAYER_SLIDESHOW) {
            GmCXt.playerI.tour.steps = steps;
        } else {
            GmCXt.sendMessageToParentWindow("mgPlayerJSTest_action:update_PI_steps", steps);
        }
        GmCXt.playerI.totalStepCount = steps.length;
        GmCXt.playerI.tour.step_count = steps.length;
    } else {
        if (cb) cb(steps);
    }
};

GmCXt.stopNotification = function(isPreview) {
    var flag = false;
    var reason = '';

    if (!GmCXt.isPlayer() && !isPreview) {
        reason = "app is not a player";
        flag = true;
    } else if (mg$('.mgPlayerJSTest_image-step-screen').is(':visible') || mg$('.mgPlayerJSTest_preview-step-popup-container').is(':visible')) {
        reason = "step is playing";
        flag = true;
    } else if (mg$('.mgPlayerJSTest_user-guide-container').is(':visible')) {
        reason = "survey is open";
        flag = true;
    } else if (mg$('.mgPlayerJSTest_notifcation-popup').is(':visible')) {
        reason = "org notification";
        flag = true;
    } else if (mg$('.mgPlayerJSTest_slideshow-panel').is(':visible')) {
        reason = "slideshow playing";
        flag = true;
    } else if (mg$('.mgPlayerJSTest_play-pause-toolbar').is(':visible')) {
        reason = "pause guide";
        flag = true;
    } else if (GmCXt.APP_PANEL_OPEN && !GmCXt.getAppSetting('keep_player_panel_open')) {
        reason = "side panel open";
        flag = true;
    } else if (GmCXt.playerI) {
        reason = "tour is active";
        flag = true;
    } else if (!GmCXt.isEmpty(GmCXt.testMe)) {
        reason = "test me active";
        flag = true;
    }

    if (flag) {
        GmCXt.log(10, "STOP notification because " + reason);
    }
    return flag;
};

GmCXt.initializeAudio = function(audioElement, stream) {
    try {
        audioElement[0].srcObject = stream;
    } catch (error) {
        audioElement[0].src = window.URL.createObjectURL(stream);
    }

    mediaRecorder = new MediaRecorder(stream);
    mediaRecorder.start();
    return mediaRecorder;
};

GmCXt.populateValueField = function(rule) {
    if (rule.condition === "Is Visible") {
        rule.condition = GmCXt.VISIBLE;
    } else if (rule.condition === "Is Not Visible") {
        rule.condition = GmCXt.NOT_VISIBLE;
    }

    if (rule.type === 'Select Element') {
        rule.showValueField = false;

        var txtValArr = [GmCXt.STARTS_WITH, GmCXt.ENDS_WITH,
            GmCXt.EQUALS, GmCXt.NOT_EQUAL, GmCXt.CONTAINS, GmCXt.NOT_CONTAINS,
            GmCXt.TXT_EQUALS, GmCXt.NOT_TXT, GmCXt.GREAT_THAN, GmCXt.LESS_THAN,
            GmCXt.TXT_CONTAINS, GmCXt.TXT_MATCHES
        ];

        var cssValArr = [GmCXt.CLASSES, GmCXt.NOT_CLASSES, GmCXt.ATTRIBUTES, GmCXt.NOT_ATTRIBUTES];

        var index = mg$.inArray(rule.condition, cssValArr);
        if (index > -1) {
            if (!rule.txtValue) {
                rule.txtValue = rule.value;
            }

            var attrs = mg$.extend({}, rule.element.meta.elAttributes);
            delete attrs.tagName;

            if (index < 2) {
                rule.value = attrs.class ? attrs.class.replace(/ /g, ', ') : '';
            } else {
                rule.value = Object.keys(attrs).join(', ');
            }

            rule.showValueField = true;

        } else if (mg$.inArray(rule.condition, txtValArr) > -1) {
            if (rule.txtValue) {
                rule.value = rule.txtValue;
                rule.txtValue = null;
            }
            rule.showValueField = true;
        } else {
            rule.showValueField = false;
        }

    } else if (rule.type === 'Display Frequency') {
        var freqValArr = [GmCXt.DAY_OF_WEEK, GmCXt.FIX_TIME];
        if (mg$.inArray(rule.condition, freqValArr) > -1) {
            rule.value = '';
            rule.showValueField = true;
        } else {
            rule.showValueField = false;
        }
    } else if (rule.type === 'Variables') {
        if (rule.condition === GmCXt.IS_VALID) {
            rule.value = '';
        } else {
            rule.value = GmCXt.getVariableValue(rule.variableData);
        }
        rule.showValueField = true;
    } else {
        rule.showValueField = true;
    }
};

GmCXt.sendMsgToParentFromStepPanel = function(action, data) {

    data = data || {};
    data.stepReq = GmCXt.stepReq;
    data.syncStepReq = true;

    var object = {
        action: action,
        data: data
    };

    GmCXt.sendToParentWindow(object);
};

GmCXt.setCustomAttributesChecked = function(el) {
    var matchAttr = {};

    if (el && el.criteria && el.criteria.matchAttributes) {
        var attrList = el.criteria.matchAttributes;

        if (attrList) {
            for (var index in attrList) {
                matchAttr[attrList[index]] = true;
            }
        }
    }

    return matchAttr;
};

GmCXt.checkSalesForceSite = function() {
    var url = GmCXt.getUrl();
    if (url.indexOf('salesforce.com') > 0 || url.indexOf('lightning.force.com') > 0)
        return true;
    else
        return false;
};

GmCXt.checkWorkdaySite = function() {
    var url = GmCXt.getUrl();
    if (url.indexOf('workday.com') > 0)
        return true;
    else
        return false;
};

GmCXt.checkUBS = function() {
    var url = GmCXt.getUrl();
    if (url.indexOf('ubs.net') > -1 || url.indexOf('pwj.com') > -1)
        return true;
    else
        return false;
};

GmCXt.checkServiceNow = function() {
    var url = GmCXt.getUrl();
    if (url.indexOf('service-now.com') > -1)
        return true;
    else
        return false;
};

GmCXt.getCurrentStep = function(stepId) {

    var step = mg$.extend({}, GmCXt.getStepFromPlayerI(stepId));

    if (!step.step_description) step.step_description = " ";

    // Map properties
    step.image_url = step.image_url + GmCXt.getCdnSign();
    step.screen_url = step.screen_url + GmCXt.getCdnSign();

    return step;
};

GmCXt.getNextStep = function() {
    if (GmCXt.playerI) {
        var step = GmCXt.getCurrentStep(GmCXt.playerI.currentStepId);
        var nextStepId = GmCXt.getTail(step.step_id, GmCXt.playerI.playStructure);

        if (nextStepId) {
            return GmCXt.getStepFromPlayerI(nextStepId);
        } else {
            return null;
        }
    } else {
        return null;
    }
};

GmCXt.getProcessedLang = function(l) {
    var langList = {
        'ar': 'ar-SA',
        'ar-EG': 'ar-EG',
        'ar-SA': 'ar-SA',
        'zh': 'zh-CN',
        'zh-HK': 'zh-HK',
        'zh-CN': 'zh-CN',
        'zh-TW': 'zh-TW',
        'zh-Hant': 'zh-TW',
        'cs': 'cs-CZ',
        'cs-CZ': 'cs-CZ',
        'da': 'da-DK',
        'da-DK': 'da-DK',
        'nl': 'nl-NL',
        'nl-NL': 'nl-NL',
        'en': '',
        'fi': 'fi-FI',
        'fi-FI': 'fi-FI',
        'fr': 'fr-FR',
        'fr-FR': 'fr-FR',
        'fr-CH': 'fr-CH',
        'fr-CA': 'fr-CA',
        'de': 'de-DE',
        'de-AT': 'de-AT',
        'de-DE': 'de-DE',
        'de-CH': 'de-CH',
        'el': 'el-GR',
        'el-GR': 'el-GR',
        'he': 'he-IL',
        'he-IL': 'he-IL',
        'hi': 'hi-IN',
        'hi-IN': 'hi-IN',
        'hu': 'hu-HU',
        'hu-HU': 'hu-HU',
        'id': 'id-ID',
        'id-ID': 'id-ID',
        'it': 'it-IT',
        'it-IT': 'it-IT',
        'ja': 'ja-JP',
        'ja-JP': 'ja-JP',
        'ko': 'ko-KR',
        'ko-KR': 'ko-KR',
        'pl': 'pl-PL',
        'pl-PL': 'pl-PL',
        'pt': 'pt-PT',
        'pt-PT': 'pt-PT',
        'pt-BR': 'pt-BR',
        'ro': 'ro-RO',
        'ro-RO': 'ro-RO',
        'ru': 'ru-RU',
        'ru-RU': 'ru-RU',
        'sk': 'sk-SK',
        'sk-SK': 'sk-SK',
        'es': 'es-ES',
        'es-ES': 'es-ES',
        'es-MX': 'es-MX',
        'sv': 'sv-SE',
        'sv-SE': 'sv-SE',
        'ta': 'ta-IN',
        'ta-IN': 'ta-IN',
        'te': 'te-IN',
        'te-IN': 'te-IN',
        'th': 'th-TH',
        'th-TH': 'th-TH',
        'tr': 'tr-TR',
        'tr-TR': 'tr-TR',
        'vi': 'vi-VN',
        'vi-VN': 'vi-VN'
    };

    var lang = langList[l];

    if (lang)
        return lang;
    else
        return 'en-US';
};

GmCXt.parseMsg = function(e) {

    e = mg$.extend({}, e);
    e.data = GmCXt.parseJSON(e.data);
    GmCXt.log(3, "PARSE MESSAGE " + e.data.action);
    return e.data;
};

GmCXt.browserLang = GmCXt.getProcessedLang(window.navigator.language);

GmCXt.checkLangExist = function(lArr, lang) {
    var retVal = false;

    if (lArr && !GmCXt.isFalse(lang)) {

        for (var i = 0; i < lArr.length; i++) {
            if (lArr[i].language === lang) {
                retVal = true;
                break;
            }
        }
    }

    return retVal;
};

GmCXt.removePreviewFrame = function() {

    mg$('.mgPlayerJSTest_preview-beacon').remove();
    mg$('.mgPlayerJSTest_preview-smarttip').remove();
    mg$('.gssSmarttip-form-submit').removeClass('mgPlayerJSTest_form-submit-preview gssSmarttip-form-submit');
    mg$('.mgPlayerJSTest_duct-tape-invisible-preview').removeClass('mgPlayerJSTest_duct-tape-invisible-preview');

    if (mg$('.mgPlayerJSTest_preview-smarttip-pwr-html').length)
        mg$('.mgPlayerJSTest_preview-smarttip-pwr-html').val('');
};

GmCXt.clearSession = function() {

    if (GmCXt.user) {
        GmCXt.user = false;
    }

    GmCXt.clearBeaconsAndTooltips(true);
    GmCXt.highlighter.clear();

    GmCXt.playedTour = [];
    GmCXt.storage().remove(['playedTour', 'stepsPlayed']);

    if (mg$('.mgPlayerJSTest_task-list-button').length > 0) {
        mg$('.mgPlayerJSTest_task-list-button').remove();
    }
};

GmCXt.clearBeaconsAndTooltips = function(isLogout, idList) {

    if (idList) {
        // Clear specific (if parameter is passed)
        if (idList.length) {
            for (var i = 0; i < idList.length; i++) {
                GmCXt.log(43, 'Clearing tooltips for tour: ' + idList[i]);
                mg$('.mgPlayerJSTest_smarttip-tour-' + idList[i]).remove();
                mg$('.mgPlayerJSTest_duct-tape-smarttip-tour-' + idList[i]).removeClass('mgPlayerJSTest_duct-tape-invisible');
                delete GmCXt.onScreenTooltipGuideInfo['tour_' + idList[i]];
            }

            GmCXt.onScreenTooltipGuideIds = GmCXt.onScreenTooltipGuideIds.filter(function(id) {
                return idList.indexOf(id) === -1;
            });

            GmCXt.partialVisibleTooltipsIds = GmCXt.partialVisibleTooltipsIds.filter(function(id) {
                return idList.indexOf(id) === -1;
            });
        }
    } else {
        // Clear all
        mg$('.mgPlayerJSTest_smarttip-icon').remove();
        mg$('.smarttip-guidance-msg').remove();
        mg$('.mgPlayerJSTest_smarttip').remove();
        mg$('.mgPlayerJSTest_smarttip-valid').remove();
        mg$('.mgPlayerJSTest_duct-tape').remove();
        mg$('.mgPlayerJSTest_duct-tape-invisible').removeClass('mgPlayerJSTest_duct-tape-invisible');
    }

    mg$(".mgPlayerJSTest_beacon-icon").remove();
    GmCXt.beaconsOnScreen = [];

    if (!isLogout) {
        GmCXt.sendMessageToApp("mgPlayerJSTest_action:close_power_form", {});
    }

    GmCXt.sendMessageToAllWindows('mgPlayerJSTest_action:forward;remove_active_smarttip_beacon', {
        idList: idList
    });
};

GmCXt.closeAppPanel = function() {
    GmCXt.APP_PANEL_OPEN = false;
    GmCXt.displayWidget();
    GmCXt.displayChatIcon();
    var alignment = GmCXt.getWidgetAlignment();
    mg$(".mgPlayerJSTest_panel .mgPlayerJSTest_app").css(alignment, "-9550px");
    mg$(".mgPlayerJSTest_panel").css(alignment, "-9550px");
    if (alignment === 'right') {
        mg$(".mgPlayerJSTest_panel").css('left', "initial");
    }

    if (GmCXt.isMicroPlayer() || GmCXt.isWBMicroPlayer()) {
        mg$(".mgPlayerJSTest_panel").css("left", "initial");
        mg$(".mgPlayerJSTest_panel").css("top", "50%");
    }

    mg$(".mgPlayerJSTest_panel").attr({
        'aria-hidden': true,
        'tabindex': -1
    });
    mg$("#mgPlayerJSTest_app").attr({
        'aria-hidden': true,
        'tabindex': -1
    });
    mg$(".mgPlayerJSTest_panel").focus();

    GmCXt.sendMessageToApp("mgPlayerJSTest_action:app_panel_closed", {});
};

GmCXt.legacyWildChar = function(v) {
    return GmCXt.decodeVersion(v) <= 2020063002;
};

GmCXt.getMd5 = function(val) {
    return md5(val);
};

GmCXt.getAppsArray = function(apps) {
    var r = [];

    for (var k in apps) {
        if (apps.hasOwnProperty(k)) {
            r.push(k);
        }
    }
    return r;
};

GmCXt.checkGmailSite = function() {
    var url = GmCXt.getUrl();
    if (url.indexOf('mail.google.com') === 0)
        return true;
    else
        return false;
};

GmCXt.sendMessageToDesktopApp = function(msg, d) {
    GmCXt.log(38, "Send message to Desktop App - ", msg, d);
    var url = '';
    var eventList = {
        "clickNext": 'click',
        "onRightClickNext": 'right-click',
        "onKeyupNext": 'keyup',
        "onChangeNext": 'change',
        "hoverNext": 'hover'
    };

    GmCXt.log(33, "Sending message to CAD");
    GmCXt.log(33, msg);

    switch (msg) {
        case 'step_complete':
            url = "event/step_complete" +
                "?step_id=" + d.step_id + "&step_order" + d.step_order;
            break;

        case 'step_failed':
            url = "event/step_failed" +
                "?step_id=" + d.step_id + "&tour_id=" + GmCXt.deskReq.testCaseId + "&jobId=" + GmCXt.deskReq.jobId;
            break;

        case 'trigger_event':
            var event = d.step_settings.completionEvent;
            var as = d.step_settings.automation;
            var query = '';

            if (as.enableDefaultData) {
                query += 'value=' + escape(as.defaultData);
            }
            query += '&human_interaction=' + escape(as.hasHumanInteraction);

            if (as.element && as.element.dataOptionsType) {
                query += '&type=' + escape(as.element.dataOptionsType);
            }

            if (as.file) {
                query += '&filePath=' + escape(as.file);
            }

            var cname = 'doitforme-' + d.step_id;

            url = "action/" + eventList[event] + "/" + cname + "?" + query;

            break;

        case 'image_comparison':
            var msg = 'Finding image match';
            if (!GmCXt.isEmpty(d.step_title)) {
                msg += (" for step '<b>" + d.step_title + "</b>' ");
            }
            GmCXt.toastMsg(msg).show();

            url = 'image_comparison/doitforme-' + d.step_id + '?';
            break;

        case 'task_complete':
            var query = '';

            if (GmCXt.deskReq) {
                if (GmCXt.deskReq.testCaseId) {
                    query += 'tour_id=' + GmCXt.deskReq.testCaseId;
                }
                if (GmCXt.deskReq.jobId) {
                    query += '&jobId=' + GmCXt.deskReq.jobId;
                }

                if (GmCXt.deskReq.jobRunId) {
                    query += '&jobRunId=' + GmCXt.deskReq.jobRunId;
                }
                if (d && d.isError) {
                    query += '&isError=true&errorMessage=' + d.errorMessage;
                }
            }
            if (d && d.entity_code) {
                query += '&entityCode=' + d.entity_code;
            }
            url = "event/task_complete?" + query;
            break;
    }

    if (GmCXt.deskReq && GmCXt.deskReq.driverId) {
        url += "&driver=" + GmCXt.deskReq.driverId;
    }

    GmCXt.log(33, url);

    function cb(tabId) {

        url += '&tabid=' + tabId;

        GmCXt.timeout(function() {
            var params = {
                url: url,
                stepType: (d && d.step_settings) ? d.step_settings.stepType : '',
            };

            if (d && d.step_type === GmCXt.STEP_TYPE_IMAGE) {
                params.info = d;
            }

            GmCXt.callApi(params, "connectMgDesktop");
        }, 3000);
    }
    GmCXt.log(37, "msg send to desktop", url);
    if (GmCXt.isBackgroundPage) {
        cb(GmCXt.trackerUtil.tabId);
    } else {
        GmCXt.sendMessageToBackgroundService({
            action: "mgPlayerJSTest_action:get_current_tab_id"
        }, cb);
    }
};

GmCXt.compareArraysByPercentMatch = function(arr1, arr2, val) {
    var similar = arr1.filter(function(n) {
        return this.has(n);
    }, new Set(arr2));

    var pc = 100 * (similar.length * 2) / (arr1.length + arr2.length);

    val = val || 75;
    return pc >= val;
};


GmCXt.migrateOldRules = function(rules) {
    if (rules && rules.length > 0) {
        for (var i = 0; i < rules.length; i++) {
            var rule = rules[i];
            if (rule.value.indexOf("*") !== -1 && rule.value.indexOf("{*}") === -1) {
                rule.value = rule.value.replaceAll('*', "{*}");
            }

            if (rule.value.indexOf("+") !== -1 && rule.value.indexOf("{+}") === -1) {
                rule.value = rule.value.replaceAll('+', "{+}");
            }
        }
    }

    return rules;
};

GmCXt.compareObjectsByPercentMatch = function(o1, o2, val, keys) {

    if (!GmCXt.isEmpty(o1) && !GmCXt.isEmpty(o2)) {

        var textKeys = ['aria-label'];
        var matched = 0;
        var compared = 0;
        keys = keys || Object.keys(o1);
        var len = keys.length;

        for (var i = 0; i < len; i++) {
            var key = keys[i];
            if (o1.hasOwnProperty(key) && o2.hasOwnProperty(key)) {
                compared++;
                if (typeof o1[key] === 'object') {
                    if (Array.isArray(o1[key])) {
                        if (GmCXt.compareArraysByPercentMatch(o1[key], o2[key], 50)) matched++;
                    } else if (GmCXt.compareObjectsByPercentMatch(o1[key], o2[key], 50)) matched++;
                } else {
                    if (textKeys.includes(key) && o1[key] !== o2[key]) return false;
                    if (o1[key] === o2[key]) matched++;
                }
            }
        }

        if (!compared) return false;

        var currentPc = 100 * matched / compared;
        var pc = val || 75;

        if (currentPc >= pc) {
            return true;
        }
    }

    return false;
};

GmCXt.checkInsightEnabled = function() {
    var org = GmCXt.organization;
    if (org && org.admin_settings.insights.enabled && org.admin_settings.insights.guide) {
        return true;
    }
    return false;
};

GmCXt.toggleStepSelectionToolbar = function(show, showDone, inlineStepReq) {
    if (show) {
        mg$('.mgPlayerJSTest_toolbar-panel').show();

        if (showDone) {
            GmCXt.sendMessageToolbar("mgPlayerJSTest_action:show_done_button", {
                isQuick: inlineStepReq
            });
        } else {
            GmCXt.sendMessageToolbar("mgPlayerJSTest_action:hide_done_button");
        }

        var u = GmCXt.user.settings || {};
        if (u.showToolbarTooltip) {
            mg$('.mgPlayerJSTest_toolbar-tooltip').show();
        }

    } else {
        mg$('.mgPlayerJSTest_toolbar-panel').hide();
        mg$('.mgPlayerJSTest_toolbar-tooltip').hide();
        GmCXt.sendMessageToolbar("mgPlayerJSTest_action:hide_done_button");
        // disable_mouse_hover
        window.removeEventListener('mouseover', stopEventPropagation, true);
    }
};

GmCXt.resizeBase64Image = function(base64Str, quality) {
    return new Promise(function(resolve) {
        var img = new Image();
        img.src = base64Str;
        img.onload = function() {
            var canvas = document.createElement('canvas');
            canvas.width = this.naturalWidth;
            canvas.height = this.naturalHeight;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0, this.naturalWidth, this.naturalHeight);
            resolve(canvas.toDataURL("image/jpeg", quality));
        };
    });
};

GmCXt.getBase64ImageSize = function(base64Image) {
    var base64Data = base64Image.split(',')[1];
    var size = (base64Data.length * (3 / 4)) - (base64Data.indexOf('=') > 0 ? (4 - base64Data.indexOf('=')) : 0);
    return Math.round(size / 1024);
};

GmCXt.toDataURL = function(url) {
    return new Promise(function(resolve) {
        var xhr = new XMLHttpRequest();
        xhr.onload = function() {
            var reader = new FileReader();
            reader.onloadend = function() {
                resolve(reader.result);
            };
            reader.readAsDataURL(xhr.response);
        };
        xhr.open('GET', url);
        xhr.responseType = 'blob';
        xhr.send();
    });
};

GmCXt.cropTemplate = function(base64Str, x, y, width, height) {
    return new Promise(function(resolve) {
        var img = new Image();
        img.src = base64Str;
        img.onload = function() {
            var canvas = document.createElement('canvas');
            canvas.width = width;
            canvas.height = height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, x, y, width, height, 0, 0, width, height);
            resolve(canvas.toDataURL("image/png", 1.0));
        };
    });
};

GmCXt.getBasePath = function(i) {
    var url = "";
    if (GmCXt.isExtension()) {
        url = GmCXt.getBrowserUrl(i);
    } else {
        url = GmCXt.conf.baseUrl + i;
    }

    return url;
};

// Only applicable after version 2021.01.30.1
GmCXt.checkTourCreatedBefore = function(tourSettings, version) {
    return (!tourSettings.hasOwnProperty('created_version') || GmCXt.decodeVersion(tourSettings.created_version) < version);
};

GmCXt.reassignTourURls = function(urls, tour) {

    var updateStepUrl = function(u, key, tour) {
        var stepId = key.split('-')[1];
        var p = key.split('-')[0];

        for (var i = 0; i < tour.steps.length; i++) {

            var step = tour.steps[i];

            if (step.step_id === stepId) {

                if (p === 'smartTip_icon') {
                    step.step_settings.smartTip.icon = u;
                } else {
                    step[p] = u;
                }

                tour.steps[i] = step;
            }
        }
        return tour;
    };

    for (var key in urls) {
        var u = urls[key];

        switch (key) {
            case 'image_url':
                tour.image_url = u;
                break;

            case 'thumbnail_url':
                tour.thumbnail_url = u;
                break;

            case 'beaconIcon':
                tour.tour_settings.beacon.beaconIcon = u;
                break;

            case 'beaconPreviewImagePath':
                tour.tour_settings.beacon.beaconPreviewImagePath = u;
                break;

            case 'beaconIcon':
                tour.tour_settings.beacon.beaconIcon = u;
                break;

            case 'first_slide_img':
                tour.tour_settings.video_settings.first_slide_img = u;
                break;

            case 'last_slide_img':
                tour.tour_settings.video_settings.last_slide_img = u;
                break;

            case 'first_slide_recorded_audio_url':
                tour.tour_settings.video_settings.first_slide_recorded_audio_url = u;
                break;

            case 'last_slide_recorded_audio_url':
                tour.tour_settings.video_settings.last_slide_recorded_audio_url = u;
                break;

            case 'pdf':
                tour.media_files[0].pdf = u;
                break;

            case 'ppt':
                tour.media_files[0].ppt = u;
                break;

            case 'text':
                tour.media_files[0].text = u;
                break;

            case 'video':

                tour.media_files[0].video = u;
                break;

            case 'doc':
                tour.media_files[0].doc = u;
                break;

            case 'gify':
                tour.media_files[0].gify = u;
                break;

            default:
                tour = updateStepUrl(u, key, tour);
        }
    }

    return tour;
};

GmCXt.replaceNthOccurence = function(text, pattern, replaceStr, n) {
    var i = 0;

    text = text.replace(pattern, function(match) {
        i++;
        return (i === n) ? replaceStr : match;
    });

    return text;
};

GmCXt.getEtagBundle = function(eTagsArr) {
    var str = "<CompleteMultipartUpload>";
    for (var i = 0; i < eTagsArr.length; i++) {
        str += '<Part><PartNumber>' + (i + 1);
        str += '</PartNumber><ETag>"' + eTagsArr[i] + '"</ETag></Part>';
    }
    str += "</CompleteMultipartUpload>";
    return str;
};

GmCXt.getEtagFromHeader = function(reqHeader) {
    if (reqHeader.indexOf("etag:") > 0) {
        var arr = reqHeader.split("etag: \"");
        var arr2 = arr[1].split("\"");
        return arr2[0];
    } else {
        return false;
    }
};

GmCXt.getTourSegmentDetail = function(tour) {
    var segmentDetails = [];
    var tour_segs = tour.tour_settings.segment_groups;
    tour_segs.forEach(function(s) {
        var sg = GmCXt.getSegmentById(s);
        if (!GmCXt.isEmpty(sg)) {
            segmentDetails.push(sg);
        }
    });
    return segmentDetails;
};

GmCXt.getSegmentById = function(id) {
    if (GmCXt.allSegments) {
        return GmCXt.allSegments.filter(function(g) {
            return parseInt(g.group_id) === parseInt(id);
        })[0];
    } else return {};
};

GmCXt.validatedSegments = {};

GmCXt.areUserSegmentsValid = function(segments, segmentId) {
    var userProfileData = GmCXt.user.profile ? JSON.parse(GmCXt.user.profile) : "";
    var isValid = false;

    var userData = [];
    if (userProfileData && Object.prototype.toString.call(userProfileData) !== '[object Array]') {
        for (var i = 0; i < Object.keys(userProfileData).length; i++) {
            key = Object.keys(userProfileData)[i];
            value = userProfileData[key];
            userData.push({
                data: value
            });
        }
    } else {
        userData = userProfileData;
    }

    if (!userData) return isValid;

    if (!segments || !segments.length) return true;

    if (GmCXt.user.role !== "user") return true;

    for (var i = 0; i < segments.length; i++) { // For each segment in the segmentation
        if (!GmCXt.isEmpty(segments[i].data)) {
            for (var j = 0; j < userData.length; j++) {
                if (userData[j].id && !GmCXt.isEmpty(userData[j].data) && parseInt(segments[i].id) === parseInt(userData[j].id)) {
                    isValid = false;
                    for (var k = 0; k < segments[i].data.length; k++) {
                        if (userData[j].data.includes(segments[i].data[k])) {
                            isValid = true;
                            break;
                        }
                    }
                } else if (!GmCXt.isDefined(userData[j].id) && !GmCXt.isEmpty(userData[j].data)) {
                    for (var k = 0; k < segments[i].data.length; k++) {
                        if (userData[j].data.includes(segments[i].data[k])) {
                            isValid = true;
                            break;
                        }
                    }
                }
            }
            if (!isValid) break;
        }
    }

    GmCXt.log(68, "Valid User Segments: ", isValid);
    return isValid;
};

GmCXt.getSegmentSetting = function(segmentId) {
    var segment = GmCXt.getSegmentById(segmentId);

    var segmentSettings, segmentSetting;
    if (!GmCXt.isEmpty(segment) && segment.settings) {
        segmentSettings = GmCXt.parseJSON(segment.settings);
        for (var key in segmentSettings) {
            if (segmentSettings.hasOwnProperty(key)) {
                if (segmentSettings[key] === 1) {
                    segmentSetting = key;
                    break;
                }
            }
        }
    }

    return segmentSetting;
};

GmCXt.checkGuidesBasedOnSegment = function(tours, cb, from) {

    if (!tours || !tours.length) {
        cb({});
        return;
    }

    var allSegment = [];
    var totalSegment = 0;
    var toursProcessed = 0;
    var segmentProcessed = 0;
    var validatedTours = [];

    var totalTours = tours.length;

    function checkTourSegment(s_id) {
        tours.forEach(function(tour) {

            GmCXt.log(68, "Check Segments in Tour: " + GmCXt.tourLog(tour));

            var isSegmentValid = false;
            var segments = tour.tour_settings.segment_groups;

            if(GmCXt.inArray(segments, s_id)){
                for (var i = 0; i < segments.length; i++) { // For each segmentation added
                    if (GmCXt.validatedSegments[segments[i]]) {
                        isSegmentValid = true;
                        break;
                    }
                }

                if (isSegmentValid && !GmCXt.inArray(tour.tour_id, validatedTours)) {

                    validatedTours.push(parseInt(tour.tour_id));

                    toursProcessed++;

                    GmCXt.log(68, "VALID Tour segments: " + GmCXt.tourLog(tour));

                }

                if (segments.length > 0) {

                    var segmentSetting = GmCXt.getSegmentSetting(segments[0]);

                    switch (segmentSetting) {
                        case 'show_guides_user_in_segment':
                            if (isSegmentValid) cb(tour); // Show the guide if user is part of the segment and `activeSegmentSetting` is "show_guides_user_in_segment"
                            break;
                        case 'hide_guides_user_in_segment':
                            if (!isSegmentValid) cb(tour); // Hide the guide if user is part of the segment and `activeSegmentSetting` is "hide_guides_user_in_segment"
                            break;
                        case 'show_guides_user_not_in_segment':
                            if (!isSegmentValid) cb(tour); // Show the guide if user is not part of the segment and `activeSegmentSetting` is "show_guides_user_not_in_segment"
                            break;
                        default:
                            if (isSegmentValid) cb(tour); // Default case
                            break;
                    }
                } 
            }
        });
    }

    // segment rules call back 
    function segmentRuleCallBack(r) {

        segmentProcessed++;

        if (GmCXt.isTrue(r.valid)) {
            GmCXt.validatedSegments[r.segmentId] = true;
            GmCXt.log(68, "Validat Segment ", r);
        }

        if (toursProcessed !== totalTours) {
            checkTourSegment(r.segmentId);
        }

        // if all segment is validated and no tour is processed
        if (segmentProcessed === totalSegment && toursProcessed === 0) {
            cb({});
        }

    }

    // get all segments from the tour 
    tours.forEach(function(tour, i) {
        if (tour.tour_settings.segment_groups.length > 0) {
            allSegment.push(tour.tour_settings.segment_groups);
        } else {
            validatedTours.push(parseInt(tour.tour_id));
            toursProcessed++;
            cb(tour);
        }
    });

    var flattenAllsegment = allSegment.reduce(function(seg, val) {
        return seg.concat(val);
    }, []);

    allSegment = GmCXt.removeDuplicates(flattenAllsegment);
    totalSegment = allSegment.length;

    allSegment.forEach(function(segmentId, i) {

        GmCXt.log(68, "Validating Segment: ", segmentId);
        var segment = GmCXt.getSegmentById(segmentId);

        //if role based segments inside a segment group are not in user.profile, Invalidate those segment groups
        if (segment && !GmCXt.areUserSegmentsValid(segment.segments, segmentId)) {

            GmCXt.log(68, "Invalid User Segments: ", segmentId);
            segmentRuleCallBack({
                valid: false,
                segmentId: segmentId
            });
        } else if (GmCXt.validatedSegments[segmentId] && (segment && !segment.rule_check)) {
            //re-eval seg rules only if On page click option is selected
            segmentRuleCallBack({
                valid: true,
                segmentId: segmentId
            });
        } else {
            var rules = (segment && segment.rules && segment.rules.length) ? GmCXt.parseJSON(segment.rules) : [];
            var title = segment ? segment.title : "Segment not found";

            if (GmCXt.validatedSegments[segmentId]) {
                delete GmCXt.validatedSegments[segmentId];
            }

            var data = {
                rules: rules,
                tour: {
                    tour_id: segmentId,
                    tour_settings: {},
                    tour_title: title
                },
                timeoutVal: GmCXt.t.ruleTimeOut10s,
                timeout: GmCXt.t.ruleTimeOut10s,
                cb: segmentRuleCallBack,
                isTour: true,
                initiator: from,
                segmentId: segmentId
            };

            GmCXt.ruleEngine.queue(data);
        }

    });
};

GmCXt.takeScreenshot = function() {
    var promise = new Promise(function(resolve, reject) {
        if (GmCXt.isElectron()) {
            var _electron = require('electron').remote;
            _electron.getCurrentWindow().capturePage().then(function(img) {
                resolve(img.toDataURL());
            });
        } else if (GmCXt.isExtension()) {
            var m = {
                action: "mgPlayerJSTest_action:capture_browser_screen"
            };
            GmCXt.sendMessageToBackgroundService(m, function(resp) {
                resolve(resp.imgSrc);
            });
        } else {
            resolve(0);
        }
    });
    return promise;
};

GmCXt.triggerForOtherFunctions = function(id, ev) {
    switch (id) {
        case "mgPlayerJSTest_play_step_popup_drag":
        case "mgPlayerJSTest_play-step-popup-drag-icon":

            break;
        case "mgPlayerJSTest_play-step-audio-off":
            if (GmCXt.previewStepPopupInstance) {
                GmCXt.previewStepPopupInstance.setOnAudioMode();
            }
            break;
        case "mgPlayerJSTest_play-step-audio-on":
            if (GmCXt.previewStepPopupInstance) {
                GmCXt.previewStepPopupInstance.setOffAudioMode();
            }
            break;
    }
};

GmCXt.checkAndCallClick = function(target, ev) {
    if (GmCXt.isIDinGuidePlayList(target.id)) {
        if (ev.type === "mousedown") {
            GmCXt.tourPlayerI.triggerMyGuideClickMouseDown(ev);
        }
        GmCXt.tourPlayerI.triggerMyGuideClick(target.id, ev);
    } else if (GmCXt.isIDinOtherList(target.id)) {
        GmCXt.triggerForOtherFunctions(target.id, ev);
    } else if (GmCXt.checkMyGuideClass(target.className)) {
        GmCXt.checkAndCallClick(target.parentElement, ev);
    }
};

GmCXt.checkForSVGInstance = function(target) {
    var retTarget = target;
    if (target instanceof SVGElement) {
        retTarget = GmCXt.checkForSVGInstance(target.parentNode);
    }
    return retTarget;
};

GmCXt.registerClickListner = function(e) {
    var target = GmCXt.checkForSVGInstance(e.target);
    if (target && GmCXt.checkMyGuideClass(target.className)) {
        GmCXt.checkAndCallClick(target, e);
        if (GmCXt.playerI && GmCXt.playerI.automate) {
            GmCXt.checkSkipStepForTracking();
        }
    }
};

GmCXt.isIDinOtherList = function(id) {
    var retVal = false;
    var idList = ["mgPlayerJSTest_play_step_popup_drag", "mgPlayerJSTest_play-step-popup-drag-icon", "mgPlayerJSTest_play-step-audio-off",
        "mgPlayerJSTest_play-step-audio-on"
    ];

    if (GmCXt.inArrayString(id, idList)) {
        retVal = true;
    }

    return retVal;
};

GmCXt.isIDinGuidePlayList = function(id) {
    var retVal = false;
    var idList = ["mgPlayerJSTest_play_step_pause_classic", "mgPlayerJSTest_play_step_next", "mgPlayerJSTest_play_step_next_classic",
        "mgPlayerJSTest_play_step_prev", "mgPlayerJSTest_play_step_prev_classic", "mgPlayerJSTest_play_step_popup_close",
        "mgPlayerJSTest_play_step_pause", "mgPlayerJSTest_play_step_next_done", "mgPlayerJSTest_play_step_next_done_classic",
        "mgPlayerJSTest_play_step_popup_edit",
        "mgPlayerJSTest_play-step-popup-close-svg", "mgPlayerJSTest_play-step-popup-edit-icon",
        "mgPlayerJSTest_play-step-pause-svg"
    ];

    if (GmCXt.inArrayString(id, idList)) {
        retVal = true;
    }

    return retVal;
};

GmCXt.tooltipTitle = function(os, pEle) {
    var tTitleCss = "<div class='mgPlayerJSTest_tooltip-title-css'><style type='text/css'>" +
        "." + pEle + " p:first-child {" + "color: " + os.popupDesign.current.stepTitleColor + " !important; " +
        "font-family: " + os.popupDesign.current.stepTitleFontFamily + " !important; " +
        "font-size: " + os.popupDesign.current.stepTitleFontSize + " !important; " +
        "font-weight: " + os.popupDesign.current.stepTitleFontWeight + " !important; " +
        "padding-bottom: 10px !important;" +
        "}" +
        "</style></div>";

    return mg$("html").append(tTitleCss);
};

GmCXt.tooltipPopupCss = function(os, customEle) {
    var popUpCSS = "<div class='mgPlayerJSTest_tooltip-popup-css'><style type='text/css'>" +
        customEle + ".smarttip-guidance-msg-top:before {" +
        "border-top-color:" + os.popupDesign.current.bgColor + " !important;" +
        "}" +
        customEle + ".smarttip-guidance-msg-top:after {" +
        "border-top-color:" + os.popupDesign.current.borderColor + " !important;" +
        "}" +
        customEle + ".smarttip-guidance-msg-right:before {" +
        "border-right-color:" + os.popupDesign.current.bgColor + " !important;" +
        "}" +
        customEle + ".smarttip-guidance-msg-right:after {" +
        "border-right-color:" + os.popupDesign.current.borderColor + " !important;" +
        "}" +
        customEle + ".smarttip-guidance-msg-bottom:before {" +
        "border-bottom-color:" + os.popupDesign.current.bgColor + " !important;" +
        "}" +
        customEle + ".smarttip-guidance-msg-bottom:after {" +
        "border-bottom-color:" + os.popupDesign.current.borderColor + " !important;" +
        "}" +
        customEle + ".smarttip-guidance-msg-left:before {" +
        "border-left-color:" + os.popupDesign.current.bgColor + " !important;" +
        "}" +
        customEle + ".smarttip-guidance-msg-left:after {" +
        "border-left-color:" + os.popupDesign.current.borderColor + " !important;" +
        "}" +
        customEle + ".smarttip-guidance-msg-center:before {" +
        "border-left-color:" + os.popupDesign.current.bgColor + " !important;" +
        "}" +
        customEle + ".smarttip-guidance-msg-center:after {" +
        "border-left-color:" + os.popupDesign.current.borderColor + " !important;" +
        "}" +
        "</style></div>";

    return mg$("html").append(popUpCSS);
};

GmCXt.tooltipTheme = function(os, customEle) {
    var isTooltipTheme = os.tooltipTheme;

    var tObj = {
        'tooltipBgColor': '',
        'tooltipDescColor': '',
        'tooltipDescFfamily': '',
        'tooltipDescFsize': '',
        'tooltipBorderC': '',
        'tooltipBorderW': '',
        'tooltipBorderRadius': '',
        'tooltipMwidth': '',
        'tooltipWidth': '',
        'tooltipPaddingTop': '',
        'tooltipPaddingBottom': '',
        'tooltipPaddingLeft': '',
        'tooltipPaddingRight': ''
    };

    if (isTooltipTheme) {
        tObj.tooltipBgColor = "background:" + os.popupDesign.current.bgColor + " !important; box-shadow: rgb(0 0 0 / 50%) 0 0 10px -2px !important;";
        tObj.tooltipDescColor = "color:" + os.popupDesign.current.stepDescColor + " !important; ";
        tObj.tooltipDescFfamily = ("font-family:" + os.popupDesign.current.stepDesFontFamily + " !important; ").replace(/'/g, "\"");
        tObj.tooltipDescFsize = "font-size:" + os.popupDesign.current.stepDesFontSize + " !important; ";
        tObj.tooltipBorderC = "border-color:" + os.popupDesign.current.borderColor + " !important; ";
        tObj.tooltipBorderW = "border-width:" + os.popupDesign.current.borderWidth + "px !important; ";
        tObj.tooltipBorderRadius = "border-radius:" + os.popupDesign.current.borderRadius + "px !important; ";
        tObj.tooltipMwidth = "max-width:" + os.stepPopupWidth + "px !important; ";
        tObj.tooltipWidth = "width:" + os.stepPopupWidth + "px !important; padding: 15px 15px 5px 15px !important; white-space: normal !important; line-height: initial !important;";
        tObj.tooltipPaddingTop = "padding-top:" + os.popupDesign.current.padding.top + "px !important; ";
        tObj.tooltipPaddingBottom = "padding-bottom:" + os.popupDesign.current.padding.bottom + "px !important; ";
        tObj.tooltipPaddingLeft = "padding-left:" + os.popupDesign.current.padding.left + "px !important; ";
        tObj.tooltipPaddingRight = "padding-right:" + os.popupDesign.current.padding.right + "px !important; ";

        GmCXt.tooltipPopupCss(os, customEle);
        GmCXt.tooltipTitle(os, 'smarttip-msg-inner');
    } else {
        tObj.tooltipBorderC = "border-color:" + os.tooltipColor + " !important; ";

        mg$(".mgPlayerJSTest_tooltip-popup-css").remove();
        mg$(".mgPlayerJSTest_tooltip-title-css").remove();
    }

    return tObj;
};

GmCXt.addCSSRules = function(arr, tag) {
    arr.push(GmCXt.CLASSES, GmCXt.NOT_CLASSES, GmCXt.ATTRIBUTES, GmCXt.NOT_ATTRIBUTES);

    var tagArr = ['INPUT', 'SELECT', 'BUTTON'];
    if (tagArr.includes(tag)) {
        arr.push(GmCXt.DISABLED, GmCXt.NOT_DISABLED);
    }

    return arr;
};

GmCXt.getOptionsForSelectElRule = function(rule) {
    var element = null;

    if (rule.element) {
        element = rule.element;
    }

    var tagName = '';
    if (element) {
        tagName = element.meta.tagName;
        if (element.selector && element.selector.js) {
            var selector = element.selector.js[0].toLowerCase();
        }
    }

    var conditionsArr = [GmCXt.EXISTS, GmCXt.NOT_EXISTS, GmCXt.VISIBLE, GmCXt.NOT_VISIBLE];
    var defaultCondition = '';
    var value = '';

    if (tagName === "INPUT") {
        if ((selector.indexOf("radio")) > -1) {

            conditionsArr.push(GmCXt.SELECTED, GmCXt.NOT_SELECTED);
            defaultCondition = GmCXt.SELECTED;

        } else if ((selector.indexOf("checkbox")) > -1) {

            conditionsArr.push(GmCXt.CHECKED, GmCXt.NOT_CHECKED);
            defaultCondition = GmCXt.CHECKED;

        }
    }

    var elementText = rule.value.trim();
    if (GmCXt.isEmpty(elementText)) {
        if (!GmCXt.isEmpty(element.targetInfo) && element.targetInfo.text) {
            elementText = element.targetInfo.text.trim();
        } else {
            elementText = !GmCXt.isEmpty(element.meta.textPropertyValue) ? element.meta.textPropertyValue.trim().substring(0, GmCXt.ruleTextLimit).trim() : "";
        }
    }

    if (elementText) {
        value = elementText;
        conditionsArr.push(GmCXt.TXT_EQUALS, GmCXt.NOT_TXT, GmCXt.TXT_CONTAINS, GmCXt.TXT_MATCHES);

        var numeric = elementText.match(/\d+/g);
        if (numeric) {
            conditionsArr.push(GmCXt.GREAT_THAN, GmCXt.LESS_THAN);
        }

        if (GmCXt.isEmpty(defaultCondition))
            defaultCondition = GmCXt.TXT_EQUALS;
    }

    GmCXt.addCSSRules(conditionsArr, tagName);

    return {
        conditionsArr: conditionsArr,
        defaultCondition: defaultCondition || GmCXt.EXISTS,
        value: value.trim()
    };
};

GmCXt.showRuleInfo = function(condition) {
    var infoRequired = [GmCXt.TXT_MATCHES, GmCXt.CLASSES, GmCXt.ATTRIBUTES, GmCXt.DAY_OF_WEEK, GmCXt.FIX_TIME, GmCXt.DATE_RANGE, GmCXt.IS_VALID];
    return infoRequired.includes(condition);
};

GmCXt.getGuidanceMessage = function(condition) {
    var html = '';
    switch (condition) {
        case GmCXt.TXT_MATCHES:
            html = GmCXt.label.rule_textMatches;
            break;
        case GmCXt.CLASSES:
            html = GmCXt.label.rule_classes;
            break;
        case GmCXt.ATTRIBUTES:
            html = GmCXt.label.rule_attributes;
            break;
        case GmCXt.DAY_OF_WEEK:
            html = GmCXt.label.rule_dayOfWeek;
            break;
        case GmCXt.FIX_TIME:
            html = GmCXt.label.rule_fixTime;
            break;
        case GmCXt.DATE_RANGE:
            html = GmCXt.label.rule_dateRange;
            break;
        case GmCXt.IS_VALID:
            html = GmCXt.label.rule_isValid;
            break;
    }
    return html;
};

GmCXt.getVariableValue = function(name) {

    var variables = [];

    variables = GmCXt.getVariableData();

    for (var i = 0; i < variables.length; i++) {
        if (variables[i].name === name) {
            return variables[i].value || '';
        }
    }

    return '';
};

GmCXt.defaultTourUrls = function(u) {
    if (GmCXt.isEmpty(u) || GmCXt.isDefaultIcon(u)) {
        return true;
    } else {
        return false;
    }
};

GmCXt.stringUsesVariable = function(str) {
    return (str.includes('{{') && str.includes('}}'));
};

GmCXt.replaceVariableWithValue = function(str) {
    var variables = GmCXt.getVariableData();
    if (GmCXt.stringUsesVariable(str)) {
        var isValid = false;
        for (var i = 0; i < variables.length; i++) {
            var regex = new RegExp('\{\{(?:\\s+)?(' + RegExp.escape(variables[i].name) + ')(?:\\s+)?\}\}', "g");
            isValid = regex.test(str);
            if (isValid && variables[i].value) {
                str = str.replace(regex, variables[i].value);
            }
        }
    }
    return str;
};

GmCXt.replaceVariableInText = function(str) {
    var regex = new RegExp('\{\{(?:\\s+)?(.+?)(?:\\s+)?\}\}', "g");
    var isValid = false;
    isValid = regex.test(str);
    if (isValid) {
        str = str.replace(regex, '').replace(/\s\s+/g, ' ');
    }
    return str;
};

GmCXt.blockMcKessonIFrame = function(frame) {
    if (GmCXt.isMcKesson() && frame.name === "dieCommFrame" && frame.id === 'IFrame') {
        return true;
    } else if(GmCXt.isMcKesson() && frame && frame.src && frame.src.contains('SpinSciSnap__AgentaSnap')) {
        return true;
    } else {
        return false;
    }
};

GmCXt.variableRuleExistInGuide = function(rules) {
    for (var k = 0, l = rules.length; k < l; k++) {
        if (rules[k].type === 'Variables') {
            return true;
        }
    }
    return false;
};

GmCXt.updateZIndex = function(zIndex, add) {
    if (zIndex) {
        var updateBy = add ? 1 : -1;
        return (parseInt(zIndex) + updateBy).toString();
    }
    return "";
};

GmCXt.blockMcKessonIFrame = function(frame) {
    if (GmCXt.isMcKesson() && frame.name === "dieCommFrame" && frame.id === 'IFrame') {
        return true;
    } else if (GmCXt.isMcKesson() && frame && frame.src && frame.src.includes('SpinSciSnap__AgentaSnap')) {
        return true;
    } else {
        return false;
    }
};

GmCXt.skipTags = function(he) {
    if (GmCXt.isSvgTag(he.tagName)) {

        he = he.parentNode;

        while (he && he.parentNode && GmCXt.isSvgTag(he.tagName)) {
            he = he.parentNode;
        }
    }

    if (GmCXt.checkSalesForceSite()) {
        if (he.tagName === 'LIGHTNING-PRIMITIVE-ICON') {
            he = he.parentNode;
        }

        var parent = he.parentNode;
        if (parent && he.tagName === 'BUTTON' &&
            (parent.tagName === 'LIGHTNING-BUTTON-ICON' || parent.tagName === 'LIGHTNING-BUTTON')) {
            he = parent;
        }
    }
    return he;
};

GmCXt.validateUrl = function(url) {

    var expression = /^(?:(?:https?|ftp):\/\/)?(?:[\w-]+\.)+[a-z]{2,}(?::\d{2,5})?(?:\/\S*)?$/i;
    if (expression.test(url)) {
        return true;
    } else {
        return false;
    }
};

GmCXt.trackElNotFound = function(d) {

    GmCXt.log(27, "track Element Not Found");

    return; // Stop "mi_rule_enhancement" events temporary for MG-25171

    // if (window.self === window.top) {
    //     GmCXt.trackerV1.trackElNotFound(d);
    // } else {
    //     GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:track_element_not_found', d);
    // }
};

GmCXt.onPopupRerender = function() {
    if (mg$('#mgPlayerJSTest_popup-reload').length > 0) {
        var forceClose = !GmCXt.playerI.testAutomation;
        GmCXt.confirmTourClose(forceClose);
    }
};

GmCXt.concatHTMLStringWithSpace = function(str) {
    str = str.split('</p>').join(' ');
    str = str.split('</div>').join(' ');
    str = str.split('</li>').join(' ');
    str = mg$('<span />').html(str).text().trim();
    return str;
};

GmCXt.removeHtmlFromText = function(text) {
    return text ? String(text).replace(/<[^>]+>/gm, '') : '';
};

GmCXt.getSurveyCompletedData = function(isNotif) {
    return GmCXt.storage().get(['surveyCompleted'])
        .then(function(st) {
            var tours = [];
            if (GmCXt.isAnonymousUser()) {
                tours = st.surveyCompleted || {};
            } else {
                var userSettings = GmCXt.user.settings || {};
                tours = userSettings.surveyCompleted || {};
            }
            return tours;
        });
};

GmCXt.resetElTracker = function() {
    if (window.self === window.top) {
        GmCXt.sendMessageToAllWindows('mgPlayerJSTest_action:reset_dom_tracker');
    }
};

GmCXt.resetElTrackerVariable = function() {
    if (!GmCXt.isEmpty(GmCXt.domSelectorTracker) && !GmCXt.isEmpty(GmCXt.domSelectorTracker[GmCXt.id])) {
        // Reset tracker
        GmCXt.domSelectorTracker = {};
    }
};

GmCXt.logElTracker = function() {
    if (window.self === window.top) {
        GmCXt.logTrackerData = false;
        GmCXt.sendMessageToAllWindows('mgPlayerJSTest_action:request_dom_tracker_info');
    }
};

GmCXt.shareDomTrackerInfo = function() {
    if (window.self !== window.top) {
        if (GmCXt.isEmpty(GmCXt.domSelectorTracker)) {
            GmCXt.domSelectorTracker[GmCXt.id] = {};
        }
        GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:send_dom_tracker_info', GmCXt.domSelectorTracker);
    } else {
        GmCXt.combineDomTrackerData();
    }
};

GmCXt.combineDomTrackerData = function(info) {
    if (window.self === window.top) {
        var finder = {};
        var query = {};
        var totalFinder = 0;
        var totalQuery = 0;
        var iFrameTally = 0;

        if (info) {
            GmCXt.domSelectorTracker = Object.assign(GmCXt.domSelectorTracker, info);
        }

        GmCXt.timeout(function() {
            if (!GmCXt.logTrackerData) {
                for (var i in GmCXt.domSelectorTracker) {
                    if (!GmCXt.isEmpty(GmCXt.domSelectorTracker[i])) {
                        iFrameTally++;
                        var iframeInfo = GmCXt.domSelectorTracker[i];
                        for (var key in iframeInfo) {
                            var elInfo = iframeInfo[key];

                            finder[key] = elInfo.finder;
                            totalFinder += elInfo.finder;

                            query[key] = elInfo.query;
                            totalQuery += elInfo.query;
                        }
                    }
                }
                var css = "color:#00a6d9;";
                console.log("%cNo. of iframes Searched –", css, iFrameTally);
                console.log("%cTotal calls to dom.finder() –", css, totalFinder);
                console.log("%cCalls to dom.finder() segregated by element –", css, finder);
                console.log("%cTotal calls to dom.query() –", css, totalQuery);
                console.log("%cCalls to dom.query() segregated by element –", css, query);

                GmCXt.logTrackerData = true;
            }
        }, 1500);
    }
};

GmCXt.handleLinkClickEvent = function(e) {
    var url = e.currentTarget.href;
    var mediaType = GmCXt.getURLMediaType(url);

    if (mediaType) {
        e.preventDefault();
        e.stopPropagation();
        e.stopImmediatePropagation();
        if (mediaType === "pdf") {
            GmCXt.sendMessageToApp("mgPlayerJSTest_action:open_pdf", e.target.href);
        } else {
            GmCXt.sendMessageToApp("mgPlayerJSTest_action:open_video_player", e.target.href);
        }
    } else if (GmCXt.isElectron()) {
        e.preventDefault();
        e.stopPropagation();
        e.stopImmediatePropagation();
        GmCXt.redirectLinkToBrowser(e);
    }

    GmCXt.storage().set({
        'linkClickOnStep': url
    });
};

GmCXt.isStepInlineBranch = function(s) {
    var retVal = false;
    if (s && s.step_settings && GmCXt.isTrue(s.step_settings.inlineBranch)) {
        retVal = true;
    }
    return retVal;
};

GmCXt.getVariableData = function() {
    var varData = false;

    if (!GmCXt.isEmpty(GmCXt.appList) && GmCXt.activeAppId && GmCXt.appList['app:' + GmCXt.activeAppId]) {
        var appId = GmCXt.getBaseAppId();
        varData = GmCXt.appList['app:' + appId].settings.variables;
    }

    return varData;
};

GmCXt.workdayAutoClick = function(index) {
    if (GmCXt.playerI) {
        var editIcon = "[data-automation-id='actionImage']";
        var el = mg$(editIcon)[index];
        mg$(el).trigger("click");
    }
};

GmCXt.captureScreenForFeedback = function(mailTo) {
    if (mailTo) {
        GmCXt.mailTo = mailTo;
    }

    GmCXt.takeScreenshot().then(function(imageSrc) {

        if (GmCXt.isEmpty(imageSrc)) {
            mg$(".mgPlayerJSTest_feedback-overlay-svg-error").show();
            mg$(".mgPlayerJSTest_feedback-re-edit-btn").hide();
            mg$("#mg-feedback-screenshot-check").removeAttr("checked");
        } else {
            mg$(".mgPlayerJSTest_feedback-overlay-svg-error").hide();
            mg$(".mgPlayerJSTest_feedback-re-edit-btn").show();
        }

        var img = mg$("#mg-feedback-screenshot-image");
        img.attr('src', imageSrc);
        GmCXt.feedbackImgSrc = imageSrc;
        GmCXt.showFeedBackToolbar();
    });
};

GmCXt.showFeedBackToolbar = function() {
    mg$("#mg-feedback-container-wrapper").show();
    GmCXt.showFeedBackPopup();
};

GmCXt.showFeedBackPopup = function() {
    mg$('DIV#mg-feedback-selector-toolbar').hide();
    mg$('DIV#mg-feedback-popup').show();
};

GmCXt.showFeedBackSelectorToolbar = function() {
    mg$('DIV#mg-feedback-popup').hide();
    mg$('DIV#mg-feedback-selector-toolbar').show();
};

GmCXt.onEditScreenshotClick = function() {
    GmCXt.showFeedBackSelectorToolbar();
};

GmCXt.onClickFeedbackHighlightArea = function() {
    var div = document.getElementById('mgPlayerJSTest_highlight');
    GmCXt.feedbackMarkArea(div);
};

GmCXt.onClickFeedbackHideArea = function() {
    var div = document.getElementById('mgPlayerJSTest_blackout');
    GmCXt.feedbackMarkArea(div, true);
};

GmCXt.onClickFeedbackEditDone = function() {
    mg$('DIV#mg-feedback-selector-toolbar').hide();
    GmCXt.captureScreenForFeedback();
};

GmCXt.feedbackMarkArea = function(div, hide) {
    var toolbar = mg$('DIV#mg-feedback-selector-toolbar');
    toolbar.hide();

    var wrapper = document.getElementById("mg-feedback-flex-container");
    wrapper.style.cursor = 'crosshair';
    wrapper.style.background = 'transparent';

    var x1 = 0,
        y1 = 0,
        x2 = 0,
        y2 = 0;

    function reCalc() {
        var x3 = Math.min(x1, x2);
        var x4 = Math.max(x1, x2);
        var y3 = Math.min(y1, y2);
        var y4 = Math.max(y1, y2);
        div.style.left = x3 + 'px';
        div.style.top = y3 + 'px';
        div.style.width = x4 - x3 + 'px';
        div.style.height = y4 - y3 + 'px';
    }

    var onmousedown = function(e) {
        e.preventDefault();
        div.style.display = 'block';
        x1 = e.clientX;
        y1 = e.clientY;
        reCalc();
    };

    var onmousemove = function(e) {
        x2 = e.clientX;
        y2 = e.clientY;
        reCalc();
    };

    var onmouseup = function(e) {
        var el = {
            id: 'r_' + Math.floor(Math.random() * 1000),
            element: {
                position: {
                    top: y1,
                    left: x1,
                    height: y2 - y1,
                    width: x2 - x1
                }
            }
        };
        div.style.display = 'none';
        wrapper.style.cursor = 'default';

        if (hide) {
            if (!GmCXt.sfHideElements) {
                GmCXt.sfHideElements = [];
            }
            GmCXt.sfHideElements.push(el);
            GmCXt.drawArea(GmCXt.sfHideElements, 'blackout-feedback');
        } else {
            if (!GmCXt.sfMarkElements) {
                GmCXt.sfMarkElements = [];
            }
            GmCXt.sfMarkElements.push(el);
            GmCXt.drawArea(GmCXt.sfMarkElements, 'highlight');
        }

        wrapper.style.background = '#26273b33';
        toolbar.show();

        wrapper.removeEventListener('mousedown', onmousedown);
        wrapper.removeEventListener('mouseup', onmouseup);
        wrapper.removeEventListener('mousemove', onmousemove);
    };

    wrapper.addEventListener('mousedown', onmousedown);
    wrapper.addEventListener('mouseup', onmouseup);
    wrapper.addEventListener('mousemove', onmousemove);
    div.onmouseup = onmouseup;
};

GmCXt.drawArea = function(arr, className) {
    var elems = arr;
    mg$('DIV.mgPlayerJSTest_selector-' + className).remove();

    for (var i = 0; i < elems.length && elems[i].id; i++) {
        var el = elems[i].element.position;

        var closeBtn = '<div class="mgPlayerJSTest_close-area mgPlayerJSTest_' + className + '-close" id=' + elems[i].id + '><div class="close-text">&times;</div></div>';
        var blackoutEl = mg$('<div class="mgPlayerJSTest_selector-' + className + '" id="mgPlayerJSTest_selector-' + className + '-' + elems[i].id + '">' +
                closeBtn +
                '</div>')
            .appendTo('#mg-feedback-flex-container')
            .css({
                'width': el.width,
                'height': el.height,
                'left': el.left,
                'top': el.top
            });
    }

    mg$("DIV.mgPlayerJSTest_" + className + "-close").on('click', function(e) {
        var oArr = [];
        arr.forEach(function(el, i) {
            if (el.id !== e.currentTarget.id) oArr.push(el);
        });
        arr = oArr;
        mg$("#mgPlayerJSTest_selector-" + className + "-" + e.currentTarget.id).remove();
    });
};

GmCXt.sendFeedback = function() {
    var feedbackText = document.getElementById("mg-feedback").value;
    var emailBody = {};

    if (GmCXt.isEmpty(feedbackText)) {
        var option = {
            description: GmCXt.label.feedbackRequired,
            button1: GmCXt.label.ok
        };
        GmCXt.alertV2(option).show();
        return;
    }

    emailBody.feedbackText = feedbackText;

    if (GmCXt.mailTo) {
        emailBody.mailTo = GmCXt.mailTo;
    }

    if (GmCXt.user) {
        var userInfo = {
            email: GmCXt.user.user_email,
            firstName: GmCXt.user.first_name,
            lastName: GmCXt.user.last_name
        };
        emailBody.userInfo = JSON.stringify(userInfo);
    }

    if (mg$('#mg-feedback-screenshot-check')[0].checked) {
        emailBody.imgSrc = GmCXt.feedbackImgSrc;
    }

    GmCXt.clearFeedBackView();

    GmCXt.api.sendFeedbackEmail(emailBody);
};

GmCXt.clearFeedBackView = function() {
    mg$("#mg-feedback-container-wrapper").remove();
    mg$('.mgPlayerJSTest_selector-highlight').remove();
    GmCXt.sfMarkElements = [];
    mg$('.mgPlayerJSTest_selector-blackout-feedback').remove();
    GmCXt.sfHideElements = [];
    GmCXt.mailTo = '';
    GmCXt.openAppPanel();
};

GmCXt.numberOfSameTail = function(id, ps) {
    let counter = 0;
    if (ps && ps.length) {
        for (var i = 0; i < ps.length; i++) {
            if (parseInt(ps[i].tail) === parseInt(id)) {
                counter++;
            }
        }
    }
    return counter;
};

GmCXt.getExcludedDomainList = function() {
    var excludedDomains = [];
    var os = GmCXt.getOrgSettings();
    if (os && os.excludeDomains && !GmCXt.isEmpty(os.excludeDomains)) {
        excludedDomains = os.excludeDomains;
    }
    return excludedDomains;
};

GmCXt.isExcludeDomain = function() {
    var isEx = false;
    if (GmCXt.urlParts && GmCXt.urlParts.fullUrl && GmCXt.isPlayer()) {
        var url = GmCXt.urlParts.host + GmCXt.urlParts.pathname;
        var excludeDomainList = GmCXt.getExcludedDomainList();

        if (excludeDomainList) {
            for (var x = 0; x < excludeDomainList.length; x++) {
                if (url && url.toLowerCase().includes(GmCXt.trimAndLowerCaseURL(excludeDomainList[x]))) {
                    isEx = true;
                    break;
                }
            }
        }
    }
    return isEx;
};

GmCXt.getStepPosFromPs = function(t, sId) {
    var pos = "";
    var PS = t.tour_settings.play_structure;

    for (var i = 0; i < PS.length; i++) {
        if (PS[i].id === sId) {
            pos = i + 1;
            break;
        }
    }

    return pos;
};

GmCXt.isValueInArray = function(array, keyToFind, valueToFind) {
    return array.some(function(obj) {
        return obj[keyToFind] === valueToFind;
    });
};

GmCXt.checkDomainInPublishedEnv = function(pubEnv) {
    var domainInPublishedEnv = false;
    if (GmCXt.isDefined(pubEnv)) {
        var domainEnv = GmCXt.getAppEnvByDomain();
        if (pubEnv.includes(domainEnv)) {
            domainInPublishedEnv = true;
        }
    } else {
        domainInPublishedEnv = true;
    }
    return domainInPublishedEnv;
};

GmCXt.updateNumericKeys = function(key) {
    var lastKey = key.slice(-1);
    var numKey = parseInt(lastKey);

    var specialCharArr = [")", "!", "@", "#", "$", "%", "^", "&", "*", "("];

    if (!isNaN(numKey)) {
        return key.slice(0, -1) + specialCharArr[numKey];
    } else {
        return key;
    }
};

GmCXt.addHttpIfMissing = function(url) {
    if (!url.trim().startsWith('http://') && !url.trim().startsWith('https://')) {
        url = 'https://' + url;
    }
    return url;
};

GmCXt.isShortcutExist = function(inputKey, restrictedKeys) {
    var lastKey = inputKey[inputKey.length - 1];

    if (inputKey.indexOf('shift+' + lastKey) === 0) {
        if (restrictedKeys && restrictedKeys.indexOf(inputKey) !== -1) {
            return true;
        }
    }

    return false;
};

GmCXt.checkScheduleTime = function(tour) {
    if (tour.tour_settings && tour.tour_settings.visibilitySettings && tour.tour_settings.visibilitytimestamp) {
        var tourTs = tour.tour_settings.visibilitytimestamp;
        var currentTS = Date.now();
        if (parseInt(currentTS) < tourTs) {
            return false;
        } else {
            return true;
        }
    } else {
        return true;
    }
};

GmCXt.filterScheduleTours = function(tours) {
    var tours = tours.filter(function(tour) {
        if (GmCXt.checkScheduleTime(tour)) {
            return tour;
        }
    });

    return tours;
};

GmCXt.getCombinedDateFromTimestamp = function(timestamp) {
    // Create a new Date object with the timestamp in milliseconds
    var date = new Date(timestamp * 1000);

    // Extract the day, month, and year components from the Date object
    var day = date.getDate().toString().padStart(2, '0');
    var month = (date.getMonth() + 1).toString().padStart(2, '0'); // Month is zero-based, so we add 1
    var year = date.getFullYear();

    // Combine the components into a date string in the format "YYYY-MM-DD"
    var combinedDate = `${year}-${month}-${day}`;

    // Return the combined date string
    return combinedDate;
};

GmCXt.compareDates = function(dateStr1, dateStr2) {
    // Split the date strings into arrays of year, month, and day components
    var date1Components = dateStr1.split('-').map(Number);
    var date2Components = dateStr2.split('-').map(Number);

    // Compare year first
    if (date1Components[0] < date2Components[0]) {
        return -1;
    } else if (date1Components[0] > date2Components[0]) {
        return 1;
    }

    // If years are equal, compare months
    if (date1Components[1] < date2Components[1]) {
        return -1;
    } else if (date1Components[1] > date2Components[1]) {
        return 1;
    }

    // If months are equal, compare days
    if (date1Components[2] < date2Components[2]) {
        return -1;
    } else if (date1Components[2] > date2Components[2]) {
        return 1;
    }

    // If all components are equal, return 0
    return 0;
};

GmCXt.compareTimes = function(timeStr1, timeStr2) {
    // Split the time strings into hours and minutes
    var hoursMinutes1 = timeStr1.split(':');
    var hoursMinutes2 = timeStr2.split(':');
    var hours1 = parseInt(hoursMinutes1[0], 10);
    var hours2 = parseInt(hoursMinutes2[0], 10);
    var minutes1 = parseInt(hoursMinutes1[1], 10);
    var minutes2 = parseInt(hoursMinutes2[1], 10);

    // Compare hours
    if (hours1 < hours2) {
        return -1;
    } else if (hours1 > hours2) {
        return 1;
    } else {
        // Hours are equal, compare minutes
        if (minutes1 < minutes2) {
            return -1;
        } else if (minutes1 > minutes2) {
            return 1;
        } else {
            // Minutes are equal
            return 0;
        }
    }
};

GmCXt.changeImageUpload = function(cb) {
    var fileElement = mg$('#mgPlayerJSTest_upload-image-input');

    if (!fileElement.length) {
        var fileElement = mg$('<input />');
        fileElement.attr('type', 'file');
        fileElement.attr('id', 'mgPlayerJSTest_upload-image-input');
        fileElement.attr('accept', 'image/png,image/jpeg,image/jpg');
        fileElement.css('display', 'none');
        fileElement.appendTo('body');
    } else {
        fileElement.val('');
    }

    fileElement.off('change').on('change', function(e) {

        if (e.target.files[0]) {
            var fileSize = e.target.files[0].size;
            if (fileSize > 5240000) {
                GmCXt.stepReq.data.stepCount = parseInt(GmCXt.stepReq.data.stepCount) - 1;
                GmCXt.stepReq.data.order = parseInt(GmCXt.stepReq.data.order) - 1;
                var option = {
                    title: 'Large Image',
                    description: 'Please upload image having size less than 5MB',
                    callback: GmCXt.createNextStep,
                    type: ''
                };
                GmCXt.alert(option).show();
                return;
            }
        } else {
            return;
        }

        var reader = new FileReader();

        reader.onload = function(event) {
            fileElement.val('');
            if(cb) cb(event.target.result); 
        };

        reader.readAsDataURL(e.target.files[0]);
    });

    fileElement.click();
};
GmCXt.lastUserAction = 0;
GmCXt.iframeCount = 0;
GmCXt.prevEnv = [];
GmCXt.storagePrefix = GmCXt.conf.appName + "_";
GmCXt.ruleOpsUILabels = {};

GmCXt.timeout = function(fn, t) {
	return setTimeout(fn, t);
};

GmCXt.trackerUtil = {
	guidePayload: [],
	trackPI: false,
	enableTracking: false,
	ePayload: {},
	ttPayload: {},
	page_url: "",
	featureTracking: false,
	pageTracking: false
};
GmCXt.guidePlayTracker = {};

GmCXt.STEP_TYPE_INLINE = 'inline';
GmCXt.STEP_TYPE_WEB_INLINE = 'web_inline';
GmCXt.STEP_TYPE_MESSAGE = 'message';
GmCXt.STEP_TYPE_IMAGE = 'image';
GmCXt.STEP_BEACON_TYPE = 'BEACON';
GmCXt.STEP_TYPE_EXTERNAL_AUTOMATION = 'external_automation_step';
GmCXt.CAPTURE_SCREEN_STEP = 'capture-screen-step';
GmCXt.UPLOAD_IMAGE_STEP = 'upload-image-step';
GmCXt.STEP_TYPE_VIDEO = 'video';
GmCXt.STEP_TYPE_SMART_TIP = 'smartTip';
GmCXt.STEP_TYPE_AUTOMATION = 'automation';

GmCXt.STEP_TYPE_GUIDE = 'guide';
GmCXt.STEP_TYPE_BRANCH = 'branch';
GmCXt.STEP_TYPE_SURVEY = 'survey';
GmCXt.STEP_TYPE_TRANSPORT = 'transport';
GmCXt.ANALYTICS_EVENT_CHAIN_ID = '';
GmCXt.INSIGHTS_EVENT_CHAIN_ID = '';
GmCXt.STEP_TEXT_SLIDE_TYPE = 'textSlide';
GmCXt.STEP_TYPE_ERROR_HANDLER = 'errorHandler';
GmCXt.isLogoutTrackApi = false;


GmCXt.STEP_TYPE_TAG = 'tag';

GmCXt.t_ = {
	hr1: 60 * 60 * 1000,
	hr8: 8 * 60 * 60 * 1000,
	hr24: 24 * 60 * 60 * 1000,
	hr24inSec: 24 * 60 * 60,
	hr12inSec: 12 * 60 * 60,
	min30: 30 * 60 * 1000,
	min15: 15 * 60 * 1000,
	min10_s: 10 * 60,
	min5_s: 5 * 60,
	min5: 300000,
	min4: 240000,
	min2_s: 2 * 60,
	min1_s: 60,
	min1: 60000,
	sec15: 15000,
	sec10: 10000,
	sec5: 5000,
	sec4: 4000,
	sec3: 3000,
	sec2: 2000,
	sec1: 1000,
	ms25: 2500,
	ms15: 1500,
	ms8: 800,
	ms5: 500,
	ms3: 300,
	ms2: 200,
	ms1: 100
};
GmCXt.t = {
	sync24: GmCXt.t_.hr24,
	notifExp24: GmCXt.t_.hr24,
	syncSegment: GmCXt.t_.hr24,
	tracking24hr: GmCXt.t_.hr24inSec,
	tracking12hr: GmCXt.t_.hr12inSec,
	tracking8hr: GmCXt.t_.hr8,

	cdnExp: GmCXt.t_.hr1,
	openSso: GmCXt.t_.hr1,
	snoozeNotif: GmCXt.t_.hr1,
	refreshBrandLogo: GmCXt.t_.hr1,
	refreshWidget: GmCXt.t_.hr1,

	pageTrackWait: GmCXt.t_.min30,

	workflowIdle: GmCXt.t_.min15,
	workflowSync: GmCXt.t_.min15,
	clickSync: GmCXt.t_.min15,

	playerSync: GmCXt.t_.min5_s,

	fileStackExp: GmCXt.t_.min5,
	elLookupTime5m: GmCXt.t_.min5,
	autoRelogin: GmCXt.t_.min5,

	autoWaitTime: GmCXt.t_.min4,
	createStepTimeout: GmCXt.t_.min4,

	trackerSync: GmCXt.t_.min2_s,

	creatorSync: GmCXt.t_.min1_s,
	trackerInt: GmCXt.t_.min1,
	autoEndTime: GmCXt.t_.min1,

	trackerInt2: GmCXt.t_.sec15,
	highlighterDefautWT: GmCXt.t_.sec15,
	tooltipTimeout: GmCXt.t_.sec15,
	elLookupTime15s: GmCXt.t_.sec15,
	elLookupTime10s: GmCXt.t_.sec10,
	stepMTimeout: GmCXt.t_.sec15,

	waitForNotifications: GmCXt.t_.sec10,
	guideAutoWatch: GmCXt.t_.sec10,
	ruleTimeOut10s: GmCXt.t_.sec10,
	stepITimeout: GmCXt.t_.sec10,
	findElTimeout: GmCXt.t_.sec10,
	branchDecision_domRule: GmCXt.t_.sec10,
	branchDecision_domRule_quickBranch: GmCXt.t_.sec4,

	branchDecision: GmCXt.t_.sec2,
	branchDecision_errorHandler: GmCXt.t_.sec1,
	stepComplition: GmCXt.t_.sec4,

	drag: GmCXt.t_.sec2,
	checkVariable: GmCXt.t_.sec2,
	loginEdCast: GmCXt.t_.sec2,

	branchDecisionInterval_domRule: GmCXt.t_.sec1,
	plsWaitMsg: GmCXt.t_.sec1,
	stopRecorder: GmCXt.t_.sec1,

	toastMsg: GmCXt.t_.ms25,
	variableTimeout: GmCXt.t_.ms25,
	ruleTimeOut25ms: GmCXt.t_.ms25,

	eventGuideCompleteAuto: GmCXt.t_.ms15,
	tragetFrameWT: GmCXt.t_.ms15,
	ruleTimeOut15ms: GmCXt.t_.ms15,
	currentPageSpinner: GmCXt.t_.ms15,
	bgmsg: GmCXt.t_.ms15,

	screenrecording: GmCXt.t_.ms8,

	branchDecisionInterval: GmCXt.t_.ms5,
	msgToframes: GmCXt.t_.ms5,
	desktopCapture: GmCXt.t_.ms5,

	appPanel: GmCXt.t_.ms3,
	hiteTooltip: GmCXt.t_.ms2,
	addTooltipEvent: GmCXt.t_.ms1
};

GmCXt._location = function() {
	return window && window.location;
};

GmCXt.isWestpacOneUI = function() {
	if (window &&
		window.location &&
		window.location.href.indexOf('about:blank') !== -1 &&
		parent.window &&
		parent.window.location &&
		parent.window.location.href.indexOf('ui.westpac.com.au') !== -1) {
		return true;
	} else {
		return false;
	}
};

GmCXt.parseJSON__ = function(str) {
	try {
		if (typeof str === 'object') {
			return str;
		} else if (str === '' || str === 'AS' ||
			str === 'na' || str === '[object Object]' ||
			str === undefined || str === 'undefined'
		) {
			return {};
		} else {
			var ob = JSON.parse(str);
			if (typeof ob === 'string') ob = JSON.parse(ob);

			return ob;
		}

	} catch (e) {
		return null;
	}
};

GmCXt.isEmpty = function(val) {
	if (typeof val === "boolean" || typeof val === "number") return false; // for 'false' & zero

	if (!val) return true;

	if (typeof val === "object" && val.constructor === Object) return Object.keys(val).length ? false : true;

	if (typeof val === "object" && val.constructor === Array) return val.length ? false : true;

	if (typeof val === 'string' && !val.trim()) return true;

	return false;
};

GmCXt.isDefined = function(val) {
	if (val === undefined || val === "undefined")
		return false;
	else
		return true;
};

GmCXt.updateGlobalUser = function(user) {
	if (!user) {
		return;
	}

	if (!GmCXt.isBackgroundPage) {
		GmCXt.user = GmCXt.validateDataModel(user, GmCXt.model.user);
	} else {
		GmCXt.user = user;
	}
	if (user.organization) {
		GmCXt.updateGlobalOrg(user.organization);
	}
};

GmCXt.updateGlobalOrg = function(org) {
	if (!org) {
		return;
	}

	if (!GmCXt.isBackgroundPage) {
		GmCXt.organization = GmCXt.validateDataModel(org, GmCXt.model.organization);
	} else {
		GmCXt.organization = org;
	}
	delete GmCXt.organization.applications;
};

GmCXt.checkTimeStampUpdate = function(){
	var apiUrl = GmCXt.conf.publicTimestampUrl + GmCXt.organization.organization_id + ".json?"+ new Date();
	
	fetch(apiUrl).then(function(response) {
		if (response.status === 200) {
			response.json()
				.then(function(r) {
					var lastRefresh = r.last_updated_time;
					if (lastRefresh != GmCXt.refreshTime ) {
						GmCXt.playerIntervalValidator();
					}
					GmCXt.lastTimeStampSync = GmCXt.getCurrentTimeInSec();
					GmCXt.msgToApp('mgPlayerJSTest_action:update_timestamp_sync_time', r, senderTabId);

				}).catch(function(error) {
					GmCXt.log(1, "ERROR: Public Timestamp fetch failed", error);
				});

		} else {
			GmCXt.log(1, "ERROR: Public Timestamp fetch failed" + response.status);
		}
	});
};

GmCXt.playerIntervalValidator = function() {

	GmCXt.log(70, "GET TIMESTAMP at " + new Date());

	GmCXt.getJsonTimeStamp().then(function(r) {
		var lastRefresh = r.last_updated_time;

		GmCXt.log(70, "LAST REFRESH from server " + lastRefresh);

		if (lastRefresh != GmCXt.refreshTime ) {
			GmCXt.log(70, "START PLAYER DATA REFRESH");

			GmCXt.msgToApp('mgPlayerJSTest_action:refresh_player', r, senderTabId);
		} else {
			GmCXt.log(70, "NO UPDATE FOUND " + new Date());
		}

		GmCXt.refreshTime = r.last_updated_time;
	});
};

GmCXt.creatorIntervalValidator = function(boxUrl) {

	GmCXt.log(70, "GET TIMESTAMP at " + new Date());

	GmCXt.getModifiedObjects().then(function(updates) {
		if (updates.length) {
			GmCXt.msgToApp('mgPlayerJSTest_action:creator_updates', {
				updates: updates,
				refreshTime: GmCXt.creatorRefreshTime
			}, senderTabId);
		}
	}).catch(function(err) {
		GmCXt.log(1, "ERROR: Creator sync failed", err);
	});
};

GmCXt.processLastActionTime = function() {

	var cTime = GmCXt.getCurrentTimeInSec();

	if (GmCXt.inPlayer && (cTime - GmCXt.lastTimeStampSync) > GmCXt.t.playerSync) {
		GmCXt.log(70, "TRIGGER PLAYER UPDATE " + new Date());
		GmCXt.checkTimeStampUpdate();
	}

	if (GmCXt.isEnt() && (cTime - GmCXt.creatorRefreshTime) > GmCXt.t.creatorSync) {
		GmCXt.log(70, "TRIGGER CREATOR UPDATE " + new Date());
		GmCXt.creatorIntervalValidator();
	}

	GmCXt.log(45, "SEND Traker event " + new Date());
	GmCXt.trackerV1.sendEvents();

	GmCXt.log(70, "LAST USER ACTION TIME: " + new Date());
};

GmCXt.startCreatorUpdateInterval = function() {

	var callSync = function() {
		GmCXt.getModifiedObjects().then(function(updates) {
			if (updates.length) {
				GmCXt.msgToApp('mgPlayerJSTest_action:creator_updates', {
					updates: updates,
					refreshTime: GmCXt.creatorRefreshTime
				}, senderTabId);
			}
		}).catch(function(err) {
			GmCXt.log(1, "ERROR: Creator sync failed", err);
		});
	};

	GmCXt.creatorRefreshTime = GmCXt.refreshTime || GmCXt.getCurrentTimeInSec();

	if (GmCXt.creatorInterval) {
		return;
	}

	GmCXt.creatorInterval = setInterval(callSync, GmCXt.t.creatorSync);
};

GmCXt.sendMsgToAudioFrame = function(type, data) {
	data = data || {};
	data.config = GmCXt.conf;
	
	if (GmCXt.playerI || GmCXt.playerI === null) {
		data.playerInstance = GmCXt.playerI;
	}

	var w = mg$(".mgPlayerJSTest_play-step-audio-iframe");	
	if (w.length) {	
		var message = {	
			action: type,	
			data: data	
		};	
		message = GmCXt.formatMsg(message);	
		w.get(0).contentWindow.postMessage(message, "*");	
	}
};

GmCXt.sendMessageToApp = function(type, data) {
	data = data || {};
	data.config = GmCXt.conf;
	if (GmCXt.playerI) {
		data.playerInstance = GmCXt.playerI;
	}
	if ((GmCXt.initialization && GmCXt.initialization.sidePanel === true) ||
		type.indexOf('receive_lxp_storage') > -1) {

		GmCXt.sendMessageToAppIn(type, data);
	} else {
		GmCXt.timeout(function() {
			GmCXt.sendMessageToApp(type, data);
		}, GmCXt.t_.sec1);
	}
};

GmCXt.sendMessageToAppIn = function(type, data) {	
	var appWindow = mg$(".mgPlayerJSTest_app");	
	if (appWindow.length) {	
		var message = {	
			action: type,	
			data: data	
		};	
		message = GmCXt.formatMsg(message);	
		appWindow.get(0).contentWindow.postMessage(message, "*");	
	}	
};

GmCXt.msgToApp = function(action, data, tabId) {
	if (GmCXt.isBackgroundPage === true) {
		GmCXt.sendMessageToPanel(action, data, tabId);

	} else if (GmCXt.isSidePanelApp) {
		var m = {
			action: action,
			data: data
		};
		// Inside sidePanel iframe
		window.postMessage(GmCXt.formatMsg(m), "*");
	} else if (window.top === window.self) {
		GmCXt.sendMessageToApp(action, data);
	} else if (GmCXt.isStepFrame) {
		var message = {
			action: action,
			data: data
		};
		GmCXt.sendToParentWindow(message);
	} 
};

GmCXt.sendMessageToPanel = function(action, data, senderTabId) {

	data = (data === undefined || data === null || !data) ? {} : data;

	var ob = {
		action: action,
		data: data
	};

	chrome.tabs.query({
		active: true,
		highlighted: true
	}, function(tabs) {
		var activeTab = false;
		for (var i = 0; i < tabs.length; i++) {
			var tab = tabs[i];
			if (tab.id === senderTabId) {
				activeTab = true;
			}
		}

		// This below condition to send an message to source tab even it is not highlighted
		// This will solve image loader issue in case of create/update steps
		if (!activeTab && senderTabId) {
			GmCXt.msgToTab(senderTabId, ob);
		}

		if (GmCXt.FT.creatorApp && tabs.length && !activeTab) {
			var tab = tabs[0];
			senderTabId = tab.id;
			GmCXt.updateVideoUploadStatus(senderTabId, {
				data: {
					operation: "get"
				}
			});
		}

		if (GmCXt.FT.isPlayer && tabs.length && !activeTab) {
			var tab = tabs[0];
			senderTabId = tab.id;
		}

		GmCXt.msgToTab(senderTabId, ob);
	});
};

GmCXt.getCdnSignature = function(sendMessage) {

	if (GmCXt.waitForCdnSignature) return true;

	GmCXt.waitForCdnSignature = true;

	if (sendMessage) {

		GmCXt.msgToApp('mgPlayerJSTest_action:get_cdn_signature_from_app');

	} else { //this is used in Background.js for player and cretor sync
		GmCXt.callGetCdnSignature({
			organization_id: GmCXt.organization.organization_id
		}).then(function(response) {

			var r = response.data;
			if (r && r.cdn_signature && r.cdn_signature_expiry) {

				if (GmCXt.user) {
					GmCXt.user.cdn_signature = r.cdn_signature;
					GmCXt.user.cdn_signature_expiry = r.cdn_signature_expiry;
				}
			}
		});
	}
};

GmCXt.getCurrentTimeInMilSec = function() {
	return new Date().getTime();
};

GmCXt.getCurrentTimeInSec = function() {
	return Math.floor(new Date().getTime() / 1000);
};

GmCXt.getModifiedObjects = function(boxUrl) {

	return new Promise(function(resolve, reject) {
		var timestamp = GmCXt.creatorRefreshTime;
		var apiUrl = GmCXt.conf.webServiceUrl + 'organization/modified/objects?';
		GmCXt.log(61, "Check for updates. From timestamp: " + timestamp);

		var data = {
			timestamp: timestamp,
			organization_id: GmCXt.organization.organization_id
		};

		var headers = {
			'accesstoken': GmCXt.user.accesstoken,
			'Content-Type': 'application/json'
		};

		GmCXt.creatorRefreshTime = GmCXt.getCurrentTimeInSec();

		fetch(apiUrl + new URLSearchParams(data), {
			headers: headers
		}).then(function(response) {

			if (response.status === 200) {

				response.json()
					.then(function(result) {

						if (result.error) {

							GmCXt.creatorRefreshTime = timestamp;

							if (result.code === 1003 || result.code === 2004) {
								GmCXt.msgToApp('mgPlayerJSTest_action:logout_user');
							} else if (result.code === 1007) {
								GmCXt.getAccessToken().then(function(r) {
									GmCXt.saveToken(r);
								});
							}
							reject(result);
						} else if (result.data && result.data.objects) {
							var updates = result.data.objects;
							resolve(updates);
						} else {
							reject();
						}
					}).catch(function(error) {
						reject();
					});

			} else {
				reject();
			}
		}).catch(function(e) {
			GmCXt.log(1, "Creator could not refresh", e);
		});
	});
};

GmCXt.getJsonTimeStamp = function(boxUrl) {

	return new Promise(function(resolve, reject) {

		var apiCall = function(url) {

			fetch(url)
				.then(function(response) {

					if (response.status === 200) {
						response.json()
							.then(function(d) {
								resolve(d);
							}).catch(function(error) {
								GmCXt.log(1, "ERROR: Timestamp fetch failed", error);
							});
					} else {
						GmCXt.log(1, "ERROR: Timestamp fetch failed" + response.status);
						GmCXt.waitForCdnSignature = false;
						GmCXt.getCdnSignature();
					}
				});
		};

		var apiUrl = "";

		if (GmCXt.onPrem() && boxUrl) {
			apiUrl = boxUrl + '/json/timestamp.json';
		} else if (GmCXt.organization && !GmCXt.isEmpty(GmCXt.organization)) {
			apiUrl = GmCXt.conf.cdnStorage + GmCXt.organization.bucket +
				'/json/timestamp.json' + GmCXt.user.cdn_signature;
		}

		if (!GmCXt.isEmpty(apiUrl)) apiCall(apiUrl);
	});
};

GmCXt.encode = function(args) {
	var data = '';
	if (args) {
		var argcount = 0;
		for (var key in args) {
			if (args.hasOwnProperty(key)) {
				if (argcount++) data += '&';
				data += encodeURIComponent(key) + '=' + encodeURIComponent(args[key]);
			}
		}
	}
	return data;
};

GmCXt.getOrgKeyFromJwToken = function(myGuideOrgKey) {
	try {

		var splitMyguideKey = myGuideOrgKey.split('.')[1];
		var jwJson = atob(splitMyguideKey);
		var jwOrgKey = jwJson ? GmCXt.parseJSON(jwJson).org_key : "";
		return jwOrgKey;

	} catch (e) {
		return {};
	}
};

GmCXt.parseJSON = function(str) {
	try {
		if (typeof str === 'object') {
			return str;
		} else if (str === '' || str === 'AS' ||
			str === 'na' || str === '[object Object]' ||
			str === undefined || str === 'undefined'
		) {
			return {};
		} else {
			return JSON.parse(str);
		}

	} catch (e) {
		return {};
	}
};

GmCXt.sendMessageToTabs = function(data) {
	chrome.tabs.query({}, function(tabs) {
		tabs.forEach(function(tab) {
			GmCXt.msgToTab(tab.id, data);
		});
	});
};

GmCXt.msgToTab = function(tabId, m) {
	chrome.tabs.sendMessage(tabId, GmCXt.formatMsg(m));
};

GmCXt.formatMsg = function(message) {

	if ((GmCXt.isWestpac() && message.action.indexOf("MyGuideReporting") !== -1)) {
		return message;
	}

	if (message.data) {
		message.mgdata = message.data;
		delete message.data;
	}
	return JSON.stringify(message);
};

GmCXt.getStepFromSteps = function(stepId, steps) {

	var s = false;
	if (stepId) {
		for (var i = 0; i < steps.length; i++) {
			if (parseInt(steps[i].step_id) === parseInt(stepId)) {
				s = steps[i];
				break;
			}
		}
	}
	return s;
};

GmCXt.getStartpointStepFromSteps = function(stepId, steps) {
	var s = false;
	if (stepId) {
		for (var i = 0; i < steps.length; i++) {
			if (parseInt(steps[i].step_id) === parseInt(stepId) && steps[i].step_settings.startPoint) {
				s = steps[i];
				break;
			}
		}
	}
	return s;
};

GmCXt.removePSStepId = function(stepId, PS, index) {
	for (var i = 0; i < PS.length; i++) {
		if (PS[i].tail === stepId) {
			PS[i].tail = PS[index].tail;
			break;
		}
	}
	PS.splice(index, 1);
	return PS;
};

GmCXt.repairPlayStructure = function(PS, steps) {

	for (var i = 0; i < PS.length; i++) {
		var step = GmCXt.getStepFromSteps(PS[i].id, steps);
		if (step) {
			continue;
		} else {
			PS = GmCXt.removePSStepId(PS[i].id, PS, i);
			PS = GmCXt.repairPlayStructure(PS, steps);
			break;
		}
	}

	return PS;
};

GmCXt.isAutomationRunning = function() {
	return (GmCXt.auto && GmCXt.auto.isAutomationRunning());
};

GmCXt.getAutomatedCurrentTour = function() {
	return (GmCXt.auto && GmCXt.auto.getAutomatedCurrentTour());
};

GmCXt.isAutomationStepRunning = function() {
	if (GmCXt.playerI) {
		var step = GmCXt.getStepFromPlayerI(GmCXt.playerI.currentStepId);
		return GmCXt.isAutomationStep(step);
	}
	return false;
};

GmCXt.callApi = function(data, api) {

	return new Promise(function(resolve, reject) {

		var msgId = Math.floor(Math.random() * 100000);
		function chromeListener(event) {
			var m = GmCXt.parseJSON(event);
			m = GmCXt.convertMgdata(m);

			if (m && m.action === 'mgPlayerJSTest_action:call_api_response') {
				if (m.data && m.data.msgId === msgId) {
					window.removeEventListener('message', chromeListener);
					resolve(m.data.items);
				}
			}

			return true;
		}

		var d = {
			msgId: msgId,
			option: data,
			api: api
		};

		if (GmCXt.isBackgroundPage === true) {
			chrome.runtime.onMessage.addListener(chromeListener);
			GmCXt.sendMessageToPanel('mgPlayerJSTest_action:call_api', d, senderTabId);

		} else if (GmCXt.isSidePanelApp) {
			var mm = {
				action: 'mgPlayerJSTest_action:call_api',
				data: d
			};
			// Inside sidePanel iframe
			window.postMessage(GmCXt.formatMsg(mm), "*");
		} else {
			
			GmCXt.sendMessageToApp('mgPlayerJSTest_action:call_api', d);
			GmCXt.globalMsgData[msgId] = {};
			GmCXt.globalMsgData[msgId].cb = resolve;
		}
	});
};

GmCXt.cdnPlayer = GmCXt.conf.provider === 'Cdn';
GmCXt.apiPlayer = GmCXt.conf.provider === 'playerApi';
GmCXt.inPlayer = GmCXt.apiPlayer || GmCXt.cdnPlayer;

GmCXt.convertMgdata = function(m) {
	if (m.action && m.action.indexOf("init_sfdc_env") !== -1) {
		return m;
	} else if (GmCXt.isWestpac() && m.action && m.action.indexOf("MyGuideReporting") !== -1) {
		return m;
	}
	m.data = m.mgdata;
	return m;
};

GmCXt.inArray = function(id, array) {
	if (array.indexOf(parseInt(id)) !== -1) return true;
	else return false;
};

GmCXt.inArrayString = function(str, array) {
	if (array.indexOf(str) !== -1) return true;
	else return false;
};

GmCXt.createDeepCopy = function(data) {
	if (GmCXt.isDefined(data) && !GmCXt.isEmpty(data)) {
		return JSON.parse(JSON.stringify(data));
	}
};

GmCXt.getBrowserUrl = function(i) {

	var url = '';

	if (GmCXt.browserApp === 'Safari') {
		url = safari.extension.baseURI + i;
	} else if (GmCXt.browserApp === 'firefox' || GmCXt.isClientJs()) {
		url = chrome.extension.getURL(i);
	} else {
		url = chrome.runtime.getURL(i);
	}

	return url;
};

GmCXt.getAccessToken = function() {
	var params = {
		url: "user/token?",
		headers: {
			"Content-Type": "application/json",
			RefreshToken: GmCXt.user.refreshtoken
		},
		data: {
			force_update: true,
			mg_source_name: GmCXt.conf.appConfig.customer
		},
		method: 'GET'
	};
	return GmCXt.xhr(params);
};

GmCXt.saveToken = function(r) {

	if (r && r.accesstoken) {

		GmCXt.user.accesstoken = r.accesstoken;
		GmCXt.user.refreshtoken = r.refreshtoken;

		if (GmCXt.isDefined(r.app_access)) {
			GmCXt.user.app_access = r.app_access;
		}

		if (GmCXt.isDefined(r.profile)) {
			GmCXt.user.profile = r.profile;
		}

		if (!GmCXt.isBackgroundPage) {

			GmCXt.getWidgetIcon().then(function(wUrl) {
				mg$(".mgPlayerJSTest_start-button img").attr('src', wUrl);
			});
		}

		GmCXt.msgToApp('mgPlayerJSTest_action:update_access_token', r, senderTabId);
	}
};

GmCXt.addStoragePrefix = function(key) {
	if (key.indexOf(GmCXt.storagePrefix) === -1) {
		key = GmCXt.storagePrefix + key;
	}
	return key;
};

GmCXt.removeStoragePrefix = function(key) {
	if (key.indexOf(GmCXt.storagePrefix) !== -1) {
		key = key.split(GmCXt.storagePrefix)[1];
	}
	return key;
};

GmCXt.getUUID = function() {
	var date = new Date().getTime();
	var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
		var randomNumber = (date + Math.random() * 16) % 16 | 0;
		date = Math.floor(date / 16);
		return (c == 'x' ? randomNumber : (randomNumber & 0x3 | 0x8)).toString(16);
	});
	return uuid;
};

GmCXt.categoryLog = function(c) {
	return "APP: " + c.application_id + " : [" + c.category_id + ", " + c.category_title + "] ";
};

GmCXt.tourLog = function(t) {
	return " [" + t.tour_id + ", " + t.tour_title + "] ";
};

GmCXt.stepLog = function(s, t) {
	return " [ step: " + s + ", tour: " + t + "] ";
};
GmCXt.isTrue = function(prop) {
	if (parseInt(prop) === 1 || prop === true) return true;
	else return false;
};

// Returns false if it could not update tour play structure
GmCXt.updateTourPlayStructure = function(data) {

	var stepObj = data.step;
	var prevStepData = data.prevStepData;

	GmCXt.log(54, "GmCXt.updateTourPlayStructure ", data);

	if (prevStepData && prevStepData.tour && prevStepData.tour.tour_settings &&
		prevStepData.tour.tour_settings.play_structure) {

		GmCXt.log(54, "GmCXt.updateTourPlayStructure check 1");

		var oldTail = null;
		var playStructure = prevStepData.tour.tour_settings.play_structure;

		if (playStructure.length > 0) {

			if (prevStepData.step_id) {

				for (var i = 0; i < playStructure.length; i++) {

					// Get the prevStepData.step_id from the plus node
					// Search for the step from that node

					if (playStructure[i].id === prevStepData.step_id) {

						if (GmCXt.checkForBranchVariationSteps(prevStepData)) {

							if (!playStructure[i].branch) {
								playStructure[i].branch = [];
							}

							var branchIndex = prevStepData.branch_index;

							if (playStructure[i].branch[branchIndex].tail && playStructure[i].branch[branchIndex].tail !== -1) {
								oldTail = playStructure[i].branch[branchIndex].tail;
							} else if (playStructure[i].branch[branchIndex].tail === -1) {
								for (var j = 0; j < playStructure[i].branch.length; j++) {
									if (playStructure[i].branch[j].tail === -1) {
										playStructure[i].branch[j].tail = stepObj.step_id;
									}
								}
							}
							playStructure[i].branch[branchIndex].tail = stepObj.step_id;

						} else {
							// Update the tail 
							if (playStructure[i].tail) {
								oldTail = playStructure[i].tail;
							}
							playStructure[i].tail = stepObj.step_id;
							break;
						}
					}
				}
			} else {
				oldTail = playStructure[0].id;
			}

		}

		var obj = {
			id: stepObj.step_id,
			tail: oldTail
		};

		var stepSettings = stepObj.step_settings;

		if (stepObj.step_type === GmCXt.STEP_TYPE_BRANCH) {
			obj.branch = [];
			obj.tail = null;
			for (var i = 0; i < stepSettings.branch.length; i++) {
				if (stepSettings.branch[i].tail) {
					obj.branch.push({
						tail: stepSettings.branch[i].tail
					});
				} else {
					obj.branch.push({
						tail: null
					});
				}
			}
		} else if (GmCXt.isTrue(stepObj.step_settings.inlineBranch) || stepObj.step_type === GmCXt.STEP_TYPE_ERROR_HANDLER) {
			obj.branch = [];
			obj.branch.push({
				tail: oldTail
			}, {
				tail: null
			});
			obj.tail = null;
		}

		if (prevStepData.step_id) {
			playStructure.push(obj);
		} else {
			playStructure.splice(0, 0, obj);
		}
		prevStepData.tour.tour_settings.play_structure = playStructure;

		data.prevStepData = prevStepData;

		return data;
	}

	return false;
};

// These labels are always in english
// "wb" prefix are all Worldbank labels
GmCXt.engLbls = {
	px: "px",
	Guide: "Guide",
	wbTitle: "Welcome to the iGuide Content Panel",
	wbDescription: "This panel provides users with an alternate way to view applicable iGuide learning tools such as step-by-step walk-throughs, slide demos, videos, etc",
	wbViewiGuideInfo: "View iGuide info",
	wbiGuideTools: "iGuide Tools",
	wbWalkThrus: "Walk-thrus & demos",
	wbTooltips: "Tooltips",
	wbVideos: "Videos",
	wbPopupNotification: "Pop-up notifications &",
	wbMessages: "messages",
	defaultTestMe: "TestMe",
	defaultShowMe: "ShowMe",
	defaultGuideMe: "GuideMe",
	defaultVLab: "TeachMe",
	defaultDoItForMe: "DoItForMe",
	testMe: "TestMe",
	showMe: "ShowMe",
	guideMe: "GuideMe",
	vLab: "TeachMe",
	doItForMe: "DoItForMe",
	microPlayer: "Mini Player",
	myGuides: "My Guides",
	powerHTML: "Power HTML",
	defaultNext: "Next",
	defaultBtnPrev: "Prev"
};

GmCXt.getPlayerLabels = function(lang) {
	var lab = GmCXt.playerLbls.en_US;

	if (lang) {
		lang = lang.replace("-", "_");

		if (GmCXt.playerLbls[lang]) {
			lab = GmCXt.playerLbls[lang];
		}
	}

	lab = GmCXt.mergeLabels(lab, GmCXt.engLbls);
	return lab;
};

GmCXt.getCreatorLabels = function(lang) {
	var lab = GmCXt.creatorLbls.en_US;

	if (lang) {
		lang = lang.replace("-", "_");

		if (GmCXt.creatorLbls[lang]) {
			lab = GmCXt.creatorLbls[lang];
		}
	}

	return lab;
};

GmCXt.mergeLabels = function(labels, lbs) {
	for (var attr in lbs) {
		labels[attr] = lbs[attr];
	}

	return labels;
};

GmCXt.setRuleOpsUILabels = function() {
    GmCXt.ruleOpsUILabels[GmCXt.EXISTS] = GmCXt.label.opExists;
    GmCXt.ruleOpsUILabels[GmCXt.NOT_EXISTS] = GmCXt.label.opNotExists;
    GmCXt.ruleOpsUILabels[GmCXt.EQUALS] = GmCXt.label.opEquals;
    GmCXt.ruleOpsUILabels[GmCXt.NOT_EQUAL] = GmCXt.label.opNotEquals;
    GmCXt.ruleOpsUILabels[GmCXt.TXT_EQUALS] = GmCXt.label.opTxEquals;
    GmCXt.ruleOpsUILabels[GmCXt.NOT_TXT] = GmCXt.label.opTxNotEquals;
    GmCXt.ruleOpsUILabels[GmCXt.CONTAINS] = GmCXt.label.opContains;
    GmCXt.ruleOpsUILabels[GmCXt.NOT_CONTAINS] = GmCXt.label.opNotContains;
    GmCXt.ruleOpsUILabels[GmCXt.STARTS_WITH] = GmCXt.label.opStWith;
    GmCXt.ruleOpsUILabels[GmCXt.ENDS_WITH] = GmCXt.label.opEndWith;
    GmCXt.ruleOpsUILabels[GmCXt.GREAT_THAN] = GmCXt.label.opGrThan;
    GmCXt.ruleOpsUILabels[GmCXt.LESS_THAN] = GmCXt.label.opLeThan;
    GmCXt.ruleOpsUILabels[GmCXt.TXT_MATCHES] = GmCXt.label.opTxMatch;
    GmCXt.ruleOpsUILabels[GmCXt.TXT_CONTAINS] = GmCXt.label.opTxContains;
    GmCXt.ruleOpsUILabels[GmCXt.ATTRIBUTES] = GmCXt.label.opAttrs;
    GmCXt.ruleOpsUILabels[GmCXt.NOT_ATTRIBUTES] = GmCXt.label.opNoAttrs;
    GmCXt.ruleOpsUILabels[GmCXt.CLASSES] = GmCXt.label.opClasses;
    GmCXt.ruleOpsUILabels[GmCXt.NOT_CLASSES] = GmCXt.label.opNoClasses;
    GmCXt.ruleOpsUILabels[GmCXt.SELECTED] = GmCXt.label.opSelect;
    GmCXt.ruleOpsUILabels[GmCXt.NOT_SELECTED] = GmCXt.label.opNoSelect;
    GmCXt.ruleOpsUILabels[GmCXt.CHECKED] = GmCXt.label.opChecked;
    GmCXt.ruleOpsUILabels[GmCXt.NOT_CHECKED] = GmCXt.label.opNoChecked;
    GmCXt.ruleOpsUILabels[GmCXt.DISABLED] = GmCXt.label.opDisabled;
    GmCXt.ruleOpsUILabels[GmCXt.NOT_DISABLED] = GmCXt.label.opNoDisable;
    GmCXt.ruleOpsUILabels[GmCXt.DAY_OF_WEEK] = GmCXt.label.opDayOfWeek;
    GmCXt.ruleOpsUILabels[GmCXt.FIX_TIME] = GmCXt.label.opFixTime;
    GmCXt.ruleOpsUILabels[GmCXt.DATE_RANGE] = GmCXt.label.opDateRange;
    GmCXt.ruleOpsUILabels[GmCXt.IS_VALID] = GmCXt.label.opIsValid;
	GmCXt.ruleOpsUILabels[GmCXt.VISIBLE] = GmCXt.label.opVisible;
	GmCXt.ruleOpsUILabels[GmCXt.NOT_VISIBLE] = GmCXt.label.opNotVisible;
};

GmCXt.getAllLabels = function(lang) {
	GmCXt.label = GmCXt.getPlayerLabels(lang);

	if (GmCXt.FT.creatorApp) {
		GmCXt.label = GmCXt.mergeLabels(GmCXt.label, GmCXt.getCreatorLabels(lang));
	}

	// to replace missing lang labels with eng lang labels
	if (lang !== "en_US" && lang !== "en-US") {
		var enLabels = GmCXt.getEngLabels();

		var lbl = Object.assign({}, enLabels, GmCXt.label);
		GmCXt.label = lbl;
	}

	GmCXt.setRuleOpsUILabels();

	return GmCXt.label;
};

GmCXt.getEngLabels = function() {
	var engLabels = GmCXt.getPlayerLabels('en_US');

	if (GmCXt.FT.creatorApp) {
		engLabels = GmCXt.mergeLabels(engLabels, GmCXt.getCreatorLabels('en_US'));
	}

	return engLabels;
};

GmCXt.checkForBranchVariationSteps = function(step) {
	if (step && (step.step_type === GmCXt.STEP_TYPE_BRANCH ||
			step.step_type === GmCXt.STEP_TYPE_ERROR_HANDLER ||
			GmCXt.isTrue(step.step_settings && step.step_settings.inlineBranch))) {
		return true;
	}
	return false;
};

GmCXt.convertWeeksToHours = function(w) {
	var h = parseFloat(w) * 7 * 24;
	return h;
};

GmCXt.getDatafromPanel = function() {

	return new Promise(function(resolve, reject) {

		function sendResponse(m) {
			if (m && m.action === 'mgPlayerJSTest_action:get_data_from_panel_response') {
				removeEventListener('message', chromeListener);
				resolve(m.data);
			}
		}

		function chromeListener(event) {
			var message = GmCXt.parseJSON(event);
			message = GmCXt.convertMgdata(message);

			sendResponse(message);
		}


		if (GmCXt.isBackgroundPage === true) {
			chrome.runtime.onMessage.addListener(chromeListener);
			GmCXt.sendMessageToPanel('mgPlayerJSTest_action:get_data_from_panel');
		} else {
			resolve(false);
		}

	});
};

//***************************** page tracking ***************************************//
GmCXt.startPageTracker = function() {

	if (GmCXt.pageVisit) {

		if (GmCXt.pageVisit.url === GmCXt.urlParts.fullUrl) {
			GmCXt.log(2, "Return on same page");
			return;
		} else {
			GmCXt.trackerV1.trackPageVisit();
		}
	}

	GmCXt.pageVisit = {
		url: GmCXt.urlParts.fullUrl,
		timeStarted: new Date().getTime(),
		userKey: GmCXt.user.user_key,
		pageLoadTime: GmCXt.pageLoadTime
	};

	var title = GmCXt.getDocTitle();
	if (title) {
		GmCXt.pageVisit.title = title.trim();
	}
	GmCXt.log(2, "Start new page", GmCXt.pageVisit);
};

//***************************** tooltip tracking ***************************************//
GmCXt.tooltipTrackingList = {};

GmCXt.setTooltipRenderInfo = function(tour, tid, sid, smartTip, url) {
	var stepKey = "step_" + sid;

	var currentTip = {
		tooltip_id: sid,
		tooltip_type: GmCXt.getTooltipName(smartTip.type),
		rendered: true,
		action_type: "",
		tooltip_play_instances: [],
		play_instance_id: GmCXt.getUUID(),
	};

	GmCXt.tooltipTrackingList[stepKey] = {
		track: false,
		tourId: tid,
		url: GmCXt.urlParts.fullUrl,
		ttDetails: currentTip,
		startTime: new Date().getTime(),
		screen_size: GmCXt.trackerV1.getScreenSize(),
		tour: tour
	};
};

GmCXt.updateTooltipActionInfo = function(tid, sid, smartTip, actionName) {

	if (window.self === window.top) {

		var stepKey = "step_" + sid;

		var currentTip = GmCXt.tooltipTrackingList[stepKey].ttDetails;

		var tour = GmCXt.tooltipTrackingList[stepKey].tour;
		//for power form send only 1 action, submit gets precedence over cancel
		if (currentTip.tooltip_type === 'power_html') {

			if (actionName === "cancel" && currentTip.action_type.length === 0) {
				currentTip.action_type = ['cancel'];
				GmCXt.tooltipTrackingList[stepKey].track = true;
			}

			if (actionName === "submit") {
				currentTip.action_type = ['submit'];
				GmCXt.tooltipTrackingList[stepKey].track = true;
			}

		} else if (actionName) {
			currentTip.action_type = [actionName];
			GmCXt.tooltipTrackingList[stepKey].track = true;
		}

		currentTip.tooltip_play_instances = [];
		currentTip.tooltip_play_instances.push({
			event_start_time: GmCXt.getCurrentTimeInMilSec(),
			event_end_time: GmCXt.getCurrentTimeInMilSec()
		});

		if (tour && tour.tour_settings.segment_groups) {
			currentTip.segment_details = GmCXt.getTourSegmentDetail(tour);
		}

		GmCXt.trackerV1.trackTooltips(currentTip);
	} else {

		var data = {
			tourId: tid,
			stepId: sid,
			smartTip: smartTip,
			actionName: actionName,
			tour: tour
		};
		var msg = "mgPlayerJSTest_action:update_tooltip_action_info";

		if (GmCXt.isSidePanelApp) {

			GmCXt.sendToParentWindow({
				action: msg,
				data: data
			});
		} else {
			GmCXt.sendMessageToTheTopWindow(msg, data);
		}
	}
};

GmCXt.resetTooltipTrackingInfo = function() {
	for (var stepKey in GmCXt.tooltipTrackingList) {
		GmCXt.tooltipTrackingList[stepKey].track = false;
	}
};
//***************************** guide play tracking ***************************************//

GmCXt.trackGuide = function() {

	GmCXt.log(33, 'Track Guide Play');
	GmCXt.trackerV1.trackGuidePlayEvent();
	GmCXt.guidePlayTracker = {};

	GmCXt.storage().set({
		'guide_play_event': {}
	});
};

GmCXt.getSource = function(i) {
	var s;
	switch (i) {
		case 'overlayTourPopup':
			s = 'push_notification';
			break;
		case 'beaconTour':
			s = 'beacon';
			break;
		case 'urlTour':
			s = 'url';
			break;
		case 'task_list':
			s = 'task_list';
			break;
		default:
			s = 'panel';
			break;
	}

	return s;
};

GmCXt.setGuidePlayTracker = function(tid) {
	var playMode = "mi_guide_play";

	if (GmCXt.playerI.automate && GmCXt.playerI.source !== "bot") {
		playMode = "mi_do_it_for_me";
	} else if (GmCXt.playerI.source === "bot") {
		playMode = "mi_bot_play";
	}

	var trackerObj = {
		trigger_source: GmCXt.getSource(GmCXt.playerI.origin),
		play_instance_id: GmCXt.getUUID(),
		is_new_user: false,
		event_start_time: new Date().getTime(),
		event_end_time: '',
		url: GmCXt.urlParts.fullUrl,
		steps_details: [],
		mode: playMode
	};

	trackerObj.guide_id = tid;
	trackerObj.guide_complete = 0;
	trackerObj.guide_open = GmCXt.playerI.guideOpened ? 1 : 0;

	if (GmCXt.playerI && GmCXt.playerI.taskObj && GmCXt.playerI.taskObj.taskId) {
		trackerObj.task_list_id = GmCXt.playerI.taskObj.taskId;
	}

	if (GmCXt.playerI && GmCXt.playerI.tour.tour_settings.segment_groups) {
		trackerObj.segment_details = GmCXt.getTourSegmentDetail(GmCXt.playerI.tour);
	}

	GmCXt.guidePlayTracker["tour:" + tid] = trackerObj;
};

GmCXt.isStepExists = function(sid, stepList) {

	var stepIndex;

	stepList.forEach(function(s, key) {
		if (parseInt(s.step_id) === parseInt(sid)) {
			stepIndex = key;
		}
	});

	return stepIndex;
};

GmCXt.trackStepEvent = function(step, error) {
	if (!GmCXt.guidePlayTracker["tour:" + step.tour_id]) GmCXt.setGuidePlayTracker(step.tour_id);

	var tourDetails = GmCXt.guidePlayTracker["tour:" + step.tour_id];

	var stepExistIndex = GmCXt.isStepExists(step.step_id, tourDetails.steps_details);

	if (stepExistIndex >= 0) {
		tourDetails.steps_details.splice(stepExistIndex, 1);
	}


	if (tourDetails.steps_details.length) {
		var length = tourDetails.steps_details.length;
		tourDetails.steps_details[length - 1].event_end_time = new Date().getTime();
	}

	var step_details = {
		step_id: step.step_id,
		step_index: parseInt(step.step_order),
		step_title: step.step_title,
		event_start_time: new Date().getTime(),
		event_end_time: new Date().getTime(),
		page_url: GmCXt.urlParts.fullUrl,
		error_type: error || "",
		audio_muted: GmCXt.stepAudioRunningStatus ? 0 : 1
	};

	if (tourDetails.mode === "mi_do_it_for_me") {
		if (step.step_settings.automation.hasHumanInteraction) {
			step_details.requires_human_intervention = 1;
			step_details.step_skipped = 0;
		} else {
			step_details.requires_human_intervention = 0;
			step_details.step_skipped = 0;
		}
	}

	if (tourDetails.mode === "mi_bot_play" &&
		step.step_settings.automation.enableBot &&
		step.step_settings.automation.botQuestion) {
		step_details.requires_human_intervention = 1;
		step_details.step_skipped = 0;
		if (step_details.defaultData && !GmCXt.isEmpty(step_details.defaultData)) {
			step_details.isAnswered = 1;
		} else {
			step_details.isAnswered = 0;
		}
		step_details.botQuestion = step.step_settings.automation.botQuestion;
	}

	GmCXt.guidePlayTracker["tour:" + step.tour_id].steps_details.push(step_details);
	GmCXt.storage().set({
		'guide_play_event': GmCXt.guidePlayTracker
	});
};

GmCXt.updateAudioStatusForTracking = function() {

	if (GmCXt.isEmpty(GmCXt.playerI)) return;

	var tourSteps = GmCXt.guidePlayTracker["tour:" + GmCXt.playerI.tour.tour_id].steps_details;

	for (var i = 0; i < tourSteps.length; i++) {
		var s = tourSteps[i];

		if (s.step_id === GmCXt.playerI.currentStepId) {
			s.audio_muted = GmCXt.stepAudioRunningStatus ? 0 : 1;
		}
	}
};

GmCXt.checkSkipStepForTracking = function() {

	if (GmCXt.isEmpty(GmCXt.playerI)) return;

	var stepId = GmCXt.playerI.currentStepId;

	var tourId = GmCXt.playerI.tour.tour_id;

	var tourDetails = GmCXt.guidePlayTracker["tour:" + tourId];

	var stepExistIndex = -1;

	if (tourDetails) {
		stepExistIndex = GmCXt.isStepExists(stepId, tourDetails.steps_details);
	}

	if (stepExistIndex >= 0) {
		tourDetails.steps_details[stepExistIndex].step_skipped = 1;
	}
};

GmCXt.getTourSegments = function(tour) {
	//for tours played from side panel
	if (tour.tour_settings.valid_segments) {
		return tour.tour_settings.valid_segments;
	} else {
		var tourSeg = tour.tour_settings.segment_groups;
		var validSegments = tourSeg.filter(function(s) {
			return GmCXt.validatedSegments[s];
		});

		return validSegments;
	}
};

//***************************** workflow tracking ***************************************//

GmCXt.concatLinkGuideStepsForTracking = function(allSteps, stepIndex, currentStepId, newSteps) {

	allSteps = allSteps.filter(function(step, i) {
		return step.step_id !== currentStepId;
	});

	var s = [stepIndex, 0].concat(newSteps);

	return allSteps.splice(s);
};

GmCXt.userActionEvents = function(step) {

	var settings = step.step_settings;

	var flag = false;

	if (settings.clickNext ||
		settings.onRightClickNext ||
		settings.onKeyupNext ||
		settings.onChangeNext
	) {
		flag = true;
	}

	return flag;

	// Tracking onPageClickNext event
	// Say there are 7 steps, 1, 2, 3, 4, 5, 6, 7 and a pause after step 2.
	// On click => write state in localStorage.
	// In new window => check state => add events on all steps after 2
	// In current window, add events on all steps after 2
};

GmCXt.limitStepAttributes = function(steps) {

	for (var i = 0; i < steps.length; i++) {
		steps[i] = {
			step_id: steps[i].step_id,
			step_title: steps[i].step_title,
			step_url: steps[i].step_url,
			step_settings: {
				element: steps[i].step_settings.element,
				highlightedArea: steps[i].step_settings.highlightedArea,
			}
		};
	}

	return steps;
};

GmCXt.filterInlineSteps = function(steps) {
	return steps.filter(function(step) {
		return GmCXt.limitStepAttributes((step.step_type === 'inline') && GmCXt.userActionEvents(step));
	});
};

GmCXt.isSvgTag = function(t) {
	if (t === 'svg' ||
		t === 'use' ||
		t === 'path' ||
		t === 'g') {
		return true;
	} else
		return false;
};

//*****************************for click tracking ***************************************//

GmCXt.clickedElSelector = function(he, obj) {

	var attr = GmCXt.getAttributeValues(he);
	obj.attributes = [];
	if (!GmCXt.isEmpty(attr)) {
		for (var prop in attr) {
			var value = attr[prop];
			switch (prop) {
				case 'text':
					if (obj.isRoot) {
						obj.text = attr.text || he.value.trim();
					}
					break;

				case 'class':
					var value = attr.class.split(" ").filter(Boolean);
					obj.class = value;
					break;

				case 'id':
					obj.id = attr.id;
					break;

				case 'tagName':
					obj.tagName = attr.tagName.toLowerCase();
					break;

				default:
					var attrObj = {};
					attrObj[prop] = attr[prop];
					obj.attributes.push(attrObj);
			}
		}
	}

	obj.index = mg$(he).index();

	return obj;
};

GmCXt.getDOMElementClicked = function(he) {

	if (!he) return {};

	he = GmCXt.skipTags(he);

	if (he) {

		var tempHe = he;
		var btnTags = ['A', 'BUTTON', 'INPUT'];

		while (tempHe.parentElement && tempHe.parentElement.childElementCount === 1) {
			// Go up till the outermost layer of an element (For clicks captured within the actual button/element)
			if (tempHe.tagName === 'BODY' || btnTags.includes(tempHe.tagName)) {
				break;
			}
			if ((tempHe.parentElement && tempHe.parentElement.childElementCount > 1) ||
				!tempHe.parentElement) {
				break;
			}
			tempHe = tempHe.parentElement;
			he = tempHe;
		}

		var obj = {
			isRoot: true,
		};

		var target = GmCXt.clickedElSelector(he, obj);

		var elLabel = target.text;
		target.isUniqueText = GmCXt.isUniqueText(he, elLabel);

		GmCXt.selectorTool = GmCXt.selector({
			cb: null,
			frame: {}
		});

		if (target.index > -1) {

			var clickJson = {
				element_object: target,
				element_label: elLabel,
				element_step_obj: '', // TODO: element
				event_start_time: new Date().getTime(),
				url: GmCXt.urlParts.fullUrl
			};

			return clickJson;
		}
	}
};

GmCXt.isUniqueText = function(he, text) {
	if (!text || text.length > 300)
		return false;

	text = text.replace(/\'/g, "\\'").replace(/\"/g, '\\"');

	try {
		var nodes = mg$(he.tagName + ":contains('" + text + "')");
	} catch (e) {
		return false;
	}

	if (!he.value || !he.value.trim()) {
		nodes = GmCXt.filterParentNodes(nodes, text);
	}

	return nodes.length === 1;
};

GmCXt.isVisibilityMutated = function(mutation) {
	if (mutation.attributeName === 'style' &&
		mutation.oldValue &&
		(
			mutation.oldValue.includes('display: none') ||
			mutation.oldValue.includes('visibility: hidden')
		)
	) {
		return true;
	} else if (mutation.attributeName === 'aria-expanded' &&
		mutation.oldValue && mutation.oldValue.includes('false')
	) {
		return true;
	} else if (mutation.attributeName === 'aria-hidden' &&
		mutation.oldValue && mutation.oldValue.includes('true')

	) {
		return true;
	}
	return false;
};

// TODO: I can see there is always some mutation due to GuideMe classes on the element.
// This fixes the Automation issue but we need more concrete solution for this. [MG-14885]
GmCXt.checkMutation = function(mutationsList, observer) {

	var isMutationInMyGuideEl = function(m) {
		return (GmCXt.hasMyGuideEl(m.removedNodes) || GmCXt.hasMyGuideEl(m.addedNodes));
	};

	var isMutationInMyGuideAttr = function(m) {
		if (m.attributeName.indexOf('gm') === 0) {
			return true;
		}

		if (m.attributeName === 'class') {
			return (GmCXt.checkMyGuideClass(m.target.className) !== GmCXt.checkMyGuideClass(m.oldValue));
		} else if (m.attributeName === 'style') {
			return GmCXt.checkMyGuideClass(m.target.className);
		}

		return false;
	};

	// Use traditional 'for loops' for IE 11
	if (mutationsList.length && !GmCXt.mutationOccured) {
		var len = mutationsList.length;
		for (var i = 0; i < len; i++) {
			var m = mutationsList[i];
			if (m.type === 'attributes' && !isMutationInMyGuideAttr(m)) {
				if (GmCXt.isVisibilityMutated(m)) {
					GmCXt.mutationOccured = true;
				}
				if (m.oldValue !== m.target.getAttribute(m.attributeName)) {
					GmCXt.mutationOccured = true;
				}
			} else if (m.type === 'childList' && !isMutationInMyGuideEl(m)) {
				GmCXt.mutationOccured = true;
			}
		}
	}
};

GmCXt.isInputElement = function(he) {
	var inputs = ['INPUT', 'SELECT', 'TEXTAREA'];
	if (inputs.includes(he.tagName)) {
		return true;
	}
	return false;
};

GmCXt.mutationObserver = function(he) {

	var clickJson = GmCXt.getDOMElementClicked(he);

	GmCXt.mutationOccured = false;

	var targetNode = document.body;
	if (targetNode.nodeType !== 1) {
		return;
	}

	// Options for the observer (which mutations to observe)
	var config = {
		attributes: true,
		characterData: true,
		childList: true,
		subtree: true,
		attributeOldValue: true,
		characterDataOldValue: true
	};

	// Create an observer instance linked to the callback function
	var observer = new MutationObserver(GmCXt.checkMutation);

	// Start observing the target node for configured mutations
	observer.observe(targetNode, config);

	// Later, you can stop observing
	var waitTime = 20;
	if (window.top !== window.self) {
		waitTime = 1000;
	}

	GmCXt.timeout(function() {
		observer.disconnect();

		if ((GmCXt.mutationOccured || GmCXt.isInputElement(he)) && !GmCXt.isGmElement(mg$(he))) {
			// TODO: Track click event
		}

	}, waitTime);
};

//***************************** end click tracking ***************************************//
GmCXt.AUTOMATION_SUITE_PLAY = 'mi_suite_play';

GmCXt.lastTrakerSync = 0;

GmCXt.trackerV1 = {

	getScreenSize: function() {
		var screen = window.screen;
		return {
			width: (screen && screen.width) ? screen.width : '',
			height: (screen && screen.height) ? screen.height : ''
		};
	},

	v1Payload: function(e, date, url, user, eventTime) {

		var objectId = e.objectId;
		if (typeof(objectId) === 'number') objectId = objectId.toString();

		return {
			"user_id": user.user_id,
			"org_id": user.organization_id,
			"app_code": e.app_code,
			"client_code": GmCXt.conf.appName + '_v' + GmCXt.conf.version,
			"role_id": "",
			"entity_code": objectId,
			"event_time": eventTime,
			"event_type": e.eventName,
			"url": url,
			"user_agent": GmCXt.browserApp || 'chrome',
			"screen_size": e.screen_size,
			"miscellaneous": e.miscellaneous
		};
	},

	track: function(gPayload) {

		GmCXt.log(38, "Fn. Track");

		if (GmCXt.onPrem()) return;

		if (!GmCXt.user) {

			if (GmCXt.isBackgroundPage) {
				GmCXt.sendMessageToPanel('mgPlayerJSTest_action:fetch_user');
			}
			GmCXt.log(45, "Events not Sent, User not found");
			return;
		}

		function updateSecret(keys) {
			if (keys && keys.registerClientId) {
				GmCXt.trackerUtil.secrets = keys;
				var jsonData = {
					"app_client_id": keys.registerClientId,
					"payload": [],
					"signature": ''
				};
				if (gPayload.length) {
					jsonData.payload = gPayload;
					GmCXt.trackerV1.sendPayload(jsonData);
				}

			} else {
				var msg = 'mgPlayerJSTest_action:update_registration_secret';
				if (GmCXt.isBackgroundPage) {
					GmCXt.sendMessageToPanel(msg);
				} else {
					GmCXt.sendMessageToApp(msg);
				}

				GmCXt.log(45, 'Secret keys are not present. Unable to track events');
			}
		}

		if (!GmCXt.trackerUtil.secrets) {
			GmCXt.storage().get([
				'tracker_secrets'
			]).then(function(res) {
				var keys = res.tracker_secrets;
				if (!keys.registerClientId) {
					keys = GmCXt.parseJSON(keys);
				}
				updateSecret(keys);
			});
		} else {
			var keys = GmCXt.trackerUtil.secrets;
			updateSecret(keys);
		}
	},

	sendClientVisit: function() {
		GmCXt.trackerV1.trackClientVisit();
		GmCXt.clientVisitSync = GmCXt.getCurrentTimeInSec();
		GmCXt.storage().set({
			'clientVisitSync': JSON.stringify(GmCXt.clientVisitSync)
		});
	},

	sendPayload: function(jsonData) {

		GmCXt.log(38, "Fn. SendPayload");
		var keys = GmCXt.trackerUtil.secrets;

		var date = new Date();
		var currentTimestamp = date.getTime();

		jsonData.event_chain_id = GmCXt.ANALYTICS_EVENT_CHAIN_ID;

		var trackClientTimestamp = currentTimestamp;
		if (keys && keys.track_client_timestamp) {
			trackClientTimestamp = parseInt(keys.track_client_timestamp);
		}
		var clientSecretAge = parseInt((currentTimestamp - trackClientTimestamp) / 1000);

		keys.track_client_timestamp = currentTimestamp;

		/*
		 In Push Event we do not have the 'keys.track_client_timestamp' first time.
		 That time we need to register the client event.
		*/
		// event sent without delay
		/*GmCXt.storage().get(['clientVisitSync']).then(function(res) {
			if (res.clientVisitSync) {
				if (GmCXt.getCurrentTimeInSec() - res.clientVisitSync > GmCXt.t.tracking12hr) {
					GmCXt.trackerV1.sendClientVisit();
				}
			} else {
				GmCXt.trackerV1.sendClientVisit();
			}
		});*/

		if (keys.registerClientId) {

			if (jsonData.payload[0].event_type === 'mi_mybot_run') {

				jsonData.signature = md5(md5(JSON.stringify(jsonData.payload)) +
					keys.app_client_secret).toString();

				// We call an additional API as fallback if the save results API fail.
				GmCXt.trackerV1.sendGuideAutomationEvent(jsonData);
				return;
			}

			var sentimentEvents = jsonData.payload.filter(function(event) {
				return event && event.event_type === 'mi_sentiment_response';
			});

			if (sentimentEvents.length) {

				sentimentEvents.forEach(function(p) {

					GmCXt.trackerV1.apiTrackSentiment(p);

					var index = jsonData.payload.indexOf(p);
					if (index !== -1) {
						jsonData.payload.splice(index, 1);
					}
				});
			}

			if (jsonData.payload.length) {

				jsonData.signature = md5(md5(JSON.stringify(jsonData.payload)) +
					keys.app_client_secret).toString();

				GmCXt.log(45, 'SENDING events', jsonData.payload);

				GmCXt.trackerV1.apiV1(jsonData);
			}
		}
	},

	apiV1: function(data) {
		return GmCXt.api.trackEventV1(data)
			.then(function(response) {
				GmCXt.log(45, 'SENT events');
			})
			.catch(function(error) {
				GmCXt.trackerV1.updateTooltipTrackInfo(data);
			});
	},

	apiTrackSentiment: function(data) {

		GmCXt.api.trackSentiment(data)
			.then(function(response) {
				GmCXt.log(45, 'SENT events');
			})
			.catch(function(error) {
				GmCXt.log(45, 'ERROR, events restored', data);
				GmCXt.trackerV1.sendPayloadEventCall(data);
			});
	},

	apiTrackConversation: function(data) {

		GmCXt.api.trackConversation(data)
			.then(function(response) {
				GmCXt.log(45, 'SENT events');
			})
			.catch(function(error) {
				GmCXt.log(45, 'ERROR, events restored', data);
				GmCXt.trackerV1.sendPayloadEventCall(data);
			});
	},

	updateTooltipTrackInfo: function(data) {
		data.payload.forEach(function(p) {
			if (p && p.event_type === "mi_tooltip_shown") {
				sid = "step_" + p.miscellaneous.tooltips_details[0].tooltip_id;
				GmCXt.tooltipTrackingList[sid].track = true;
			}
		});
	},

	setPayLoad: function(e) {

		if (GmCXt.isAutomationRunning() && e.eventName !== "mi_mybot_run") {
			GmCXt.log(45, "Tracker is currently stopped", e);
			return;
		}

		// Track events only after login
		if (!GmCXt.user) {
			GmCXt.log(45, 'SKIP EVENT, no user found ' + e.eventName);
			return;
		}

		if (!e.app_code) {
			return;
		}

		if (!e) e = {};

		var url = e.url || e.miscellaneous.url;

		if (GmCXt.trackerUtil && GmCXt.trackerUtil.page_url) {
			if (!url) url = GmCXt.urlParts ? GmCXt.urlParts.fullUrl : GmCXt.trackerUtil.page_url;
		} else {
			if (!url) url = GmCXt.urlParts ? GmCXt.urlParts.fullUrl : GmCXt._location().href;
		}

		var date = new Date();

		if (e.eventName === 'mi_page_visit') {
			date = new Date(GmCXt.pageVisit.timeStarted);
			url = GmCXt.pageVisit.url;
		}

		if (!e.miscellaneous.env_code &&
			e.eventName !== 'mi_tooltip_shown' &&
			e.eventName !== 'mi_workflow_play') {
			e.miscellaneous.env_code = GmCXt.trackerV1.getEnvCode(url);
		}

		var eventTime = "";
		if (e.eventName === 'mi_user_pulse') {
			eventTime = date.getUTCFullYear() + "-" +
				('0' + (date.getUTCMonth() + 1)).slice(-2) + "-" +
				('0' + date.getUTCDate()).slice(-2) + " " +
				'00:00:00';
		} else {
			eventTime = date.getUTCFullYear() + "-" +
				('0' + (date.getUTCMonth() + 1)).slice(-2) + "-" +
				('0' + date.getUTCDate()).slice(-2) + " " +
				('0' + date.getUTCHours()).slice(-2) + ":" +
				('0' + date.getUTCMinutes()).slice(-2) + ":" +
				('0' + date.getUTCSeconds()).slice(-2);
		}

		var user = false;

		if (GmCXt.user) user = GmCXt.user;

		var payload = GmCXt.trackerV1.v1Payload(e, date, url, user, eventTime);

		if (GmCXt.trackerUtil.trackPI) {
			payload.miscellaneous.unique_user_id = user.user_email;
			payload.miscellaneous.display_name = user.first_name + ' ' + user.last_name;
		}

		if (payload.event_type !== 'mi_tooltip_shown' && payload.event_type !== 'mi_workflow_play' &&
			payload.event_type !== "mi_mybot_run") {
			payload.miscellaneous.env_code = GmCXt.trackerV1.getEnvCode(payload.url);
		}

		payload.miscellaneous.user_timezone = GmCXt.trackerV1.getTimeZone();

		return payload;
	},

	sendGuideAutomationEvent: function(data) {

		var onSave = function() {
			GmCXt.sendMessageToApp('mgPlayerJSTest_action:myBot_report_saved');
			GmCXt.log(37, "Automation Report saved. Init the tracker again.");
			GmCXt.storage().get(['desktopReq']).then(function(st) {
				if (st.desktopReq) {
					GmCXt.deskReq = st.desktopReq;
					GmCXt.sendMessageToDesktopApp('task_complete', {
						entity_code: data.payload[0].entity_code
					});
				}
			});
		};

		GmCXt.api.saveMyBotReport(data)
			.then(function(response) {
				GmCXt.log(45, 'SENT events');


				onSave();
			})
			.catch(function(result) {

				GmCXt.log(45, 'ERROR, events restored');

				GmCXt.trackerV1.apiV1(data).finally(onSave);
			});
	},

	getEnvCode: function(url) {

		var env_code = GmCXt.checkDomainInApps(url).app_env;

		if (!env_code) env_code = "";

		return env_code;
	},

	getTimeZone: function() {
		return Intl.DateTimeFormat().resolvedOptions().timeZone;
	},

	getAppCode: function() {

		if (GmCXt.externalAppId) {
			return GmCXt.externalAppId;
		} else if (GmCXt.appList && GmCXt.activeAppId) {
			return GmCXt.appList['app:' + GmCXt.activeAppId].external_id;
		}
	},

	getAppSettings: function() {
		if (GmCXt.appList && GmCXt.activeAppId) {
			return GmCXt.appList['app:' + GmCXt.activeAppId].settings;
		}
	},

	trackPanelOpen: function(s, a) {

		if (GmCXt.trackingDisabled()) return;
		var eventName = "mi_panel_open";
		if (a === "chatbot") eventName = "mi_bot_panel_open";

		var e = {
			app_code: GmCXt.trackerV1.getAppCode(),
			eventName: eventName,
			objectId: GmCXt.user.user_key,
			miscellaneous: {
				source: s,
				event_start_time: new Date().getTime(),
				event_end_time: new Date().getTime(),
				url: GmCXt.urlParts.fullUrl
			},
			screen_size: GmCXt.trackerV1.getScreenSize()
		};

		var payload = GmCXt.trackerV1.setPayLoad(e);
		GmCXt.trackerV1.sendPayloadEventCall(payload);
	},

	getPayloadForPlayEvent: function(e) {
		var returnedPayload = GmCXt.trackerV1.setPayLoad(e);
		if (returnedPayload) {
			GmCXt.trackerV1.sendPayloadEventCall(returnedPayload);
		}
	},

	sendPayloadEventCall: function(payload) {
		if (!payload) return;
		
		var m = {
			action: "mgPlayerJSTest_action:payload_event_call",
			data: payload
		};
		GmCXt.sendToParentWindow(m);
	},

	trackGuidePlayEvent: function() {
		GmCXt.log(38, "Fn. trackGuidePlayEvent");
		if (GmCXt.trackingDisabled()) return;

		for (var key in GmCXt.guidePlayTracker) {

			var g = GmCXt.guidePlayTracker[key];

			if (g.steps_details && g.steps_details.length) {

				g.event_end_time = new Date().getTime();

				var length = g.steps_details.length;
				g.steps_details[length - 1].event_end_time = new Date().getTime();

				var e = {
					app_code: GmCXt.trackerV1.getAppCode(),
					eventName: g.mode,
					objectId: g.guide_id,
					miscellaneous: g,
					screen_size: GmCXt.trackerV1.getScreenSize()
				};

				GmCXt.trackerV1.getPayloadForPlayEvent(e);
			}
		}
	},

	trackGuideSearch: function(o) {

		if (GmCXt.trackingDisabled()) return;

		var e = {
			app_code: GmCXt.trackerV1.getAppCode(),
			eventName: 'mi_search',
			objectType: 'global',
			objectId: GmCXt.user.user_key,
			miscellaneous: {
				search_keyword: o.search_text,
				results_returned: o.results_returned,
				search_result_clicked: o.search_result_clicked,
				event_start_time: o.startTime,
				event_end_time: new Date().getTime(),
				url: GmCXt.urlParts.fullUrl
			},
			screen_size: GmCXt.trackerV1.getScreenSize()
		};

		var payload = GmCXt.trackerV1.setPayLoad(e);
		GmCXt.trackerV1.sendPayloadEventCall(payload);
	},

	trackGuideDownload: function(tour, type) {

		if (GmCXt.trackingDisabled()) return;

		var e = {
			app_code: GmCXt.trackerV1.getAppCode(),
			eventName: 'mi_guide_download',
			objectId: tour.tour_id,
			miscellaneous: {
				guide_id: tour.tour_id,
				type: type,
				play_instance_id: GmCXt.getUUID(),
				event_start_time: new Date().getTime(),
				event_end_time: new Date().getTime(),
				url: GmCXt.urlParts.fullUrl
			},
			screen_size: GmCXt.trackerV1.getScreenSize()
		};

		var payload = GmCXt.trackerV1.setPayLoad(e);
		GmCXt.trackerV1.sendPayloadEventCall(payload);
	},

	trackBotInteraction: function(tours) {

		if (GmCXt.trackingDisabled()) return;
		if (tours && tours.length) {
			for (var i = 0; i < tours.length; i++) {
				var e = {
					app_code: GmCXt.trackerV1.getAppCode(),
					eventName: 'mi_bot_interaction',
					objectId: tours[i].tour_id,
					miscellaneous: {
						guide_id: tours[i].tour_id,
						play_instance_id: GmCXt.getUUID(),
						event_start_time: new Date().getTime(),
						event_end_time: new Date().getTime(),
						url: GmCXt.urlParts.fullUrl
					},
					screen_size: GmCXt.trackerV1.getScreenSize()
				};

				var steps_details = [];
				for (var j = 0; j < tours[i].steps.length; j++) {
					var sd = {
						step_id: tours[i].steps[j].step_id,
						step_index: parseInt(tours[i].steps[j].step_order),
						step_title: tours[i].steps[j].step_title,
						event_start_time: new Date().getTime(),
						event_end_time: new Date().getTime(),
						page_url: GmCXt.urlParts.fullUrl,
						error_type: "",
						audio_muted: GmCXt.stepAudioRunningStatus ? 0 : 1
					};

					if (tours[i].steps[j].step_settings.automation.enableBot &&
						tours[i].steps[j].step_settings.automation.botQuestion) {
						sd.requires_human_intervention = 1;
						sd.step_skipped = 0;
						var ans = tours[i].steps[j].step_settings.automation.defaultData;
						if (ans) {
							sd.isAnswered = true;
						} else {
							sd.isAnswered = false;
						}
						sd.botQuestion = tours[i].steps[j].step_settings.automation.botQuestion;
					} else {
						sd.requires_human_intervention = 0;
						sd.step_skipped = 0;
					}
					steps_details.push(sd);
				}

				e.miscellaneous.steps_details = steps_details;

				var payload = GmCXt.trackerV1.setPayLoad(e);
				GmCXt.trackerV1.sendPayloadEventCall(payload);
			}
		}
	},

	trackGuideShowMe: function(tour, type, i, isAudio, segs, taskId) {

		if (GmCXt.trackingDisabled()) return;

		var url = (tour.tour_url.indexOf('://') === -1) ? 'https://' + tour.tour_url : tour.tour_url;
		var e = {
			app_code: GmCXt.trackerV1.getAppCode(),
			eventName: 'mi_showme_play',
			objectId: tour.tour_id,
			miscellaneous: {
				guide_id: tour.tour_id,
				type: type,
				event_start_time: new Date().getTime(),
				event_end_time: new Date().getTime(),
				url: url,
				trigger_source: GmCXt.getSource(i),
				audio_muted: isAudio ? 0 : 1,
				segment_group_id: segs
			},
			screen_size: GmCXt.trackerV1.getScreenSize()
		};

		if (taskId) {
			e.miscellaneous.task_list_id = taskId;
		}

		e.miscellaneous.play_instance_id = GmCXt.getUUID(tour.tour_id);
		if (GmCXt.isLastStepPlayedOnShowme) {
			e.miscellaneous.guide_complete = 1;
		} else {
			e.miscellaneous.guide_complete = 0;
		}

		if (GmCXt.isVideoEndedOnShowme) {
			e.miscellaneous.guide_complete = 1;
		}

		if (GmCXt.isGiphyPlayedOnShowme) {
			e.miscellaneous.guide_complete = 1;
		}

		GmCXt.trackerV1.getPayloadForPlayEvent(e);

	},

	trackTutGuide: function(tour, type, source, taskid) {

		if (GmCXt.trackingDisabled()) return;
		var url = (tour.tour_url.indexOf('://') === -1) ? 'https://' + tour.tour_url : tour.tour_url;
		var segs = [];
		if (!GmCXt.isEmpty(tour.tour_settings.segment_groups)) {
			segs = GmCXt.getTourSegmentDetail(tour);
		}
		var e = {
			app_code: GmCXt.trackerV1.getAppCode(),
			eventName: 'mi_tutorial_guide_play',
			objectId: tour.tour_id,
			miscellaneous: {
				guide_id: tour.tour_id,
				type: type,
				trigger_source: source,
				event_start_time: new Date().getTime(),
				event_end_time: new Date().getTime(),
				url: url,
				guide_open: 1,
				segment_details: segs
			},
			screen_size: GmCXt.trackerV1.getScreenSize()
		};

		if (source === "task_list") {
			e.miscellaneous.task_list_id = taskid;
		}

		if (GmCXt.isLastStepPlayedOnCreateTutGuide) {
			e.miscellaneous.guide_complete = 1;
		} else {
			e.miscellaneous.guide_complete = 0;
		}

		if (GmCXt.pdfPlayedOnUploadTut && GmCXt.fullPdfPlayedOnUploadTutGuide) {
			e.miscellaneous.guide_complete = 1;
		}

		if (GmCXt.pdfPlayedOnUploadTutNewTab) {
			e.miscellaneous.guide_complete = 1;
		}

		e.miscellaneous.play_instance_id = GmCXt.getUUID(tour.tour_id);

		if (type === 'create_tutorial_guide') {

			GmCXt.storage().get(['tutorial_steps']).then(function(st) {
				var steps_details = [];

				if (GmCXt.isEmpty(st) && source === "bot") {
					st = {};
					st.tutorial_steps = tour.steps;
				}
				st.tutorial_steps.forEach(function(step) {
					var step_details = {
						step_id: step.step_id,
						step_index: parseInt(step.step_order),
						step_title: step.step_description,
						event_start_time: new Date().getTime(),
						event_end_time: new Date().getTime(),
						page_url: GmCXt.urlParts.fullUrl,
						error_type: "",
						audio_muted: GmCXt.stepAudioRunningStatus ? 0 : 1
					};
					steps_details.push(step_details);
				});
				e.miscellaneous.steps_details = steps_details;
				e.miscellaneous.tutorial_rendered = 'inline';
				GmCXt.trackerV1.getPayloadForPlayEvent(e);
			});

		} else if (type === 'upload_tutorial_guide_same_tab' ||
			type === 'upload_tutorial_guide_new_tab') {
			e.miscellaneous.tutorial_rendered = 'pdf';
			var step_details = [{
				step_id: tour.steps[0].step_id,
				step_index: parseInt(tour.steps[0].step_order),
				step_title: tour.steps[0].step_title,
				event_start_time: new Date().getTime(),
				event_end_time: new Date().getTime(),
				page_url: GmCXt.urlParts.fullUrl,
				error_type: "",
				audio_muted: GmCXt.stepAudioRunningStatus ? 0 : 1
			}];
			e.miscellaneous.steps_details = step_details;
			GmCXt.trackerV1.getPayloadForPlayEvent(e);
		}
	},

	trackClientVisit: function() {

		var e = {
			app_code: GmCXt.trackerV1.getAppCode(),
			eventName: 'mi_client_visit',
			objectId: GmCXt.user.user_key,
			miscellaneous: {
				event_start_time: new Date().getTime(),
				event_end_time: new Date().getTime(),
				url: GmCXt.trackerUtil.page_url,
				is_new_user: false
			},
			screen_size: GmCXt.trackerV1.getScreenSize()
		};

		var payload = GmCXt.trackerV1.setPayLoad(e);
		GmCXt.trackerV1.sendPayloadEventCall(payload);
	},

	//test me tracker
	trackTestMe: function(testMe) {

		if (GmCXt.trackingDisabled()) return;

		var e = {
			app_code: GmCXt.trackerV1.getAppCode(),
			eventName: 'mi_test',
			objectId: testMe.tourId,
			miscellaneous: {
				guide_id: testMe.tourId,
				test_result: testMe.testResult.toLowerCase(),
				test_duration: testMe.userTime,
				test_effectiveness: testMe.testEffectiveness || 0,
				test_expected_steps: testMe.stepCount,
				test_steps_performed: testMe.eventCount,
				test_expected_time: testMe.expectedTime,
				play_instance_id: GmCXt.getUUID(testMe.tourId),
				event_start_time: testMe.startTime,
				event_end_time: new Date().getTime(),
				url: testMe.url
			},
			screen_size: GmCXt.trackerV1.getScreenSize()
		};

		var payload = GmCXt.trackerV1.setPayLoad(e);
		GmCXt.trackerV1.sendPayloadEventCall(payload);
	},

	trackFeatureClick: function(tag) {

		if (!GmCXt.trackerUtil.featureTracking) return;

		GmCXt.log(16, 'TAG CLICK event ', tag);

		var e = {
			app_code: GmCXt.trackerV1.getAppCode(),
			eventName: 'mi_feature_click',
			objectId: tag.tour_id,
			miscellaneous: {
				step_id: tag.step_id,
				tour_id: tag.tour_id,
				group_id: tag.group_id,
				event_start_time: new Date().getTime(),
				event_end_time: new Date().getTime(),
				page_url: GmCXt.urlParts.fullUrl,
				play_instance_id: GmCXt.getUUID(),
			},
			screen_size: GmCXt.trackerV1.getScreenSize()
		};

		var payload = GmCXt.trackerV1.setPayLoad(e);
		GmCXt.trackerV1.sendPayloadEventCall(payload);
	},

	trackPageVisit: function(onPageUnload) {

		if (!GmCXt.trackerUtil.pageTracking) return;

		if (!GmCXt.pageVisit) return;

		var timeSpentOnPage = GmCXt.pageVisit.timeSpent ? GmCXt.pageVisit.timeSpent : (new Date().getTime() - GmCXt.pageVisit.timeStarted);

		if (timeSpentOnPage < GmCXt.t_.sec5) return;

		var e = {
			app_code: GmCXt.trackerV1.getAppCode(),
			eventName: 'mi_page_visit',
			objectId: GmCXt.pageVisit.userKey,
			miscellaneous: {
				time_spend_on_page: timeSpentOnPage,
				page_url: GmCXt.urlParts.fullUrl,
				page_title: GmCXt.pageVisit.title,
				page_load_time: GmCXt.pageVisit.pageLoadTime,
				referrer_url: document.referrer,
				event_time: new Date().getTime(),
				play_instance_id: GmCXt.getUUID()
			},
			screen_size: GmCXt.trackerV1.getScreenSize()
		};

		GmCXt.log(2, "Page track event saved", e);

		var payload = GmCXt.trackerV1.setPayLoad(e);

		if (onPageUnload) {
			GmCXt.storage().set({
				'trackPageVisit': JSON.stringify(payload)
			});
		} else {
			GmCXt.trackerV1.sendPayloadEventCall(payload);
		}

	},

	trackUserPulse: function() {
		if ( GmCXt.trackingDisabled() || GmCXt.isSumtotal() || GmCXt.isSbx() || GmCXt.isLXP() ) return;

		var date = new Date();
		var currentTimestamp = date.getTime();

		var currentPulsePayloadTime = {
			time: currentTimestamp,
			app_code: GmCXt.trackerV1.getAppCode()
		};

		var triggerPulseTrack = function() {
			var e = {

				app_code: GmCXt.trackerV1.getAppCode(),
				eventName: 'mi_user_pulse',
				objectId: GmCXt.user.user_key,
				miscellaneous: {},
				screen_size: GmCXt.trackerV1.getScreenSize()
			};

			var payload = GmCXt.trackerV1.setPayLoad(e);
			GmCXt.trackerV1.sendPayloadEventCall(payload);
		};

		var getAppIndexIfExist = function(d, appCode) {
			var ind = -1;
			d.filter(function(value, index) {
				if (appCode === value.app_code) {
					ind = index;
					return ind;
				}

			});
			return ind;
		};

		GmCXt.storage().get([
			'userPulsePayloadTime'
		]).then(function(res) {
			var pulselist = [];
			if (GmCXt.isEmpty(res)) {
				triggerPulseTrack();
				pulselist.push(currentPulsePayloadTime);
			} else {
				if (!GmCXt.isEmpty(res) && res.userPulsePayloadTime) {

					pulselist = GmCXt.parseJSON(res.userPulsePayloadTime);

					var appIndex = getAppIndexIfExist(pulselist, GmCXt.trackerV1.getAppCode());

					if (appIndex !== -1) {
						if (pulselist[appIndex].app_code === GmCXt.trackerV1.getAppCode() &&
							(currentTimestamp - pulselist[appIndex].time) > GmCXt.t.tracking8hr) {
							triggerPulseTrack();
							pulselist[appIndex].time = currentTimestamp;
						}
					} else {
						triggerPulseTrack();
						pulselist.push(currentPulsePayloadTime);
					}
				} else {
					triggerPulseTrack();
					pulselist.push(currentPulsePayloadTime);
				}
			}

			GmCXt.storage().set({
				'userPulsePayloadTime': JSON.stringify(pulselist)
			});
		});
	},

	trackTooltips: function(currentTooltip) {
		if (GmCXt.trackingDisabled()) return;

		if (GmCXt.isEmpty(GmCXt.tooltipTrackingList)) {
			return;
		}

		var getCurrTTIndex = function(arr, stepId, actionType) {
			var ind = -1;
			arr.filter(function(value, index) {
				if (stepId === value.ttStepId && actionType === value.ttActionType) {
					ind = index;
					return ind;
				}

			});
			return ind;
		};

		var triggerTooltipTrack = function(tt, id) {
			var e = {};
			if (tt.track) {

				if (GmCXt.isEmpty(currentTooltip.tooltip_play_instances)) {
					currentTooltip.tooltip_play_instances.push({
						event_start_time: GmCXt.getCurrentTimeInMilSec(),
						event_end_time: GmCXt.getCurrentTimeInMilSec()
					});
				}

				var segDet = [];
				if (currentTooltip.segment_details) {
					segDet = currentTooltip.segment_details;
					delete currentTooltip.segment_details;
				}

				e = {
					app_code: GmCXt.trackerV1.getAppCode(),
					eventName: 'mi_tooltip_shown',
					objectId: tt.tourId,
					miscellaneous: {
						url: tt.url,
						event_start_time: GmCXt.getCurrentTimeInMilSec(),
						event_end_time: GmCXt.getCurrentTimeInMilSec(),
						tooltips_details: [currentTooltip],
						env_code: GmCXt.trackerV1.getEnvCode(tt.url),
						segment_details: segDet
					},
					url: GmCXt.trackerUtil.page_url || GmCXt.urlParts.fullUrl || tt.url,
					screen_size: tt.screen_size
				};


				GmCXt.trackerUtil.ttPayload["tt_" + tt.tourId] = e;
				var payload = GmCXt.trackerV1.setPayLoad(e);
				GmCXt.trackerV1.sendPayloadEventCall(payload);


				GmCXt.tooltipTrackingList[id].ttDetails.tooltip_play_instances = [];
				GmCXt.tooltipTrackingList[id].track = false;
			}
		};

		var cb = function() {

			var list = [];
			var step_id = "step_" + currentTooltip.tooltip_id;
			var currentTTData = {
				ttStepId: step_id,
				ttTime: GmCXt.getCurrentTimeInMilSec(),
				ttActionType: currentTooltip.action_type[0]
			};

			if (GmCXt.tooltipTrackingList[step_id].track) {
				if (GmCXt.tooltipTrackData && !GmCXt.isEmpty(GmCXt.tooltipTrackData)) {
					list = GmCXt.parseJSON(GmCXt.tooltipTrackData);
					var ind = getCurrTTIndex(list, step_id, currentTooltip.action_type[0]);
					if (ind !== -1) {
						var timeDiff = GmCXt.getCurrentTimeInMilSec() - list[ind].ttTime;
						if (list[ind].ttStepId === step_id &&
							list[ind].ttActionType === currentTooltip.action_type[0] &&
							timeDiff > GmCXt.t.tracking8hr) {
							triggerTooltipTrack(GmCXt.tooltipTrackingList[step_id], step_id);
							list[ind].ttTime = GmCXt.getCurrentTimeInMilSec();
						}
					} else {
						triggerTooltipTrack(GmCXt.tooltipTrackingList[step_id], step_id);
						list.push(currentTTData);
					}
				} else {
					triggerTooltipTrack(GmCXt.tooltipTrackingList[step_id], step_id);
					list.push(currentTTData);
				}

				GmCXt.tooltipTrackData = list;
				GmCXt.storage().set({
					'tooltipTrackData': JSON.stringify(list)
				});
			}
		};

		cb();

	},

	trackBeacons: function(currentBeaconTour, actionType) {
		if (GmCXt.trackingDisabled()) return;

		var bTrackList = [];

		var bTrackData = {
			beacon: currentBeaconTour.tour_id + "_" + actionType,
			bTime: GmCXt.getCurrentTimeInMilSec(),
		};

		var segs = [];
		if (!GmCXt.isEmpty(currentBeaconTour.tour_settings.segment_groups)) {
			segs = GmCXt.getTourSegmentDetail(currentBeaconTour);
		}

		var beaconUrl = (currentBeaconTour.tour_url.indexOf('://') === -1) ? 'https://' + currentBeaconTour.tour_url : currentBeaconTour.tour_url;

		GmCXt.storage().get(['beaconTrackData']).then(function(result) {
			var blist = [];
			if (!GmCXt.isEmpty(result)) blist = GmCXt.parseJSON(result.beaconTrackData);

			if (GmCXt.isEmpty(blist)) {
				bTrackList.push(bTrackData);
				trackBeaconCB();
			} else {
				var currentBIndx = blist.findIndex(function(item) {
					return item.beacon === bTrackData.beacon;
				});
				if (currentBIndx === -1) {
					bTrackList = blist;
					bTrackList.push(bTrackData);
					trackBeaconCB();
				} else {
					var timeDiff = GmCXt.getCurrentTimeInMilSec() - blist[currentBIndx].bTime;
					if (timeDiff > GmCXt.t.tracking8hr) {
						blist[currentBIndx].bTime = GmCXt.getCurrentTimeInMilSec();
						trackBeaconCB();
					}
				}
			}
		});

		function trackBeaconCB() {
			e = {
				app_code: GmCXt.trackerV1.getAppCode(),
				eventName: 'mi_beacon_shown',
				objectId: currentBeaconTour.tour_id,
				miscellaneous: {
					env_code: GmCXt.trackerV1.getEnvCode(currentBeaconTour.tour_url),
					url: beaconUrl,
					play_instance_id: GmCXt.getUUID(),
					action_type: [actionType],
					segment_details: segs,
					is_new_user: false,
					event_start_time: GmCXt.getCurrentTimeInMilSec(),
					event_end_time: GmCXt.getCurrentTimeInMilSec(),
				},
				url: GmCXt.trackerUtil.page_url || GmCXt.urlParts.fullUrl || currentBeaconTour.tour_url,
				screen_size: GmCXt.trackerV1.getScreenSize()
			};

			var payload = GmCXt.trackerV1.setPayLoad(e);
			GmCXt.trackerV1.sendPayloadEventCall(payload);

			GmCXt.storage().set({
				'beaconTrackData': JSON.stringify(bTrackList)
			});
		}

	},

	trackPushNotification: function(pTour, actionType) {
		if (GmCXt.trackingDisabled()) return;


		var segs = [];
		if (!GmCXt.isEmpty(pTour.tour_settings.segment_groups)) {
			segs = GmCXt.getTourSegmentDetail(pTour);
		}

		var pushUrl = (pTour.tour_url.indexOf('://') === -1) ? 'https://' + pTour.tour_url : pTour.tour_url;

		e = {
			app_code: GmCXt.trackerV1.getAppCode(),
			eventName: 'mi_push_notification_shown',
			objectId: pTour.tour_id,
			miscellaneous: {
				env_code: GmCXt.trackerV1.getEnvCode(pTour.tour_url),
				url: pushUrl,
				play_instance_id: GmCXt.getUUID(),
				action_type: [actionType],
				segment_details: segs,
				is_new_user: false,
				event_start_time: GmCXt.getCurrentTimeInMilSec(),
				event_end_time: GmCXt.getCurrentTimeInMilSec(),
			},
			url: GmCXt.trackerUtil.page_url || GmCXt.urlParts.fullUrl || pTour.tour_url,
			screen_size: GmCXt.trackerV1.getScreenSize()
		};

		var payload = GmCXt.trackerV1.setPayLoad(e);
		GmCXt.trackerV1.sendPayloadEventCall(payload);
	},

	trackSurveyInstantResponse: function(surveyAnswer, d) {
		var e = {
			app_code: GmCXt.trackerV1.getAppCode(),
			eventName: 'mi_sentiment_response',
			objectType: 'guide',
			objectId: d.sentimentCode,
			miscellaneous: {
				response_code: GmCXt.getUUID(),
				trigger_source_type: d.trigger_source_type,
				trigger_source_id: d.trigger_source_id,
				answers: surveyAnswer,
				source_url: GmCXt.urlParts.fullUrl,
				source_page_title: GmCXt.pageTitle
			},
			screen_size: GmCXt.trackerV1.getScreenSize()
		};

		var payload = GmCXt.trackerV1.setPayLoad(e);
		GmCXt.trackerV1.apiTrackSentiment(payload);
	},

	trackConversationResponse: function(convAnswer, d) {
		var e = {
			app_code: GmCXt.trackerV1.getAppCode(),
			eventName: 'mi_conversation_response',
			objectType: 'bot',
			objectId: d.conversationCode,
			miscellaneous: {
				response_code: GmCXt.getUUID(),
				trigger_source_type: d.trigger_source_type,
				trigger_source_id: d.trigger_source_id,
				answers: convAnswer,
				source_url: GmCXt.urlParts.fullUrl,
				source_page_title: GmCXt.pageTitle
			},
			screen_size: GmCXt.trackerV1.getScreenSize()
		};

		var payload = GmCXt.trackerV1.setPayLoad(e);
		GmCXt.trackerV1.apiTrackConversation(payload);
	},

	trackMyBotEvents: function(data) {

		if (data) {
			var eventType = 'mi_mybot_run';
			var e = {
				app_code: GmCXt.trackerV1.getAppCode(),
				eventName: eventType,
				objectId: data.testCode,
				miscellaneous: {
					"run_type": data.runType,
					"status": data.status,
					"resultStatus": data.resultStatus,
					"result_sequence": data.resultSequence
				},
				screen_size: GmCXt.trackerV1.getScreenSize()
			};

			var payload = GmCXt.trackerV1.setPayLoad(e);
			GmCXt.trackerV1.sendGuideAutomationEvent(payload);
		}
	},

	trackElNotFound: function(data) {

		if (data) {

			var p = {
				page_url: GmCXt.urlParts.fullUrl,
				page_title: GmCXt.pageTitle,
				event_start_time: GmCXt.getCurrentTimeInMilSec(),
				event_end_time: GmCXt.getCurrentTimeInMilSec(),
				step_id: data.step_id || null,
			};

			var e = {
				app_code: GmCXt.trackerV1.getAppCode(),
				eventName: "mi_rule_enhancement",
				objectId: data.tour_id,
				miscellaneous: {
					source: data.source,
					play_instance_id: GmCXt.getUUID(),
					element_player_instance: [p]
				},
				url: GmCXt.urlParts.fullUrl,
				screen_size: GmCXt.trackerV1.getScreenSize()
			};

			GmCXt.trackerUtil.ePayload["el_" + data.tour_id] = e;
			var payload = GmCXt.trackerV1.setPayLoad(e);
			GmCXt.trackerV1.sendPayloadEventCall(payload);
		}
	},

	sendEvents: function(forcePush) {
		if (GmCXt.trackerUtil.guidePayload.length) {
			GmCXt.trackerV1.track(GmCXt.trackerUtil.guidePayload);
		}
	}
};

GmCXt.trackingDisabled = function() {
	if (GmCXt.trackerUtil.enableTracking)
		return false;
	else
		return true;
};

GmCXt.trackerV1.startMyBotTracking = function() {
	GmCXt.log(37, "Stop tracking events");
	clearInterval(GmCXt.trackerV1.interval);
	GmCXt.trackerV1.sendEvents();
};

if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.de_DE = {
	currentPage: "Aktuelle Seite",
	myChat: "MyChat",
	import: "Importieren",
	export: "Exportieren",
	redirectLivetour: "Live abspielen",
	guideNotAvailable: "Anleitung unter aktueller URL nicht verf\u00fcgbar. M\u00f6chten Sie zur Guide-URL wechseln?",
	downloadPPT: "PPT herunterladen",
	btnYes: "Ja",
	btnNo: "Nein",
	inApp: "In-App",
	live: "Leben",
	resume: "Fortsetzen",
	tourCloseConfirm: "M\u00f6chten Sie diesen Leitfaden wirklich schlie\u00dfen?",
	notifSnoozeDonotMsg: "Bitte teilen Sie uns mit, ob Sie dies sp\u00e4ter sehen m\u00f6chten oder die Benachrichtigung nie anzeigen m\u00f6chten?",
	surveyThanksMessage: "Vielen Dank f\u00fcr Ihre Antwort",
	testMePassedMessage: "Gl\u00fcckwunsch! Sie haben bestanden",
	testMeFailedMessage: "Hoppla! Sie sind gescheitert",
	testMeGuideEfficiency: "Testeffizienz:",
	testMeGuideEffectiveness: "Testwirksamkeit:",
	testMeTestTime: "Testzeit",
	testMeExpectedTime: "Erwartete Zeit",
	testMeStepsTaken: "Unternommene Schritte",
	testMeExpectedSteps: "Erwartete Schritte",
	testMeRetakeTestBtn: "Wiederholungstest",
	testMeResultTitle: "MyTest Ergebnis",
	ConfirmIfTestMeModeRidirect: "Anleitung unter aktueller URL nicht verf\u00fcgbar. M\u00f6chten Sie zur Guide-URL umleiten?",
	feedCmt: "Ihr Feedback ist wertvoll f\u00fcr uns!<br> Bitte teilen Sie uns Ihre Meinung in 500 Zeichen oder weniger mit",
	doNotShowAgain: "Nicht mehr anzeigen",
	neverShowAgain: "Nie wieder anzeigen",
	skipGuide: "Anleitung \u00fcberspringen",
	surveyErrorMsg: "Bitte beantworten Sie mindestens eine Frage",
	redirect: "Umleiten",
	liveGuide: "Live-Guide",
	question: "Frage",
	exitGuide: "Anleitung zum Beenden",
	continueGuide: "Anleitung fortsetzen",
	stop: "Aufh\u00f6ren",
	characters: "Zeichen:",
	survey: "Vermessung",
	testMeStopMessage: "Sie befinden sich im TestMe-Modus, klicken Sie auf STOP, um den Vorgang zu beenden",
	testMeFailedErrorMessage: "Sie konnten den Zielschritt nicht erreichen.<br>Du hast {CORRECT_STEPS} Schritte korrekt aus {TOTAL_STEPS}.",
	surveyCommentPlaceholder: "Geben Sie hier ein! Max. 500 Zeichen",
	pushTourSnoozeMsg: "Diese Auto Launch Tour wird f\u00fcr",
	of: "von",
	wbMplayerTitle: "Tutorials",
	wbDragTooltip: "Ziehen Sie diesen Player per Drag & Drop an eine beliebige Stelle auf der Seite",
	dontShowEdResult: "Ich m\u00f6chte das nicht sehen",
	mPlayerHeaderTitle: "Micro Player",
	closePreview: "Vorschau schlie\u00dfen",
	elmNotFound: "Es scheint, dass wir das Element f\u00fcr den Schritt nicht finden k\u00f6nnen:",
	elmNotFoundInfo: "Stellen Sie sicher, dass Sie sich auf der richtigen Seite befinden, um diesen Schritt auszuf\u00fchren. \u00dcberpr\u00fcfen Sie auch, ob Sie das ausgew\u00e4hlte Element sehen k\u00f6nnen",
	notExists: "Nicht vorhanden",
	elmNotFoundHeader: "Step-Element nicht gefunden",
	goToStep: "Zum Schritt",
	notFoundStep: "Wir konnten das Element f\u00fcr Schritt nicht finden #",
	pleaseReselect: "Bitte versuchen Sie, das Element erneut auszuw\u00e4hlen.",
	stepRuleMatchErr: "Konfigurationsfehler: Schrittregeln stimmen nicht \u00fcberein",
	guideRuleMatchErr: "Konfigurationsfehler: Leitlinienregeln stimmen nicht \u00fcberein",
	stepNotFoundRedirect: "Schritt auf dieser Seite nicht gefunden. M\u00f6chten Sie umleiten?",
	branchStepMessagePopup: "Bitte w\u00e4hlen Sie eine der folgenden Aufgaben aus, um fortzufahren.",
	btnSkip: "\u00DCberspringen",
	kindlyHoverPopup: "Bitte bewegen Sie den Mauszeiger \u00fcber dieses Element, um das Popup zu \u00f6ffnen",
	stepPlayIsdefinedPopover: "Der Schritt, den Sie spielen werden, wird im Popover definiert",
	elmNotFoundWestpac: "Schritt nicht gefunden \u2013 Dieses Handbuch endet",
	findingElementMessage: "Der Versuch, einen Schritt zu finden. . .",
	badDomain: "Die aktuelle Domain und URL ist nicht berechtigt, MyGuide auszuf\u00fchren. Bitte wenden Sie sich an Ihren Administrator, um Hilfe zu erhalten.",
	hostJsError: "Es scheint einen Fehler auf der Webseite zu geben. MyGuide kann nicht fortgesetzt werden",
	remember: "Erinnern Sie sich an mich",
	forgotPass: "Passwort vergessen?",
	dontHavAcc: "Sie haben noch kein Konto?",
	loginTitle: "Login",
	loginOtpScreenTitle: "OTP zur Anmeldung verifizieren",
	forgetPassTitl: "Passwort zur\u00fccksetzen",
	placeholderEmail: "E-Mail-Adresse",
	placeholderPassword: "Passwort",
	placeholderNewPassword: "Neues Passwort",
	placeholderCurrentPassword: "Aktuelles Passwort",
	placeholderFirstname: "Vorname",
	placeholderLastname: "Nachname",
	placeholderPasswordC: "Passwort best\u00e4tigen",
	btnCancel: "Abbrechen",
	btnPayment: "Upgrade-Plan",
	btnSubmit: "Senden",
	btnLogin: "Login",
	termsOfUse: "Nutzungsbedingungen",
	andLabel: "und",
	policyPrivacy: "Datenschutzrichtlinie",
	passwordError: "Passwort muss 8-stellig sein",
	confirmPasswordError: "Kennwort und Best\u00e4tigungskennwort m\u00fcssen identisch sein",
	firstnameError: "Bitte geben Sie einen g\u00fcltigen Vornamen ein",
	lastnameError: "Bitte geben Sie einen g\u00fcltigen Nachnamen ein",
	emailError: "Bitte geben Sie eine g\u00fcltige E-Mail-ID ein",
	orgError: "Geben Sie eine g\u00fcltige Organisations-URL ein.",
	otpError: "Bitte geben Sie ein g\u00fcltiges OTP ein",
	placeholderOtp: "Geben Sie hier Ihr OTP ein",
	otpSentDesc: "Wenn eine g\u00fcltige E-Mail-Adresse angegeben wurde, wird Ihnen ein Link zum Zur\u00fccksetzen zugesandt.<br>Wenn Sie die E-Mail nicht innerhalb weniger Minuten sehen, \u00fcberpr\u00fcfen Sie bitte Ihren Spam-Ordner auf eine E-Mail von",
	btnOtpVerify: "OTP verifizieren",
	alreadyHavAcc: "Sie haben bereits ein Konto?",
	smartbiteMessageError: "Bitte Nachricht eingeben",
	smartbiteLinkError: "Bitte geben Sie einen g\u00fcltigen Link ein",
	noGuidesOnThisPage: "Keine Anleitungen auf dieser Seite verf\u00fcgbar!",
	clickOn: "Anklicken ",
	contactUs: "Kontaktieren Sie uns",
	search: "Suchen",
	noRecordFound: "Keine Datens\u00e4tze gefunden",
	category: "Ordner",
	subCategory: "Unterordner",
	confirmPasswordRequired: "Passwort best\u00e4tigen erforderlich",
	logInWithSSO: "Anmelden mit SSO",
	inputPlaceHolderSearch: "Suchen Sie nach einem Reisef\u00fchrer",
	noGuideAvailableFor: "Es wurden keine Reisef\u00fchrer gefunden, die Ihrer Suche entsprechen",
	tryModifyingYourSearch: "Versuchen Sie, Ihre Suchkriterien zu \u00e4ndern",
	signInVerifyYourEmail: "Diese E-Mail-ID wurde nicht verifiziert. Bitte \u00fcberpr\u00fcfen Sie Ihre E-Mail f\u00fcr Details",
	signInVerifyYourAccount: "Wir haben Ihnen eine E-Mail mit einem OTP geschickt. Bitte best\u00e4tigen Sie Ihr Konto, um den Anmeldevorgang abzuschlie\u00dfen.",
	maintenanceMessage: "Wartung im Gange. Bitte kontaktieren Sie uns \u00fcber support@csod.com",
	back: "Zur\u00fcck",
	changePassword: "Passwort \u00e4ndern",
	startTestAuto: "Automatisierungstests starten",
	msgPasswordChangedSuccess: "Ihr Passwort wurde erfolgreich ge\u00e4ndert",
	msgConfirmNewPasswordError: "Kennwort best\u00e4tigen muss mit Neues Kennwort identisch sein",
	enterUrl: "Team-URL eingeben",
	dragPlaceholderDropThis: "Lassen Sie dies fallen ",
	dragPlaceholderHere: " hier",
	termsOfService: "Bedingungen",
	versionText: "Version",
	videoStepSuccessMessage: "Ihr Schritt wurde erfolgreich erstellt",
	importSuccessMessage: "Leitfaden erfolgreich hochgeladen. Gehen Sie zum Aufgabenstatus, um den Importstatus zu \u00fcberpr\u00fcfen",
	worldBankHelpSupport: "Einige Tools, z. B. QuickInfos, k\u00f6nnen nur in der Benutzeroberfl\u00e4che angezeigt werden",
	helpSupport: "Hilfe & Support",
	page: "Seite",
	selectAnApplication: "W\u00e4hlen Sie eine Anwendung",
	refresh: "Auffrischen",
	loginBtn: "Login",
	account: "Konto",
	taskStatus: "Aufgabenstatus ",
	logoutBtn: "Logout",
	app: "App:",
	firstStep: "Erster Schritt",
	lastStep: "Letzter Schritt",
	startTest: "Test starten",
	noInappStepInGuide: "TestMe kann nicht fortfahren, da es in diesem Handbuch keinen Inline-Schritt gibt",
	settingBtn: "Erweiterte Einstellungen",
	orgSetting: "Organisationseinstellungen",
	close: "Schlie\u00dfen",
	pdf: ".PDF",
	downloadPptx: ".PPT",
	giphy: ".GIF",
	downloadWord: "Dokument",
	downloadBlog: "Blog",
	downloadTxt: "Klartext",
	serviceErrorMessage: "Hoppla! Ein Fehler ist aufgetreten. Bitte versuchen Sie es nach einiger Zeit erneut. Sie k\u00f6nnen uns auch eine E-Mail an support@csod.com senden, um Unterst\u00fctzung zu erhalten",
	guidesTab: "F\u00fchrer",
	noGuideCreatedYet: "Noch kein Guide erstellt!",
	noCategoryCreatedYet: "Noch kein Ordner erstellt!",
	chatbot: "MyChat",
	notAutorised: "Sie haben nicht den erforderlichen Zugang, bitte wenden Sie sich an den Admin",
	ok: "OKAY",
	apiError: "Konfigurationsfehler. Bitte kontaktieren Sie den Admin",
	select: "Ausw\u00e4hlen",
	mute_unmute: "Stummschaltung\/Stummschaltung aufheben",
	privacyPolicy: "Datenschutz & Cookies",
	privacyPolicyText: "MyGuide verwendet Cookies. Wenn Sie fortfahren, stimmen Sie unseren Bedingungen und Datenschutzrichtlinien zu und geben uns die Zustimmung zur Verwendung von Cookies.",
	terms: "Bedingungen",
	westPecErrorMessage: "Sie sind nicht berechtigt, auf diese Anwendung zuzugreifen. Bitte melden Sie sich im Westpac-Netzwerk an",
	noApp: "Keine Anwendungen gefunden",
	role: "Rolle:",
	all: "Alle",
	video: "Video",
	course: "Kurs",
	article: "Artikel",
	image: "Bild",
	pathways: "Wege",
	preview: "Vorschau",
	more: "Mehr",
	history: "Geschichte",
	publish: "Ver\u00f6ffentlichen",
	selectGuideLink: "Bitte w\u00e4hlen Sie Anleitung zum Link",
	selectGuideBeforeSubmit: "Bitte w\u00e4hlen Sie vor dem Absenden einen Leitfaden aus",
	change: "Ver\u00e4nderung",
	checkNow: "Jetzt pr\u00fcfen",
	minutes: "Protokoll",
	clickHere: "Klicken Sie hier",
	youAlmostDone: "Sie sind fast fertig!",
	setOrg: "So richten Sie Ihre Organisation ein",
	apps: "Apps",
	me: "Ich",
	playStep: "Play-Schritt",
	miniPlayerHelp: "Hilfe",
	defaultMiniPlayerHelp: "Hilfe",
	defaultConfirmIfSlideshowOrRedirect: "Schritt ist f\u00fcr die aktuelle URL nicht verf\u00fcgbar.<br>M\u00f6chten Sie zur Schritt-URL gehen oder eine Diashow abspielen?",
	defaultServiceErrorMessage: "Hoppla! Ein Fehler ist aufgetreten. Bitte versuchen Sie es nach einiger Zeit erneut. Sie k\u00f6nnen uns auch eine E-Mail an support@csod.com senden, um Unterst\u00fctzung zu erhalten",
	defaultMaintenanceMessage: "Wartung im Gange. Bitte kontaktieren Sie uns \u00fcber support@csod.com",
	userNotFollowingGuideMessage: "Es sieht so aus, als w\u00fcrden Sie Schritte ausf\u00fchren, die nicht Teil dieses Handbuchs sind. Wenn Sie dem Guide nicht mehr folgen m\u00f6chten, klicken Sie auf Exit Guide",
	defaultUserNotFollowingGuideMessage: "Es sieht so aus, als w\u00fcrden Sie Schritte ausf\u00fchren, die nicht Teil dieses Handbuchs sind. Wenn Sie dem Guide nicht mehr folgen m\u00f6chten, klicken Sie auf Exit Guide",
	resumeGuide: "Leitfaden zum Lebenslauf",
	defaultResumeGuideMessage: "Leitfaden zum Lebenslauf",
	backToLogin: "Zur\u00fcck zum Login",
	filters: "Filter",
	thisApp: "Diese App",
	thisWebsite: "Diese Website",
	maxFreeTourLimit: "Maximales Limit der erreichten Touren",
	passwordRegexCheck: "Das Kennwort muss mindestens 8 Zeichen enthalten, darunter mindestens einen Gro\u00df-, einen Klein- und einen numerischen Wert.",
	countLimit: "99+",
	microsoftServiceKey: "Geben Sie Ihren Microsoft Cognitive Services Speech-Abonnementschl\u00fcssel ein.",
	numberOfImgFile: "Die Anzahl der Bild- und Textdateien sollte gleich sein",
	availableOn: "Verf\u00fcgbar auf",
	tooltipUnpubWorkflowTitle: "Unver\u00f6ffentlichter Workflow",
	tooltipUnpubParentWorkflowTitle: "Ver\u00f6ffentlichter Workflow, unver\u00f6ffentlichte \u00fcbergeordnete Ordner",
	tooltipPubParentWorkflowTitle: "Ver\u00f6ffentlichter Workflow, Ver\u00f6ffentlichter Ordner",
	tooltipUnpubTooltipTitle: "Unver\u00f6ffentlichte QuickInfo",
	tooltipUnpubParentTooltipTitle: "QuickInfo ver\u00f6ffentlicht, unver\u00f6ffentlichte \u00fcbergeordnete Ordner",
	tooltipPubParentTooltipTitle: "QuickInfo ver\u00f6ffentlicht, Ordner \"Ver\u00f6ffentlicht\"",
	tooltipUnpubTutorialTitle: "Unver\u00f6ffentlichtes Tutorial",
	tooltipUnpubParentTutorialTitle: "Ver\u00f6ffentlichtes Lernprogramm, Unver\u00f6ffentlichte \u00fcbergeordnete Ordner",
	tooltipPubParentTutorialTitle: "Lernprogramm \"Ver\u00f6ffentlicht\", \"Ver\u00f6ffentlichter Ordner\"",
	tooltipUnpubSubFolderTitle: "Unver\u00f6ffentlichter Unterordner",
	tooltipUnpubSubFolderDesc: "Verwenden von Unterordnern zum Organisieren von Hilfslinien",
	tooltipUnpubParentSubFolderTitle: "Ver\u00f6ffentlichter Unterordner, Unver\u00f6ffentlichter \u00fcbergeordneter Ordner",
	tooltipPubParentSubFolderTitle: "Ver\u00f6ffentlichter Unterordner, Ver\u00f6ffentlichter Ordner",
	tooltipPubParentSubFolderDesc: "Organisiert Guides",
	exitSurvey: "Exit-Umfrage",
	disable: "Abschalten",
	instructionExitSurvey: "Exit Survey wird angezeigt, wenn ein Benutzer einen Guide vor Abschluss verl\u00e4sst",
	msgVideoNotFound: "Hochladen Ihres Videos, bitte versuchen Sie es nach einiger Zeit",
	msgGiphyNotFound: "Hochladen Ihres GIF, bitte versuchen Sie es nach einiger Zeit",
	userPref: "Meine Einstellungen",
	manageAccount: "Admin-Portal",
	analyticsPortal: "Insights-Portal",
	errorInvalidUrl: "Keine g\u00fcltige URL",
	wbFooterText: "Technisches Lernen im ITS-Bereich",
	navigationMenu: "Navigationsmen\u00fc",
	clearHistory: "Verlauf l\u00f6schen",
	userDeniedMessage: "Benutzer verweigert Kamera- und Mikrofonzugriffsberechtigungen",
	pushNotification: "Push-Benachrichtigungen",
	viewDetail: "Details anzeigen",
	contactAdmin: "Bitte wenden Sie sich an support@csod.com oder Ihren Administrator, um weitere Unterst\u00fctzung zu erhalten.",
	noAppOnDomain: "Anwendung ist nicht f\u00fcr aktuelle Dom\u00e4ne zugewiesen ",
	noGuidesOnDomain: "Keine Guides gefunden",
	apply: "Anwenden",
	invalidLoginCred: "Ung\u00fcltige Anmeldedaten. Ihr Konto wird nach mehreren erfolglosen Versuchen gesperrt, Sie erhalten eine E-Mail, um Ihr Konto zu entsperren, oder Sie k\u00f6nnen Ihr Passwort zur\u00fccksetzen",
	resendOTP: "OTP erneut senden",
	sendFeedback: "Feedback senden",
	guideNotExist: "Dieses Handbuch ist auf dieser Seite nicht verf\u00fcgbar (Fehler: Dom\u00e4nenkonflikt) ",
	cdnAccess: "<b>Es tut uns leid<\/b> <br><br>Es scheint, dass es ein Problem mit unseren Servern gibt.<br> Wir wurden \u00fcber den Fehler informiert und werden ihn so schnell wie m\u00f6glich beheben",
	tourPlayError: "Guide kann nicht gespielt werden. Fehler beim Abrufen von Guide-Details",
	playerMode: "Spielermodus",
	closePanel: "Bedienfeld schlie\u00dfen",
	switchCreatorMode: "In den Creator-Modus wechseln",
	extensionContextError: "Der Erweiterungskontext wird ung\u00fcltig gemacht. Bitte laden Sie die Seite neu, um fortzufahren",
	otpSent: "OTP wurde erneut an Ihre E-Mail gesendet, bitte \u00fcberpr\u00fcfen Sie Ihren Posteingang",
	startOver: "Neu anfangen",
	yesResume: "Fortsetzen",
	dontShowAgain: "Nicht mehr anzeigen",
	notificationHeader: "Sie haben eine Benachrichtigung!",
	watchLater: "Sp\u00e4ter ansehen",
	pushSnoozeMsg: "Diese Benachrichtigung wird f\u00fcr",
	showAgain: "Erneut anzeigen",
	noGuidesOnThisTab: "Es gibt keine Benachrichtigungen auf dieser Seite",
	iAgree: "Ich stimme zu",
	viewMore: "Mehr anzeigen",
	lostInternetConnection: "Verbindung zum Server unterbrochen. Bitte stellen Sie die Verbindung wieder her und versuchen Sie es erneut.",
	next: "Weiter",
	recent: "Aktuell",
	older: "\u00c4lter",
	atoz: "A - Z",
	ztoa: "Z - A",
	clear: "Klar",
	tooltipDontShowAgain: "Benachrichtigungen werden nicht mehr angezeigt. Um eine Benachrichtigung jetzt zu aktivieren, bewegen Sie den Mauszeiger dar\u00fcber und klicken Sie auf \"Erneut anzeigen\".",
	tooltipWatchLater1: "Benachrichtigungen werden f\u00fcr",
	tooltipWatchLater2: "und wird danach erscheinen. Um eine Benachrichtigung jetzt zu aktivieren, bewegen Sie den Mauszeiger dar\u00fcber und klicken Sie auf \"Erneut anzeigen\".",
	hour: "Stunde",
	hours: "Stunden",
	insightsTracker: "Insights-Tracker",
	slideshow: "Diashow",
	autoplay: "AUTOMATISCHE ABSPIELUNG",
	powerFormOldData: "Vorhandene Daten",
	powerFormNewData: "Verwenden Sie dieses Formular, um neue Daten einzugeben",
	powerFormNewDataMore: "Wenn Ihre vorhandenen Daten nicht sichtbar sind, klicken Sie bitte auf den Pfeil oben links, um Ihre Daten anzuzeigen. Die Daten m\u00fcssen dann in das zul\u00e4ssige Aufz\u00e4hlungsformat kopiert werden.",
	powerFormTitle: "Dateneingabe-Assistent",
	powerFormMandatory: "Dies ist ein Pflichtfeld, maximale Zeichenbegrenzung ",
	belongToOtherApp: "Dieses Handbuch wird auf {TOURURL} erstellt, das zur {APPNAME}-App geh\u00f6rt. Bitte kopieren Sie diese Anleitung in diese App und versuchen Sie es erneut.",
	setDomain: "Wenn Sie sicher sind, dass {TOURURL} in den aktuellen Anwendungsdom\u00e4neneinstellungen hinzugef\u00fcgt werden soll, f\u00fcgen Sie es hinzu und versuchen Sie es erneut.",
	on: "AUF",
	off: "AUS",
	btnPrev: "Zur\u00fcck",
	btnPrevious: "Vorhergehend",
	taskList: "Aufgabenliste",
	unprocessedVideo: "Bitte warten Sie, w\u00e4hrend Ihr Video verarbeitet wird.",
	searchResult: "Suchergebnis",
	pleaseWait: "Bitte warten!",
	mediaDownloadMsg: "W\u00e4hrend wir Ihre Dateien f\u00fcr den Download vorbereiten",
	mediaFileNotFound: "Mediendatei nicht gefunden",
	searchInFolder: "Im Ordner suchen",
	currentPageSearchPlaceholder: "Suchen Sie nach Guide(s), die auf der aktuellen Seite verf\u00fcgbar sind",
	brandLogo: "Markenlogo",
	accessibility: "Zug\u00e4nglichkeit",
	replay: "Wiederholungsspiel",
	defaultGreetingMessage: "Hall\u00f6chen! Willkommen bei MyGuide. Wie kann ich dir helfen? Bitte beachten Sie, dass ich ein Bot bin.",
	defaultErrorMessage: "Es tut mir leid, das habe ich nicht verstanden. K\u00f6nnten Sie etwas konkreter werden? ",
	defaultEndMessage: "Wir sind fertig, vielen Dank!",
	greetingMessage: "Hall\u00f6chen! Willkommen bei MyGuide. Wie kann ich dir helfen? Bitte beachten Sie, dass ich ein Bot bin.",
	errorMessage: "Es tut mir leid, das habe ich nicht verstanden. K\u00f6nnten Sie etwas konkreter werden? ",
	endMessage: "Wir sind fertig, vielen Dank!",
	guideLnkToRedirect: "Verwenden Sie den folgenden Link, um auf die Seite umzuleiten und die Anleitung abzuspielen",
	otpTimer: "Sie k\u00f6nnen es erneut versuchen in ",
	seconds: " Nachschlag",
	limitWarning: "Sie haben die maximale Grenze f\u00fcr erfolglose Versuche erreicht",
	403: "Wir hatten ein Problem mit dieser Anfrage. Bitte versuchen Sie dies erneut. Wenn das Problem weiterhin besteht, melden Sie uns dies an support@csod.com",
	405: "Bei der Bearbeitung dieser Anfrage ist ein Problem aufgetreten. Bitte versuchen Sie dies erneut. Wenn das Problem weiterhin besteht, melden Sie uns dies an support@csod.com",
	429: "Zu viele Anfragen",
	1003: "Bei der Authentifizierung ist ein Problem aufgetreten. Bitte melden Sie sich erneut an und versuchen Sie es erneut. Wenn das Problem weiterhin besteht, aktualisieren Sie die Seite, und versuchen Sie es erneut.",
	1007: "Bei der Authentifizierung ist ein Problem aufgetreten. Bitte versuchen Sie es erneut. Wenn das Problem weiterhin besteht, melden Sie uns dies an support@csod.com",
	1005: "<b>Es tut uns leid<\/b> <br><br>Es scheint, dass es ein Problem mit der Anfrage oder mit unseren Servern gibt.<br> Wir wurden \u00fcber den Fehler informiert und werden ihn so schnell wie m\u00f6glich beheben",
	1009: "Benutzer-E-Mail-Adresse ist nicht verifiziert",
	1014: "Wartung im Gange. Bitte kontaktieren Sie uns \u00fcber support@csod.com",
	1017: "Bei der Authentifizierung ist ein Problem aufgetreten. Bitte melden Sie sich erneut an und versuchen Sie es erneut. Wenn das Problem weiterhin besteht, melden Sie uns dies an support@csod.com",
	1018: "Sie haben die maximale Grenze zum Erstellen von Schritten erreicht",
	2000: "Wir hatten ein Problem mit dieser Anfrage. Wir wurden benachrichtigt. Bitte versuchen Sie dies erneut. Wenn das Problem weiterhin besteht, melden Sie uns dies an support@csod.com",
	2001: "Ung\u00fcltige Anmeldedaten. Ihr Konto wird nach mehreren erfolglosen Versuchen gesperrt, Sie erhalten eine E-Mail, um Ihr Konto zu entsperren, oder Sie k\u00f6nnen Ihr Passwort zur\u00fccksetzen",
	2002: "Ung\u00fcltiges oder abgelaufenes OTP",
	2003: "Hochgeladene Datei ist kein g\u00fcltiges Bild (JPG- und PNG-Dateien werden unterst\u00fctzt)",
	2004: "Sitzung abgelaufen",
	2005: "Wir konnten diesen Benutzer nicht verfolgen. Bitte aktualisieren Sie und versuchen Sie es erneut. Wenn das Problem weiterhin besteht, melden Sie uns dies an support@csod.com",
	2006: "Die E-Mail-Adresse ist falsch. Bitte versuchen Sie es erneut.",
	2007: "Benutzerrolle ung\u00fcltig. Bitte versuchen Sie es erneut.",
	2008: "Sie m\u00fcssen einen korrekten Aufgabentyp angeben",
	2009: "Die angegebene Anwendung ist ung\u00fcltig; Es h\u00e4tte gel\u00f6scht werden k\u00f6nnen oder nie existiert",
	2010: "Ung\u00fcltige Eingabeparameter. Bitte aktualisieren Sie und versuchen Sie es erneut. Wenn das Problem weiterhin besteht, melden Sie uns dies an support@csod.com",
	2011: "Die angegebene Organisation ist ung\u00fcltig; Es h\u00e4tte gel\u00f6scht werden k\u00f6nnen oder nie existiert",
	2012: "In der Anforderung fehlte ein oder ung\u00fcltiger Parameter. Bitte \u00fcberpr\u00fcfen Sie dies erneut und versuchen Sie es erneut. Wenn das Problem weiterhin besteht, melden Sie uns dies an support@csod.com",
	2013: "In der Anforderung fehlte ein oder ung\u00fcltiger Parameter. Bitte \u00fcberpr\u00fcfen Sie dies erneut und versuchen Sie es erneut. Wenn das Problem weiterhin besteht, melden Sie uns dies an support@csod.com",
	2014: "Erforderlicher Parameter f\u00fcr Super Admin[organization_id]",
	2015: "Der bereitgestellte Inhalt der Bilddaten ist ung\u00fcltig. Bitte \u00fcberpr\u00fcfen Sie dies erneut und versuchen Sie es erneut. Wenn das Problem weiterhin besteht, melden Sie uns unter support@csod.com",
	2016: "Ung\u00fcltige Dom\u00e4ne",
	2017: "In der Anforderung fehlte ein oder ung\u00fcltiger Parameter",
	2018: "In der Anforderung fehlte ein oder ung\u00fcltiger Parameter",
	2019: "Was Sie suchen, existiert nicht oder wurde m\u00f6glicherweise gel\u00f6scht",
	2020: "In der Anforderung fehlte ein oder ung\u00fcltiger Parameter",
	2021: "Der Authentifizierungsserver hat beim Versuch, diese Anforderung zu verarbeiten, einen unerwarteten Fehler festgestellt. Bitte melden Sie das Problem support@csod.com",
	2022: "In der Anforderung fehlte ein oder ung\u00fcltiger Parameter. Geben Sie eine g\u00fcltige Team-URL ein.",
	2023: "Der Authentifizierungsserver hat beim Versuch, diese Anforderung zu verarbeiten, einen unerwarteten Fehler festgestellt. Bitte melden Sie das Problem support@csod.com",
	2024: "Die Dateigr\u00f6\u00dfe sollte weniger als 5 MB betragen",
	2025: "In der Anforderung fehlte ein oder ung\u00fcltiger Parameter. Geben Sie eine g\u00fcltige URL ein.",
	2026: "Das Kennwort muss mindestens 8 Zeichen enthalten, darunter mindestens einen Gro\u00df-, einen Klein- und einen numerischen Wert.",
	2027: "Ung\u00fcltiges Passwort",
	2028: "In der Anforderung fehlte ein oder ung\u00fcltiger Parameter",
	2029: "Die von Ihnen angegebene Stadt wird nicht unterst\u00fctzt",
	2030: "In der Anforderung fehlte ein oder ung\u00fcltiger Parameter",
	2031: "Der Authentifizierungsserver hat beim Versuch, diesen Parameter zu verarbeiten, einen unerwarteten Fehler festgestellt. Bitte melden Sie das Problem support@csod.com",
	2032: "Ung\u00fcltiger Parameter[file_id]",
	2033: "Ung\u00fcltige URL. Bitte \u00fcberpr\u00fcfen Sie es erneut und versuchen Sie es erneut.",
	2034: "Der Authentifizierungsserver hat beim Verarbeiten dieser Parameter einen unerwarteten Fehler festgestellt. Bitte melden Sie das Problem support@csod.com",
	2035: "Beim Authentifizierungsserver ist bei der Verarbeitung dieses AppKey ein unerwarteter Fehler aufgetreten. Bitte melden Sie das Problem support@csod.com",
	2036: "Der Authentifizierungsserver hat einen unerwarteten Fehler festgestellt. Bitte aktualisieren Sie diese Seite. Wenn das Problem weiterhin besteht, melden Sie das Problem support@csod.com",
	2044: "Wir scheinen die \u00dcbersetzung f\u00fcr diesen Schritt verlegt zu haben. Bitte wechseln Sie zur Standardsprache und \u00fcbersetzen Sie den Schritt erneut, oder kontaktieren Sie unseren Kundendienst f\u00fcr weitere Details.",
	2200: "Wir stie\u00dfen auf ein Problem beim Zugriff auf Audio- \/ Videosteuerelemente. Bitte \u00fcberpr\u00fcfen Sie Ihre Browsereinstellungen und versuchen Sie dies erneut. Wenn das Problem weiterhin besteht, melden Sie uns unter support@csod.com",
	3061: "Sie k\u00f6nnen nur bis zu 5 Guide(s) anheften",
	4000: "Unterkategorie kann nicht in einem Ordner erstellt werden, wenn bereits ein Guide erstellt wurde",
	4001: "Wenn ein Benutzer bereits ein Super-Admin ist, k\u00f6nnen Sie die Benutzerrolle nicht \u00e4ndern.",
	4002: "Diese Aktion ist in einem ver\u00f6ffentlichten Guide nicht zul\u00e4ssig.",
	4003: "Gesperrter Leitfaden kann nicht ver\u00f6ffentlicht werden",
	4004: "Diese Aktion ist f\u00fcr einen ver\u00f6ffentlichten Ordner nicht zul\u00e4ssig. Bitte heben Sie die Ver\u00f6ffentlichung auf",
	4006: "Die Anwendung muss zur jeweiligen Organisation geh\u00f6ren",
	4007: "Sie sind nicht berechtigt, diese Aktion durchzuf\u00fchren",
	4008: "F\u00fcr diese Unterkategorie ist keine Aktion zul\u00e4ssig",
	4009: "Leitfaden muss ver\u00f6ffentlicht werden",
	4010: "Guide kann nicht in einem Ordner mit einer Unterkategorie erstellt werden",
	4011: "Um Schritt(e) zu erstellen, m\u00fcssen Sie dieses Handbuch entsperren",
	4012: "Um Schritt(e) zu bearbeiten, m\u00fcssen Sie dieses Handbuch entsperren",
	4013: "Um Schritt(e) zu l\u00f6schen, m\u00fcssen Sie dieses Handbuch entsperren",
	4014: "Zum Kopieren und Einf\u00fcgen von Schritt(en) m\u00fcssen Sie dieses Handbuch entsperren",
	3001: "Guide wird in K\u00fcrze f\u00fcr den Export verf\u00fcgbar sein. Um den Status zu \u00fcberpr\u00fcfen, gehen Sie zu \"Aufgabenstatus\" im Kontomen\u00fc",
	3002: "Der Upload wurde gestartet. Bitte aktualisieren oder schlie\u00dfen Sie den Browser erst, wenn der Upload abgeschlossen ist. Sie k\u00f6nnen den Importstatus \u00fcberpr\u00fcfen, sobald er abgeschlossen ist",
	3003: "Benutzer existiert bereits",
	3004: "E-Mail-ID ist bereits verifiziert",
	3005: "Diese URL steht in Konflikt mit anderen Anwendungskonfigurationen, bitte versuchen Sie, eine andere URL hinzuzuf\u00fcgen",
	3006: "Der Ordner muss zur gleichen Anwendung geh\u00f6ren",
	3007: "Dom\u00e4ne existiert bereits",
	3008: "Sie haben das maximale Limit an erstellten\/n Guide(s) erreicht",
	3009: "Umfrage ist bereits im gegebenen Leitfaden vorhanden",
	3010: "Der Schritt muss zum selben Guide geh\u00f6ren.",
	3011: "Diese Organisation wird ausgesetzt. Bitte wenden Sie sich an Ihren Administrator",
	3012: "Guide(s) m\u00fcssen zum selben Ordner geh\u00f6ren",
	3013: "Dieses Handbuch ist bereits mit dem angegebenen Objektpaar und Feldnamen vorhanden.",
	3014: "Benutzer gesperrt",
	3015: "Benutzer bereits verifiziert",
	3017: "OTP wurde erfolgreich an Ihre E-Mail-Adresse gesendet",
	3018: "Rolle ist bereits vorhanden",
	3019: "Land existiert bereits",
	3020: "Stadt existiert bereits",
	3023: "Ihre Organisation ist nicht verifiziert. F\u00fcr Hilfe wenden Sie sich bitte an support@csod.com",
	3024: "JSON-Datei ist f\u00fcr diese Organisation nicht verf\u00fcgbar",
	3025: "Bei der Authentifizierung ist ein Problem aufgetreten. Bitte versuchen Sie dies erneut. Wenn das Problem weiterhin besteht, aktualisieren Sie die Seite, und versuchen Sie es erneut.",
	3026: "JSON-Datei ist f\u00fcr dieses Handbuch nicht verf\u00fcgbar",
	3027: "Kein Schritt verf\u00fcgbar. Erstellen Sie mindestens einen Schritt zum Ver\u00f6ffentlichen des Handbuchs",
	3028: "Maximales Limit f\u00fcr Tourver\u00f6ffentlichungen erreicht",
	3047: "Ihr Konto wurde aufgrund \u00fcberm\u00e4\u00dfiger Anmeldefehler vor\u00fcbergehend gesperrt. Wir haben Ihnen eine E-Mail mit Schritten zum Entsperren gesendet. F\u00fcr weitere Unterst\u00fctzung kontaktieren Sie uns bitte unter support@csod.com",
	3033: "Ung\u00fcltige Anmeldeinformationen. Bitte wenden Sie sich an support@csod.com oder Ihren Administrator, um weitere Unterst\u00fctzung zu erhalten.",
	4020: "Ein Entwurf dieses Leitfadens existiert bereits; Mehrfachentw\u00fcrfe eines Leitfadens sind nicht zul\u00e4ssig.",
	4021: "Ung\u00fcltige Werte des Parameters [envs]",
	2054: "Ein altes und neues Passwort k\u00f6nnen nicht gleich sein",
	playNextBotTour: "N\u00E4chste Bot-Tour spielen",
	defaultBotEndingMessage: "Wir sind fertig, vielen Dank! Sonst noch was, bevor ich loslege?",
	loginNext: "Weiter",
	3068: "Ihr altes Passwort ist abgelaufen. Legen Sie ein neues Passwort f\u00FCr die Anmeldung fest.",
	includeScreen: "Screenshot hinzuf\u00FCgen",
	feedbackPlaceholder: "Haben Sie Feedback? Wir w\u00FCrden es gerne h\u00F6ren!",
	feedbackOptBtn: "Klicken Sie, um Informationen hervorzuheben oder auszublenden",
	highlight: "Markieren",
	send: "Schicken",
	done: "Erledigt",
	hide: "Verstecken"
};
/**
 * @file Defines string constants for player
 * @author Nilesh Pachpande
 */

if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};


GmCXt.playerLbls.en_US = {
	currentPage: "Current Page",
	myChat: "MyChat",
	import: "Import",
	export: "Export",
	redirectLivetour: "Play Live",
	guideNotAvailable: "Guide not available on current URL. Do you want to go to the Guide URL?",
	downloadPPT: "Download PPT",
	btnYes: "Yes",
	btnNo: "No",
	inApp: "In-App",
	live: "Live",
	resume: "Resume",
	tourCloseConfirm: "Do you really want to close this Guide?",
	notifSnoozeDonotMsg: "Please tell us if you want to watch this later or never show the notification?",
	surveyThanksMessage: "Thanks for providing your response",
	testMePassedMessage: "Congratulations! You Passed",
	testMeFailedMessage: "Oops! You Failed",
	testMeGuideEfficiency: "Test efficiency:",
	testMeGuideEffectiveness: "Test effectiveness:",
	testMeTestTime: "Test Time",
	testMeExpectedTime: "Expected Time",
	testMeStepsTaken: "Steps Taken",
	testMeExpectedSteps: "Expected Steps",
	testMeRetakeTestBtn: "Retake Test",
	testMeResultTitle: "MyTest Result",
	ConfirmIfTestMeModeRidirect: "Guide not available on current URL. Do you want to redirect to the Guide URL?",
	feedCmt: "Your feedback is valuable to us!<br> Please tell us what you thought in 500 characters or less",
	doNotShowAgain: "Do not show again",
	neverShowAgain: "Never Show Again",
	skipGuide: "Skip Guide",
	surveyErrorMsg: "Please answer at least one question",
	redirect: "Redirect",
	liveGuide: "Live Guide",
	question: "Question",
	exitGuide: "Exit Guide",
	continueGuide: "Continue Guide",
	stop: "Stop",
	characters: "Characters:",
	survey: "Survey",
	testMeStopMessage: "You are in TestMe mode, click STOP to exit",
	testMeFailedErrorMessage: "You could not reach the goal step.<br>You got {CORRECT_STEPS} steps correct out of {TOTAL_STEPS}.",
	surveyCommentPlaceholder: "Type here! Max 500 characters",
	pushTourSnoozeMsg: "This Auto Launch Tour will be snoozed for",
	of: "of",
	wbMplayerTitle: "Tutorials",
	wbDragTooltip: "Drag and drop this player anywhere on the page",
	dontShowEdResult: "I don't want to see this",
	mPlayerHeaderTitle: "Micro Player",
	closePreview: "Close Preview",
	elmNotFound: "It seems we can't find the element for the step:",
	elmNotFoundInfo: "Ensure you're on the correct page to play this step. Also check if you can see the selected element",
	notExists: "Not Exists",
	elmNotFoundHeader: "Step element not found",
	goToStep: "Go to step",
	notFoundStep: "We couldn't find the element for step #",
	pleaseReselect: "Please try to reselect the element.",
	stepRuleMatchErr: "Configuration error: Step rules do not match",
	guideRuleMatchErr: "Configuration error: Guide rules do not match",
	stepNotFoundRedirect: "Step not found on this page. Do you wish to redirect?",
	doitForMeWarning: "DoItForMe is not available for image, video and survey steps.",
	branchStepMessagePopup: "Please select one of the tasks below to proceed",
	btnSkip: "Skip",
	kindlyHoverPopup: "Kindly hover over this element to open the popup",
	stepPlayIsdefinedPopover: "The step you are going to play is defined on the popover",
	elmNotFoundWestpac: "Step not found – This Guide will end",
	findingElementMessage: "Trying to find step. . .",
	badDomain: "Current domain and URL are not authorized to run MyGuide. Please contact your Admin for help.",
	hostJsError: "There seems to be an error on webpage. MyGuide cannot continue",
	remember: "Remember Me",
	forgotPass: "Forgot Password?",
	dontHavAcc: "Do not have an account?",
	loginTitle: "Login",
	loginOtpScreenTitle: "Verify OTP to Sign In",
	forgetPassTitl: "Reset Password",
	placeholderEmail: "Email ID",
	placeholderPassword: "Password",
	placeholderNewPassword: "New Password",
	placeholderCurrentPassword: "Current Password",
	placeholderFirstname: "First name",
	placeholderLastname: "Last name",
	placeholderPasswordC: "Confirm Password",
	btnCancel: "Cancel",
	btnPayment: "Upgrade plan",
	btnSubmit: "Submit",
	btnLogin: "Login",
	termsOfUse: "Terms of Use",
	andLabel: "and",
	policyPrivacy: "Privacy Policy",
	passwordError: "Password must be 8 digit long",
	confirmPasswordError: "Password and confirm password must be same",
	firstnameError: "Please enter a valid first name",
	lastnameError: "Please enter a valid last name",
	emailError: "Please enter a valid Email ID",
	orgError: "Please enter a valid Organization URL",
	otpError: "Please enter valid OTP",
	placeholderOtp: "Enter your OTP here",
	otpSentDesc: "If a valid email address has been provided, a reset link will be sent to you.<br>If you do not see the email in a few minutes, please check your spam folder for an email from",
	btnOtpVerify: "Verify OTP",
	alreadyHavAcc: "Already have an account?",
	smartbiteMessageError: "Please enter message",
	smartbiteLinkError: "Please enter a valid link",
	noGuidesOnThisPage: "No Guides Available on this page!",
	clickOn: "Click on ",
	contactUs: "Contact Us",
	search: "Search",
	noRecordFound: "No records found",
	category: "Folder",
	subCategory: "Sub Folder",
	confirmPasswordRequired: "Confirm Password Required",
	logInWithSSO: "Login with SSO",
	inputPlaceHolderSearch: "Search for any Guide",
	noGuideAvailableFor: "No Guide(s) were found to match your search",
	tryModifyingYourSearch: "Try modifying your search criteria",
	signInVerifyYourEmail: "This Email ID has not been verified. Please check your email for details",
	signInVerifyYourAccount: "We have sent you an email with an OTP. Please verify your account to complete the Sign In process",
	maintenanceMessage: "Maintenance in progress. Please contact us via support@csod.com",
	back: "Back",
	changePassword: "Change password",
	startTestAuto: "Start Automation Testing",
	msgPasswordChangedSuccess: "Your password has been changed successfully",
	msgConfirmNewPasswordError: "Confirm Password must be the same as New Password",
	enterUrl: 'Enter team URL',
	dragPlaceholderDropThis: "Drop this ",
	dragPlaceholderHere: " here",
	termsOfService: "Terms",
	versionText: "Version",
	videoStepSuccessMessage: "Your step was created successfully",
	importSuccessMessage: "Guide uploaded successfully. Go to Task Status to check import status",
	worldBankHelpSupport: "Some tools, such as Tooltip(s), can only be viewed in the interface",
	helpSupport: "Help & Support",
	page: "page",
	selectAnApplication: "Select an Application",
	refresh: "Refresh",
	loginBtn: "Login",
	account: "Account",
	taskStatus: "Task status ",
	logoutBtn: "Logout",
	app: "App:",
	firstStep: "First Step",
	lastStep: "Last Step",
	startTest: "Start Test",
	noInappStepInGuide: "TestMe cannot proceed since there is no inline step in this guide",
	settingBtn: "Advanced Settings",
	orgSetting: "Organization settings",
	close: "Close",
	pdf: "PDF",
	downloadPptx: "PPT",
	giphy: "GIF",
	downloadWord: "Document",
	downloadBlog: "Blog",
	downloadTxt: "Plain text",
	serviceErrorMessage: "Oops! An error occurred. Please try again after some time. You can also email us at support@csod.com for any assistance",
	guidesTab: "Guides",
	noGuideCreatedYet: "No Guide created yet!",
	noCategoryCreatedYet: "No Folder created yet!",
	chatbot: "MyChat",
	notAutorised: "You do not have the required access, please contact the Admin",
	ok: "OK",
	apiError: "Configuration error. Please contact the Admin",
	select: "Select",
	mute_unmute: "Mute/Un-Mute",
	privacyPolicy: "Privacy & Cookies",
	privacyPolicyText: "MyGuide uses cookies. If you continue, you are agreeing to our Terms and Privacy Policy and giving us consent to use cookies",
	terms: "Terms",
	westPecErrorMessage: "You are not authorised to access this application. Please sign into Westpac's network",
	noApp: "No Applications found",
	role: "Role:",
	all: "All",
	video: "Video",
	course: "Course",
	article: "Article",
	image: "Image",
	pathways: "Pathways",
	preview: "Preview",
	more: "More",
	history: "History",
	publish: "Publish",
	selectGuideLink: "Please select Guide to link",
	selectGuideBeforeSubmit: "Please select a Guide before submit",
	change: "Change",
	checkNow: "Check Now",
	minutes: "minutes",
	clickHere: "click here",
	youAlmostDone: "You're almost done!",
	setOrg: "to set up your Organization",
	apps: "Apps",
	me: "Me",
	playStep: "Play Step",
	miniPlayerHelp: "Help",
	defaultMiniPlayerHelp: "Help",
	defaultConfirmIfSlideshowOrRedirect: "Step not available on current URL.<br>Do you want to go to the Step URL or play slideshow?",
	defaultServiceErrorMessage: "Oops! An error occurred. Please try again after some time. You can also email us at support@csod.com for any assistance",
	defaultMaintenanceMessage: "Maintenance in progress. Please contact us via support@csod.com",
	userNotFollowingGuideMessage: "It looks like you're performing steps that are not part of this Guide. If you no longer wish to follow the Guide, click on Exit Guide",
	defaultUserNotFollowingGuideMessage: "It looks like you're performing steps that are not part of this Guide. If you no longer wish to follow the Guide, click on Exit Guide",
	resumeGuide: "Resume Guide",
	defaultResumeGuideMessage: "Resume Guide",
	backToLogin: "Back to Login",
	filters: "Filters",
	thisApp: "This App",
	thisWebsite: "This Website",
	maxFreeTourLimit: "Max limit of tours reached",
	passwordRegexCheck: "The password must contain a minimum of 8 characters, including at least one uppercase, one lowercase and one numeric value",
	countLimit: "99+",
	microsoftServiceKey: "Please enter your Microsoft Cognitive Services Speech subscription key",
	numberOfImgFile: "The number of image files and text files should be the same",
	availableOn: "Available on",
	tooltipUnpubWorkflowTitle: "Unpublished Workflow",
	tooltipUnpubParentWorkflowTitle: "Published Workflow, Unpublished Parent Folder(s)",
	tooltipPubParentWorkflowTitle: "Published Workflow, Published Folder",
	tooltipUnpubTooltipTitle: "Unpublished Tooltip",
	tooltipUnpubParentTooltipTitle: "Published Tooltip, Unpublished Parent Folder(s)",
	tooltipPubParentTooltipTitle: "Published Tooltip, Published Folder",
	tooltipUnpubTutorialTitle: "Unpublished Tutorial",
	tooltipUnpubParentTutorialTitle: "Published Tutorial, Unpublished Parent Folder(s)",
	tooltipPubParentTutorialTitle: "Published Tutorial, Published Folder",
	tooltipUnpubSubFolderTitle: "Unpublished Sub-folder",
	tooltipUnpubSubFolderDesc: "Use sub-folders to organize Guides",
	tooltipUnpubParentSubFolderTitle: "Published Sub-folder, Unpublished Parent Folder(s)",
	tooltipPubParentSubFolderTitle: "Published Sub-folder, Published Folder",
	tooltipPubParentSubFolderDesc: "Organizes Guides",
	exitSurvey: 'Exit Survey',
	disable: "Disable",
	instructionExitSurvey: "Exit Survey is shown when a user exits a guide before completion",
	msgVideoNotFound: "Uploading your video, please try after some time",
	msgGiphyNotFound: "Uploading your GIF, please try after some time",
	userPref: "My Preferences",
	manageAccount: "Admin portal",
	analyticsPortal: "Insights portal",
	errorInvalidUrl: "Not a valid URL",
	wbFooterText: "ITS Technical Learning",
	navigationMenu: "Navigation menu",
	clearHistory: "Clear History",
	userDeniedMessage: "User denied Camera and Microphone access permissions",
	pushNotification: "Push Notifications",
	viewDetail: "View Detail",
	contactAdmin: "Please contact support@csod.com or your Admin for further assistance",
	noAppOnDomain: "Application is not assigned for current domain ",
	noGuidesOnDomain: "No Guides found",
	apply: "Apply",
	invalidLoginCred: "Invalid login credentials. Your account will be locked after multiple unsuccessful attempts, you will receive an email to unlock your account, or you may reset your password",		
	resendOTP: "Resend OTP",
	sendFeedback: 'Send Feedback',
	guideNotExist: "This Guide is not available on this page (Error: Domain mismatch) ",
	cdnAccess: "<b>We're sorry</b> <br><br>It seems there is problem with our servers.<br> We've been notified of the error and will correct it as soon as possible",
	tourPlayError: "Guide can not be played. Error while retrieving Guide details",
	playerMode: "Player mode",
	closePanel: "Close panel",
	switchCreatorMode: "Switch to Creator Mode",
	extensionContextError: "Extension context is invalidated. Please reload the page to continue",
	otpSent: "OTP has been re-sent to your email, please check your inbox",
	startOver: "Start Again",
	yesResume: "Resume",
	dontShowAgain: "Don't show again",
	notificationHeader: "You've got a notification!",
	watchLater: "Watch later",
	pushSnoozeMsg: "This notification will be snoozed for",
	showAgain: "Show again",
	noGuidesOnThisTab: "There are no notifications on this page",
	iAgree: "I Agree",
	viewMore: "View More",
	lostInternetConnection: "Lost connection to the server. Please reconnect and try again",
	next: "Next",
	recent: "Recent",
	older: "Older",
	atoz: "A - Z",
	ztoa: "Z - A",
	clear: "Clear",
	tooltipDontShowAgain: "Notifications won't appear anymore. To enable a notification now, hover over it and click on 'Show Again'",
	tooltipWatchLater1: "Notifications are snoozed for",
	tooltipWatchLater2: "and will appear after that. To enable a notification now, hover over it and click on 'Show Again'",
	hour: "hour",
	hours: "hours",
	insightsTracker: "Insights Tracker",
	slideshow: "SlideShow",
	autoplay: "AUTOPLAY",
	powerFormOldData: "Existing data",
	powerFormNewData: "Use this form to enter new data",
	powerFormNewDataMore: "If your existing data is not visible, please click on the arrow in the top left to view your data. The data then needs to be copied across into the permitted bulleted format.",
	powerFormTitle: "Data Entry Assistant",
	powerFormMandatory: "This is a mandatory field, max character limit ",
	belongToOtherApp: "This Guide is created on {TOURURL}, which belongs to the {APPNAME} app. Please copy this Guide in that app and try again",
	setDomain: "If you are sure that the {TOURURL} should be added in the current application domain settings, please add and try again",
	on: "ON",
	off: "OFF",
	btnPrev: "Prev",
	btnPrevious: "Previous",
	taskList: "Task List",
	unprocessedVideo: "Please wait while your video is being processed.",
	searchResult: "Search Result",
	pleaseWait: "Please Wait!",
	mediaDownloadMsg: "While we prepare your files for download",
	mediaFileNotFound: "Media file not found",
	searchInFolder: "Search in folder",
	currentPageSearchPlaceholder: "Search for Guide(s) available on current page",
	brandLogo: "Brand Logo",
	accessibility: "Accessibility",
	replay: "Replay",
	defaultGreetingMessage: "Hey! Welcome to MyGuide. How can I help you? Please keep in mind that I am a bot.",
	defaultErrorMessage: "I'm sorry, I did not understand that. Could you be more specific? ",
	greetingMessage: "Hey! Welcome to MyGuide. How can I help you? Please keep in mind that I am a bot.",
	errorMessage: "I'm sorry, I did not understand that. Could you be more specific? ",
	guideLnkToRedirect: "Use the following link to redirect to the page and play the guide",
	otpTimer: "You can try again in ",
	seconds: " seconds",
	limitWarning: "You have reached the maximum limit of unsuccessful attempts",
	403: "We ran into a problem with this request. Please try this again. If the problem persists, report to us at support@csod.com",
	405: "We ran into a problem while processing this request. Please try this again. If the problem persists, report to us at support@csod.com",
	429: "Too many requests",
	1003: "We ran into a problem during authentication. Please re-login and try again. If the problem persists, refresh the page and try again",
	1007: "We ran into a problem during authentication. Please try again. If the problem persists, report to us at support@csod.com",
	1005: "<b>We're sorry</b> <br><br>It seems there is a problem with the request or with our servers.<br> We've been notified of the error and will correct it as soon as possible",
	1009: "User email is not verified",
	1014: "Maintenance in progress. Please contact us via support@csod.com",
	1017: "We ran into a problem during authentication. Please re-login and try again. If the problem persists, report to us at support@csod.com",
	1018: "You have reached the maximum limit to creating steps",
	2000: "We ran into a problem with this request. We have been notified. Please try this again. If the problem persists, report to us at support@csod.com",
	2001: "Invalid login credentials. Your account will be locked after multiple unsuccessful attempts, you will receive an email to unlock your account, or you may reset your password",
	2002: "Invalid or expired OTP",
	2003: "Uploaded file is not a valid image (JPG and PNG files are supported)",
	2004: "Session expired",
	2005: "We could not track this user. Please refresh and try again. If the problem persists, report to us at support@csod.com",
	2006: "Email Address is incorrect. Please try again",
	2007: "User Role invalid. Please try again",
	2008: "You must specify a correct Task type",
	2009: "The given Application is invalid; it could have been deleted or never existed",
	2010: "Invalid input parameters. Please refresh and try again. If the problem persists, report to us at support@csod.com",
	2011: "The given Organization is invalid; it could have been deleted or never existed",
	2012: "There was a missing or invalid parameter in the request. Please re-check and try again. If the problem persists, report to us at support@csod.com",
	2013: "There was a missing or invalid parameter in the request. Please re-check and try again. If the problem persists, report to us at support@csod.com",
	2014: "Parameter required for Super Admin[organization_id]",
	2015: "Image Data content provided is invalid. Please re-check and try again. If the problem persists report to us at support@csod.com",
	2016: "Invalid Domain",
	2017: "There was a missing or invalid parameter in the request",
	2018: "There was a missing or invalid parameter in the request",
	2019: "What you are looking for does not exist or might have been deleted",
	2020: "There was a missing or invalid parameter in the request",
	2021: "The Authentication server encountered an unexpected error while trying to process this request. Please report the problem to support@csod.com",
	2022: "There was a missing or invalid parameter in the request. Please enter a valid Team URL",
	2023: "The Authentication server encountered an unexpected error while trying to process this request. Please report the problem to support@csod.com",
	2024: "File size should be less than 5 MB",
	2025: "There was a missing or invalid parameter in the request. Please enter a valid URL",
	2026: "The password must contain a minimum of 8 characters, including at least one uppercase, one lowercase and one numeric value",
	2027: "Invalid Password",
	2028: "There was a missing or invalid parameter in the request",
	2029: "The City you have provided is not supported",
	2030: "There was a missing or invalid parameter in the request",
	2031: "The Authentication server encountered an unexpected error while trying to process this parameter. Please report the problem to support@csod.com",
	2032: "Invalid parameter[file_id]",
	2033: "Invalid URL. Please re-check and try again",
	2034: "The Authentication server encountered an unexpected error while processing these parameters. Please report the problem to support@csod.com",
	2035: "The Authentication server encountered an unexpected error while processing this AppKey. Please report the problem to support@csod.com",
	2036: "The Authentication server encountered an unexpected error. Please refresh this page. If the problem persists, report the problem to support@csod.com",
	2044: "We seem to have misplaced the translation for this step. Please switch to Default Language and re-translate the step, or contact our customer support for further details.",	
	2200: "We ran into a problem while accessing audio/video controls. Please check your browser settings and try this again. If the problem persists report to us at support@csod.com",
	3061: "You can pin up to 5 Guide(s) only",
	4000: "Sub-category cannot be created inside a Folder, if a Guide is already created",
	4001: "If a user is already a Super Admin, you cannot change the User Role",
	4002: "This action is not allowed on a published Guide",
	4003: "Locked Guide cannot be published",
	4004: "This action is not allowed on a published Folder. Please unpublish it",
	4006: "Application must belong to the given organization",
	4007: "You are not authorised to perform this action",
	4008: "Action is not allowed for this sub-category",
	4009: "Guide must be published",
	4010: "Guide cannot be created inside a folder with a sub-category",
	4011: "To create step(s), you need to unlock this Guide",
	4012: "To edit step(s), you need to unlock this Guide",
	4013: "To delete step(s), you need to unlock this Guide",
	4014: "To copy and paste step(s), you need to unlock this Guide",
	3001: "Guide will be available for export soon. To check the status, go to 'Task Status' under account menu",
	3002: "Upload started. Please do not refresh or close the browser until the upload is completed. You can check the import status once it is completed",
	3003: "User already exists",
	3004: "Email ID is already verified",
	3005: "This URL conflicts with other application configuration, please try to add any other URL",
	3006: "Folder must belong to the same application",
	3007: "Domain already exists",
	3008: "You have reached the maximum limit of created Guide(s)",
	3009: "Survey already exists in the given Guide",
	3010: "The Step must belong to the same Guide",
	3011: "This Organization is suspended. Please contact your Admin",
	3012: "Guide(s) must belong to the same folder",
	3013: "This Guide already exists with the given pair of objects and field name",
	3014: "User suspended",
	3015: "User already verified",
	3017: "OTP has been sent successfully to your email address",
	3018: "Role already exists",
	3019: "Country already exists",
	3020: "City already exists",
	3023: "Your organization is not verified. For help, please contact support@csod.com",
	3024: "JSON file is not available for this organization",
	3025: "We ran into a problem during authentication. Please try this again. If the problem persists refresh the page and try again",
	3026: "JSON file is not available for this Guide",
	3027: "No step available. Create at least one step to publish the Guide",
	3028: "Maximum tour publish limit reached",
	3047: "Your account has been temporarily locked due to excessive login failures. We have sent you an email with steps to unlock it. For more assistance, please contact us at support@csod.com",
	3033: "Invalid credentials. Please contact support@csod.com or your Admin for further assistance.",
	4020: "A draft of this Guide already exists; multiple drafts of a Guide are not permitted.",
	4021: "Invalid values of parameter [envs]",
	2054: "An old and new password can not be the same",
	playNextBotTour: "Play next bot tour",
	defaultBotEndingMessage: "We are done, thank you so much! Anything else before I kick it off?",
	startBotLbl: "Start Bot",
	includeScreen: "Include Screenshot",
	feedbackPlaceholder: "Have feedback? We’d love to hear it!",
	feedbackOptBtn: "Click to highlight or hide info",
	highlight: "Highlight",
	send: "Send",
	done: "Done",
	hide: "Hide",
	multiSelectOptionError: "Please select atleast one option",
	loginNext: "Next",
	3068: "Your old password has expired set new password for login.",
	captchaLbl: "Captcha",
	placeholderEnterCaptcha: "Enter Captcha",
	captchaError: "Please enter valid captcha",
	allGuides: "All Guides",
	helpCenter: "Help Center",
	applicationJsonError: "Application JSON file is not available for this application.",
	feedbackRequired: "Please enter your feedback.",
	default: "Default",
	feedbackImgErrorMsg: "The screenshot was unable to attached to your feedback due to a browser related issue. Please reload the page, click and open the Guide Extension from the Chrome action bar and recapture the screenshot for feedback.",
	tranportURlRedirectionConfirm: "Redirect to transport step url",
	guideContinueConfirm: "Continue with guide"
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.es_ES = {
	currentPage: "P\u00e1gina actual",
	myChat: "mychat",
	import: "Importaci\u00f3n",
	export: "Exportar",
	redirectLivetour: "Juega en vivo",
	guideNotAvailable: "La gu\u00eda no est\u00e1 disponible en la URL actual. \u00bfQuieres ir a la URL de la gu\u00eda?",
	downloadPPT: "Descargar PPT",
	btnYes: "S\u00ed",
	btnNo: "No",
	inApp: "En la aplicaci\u00f3n",
	live: "Vivir",
	resume: "Reanudar",
	tourCloseConfirm: "\u00bfRealmente quieres cerrar esta Gu\u00eda?",
	notifSnoozeDonotMsg: "Por favor, d\u00edganos si desea ver esto m\u00e1s tarde o nunca mostrar la notificaci\u00f3n.",
	surveyThanksMessage: "Gracias por dar su respuesta",
	testMePassedMessage: "\u00a1Felicidades! Has pasado",
	testMeFailedMessage: "\u00a1Vaya! Fallaste",
	testMeGuideEfficiency: "Eficiencia de la prueba:",
	testMeGuideEffectiveness: "Eficacia de la prueba:",
	testMeTestTime: "Tiempo de prueba",
	testMeExpectedTime: "Tiempo esperado",
	testMeStepsTaken: "Medidas adoptadas",
	testMeExpectedSteps: "Pasos esperados",
	testMeRetakeTestBtn: "Prueba de repetici\u00f3n",
	testMeResultTitle: "Resultado de MyTest",
	ConfirmIfTestMeModeRidirect: "La gu\u00eda no est\u00e1 disponible en la URL actual. \u00bfDesea redirigir a la URL de la gu\u00eda?",
	feedCmt: "\u00a1Sus comentarios son valiosos para nosotros!<br> Por favor, d\u00edganos lo que piensa en 500 caracteres o menos",
	doNotShowAgain: "No volver a mostrar",
	neverShowAgain: "No volver a mostrar",
	skipGuide: "Omitir gu\u00eda",
	surveyErrorMsg: "Por favor, responda al menos una pregunta",
	redirect: "Redirigir",
	liveGuide: "Gu\u00eda en vivo",
	question: "Pregunta",
	exitGuide: "Gu\u00eda de salida",
	continueGuide: "Continuar gu\u00eda",
	stop: "Parar",
	characters: "Caracteres:",
	survey: "Encuesta",
	testMeStopMessage: "Est\u00e1 en modo TestMe, haga clic en DETENER para salir",
	testMeFailedErrorMessage: "No pudiste alcanzar el paso de la meta.<br>Obtuviste {CORRECT_STEPS} pasos correctos de {TOTAL_STEPS}.",
	surveyCommentPlaceholder: "\u00a1Escribe aqu\u00ed! M\u00e1x. 500 caracteres",
	pushTourSnoozeMsg: "Este Auto Launch Tour ser\u00e1 pospuesto por",
	of: "de",
	wbMplayerTitle: "Tutoriales",
	wbDragTooltip: "Arrastre y suelte este reproductor en cualquier lugar de la p\u00e1gina",
	dontShowEdResult: "No quiero ver esto",
	mPlayerHeaderTitle: "Micro Player",
	closePreview: "Cerrar vista previa",
	elmNotFound: "Parece que no podemos encontrar el elemento para el paso:",
	elmNotFoundInfo: "Aseg\u00farese de estar en la p\u00e1gina correcta para reproducir este paso. Compruebe tambi\u00e9n si puede ver el elemento seleccionado",
	notExists: "No existe",
	elmNotFoundHeader: "Elemento de paso no encontrado",
	goToStep: "Ir al paso",
	notFoundStep: "No pudimos encontrar el elemento para el paso #",
	pleaseReselect: "Intente volver a seleccionar el elemento.",
	stepRuleMatchErr: "Error de configuraci\u00f3n: las reglas de paso no coinciden",
	guideRuleMatchErr: "Error de configuraci\u00f3n: las reglas de gu\u00eda no coinciden",
	stepNotFoundRedirect: "Paso no encontrado en esta p\u00e1gina. \u00bfDesea redirigir?",
	branchStepMessagePopup: "Seleccione una de las siguientes tareas para continuar",
	btnSkip: "Saltarse",
	kindlyHoverPopup: "Por favor, pase el cursor sobre este elemento para abrir la ventana emergente",
	stepPlayIsdefinedPopover: "El paso que vas a jugar se define en el popover",
	elmNotFoundWestpac: "Paso no encontrado: esta gu\u00eda finalizar\u00e1",
	findingElementMessage: "Tratando de encontrar el paso. . .",
	badDomain: "El dominio actual y la URL no est\u00e1n autorizados para ejecutar MyGuide. Ponte en contacto con tu administrador para obtener ayuda.",
	hostJsError: "Parece que hay un error en la p\u00e1gina web. MyGuide no puede continuar",
	remember: "Recu\u00e9rdame",
	forgotPass: "\u00bfOlvid\u00f3 su contrase\u00f1a?",
	dontHavAcc: "\u00bfNo tienes una cuenta?",
	loginTitle: "Iniciar sesi\u00f3n",
	loginOtpScreenTitle: "Comprobar OTP para iniciar sesi\u00f3n",
	forgetPassTitl: "Restablecer contrase\u00f1a",
	placeholderEmail: "ID de correo electr\u00f3nico",
	placeholderPassword: "Contrase\u00f1a",
	placeholderNewPassword: "Nueva contrase\u00f1a",
	placeholderCurrentPassword: "Contrase\u00f1a actual",
	placeholderFirstname: "Nombre",
	placeholderLastname: "Apellido",
	placeholderPasswordC: "Confirmar contrase\u00f1a",
	btnCancel: "Cancelar",
	btnPayment: "Plan de actualizaci\u00f3n",
	btnSubmit: "Enviar",
	btnLogin: "Iniciar sesi\u00f3n",
	termsOfUse: "T\u00e9rminos de uso",
	andLabel: "y",
	policyPrivacy: "Pol\u00edtica de privacidad",
	passwordError: "La contrase\u00f1a debe tener 8 d\u00edgitos",
	confirmPasswordError: "La contrase\u00f1a y la contrase\u00f1a de confirmaci\u00f3n deben ser las mismas",
	firstnameError: "Introduce un nombre v\u00e1lido",
	lastnameError: "Introduce un apellido v\u00e1lido",
	emailError: "Introduce un ID de correo electr\u00f3nico v\u00e1lido",
	orgError: "Introduce una URL de organizaci\u00f3n v\u00e1lida",
	otpError: "Introduzca OTP v\u00e1lida",
	placeholderOtp: "Ingrese su OTP aqu\u00ed",
	otpSentDesc: "Si se ha proporcionado una direcci\u00f3n de correo electr\u00f3nico v\u00e1lida, se le enviar\u00e1 un enlace de restablecimiento.<br>Si no ve el correo electr\u00f3nico en unos minutos, revise su carpeta de correo no deseado para ver si hay un correo electr\u00f3nico de",
	btnOtpVerify: "Verificar OTP",
	alreadyHavAcc: "\u00bfYa tienes una cuenta?",
	smartbiteMessageError: "Por favor, introduzca el mensaje",
	smartbiteLinkError: "Introduce un enlace v\u00e1lido",
	noGuidesOnThisPage: "\u00a1No hay gu\u00edas disponibles en esta p\u00e1gina!",
	clickOn: "Haga clic en ",
	contactUs: "Cont\u00e1ctenos",
	search: "Buscar",
	noRecordFound: "No se encontraron registros",
	category: "Carpeta",
	subCategory: "Subcarpeta",
	confirmPasswordRequired: "Confirmar contrase\u00f1a requerida",
	logInWithSSO: "Iniciar sesi\u00f3n con SSO",
	inputPlaceHolderSearch: "Busca cualquier Gu\u00eda",
	noGuideAvailableFor: "No se encontraron gu\u00edas que coincidan con su b\u00fasqueda",
	tryModifyingYourSearch: "Prueba a modificar los criterios de b\u00fasqueda",
	signInVerifyYourEmail: "Este ID de correo electr\u00f3nico no se ha verificado. Por favor, revise su correo electr\u00f3nico para m\u00e1s detalles",
	signInVerifyYourAccount: "Le hemos enviado un correo electr\u00f3nico con una OTP. Verifica tu cuenta para completar el proceso de inicio de sesi\u00f3n",
	maintenanceMessage: "Mantenimiento en curso. Por favor, p\u00f3ngase en contacto con nosotros a trav\u00e9s de support@csod.com",
	back: "Atr\u00e1s",
	changePassword: "Cambiar contrase\u00f1a",
	startTestAuto: "Iniciar pruebas de automatizaci\u00f3n",
	msgPasswordChangedSuccess: "Su contrase\u00f1a se ha cambiado correctamente",
	msgConfirmNewPasswordError: "Confirmar contrase\u00f1a debe ser el mismo que Nueva contrase\u00f1a",
	enterUrl: "Introducir la URL del equipo",
	dragPlaceholderDropThis: "Suelta esto ",
	dragPlaceholderHere: " aqu\u00ed",
	termsOfService: "Letra chica",
	versionText: "Versi\u00f3n",
	videoStepSuccessMessage: "Su paso se cre\u00f3 correctamente",
	importSuccessMessage: "Gu\u00eda cargada correctamente. Vaya a Estado de la tarea para comprobar el estado de importaci\u00f3n",
	worldBankHelpSupport: "Algunas herramientas, como la informaci\u00f3n sobre herramientas, solo se pueden ver en la interfaz",
	helpSupport: "Ayuda y soporte",
	page: "p\u00e1gina",
	selectAnApplication: "Seleccione una aplicaci\u00f3n",
	refresh: "Actualizar",
	loginBtn: "Iniciar sesi\u00f3n",
	account: "Cuenta",
	taskStatus: "Estado de la tarea ",
	logoutBtn: "Cerrar sesi\u00f3n",
	app: "Aplicaci\u00f3n:",
	firstStep: "Primer paso",
	lastStep: "\u00daltimo paso",
	startTest: "Iniciar prueba",
	noInappStepInGuide: "TestMe no puede continuar ya que no hay ning\u00fan paso en l\u00ednea en esta gu\u00eda",
	settingBtn: "Configuraci\u00f3n avanzada",
	orgSetting: "Configuraci\u00f3n de la organizaci\u00f3n",
	close: "Cerrar",
	pdf: ".PDF",
	downloadPptx: ".PPT",
	giphy: ".GIF",
	downloadWord: "Documento",
	downloadBlog: "Blog",
	downloadTxt: "Texto sin formato",
	serviceErrorMessage: "\u00a1Vaya! Se ha producido un error. Int\u00e9ntalo de nuevo despu\u00e9s de un tiempo. Tambi\u00e9n puede enviarnos un correo electr\u00f3nico a support@csod.com para cualquier ayuda.",
	guidesTab: "Gu\u00edas",
	noGuideCreatedYet: "\u00a1A\u00fan no se ha creado ninguna gu\u00eda!",
	noCategoryCreatedYet: "\u00a1A\u00fan no se ha creado ninguna carpeta!",
	chatbot: "mychat",
	notAutorised: "No tiene el acceso requerido, comun\u00edquese con el administrador",
	ok: "De acuerdo",
	apiError: "Error de configuraci\u00f3n. Por favor, p\u00f3ngase en contacto con el administrador",
	select: "Escoger",
	mute_unmute: "Silenciar\/Dessilenciar",
	privacyPolicy: "Privacidad & cookies",
	privacyPolicyText: "MyGuide utiliza cookies. Si contin\u00faa, acepta nuestros T\u00e9rminos y Pol\u00edtica de privacidad y nos da su consentimiento para usar cookies.",
	terms: "Letra chica",
	westPecErrorMessage: "No est\u00e1 autorizado a acceder a esta aplicaci\u00f3n. Inicie sesi\u00f3n en la red de Westpac",
	noApp: "No se han encontrado aplicaciones",
	role: "Rol:",
	all: "Todo",
	video: "V\u00eddeo",
	course: "Curso",
	article: "Art\u00edculo",
	image: "Imagen",
	pathways: "V\u00edas",
	preview: "Vista previa",
	more: "M\u00e1s",
	history: "Historia",
	publish: "Publicar",
	selectGuideLink: "Por favor, seleccione Gu\u00eda para el enlace",
	selectGuideBeforeSubmit: "Por favor, seleccione una Gu\u00eda antes de enviar",
	change: "Cambio",
	checkNow: "Comprobar ahora",
	minutes: "acta",
	clickHere: "haga clic aqu\u00ed",
	youAlmostDone: "\u00a1Ya casi terminaste!",
	setOrg: "para configurar su organizaci\u00f3n",
	apps: "Aplicaciones",
	me: "Me",
	playStep: "Paso de juego",
	miniPlayerHelp: "Ayuda",
	defaultMiniPlayerHelp: "Ayuda",
	defaultConfirmIfSlideshowOrRedirect: "Paso no disponible en la URL actual.<br>\u00bfDesea ir a la URL del paso o reproducir presentaci\u00f3n de diapositivas?",
	defaultServiceErrorMessage: "\u00a1Vaya! Se ha producido un error. Int\u00e9ntalo de nuevo despu\u00e9s de un tiempo. Tambi\u00e9n puede enviarnos un correo electr\u00f3nico a support@csod.com para cualquier ayuda.",
	defaultMaintenanceMessage: "Mantenimiento en curso. Por favor, p\u00f3ngase en contacto con nosotros a trav\u00e9s de support@csod.com",
	userNotFollowingGuideMessage: "Parece que est\u00e1 realizando pasos que no forman parte de esta gu\u00eda. Si ya no desea seguir la Gu\u00eda, haga clic en Salir de la Gu\u00eda",
	defaultUserNotFollowingGuideMessage: "Parece que est\u00e1 realizando pasos que no forman parte de esta gu\u00eda. Si ya no desea seguir la Gu\u00eda, haga clic en Salir de la Gu\u00eda",
	resumeGuide: "Gu\u00eda de curr\u00edculum",
	defaultResumeGuideMessage: "Gu\u00eda de curr\u00edculum",
	backToLogin: "Volver al inicio de sesi\u00f3n",
	filters: "Filtros",
	thisApp: "Esta aplicaci\u00f3n",
	thisWebsite: "Este sitio web",
	maxFreeTourLimit: "L\u00edmite m\u00e1ximo de tours alcanzado",
	passwordRegexCheck: "La contrase\u00f1a debe contener un m\u00ednimo de 8 caracteres, incluyendo al menos una may\u00fascula, una min\u00fascula y un valor num\u00e9rico",
	countLimit: "99+",
	microsoftServiceKey: "Escriba su clave de suscripci\u00f3n de voz de Microsoft Cognitive Services",
	numberOfImgFile: "El n\u00famero de archivos de imagen y archivos de texto debe ser el mismo",
	availableOn: "Disponible en",
	tooltipUnpubWorkflowTitle: "Flujo de trabajo no publicado",
	tooltipUnpubParentWorkflowTitle: "Flujo de trabajo publicado, carpetas principales no publicadas",
	tooltipPubParentWorkflowTitle: "Flujo de trabajo publicado, carpeta publicada",
	tooltipUnpubTooltipTitle: "Informaci\u00f3n sobre herramientas no publicada",
	tooltipUnpubParentTooltipTitle: "Informaci\u00f3n sobre herramientas publicada, carpetas principales no publicadas",
	tooltipPubParentTooltipTitle: "Informaci\u00f3n sobre herramientas publicada, carpeta publicada",
	tooltipUnpubTutorialTitle: "Tutorial in\u00e9dito",
	tooltipUnpubParentTutorialTitle: "Tutorial publicado, carpetas principales no publicadas",
	tooltipPubParentTutorialTitle: "Tutorial publicado, Carpeta publicada",
	tooltipUnpubSubFolderTitle: "Subcarpeta no publicada",
	tooltipUnpubSubFolderDesc: "Usar subcarpetas para organizar las gu\u00edas",
	tooltipUnpubParentSubFolderTitle: "Subcarpeta publicada, carpetas principales no publicadas",
	tooltipPubParentSubFolderTitle: "Subcarpeta publicada, carpeta publicada",
	tooltipPubParentSubFolderDesc: "Organiza Gu\u00edas",
	exitSurvey: "Encuesta de salida",
	disable: "Inutilizar",
	instructionExitSurvey: "La encuesta de salida se muestra cuando un usuario sale de una gu\u00eda antes de completarla.",
	msgVideoNotFound: "Subiendo su video, int\u00e9ntelo despu\u00e9s de un tiempo",
	msgGiphyNotFound: "Subiendo su GIF, int\u00e9ntelo despu\u00e9s de un tiempo",
	userPref: "Mis preferencias",
	manageAccount: "Portal de administraci\u00f3n",
	analyticsPortal: "Portal de estad\u00edsticas",
	errorInvalidUrl: "No es una URL v\u00e1lida",
	wbFooterText: "Aprendizaje t\u00e9cnico de ITS",
	navigationMenu: "Men\u00fa de navegaci\u00f3n",
	clearHistory: "Borrar historial",
	userDeniedMessage: "Permisos de acceso a la c\u00e1mara y al micr\u00f3fono denegados por el usuario",
	pushNotification: "Notificaciones push",
	viewDetail: "Ver detalle",
	contactAdmin: "P\u00f3ngase en contacto con support@csod.com o con su administrador para obtener m\u00e1s ayuda.",
	noAppOnDomain: "La aplicaci\u00f3n no est\u00e1 asignada para el dominio actual ",
	noGuidesOnDomain: "No se han encontrado gu\u00edas",
	apply: "Aplicar",
	invalidLoginCred: "Credenciales de inicio de sesi\u00f3n no v\u00e1lidas. Su cuenta se bloquear\u00e1 despu\u00e9s de varios intentos fallidos, recibir\u00e1 un correo electr\u00f3nico para desbloquear su cuenta o puede restablecer su contrase\u00f1a.",
	resendOTP: "Reenviar OTP",
	sendFeedback: "Enviar comentarios",
	guideNotExist: "Esta gu\u00eda no est\u00e1 disponible en esta p\u00e1gina (Error: no coincide el dominio) ",
	cdnAccess: "<b>Lo sentimos<\/b> <br><br>Parece que hay un problema con nuestros servidores.<br> Hemos sido notificados del error y lo corregiremos lo antes posible",
	tourPlayError: "Gu\u00eda no se puede jugar. Error al recuperar los detalles de la gu\u00eda",
	playerMode: "Modo de jugador",
	closePanel: "Cerrar panel",
	switchCreatorMode: "Cambiar al modo Creador",
	extensionContextError: "El contexto de extensi\u00f3n est\u00e1 invalidado. Por favor, vuelva a cargar la p\u00e1gina para continuar",
	otpSent: "OTP ha sido reenviado a su correo electr\u00f3nico, por favor revise su bandeja de entrada",
	startOver: "Empezar de nuevo",
	yesResume: "Reanudar",
	dontShowAgain: "No volver a mostrar",
	notificationHeader: "\u00a1Tienes una notificaci\u00f3n!",
	watchLater: "Ver m\u00e1s tarde",
	pushSnoozeMsg: "Esta notificaci\u00f3n se pospondr\u00e1 por",
	showAgain: "Mostrar de nuevo",
	noGuidesOnThisTab: "No hay notificaciones en esta p\u00e1gina",
	iAgree: "De acuerdo",
	viewMore: "Ver m\u00e1s",
	lostInternetConnection: "Se ha perdido la conexi\u00f3n con el servidor. Vuelva a conectarse e int\u00e9ntelo de nuevo",
	next: "Pr\u00f3ximo",
	recent: "Reciente",
	older: "Mayor",
	atoz: "A - Z",
	ztoa: "Z - A",
	clear: "Claro",
	tooltipDontShowAgain: "Las notificaciones ya no aparecer\u00e1n. Para habilitar una notificaci\u00f3n ahora, pase el cursor sobre ella y haga clic en 'Mostrar de nuevo'",
	tooltipWatchLater1: "Las notificaciones se posponen para",
	tooltipWatchLater2: "y aparecer\u00e1 despu\u00e9s de eso. Para habilitar una notificaci\u00f3n ahora, pase el cursor sobre ella y haga clic en 'Mostrar de nuevo'",
	hour: "hora",
	hours: "horas",
	insightsTracker: "Rastreador de estad\u00edsticas",
	slideshow: "Presentaci\u00f3n de diapositivas",
	autoplay: "REPRODUCCI\u00d3N AUTOM\u00c1TICA",
	powerFormOldData: "Datos existentes",
	powerFormNewData: "Utilice este formulario para introducir nuevos datos",
	powerFormNewDataMore: "Si sus datos existentes no son visibles, haga clic en la flecha en la parte superior izquierda para ver sus datos. A continuaci\u00f3n, los datos deben copiarse en el formato con vi\u00f1etas permitido.",
	powerFormTitle: "Asistente de entrada de datos",
	powerFormMandatory: "Este es un campo obligatorio, l\u00edmite m\u00e1ximo de caracteres ",
	belongToOtherApp: "Esta gu\u00eda se crea en {TOURURL}, que pertenece a la aplicaci\u00f3n {APPNAME}. Copie esta gu\u00eda en esa aplicaci\u00f3n e int\u00e9ntelo de nuevo",
	setDomain: "Si est\u00e1 seguro de que {TOURURL} debe agregarse en la configuraci\u00f3n actual del dominio de la aplicaci\u00f3n, agregue e int\u00e9ntelo de nuevo",
	on: "EN",
	off: "APAGADO",
	btnPrev: "Prev",
	btnPrevious: "Anterior",
	taskList: "Lista de tareas",
	unprocessedVideo: "Espere mientras se procesa su video.",
	searchResult: "Resultado de la b\u00fasqueda",
	pleaseWait: "\u00a1Espera!",
	mediaDownloadMsg: "Mientras preparamos sus archivos para su descarga",
	mediaFileNotFound: "Archivo multimedia no encontrado",
	searchInFolder: "Buscar en carpeta",
	currentPageSearchPlaceholder: "Buscar gu\u00eda(s) disponible(s) en la p\u00e1gina actual",
	brandLogo: "Logotipo de la marca",
	accessibility: "Accesibilidad",
	replay: "Repetir",
	defaultGreetingMessage: "\u00a1Eh! Bienvenido a MyGuide. \u00bfC\u00f3mo puedo ayudarle? Por favor, tenga en cuenta que soy un bot.",
	defaultErrorMessage: "Lo siento, no entend\u00ed eso. \u00bfPodr\u00eda ser m\u00e1s espec\u00edfico? ",
	defaultEndMessage: "Hemos terminado, \u00a1muchas gracias!",
	greetingMessage: "\u00a1Eh! Bienvenido a MyGuide. \u00bfC\u00f3mo puedo ayudarle? Por favor, tenga en cuenta que soy un bot.",
	errorMessage: "Lo siento, no entend\u00ed eso. \u00bfPodr\u00eda ser m\u00e1s espec\u00edfico? ",
	endMessage: "Hemos terminado, \u00a1muchas gracias!",
	guideLnkToRedirect: "Utilice el siguiente enlace para redirigir a la p\u00e1gina y reproducir la gu\u00eda",
	otpTimer: "Puedes volver a intentarlo en ",
	seconds: " sobras",
	limitWarning: "Has alcanzado el l\u00edmite m\u00e1ximo de intentos fallidos",
	403: "Nos encontramos con un problema con esta solicitud. Int\u00e9ntalo de nuevo. Si el problema persiste, inf\u00f3rmenos en support@csod.com",
	405: "Nos encontramos con un problema al procesar esta solicitud. Int\u00e9ntalo de nuevo. Si el problema persiste, inf\u00f3rmenos en support@csod.com",
	429: "Demasiadas solicitudes",
	1003: "Nos encontramos con un problema durante la autenticaci\u00f3n. Vuelva a iniciar sesi\u00f3n e int\u00e9ntelo de nuevo. Si el problema persiste, actualice la p\u00e1gina e int\u00e9ntelo de nuevo",
	1007: "Nos encontramos con un problema durante la autenticaci\u00f3n. Int\u00e9ntalo de nuevo. Si el problema persiste, inf\u00f3rmenos en support@csod.com",
	1005: "<b>Lo sentimos<\/b> <br><br>Parece que hay un problema con la solicitud o con nuestros servidores.<br> Hemos sido notificados del error y lo corregiremos lo antes posible",
	1009: "El correo electr\u00f3nico del usuario no est\u00e1 verificado",
	1014: "Mantenimiento en curso. Por favor, p\u00f3ngase en contacto con nosotros a trav\u00e9s de support@csod.com",
	1017: "Nos encontramos con un problema durante la autenticaci\u00f3n. Vuelva a iniciar sesi\u00f3n e int\u00e9ntelo de nuevo. Si el problema persiste, inf\u00f3rmenos en support@csod.com",
	1018: "Ha alcanzado el l\u00edmite m\u00e1ximo para crear pasos",
	2000: "Nos encontramos con un problema con esta solicitud. Hemos sido notificados. Int\u00e9ntalo de nuevo. Si el problema persiste, inf\u00f3rmenos en support@csod.com",
	2001: "Credenciales de inicio de sesi\u00f3n no v\u00e1lidas. Su cuenta se bloquear\u00e1 despu\u00e9s de varios intentos fallidos, recibir\u00e1 un correo electr\u00f3nico para desbloquear su cuenta o puede restablecer su contrase\u00f1a.",
	2002: "OTP no v\u00e1lida o caducada",
	2003: "El archivo cargado no es una imagen v\u00e1lida (se admiten archivos JPG y PNG)",
	2004: "Sesi\u00f3n caducada",
	2005: "No pudimos rastrear a este usuario. Actualice e int\u00e9ntelo de nuevo. Si el problema persiste, inf\u00f3rmenos en support@csod.com",
	2006: "La direcci\u00f3n de correo electr\u00f3nico es incorrecta. Int\u00e9ntalo de nuevo",
	2007: "Rol de usuario no v\u00e1lido. Int\u00e9ntalo de nuevo",
	2008: "Debe especificar un tipo de tarea correcto",
	2009: "La Aplicaci\u00f3n dada no es v\u00e1lida; Podr\u00eda haberse eliminado o nunca existi\u00f3",
	2010: "Par\u00e1metros de entrada no v\u00e1lidos. Actualice e int\u00e9ntelo de nuevo. Si el problema persiste, inf\u00f3rmenos en support@csod.com",
	2011: "La organizaci\u00f3n dada no es v\u00e1lida; Podr\u00eda haberse eliminado o nunca existi\u00f3",
	2012: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud. Vuelva a comprobarlo e int\u00e9ntelo de nuevo. Si el problema persiste, inf\u00f3rmenos en support@csod.com",
	2013: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud. Vuelva a comprobarlo e int\u00e9ntelo de nuevo. Si el problema persiste, inf\u00f3rmenos en support@csod.com",
	2014: "Par\u00e1metro requerido para Super Admin[organization_id]",
	2015: "El contenido de los datos de imagen proporcionado no es v\u00e1lido. Vuelva a comprobarlo e int\u00e9ntelo de nuevo. Si el problema persiste, inf\u00f3rmenos en support@csod.com",
	2016: "Dominio no v\u00e1lido",
	2017: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud",
	2018: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud",
	2019: "Lo que est\u00e1 buscando no existe o podr\u00eda haber sido eliminado",
	2020: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud",
	2021: "El servidor de autenticaci\u00f3n encontr\u00f3 un error inesperado al intentar procesar esta solicitud. Por favor, informe del problema a support@csod.com",
	2022: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud. Introduce una URL de equipo v\u00e1lida",
	2023: "El servidor de autenticaci\u00f3n encontr\u00f3 un error inesperado al intentar procesar esta solicitud. Por favor, informe del problema a support@csod.com",
	2024: "El tama\u00f1o del archivo debe ser inferior a 5 MB",
	2025: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud. Introduce una URL v\u00e1lida",
	2026: "La contrase\u00f1a debe contener un m\u00ednimo de 8 caracteres, incluyendo al menos una may\u00fascula, una min\u00fascula y un valor num\u00e9rico",
	2027: "Contrase\u00f1a no v\u00e1lida",
	2028: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud",
	2029: "La ciudad que ha proporcionado no es compatible",
	2030: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud",
	2031: "El servidor de autenticaci\u00f3n encontr\u00f3 un error inesperado al intentar procesar este par\u00e1metro. Por favor, informe del problema a support@csod.com",
	2032: "Par\u00e1metro no v\u00e1lido[file_id]",
	2033: "URL no v\u00e1lida. Vuelva a comprobarlo e int\u00e9ntelo de nuevo",
	2034: "El servidor de autenticaci\u00f3n encontr\u00f3 un error inesperado al procesar estos par\u00e1metros. Por favor, informe del problema a support@csod.com",
	2035: "El servidor de autenticaci\u00f3n encontr\u00f3 un error inesperado al procesar esta AppKey. Por favor, informe del problema a support@csod.com",
	2036: "El servidor de autenticaci\u00f3n encontr\u00f3 un error inesperado. Por favor, actualice esta p\u00e1gina. Si el problema persiste, inf\u00f3rmelo a support@csod.com",
	2044: "Parece que hemos extraviado la traducci\u00f3n para este paso. Cambie al idioma predeterminado y vuelva a traducir el paso, o p\u00f3ngase en contacto con nuestro servicio de atenci\u00f3n al cliente para obtener m\u00e1s detalles.",
	2200: "Nos encontramos con un problema al acceder a los controles de audio \/ video. Compruebe la configuraci\u00f3n de su navegador e int\u00e9ntelo de nuevo. Si el problema persiste, inf\u00f3rmenos en support@csod.com",
	3061: "Solo puedes fijar hasta 5 gu\u00eda(s)",
	4000: "La subcategor\u00eda no se puede crear dentro de una carpeta, si ya se ha creado una Gu\u00eda",
	4001: "Si un usuario ya es superadministrador, no puede cambiar el rol de usuario",
	4002: "Esta acci\u00f3n no est\u00e1 permitida en una Gu\u00eda publicada",
	4003: "No se puede publicar la gu\u00eda bloqueada",
	4004: "Esta acci\u00f3n no est\u00e1 permitida en una carpeta publicada. Por favor, anule su publicaci\u00f3n",
	4006: "La solicitud debe pertenecer a la organizaci\u00f3n dada",
	4007: "Usted no est\u00e1 autorizado a realizar esta acci\u00f3n",
	4008: "No se permite la acci\u00f3n para esta subcategor\u00eda",
	4009: "La gu\u00eda debe ser publicada",
	4010: "La gu\u00eda no se puede crear dentro de una carpeta con una subcategor\u00eda",
	4011: "Para crear paso(s), debe desbloquear esta Gu\u00eda",
	4012: "Para editar el paso (s), debe desbloquear esta Gu\u00eda",
	4013: "Para eliminar paso(s), debe desbloquear esta Gu\u00eda",
	4014: "Para copiar y pegar paso(s), debe desbloquear esta Gu\u00eda",
	3001: "La gu\u00eda estar\u00e1 disponible para la exportaci\u00f3n pronto. Para verificar el estado, vaya a 'Estado de la tarea' en el men\u00fa de la cuenta",
	3002: "Carga iniciada. No actualice ni cierre el navegador hasta que se complete la carga. Puede verificar el estado de importaci\u00f3n una vez que se haya completado",
	3003: "El usuario ya existe",
	3004: "El ID de correo electr\u00f3nico ya est\u00e1 verificado",
	3005: "Esta URL entra en conflicto con otra configuraci\u00f3n de la aplicaci\u00f3n, intente agregar cualquier otra URL",
	3006: "La carpeta debe pertenecer a la misma aplicaci\u00f3n",
	3007: "El dominio ya existe",
	3008: "Ha alcanzado el l\u00edmite m\u00e1ximo de gu\u00eda(s) creada(s)",
	3009: "La encuesta ya existe en la Gu\u00eda dada",
	3010: "El paso debe pertenecer a la misma Gu\u00eda",
	3011: "Esta Organizaci\u00f3n queda suspendida. Ponte en contacto con tu administrador",
	3012: "Las gu\u00edas deben pertenecer a la misma carpeta",
	3013: "Esta gu\u00eda ya existe con el par de objetos y el nombre de campo dados",
	3014: "Usuario suspendido",
	3015: "Usuario ya verificado",
	3017: "OTP se ha enviado correctamente a su direcci\u00f3n de correo electr\u00f3nico",
	3018: "El rol ya existe",
	3019: "El pa\u00eds ya existe",
	3020: "La ciudad ya existe",
	3023: "Su organizaci\u00f3n no est\u00e1 verificada. Para obtener ayuda, p\u00f3ngase en contacto con support@csod.com",
	3024: "El archivo JSON no est\u00e1 disponible para esta organizaci\u00f3n",
	3025: "Nos encontramos con un problema durante la autenticaci\u00f3n. Int\u00e9ntalo de nuevo. Si el problema persiste, actualice la p\u00e1gina e int\u00e9ntelo de nuevo",
	3026: "El archivo JSON no est\u00e1 disponible para esta gu\u00eda",
	3027: "No hay ning\u00fan paso disponible. Crear al menos un paso para publicar la Gu\u00eda",
	3028: "Se ha alcanzado el l\u00edmite m\u00e1ximo de publicaci\u00f3n de giras",
	3047: "Su cuenta se ha bloqueado temporalmente debido a errores de inicio de sesi\u00f3n excesivos. Le hemos enviado un correo electr\u00f3nico con los pasos para desbloquearlo. Para obtener m\u00e1s ayuda, p\u00f3ngase en contacto con nosotros en support@csod.com",
	3033: "Credenciales no v\u00e1lidas. P\u00f3ngase en contacto con support@csod.com o con su administrador para obtener m\u00e1s ayuda.",
	4020: "Ya existe un proyecto de esta Gu\u00eda; no se permiten los borradores m\u00faltiples de una gu\u00eda.",
	4021: "Valores no v\u00e1lidos del par\u00e1metro [envs]",
	2054: "Una contrase\u00f1a antigua y nueva no puede ser la misma",
	playNextBotTour: "Reproducir el pr\u00F3ximo tour de bots",
	defaultBotEndingMessage: "Ya hemos terminado, \u00A1muchas gracias! \u00BFAlgo m\u00E1s antes de empezar?",
	loginNext: "Pr\u00f3ximo",
	3068: "Su contrase\u00F1a anterior ha caducado establezca una nueva contrase\u00F1a para iniciar sesi\u00F3n.",
	includeScreen: "Incluir captura de pantalla",
	feedbackPlaceholder: "\u00BFTiene comentarios? \u00A1Nos encantar\u00EDa escucharlo!",
	feedbackOptBtn: "Haz clic para resaltar u ocultar informaci\u00F3n",
	highlight: "Destacar",
	send: "Enviar",
	done: "Hecho",
	hide: "Esconder"
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.fr_CA = {
    "403": "Nous avons rencontré un problème avec cette demande. Veuillez réessayer. Si le problème persiste, signalez-le nous à l'adresse suivante : support@csod.com.",
    "405": "Nous avons rencontré un problème lors du traitement de cette demande. Veuillez réessayer. Si le problème persiste, signalez-le nous à l'adresse suivante : support@csod.com.",
    "429": "Trop de demandes",
    "1003": "Un problème est survenu lors de l'authentification. Veuillez vous reconnecter et essayer de nouveau. Si le problème persiste, actualisez la page et essayez de nouveau.",
    "1005": "<b>Nous sommes vraiment désolés</b><br><br>, il semble qu'il y ait un problème avec votre demande ou avec nos serveurs.<br> Nous avons été informés de l'erreur et nous la corrigerons dès que possible",
    "1007": "Un problème est survenu lors de l'authentification. Veuillez réessayer. Si le problème persiste, signalez-le nous à l'adresse suivante : support@csod.com.",
    "1009": "L'e-mail de l'utilisateur n'est pas vérifié",
    "1014": "Maintenance en cours. Veuillez nous contacter via l'adresse support@csod.com",
    "1017": "Un problème est survenu lors de l'authentification. Veuillez vous reconnecter et essayer de nouveau. Si le problème persiste, signalez-le nous à l'adresse suivante : support@csod.com.",
    "1018": "Vous avez atteint la limite maximale pour créer des étapes",
    "2000": "Nous avons rencontré un problème avec cette demande. Nous en avons été informés. Veuillez réessayer. Si le problème persiste, signalez-le nous à l'adresse suivante : support@csod.com.",
    "2001": "Identifiants de connexion non valides. Votre compte sera verrouillé après plusieurs tentatives infructueuses Vous recevrez un courriel pour déverrouiller votre compte ou vous pouvez réinitialiser votre mot de passe",
    "2002": "Mot de passe à usage unique invalide ou expiré",
    "2003": "Le fichier téléchargé n'est pas une image valide (seuls les fichiers JPG et PNG sont pris en charge)",
    "2004": "Session expirée",
    "2005": "Nous n'avons pas pu suivre cet utilisateur. Veuillez actualiser et essayer de nouveau. Si le problème persiste, signalez-le nous à l'adresse suivante : support@csod.com.",
    "2006": "L'adresse courriel est incorrecte. Réessayez",
    "2007": "Rôle utilisateur invalide. Réessayez",
    "2008": "Vous devez saisir un type de tâche adapté",
    "2009": "L'application donnée n'est pas valide; elle a pu être supprimée ou n'a peut-être jamais existé.",
    "2010": "Paramètres d'entrée non valides. Veuillez actualiser et essayer de nouveau. Si le problème persiste, signalez-le nous à l'adresse suivante : support@csod.com.",
    "2011": "L'organisation donnée n'est pas valide; elle a pu être supprimée ou n'a peut-être jamais existé.",
    "2012": "La requête comportait un paramètre manquant ou invalide. Veuillez vérifier à nouveau et réessayer. Si le problème persiste, signalez-le nous à l'adresse suivante : support@csod.com.",
    "2013": "La requête comportait un paramètre manquant ou invalide. Veuillez vérifier à nouveau et réessayer. Si le problème persiste, signalez-le nous à l'adresse suivante : support@csod.com.",
    "2014": "Paramètre requis pour super Admin [organization_id]",
    "2015": "Le contenu des données d'image fournies n'est pas valide. Veuillez vérifier à nouveau et réessayer. Si le problème persiste, signalez-le nous à l'adresse suivante : support@csod.com",
    "2016": "Domaine non valide",
    "2017": "La requête comportait un paramètre manquant ou invalide",
    "2018": "La requête comportait un paramètre manquant ou invalide",
    "2019": "Ce que vous recherchez n'existe pas ou a peut-être été supprimé.",
    "2020": "La requête comportait un paramètre manquant ou invalide",
    "2021": "Le serveur d'authentification a rencontré une erreur inattendue lors du traitement de cette demande. Veuillez signaler le problème à l'adresse support@csod.com",
    "2022": "La requête comportait un paramètre manquant ou invalide. Veuillez saisir une URL d'équipe valide",
    "2023": "Le serveur d'authentification a rencontré une erreur inattendue lors du traitement de cette demande. Veuillez signaler le problème à l'adresse support@csod.com",
    "2024": "La taille du fichier doit être inférieure à 5 Mo",
    "2025": "La requête comportait un paramètre manquant ou invalide. Saisissez une URL correcte",
    "2026": "Le mot de passe doit contenir un minimum de 8 caractères, dont au moins une majuscule, une minuscule et une valeur numérique",
    "2027": "Mot de passe non valide",
    "2028": "La requête comportait un paramètre manquant ou invalide",
    "2029": "La ville que vous avez fournie n'est pas prise en charge",
    "2030": "La requête comportait un paramètre manquant ou invalide",
    "2031": "Le serveur d'authentification a rencontré une erreur inattendue lors du traitement de ce paramètre Veuillez signaler le problème à l'adresse support@csod.com",
    "2032": "Paramètre [file_id] non valide",
    "2033": "URL non valide. Veuillez vérifier à nouveau et réessayer",
    "2034": "Le serveur d'authentification a rencontré une erreur inattendue lors du traitement de ces paramètres. Veuillez signaler le problème à l'adresse support@csod.com",
    "2035": "Le serveur d'authentification a rencontré une erreur inattendue lors du traitement de cette AppKey. Veuillez signaler le problème à l'adresse support@csod.com",
    "2036": "Le serveur d'authentification a rencontré une erreur inattendue. Veuillez rafraîchir cette page. Si le problème persiste, signalez-le à l'adresse support@csod.com.",
    "2044": "Il semble que nous ayons égaré la traduction de cette étape. Veuillez passer à la langue par défaut et traduire à nouveau l'étape, ou communiquer avec notre service clientèle pour plus de détails.",
    "2054": "Un ancien et un nouveau mot de passe ne peuvent pas être identiques",
    "2200": "Nous avons rencontré un problème lors de l'accès aux commandes audio et vidéo. Veuillez vérifier les paramètres de votre navigateur et réessayer. Si le problème persiste, signalez-le nous à l'adresse suivante : support@csod.com",
    "3001": "Le Guide sera bientôt disponible à l'exportation. Pour vérifier l'état, accédez à « État de la tâche » dans le menu du compte.",
    "3002": "Le téléversement a commencé. Veuillez ne pas actualiser ou fermer le navigateur tant que le téléversement n'est pas terminé. Vous pouvez vérifier le statut de l'importation une fois qu'elle est terminée",
    "3003": "L'utilisateur existe déjà",
    "3004": "L'identifiant de messagerie est déjà vérifié",
    "3005": "Cette URL est en conflit avec une autre configuration d'application, veuillez essayer d'ajouter une autre URL.",
    "3006": "Le dossier doit appartenir à la même application",
    "3007": "Le domaine existe déjà",
    "3008": "Vous avez atteint la limite maximale pour créer des Guide(s).",
    "3009": "Survey existe déjà dans le Guide donné.",
    "3010": "L'étape doit appartenir au même Guide",
    "3011": "Cette organisation est suspendue. Veuillez communiquer avec votre Admin",
    "3012": "Les Guide(s) doivent appartenir au même dossier",
    "3013": "Ce Guide existe déjà avec la paire d'objets et le nom du champ donnés",
    "3014": "Utilisateur suspendu",
    "3015": "Utilisateur déjà vérifié",
    "3017": "Le mot de passe à usage unique a été envoyé avec succès à votre adresse e-mail",
    "3018": "Le rôle existe déjà",
    "3019": "Le pays existe déjà",
    "3020": "La ville existe déjà",
    "3023": "Votre organisation n'est pas vérifiée. Pour obtenir de l'aide, veuillez utiliser l'adresse support@csod.com",
    "3024": "Le fichier JSON n'est pas disponible pour cette organisation.",
    "3025": "Un problème est survenu lors de l'authentification. Veuillez réessayer. Si le problème persiste, actualisez la page et essayez de nouveau",
    "3026": "Le fichier JSON n'est pas disponible pour ce Guide",
    "3027": "Aucune étape disponible. Créez au moins une étape pour publier le Guide",
    "3028": "La limite maximale de publication des tours a été atteinte",
    "3033": "Authentifiants non valides Veuillez communiquer avec support@csod.com ou avec votre Admin pour obtenir de l'aide.",
    "3047": "Votre compte a été temporairement verrouillé en raison d'échecs de connexion excessifs. Nous vous avons envoyé un e-mail avec les étapes pour le déverrouiller. Pour plus d'assistance, veuillez nous contacter à l'adresse support@csod.com",
    "3061": "Vous pouvez épingler jusqu’à 5 Guide(s) seulement",
    "3068": "Votre ancien mot de passe a expiré. Définissez un nouveau mot de passe pour vous connecter.",
    "4000": "Une sous-catégorie ne peut pas être créée dans un dossier si un Guide est déjà créé.",
    "4001": "Si un utilisateur est déjà un super Admin, vous ne pouvez pas modifier le rôle d'utilisateur.",
    "4002": "Cette action n'est pas autorisée sur un Guide publié",
    "4003": "Le Guide verrouillé ne peut pas être publié",
    "4004": "Cette action n'est pas autorisée sur un dossier publié. Veuillez annuler sa publication",
    "4006": "L'application doit appartenir à l'organisation donnée",
    "4007": "Vous n’êtes pas autorisé(e) à effectuer cette action",
    "4008": "L'action n'est pas autorisée pour cette sous-catégorie",
    "4009": "Le Guide doit être publié",
    "4010": "Le Guide ne peut pas être créé à l'intérieur d'un dossier comportant une sous-catégorie",
    "4011": "Pour créer une ou plusieurs étape(s), vous devez déverrouiller ce Guide",
    "4012": "Pour éditer une ou plusieurs étape(s), vous devez déverrouiller ce Guide",
    "4013": "Pour supprimer une ou plusieurs étape(s), vous devez déverrouiller ce Guide",
    "4014": "Pour copier et coller une ou plusieurs étape(s), vous devez déverrouiller ce Guide",
    "4020": "Un brouillon de ce Guide existe déjà; la rédaction de plusieurs brouillons d'un Guide n'est pas autorisée.",
    "4021": "Valeurs invalides du paramètre [envs]",
    "currentPage": "Page actuels",
    "myChat": "MyChat",
    "import": "Importer",
    "export": "Exporter au format",
    "redirectLivetour": "Lire en direct",
    "guideNotAvailable": "Le Guide n'est pas disponible sur l'URL actuelle. Voulez-vous aller à l'Guide du URL?",
    "downloadPPT": "Télécharger les PPT",
    "btnYes": "Oui",
    "btnNo": "Non",
    "inApp": "Dans l’application",
    "live": "En direct",
    "resume": "Reprendre",
    "tourCloseConfirm": "Voulez-vous vraiment fermer ce Guide?",
    "notifSnoozeDonotMsg": "Veuillez nous indiquer si vous souhaitez regarder cela plus tard ou ne jamais afficher la notification.",
    "surveyThanksMessage": "Merci de votre réponse",
    "testMePassedMessage": "Félicitations! Vous avez réussi",
    "testMeFailedMessage": "Oups! Vous avez échoué",
    "testMeGuideEfficiency": "Efficacité du test :",
    "testMeGuideEffectiveness": "Efficacité du test :",
    "testMeTestTime": "Durée de l'examen",
    "testMeExpectedTime": "Temps prévu",
    "testMeStepsTaken": "Mesures prises",
    "testMeExpectedSteps": "Étapes prévues",
    "testMeRetakeTestBtn": "Test de reprise",
    "testMeResultTitle": "Résultat MyTest",
    "ConfirmIfTestMeModeRidirect": "Le Guide n'est pas disponible sur l'URL actuelle. Voulez-vous rediriger vers l'URL du Guide?",
    "feedCmt": "Votre avis nous est précieux!<br> Dites-nous ce que vous en avez pensé en 500 caractères maximum",
    "doNotShowAgain": "Ne plus afficher ce message",
    "neverShowAgain": "Ne plus jamais afficher",
    "skipGuide": "Ignorer le Guide",
    "surveyErrorMsg": "Veuillez répondre à au moins une question",
    "redirect": "Redirection",
    "liveGuide": "Guide en direct",
    "question": "Question",
    "exitGuide": "Quitter Guide",
    "continueGuide": "Continuer le Guide",
    "stop": "Arrêter",
    "characters": "Caractères :",
    "survey": "Survey",
    "testMeStopMessage": "Vous êtes en mode TestMe. Cliquez sur STOP pour le quitter",
    "testMeFailedErrorMessage": "Vous n'avez pas pu atteindre l'étape de l'objectif.<br> Vous avez {CORRECT_STEPS} étapes correctes sur {TOTAL_STEPS}.",
    "surveyCommentPlaceholder": "Tapez ici! 500 caractères maximum",
    "pushTourSnoozeMsg": "Ce tour lancé par Auto sera suspendu pour",
    "of": "de",
    "wbMplayerTitle": "Tutoriels",
    "wbDragTooltip": "Faites glisser et déposez ce lecteur n'importe où sur la page",
    "dontShowEdResult": "Je ne souhaite pas voir cela",
    "mPlayerHeaderTitle": "Micro lecteur",
    "closePreview": "Fermer l’aperçu",
    "elmNotFound": "Il semble que nous ne puissions pas trouver l'élément pour l'étape :",
    "elmNotFoundInfo": "Assurez-vous d'être sur la bonne page pour lire cette étape. Vérifiez également que vous pouvez voir l'élément sélectionné",
    "notExists": "N'existe pas",
    "elmNotFoundHeader": "L'élément d'étape n'a pas été trouvé",
    "goToStep": "Aller à l'étape",
    "notFoundStep": "Nous n'avons pas trouvé l'élément pour l'étape n°",
    "pleaseReselect": "Veuillez essayer de resélectionner l'élément.",
    "stepRuleMatchErr": "Erreur de configuration : Les règles d'étape ne correspondent pas",
    "guideRuleMatchErr": "Erreur de configuration : Les règles du Guide ne correspondent pas",
    "stepNotFoundRedirect": "Étape non trouvée sur cette page. Souhaitez-vous rediriger?",
    "branchStepMessagePopup": "Veuillez sélectionner l'une des tâches ci-dessous pour continuer",
    "btnSkip": "Ignorer",
    "kindlyHoverPopup": "Survolez cet élément pour ouvrir la fenêtre contextuelle.",
    "stepPlayIsdefinedPopover": "L'étape que vous allez lire est définie dans la fenêtre « popover »",
    "elmNotFoundWestpac": "Étape non trouvée - Ce Guide va se terminer",
    "findingElementMessage": "Essayer de trouver l'étape. . .",
    "badDomain": "Le domaine actuel et l'URL ne sont pas autorisés à exécuter MyGuide. Veuillez communiquer avec votre Admin pour obtenir de l'aide.",
    "hostJsError": "La page web semble contenir une erreur. MyGuide ne peut pas continuer",
    "remember": "Mémoriser mon profil",
    "forgotPass": "Mot de passe oublié?",
    "dontHavAcc": "Vous n’avez pas de compte?",
    "loginTitle": "Connexion",
    "loginOtpScreenTitle": "Vérifiez le mot de passe à usage unique pour vous connecter",
    "forgetPassTitl": "Réinitialiser le mot de passe",
    "placeholderEmail": "ID de messagerie",
    "placeholderPassword": "Mot de passe",
    "placeholderNewPassword": "Nouveau mot de passe",
    "placeholderCurrentPassword": "Mot de passe actuel",
    "placeholderFirstname": "Prénom",
    "placeholderLastname": "Nom",
    "placeholderPasswordC": "Confirmer le mot de passe",
    "btnCancel": "Annuler",
    "btnPayment": "Mettre à jour le plan",
    "btnSubmit": "Soumettre",
    "btnLogin": "Connexion",
    "termsOfUse": "Modalités d’utilisation",
    "andLabel": "et",
    "policyPrivacy": "Politique de confidentialité",
    "passwordError": "Le mot de passe doit être composé de 8 chiffres",
    "confirmPasswordError": "Le mot de passe et le mot de passe de confirmation doivent être identiques",
    "firstnameError": "Veuillez saisir un prénom valide",
    "lastnameError": "Veuillez saisir un nom de famille valide",
    "emailError": "Veuillez saisir une adresse courriel valide",
    "orgError": "Veuillez saisir une organisation valide URL",
    "otpError": "Veuillez saisir une OTP valide",
    "placeholderOtp": "Entrez votre mot de passe à usage unique ici",
    "otpSentDesc": "Si une adresse courriel valide a été fournie, un lien de réinitialisation vous sera envoyé.<br>Si vous ne voyez pas le courriel dans quelques minutes, veuillez vérifier votre dossier de courrier indésirable à la recherche d'un courriel provenant de",
    "btnOtpVerify": "Vérifier le mot de passe à usage unique",
    "alreadyHavAcc": "Vous avez déjà un compte?",
    "smartbiteMessageError": "Veuillez saisir le message",
    "smartbiteLinkError": "Veuillez saisir un lien valide",
    "noGuidesOnThisPage": "Aucun Guides disponibles sur cette page!",
    "clickOn": "Cliquer sur",
    "contactUs": "Contactez-nous",
    "search": "Rechercher",
    "noRecordFound": "Aucun enregistrement trouvé",
    "category": "Dossier",
    "subCategory": "Sous-dossier",
    "confirmPasswordRequired": "Confirmation du mot de passe requise",
    "logInWithSSO": "Connectez-vous avec la connexion unique",
    "inputPlaceHolderSearch": "Recherchez n'importe quel Guide",
    "noGuideAvailableFor": "Aucun Guide ne correspond à votre recherche.",
    "tryModifyingYourSearch": "Essayez de modifier vos critères de recherche",
    "signInVerifyYourEmail": "Cet identifiant courriel n'a pas été vérifié. Veuillez vérifier votre courriel pour obtenir des détails",
    "signInVerifyYourAccount": "Nous vous avons envoyé un courriel contenant un mot de passe à usage unique. Veuillez vérifier votre compte pour terminer le processus de connexion",
    "maintenanceMessage": "Maintenance en cours. Veuillez nous contacter via l'adresse support@csod.com",
    "back": "Retour",
    "changePassword": "Changer le mot de passe",
    "startTestAuto": "Commencer le test d'automatisation",
    "msgPasswordChangedSuccess": "Votre mot de passe a été modifié avec succès",
    "msgConfirmNewPasswordError": "Le mot de passe confirmé doit être le même que le nouveau mot de passe",
    "enterUrl": "Saisissez l'équipe URL",
    "dragPlaceholderDropThis": "Déposez ceci",
    "dragPlaceholderHere": "ici",
    "termsOfService": "Conditions",
    "versionText": "Version",
    "videoStepSuccessMessage": "Votre étape a été créée avec succès",
    "importSuccessMessage": "Guide téléchargé avec succès. Allez dans Statut de la tâche pour vérifier le statut de l'importation",
    "worldBankHelpSupport": "Certains outils, tels que les Tooltip(s), ne peuvent être visualisés que dans l'interface",
    "helpSupport": "Aide & Soutien",
    "page": "page",
    "selectAnApplication": "Sélectionnez une application",
    "refresh": "Actualiser",
    "loginBtn": "Connexion",
    "account": "Compte",
    "taskStatus": "Statut de la tâche",
    "logoutBtn": "Déconnexion",
    "app": "Application :",
    "firstStep": "Première étape",
    "lastStep": "Dernière étape",
    "startTest": "Début du test",
    "noInappStepInGuide": "TestMe ne peut pas continuer, car ce guide ne contient pas d'étape inline.",
    "settingBtn": "Paramètres avancés",
    "orgSetting": "Paramètres de l'organisation",
    "close": "Fermer",
    "pdf": "PDF",
    "downloadPptx": "PPT",
    "giphy": "GIF",
    "downloadWord": "Document",
    "downloadBlog": "Blogue",
    "downloadTxt": "Texte brut",
    "serviceErrorMessage": "Oups! Une erreur s'est produite. Veuillez patienter quelques instants avant de réessayer. Pour obtenir de l'aide, vous pouvez également nous envoyer un courriel à l'adresse suivante : support@csod.com.",
    "guidesTab": "Guides",
    "noGuideCreatedYet": "Aucun Guide n'a encore été créé!",
    "noCategoryCreatedYet": "Aucun dossier n'a encore été créé!",
    "chatbot": "MyChat",
    "notAutorised": "Vous n'avez pas l'accès requis. Veuillez communiquer avec l'Admin",
    "ok": "OK",
    "apiError": "Erreur de configuration. Veuillez communiquer avec l'Admin.",
    "select": "Sélectionnez",
    "mute_unmute": "Couper/Activer le son",
    "privacyPolicy": "Confidentialité & témoins",
    "privacyPolicyText": "MyGuide utilise des témoins. Si vous continuez, vous acceptez nos conditions et notre politique de confidentialité et vous nous donnez votre accord pour utiliser des témoins",
    "terms": "Conditions",
    "westPecErrorMessage": "Vous n'êtes pas autorisé à accéder à cette application. Veuillez vous connecter au réseau Westpac",
    "noApp": "Aucune application trouvée",
    "role": "Rôle :",
    "all": "Tout",
    "video": "Vidéo",
    "course": "Cours",
    "article": "Article",
    "image": "Image",
    "pathways": "Pathways",
    "preview": "Prévisualisation",
    "more": "Plus",
    "history": "Historique",
    "publish": "Publier",
    "selectGuideLink": "Veuillez sélectionner le Guide à lier",
    "selectGuideBeforeSubmit": "Veuillez sélectionner un Guide avant de soumettre",
    "change": "Modifier",
    "checkNow": "Vérifier maintenant",
    "minutes": "minutes",
    "clickHere": "cliquez ici",
    "youAlmostDone": "Vous avez presque terminé!",
    "setOrg": "pour créer votre organisation",
    "apps": "Applications",
    "me": "Moi",
    "playStep": "Étape de lecture",
    "miniPlayerHelp": "Aide",
    "defaultMiniPlayerHelp": "Aide",
    "defaultConfirmIfSlideshowOrRedirect": "Étape non disponible sur l'URL actuelle.<br>Voulez-vous aller à l'URL de l'étape ou lire un diaporama?",
    "defaultServiceErrorMessage": "Oups! Une erreur s'est produite. Veuillez patienter quelques instants avant de réessayer. Pour obtenir de l'aide, vous pouvez également nous envoyer un courriel à l'adresse suivante : support@csod.com.",
    "defaultMaintenanceMessage": "Maintenance en cours. Veuillez nous contacter via l'adresse support@csod.com",
    "userNotFollowingGuideMessage": "Il semble que vous réalisiez des étapes qui ne font pas partie de ce Guide. Si vous ne souhaitez plus suivre le Guide, cliquez sur Quitter le Guide",
    "defaultUserNotFollowingGuideMessage": "Il semble que vous réalisiez des étapes qui ne font pas partie de ce Guide. Si vous ne souhaitez plus suivre le Guide, cliquez sur Quitter le Guide",
    "resumeGuide": "Reprendre le Guide",
    "defaultResumeGuideMessage": "Reprendre le Guide",
    "backToLogin": "Retour à la page de connexion",
    "filters": "Filtres",
    "thisApp": "Cette application",
    "thisWebsite": "Ce site Web",
    "maxFreeTourLimit": "Limite maximale de tours atteinte",
    "passwordRegexCheck": "Le mot de passe doit contenir un minimum de 8 caractères, dont au moins une majuscule, une minuscule et une valeur numérique",
    "countLimit": "99+",
    "microsoftServiceKey": "Veuillez saisir votre clé d'abonnement à Microsoft Cognitive Services Speech.",
    "numberOfImgFile": "Le nombre de fichiers image et de fichiers texte doit être identique",
    "availableOn": "Disponible sur",
    "tooltipUnpubWorkflowTitle": "Workflow non publié",
    "tooltipUnpubParentWorkflowTitle": "Workflow publié, Dossier(s) parent(s) non publié(s)",
    "tooltipPubParentWorkflowTitle": "WorkflowPublié, Dossier publié",
    "tooltipUnpubTooltipTitle": "Tooltip non publié",
    "tooltipUnpubParentTooltipTitle": "Tooltip publié, Dossier(s) parent(s) non publié(s)",
    "tooltipPubParentTooltipTitle": "TooltipPublié, Dossier publié",
    "tooltipUnpubTutorialTitle": "Tutorial non publié",
    "tooltipUnpubParentTutorialTitle": "Tutorial publié, Dossier(s) parent(s) non publié(s)",
    "tooltipPubParentTutorialTitle": "TutorialPublié, Dossier publié",
    "tooltipUnpubSubFolderTitle": "Sous-dossier non publié",
    "tooltipUnpubSubFolderDesc": "Utiliser des sous-dossiers pour organiser les Guides",
    "tooltipUnpubParentSubFolderTitle": "Sous-dossier publié, dossier(s) parent(s) non publié(s)",
    "tooltipPubParentSubFolderTitle": "Sous-dossier publié, dossier publié",
    "tooltipPubParentSubFolderDesc": "Organise les Guides",
    "exitSurvey": "Quitter Survey",
    "disable": "Désactiver",
    "instructionExitSurvey": "Quitter Survey s'affiche lorsqu'un utilisateur quitte un guide avant d'avoir terminé l'enquête",
    "msgVideoNotFound": "Le téléchargement de votre vidéo est en cours. Veuillez patienter quelques instants.",
    "msgGiphyNotFound": "Le téléchargement de votre GIF est en cours. Veuillez patienter quelques instants.",
    "userPref": "Mes préférences",
    "manageAccount": "Portail d'Admin",
    "analyticsPortal": "Portail d'Insights",
    "errorInvalidUrl": "Ce n'est pas une URL valide",
    "wbFooterText": "Apprentissage technique de l'ITS",
    "navigationMenu": "Menu de navigation",
    "clearHistory": "Effacer l’historique",
    "userDeniedMessage": "L'utilisateur a refusé les autorisations d'accès à la caméra et au microphone",
    "pushNotification": "Notifications poussées",
    "viewDetail": "Afficher les détails",
    "contactAdmin": "Veuillez communiquer avec support@csod.com ou avec votre Admin pour obtenir de l'aide.",
    "noAppOnDomain": "L'application n'est pas affectée au domaine actuel",
    "noGuidesOnDomain": "Aucun Guides trouvés",
    "apply": "Appliquer",
    "invalidLoginCred": "Identifiants de connexion non valides. Votre compte sera verrouillé après plusieurs tentatives infructueuses Vous recevrez un courriel pour déverrouiller votre compte ou vous pouvez réinitialiser votre mot de passe",
    "resendOTP": "Renvoi d’un mot de passe à usage unique",
    "sendFeedback": "Envoyer un feed-back",
    "guideNotExist": "Ce Guide n'est pas disponible sur cette page (Erreur : incompatibilité de domaine)",
    "cdnAccess": "<b>Nous sommes désolés.</b><br><br>Il semble que nos serveurs rencontrent un problème.<br> Nous avons été informés de l'erreur et nous la corrigerons dès que possible",
    "tourPlayError": "Le Guide ne peut pas être lu. Une erreur s'est produite lors de la récupération des détails du Guide",
    "playerMode": "Mode de lecture",
    "closePanel": "Fermer le panneau",
    "switchCreatorMode": "Passer en mode Créateur",
    "extensionContextError": "Le contexte de l'extension est invalidé. Veuillez recharger la page pour continuer",
    "otpSent": "Le mot de passe à usage unique a été renvoyé à votre adresse courriel, veuillez consulter votre boîte de réception",
    "startOver": "Recommencer",
    "yesResume": "Reprendre",
    "dontShowAgain": "Ne pas afficher à nouveau",
    "notificationHeader": "Vous avez reçu une notification!",
    "watchLater": "Regarder plus tard",
    "pushSnoozeMsg": "Cette notification sera suspendue",
    "showAgain": "Montrer à nouveau",
    "noGuidesOnThisTab": "Il n'y a pas de notifications sur cette page",
    "iAgree": "Je suis d’accord",
    "viewMore": "Afficher plus",
    "lostInternetConnection": "Connexion perdue avec le serveur. Veuillez vous reconnecter et réessayer",
    "next": "Suivant",
    "recent": "Récent",
    "older": "Plus anciens",
    "atoz": "A - Z",
    "ztoa": "Z - A",
    "clear": "Effacer",
    "tooltipDontShowAgain": "Les notifications n'apparaissent plus. Pour activer une notification maintenant, survolez-la et cliquez sur « Afficher à nouveau »",
    "tooltipWatchLater1": "Les notifications sont suspendues pendant",
    "tooltipWatchLater2": "et apparaîtront ensuite. Pour activer une notification maintenant, survolez-la et cliquez sur « Afficher à nouveau »",
    "hour": "heure",
    "hours": "heures",
    "insightsTracker": "Outil de suivi Insights",
    "slideshow": "Diaporama",
    "autoplay": "LECTURE AUTOMATIQUE",
    "powerFormOldData": "Données existantes",
    "powerFormNewData": "Utilisez ce formulaire pour saisir de nouvelles données",
    "powerFormNewDataMore": "Si vos données existantes ne sont pas visibles, veuillez cliquer sur la flèche en haut à gauche pour afficher vos données. Les données doivent ensuite être copiées dans le format à puces autorisé.",
    "powerFormTitle": "Assistant à la saisie des données",
    "powerFormMandatory": "Il s'agit d'un champ obligatoire, avec une limite maximale de caractères.",
    "belongToOtherApp": "Ce Guide est créé sur {TOURURL}, qui appartient à l'application {APPNAME}. Veuillez copier ce Guide dans cette application et réessayer.",
    "setDomain": "Si vous êtes sûr que le {TOURURL} doit être ajouté dans les paramètres du domaine de l'application actuelle, veuillez l'ajouter et réessayer.",
    "on": "Activé",
    "off": "Désactivé",
    "btnPrev": "Précédent",
    "btnPrevious": "Précédent",
    "taskList": "Liste de tâches",
    "unprocessedVideo": "Veuillez patienter pendant le traitement de votre vidéo.",
    "searchResult": "Résultat de la recherche",
    "pleaseWait": "Veuillez patienter!",
    "mediaDownloadMsg": "pendant que nous préparons vos fichiers pour le téléchargement",
    "mediaFileNotFound": "Fichier multimédia non trouvé",
    "searchInFolder": "Rechercher dans le dossier",
    "currentPageSearchPlaceholder": "Rechercher le(s) Guide(s) disponible(s) sur la page actuelle",
    "brandLogo": "Logo de la marque",
    "accessibility": "Accessibilité",
    "replay": "Relire",
    "defaultGreetingMessage": "Hé! Bienvenue dans MyGuide. Comment puis-je vous aider? N'oubliez pas que je suis un robot.",
    "defaultErrorMessage": "Je suis désolé, je n'ai pas compris. Pourriez-vous être plus précis?",
    "greetingMessage": "Hé! Bienvenue dans MyGuide. Comment puis-je vous aider? N'oubliez pas que je suis un robot.",
    "errorMessage": "Je suis désolé, je n'ai pas compris. Pourriez-vous être plus précis?",
    "guideLnkToRedirect": "Utilisez le lien suivant pour rediriger vers la page et lire le guide",
    "otpTimer": "Vous pouvez réessayer dans",
    "seconds": "secondes",
    "limitWarning": "Vous avez atteint la limite maximale de tentatives infructueuses",
    "startBotLbl": "Démarrer le robot",
    "doitForMeWarning": "DoItForMe n’est pas disponible pour les étapes d’image, de vidéo et d’enquête.",
    "playNextBotTour": "Jouer le prochain tour de bot",
    "includeScreen": "Inclure une capture d’écran",
    "feedbackPlaceholder": "Avez-vous une rétroaction? Nous serions ravis de l’entendre!",
    "feedbackOptBtn": "Cliquez pour mettre en évidence ou masquer les informations",
    "highlight": "Surligner",
    "send": "Envoyer",
    "done": "Fait",
    "hide": "Masquer",
    "multiSelectOptionError": "Veuillez sélectionner au moins une option",
    "loginNext": "Suivant",
    "captchaLbl": "Captcha",
    "placeholderEnterCaptcha": "Entrer le Captcha",
    "captchaError": "Veuillez entrer un captcha valide",
    "allGuides": "Tous Guides",
    "helpCenter": "Centre d’aide",
    "feedbackRequired": "Veuillez saisir votre rétroaction.",
    "default": "Valeur par défaut",
    "feedbackImgErrorMsg": "La capture d’écran n’a pas pu être jointe à votre rétroaction en raison d’un problème lié au navigateur. Veuillez recharger la page, puis cliquez sur l’extension Guide pour l’ouvrir dans la barre d’action de Chrome et recapturez la capture d’écran pour nous faire part de votre rétroaction."
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.fr_FR = {
    "403": "Nous avons rencontré un problème avec cette demande. Veuillez réessayer. Si le problème persiste, écrivez-nous à l’adresse support@csod.com pour nous le signaler",
    "405": "Nous avons rencontré un problème lors du traitement de cette demande. Veuillez réessayer. Si le problème persiste, écrivez-nous à l’adresse support@csod.com pour nous le signaler",
    "429": "Trop de demandes",
    "1003": "Nous avons rencontré un problème lors de l’authentification. Veuillez vous reconnecter et réessayer. Si le problème persiste, actualisez la page et réessayez",
    "1005": "<b>Nous sommes désolés</b> <br><br>il semble qu’il y ait un problème avec la demande ou avec nos serveurs.<br> Nous avons été informés de l’erreur et nous la corrigerons dès que possible",
    "1007": "Nous avons rencontré un problème lors de l’authentification. Veuillez réessayer. Si le problème persiste, écrivez-nous à l’adresse support@csod.com pour nous le signaler",
    "1009": "L’email de l’utilisateur n’est pas vérifié",
    "1014": "Maintenance en cours. Veuillez nous contacter via l’adresse support@csod.com",
    "1017": "Nous avons rencontré un problème lors de l’authentification. Veuillez vous reconnecter et réessayer. Si le problème persiste, écrivez-nous à l’adresse support@csod.com pour nous le signaler",
    "1018": "Vous avez atteint la limite maximale du nombre d’étapes pouvant être créées",
    "2000": "Nous avons rencontré un problème avec cette demande. Nous avons été prévenus. Veuillez réessayer. Si le problème persiste, écrivez-nous à l’adresse support@csod.com pour nous le signaler",
    "2001": "Identifiants de connexion non valides. Votre compte sera verrouillé après plusieurs tentatives infructueuses, vous recevrez un email pour déverrouiller votre compte, ou vous pourrez réinitialiser votre mot de passe",
    "2002": "Mot de passe à usage unique non valide ou expiré",
    "2003": "Le fichier téléversé n’est pas une image valide (les fichiers JPG et PNG sont pris en charge)",
    "2004": "Session expirée",
    "2005": "Nous n’avons pas pu suivre cet utilisateur. Veuillez actualiser et réessayer. Si le problème persiste, écrivez-nous à l’adresse support@csod.com pour nous le signaler",
    "2006": "L’adresse email est incorrecte. Veuillez réessayer",
    "2007": "Rôle utilisateur non valide. Veuillez réessayer",
    "2008": "Vous devez spécifier un type de tâche correct",
    "2009": "L’application donnée n’est pas valide ; elle a pu être supprimée ou n’a jamais existé",
    "2010": "Paramètres d’entrée non valides. Veuillez actualiser et réessayer. Si le problème persiste, écrivez-nous à l’adresse support@csod.com pour nous le signaler",
    "2011": "L’organisation donnée n’est pas valide ; elle a pu être supprimée ou n’a jamais existé",
    "2012": "Il y avait un paramètre manquant ou non valide dans la requête. Veuillez revérifier et réessayer. Si le problème persiste, écrivez-nous à l’adresse support@csod.com pour nous le signaler",
    "2013": "Il y avait un paramètre manquant ou non valide dans la requête. Veuillez revérifier et réessayer. Si le problème persiste, écrivez-nous à l’adresse support@csod.com pour nous le signaler",
    "2014": "Paramètre requis pour super Admin [organization_id]",
    "2015": "Le contenu des données d’image fourni n’est pas valide. Veuillez revérifier et réessayer. Si le problème persiste, écrivez-nous à l’adresse support@csod.com pour nous le signaler",
    "2016": "Domaine non valide",
    "2017": "Il y avait un paramètre manquant ou non valide dans la requête",
    "2018": "Il y avait un paramètre manquant ou non valide dans la requête",
    "2019": "Ce que vous recherchez n’existe pas ou a peut-être été supprimé",
    "2020": "Il y avait un paramètre manquant ou non valide dans la requête",
    "2021": "Le serveur d’authentification a rencontré une erreur inattendue lors de la tentative de traitement de cette demande. Veuillez signaler le problème à support@csod.com",
    "2022": "Il y avait un paramètre manquant ou non valide dans la requête. Veuillez entrer une URL d’équipe valide",
    "2023": "Le serveur d’authentification a rencontré une erreur inattendue lors de la tentative de traitement de cette demande. Veuillez signaler le problème à support@csod.com",
    "2024": "La taille du fichier ne doit pas dépasser 5 Mo.",
    "2025": "Il y avait un paramètre manquant ou non valide dans la requête. Veuillez saisir une URL correcte.",
    "2026": "Le mot de passe doit contenir 8 caractères au minimum, dont au moins une majuscule, une minuscule et une valeur numérique",
    "2027": "Mot de passe non valide",
    "2028": "Il y avait un paramètre manquant ou non valide dans la requête",
    "2029": "La ville que vous avez indiquée n’est pas prise en charge",
    "2030": "Il y avait un paramètre manquant ou non valide dans la requête",
    "2031": "Le serveur d’authentification a rencontré une erreur inattendue lors de la tentative de traitement de ce paramètre. Veuillez signaler le problème à support@csod.com",
    "2032": "Paramètre non valide [file_id]",
    "2033": "URL non valide. Veuillez revérifier et réessayer",
    "2034": "Le serveur d’authentification a rencontré une erreur inattendue lors du traitement de ces paramètres. Veuillez signaler le problème à support@csod.com",
    "2035": "Le serveur d’authentification a rencontré une erreur inattendue lors du traitement de cette AppKey. Veuillez signaler le problème à support@csod.com",
    "2036": "Le serveur d’authentification a rencontré une erreur inattendue. Veuillez actualiser cette page. Si le problème persiste, écrivez-nous à l’adresse support@csod.com pour nous le signaler",
    "2044": "Il semble que nous ayons égaré la traduction de cette étape. Veuillez basculer sur la langue par défaut et retraduire l’étape, ou contactez notre assistance clientèle pour plus de détails.",
    "2054": "Un ancien et un nouveau mot de passe ne peuvent pas être identiques",
    "2200": "Nous avons rencontré un problème lors de l’accès aux commandes audio/vidéo. Veuillez vérifier les paramètres de votre navigateur et réessayer. Si le problème persiste, écrivez-nous à l’adresse support@csod.com pour nous le signaler",
    "3001": "Le Guide sera bientôt disponible à l’exportation. Pour vérifier l’état, accédez à « État de la tâche » dans le menu du compte.",
    "3002": "Le téléversement a commencé. Veuillez ne pas actualiser ou fermer le navigateur tant que le téléversement n’est pas terminé. Vous pouvez vérifier l’état de l’importation une fois celle-ci terminée",
    "3003": "L’utilisateur existe déjà",
    "3004": "L’identifiant de messagerie est déjà vérifié",
    "3005": "Cette URL est en conflit avec une autre configuration d’application, veuillez essayer d’ajouter une autre URL.",
    "3006": "Le dossier doit appartenir à la même application",
    "3007": "Le domaine existe déjà",
    "3008": "Vous avez atteint la limite maximale du nombre de Guide(s) pouvant être créé(s)",
    "3009": "Un Survey existe déjà dans le Guide concerné",
    "3010": "L’étape doit appartenir au même Guide",
    "3011": "Cette organisation est suspendue. Veuillez contacter votre Admin",
    "3012": "Le ou les Guide(s) doi(ven)t appartenir au même dossier",
    "3013": "Ce Guide existe déjà avec la paire donnée de nom d’objets et de champ",
    "3014": "Utilisateur suspendu",
    "3015": "Utilisateur déjà vérifié",
    "3017": "Le mot de passe à usage unique a été envoyé avec succès à votre adresse email",
    "3018": "Le rôle existe déjà",
    "3019": "Le pays existe déjà",
    "3020": "La ville existe déjà",
    "3023": "Votre organisation n’est pas vérifiée. Pour obtenir de l’aide, veuillez utiliser l’adresse support@csod.com",
    "3024": "Le fichier JSON n’est pas disponible pour cette organisation",
    "3025": "Nous avons rencontré un problème lors de l’authentification. Veuillez réessayer. Si le problème persiste, actualisez la page et réessayez",
    "3026": "Le fichier JSON n’est pas disponible pour ce Guide",
    "3027": "Aucune étape disponible. Créez au moins une étape pour publier le Guide",
    "3028": "Limite maximale atteinte du nombre de présentations de visite",
    "3033": "Identifiants non valides. Veuillez nous contacter à l’adresse support@csod.com ou votre Admin pour obtenir plus d’assistance.",
    "3047": "Votre compte a été temporairement verrouillé en raison d’un trop grand nombre d’échecs de connexion. Nous vous avons envoyé un email indiquant les étapes requises pour le déverrouiller. Pour plus d’assistance, veuillez nous contacter à l’adresse support@csod.com",
    "3061": "Vous pouvez épingler jusqu’à 5 Guide(s) seulement",
    "3068": "Votre ancien mot de passe a expiré. Définissez un nouveau mot de passe pour vous connecter.",
    "4000": "La sous-catégorie ne peut pas être créée dans un dossier si un Guide est déjà créé",
    "4001": "Si un utilisateur est déjà un super Admin, vous ne pouvez pas modifier le rôle d’utilisateur",
    "4002": "Cette action n’est pas autorisée sur un Guide publié",
    "4003": "Le Guide verrouillé ne peut pas être publié",
    "4004": "Cette action n’est pas autorisée sur un dossier publié. Veuillez annuler sa publication",
    "4006": "L’application doit appartenir à l’organisation donnée",
    "4007": "Vous n’êtes pas autorisé(e) à effectuer cette action",
    "4008": "L’action n’est pas autorisée pour cette sous-catégorie",
    "4009": "Le Guide doit être publié",
    "4010": "Le Guide ne peut pas être créé dans un dossier disposant d’une sous-catégorie",
    "4011": "Pour créer une ou plusieurs étape(s), vous devez déverrouiller ce Guide",
    "4012": "Pour modifier une ou plusieurs étape(s), vous devez déverrouiller ce Guide",
    "4013": "Pour supprimer une ou plusieurs étape(s), vous devez déverrouiller ce Guide",
    "4014": "Pour copier et coller une ou plusieurs étape(s), vous devez déverrouiller ce Guide",
    "4020": "Un brouillon de ce Guide existe déjà ; plusieurs brouillons d’un Guide ne sont pas autorisés.",
    "4021": "Valeurs non valides du paramètre [envs]",
    "currentPage": "Page actuelle",
    "myChat": "MyChat",
    "import": "Importer",
    "export": "Exporter",
    "redirectLivetour": "Consulter en direct",
    "guideNotAvailable": "Guide non disponible sur l’URL actuelle. Voulez-vous accéder à l’URL du Guide ?",
    "downloadPPT": "Télécharger au format PPT",
    "btnYes": "Oui",
    "btnNo": "Non",
    "inApp": "Dans l’application",
    "live": "En direct",
    "resume": "Reprendre",
    "tourCloseConfirm": "Voulez-vous vraiment fermer ce Guide ?",
    "notifSnoozeDonotMsg": "Veuillez nous dire si vous souhaitez regarder cela plus tard ou ne jamais afficher la notification ?",
    "surveyThanksMessage": "Merci d’avoir fourni votre réponse",
    "testMePassedMessage": "Félicitations ! Vous avez réussi",
    "testMeFailedMessage": "Oups ! Vous avez échoué",
    "testMeGuideEfficiency": "Efficacité du test :",
    "testMeGuideEffectiveness": "Efficacité du test :",
    "testMeTestTime": "Durée du test",
    "testMeExpectedTime": "Durée prévue",
    "testMeStepsTaken": "Mesures prises",
    "testMeExpectedSteps": "Étapes attendues",
    "testMeRetakeTestBtn": "Reprendre le test",
    "testMeResultTitle": "Résultat de MyTest",
    "ConfirmIfTestMeModeRidirect": "Guide non disponible sur l’URL actuelle. Voulez-vous vous rediriger la navigation vers l’URL du Guide ?",
    "feedCmt": "Nous accordons beaucoup d’importance à votre feed-back !<br> Veuillez nous dire ce que vous en pensez en 500 caractères ou moins",
    "doNotShowAgain": "Ne plus afficher",
    "neverShowAgain": "Ne plus jamais afficher",
    "skipGuide": "Ignorer le Guide",
    "surveyErrorMsg": "Veuillez répondre à au moins une question",
    "redirect": "Rediriger",
    "liveGuide": "Guide en direct",
    "question": "Question",
    "exitGuide": "Quitter le Guide",
    "continueGuide": "Poursuivre avec le Guide",
    "stop": "Stop",
    "characters": "Caractères :",
    "survey": "Survey",
    "testMeStopMessage": "Vous êtes en mode TestMe, cliquez sur STOP pour quitter",
    "testMeFailedErrorMessage": "Vous n’avez pas pu atteindre l’étape de l’objectif.<br>Vous avez {CORRECT_STEPS} étapes correctes sur {TOTAL_STEPS}.",
    "surveyCommentPlaceholder": "Effectuez votre saisie ici ! 500 caractères maximum",
    "pushTourSnoozeMsg": "Cette tournée de lancement auto sera mise en attente pendant",
    "of": "sur",
    "wbMplayerTitle": "Didacticiels",
    "wbDragTooltip": "Positionnez ce lecteur n’importe où sur la page par glisser-déposer",
    "dontShowEdResult": "Je ne veux pas voir cela",
    "mPlayerHeaderTitle": "Micro-lecteur",
    "closePreview": "Fermer la prévisualisation",
    "elmNotFound": "Il semble que nous ne puissions pas trouver l’élément pour l’étape :",
    "elmNotFoundInfo": "assurez-vous que vous êtes sur la bonne page pour exécuter cette étape. Vérifiez également si vous pouvez voir l’élément sélectionné",
    "notExists": "N’existe pas",
    "elmNotFoundHeader": "Élément d’étape introuvable",
    "goToStep": "Aller à l’étape",
    "notFoundStep": "Impossible de trouver l’élément pour l’étape #",
    "pleaseReselect": "Veuillez essayer de resélectionner l’élément.",
    "stepRuleMatchErr": "Erreur de configuration : les règles d’étape ne correspondent pas",
    "guideRuleMatchErr": "Erreur de configuration : les règles de Guide ne correspondent pas",
    "stepNotFoundRedirect": "Étape introuvable sur cette page. Souhaitez-vous rediriger la navigation ?",
    "branchStepMessagePopup": "Veuillez sélectionner l’une des tâches ci-dessous pour continuer",
    "btnSkip": "Ignorer",
    "kindlyHoverPopup": "Veuillez survoler cet élément pour ouvrir la fenêtre contextuelle",
    "stepPlayIsdefinedPopover": "L’étape que vous allez exécuter est définie dans la fenêtre « popover »",
    "elmNotFoundWestpac": "Étape introuvable - Ce Guide va prendre fin",
    "findingElementMessage": "Étape en cours de recherche. . .",
    "badDomain": "Le domaine actuel et l’URL ne sont pas autorisés à exécuter MyGuide. Contactez votre Admin pour obtenir de l’aide.",
    "hostJsError": "Il semble y avoir une erreur sur la page Web. MyGuide ne peut pas continuer",
    "remember": "Mémoriser mon profil",
    "forgotPass": "Mot de passe oublié ?",
    "dontHavAcc": "Vous n’avez pas de compte ?",
    "loginTitle": "Connexion",
    "loginOtpScreenTitle": "Vérifiez le mot de passe à usage unique pour vous connecter",
    "forgetPassTitl": "Réinitialiser le mot de passe",
    "placeholderEmail": "ID de messagerie",
    "placeholderPassword": "Mot de passe",
    "placeholderNewPassword": "Nouveau mot de passe",
    "placeholderCurrentPassword": "Mot de passe actuel",
    "placeholderFirstname": "Prénom",
    "placeholderLastname": "Nom",
    "placeholderPasswordC": "Confirmation du mot de passe",
    "btnCancel": "Annuler",
    "btnPayment": "Plan de mise à niveau",
    "btnSubmit": "Envoyer",
    "btnLogin": "Connexion",
    "termsOfUse": "Conditions d’utilisation",
    "andLabel": "et",
    "policyPrivacy": "la politique de confidentialité d’EdCast",
    "passwordError": "Le mot de passe doit comporter 8 chiffres",
    "confirmPasswordError": "Le mot de passe et la confirmation du mot de passe doivent être identiques",
    "firstnameError": "Veuillez saisir un prénom valide",
    "lastnameError": "Veuillez saisir un nom valide",
    "emailError": "Veuillez entrer un identifiant de messagerie valide",
    "orgError": "Veuillez entrer une URL d’organisation valide",
    "otpError": "Veuillez entrer un mot de passe à usage unique valide",
    "placeholderOtp": "Entrez votre mot de passe à usage unique ici",
    "otpSentDesc": "Si vous avez fourni une adresse email valide, un lien de réinitialisation vous sera envoyé.<br>Si vous ne recevez pas l’email dans un délai de quelques minutes, veuillez vérifier dans votre dossier spam si vous avez reçu un email de",
    "btnOtpVerify": "Vérifier le mot de passe à usage unique",
    "alreadyHavAcc": "Vous avez déjà un compte ?",
    "smartbiteMessageError": "Veuillez entrer un message",
    "smartbiteLinkError": "Veuillez entrer un lien valide",
    "noGuidesOnThisPage": "Aucun Guides n’est disponible sur cette page !",
    "clickOn": "Cliquer sur",
    "contactUs": "Contactez-nous",
    "search": "Rechercher",
    "noRecordFound": "Aucun enregistrement trouvé",
    "category": "Dossier",
    "subCategory": "Sous-dossier",
    "confirmPasswordRequired": "Confirmation du mot de passe requise",
    "logInWithSSO": "Connectez-vous à l’aide d’une authentification SSO",
    "inputPlaceHolderSearch": "Rechercher n’importe quel Guide",
    "noGuideAvailableFor": "Aucun Guide ne correspond à votre recherche",
    "tryModifyingYourSearch": "Essayez de modifier vos critères de recherche",
    "signInVerifyYourEmail": "Cet identifiant de messagerie n’a pas été vérifié. Consultez votre email pour plus de détails",
    "signInVerifyYourAccount": "Nous vous avons envoyé un email contenant un mot de passe à usage unique. Veuillez vérifier votre compte pour terminer le processus d’inscription",
    "maintenanceMessage": "Maintenance en cours. Veuillez nous contacter via l’adresse support@csod.com",
    "back": "Retour",
    "changePassword": "Modifier le mot de passe",
    "startTestAuto": "Démarrer les tests d’automatisation",
    "msgPasswordChangedSuccess": "Votre mot de passe a été modifié avec succès",
    "msgConfirmNewPasswordError": "Le mot de passe de confirmation et le nouveau mot de passe doivent être identiques",
    "enterUrl": "Entrez l’URL de l’équipe",
    "dragPlaceholderDropThis": "Déposez ceci",
    "dragPlaceholderHere": "ici",
    "termsOfService": "Conditions",
    "versionText": "Version",
    "videoStepSuccessMessage": "Votre étape a été créée avec succès",
    "importSuccessMessage": "Le Guide a été téléchargé avec succès. Accédez à l’état de la tâche pour vérifier l’état de l’importation",
    "worldBankHelpSupport": "Certains outils, tels que les Tooltips, ne peuvent être visualisés que dans l’interface",
    "helpSupport": "Aide & assistance",
    "page": "page",
    "selectAnApplication": "Sélectionner une application",
    "refresh": "Actualiser",
    "loginBtn": "Connexion",
    "account": "Compte",
    "taskStatus": "État de la tâche",
    "logoutBtn": "Déconnexion",
    "app": "Application :",
    "firstStep": "Première étape",
    "lastStep": "Dernière étape",
    "startTest": "Démarrer le test",
    "noInappStepInGuide": "TestMe ne peut pas poursuivre, car il n’y a pas d’étape en ligne dans ce guide",
    "settingBtn": "Paramètres avancés",
    "orgSetting": "Paramètres de l’organisation",
    "close": "Fermer",
    "pdf": "PDF",
    "downloadPptx": "PPT",
    "giphy": "GIF",
    "downloadWord": "Document",
    "downloadBlog": "Blog",
    "downloadTxt": "Texte brut",
    "serviceErrorMessage": "Oups ! Une erreur s’est produite. Réessayez ultérieurement. Vous pouvez également nous envoyer un email à l’adresse support@csod.com pour obtenir une assistance",
    "guidesTab": "Guides",
    "noGuideCreatedYet": "Aucun Guide n’est encore créé !",
    "noCategoryCreatedYet": "Aucun dossier n’est encore créé !",
    "chatbot": "MyChat",
    "notAutorised": "Vous ne disposez pas de l’accès requis, veuillez contacter l’Admin",
    "ok": "OK",
    "apiError": "Erreur de configuration. Veuillez contacter l’Admin",
    "select": "Sélectionner",
    "mute_unmute": "Couper/Activer le son",
    "privacyPolicy": "Confidentialité & cookies",
    "privacyPolicyText": "MyGuide utilise des cookies. En poursuivant, vous acceptez nos conditions d’utilisation et notre politique de confidentialité et vous nous autorisez à utiliser des cookies",
    "terms": "Conditions",
    "westPecErrorMessage": "Vous n’êtes pas autorisé(e) à accéder à cette application. Veuillez vous connecter au réseau de Westpac",
    "noApp": "Aucune application trouvée",
    "role": "Rôle :",
    "all": "Tout",
    "video": "Vidéo",
    "course": "Cours",
    "article": "Article",
    "image": "Image",
    "pathways": "Parcours",
    "preview": "Prévisualisation",
    "more": "Plus",
    "history": "Historique",
    "publish": "Publier",
    "selectGuideLink": "Veuillez sélectionner un Guide à lier",
    "selectGuideBeforeSubmit": "Veuillez sélectionner un Guide avant envoi",
    "change": "Modifier",
    "checkNow": "Vérifier maintenant",
    "minutes": "minutes",
    "clickHere": "cliquez ici",
    "youAlmostDone": "Vous avez presque fini !",
    "setOrg": "pour configurer votre organisation",
    "apps": "Applications",
    "me": "Moi",
    "playStep": "Exécuter l’étape",
    "miniPlayerHelp": "Aide",
    "defaultMiniPlayerHelp": "Aide",
    "defaultConfirmIfSlideshowOrRedirect": "Étape non disponible sur l’URL actuelle.<br>Voulez-vous passer à l’étape URL ou consulter le diaporama ?",
    "defaultServiceErrorMessage": "Oups ! Une erreur s’est produite. Réessayez ultérieurement. Vous pouvez également nous envoyer un email à l’adresse support@csod.com pour obtenir une assistance",
    "defaultMaintenanceMessage": "Maintenance en cours. Veuillez nous contacter via l’adresse support@csod.com",
    "userNotFollowingGuideMessage": "Il semble que vous exécutiez des étapes qui ne font pas partie de ce Guide. Si vous ne souhaitez plus suivre le Guide, cliquez sur Quitter le Guide",
    "defaultUserNotFollowingGuideMessage": "Il semble que vous exécutiez des étapes qui ne font pas partie de ce Guide. Si vous ne souhaitez plus suivre le Guide, cliquez sur Quitter le Guide",
    "resumeGuide": "Reprendre avec le Guide",
    "defaultResumeGuideMessage": "Reprendre avec le Guide",
    "backToLogin": "Revenir à la connexion",
    "filters": "Filtres",
    "thisApp": "Cette application",
    "thisWebsite": "Ce site Web",
    "maxFreeTourLimit": "Limite maximale de présentations atteinte",
    "passwordRegexCheck": "Le mot de passe doit contenir 8 caractères au minimum, dont au moins une majuscule, une minuscule et une valeur numérique",
    "countLimit": "99+",
    "microsoftServiceKey": "Veuillez entrer votre clé d’abonnement Microsoft Cognitive Services Speech",
    "numberOfImgFile": "Le nombre de fichiers image et de fichiers texte doit être le même",
    "availableOn": "Disponible sur",
    "tooltipUnpubWorkflowTitle": "Workflow non publié",
    "tooltipUnpubParentWorkflowTitle": "Workflow publié, dossier(s) parent(s) non publié(s)",
    "tooltipPubParentWorkflowTitle": "Workflow publié, dossier publié",
    "tooltipUnpubTooltipTitle": "Tooltip non publiée",
    "tooltipUnpubParentTooltipTitle": "Tooltip publiée, dossier(s) parent(s) non publié(s)",
    "tooltipPubParentTooltipTitle": "Tooltip publiée, dossier publié",
    "tooltipUnpubTutorialTitle": "Tutorial non publié",
    "tooltipUnpubParentTutorialTitle": "Tutorial publié, dossier(s) parent(s) non publié(s)",
    "tooltipPubParentTutorialTitle": "Tutorial publié, dossier publié",
    "tooltipUnpubSubFolderTitle": "Sous-dossier non publié",
    "tooltipUnpubSubFolderDesc": "Utilisez des sous-dossiers pour organiser les Guides",
    "tooltipUnpubParentSubFolderTitle": "Sous-dossier publié, dossier(s) parent(s) non publié(s)",
    "tooltipPubParentSubFolderTitle": "Sous-dossier publié, dossier publié",
    "tooltipPubParentSubFolderDesc": "Organise les Guides",
    "exitSurvey": "Quitter le Survey",
    "disable": "Désactiver",
    "instructionExitSurvey": "Quitter le Survey s’affiche lorsqu’un utilisateur quitte précocement un guide",
    "msgVideoNotFound": "Votre vidéo est en cours de téléversement, veuillez essayer ultérieurement",
    "msgGiphyNotFound": "Votre GIF est en cours de téléversement, veuillez essayer ultérieurement",
    "userPref": "Mes préférences",
    "manageAccount": "Portail de l’Admin",
    "analyticsPortal": "Portail des Insights",
    "errorInvalidUrl": "URL non valide",
    "wbFooterText": "Apprentissage technique ITS",
    "navigationMenu": "Menu de navigation",
    "clearHistory": "Effacer l’historique",
    "userDeniedMessage": "L’utilisateur a refusé les autorisations d’accès à la caméra et au microphone",
    "pushNotification": "Notifications Push",
    "viewDetail": "Afficher les détails",
    "contactAdmin": "Veuillez nous contacter à l’adresse support@csod.com ou votre Admin pour obtenir plus d’assistance",
    "noAppOnDomain": "L’application n’est pas attribuée au domaine actuel",
    "noGuidesOnDomain": "Guides introuvables",
    "apply": "Appliquer",
    "invalidLoginCred": "Identifiants de connexion non valides. Votre compte sera verrouillé après plusieurs tentatives infructueuses, vous recevrez un email pour déverrouiller votre compte, ou vous pourrez réinitialiser votre mot de passe",
    "resendOTP": "Renvoyer le mot de passe à usage unique",
    "sendFeedback": "Envoyer un feed-back",
    "guideNotExist": "Ce Guide n’est pas disponible sur cette page (erreur : incompatibilité de domaine)",
    "cdnAccess": "<b>Nous sommes désolés</b> <br><br>Il semble qu’il y ait un problème avec nos serveurs.<br> Nous avons été informés de l’erreur et nous la corrigerons dès que possible",
    "tourPlayError": "Le Guide ne peut pas être consulté. Erreur lors de la récupération des détails du Guide",
    "playerMode": "Mode lecteur",
    "closePanel": "Fermer le panneau",
    "switchCreatorMode": "Passer en mode Auteur",
    "extensionContextError": "Le contexte d’extension est invalidé. Veuillez recharger la page pour continuer",
    "otpSent": "Le mot de passe à usage unique a été renvoyé à votre adresse email, veuillez vérifier votre boîte de réception",
    "startOver": "Recommencer",
    "yesResume": "Reprendre",
    "dontShowAgain": "Ne plus afficher",
    "notificationHeader": "Vous avez reçu une notification !",
    "watchLater": "Regarder plus tard",
    "pushSnoozeMsg": "Cette notification sera mise en attente pendant",
    "showAgain": "Afficher de nouveau",
    "noGuidesOnThisTab": "Il n’y a pas de notifications sur cette page",
    "iAgree": "Je suis d’accord",
    "viewMore": "Afficher plus",
    "lostInternetConnection": "Perte de la connexion au serveur. Veuillez vous reconnecter et réessayer",
    "next": "Suivant",
    "recent": "Récent",
    "older": "Plus ancien",
    "atoz": "A - Z",
    "ztoa": "Z - A",
    "clear": "Effacer",
    "tooltipDontShowAgain": "Les notifications n’apparaîtront plus. Pour activer une notification maintenant, survolez-la et cliquez sur « Afficher de nouveau »",
    "tooltipWatchLater1": "Les notifications sont mises en attente pendant",
    "tooltipWatchLater2": "et apparaîtra ensuite. Pour activer une notification maintenant, survolez-la et cliquez sur « Afficher de nouveau »",
    "hour": "heure",
    "hours": "heures",
    "insightsTracker": "Suivi des Insights",
    "slideshow": "Diaporama",
    "autoplay": "LECTURE AUTOMATIQUE",
    "powerFormOldData": "Données existantes",
    "powerFormNewData": "Utilisez ce formulaire pour saisir de nouvelles données",
    "powerFormNewDataMore": "Si vos données existantes ne sont pas visibles, veuillez cliquer sur la flèche en haut à gauche pour afficher vos données. Les données doivent ensuite être copiées dans le format à puces autorisé.",
    "powerFormTitle": "Assistant de saisie de données",
    "powerFormMandatory": "Ceci est un champ obligatoire, limite maximale de caractères",
    "belongToOtherApp": "Ce Guide est créé sur {TOURURL}, qui appartient à l’application {APPNAME}. Veuillez copier ce Guide dans cette application et réessayez.",
    "setDomain": "Si vous êtes certain(e) que {TOURURL} doit être ajouté aux paramètres actuels du domaine d’application, veuillez l’ajouter et réessayer",
    "on": "ACTIVÉ",
    "off": "DÉSACTIVÉ",
    "btnPrev": "Préc",
    "btnPrevious": "Précédent",
    "taskList": "Liste de tâches",
    "unprocessedVideo": "Veuillez patienter pendant le traitement de votre vidéo.",
    "searchResult": "Résultat de la recherche",
    "pleaseWait": "Veuillez patienter !",
    "mediaDownloadMsg": "Pendant que nous préparons vos fichiers pour le téléchargement",
    "mediaFileNotFound": "Fichier multimédia introuvable",
    "searchInFolder": "Rechercher dans le dossier",
    "currentPageSearchPlaceholder": "Rechercher un ou plusieurs Guide(s) disponible(s) sur la page en cours",
    "brandLogo": "Logo de la marque",
    "accessibility": "Accessibilité",
    "replay": "Relecture",
    "defaultGreetingMessage": "Hé ! Bienvenue dans MyGuide. Comment puis-je t’aider ? N’oubliez pas que je suis un bot.",
    "defaultErrorMessage": "Je suis désolé, je n’ai pas compris. Pourriez-vous être plus précis ?",
    "greetingMessage": "Hé ! Bienvenue dans MyGuide. Comment puis-je t’aider ? N’oubliez pas que je suis un bot.",
    "errorMessage": "Je suis désolé, je n’ai pas compris. Pourriez-vous être plus précis ?",
    "guideLnkToRedirect": "Utilisez le lien suivant pour rediriger la navigation vers la page et activer le guide",
    "otpTimer": "Vous pouvez réessayer dans",
    "seconds": "secondes",
    "limitWarning": "Vous avez atteint la limite maximale du nombre de tentatives ayant échoué",
    "startBotLbl": "Démarrer le robot",
    "doitForMeWarning": "DoItForMe n'est pas disponible pour les étapes image, vidéo et sondage.",
    "playNextBotTour": "Jouer le prochain tour de bot",
    "includeScreen": "Inclure une capture d'écran",
    "feedbackPlaceholder": "Avez-vous un feed-back ? Nous serions ravis de l'entendre !",
    "feedbackOptBtn": "Cliquez pour mettre en évidence ou masquer les informations",
    "highlight": "Surligner",
    "send": "Envoyer",
    "done": "Terminé",
    "hide": "Masquer",
    "multiSelectOptionError": "Veuillez sélectionner au moins une option",
    "loginNext": "Suivant",
    "captchaLbl": "Captcha",
    "placeholderEnterCaptcha": "Entrer le Captcha",
    "captchaError": "Veuillez entrer un captcha valide",
    "allGuides": "Tous Guides",
    "helpCenter": "Centre d’aide",
    "feedbackRequired": "Veuillez entrer votre feed-back.",
    "default": "Valeur par défaut",
    "feedbackImgErrorMsg": "La capture d'écran n'a pas pu être jointe à vos commentaires en raison d'un problème lié au navigateur. Veuillez recharger la page, puis cliquez sur l'extension Guide et ouvrez-la à partir de la barre d'action Chrome, puis reprenez la capture d'écran pour le feed-back."
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.hi_IN = {
	currentPage: "\u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u092a\u0943\u0937\u094d\u0920",
	myChat: "mychat",
	import: "\u0906\u092f\u093e\u0924",
	export: "\u0928\u093f\u0930\u094d\u092f\u093e\u0924",
	redirectLivetour: "\u0932\u093e\u0907\u0935 \u0916\u0947\u0932\u0947\u0902",
	guideNotAvailable: "\u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0935\u0930\u094d\u0924\u092e\u093e\u0928 URL \u092a\u0930 \u0909\u092a\u0932\u092c\u094d\u0927 \u0928\u0939\u0940\u0902 \u0939\u0948. \u0915\u094d\u092f\u093e \u0906\u092a \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e URL \u092a\u0930 \u091c\u093e\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902?",
	downloadPPT: "PPT \u0921\u093e\u0909\u0928\u0932\u094b\u0921 \u0915\u0930\u0947\u0902",
	btnYes: "\u0939\u093e\u0901",
	btnNo: "\u0928\u0939\u0940\u0902",
	inApp: "\u0907\u0928-\u0910\u092a",
	live: "\u0930\u0939\u0928\u093e",
	resume: "\u0938\u093e\u0930",
	tourCloseConfirm: "\u0915\u094d\u092f\u093e \u0906\u092a \u0935\u093e\u0938\u094d\u0924\u0935 \u092e\u0947\u0902 \u0907\u0938 \u0917\u093e\u0907\u0921 \u0915\u094b \u092c\u0902\u0926 \u0915\u0930\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902?",
	notifSnoozeDonotMsg: "\u0915\u0943\u092a\u092f\u093e \u0939\u092e\u0947\u0902 \u092c\u0924\u093e\u090f\u0902 \u0915\u093f \u0915\u094d\u092f\u093e \u0906\u092a \u0907\u0938\u0947 \u092c\u093e\u0926 \u092e\u0947\u0902 \u0926\u0947\u0916\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902 \u092f\u093e \u0915\u092d\u0940 \u0905\u0927\u093f\u0938\u0942\u091a\u0928\u093e \u0928\u0939\u0940\u0902 \u0926\u093f\u0916\u093e\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902?",
	surveyThanksMessage: "\u0905\u092a\u0928\u0940 \u092a\u094d\u0930\u0924\u093f\u0915\u094d\u0930\u093f\u092f\u093e \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0927\u0928\u094d\u092f\u0935\u093e\u0926",
	testMePassedMessage: "\u092c\u0927\u093e\u0907\u092f\u093e\u0901! \u0906\u092a \u092a\u093e\u0938 \u0939\u094b \u0917\u090f",
	testMeFailedMessage: "\u0909\u092b\u093c! \u0906\u092a \u0905\u0938\u092b\u0932 \u0930\u0939\u0947",
	testMeGuideEfficiency: "\u092a\u0930\u0940\u0915\u094d\u0937\u0923 \u0926\u0915\u094d\u0937\u0924\u093e:",
	testMeGuideEffectiveness: "\u092a\u0930\u0940\u0915\u094d\u0937\u0923 \u092a\u094d\u0930\u092d\u093e\u0935\u0936\u0940\u0932\u0924\u093e:",
	testMeTestTime: "\u092a\u0930\u0940\u0915\u094d\u0937\u093e \u0915\u093e \u0938\u092e\u092f",
	testMeExpectedTime: "\u0905\u092a\u0947\u0915\u094d\u0937\u093f\u0924 \u0938\u092e\u092f",
	testMeStepsTaken: "\u0909\u0920\u093e\u090f \u0917\u090f \u0915\u0926\u092e",
	testMeExpectedSteps: "\u0905\u092a\u0947\u0915\u094d\u0937\u093f\u0924 \u0915\u0926\u092e",
	testMeRetakeTestBtn: "\u0930\u0940\u091f\u0947\u0915 \u091f\u0947\u0938\u094d\u091f",
	testMeResultTitle: "\u092e\u0947\u0930\u093e \u092a\u0930\u0940\u0915\u094d\u0937\u093e \u092a\u0930\u093f\u0923\u093e\u092e",
	ConfirmIfTestMeModeRidirect: "\u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0935\u0930\u094d\u0924\u092e\u093e\u0928 URL \u092a\u0930 \u0909\u092a\u0932\u092c\u094d\u0927 \u0928\u0939\u0940\u0902 \u0939\u0948. \u0915\u094d\u092f\u093e \u0906\u092a \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e URL \u092a\u0930 \u0930\u0940\u0921\u093e\u092f\u0930\u0947\u0915\u094d\u091f \u0915\u0930\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902?",
	feedCmt: "\u0906\u092a\u0915\u0940 \u092a\u094d\u0930\u0924\u093f\u0915\u094d\u0930\u093f\u092f\u093e \u0939\u092e\u093e\u0930\u0947 \u0932\u093f\u090f \u092e\u0942\u0932\u094d\u092f\u0935\u093e\u0928 \u0939\u0948!<br> \u0915\u0943\u092a\u092f\u093e \u0939\u092e\u0947\u0902 \u092c\u0924\u093e\u090f\u0902 \u0915\u093f \u0906\u092a\u0928\u0947 500 \u0935\u0930\u094d\u0923\u094b\u0902 \u092f\u093e \u0909\u0938\u0938\u0947 \u0915\u092e \u092e\u0947\u0902 \u0915\u094d\u092f\u093e \u0938\u094b\u091a\u093e",
	doNotShowAgain: "\u092b\u093f\u0930 \u0938\u0947 \u0928 \u0926\u093f\u0916\u093e\u090f\u0901",
	neverShowAgain: "\u092b\u093f\u0930 \u0915\u092d\u0940 \u0928 \u0926\u093f\u0916\u093e\u090f\u0902",
	skipGuide: "\u0917\u093e\u0907\u0921 \u091b\u094b\u0921\u093c\u0947\u0902",
	surveyErrorMsg: "\u0915\u0943\u092a\u092f\u093e \u0915\u092e \u0938\u0947 \u0915\u092e \u090f\u0915 \u092a\u094d\u0930\u0936\u094d\u0928 \u0915\u093e \u0909\u0924\u094d\u0924\u0930 \u0926\u0947\u0902",
	redirect: "\u0930\u0940\u0921\u093e\u092f\u0930\u0947\u0915\u094d\u091f",
	liveGuide: "\u0932\u093e\u0907\u0935 \u0917\u093e\u0907\u0921",
	question: "\u092a\u094d\u0930\u0936\u094d\u0928",
	exitGuide: "\u0928\u093f\u0915\u093e\u0938 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e",
	continueGuide: "\u0917\u093e\u0907\u0921 \u091c\u093e\u0930\u0940 \u0930\u0916\u0947\u0902",
	stop: "\u0930\u0941\u0915\u094b",
	characters: "\u0935\u0930\u094d\u0923:",
	survey: "\u0938\u0930\u094d\u0935\u0947\u0915\u094d\u0937\u0923",
	testMeStopMessage: "\u0906\u092a TestMe \u092e\u094b\u0921 \u092e\u0947\u0902 \u0939\u0948\u0902, \u092c\u093e\u0939\u0930 \u0928\u093f\u0915\u0932\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f STOP \u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0947\u0902",
	testMeFailedErrorMessage: "\u0906\u092a \u0932\u0915\u094d\u0937\u094d\u092f \u091a\u0930\u0923 \u0924\u0915 \u0928\u0939\u0940\u0902 \u092a\u0939\u0941\u0901\u091a \u0938\u0915\u0947.<br>\u0906\u092a\u0915\u094b {TOTAL_STEPS} \u0938\u0947 {CORRECT_STEPS} \u091a\u0930\u0923 \u0938\u0939\u0940 \u092e\u093f\u0932\u0947.",
	surveyCommentPlaceholder: "\u092f\u0939\u093e\u0901 \u091f\u093e\u0907\u092a \u0915\u0930\u0947\u0902! \u0905\u0927\u093f\u0915\u0924\u092e 500 \u0935\u0930\u094d\u0923",
	pushTourSnoozeMsg: "\u0907\u0938 \u0911\u091f\u094b \u0932\u0949\u0928\u094d\u091a \u091f\u0942\u0930 \u0915\u0947 \u0932\u093f\u090f \u0924\u0948\u092f\u093e\u0930 \u0915\u093f\u092f\u093e \u091c\u093e\u090f\u0917\u093e",
	of: "\u0915\u093e",
	wbMplayerTitle: "\u091f\u094d\u092f\u0942\u091f\u094b\u0930\u093f\u092f\u0932",
	wbDragTooltip: "\u0907\u0938 \u092a\u094d\u0932\u0947\u092f\u0930 \u0915\u094b \u092a\u0943\u0937\u094d\u0920 \u092a\u0930 \u0915\u0939\u0940\u0902 \u092d\u0940 \u0916\u0940\u0902\u091a\u0947\u0902 \u0914\u0930 \u091b\u094b\u0921\u093c \u0926\u0947\u0902",
	dontShowEdResult: "\u092e\u0948\u0902 \u092f\u0939 \u0928\u0939\u0940\u0902 \u0926\u0947\u0916\u0928\u093e \u091a\u093e\u0939\u0924\u093e",
	mPlayerHeaderTitle: "\u092e\u093e\u0907\u0915\u094d\u0930\u094b \u092a\u094d\u0932\u0947\u092f\u0930",
	closePreview: "\u092a\u0942\u0930\u094d\u0935\u093e\u0935\u0932\u094b\u0915\u0928 \u092c\u0902\u0926 \u0915\u0930\u0947\u0902",
	elmNotFound: "\u0910\u0938\u093e \u0932\u0917\u0924\u093e \u0939\u0948 \u0915\u093f \u0939\u092e \u091a\u0930\u0923 \u0915\u0947 \u0932\u093f\u090f \u0924\u0924\u094d\u0935 \u0928\u0939\u0940\u0902 \u092a\u093e \u0938\u0915\u0924\u0947 \u0939\u0948\u0902:",
	elmNotFoundInfo: "\u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0947\u0902 \u0915\u093f \u0906\u092a \u0907\u0938 \u091a\u0930\u0923 \u0915\u094b \u091a\u0932\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u0939\u0940 \u092a\u0943\u0937\u094d\u0920 \u092a\u0930 \u0939\u0948\u0902\u0964 \u092f\u0939 \u092d\u0940 \u091c\u093e\u0902\u091a\u0947\u0902 \u0915\u093f \u0915\u094d\u092f\u093e \u0906\u092a \u091a\u092f\u0928\u093f\u0924 \u0924\u0924\u094d\u0935 \u0926\u0947\u0916 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902",
	notExists: "\u092e\u094c\u091c\u0942\u0926 \u0928\u0939\u0940\u0902 \u0939\u0948",
	elmNotFoundHeader: "\u091a\u0930\u0923 \u0924\u0924\u094d\u0935 \u0928\u0939\u0940\u0902 \u092e\u093f\u0932\u093e",
	goToStep: "\u0915\u0926\u092e \u092a\u0930 \u091c\u093e\u090f\u0902",
	notFoundStep: "\u0939\u092e \u091a\u0930\u0923 \u0915\u0947 \u0932\u093f\u090f \u0924\u0924\u094d\u0935 \u0928\u0939\u0940\u0902 \u0922\u0942\u0902\u0922 \u0938\u0915\u0947 #",
	pleaseReselect: "\u0915\u0943\u092a\u092f\u093e \u0924\u0924\u094d\u0935 \u0915\u093e \u092a\u0941\u0928: \u091a\u092f\u0928 \u0915\u0930\u0928\u0947 \u0915\u093e \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902.",
	stepRuleMatchErr: "\u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930\u0947\u0936\u0928 \u0924\u094d\u0930\u0941\u091f\u093f: \u091a\u0930\u0923 \u0928\u093f\u092f\u092e \u092e\u0947\u0932 \u0928\u0939\u0940\u0902 \u0916\u093e\u0924\u0947",
	guideRuleMatchErr: "\u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930\u0947\u0936\u0928 \u0924\u094d\u0930\u0941\u091f\u093f: \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0928\u093f\u092f\u092e \u092e\u0947\u0932 \u0928\u0939\u0940\u0902 \u0916\u093e\u0924\u0947",
	stepNotFoundRedirect: "\u091a\u0930\u0923 \u0907\u0938 \u092a\u0943\u0937\u094d\u0920 \u092a\u0930 \u0928\u0939\u0940\u0902 \u092e\u093f\u0932\u093e. \u0915\u094d\u092f\u093e \u0906\u092a \u0930\u0940\u0921\u093e\u092f\u0930\u0947\u0915\u094d\u091f \u0915\u0930\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902?",
	branchStepMessagePopup: "\u0906\u0917\u0947 \u092c\u0922\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0943\u092a\u092f\u093e \u0928\u0940\u091a\u0947 \u0926\u093f\u090f \u0917\u090f \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u092e\u0947\u0902 \u0938\u0947 \u090f\u0915 \u0915\u093e \u091a\u092f\u0928 \u0915\u0930\u0947\u0902",
	btnSkip: "\u0915\u0942\u0926",
	kindlyHoverPopup: "\u092a\u0949\u092a\u0905\u092a \u0916\u094b\u0932\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0943\u092a\u092f\u093e \u0907\u0938 \u0924\u0924\u094d\u0935 \u092a\u0930 \u092e\u0902\u0921\u0930\u093e\u090f\u0902",
	stepPlayIsdefinedPopover: "\u0906\u092a \u091c\u094b \u0915\u0926\u092e \u0916\u0947\u0932\u0928\u0947 \u091c\u093e \u0930\u0939\u0947 \u0939\u0948\u0902 \u0935\u0939 \u092a\u0949\u092a\u0913\u0935\u0930 \u092a\u0930 \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948",
	elmNotFoundWestpac: "\u091a\u0930\u0923 \u0928\u0939\u0940\u0902 \u092e\u093f\u0932\u093e - \u092f\u0939 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0938\u092e\u093e\u092a\u094d\u0924 \u0939\u094b \u091c\u093e\u090f\u0917\u0940",
	findingElementMessage: "\u0915\u0926\u092e \u0916\u094b\u091c\u0928\u0947 \u0915\u0940 \u0915\u094b\u0936\u093f\u0936 \u0915\u0930 \u0930\u0939\u093e \u0939\u0942\u0902\u0964 \u0964 \u0964",
	badDomain: "\u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u0921\u094b\u092e\u0947\u0928 \u0914\u0930 URL MyGuide \u091a\u0932\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0927\u093f\u0915\u0943\u0924 \u0928\u0939\u0940\u0902 \u0939\u0948\u0902. \u0915\u0943\u092a\u092f\u093e \u092e\u0926\u0926 \u0915\u0947 \u0932\u093f\u090f \u0905\u092a\u0928\u0947 \u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093e\u092a\u0915 \u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 \u0915\u0930\u0947\u0902.",
	hostJsError: "\u0935\u0947\u092c\u092a\u0947\u091c \u092a\u0930 \u0915\u094b\u0908 \u0924\u094d\u0930\u0941\u091f\u093f \u092a\u094d\u0930\u0924\u0940\u0924 \u0939\u094b\u0924\u0940 \u0939\u0948. MyGuide \u091c\u093e\u0930\u0940 \u0928\u0939\u0940\u0902 \u0930\u0916 \u0938\u0915\u0924\u093e",
	remember: "\u092e\u0941\u091d\u0947 \u092f\u093e\u0926 \u0915\u0930\u094b",
	forgotPass: "\u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u092d\u0942\u0932 \u0917\u090f?",
	dontHavAcc: "\u0915\u094b\u0908 \u0916\u093e\u0924\u093e \u0928\u0939\u0940\u0902 \u0939\u0948?",
	loginTitle: "\u0932\u0949\u0917\u093f\u0928",
	loginOtpScreenTitle: "\u0938\u093e\u0907\u0928 \u0907\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0913\u091f\u0940\u092a\u0940 \u0938\u0924\u094d\u092f\u093e\u092a\u093f\u0924 \u0915\u0930\u0947\u0902",
	forgetPassTitl: "\u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0930\u0940\u0938\u0947\u091f \u0915\u0930\u0947\u0902",
	placeholderEmail: "\u0908\u092e\u0947\u0932 \u0906\u0908\u0921\u0940",
	placeholderPassword: "\u092a\u093e\u0938\u0935\u0930\u094d\u0921",
	placeholderNewPassword: "\u0928\u092f\u093e \u092a\u093e\u0938\u0935\u0930\u094d\u0921",
	placeholderCurrentPassword: "\u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u092a\u093e\u0938\u0935\u0930\u094d\u0921",
	placeholderFirstname: "\u092a\u094d\u0930\u0925\u092e \u0928\u093e\u092e",
	placeholderLastname: "\u0915\u0941\u0932\u0928\u093e\u092e",
	placeholderPasswordC: "\u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0915\u0940 \u092a\u0941\u0937\u094d\u091f\u093f \u0915\u0930\u0947\u0902",
	btnCancel: "\u0930\u0926\u094d\u0926 \u0915\u0930\u0928\u093e",
	btnPayment: "\u0905\u092a\u0917\u094d\u0930\u0947\u0921 \u092a\u094d\u0932\u093e\u0928",
	btnSubmit: "\u091c\u092e\u093e \u0915\u0930\u0947\u0902",
	btnLogin: "\u0932\u0949\u0917\u093f\u0928",
	termsOfUse: "\u0909\u092a\u092f\u094b\u0917 \u0915\u0940 \u0936\u0930\u094d\u0924\u0947\u0902",
	andLabel: "\u0914\u0930",
	policyPrivacy: "\u0917\u094b\u092a\u0928\u0940\u092f\u0924\u093e \u0928\u0940\u0924\u093f",
	passwordError: "\u092a\u093e\u0938\u0935\u0930\u094d\u0921 8 \u0905\u0902\u0915\u094b\u0902 \u0915\u093e \u0932\u0902\u092c\u093e \u0939\u094b\u0928\u093e \u091a\u093e\u0939\u093f\u090f",
	confirmPasswordError: "\u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0914\u0930 \u092a\u0941\u0937\u094d\u091f\u093f \u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0938\u092e\u093e\u0928 \u0939\u094b\u0928\u093e \u091a\u093e\u0939\u093f\u090f",
	firstnameError: "\u0915\u0943\u092a\u092f\u093e \u0915\u094b\u0908 \u092e\u093e\u0928\u094d\u092f \u092a\u094d\u0930\u0925\u092e \u0928\u093e\u092e \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902",
	lastnameError: "\u0915\u0943\u092a\u092f\u093e \u0915\u094b\u0908 \u092e\u093e\u0928\u094d\u092f \u0905\u0902\u0924\u093f\u092e \u0928\u093e\u092e \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902",
	emailError: "\u0915\u0943\u092a\u092f\u093e \u0915\u094b\u0908 \u092e\u093e\u0928\u094d\u092f \u0908\u092e\u0947\u0932 ID \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902",
	orgError: "\u0915\u0943\u092a\u092f\u093e \u0915\u094b\u0908 \u092e\u093e\u0928\u094d\u092f \u0938\u0902\u0917\u0920\u0928 URL \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902",
	otpError: "\u0915\u0943\u092a\u092f\u093e \u092e\u093e\u0928\u094d\u092f OTP \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902",
	placeholderOtp: "\u092f\u0939\u093e\u0902 \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902 \u0905\u092a\u0928\u093e \u0913\u091f\u0940\u092a\u0940",
	otpSentDesc: "\u092f\u0926\u093f \u0915\u094b\u0908 \u092e\u093e\u0928\u094d\u092f \u0908\u092e\u0947\u0932 \u092a\u0924\u093e \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948, \u0924\u094b \u0906\u092a\u0915\u094b \u090f\u0915 \u0930\u0940\u0938\u0947\u091f \u0932\u093f\u0902\u0915 \u092d\u0947\u091c\u093e \u091c\u093e\u090f\u0917\u093e\u0964<br>\u092f\u0926\u093f \u0906\u092a\u0915\u094b \u0915\u0941\u091b \u092e\u093f\u0928\u091f\u094b\u0902 \u092e\u0947\u0902 \u0908\u092e\u0947\u0932 \u0926\u093f\u0916\u093e\u0908 \u0928\u0939\u0940\u0902 \u0926\u0947\u0924\u093e \u0939\u0948, \u0924\u094b \u0915\u0943\u092a\u092f\u093e \u0908\u092e\u0947\u0932 \u0915\u0947 \u0932\u093f\u090f \u0905\u092a\u0928\u0947 \u0938\u094d\u092a\u0948\u092e \u092b\u093c\u094b\u0932\u094d\u0921\u0930 \u0915\u0940 \u091c\u093e\u0902\u091a \u0915\u0930\u0947\u0902",
	btnOtpVerify: "\u0913\u091f\u0940\u092a\u0940 \u0938\u0924\u094d\u092f\u093e\u092a\u093f\u0924 \u0915\u0930\u0947\u0902",
	alreadyHavAcc: "\u092a\u0939\u0932\u0947 \u0938\u0947 \u0939\u0940 \u090f\u0915 \u0916\u093e\u0924\u093e \u0939\u0948?",
	smartbiteMessageError: "\u0915\u0943\u092a\u092f\u093e \u0938\u0902\u0926\u0947\u0936 \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902",
	smartbiteLinkError: "\u0915\u0943\u092a\u092f\u093e \u0915\u094b\u0908 \u092e\u093e\u0928\u094d\u092f \u0932\u093f\u0902\u0915 \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902",
	noGuidesOnThisPage: "\u0907\u0938 \u092a\u0943\u0937\u094d\u0920 \u092a\u0930 \u0915\u094b\u0908 \u0917\u093e\u0907\u0921 \u0909\u092a\u0932\u092c\u094d\u0927 \u0928\u0939\u0940\u0902 \u0939\u0948!",
	clickOn: "\u092a\u0930 \u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0947\u0902 ",
	contactUs: "\u0939\u092e\u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 \u0915\u0930\u0947\u0902",
	search: "\u0922\u0942\u0901\u0922",
	noRecordFound: "\u0915\u094b\u0908 \u0930\u093f\u0915\u0949\u0930\u094d\u0921 \u0928\u0939\u0940\u0902 \u092e\u093f\u0932\u093e",
	category: "\u092b\u093c\u094b\u0932\u094d\u0921\u0930",
	subCategory: "\u0909\u092a \u092b\u093c\u094b\u0932\u094d\u0921\u0930",
	confirmPasswordRequired: "\u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0915\u0940 \u092a\u0941\u0937\u094d\u091f\u093f \u0915\u0930\u0947\u0902",
	logInWithSSO: "\u090f\u0938\u090f\u0938\u0913 \u0915\u0947 \u0938\u093e\u0925 \u0932\u0949\u0917\u093f\u0928 \u0915\u0930\u0947\u0902",
	inputPlaceHolderSearch: "\u0915\u093f\u0938\u0940 \u092d\u0940 \u0917\u093e\u0907\u0921 \u0915\u0947 \u0932\u093f\u090f \u0916\u094b\u091c\u0947\u0902",
	noGuideAvailableFor: "\u0906\u092a\u0915\u0940 \u0916\u094b\u091c \u0938\u0947 \u092e\u0947\u0932 \u0916\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094b\u0908 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0928\u0939\u0940\u0902 \u092e\u093f\u0932\u0940",
	tryModifyingYourSearch: "\u0905\u092a\u0928\u0947 \u0916\u094b\u091c \u092e\u093e\u092a\u0926\u0902\u0921 \u0915\u094b \u0938\u0902\u0936\u094b\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u093e \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902",
	signInVerifyYourEmail: "\u0907\u0938 \u0908\u092e\u0947\u0932 \u0906\u0908\u0921\u0940 \u0915\u094b \u0938\u0924\u094d\u092f\u093e\u092a\u093f\u0924 \u0928\u0939\u0940\u0902 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948\u0964 \u0935\u093f\u0935\u0930\u0923 \u0915\u0947 \u0932\u093f\u090f \u0915\u0943\u092a\u092f\u093e \u0905\u092a\u0928\u093e \u0908\u092e\u0947\u0932 \u0926\u0947\u0916\u0947\u0902",
	signInVerifyYourAccount: "\u0939\u092e\u0928\u0947 \u0906\u092a\u0915\u094b \u090f\u0915 \u0913\u091f\u0940\u092a\u0940 \u0915\u0947 \u0938\u093e\u0925 \u090f\u0915 \u0908\u092e\u0947\u0932 \u092d\u0947\u091c\u093e \u0939\u0948\u0964 \u0938\u093e\u0907\u0928 \u0907\u0928 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e \u0915\u094b \u092a\u0942\u0930\u093e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0943\u092a\u092f\u093e \u0905\u092a\u0928\u093e \u0916\u093e\u0924\u093e \u0938\u0924\u094d\u092f\u093e\u092a\u093f\u0924 \u0915\u0930\u0947\u0902",
	maintenanceMessage: "\u0930\u0916\u0930\u0916\u093e\u0935 \u092a\u094d\u0930\u0917\u0924\u093f \u092a\u0930 \u0939\u0948\u0964 \u0915\u0943\u092a\u092f\u093e support@csod.com \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0939\u092e\u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 \u0915\u0930\u0947\u0902",
	back: "\u092a\u0940\u0920",
	changePassword: "\u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u092c\u0926\u0932\u0947\u0902",
	startTestAuto: "\u0938\u094d\u0935\u091a\u093e\u0932\u0928 \u092a\u0930\u0940\u0915\u094d\u0937\u0923 \u092a\u094d\u0930\u093e\u0930\u0902\u092d \u0915\u0930\u0947\u0902",
	msgPasswordChangedSuccess: "\u0906\u092a\u0915\u093e \u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0938\u092b\u0932\u0924\u093e\u092a\u0942\u0930\u094d\u0935\u0915 \u092c\u0926\u0932 \u0926\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948",
	msgConfirmNewPasswordError: "\u092a\u0941\u0937\u094d\u091f\u093f \u0915\u0930\u0947\u0902 \u0915\u093f \u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0928\u090f \u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0915\u0947 \u0938\u092e\u093e\u0928 \u0939\u094b\u0928\u093e \u091a\u093e\u0939\u093f\u090f",
	enterUrl: "\u091f\u0940\u092e URL \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902",
	dragPlaceholderDropThis: "\u0907\u0938\u0947 \u091b\u094b\u0921\u093c \u0926\u0947\u0902 ",
	dragPlaceholderHere: " \u092f\u0939\u093e\u0901",
	termsOfService: "\u0932\u093f\u0939\u093e\u091c",
	versionText: "\u0938\u0902\u0938\u094d\u0915\u0930\u0923",
	videoStepSuccessMessage: "\u0906\u092a\u0915\u093e \u0915\u0926\u092e \u0938\u092b\u0932\u0924\u093e\u092a\u0942\u0930\u094d\u0935\u0915 \u092c\u0928\u093e\u092f\u093e \u0917\u092f\u093e \u0925\u093e",
	importSuccessMessage: "\u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0938\u092b\u0932\u0924\u093e\u092a\u0942\u0930\u094d\u0935\u0915 \u0905\u092a\u0932\u094b\u0921 \u0915\u0940 \u0917\u0908. \u0906\u092f\u093e\u0924 \u0938\u094d\u0925\u093f\u0924\u093f \u0915\u0940 \u091c\u093e\u0901\u091a \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093e\u0930\u094d\u092f \u0938\u094d\u0925\u093f\u0924\u093f \u092a\u0930 \u091c\u093e\u090f\u0901",
	worldBankHelpSupport: "\u0915\u0941\u091b \u0909\u092a\u0915\u0930\u0923, \u091c\u0948\u0938\u0947 \u091f\u0942\u0932\u091f\u093f\u092a (\u0913\u0902), \u0915\u0947\u0935\u0932 \u0907\u0902\u091f\u0930\u092b\u093c\u0947\u0938 \u092e\u0947\u0902 \u0926\u0947\u0916\u0947 \u091c\u093e \u0938\u0915\u0924\u0947 \u0939\u0948\u0902",
	helpSupport: "\u0938\u0939\u093e\u092f\u0924\u093e \u0914\u0930 \u0938\u092e\u0930\u094d\u0925\u0928",
	page: "\u092a\u0943\u0937\u094d\u0920",
	selectAnApplication: "\u0915\u093f\u0938\u0940 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0915\u093e \u091a\u092f\u0928 \u0915\u0930\u0947\u0902",
	refresh: "\u0906\u0930\u093e\u092e \u0926\u0947\u0928\u093e",
	loginBtn: "\u0932\u0949\u0917\u093f\u0928",
	account: "\u0916\u093e\u0924\u093e",
	taskStatus: "\u0915\u093e\u0930\u094d\u092f \u0938\u094d\u0925\u093f\u0924\u093f ",
	logoutBtn: "\u0932\u0949\u0917\u0906\u0909\u091f",
	app: "\u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917:",
	firstStep: "\u092a\u0939\u0932\u093e \u0915\u0926\u092e",
	lastStep: "\u0905\u0902\u0924\u093f\u092e \u0915\u0926\u092e",
	startTest: "\u092a\u0930\u0940\u0915\u094d\u0937\u0923 \u092a\u094d\u0930\u093e\u0930\u0902\u092d \u0915\u0930\u0947\u0902",
	noInappStepInGuide: "TestMe \u0906\u0917\u0947 \u0928\u0939\u0940\u0902 \u092c\u0922\u093c \u0938\u0915\u0924\u093e \u0915\u094d\u092f\u094b\u0902\u0915\u093f \u0907\u0938 \u0917\u093e\u0907\u0921 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0907\u0928\u0932\u093e\u0907\u0928 \u091a\u0930\u0923 \u0928\u0939\u0940\u0902 \u0939\u0948",
	settingBtn: "\u0909\u0928\u094d\u0928\u0924 \u0938\u0947\u091f\u093f\u0902\u0917\u094d\u0938",
	orgSetting: "\u0938\u0902\u0917\u0920\u0928 \u0938\u0947\u091f\u093f\u0902\u0917\u094d\u0938",
	close: "\u092c\u0902\u0926 \u0915\u0930\u0928\u093e",
	pdf: ".PDF",
	downloadPptx: ".PPT",
	giphy: ".GIF",
	downloadWord: "\u0926\u0938\u094d\u0924\u093e\u0935\u0947\u091c",
	downloadBlog: "\u092c\u094d\u0932\u0949\u0917",
	downloadTxt: "\u0938\u093e\u0926\u093e \u092a\u093e\u0920",
	serviceErrorMessage: "\u0909\u092b\u093c! \u0915\u094b\u0908 \u0924\u094d\u0930\u0941\u091f\u093f \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0939\u0941\u0908. \u0915\u0943\u092a\u092f\u093e \u0915\u0941\u091b \u0938\u092e\u092f \u092c\u093e\u0926 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u0906\u092a \u0915\u093f\u0938\u0940 \u092d\u0940 \u0938\u0939\u093e\u092f\u0924\u093e \u0915\u0947 \u0932\u093f\u090f \u0939\u092e\u0947\u0902 support@csod.com \u092a\u0930 \u0908\u092e\u0947\u0932 \u092d\u0940 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902",
	guidesTab: "\u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e\u090f\u0901",
	noGuideCreatedYet: "\u0905\u092d\u0940 \u0924\u0915 \u0915\u094b\u0908 \u0917\u093e\u0907\u0921 \u0928\u0939\u0940\u0902 \u092c\u0928\u093e\u092f\u093e \u0917\u092f\u093e \u0939\u0948!",
	noCategoryCreatedYet: "\u0905\u092d\u0940 \u0924\u0915 \u0915\u094b\u0908 \u092b\u093c\u094b\u0932\u094d\u0921\u0930 \u0928\u0939\u0940\u0902 \u092c\u0928\u093e\u092f\u093e \u0917\u092f\u093e \u0939\u0948!",
	chatbot: "mychat",
	notAutorised: "\u0906\u092a\u0915\u0947 \u092a\u093e\u0938 \u0906\u0935\u0936\u094d\u092f\u0915 \u092a\u0939\u0941\u0901\u091a \u0928\u0939\u0940\u0902 \u0939\u0948, \u0915\u0943\u092a\u092f\u093e \u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093e\u092a\u0915 \u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 \u0915\u0930\u0947\u0902",
	ok: "\u0920\u0940\u0915 \u0939\u0948",
	apiError: "\u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930\u0947\u0936\u0928 \u0924\u094d\u0930\u0941\u091f\u093f. \u0915\u0943\u092a\u092f\u093e \u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093e\u092a\u0915 \u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 \u0915\u0930\u0947\u0902",
	select: "\u091a\u0941\u0928\u0928\u093e",
	mute_unmute: "\u092e\u094d\u092f\u0942\u091f\/\u0905\u0928-\u092e\u094d\u092f\u0942\u091f",
	privacyPolicy: "\u0917\u094b\u092a\u0928\u0940\u092f\u0924\u093e \u0914\u0930 \u0915\u0941\u0915\u0940\u091c\u093c",
	privacyPolicyText: "MyGuide \u0915\u0941\u0915\u0940\u091c\u093c \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u093e \u0939\u0948\u0964 \u092f\u0926\u093f \u0906\u092a \u091c\u093e\u0930\u0940 \u0930\u0916\u0924\u0947 \u0939\u0948\u0902, \u0924\u094b \u0906\u092a \u0939\u092e\u093e\u0930\u0940 \u0936\u0930\u094d\u0924\u094b\u0902 \u0914\u0930 \u0917\u094b\u092a\u0928\u0940\u092f\u0924\u093e \u0928\u0940\u0924\u093f \u0938\u0947 \u0938\u0939\u092e\u0924 \u0939\u0948\u0902 \u0914\u0930 \u0939\u092e\u0947\u0902 \u0915\u0941\u0915\u0940\u091c\u093c \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u0939\u092e\u0924\u093f \u0926\u0947 \u0930\u0939\u0947 \u0939\u0948\u0902",
	terms: "\u0932\u093f\u0939\u093e\u091c",
	westPecErrorMessage: "\u0906\u092a \u0907\u0938 \u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928 \u0924\u0915 \u092a\u0939\u0941\u0902\u091a\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0927\u093f\u0915\u0943\u0924 \u0928\u0939\u0940\u0902 \u0939\u0948\u0902\u0964 \u0915\u0943\u092a\u092f\u093e Westpac \u0915\u0947 \u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u092e\u0947\u0902 \u0938\u093e\u0907\u0928 \u0907\u0928 \u0915\u0930\u0947\u0902",
	noApp: "\u0915\u094b\u0908 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0928\u0939\u0940\u0902 \u092e\u093f\u0932\u093e",
	role: "\u092d\u0942\u092e\u093f\u0915\u093e:",
	all: "\u0938\u092c",
	video: "\u0935\u0940\u0921\u093f\u092f\u094b",
	course: "\u0917\u092e\u0928",
	article: "\u0932\u0947\u0916",
	image: "\u092a\u094d\u0930\u0924\u093f\u092c\u093f\u0902\u092c",
	pathways: "\u0930\u093e\u0938\u094d\u0924\u0947",
	preview: "\u092a\u0942\u0930\u094d\u0935\u0926\u0930\u094d\u0936\u0928",
	more: "\u0905\u0927\u093f\u0915",
	history: "\u0907\u0924\u093f\u0939\u093e\u0938",
	publish: "\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u0915\u0930\u0928\u093e",
	selectGuideLink: "\u0932\u093f\u0902\u0915 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0915\u093e \u091a\u092f\u0928 \u0915\u0930\u0947\u0902",
	selectGuideBeforeSubmit: "\u0938\u092c\u092e\u093f\u091f \u0915\u0930\u0928\u0947 \u0938\u0947 \u092a\u0939\u0932\u0947 \u0915\u0943\u092a\u092f\u093e \u0915\u093f\u0938\u0940 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0915\u093e \u091a\u092f\u0928 \u0915\u0930\u0947\u0902",
	change: "\u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928",
	checkNow: "\u0905\u092d\u0940 \u091c\u093e\u0902\u091a\u0947\u0902",
	minutes: "\u092e\u093f\u0928\u091f",
	clickHere: "\u092f\u0939\u093e\u0901 \u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0947\u0902",
	youAlmostDone: "\u0906\u092a \u0932\u0917\u092d\u0917 \u092a\u0942\u0930\u093e \u0939\u094b \u091a\u0941\u0915\u0947 \u0939\u0948\u0902!",
	setOrg: "\u0905\u092a\u0928\u093e \u0938\u0902\u0917\u0920\u0928 \u0938\u0947\u091f \u0905\u092a \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f",
	apps: "\u0910\u092a\u094d\u0938",
	me: "\u092e\u0941\u091d\u0915\u094b",
	playStep: "\u091a\u0930\u0923 \u091a\u0932\u093e\u090f\u0901",
	miniPlayerHelp: "\u092e\u0926\u0926",
	defaultMiniPlayerHelp: "\u092e\u0926\u0926",
	defaultConfirmIfSlideshowOrRedirect: "\u091a\u0930\u0923 \u0935\u0930\u094d\u0924\u092e\u093e\u0928 URL \u092a\u0930 \u0909\u092a\u0932\u092c\u094d\u0927 \u0928\u0939\u0940\u0902 \u0939\u0948.<br>\u0915\u094d\u092f\u093e \u0906\u092a \u091a\u0930\u0923 URL \u092a\u0930 \u091c\u093e\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902 \u092f\u093e \u0938\u094d\u0932\u093e\u0907\u0921 \u0936\u094b \u091a\u0932\u093e\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902?",
	defaultServiceErrorMessage: "\u0909\u092b\u093c! \u0915\u094b\u0908 \u0924\u094d\u0930\u0941\u091f\u093f \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0939\u0941\u0908. \u0915\u0943\u092a\u092f\u093e \u0915\u0941\u091b \u0938\u092e\u092f \u092c\u093e\u0926 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u0906\u092a \u0915\u093f\u0938\u0940 \u092d\u0940 \u0938\u0939\u093e\u092f\u0924\u093e \u0915\u0947 \u0932\u093f\u090f \u0939\u092e\u0947\u0902 support@csod.com \u092a\u0930 \u0908\u092e\u0947\u0932 \u092d\u0940 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902",
	defaultMaintenanceMessage: "\u0930\u0916\u0930\u0916\u093e\u0935 \u092a\u094d\u0930\u0917\u0924\u093f \u092a\u0930 \u0939\u0948\u0964 \u0915\u0943\u092a\u092f\u093e support@csod.com \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0939\u092e\u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 \u0915\u0930\u0947\u0902",
	userNotFollowingGuideMessage: "\u0910\u0938\u093e \u0932\u0917\u0924\u093e \u0939\u0948 \u0915\u093f \u0906\u092a \u0909\u0928 \u091a\u0930\u0923\u094b\u0902 \u0915\u093e \u092a\u094d\u0930\u0926\u0930\u094d\u0936\u0928 \u0915\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902 \u091c\u094b \u0907\u0938 \u0917\u093e\u0907\u0921 \u0915\u093e \u0939\u093f\u0938\u094d\u0938\u093e \u0928\u0939\u0940\u0902 \u0939\u0948\u0902\u0964 \u092f\u0926\u093f \u0906\u092a \u0905\u092c \u0917\u093e\u0907\u0921 \u0915\u093e \u092a\u093e\u0932\u0928 \u0928\u0939\u0940\u0902 \u0915\u0930\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902, \u0924\u094b \u0928\u093f\u0915\u093e\u0938 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u092a\u0930 \u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0947\u0902",
	defaultUserNotFollowingGuideMessage: "\u0910\u0938\u093e \u0932\u0917\u0924\u093e \u0939\u0948 \u0915\u093f \u0906\u092a \u0909\u0928 \u091a\u0930\u0923\u094b\u0902 \u0915\u093e \u092a\u094d\u0930\u0926\u0930\u094d\u0936\u0928 \u0915\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902 \u091c\u094b \u0907\u0938 \u0917\u093e\u0907\u0921 \u0915\u093e \u0939\u093f\u0938\u094d\u0938\u093e \u0928\u0939\u0940\u0902 \u0939\u0948\u0902\u0964 \u092f\u0926\u093f \u0906\u092a \u0905\u092c \u0917\u093e\u0907\u0921 \u0915\u093e \u092a\u093e\u0932\u0928 \u0928\u0939\u0940\u0902 \u0915\u0930\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902, \u0924\u094b \u0928\u093f\u0915\u093e\u0938 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u092a\u0930 \u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0947\u0902",
	resumeGuide: "\u0930\u093f\u091c\u094d\u092f\u0942\u092e \u0917\u093e\u0907\u0921",
	defaultResumeGuideMessage: "\u0930\u093f\u091c\u094d\u092f\u0942\u092e \u0917\u093e\u0907\u0921",
	backToLogin: "\u0932\u0949\u0917\u093f\u0928 \u092a\u0930 \u0935\u093e\u092a\u0938 \u091c\u093e\u090f\u0902",
	filters: "\u092b\u093c\u093f\u0932\u094d\u091f\u0930",
	thisApp: "\u0907\u0938 \u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928",
	thisWebsite: "\u0907\u0938 \u0935\u0947\u092c\u0938\u093e\u0907\u091f",
	maxFreeTourLimit: "\u092a\u0930\u094d\u092f\u091f\u0928 \u0915\u0940 \u0905\u0927\u093f\u0915\u0924\u092e \u0938\u0940\u092e\u093e \u0924\u0915 \u092a\u0939\u0941\u0901\u091a \u0917\u092f\u093e",
	passwordRegexCheck: "\u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u092e\u0947\u0902 \u0915\u092e \u0938\u0947 \u0915\u092e 8 \u0935\u0930\u094d\u0923 \u0939\u094b\u0928\u0947 \u091a\u093e\u0939\u093f\u090f, \u091c\u093f\u0938\u092e\u0947\u0902 \u0915\u092e \u0938\u0947 \u0915\u092e \u090f\u0915 \u0905\u092a\u0930\u0915\u0947\u0938, \u090f\u0915 \u0932\u094b\u0905\u0930\u0915\u0947\u0938 \u0914\u0930 \u090f\u0915 \u0938\u0902\u0916\u094d\u092f\u093e\u0924\u094d\u092e\u0915 \u092e\u093e\u0928 \u0936\u093e\u092e\u093f\u0932 \u0939\u0948",
	countLimit: "99+",
	microsoftServiceKey: "\u0915\u0943\u092a\u092f\u093e \u0905\u092a\u0928\u0940 Microsoft Cognitive Services Speech \u0938\u0926\u0938\u094d\u092f\u0924\u093e \u0915\u0941\u0902\u091c\u0940 \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902",
	numberOfImgFile: "\u091b\u0935\u093f \u092b\u093c\u093e\u0907\u0932\u094b\u0902 \u0914\u0930 \u092a\u093e\u0920 \u092b\u093c\u093e\u0907\u0932\u094b\u0902 \u0915\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u0938\u092e\u093e\u0928 \u0939\u094b\u0928\u0940 \u091a\u093e\u0939\u093f\u090f",
	availableOn: "\u092a\u0930 \u0909\u092a\u0932\u092c\u094d\u0927 \u0939\u0948",
	tooltipUnpubWorkflowTitle: "\u0905\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u0935\u0930\u094d\u0915\u092b\u093c\u094d\u0932\u094b",
	tooltipUnpubParentWorkflowTitle: "\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u0935\u0930\u094d\u0915\u092b\u093c\u094d\u0932\u094b, \u0905\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u092a\u0947\u0930\u0947\u0902\u091f \u092b\u093c\u094b\u0932\u094d\u0921\u0930",
	tooltipPubParentWorkflowTitle: "\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u0935\u0930\u094d\u0915\u092b\u093c\u094d\u0932\u094b, \u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u092b\u093c\u094b\u0932\u094d\u0921\u0930",
	tooltipUnpubTooltipTitle: "\u0905\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u091f\u0942\u0932\u091f\u093f\u092a",
	tooltipUnpubParentTooltipTitle: "\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u091f\u0942\u0932\u091f\u093f\u092a, \u0905\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u092a\u0947\u0930\u0947\u0902\u091f \u092b\u093c\u094b\u0932\u094d\u0921\u0930",
	tooltipPubParentTooltipTitle: "\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u091f\u0942\u0932\u091f\u093f\u092a, \u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u092b\u093c\u094b\u0932\u094d\u0921\u0930",
	tooltipUnpubTutorialTitle: "\u0905\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u091f\u094d\u092f\u0942\u091f\u094b\u0930\u093f\u092f\u0932",
	tooltipUnpubParentTutorialTitle: "\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u091f\u094d\u092f\u0942\u091f\u094b\u0930\u093f\u092f\u0932, \u0905\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u092a\u0947\u0930\u0947\u0902\u091f \u092b\u093c\u094b\u0932\u094d\u0921\u0930",
	tooltipPubParentTutorialTitle: "\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u091f\u094d\u092f\u0942\u091f\u094b\u0930\u093f\u092f\u0932, \u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u092b\u093c\u094b\u0932\u094d\u0921\u0930",
	tooltipUnpubSubFolderTitle: "\u0905\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u0909\u092a-\u092b\u093c\u094b\u0932\u094d\u0921\u0930",
	tooltipUnpubSubFolderDesc: "\u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e\u090f\u0901 \u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a-\u092b\u093c\u094b\u0932\u094d\u0921\u0930\u094d\u0938 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902",
	tooltipUnpubParentSubFolderTitle: "\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u0909\u092a-\u092b\u093c\u094b\u0932\u094d\u0921\u0930, \u0905\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u092a\u0947\u0930\u0947\u0902\u091f \u092b\u093c\u094b\u0932\u094d\u0921\u0930",
	tooltipPubParentSubFolderTitle: "\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u0909\u092a-\u092b\u093c\u094b\u0932\u094d\u0921\u0930, \u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u092b\u093c\u094b\u0932\u094d\u0921\u0930",
	tooltipPubParentSubFolderDesc: "\u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e\u0913\u0902 \u0915\u093e \u0906\u092f\u094b\u091c\u0928 \u0915\u0930\u0924\u093e \u0939\u0948",
	exitSurvey: "\u0928\u093f\u0915\u093e\u0938 \u0938\u0930\u094d\u0935\u0947\u0915\u094d\u0937\u0923",
	disable: "\u0905\u0915\u094d\u0937\u092e",
	instructionExitSurvey: "\u0928\u093f\u0915\u093e\u0938 \u0938\u0930\u094d\u0935\u0947\u0915\u094d\u0937\u0923 \u0924\u092c \u0926\u093f\u0916\u093e\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948 \u091c\u092c \u0915\u094b\u0908 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u092a\u0942\u0930\u093e \u0939\u094b\u0928\u0947 \u0938\u0947 \u092a\u0939\u0932\u0947 \u090f\u0915 \u0917\u093e\u0907\u0921 \u0938\u0947 \u092c\u093e\u0939\u0930 \u0928\u093f\u0915\u0932\u0924\u093e \u0939\u0948",
	msgVideoNotFound: "\u0905\u092a\u0928\u093e \u0935\u0940\u0921\u093f\u092f\u094b \u0905\u092a\u0932\u094b\u0921 \u0915\u0930\u0924\u0947 \u0939\u0941\u090f, \u0915\u0943\u092a\u092f\u093e \u0915\u0941\u091b \u0938\u092e\u092f \u092c\u093e\u0926 \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902",
	msgGiphyNotFound: "\u0905\u092a\u0928\u093e GIF \u0905\u092a\u0932\u094b\u0921 \u0915\u0930\u0928\u093e, \u0915\u0943\u092a\u092f\u093e \u0915\u0941\u091b \u0938\u092e\u092f \u092c\u093e\u0926 \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902",
	userPref: "\u092e\u0947\u0930\u0940 \u092a\u094d\u0930\u093e\u0925\u092e\u093f\u0915\u0924\u093e\u090f\u0902",
	manageAccount: "\u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093e\u092a\u0915 \u092a\u094b\u0930\u094d\u091f\u0932",
	analyticsPortal: "Insights portal",
	errorInvalidUrl: "\u0915\u094b\u0908 \u092e\u093e\u0928\u094d\u092f URL \u0928\u0939\u0940\u0902",
	wbFooterText: "\u0907\u0938\u0915\u0940 \u0924\u0915\u0928\u0940\u0915\u0940 \u0936\u093f\u0915\u094d\u0937\u093e",
	navigationMenu: "\u0928\u0947\u0935\u093f\u0917\u0947\u0936\u0928 \u092e\u0947\u0928\u0942",
	clearHistory: "\u0938\u094d\u092a\u0937\u094d\u091f \u0907\u0924\u093f\u0939\u093e\u0938",
	userDeniedMessage: "\u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0928\u0947 \u0915\u0948\u092e\u0930\u093e \u0914\u0930 \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u092b\u093c\u094b\u0928 \u090f\u0915\u094d\u0938\u0947\u0938 \u0905\u0928\u0941\u092e\u0924\u093f\u092f\u094b\u0902 \u0938\u0947 \u0907\u0928\u0915\u093e\u0930 \u0915\u093f\u092f\u093e",
	pushNotification: "\u0938\u0942\u091a\u0928\u093e\u0913\u0902 \u0915\u094b \u092a\u0941\u0936 \u0915\u0930\u0947\u0902",
	viewDetail: "\u0935\u093f\u0938\u094d\u0924\u093e\u0930 \u0938\u0947 \u0926\u0947\u0916\u0947\u0902",
	contactAdmin: "\u0915\u0943\u092a\u092f\u093e \u0905\u0927\u093f\u0915 \u0938\u0939\u093e\u092f\u0924\u093e \u0915\u0947 \u0932\u093f\u090f support@csod.com \u092f\u093e \u0905\u092a\u0928\u0947 \u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093e\u092a\u0915 \u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 \u0915\u0930\u0947\u0902",
	noAppOnDomain: "\u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u0921\u094b\u092e\u0947\u0928 \u0915\u0947 \u0932\u093f\u090f \u0905\u0938\u093e\u0907\u0928 \u0928\u0939\u0940\u0902 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948 ",
	noGuidesOnDomain: "\u0915\u094b\u0908 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e\u090f\u0901 \u0928\u0939\u0940\u0902 \u092e\u093f\u0932\u0940\u0902",
	apply: "\u0932\u093e\u0917\u0942 \u0915\u0930\u0928\u093e",
	invalidLoginCred: "\u0905\u092e\u093e\u0928\u094d\u092f \u0932\u0949\u0917\u093f\u0928 \u0915\u094d\u0930\u0947\u0921\u0947\u0902\u0936\u093f\u092f\u0932. \u0915\u0908 \u0905\u0938\u092b\u0932 \u092a\u094d\u0930\u092f\u093e\u0938\u094b\u0902 \u0915\u0947 \u092c\u093e\u0926 \u0906\u092a\u0915\u093e \u0916\u093e\u0924\u093e \u0932\u0949\u0915 \u0939\u094b \u091c\u093e\u090f\u0917\u093e, \u0906\u092a\u0915\u094b \u0905\u092a\u0928\u093e \u0916\u093e\u0924\u093e \u0905\u0928\u0932\u0949\u0915 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u0908\u092e\u0947\u0932 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0939\u094b\u0917\u093e, \u092f\u093e \u0906\u092a \u0905\u092a\u0928\u093e \u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0930\u0940\u0938\u0947\u091f \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902",
	resendOTP: "\u0913\u091f\u0940\u092a\u0940 \u0915\u094b \u092b\u093f\u0930 \u0938\u0947 \u092d\u0947\u091c\u0947\u0902",
	sendFeedback: "\u092b\u093c\u0940\u0921\u092c\u0948\u0915 \u092d\u0947\u091c\u0947\u0902",
	guideNotExist: "\u092f\u0939 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0907\u0938 \u092a\u0943\u0937\u094d\u0920 \u092a\u0930 \u0909\u092a\u0932\u092c\u094d\u0927 \u0928\u0939\u0940\u0902 \u0939\u0948 (\u0924\u094d\u0930\u0941\u091f\u093f: \u0921\u094b\u092e\u0947\u0928 \u092c\u0947\u092e\u0947\u0932) ",
	cdnAccess: "<b>\u0939\u092e\u0947\u0902 \u0916\u0947\u0926 \u0939\u0948<\/b> <br><br>\u0910\u0938\u093e \u0932\u0917\u0924\u093e \u0939\u0948 \u0915\u093f \u0939\u092e\u093e\u0930\u0947 \u0938\u0930\u094d\u0935\u0930 \u0915\u0947 \u0938\u093e\u0925 \u0938\u092e\u0938\u094d\u092f\u093e \u0939\u0948\u0964<br> \u0939\u092e\u0947\u0902 \u0924\u094d\u0930\u0941\u091f\u093f \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u0938\u0942\u091a\u093f\u0924 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948 \u0914\u0930 \u0907\u0938\u0947 \u091c\u0932\u094d\u0926 \u0938\u0947 \u091c\u0932\u094d\u0926 \u0920\u0940\u0915 \u0915\u0930 \u0926\u093f\u092f\u093e \u091c\u093e\u090f\u0917\u093e",
	tourPlayError: "\u0917\u093e\u0907\u0921 \u0928\u0939\u0940\u0902 \u0916\u0947\u0932\u093e \u091c\u093e \u0938\u0915\u0924\u093e. \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0935\u093f\u0935\u0930\u0923 \u092a\u0941\u0928\u0930\u094d\u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0924\u0947 \u0938\u092e\u092f \u0924\u094d\u0930\u0941\u091f\u093f",
	playerMode: "\u092a\u094d\u0932\u0947\u092f\u0930 \u092e\u094b\u0921",
	closePanel: "\u0915\u094d\u0932\u094b\u091c \u092a\u0948\u0928\u0932",
	switchCreatorMode: "\u0915\u094d\u0930\u093f\u090f\u091f\u0930 \u092e\u094b\u0921 \u092a\u0930 \u0938\u094d\u0935\u093f\u091a \u0915\u0930\u0947\u0902",
	extensionContextError: "\u090f\u0915\u094d\u0938\u091f\u0947\u0902\u0936\u0928 \u0938\u0902\u0926\u0930\u094d\u092d \u0905\u092e\u093e\u0928\u094d\u092f \u0939\u0948. \u091c\u093e\u0930\u0940 \u0930\u0916\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0943\u092a\u092f\u093e \u092a\u0943\u0937\u094d\u0920 \u0915\u094b \u092a\u0941\u0928\u0903 \u0932\u094b\u0921 \u0915\u0930\u0947\u0902",
	otpSent: "\u0913\u091f\u0940\u092a\u0940 \u0906\u092a\u0915\u0947 \u0908\u092e\u0947\u0932 \u092a\u0930 \u092b\u093f\u0930 \u0938\u0947 \u092d\u0947\u091c\u093e \u0917\u092f\u093e \u0939\u0948, \u0915\u0943\u092a\u092f\u093e \u0905\u092a\u0928\u0947 \u0907\u0928\u092c\u0949\u0915\u094d\u0938 \u0915\u0940 \u091c\u093e\u0902\u091a \u0915\u0930\u0947\u0902",
	startOver: "\u092b\u093f\u0930 \u0938\u0947 \u092a\u094d\u0930\u093e\u0930\u0902\u092d \u0915\u0930\u0947\u0902",
	yesResume: "\u0938\u093e\u0930",
	dontShowAgain: "\u092b\u093f\u0930 \u0938\u0947 \u092e\u0924 \u0926\u093f\u0916\u093e\u0913",
	notificationHeader: "\u0906\u092a\u0915\u094b \u090f\u0915 \u0938\u0942\u091a\u0928\u093e \u092e\u093f\u0932\u0940 \u0939\u0948!",
	watchLater: "\u092c\u093e\u0926 \u092e\u0947\u0902 \u0926\u0947\u0916\u0947\u0902",
	pushSnoozeMsg: "\u0907\u0938 \u0905\u0927\u093f\u0938\u0942\u091a\u0928\u093e \u0915\u0947 \u0932\u093f\u090f \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923 \u0926\u093f\u092f\u093e \u091c\u093e\u090f\u0917\u093e",
	showAgain: "\u092b\u093f\u0930 \u0938\u0947 \u0926\u093f\u0916\u093e\u090f\u0901",
	noGuidesOnThisTab: "\u0907\u0938 \u092a\u0943\u0937\u094d\u0920 \u092a\u0930 \u0915\u094b\u0908 \u0938\u0942\u091a\u0928\u093e \u0928\u0939\u0940\u0902 \u0939\u0948",
	iAgree: "\u092e\u0948\u0902 \u0938\u0939\u092e\u0924 \u0939\u0942\u0901",
	viewMore: "\u0905\u0927\u093f\u0915 \u0926\u0947\u0916\u0947\u0902",
	lostInternetConnection: "\u0938\u0930\u094d\u0935\u0930 \u0938\u0947 \u0915\u0928\u0947\u0915\u094d\u0936\u0928 \u0916\u094b \u0917\u092f\u093e. \u0915\u0943\u092a\u092f\u093e \u092a\u0941\u0928: \u0915\u0928\u0947\u0915\u094d\u091f \u0915\u0930\u0947\u0902 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902",
	next: "\u0905\u0917\u0932\u093e",
	recent: "\u0939\u093e\u0932 \u092e\u0947\u0902",
	older: "\u092a\u0941\u0930\u093e\u0928\u093e",
	atoz: "A - Z",
	ztoa: "Z - A",
	clear: "\u0938\u094d\u092a\u0937\u094d\u091f",
	tooltipDontShowAgain: "\u0938\u0942\u091a\u0928\u093e\u090f\u0902 \u0905\u092c \u0926\u093f\u0916\u093e\u0908 \u0928\u0939\u0940\u0902 \u0926\u0947\u0902\u0917\u0940\u0964 \u0905\u092c \u090f\u0915 \u0905\u0927\u093f\u0938\u0942\u091a\u0928\u093e \u0938\u0915\u094d\u0937\u092e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0909\u0938 \u092a\u0930 \u092e\u0902\u0921\u0930\u093e\u090f\u0902 \u0914\u0930 '\u092b\u093f\u0930 \u0938\u0947 \u0926\u093f\u0916\u093e\u090f\u0902' \u092a\u0930 \u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0947\u0902",
	tooltipWatchLater1: "\u0938\u0942\u091a\u0928\u093e\u090f\u0902 \u0915\u093f\u0938\u0915\u0947 \u0932\u093f\u090f \u092d\u0947\u091c\u0940 \u091c\u093e\u0924\u0940 \u0939\u0948\u0902?",
	tooltipWatchLater2: "\u0914\u0930 \u0909\u0938\u0915\u0947 \u092c\u093e\u0926 \u0926\u093f\u0916\u093e\u0908 \u0926\u0947\u0917\u093e\u0964 \u0905\u092c \u090f\u0915 \u0905\u0927\u093f\u0938\u0942\u091a\u0928\u093e \u0938\u0915\u094d\u0937\u092e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0909\u0938 \u092a\u0930 \u092e\u0902\u0921\u0930\u093e\u090f\u0902 \u0914\u0930 '\u092b\u093f\u0930 \u0938\u0947 \u0926\u093f\u0916\u093e\u090f\u0902' \u092a\u0930 \u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0947\u0902",
	hour: "\u0918\u0902\u091f\u093e",
	hours: "\u0918\u0902\u091f\u0947",
	insightsTracker: "Insights Tracker",
	slideshow: "\u0938\u094d\u0932\u093e\u0907\u0921 \u0936\u094b",
	autoplay: "\u0911\u091f\u094b\u092a\u094d\u0932\u0947",
	powerFormOldData: "\u092e\u094c\u091c\u0942\u0926\u093e \u0921\u0947\u091f\u093e",
	powerFormNewData: "\u0928\u092f\u093e \u0921\u0947\u091f\u093e \u0926\u0930\u094d\u091c \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0907\u0938 \u092a\u094d\u0930\u092a\u0924\u094d\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902",
	powerFormNewDataMore: "\u092f\u0926\u093f \u0906\u092a\u0915\u093e \u092e\u094c\u091c\u0942\u0926\u093e \u0921\u0947\u091f\u093e \u0926\u093f\u0916\u093e\u0908 \u0928\u0939\u0940\u0902 \u0926\u0947 \u0930\u0939\u093e \u0939\u0948, \u0924\u094b \u0915\u0943\u092a\u092f\u093e \u0905\u092a\u0928\u093e \u0921\u0947\u091f\u093e \u0926\u0947\u0916\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090a\u092a\u0930 \u092c\u093e\u0908\u0902 \u0913\u0930 \u0924\u0940\u0930 \u092a\u0930 \u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0947\u0902\u0964 \u0921\u0947\u091f\u093e \u0915\u094b \u0924\u092c \u0905\u0928\u0941\u092e\u0924 \u092c\u0941\u0932\u0947\u091f\u0947\u0921 \u092a\u094d\u0930\u093e\u0930\u0942\u092a \u092e\u0947\u0902 \u0915\u0949\u092a\u0940 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0939\u094b\u0924\u0940 \u0939\u0948\u0964",
	powerFormTitle: "\u0921\u0947\u091f\u093e \u090f\u0902\u091f\u094d\u0930\u0940 \u0905\u0938\u093f\u0938\u094d\u091f\u0947\u0902\u091f",
	powerFormMandatory: "\u092f\u0939 \u090f\u0915 \u0905\u0928\u093f\u0935\u093e\u0930\u094d\u092f \u092b\u093c\u0940\u0932\u094d\u0921, \u0905\u0927\u093f\u0915\u0924\u092e \u0935\u0930\u094d\u0923 \u0938\u0940\u092e\u093e \u0939\u0948 ",
	belongToOtherApp: "\u092f\u0939 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e {TOURURL} \u092a\u0930 \u092c\u0928\u093e\u0908 \u0917\u0908 \u0939\u0948, \u091c\u094b {APPNAME} \u0910\u092a \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u0939\u0948. \u0915\u0943\u092a\u092f\u093e \u0909\u0938 \u0910\u092a \u092e\u0947\u0902 \u0907\u0938 \u0917\u093e\u0907\u0921 \u0915\u0940 \u092a\u094d\u0930\u0924\u093f\u0932\u093f\u092a\u093f \u092c\u0928\u093e\u090f\u0901 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902",
	setDomain: "\u092f\u0926\u093f \u0906\u092a \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0939\u0948\u0902 \u0915\u093f {TOURURL} \u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0921\u094b\u092e\u0947\u0928 \u0938\u0947\u091f\u093f\u0902\u0917\u094d\u0938 \u092e\u0947\u0902 \u091c\u094b\u0921\u093c\u093e \u091c\u093e\u0928\u093e \u091a\u093e\u0939\u093f\u090f, \u0924\u094b \u0915\u0943\u092a\u092f\u093e \u091c\u094b\u0921\u093c\u0947\u0902 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902",
	on: "\u092a\u0930",
	off: "\u092c\u0902\u0926",
	btnPrev: "\u092a\u0940\u091b\u0947",
	btnPrevious: "\u092a\u093f\u091b\u0932\u093e",
	taskList: "\u0915\u093e\u0930\u094d\u092f \u0938\u0942\u091a\u0940",
	unprocessedVideo: "\u0915\u0943\u092a\u092f\u093e \u0924\u092c \u0924\u0915 \u092a\u094d\u0930\u0924\u0940\u0915\u094d\u0937\u093e \u0915\u0930\u0947\u0902 \u091c\u092c \u0924\u0915 \u0906\u092a\u0915\u093e \u0935\u0940\u0921\u093f\u092f\u094b \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0928 \u0939\u094b.",
	searchResult: "\u0916\u094b\u091c \u092a\u0930\u093f\u0923\u093e\u092e",
	pleaseWait: "\u0915\u0943\u092a\u092f\u093e \u092a\u094d\u0930\u0924\u0940\u0915\u094d\u0937\u093e \u0915\u0930\u094b!",
	mediaDownloadMsg: "\u091c\u092c\u0915\u093f \u0939\u092e \u0921\u093e\u0909\u0928\u0932\u094b\u0921 \u0915\u0947 \u0932\u093f\u090f \u0906\u092a\u0915\u0940 \u092b\u093c\u093e\u0907\u0932\u094b\u0902 \u0915\u094b \u0924\u0948\u092f\u093e\u0930 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902",
	mediaFileNotFound: "\u092e\u0940\u0921\u093f\u092f\u093e \u092b\u093c\u093e\u0907\u0932 \u0928\u0939\u0940\u0902 \u092e\u093f\u0932\u0940",
	searchInFolder: "\u092b\u093c\u094b\u0932\u094d\u0921\u0930 \u092e\u0947\u0902 \u0916\u094b\u091c\u0947\u0902",
	currentPageSearchPlaceholder: "\u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u092a\u0943\u0937\u094d\u0920 \u092a\u0930 \u0909\u092a\u0932\u092c\u094d\u0927 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e (\u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e\u0913\u0902) \u0915\u0940 \u0916\u094b\u091c \u0915\u0930\u0947\u0902",
	brandLogo: "\u092c\u094d\u0930\u093e\u0902\u0921 \u0932\u094b\u0917\u094b",
	accessibility: "\u0938\u0941\u0932\u092d\u0924\u093e",
	replay: "\u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f",
	defaultGreetingMessage: "\u0938\u0941\u0928\u094b! MyGuide \u092e\u0947\u0902 \u0906\u092a\u0915\u093e \u0938\u094d\u0935\u093e\u0917\u0924 \u0939\u0948\u0964 \u092e\u0948\u0902 \u0906\u092a\u0915\u0940 \u0915\u094d\u092f\u093e \u092e\u0926\u0926 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0942\u0901? \u0915\u0943\u092a\u092f\u093e \u0927\u094d\u092f\u093e\u0928 \u0930\u0916\u0947\u0902 \u0915\u093f \u092e\u0948\u0902 \u090f\u0915 \u092c\u0949\u091f \u0939\u0942\u0902\u0964",
	defaultErrorMessage: "\u0915\u094d\u0937\u092e\u093e \u0915\u0930\u0947\u0902, \u092e\u0941\u091d\u0947 \u092f\u0939 \u0938\u092e\u091d \u092e\u0947\u0902 \u0928\u0939\u0940\u0902 \u0906\u092f\u093e\u0964 \u0915\u094d\u092f\u093e \u0906\u092a \u0905\u0927\u093f\u0915 \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0939\u094b \u0938\u0915\u0924\u0947 \u0939\u0948\u0902? ",
	defaultEndMessage: "\u0939\u092e\u0928\u0947 \u0915\u093f\u092f\u093e \u0939\u0948, \u092c\u0939\u0941\u0924 \u092c\u0939\u0941\u0924 \u0927\u0928\u094d\u092f\u0935\u093e\u0926!",
	greetingMessage: "\u0938\u0941\u0928\u094b! MyGuide \u092e\u0947\u0902 \u0906\u092a\u0915\u093e \u0938\u094d\u0935\u093e\u0917\u0924 \u0939\u0948\u0964 \u092e\u0948\u0902 \u0906\u092a\u0915\u0940 \u0915\u094d\u092f\u093e \u092e\u0926\u0926 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0942\u0901? \u0915\u0943\u092a\u092f\u093e \u0927\u094d\u092f\u093e\u0928 \u0930\u0916\u0947\u0902 \u0915\u093f \u092e\u0948\u0902 \u090f\u0915 \u092c\u0949\u091f \u0939\u0942\u0902\u0964",
	errorMessage: "\u0915\u094d\u0937\u092e\u093e \u0915\u0930\u0947\u0902, \u092e\u0941\u091d\u0947 \u092f\u0939 \u0938\u092e\u091d \u092e\u0947\u0902 \u0928\u0939\u0940\u0902 \u0906\u092f\u093e\u0964 \u0915\u094d\u092f\u093e \u0906\u092a \u0905\u0927\u093f\u0915 \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0939\u094b \u0938\u0915\u0924\u0947 \u0939\u0948\u0902? ",
	endMessage: "\u0939\u092e\u0928\u0947 \u0915\u093f\u092f\u093e \u0939\u0948, \u092c\u0939\u0941\u0924 \u092c\u0939\u0941\u0924 \u0927\u0928\u094d\u092f\u0935\u093e\u0926!",
	guideLnkToRedirect: "\u092a\u0943\u0937\u094d\u0920 \u092a\u0930 \u0930\u0940\u0921\u093e\u092f\u0930\u0947\u0915\u094d\u091f \u0915\u0930\u0928\u0947 \u0914\u0930 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u091a\u0932\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0928\u093f\u092e\u094d\u0928 \u0932\u093f\u0902\u0915 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902",
	otpTimer: "\u0906\u092a \u092a\u0941\u0928\u0903 \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 ",
	seconds: " \u0938\u0947\u0915\u0902\u0921",
	limitWarning: "\u0906\u092a \u0905\u0938\u092b\u0932 \u092a\u094d\u0930\u092f\u093e\u0938\u094b\u0902 \u0915\u0940 \u0905\u0927\u093f\u0915\u0924\u092e \u0938\u0940\u092e\u093e \u0924\u0915 \u092a\u0939\u0941\u0901\u091a \u0917\u090f \u0939\u0948\u0902",
	403: "\u0939\u092e \u0907\u0938 \u0905\u0928\u0941\u0930\u094b\u0927 \u0915\u0947 \u0938\u093e\u0925 \u090f\u0915 \u0938\u092e\u0938\u094d\u092f\u093e \u092e\u0947\u0902 \u092d\u093e\u0917 \u0917\u090f\u0964 \u0915\u0943\u092a\u092f\u093e \u092f\u0939 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948, \u0924\u094b \u0939\u092e\u0947\u0902 support@csod.com \u092a\u0930 \u0930\u093f\u092a\u094b\u0930\u094d\u091f \u0915\u0930\u0947\u0902",
	405: "\u0907\u0938 \u0905\u0928\u0941\u0930\u094b\u0927 \u0915\u094b \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930\u0924\u0947 \u0938\u092e\u092f \u0939\u092e\u0947\u0902 \u090f\u0915 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u093e \u0938\u093e\u092e\u0928\u093e \u0915\u0930\u0928\u093e \u092a\u0921\u093c\u093e\u0964 \u0915\u0943\u092a\u092f\u093e \u092f\u0939 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948, \u0924\u094b \u0939\u092e\u0947\u0902 support@csod.com \u092a\u0930 \u0930\u093f\u092a\u094b\u0930\u094d\u091f \u0915\u0930\u0947\u0902",
	429: "\u092c\u0939\u0941\u0924 \u0938\u093e\u0930\u0947 \u0905\u0928\u0941\u0930\u094b\u0927",
	1003: "\u092a\u094d\u0930\u092e\u093e\u0923\u0940\u0915\u0930\u0923 \u0915\u0947 \u0926\u094c\u0930\u093e\u0928 \u0939\u092e\u0947\u0902 \u090f\u0915 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u093e \u0938\u093e\u092e\u0928\u093e \u0915\u0930\u0928\u093e \u092a\u0921\u093c\u093e\u0964 \u0915\u0943\u092a\u092f\u093e \u092a\u0941\u0928: \u0932\u0949\u0917\u093f\u0928 \u0915\u0930\u0947\u0902 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948, \u0924\u094b \u092a\u0943\u0937\u094d\u0920 \u0924\u093e\u091c\u093c\u093e \u0915\u0930\u0947\u0902 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902",
	1007: "\u092a\u094d\u0930\u092e\u093e\u0923\u0940\u0915\u0930\u0923 \u0915\u0947 \u0926\u094c\u0930\u093e\u0928 \u0939\u092e\u0947\u0902 \u090f\u0915 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u093e \u0938\u093e\u092e\u0928\u093e \u0915\u0930\u0928\u093e \u092a\u0921\u093c\u093e\u0964 \u0915\u0943\u092a\u092f\u093e \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948, \u0924\u094b \u0939\u092e\u0947\u0902 support@csod.com \u092a\u0930 \u0930\u093f\u092a\u094b\u0930\u094d\u091f \u0915\u0930\u0947\u0902",
	1005: "<b>\u0939\u092e\u0947\u0902 \u0916\u0947\u0926 \u0939\u0948<\/b> <br><br>\u0910\u0938\u093e \u0932\u0917\u0924\u093e \u0939\u0948 \u0915\u093f \u0905\u0928\u0941\u0930\u094b\u0927 \u0915\u0947 \u0938\u093e\u0925 \u092f\u093e \u0939\u092e\u093e\u0930\u0947 \u0938\u0930\u094d\u0935\u0930 \u0915\u0947 \u0938\u093e\u0925 \u0915\u094b\u0908 \u0938\u092e\u0938\u094d\u092f\u093e \u0939\u0948\u0964<br> \u0939\u092e\u0947\u0902 \u0924\u094d\u0930\u0941\u091f\u093f \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u0938\u0942\u091a\u093f\u0924 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948 \u0914\u0930 \u0907\u0938\u0947 \u091c\u0932\u094d\u0926 \u0938\u0947 \u091c\u0932\u094d\u0926 \u0920\u0940\u0915 \u0915\u0930 \u0926\u093f\u092f\u093e \u091c\u093e\u090f\u0917\u093e",
	1009: "\u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0908\u092e\u0947\u0932 \u0938\u0924\u094d\u092f\u093e\u092a\u093f\u0924 \u0928\u0939\u0940\u0902 \u0939\u0948",
	1014: "\u0930\u0916\u0930\u0916\u093e\u0935 \u092a\u094d\u0930\u0917\u0924\u093f \u092a\u0930 \u0939\u0948\u0964 \u0915\u0943\u092a\u092f\u093e support@csod.com \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0939\u092e\u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 \u0915\u0930\u0947\u0902",
	1017: "\u092a\u094d\u0930\u092e\u093e\u0923\u0940\u0915\u0930\u0923 \u0915\u0947 \u0926\u094c\u0930\u093e\u0928 \u0939\u092e\u0947\u0902 \u090f\u0915 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u093e \u0938\u093e\u092e\u0928\u093e \u0915\u0930\u0928\u093e \u092a\u0921\u093c\u093e\u0964 \u0915\u0943\u092a\u092f\u093e \u092a\u0941\u0928: \u0932\u0949\u0917\u093f\u0928 \u0915\u0930\u0947\u0902 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948, \u0924\u094b \u0939\u092e\u0947\u0902 support@csod.com \u092a\u0930 \u0930\u093f\u092a\u094b\u0930\u094d\u091f \u0915\u0930\u0947\u0902",
	1018: "\u0906\u092a \u091a\u0930\u0923 \u092c\u0928\u093e\u0928\u0947 \u0915\u0940 \u0905\u0927\u093f\u0915\u0924\u092e \u0938\u0940\u092e\u093e \u0924\u0915 \u092a\u0939\u0941\u0901\u091a \u0917\u090f \u0939\u0948\u0902",
	2000: "\u0939\u092e \u0907\u0938 \u0905\u0928\u0941\u0930\u094b\u0927 \u0915\u0947 \u0938\u093e\u0925 \u090f\u0915 \u0938\u092e\u0938\u094d\u092f\u093e \u092e\u0947\u0902 \u092d\u093e\u0917 \u0917\u090f\u0964 \u0939\u092e\u0947\u0902 \u0938\u0942\u091a\u093f\u0924 \u0915\u0930 \u0926\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948\u0964 \u0915\u0943\u092a\u092f\u093e \u092f\u0939 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948, \u0924\u094b \u0939\u092e\u0947\u0902 support@csod.com \u092a\u0930 \u0930\u093f\u092a\u094b\u0930\u094d\u091f \u0915\u0930\u0947\u0902",
	2001: "\u0905\u092e\u093e\u0928\u094d\u092f \u0932\u0949\u0917\u093f\u0928 \u0915\u094d\u0930\u0947\u0921\u0947\u0902\u0936\u093f\u092f\u0932. \u0915\u0908 \u0905\u0938\u092b\u0932 \u092a\u094d\u0930\u092f\u093e\u0938\u094b\u0902 \u0915\u0947 \u092c\u093e\u0926 \u0906\u092a\u0915\u093e \u0916\u093e\u0924\u093e \u0932\u0949\u0915 \u0939\u094b \u091c\u093e\u090f\u0917\u093e, \u0906\u092a\u0915\u094b \u0905\u092a\u0928\u093e \u0916\u093e\u0924\u093e \u0905\u0928\u0932\u0949\u0915 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u0908\u092e\u0947\u0932 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0939\u094b\u0917\u093e, \u092f\u093e \u0906\u092a \u0905\u092a\u0928\u093e \u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0930\u0940\u0938\u0947\u091f \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902",
	2002: "\u0905\u092e\u093e\u0928\u094d\u092f \u092f\u093e \u0938\u092e\u092f \u0938\u0940\u092e\u093e \u0938\u092e\u093e\u092a\u094d\u0924 \u0939\u094b \u091a\u0941\u0915\u093e \u0913\u091f\u0940\u092a\u0940",
	2003: "\u0905\u092a\u0932\u094b\u0921 \u0915\u0940 \u0917\u0908 \u092b\u093c\u093e\u0907\u0932 \u0915\u094b\u0908 \u092e\u093e\u0928\u094d\u092f \u091b\u0935\u093f \u0928\u0939\u0940\u0902 \u0939\u0948 (JPG \u0914\u0930 PNG \u092b\u093c\u093e\u0907\u0932\u0947\u0902 \u0938\u092e\u0930\u094d\u0925\u093f\u0924 \u0939\u0948\u0902)",
	2004: "\u0938\u0924\u094d\u0930 \u0915\u0940 \u0938\u092e\u092f \u0938\u0940\u092e\u093e \u0938\u092e\u093e\u092a\u094d\u0924 \u0939\u094b \u0917\u0908",
	2005: "\u0939\u092e \u0907\u0938 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0915\u094b \u091f\u094d\u0930\u0948\u0915 \u0928\u0939\u0940\u0902 \u0915\u0930 \u0938\u0915\u0947. \u0915\u0943\u092a\u092f\u093e \u0924\u093e\u091c\u093c\u093e \u0915\u0930\u0947\u0902 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948, \u0924\u094b \u0939\u092e\u0947\u0902 support@csod.com \u092a\u0930 \u0930\u093f\u092a\u094b\u0930\u094d\u091f \u0915\u0930\u0947\u0902",
	2006: "\u0908\u092e\u0947\u0932 \u092a\u0924\u093e \u0917\u0932\u0924 \u0939\u0948\u0964 \u0915\u0943\u092a\u092f\u093e \u092a\u0941\u0928\u0903 \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902",
	2007: "\u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u092d\u0942\u092e\u093f\u0915\u093e \u0905\u092e\u093e\u0928\u094d\u092f. \u0915\u0943\u092a\u092f\u093e \u092a\u0941\u0928\u0903 \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902",
	2008: "\u0906\u092a\u0915\u094b \u0915\u094b\u0908 \u0938\u0939\u0940 \u0915\u093e\u0930\u094d\u092f \u092a\u094d\u0930\u0915\u093e\u0930 \u0928\u093f\u0930\u094d\u0926\u093f\u0937\u094d\u091f \u0915\u0930\u0928\u093e \u0906\u0935\u0936\u094d\u092f\u0915 \u0939\u0948",
	2009: "\u0926\u093f\u092f\u093e \u0917\u092f\u093e \u0906\u0935\u0947\u0926\u0928 \u0905\u092e\u093e\u0928\u094d\u092f \u0939\u0948; \u0907\u0938\u0947 \u0939\u091f\u093e\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0925\u093e \u092f\u093e \u0915\u092d\u0940 \u0905\u0938\u094d\u0924\u093f\u0924\u094d\u0935 \u092e\u0947\u0902 \u0928\u0939\u0940\u0902 \u0925\u093e",
	2010: "\u0905\u092e\u093e\u0928\u094d\u092f \u0907\u0928\u092a\u0941\u091f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930. \u0915\u0943\u092a\u092f\u093e \u0924\u093e\u091c\u093c\u093e \u0915\u0930\u0947\u0902 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948, \u0924\u094b \u0939\u092e\u0947\u0902 support@csod.com \u092a\u0930 \u0930\u093f\u092a\u094b\u0930\u094d\u091f \u0915\u0930\u0947\u0902",
	2011: "\u0926\u093f\u092f\u093e \u0917\u092f\u093e \u0938\u0902\u0917\u0920\u0928 \u0905\u092e\u093e\u0928\u094d\u092f \u0939\u0948; \u0907\u0938\u0947 \u0939\u091f\u093e\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0925\u093e \u092f\u093e \u0915\u092d\u0940 \u0905\u0938\u094d\u0924\u093f\u0924\u094d\u0935 \u092e\u0947\u0902 \u0928\u0939\u0940\u0902 \u0925\u093e",
	2012: "\u0905\u0928\u0941\u0930\u094b\u0927 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u0941\u092a\u0932\u092c\u094d\u0927 \u092f\u093e \u0905\u092e\u093e\u0928\u094d\u092f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0925\u093e. \u0915\u0943\u092a\u092f\u093e \u092a\u0941\u0928: \u091c\u093e\u0901\u091a\u0947\u0902 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948, \u0924\u094b \u0939\u092e\u0947\u0902 support@csod.com \u092a\u0930 \u0930\u093f\u092a\u094b\u0930\u094d\u091f \u0915\u0930\u0947\u0902",
	2013: "\u0905\u0928\u0941\u0930\u094b\u0927 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u0941\u092a\u0932\u092c\u094d\u0927 \u092f\u093e \u0905\u092e\u093e\u0928\u094d\u092f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0925\u093e. \u0915\u0943\u092a\u092f\u093e \u092a\u0941\u0928: \u091c\u093e\u0901\u091a\u0947\u0902 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948, \u0924\u094b \u0939\u092e\u0947\u0902 support@csod.com \u092a\u0930 \u0930\u093f\u092a\u094b\u0930\u094d\u091f \u0915\u0930\u0947\u0902",
	2014: "\u0938\u0941\u092a\u0930 \u090f\u0921\u092e\u093f\u0928 \u0915\u0947 \u0932\u093f\u090f \u0906\u0935\u0936\u094d\u092f\u0915 \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930[organization_id]",
	2015: "\u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0940 \u0917\u0908 \u091b\u0935\u093f \u0921\u0947\u091f\u093e \u0938\u093e\u092e\u0917\u094d\u0930\u0940 \u0905\u092e\u093e\u0928\u094d\u092f \u0939\u0948. \u0915\u0943\u092a\u092f\u093e \u092a\u0941\u0928: \u091c\u093e\u0901\u091a\u0947\u0902 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948 \u0924\u094b \u0939\u092e\u0947\u0902 support@csod.com",
	2016: "\u0905\u092e\u093e\u0928\u094d\u092f \u0921\u094b\u092e\u0947\u0928",
	2017: "\u0905\u0928\u0941\u0930\u094b\u0927 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u0941\u092a\u0932\u092c\u094d\u0927 \u092f\u093e \u0905\u092e\u093e\u0928\u094d\u092f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0925\u093e",
	2018: "\u0905\u0928\u0941\u0930\u094b\u0927 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u0941\u092a\u0932\u092c\u094d\u0927 \u092f\u093e \u0905\u092e\u093e\u0928\u094d\u092f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0925\u093e",
	2019: "\u0906\u092a \u091c\u094b \u0916\u094b\u091c \u0930\u0939\u0947 \u0939\u0948\u0902 \u0935\u0939 \u092e\u094c\u091c\u0942\u0926 \u0928\u0939\u0940\u0902 \u0939\u0948 \u092f\u093e \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948 \u0915\u093f \u0939\u091f\u093e \u0926\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u094b",
	2020: "\u0905\u0928\u0941\u0930\u094b\u0927 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u0941\u092a\u0932\u092c\u094d\u0927 \u092f\u093e \u0905\u092e\u093e\u0928\u094d\u092f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0925\u093e",
	2021: "\u0907\u0938 \u0905\u0928\u0941\u0930\u094b\u0927 \u0915\u094b \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u093e \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0924\u0947 \u0938\u092e\u092f \u092a\u094d\u0930\u092e\u093e\u0923\u0940\u0915\u0930\u0923 \u0938\u0930\u094d\u0935\u0930 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u092a\u0947\u0915\u094d\u0937\u093f\u0924 \u0924\u094d\u0930\u0941\u091f\u093f \u0906\u0908. \u0915\u0943\u092a\u092f\u093e \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u0940 \u0930\u093f\u092a\u094b\u0930\u094d\u091f support@csod.com",
	2022: "\u0905\u0928\u0941\u0930\u094b\u0927 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u0941\u092a\u0932\u092c\u094d\u0927 \u092f\u093e \u0905\u092e\u093e\u0928\u094d\u092f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0925\u093e. \u0915\u0943\u092a\u092f\u093e \u0915\u094b\u0908 \u092e\u093e\u0928\u094d\u092f \u091f\u0940\u092e URL \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902",
	2023: "\u0907\u0938 \u0905\u0928\u0941\u0930\u094b\u0927 \u0915\u094b \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u093e \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0924\u0947 \u0938\u092e\u092f \u092a\u094d\u0930\u092e\u093e\u0923\u0940\u0915\u0930\u0923 \u0938\u0930\u094d\u0935\u0930 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u092a\u0947\u0915\u094d\u0937\u093f\u0924 \u0924\u094d\u0930\u0941\u091f\u093f \u0906\u0908. \u0915\u0943\u092a\u092f\u093e \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u0940 \u0930\u093f\u092a\u094b\u0930\u094d\u091f support@csod.com",
	2024: "\u092b\u093c\u093e\u0907\u0932 \u0915\u093e \u0906\u0915\u093e\u0930 5 MB \u0938\u0947 \u0915\u092e \u0939\u094b\u0928\u093e \u091a\u093e\u0939\u093f\u090f",
	2025: "\u0905\u0928\u0941\u0930\u094b\u0927 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u0941\u092a\u0932\u092c\u094d\u0927 \u092f\u093e \u0905\u092e\u093e\u0928\u094d\u092f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0925\u093e. \u0915\u0943\u092a\u092f\u093e \u0915\u094b\u0908 \u092e\u093e\u0928\u094d\u092f URL \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902",
	2026: "\u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u092e\u0947\u0902 \u0915\u092e \u0938\u0947 \u0915\u092e 8 \u0935\u0930\u094d\u0923 \u0939\u094b\u0928\u0947 \u091a\u093e\u0939\u093f\u090f, \u091c\u093f\u0938\u092e\u0947\u0902 \u0915\u092e \u0938\u0947 \u0915\u092e \u090f\u0915 \u0905\u092a\u0930\u0915\u0947\u0938, \u090f\u0915 \u0932\u094b\u0905\u0930\u0915\u0947\u0938 \u0914\u0930 \u090f\u0915 \u0938\u0902\u0916\u094d\u092f\u093e\u0924\u094d\u092e\u0915 \u092e\u093e\u0928 \u0936\u093e\u092e\u093f\u0932 \u0939\u0948",
	2027: "\u0905\u092e\u093e\u0928\u094d\u092f \u092a\u093e\u0938\u0935\u0930\u094d\u0921",
	2028: "\u0905\u0928\u0941\u0930\u094b\u0927 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u0941\u092a\u0932\u092c\u094d\u0927 \u092f\u093e \u0905\u092e\u093e\u0928\u094d\u092f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0925\u093e",
	2029: "\u0906\u092a\u0915\u0947 \u0926\u094d\u0935\u093e\u0930\u093e \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0936\u0939\u0930 \u0938\u092e\u0930\u094d\u0925\u093f\u0924 \u0928\u0939\u0940\u0902 \u0939\u0948",
	2030: "\u0905\u0928\u0941\u0930\u094b\u0927 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u0941\u092a\u0932\u092c\u094d\u0927 \u092f\u093e \u0905\u092e\u093e\u0928\u094d\u092f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0925\u093e",
	2031: "\u0907\u0938 \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0915\u094b \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u093e \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0924\u0947 \u0938\u092e\u092f \u092a\u094d\u0930\u092e\u093e\u0923\u0940\u0915\u0930\u0923 \u0938\u0930\u094d\u0935\u0930 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u092a\u0947\u0915\u094d\u0937\u093f\u0924 \u0924\u094d\u0930\u0941\u091f\u093f \u0906\u0908. \u0915\u0943\u092a\u092f\u093e \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u0940 \u0930\u093f\u092a\u094b\u0930\u094d\u091f support@csod.com",
	2032: "\u0905\u092e\u093e\u0928\u094d\u092f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930[file_id]",
	2033: "\u0905\u092e\u093e\u0928\u094d\u092f URL. \u0915\u0943\u092a\u092f\u093e \u092a\u0941\u0928: \u091c\u093e\u0901\u091a\u0947\u0902 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902",
	2034: "\u0907\u0928 \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930\u094d\u0938 \u0915\u094b \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930\u0924\u0947 \u0938\u092e\u092f \u092a\u094d\u0930\u092e\u093e\u0923\u0940\u0915\u0930\u0923 \u0938\u0930\u094d\u0935\u0930 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u092a\u0947\u0915\u094d\u0937\u093f\u0924 \u0924\u094d\u0930\u0941\u091f\u093f \u0906\u0908. \u0915\u0943\u092a\u092f\u093e \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u0940 \u0930\u093f\u092a\u094b\u0930\u094d\u091f support@csod.com",
	2035: "\u0907\u0938 AppKey \u0915\u094b \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930\u0924\u0947 \u0938\u092e\u092f \u092a\u094d\u0930\u092e\u093e\u0923\u0940\u0915\u0930\u0923 \u0938\u0930\u094d\u0935\u0930 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u092a\u0947\u0915\u094d\u0937\u093f\u0924 \u0924\u094d\u0930\u0941\u091f\u093f \u0906\u0908. \u0915\u0943\u092a\u092f\u093e \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u0940 \u0930\u093f\u092a\u094b\u0930\u094d\u091f support@csod.com",
	2036: "\u092a\u094d\u0930\u092e\u093e\u0923\u0940\u0915\u0930\u0923 \u0938\u0930\u094d\u0935\u0930 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u092a\u0947\u0915\u094d\u0937\u093f\u0924 \u0924\u094d\u0930\u0941\u091f\u093f \u0906\u0908. \u0915\u0943\u092a\u092f\u093e \u0907\u0938 \u092a\u0943\u0937\u094d\u0920 \u0915\u094b \u0924\u093e\u091c\u093c\u093e \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948, \u0924\u094b support@csod.com \u0915\u094b \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u0940 \u0930\u093f\u092a\u094b\u0930\u094d\u091f \u0915\u0930\u0947\u0902",
	2044: "\u0910\u0938\u093e \u0932\u0917\u0924\u093e \u0939\u0948 \u0915\u093f \u0939\u092e\u0928\u0947 \u0907\u0938 \u0915\u0926\u092e \u0915\u0947 \u0932\u093f\u090f \u0905\u0928\u0941\u0935\u093e\u0926 \u0915\u094b \u0917\u0932\u0924 \u0938\u092e\u091d\u093e \u0939\u0948\u0964 \u0915\u0943\u092a\u092f\u093e \u0921\u093f\u092b\u093c\u0949\u0932\u094d\u091f \u092d\u093e\u0937\u093e \u092a\u0930 \u0938\u094d\u0935\u093f\u091a \u0915\u0930\u0947\u0902 \u0914\u0930 \u091a\u0930\u0923 \u0915\u093e \u092a\u0941\u0928: \u0905\u0928\u0941\u0935\u093e\u0926 \u0915\u0930\u0947\u0902, \u092f\u093e \u0905\u0927\u093f\u0915 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0915\u0947 \u0932\u093f\u090f \u0939\u092e\u093e\u0930\u0947 \u0917\u094d\u0930\u093e\u0939\u0915 \u0938\u0939\u093e\u092f\u0924\u093e \u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 \u0915\u0930\u0947\u0902\u0964",
	2200: "\u0911\u0921\u093f\u092f\u094b \/\u0935\u0940\u0921\u093f\u092f\u094b \u0928\u093f\u092f\u0902\u0924\u094d\u0930\u0923 \u0924\u0915 \u092a\u0939\u0941\u0902\u091a\u0928\u0947 \u0915\u0947 \u0926\u094c\u0930\u093e\u0928 \u0939\u092e\u0947\u0902 \u090f\u0915 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u093e \u0938\u093e\u092e\u0928\u093e \u0915\u0930\u0928\u093e \u092a\u0921\u093c\u093e\u0964 \u0915\u0943\u092a\u092f\u093e \u0905\u092a\u0928\u0940 \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u0938\u0947\u091f\u093f\u0902\u0917\u094d\u0938 \u091c\u093e\u0901\u091a\u0947\u0902 \u0914\u0930 \u0907\u0938\u0947 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948 \u0924\u094b \u0939\u092e\u0947\u0902 support@csod.com",
	3061: "\u0906\u092a \u0915\u0947\u0935\u0932 5 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e\u0913\u0902 \u0915\u094b \u092a\u093f\u0928 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902",
	4000: "\u092f\u0926\u093f \u0915\u094b\u0908 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u092a\u0939\u0932\u0947 \u0938\u0947 \u092c\u0928\u093e\u0908 \u0917\u0908 \u0939\u0948, \u0924\u094b \u092b\u093c\u094b\u0932\u094d\u0921\u0930 \u0915\u0947 \u0905\u0902\u0926\u0930 \u0909\u092a-\u0936\u094d\u0930\u0947\u0923\u0940 \u0928\u0939\u0940\u0902 \u092c\u0928\u093e\u0908 \u091c\u093e \u0938\u0915\u0924\u0940",
	4001: "\u092f\u0926\u093f \u0915\u094b\u0908 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u092a\u0939\u0932\u0947 \u0938\u0947 \u0939\u0940 \u090f\u0915 \u0938\u0941\u092a\u0930 \u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093e\u092a\u0915 \u0939\u0948, \u0924\u094b \u0906\u092a \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u092d\u0942\u092e\u093f\u0915\u093e \u0928\u0939\u0940\u0902 \u092c\u0926\u0932 \u0938\u0915\u0924\u0947",
	4002: "\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u092a\u0930 \u0907\u0938 \u0915\u094d\u0930\u093f\u092f\u093e \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0928\u0939\u0940\u0902 \u0939\u0948",
	4003: "\u0932\u0949\u0915 \u0915\u0940 \u0917\u0908 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u0928\u0939\u0940\u0902 \u0915\u0940 \u091c\u093e \u0938\u0915\u0924\u0940",
	4004: "\u0915\u093f\u0938\u0940 \u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u092b\u093c\u094b\u0932\u094d\u0921\u0930 \u092a\u0930 \u0907\u0938 \u0915\u094d\u0930\u093f\u092f\u093e \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0928\u0939\u0940\u0902 \u0939\u0948. \u0915\u0943\u092a\u092f\u093e \u0907\u0938\u0947 \u0905\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u0915\u0930\u0947\u0902",
	4006: "\u0906\u0935\u0947\u0926\u0928 \u0926\u093f\u090f \u0917\u090f \u0938\u0902\u0917\u0920\u0928 \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u0939\u094b\u0928\u093e \u091a\u093e\u0939\u093f\u090f",
	4007: "\u0906\u092a \u092f\u0939 \u0915\u094d\u0930\u093f\u092f\u093e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0927\u093f\u0915\u0943\u0924 \u0928\u0939\u0940\u0902 \u0939\u0948\u0902",
	4008: "\u0907\u0938 \u0909\u092a-\u0936\u094d\u0930\u0947\u0923\u0940 \u0915\u0947 \u0932\u093f\u090f \u0915\u093e\u0930\u094d\u0930\u0935\u093e\u0908 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0928\u0939\u0940\u0902 \u0939\u0948",
	4009: "\u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u0915\u0940 \u091c\u093e\u0928\u0940 \u091a\u093e\u0939\u093f\u090f",
	4010: "\u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0915\u093f\u0938\u0940 \u0909\u092a-\u0936\u094d\u0930\u0947\u0923\u0940 \u0935\u093e\u0932\u0947 \u092b\u093c\u094b\u0932\u094d\u0921\u0930 \u0915\u0947 \u0905\u0902\u0926\u0930 \u0928\u0939\u0940\u0902 \u092c\u0928\u093e\u0908 \u091c\u093e \u0938\u0915\u0924\u0940",
	4011: "\u091a\u0930\u0923 (\u0913\u0902) \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0906\u092a\u0915\u094b \u0907\u0938 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0915\u094b \u0905\u0928\u0932\u0949\u0915 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0939\u0948",
	4012: "\u091a\u0930\u0923\u094b\u0902 \u0915\u094b \u0938\u0902\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0906\u092a\u0915\u094b \u0907\u0938 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0915\u094b \u0905\u0928\u0932\u0949\u0915 \u0915\u0930\u0928\u093e \u0939\u094b\u0917\u093e",
	4013: "\u091a\u0930\u0923\u094b\u0902 \u0915\u094b \u0939\u091f\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0906\u092a\u0915\u094b \u0907\u0938 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0915\u094b \u0905\u0928\u0932\u0949\u0915 \u0915\u0930\u0928\u093e \u0939\u094b\u0917\u093e",
	4014: "\u091a\u0930\u0923\u094b\u0902 \u0915\u0940 \u092a\u094d\u0930\u0924\u093f\u0932\u093f\u092a\u093f \u092c\u0928\u093e\u0928\u0947 \u0914\u0930 \u091a\u093f\u092a\u0915\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0906\u092a\u0915\u094b \u0907\u0938 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0915\u094b \u0905\u0928\u0932\u0949\u0915 \u0915\u0930\u0928\u093e \u0939\u094b\u0917\u093e",
	3001: "\u0917\u093e\u0907\u0921 \u091c\u0932\u094d\u0926 \u0939\u0940 \u0928\u093f\u0930\u094d\u092f\u093e\u0924 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u0932\u092c\u094d\u0927 \u0939\u094b\u0917\u093e\u0964 \u0938\u094d\u0925\u093f\u0924\u093f \u0915\u0940 \u091c\u093e\u0902\u091a \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0916\u093e\u0924\u093e \u092e\u0947\u0928\u0942 \u0915\u0947 \u0924\u0939\u0924 '\u091f\u093e\u0938\u094d\u0915 \u0938\u094d\u091f\u0947\u091f\u0938' \u092a\u0930 \u091c\u093e\u090f\u0902",
	3002: "\u0905\u092a\u0932\u094b\u0921 \u092a\u094d\u0930\u093e\u0930\u0902\u092d \u0915\u093f\u092f\u093e. \u0905\u092a\u0932\u094b\u0921 \u092a\u0942\u0930\u093e \u0939\u094b\u0928\u0947 \u0924\u0915 \u0915\u0943\u092a\u092f\u093e \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u0915\u094b \u0924\u093e\u091c\u093c\u093e \u092f\u093e \u092c\u0902\u0926 \u0928 \u0915\u0930\u0947\u0902. \u0906\u092f\u093e\u0924 \u0938\u094d\u0925\u093f\u0924\u093f \u092a\u0942\u0930\u0940 \u0939\u094b\u0928\u0947 \u0915\u0947 \u092c\u093e\u0926 \u0906\u092a \u0907\u0938\u0915\u0940 \u091c\u093e\u0902\u091a \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902",
	3003: "\u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u092a\u0939\u0932\u0947 \u0938\u0947 \u092e\u094c\u091c\u0942\u0926 \u0939\u0948",
	3004: "\u0908\u092e\u0947\u0932 \u0906\u0908\u0921\u0940 \u092a\u0939\u0932\u0947 \u0938\u0947 \u0938\u0924\u094d\u092f\u093e\u092a\u093f\u0924 \u0939\u0948",
	3005: "\u092f\u0939 URL \u0905\u0928\u094d\u092f \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930\u0947\u0936\u0928 \u0915\u0947 \u0938\u093e\u0925 \u0935\u093f\u0930\u094b\u0927 \u0915\u0930\u0924\u093e \u0939\u0948, \u0915\u0943\u092a\u092f\u093e \u0915\u094b\u0908 \u0905\u0928\u094d\u092f URL \u091c\u094b\u0921\u093c\u0928\u0947 \u0915\u093e \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902",
	3006: "\u092b\u093c\u094b\u0932\u094d\u0921\u0930 \u090f\u0915 \u0939\u0940 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u0939\u094b\u0928\u093e \u091a\u093e\u0939\u093f\u090f",
	3007: "\u0921\u094b\u092e\u0947\u0928 \u092a\u0939\u0932\u0947 \u0938\u0947 \u092e\u094c\u091c\u0942\u0926 \u0939\u0948",
	3008: "\u0906\u092a \u092c\u0928\u093e\u0908 \u0917\u0908 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0915\u0940 \u0905\u0927\u093f\u0915\u0924\u092e \u0938\u0940\u092e\u093e \u0924\u0915 \u092a\u0939\u0941\u0901\u091a \u0917\u090f \u0939\u0948\u0902",
	3009: "\u0938\u0930\u094d\u0935\u0947\u0915\u094d\u0937\u0923 \u092a\u0939\u0932\u0947 \u0938\u0947 \u0939\u0940 \u0926\u0940 \u0917\u0908 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u092e\u0947\u0902 \u092e\u094c\u091c\u0942\u0926 \u0939\u0948",
	3010: "\u091a\u0930\u0923 \u090f\u0915 \u0939\u0940 \u0917\u093e\u0907\u0921 \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u0939\u094b\u0928\u093e \u091a\u093e\u0939\u093f\u090f",
	3011: "\u0907\u0938 \u0938\u0902\u0917\u0920\u0928 \u0915\u094b \u0928\u093f\u0932\u0902\u092c\u093f\u0924 \u0915\u0930 \u0926\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948\u0964 \u0915\u0943\u092a\u092f\u093e \u0905\u092a\u0928\u0947 \u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093e\u092a\u0915 \u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 \u0915\u0930\u0947\u0902",
	3012: "\u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e\u090f\u0901 \u090f\u0915 \u0939\u0940 \u092b\u093c\u094b\u0932\u094d\u0921\u0930 \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u0939\u094b\u0928\u0940 \u091a\u093e\u0939\u093f\u090f",
	3013: "\u092f\u0939 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0911\u092c\u094d\u091c\u0947\u0915\u094d\u091f\u094d\u0938 \u0914\u0930 \u092b\u093c\u0940\u0932\u094d\u0921 \u0928\u093e\u092e \u0915\u0940 \u0926\u0940 \u0917\u0908 \u091c\u094b\u0921\u093c\u0940 \u0915\u0947 \u0938\u093e\u0925 \u092a\u0939\u0932\u0947 \u0938\u0947 \u092e\u094c\u091c\u0942\u0926 \u0939\u0948",
	3014: "\u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0928\u093f\u0932\u0902\u092c\u093f\u0924",
	3015: "\u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u092a\u0939\u0932\u0947 \u0938\u0947 \u0938\u0924\u094d\u092f\u093e\u092a\u093f\u0924",
	3017: "\u0906\u092a\u0915\u0947 \u0908\u092e\u0947\u0932 \u092a\u0924\u0947 \u092a\u0930 \u0938\u092b\u0932\u0924\u093e\u092a\u0942\u0930\u094d\u0935\u0915 \u0913\u091f\u0940\u092a\u0940 \u092d\u0947\u091c\u093e \u0917\u092f\u093e \u0939\u0948",
	3018: "\u092d\u0942\u092e\u093f\u0915\u093e \u092a\u0939\u0932\u0947 \u0938\u0947 \u092e\u094c\u091c\u0942\u0926 \u0939\u0948",
	3019: "\u0926\u0947\u0936 \u092a\u0939\u0932\u0947 \u0938\u0947 \u092e\u094c\u091c\u0942\u0926 \u0939\u0948",
	3020: "\u0936\u0939\u0930 \u092a\u0939\u0932\u0947 \u0938\u0947 \u092e\u094c\u091c\u0942\u0926 \u0939\u0948",
	3023: "\u0906\u092a\u0915\u093e \u0938\u0902\u0917\u0920\u0928 \u0938\u0924\u094d\u092f\u093e\u092a\u093f\u0924 \u0928\u0939\u0940\u0902 \u0939\u0948. \u092e\u0926\u0926 \u0915\u0947 \u0932\u093f\u090f, \u0915\u0943\u092a\u092f\u093e support@csod.com \u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 \u0915\u0930\u0947\u0902",
	3024: "JSON \u092b\u093c\u093e\u0907\u0932 \u0907\u0938 \u0938\u0902\u0917\u0920\u0928 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u0932\u092c\u094d\u0927 \u0928\u0939\u0940\u0902 \u0939\u0948",
	3025: "\u092a\u094d\u0930\u092e\u093e\u0923\u0940\u0915\u0930\u0923 \u0915\u0947 \u0926\u094c\u0930\u093e\u0928 \u0939\u092e\u0947\u0902 \u090f\u0915 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u093e \u0938\u093e\u092e\u0928\u093e \u0915\u0930\u0928\u093e \u092a\u0921\u093c\u093e\u0964 \u0915\u0943\u092a\u092f\u093e \u092f\u0939 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948, \u0924\u094b \u092a\u0943\u0937\u094d\u0920 \u0924\u093e\u091c\u093c\u093e \u0915\u0930\u0947\u0902 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902",
	3026: "JSON \u092b\u093c\u093e\u0907\u0932 \u0907\u0938 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u0932\u092c\u094d\u0927 \u0928\u0939\u0940\u0902 \u0939\u0948",
	3027: "\u0915\u094b\u0908 \u0915\u0926\u092e \u0909\u092a\u0932\u092c\u094d\u0927 \u0928\u0939\u0940\u0902 \u0939\u0948\u0964 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u092e \u0938\u0947 \u0915\u092e \u090f\u0915 \u091a\u0930\u0923 \u092c\u0928\u093e\u090f\u0901",
	3028: "\u0905\u0927\u093f\u0915\u0924\u092e \u092f\u093e\u0924\u094d\u0930\u093e \u092a\u094d\u0930\u0915\u093e\u0936\u0928 \u0938\u0940\u092e\u093e \u0924\u0915 \u092a\u0939\u0941\u0901\u091a \u0917\u092f\u093e",
	3047: "\u0905\u0924\u094d\u092f\u0927\u093f\u0915 \u0932\u0949\u0917\u093f\u0928 \u0935\u093f\u092b\u0932\u0924\u093e\u0913\u0902 \u0915\u0947 \u0915\u093e\u0930\u0923 \u0906\u092a\u0915\u093e \u0916\u093e\u0924\u093e \u0905\u0938\u094d\u0925\u093e\u092f\u0940 \u0930\u0942\u092a \u0938\u0947 \u0932\u0949\u0915 \u0915\u0930 \u0926\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948\u0964 \u0939\u092e\u0928\u0947 \u0906\u092a\u0915\u094b \u0907\u0938\u0947 \u0905\u0928\u0932\u0949\u0915 \u0915\u0930\u0928\u0947 \u0915\u0947 \u091a\u0930\u0923\u094b\u0902 \u0915\u0947 \u0938\u093e\u0925 \u090f\u0915 \u0908\u092e\u0947\u0932 \u092d\u0947\u091c\u093e \u0939\u0948\u0964 \u0905\u0927\u093f\u0915 \u0938\u0939\u093e\u092f\u0924\u093e \u0915\u0947 \u0932\u093f\u090f, \u0915\u0943\u092a\u092f\u093e \u0939\u092e\u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 support@csod.com",
	3033: "\u0905\u092e\u093e\u0928\u094d\u092f \u0915\u094d\u0930\u0947\u0921\u0947\u0902\u0936\u093f\u092f\u0932\u094d\u0938. \u0915\u0943\u092a\u092f\u093e \u0905\u0927\u093f\u0915 \u0938\u0939\u093e\u092f\u0924\u093e support@csod.com \u092f\u093e \u0905\u092a\u0928\u0947 \u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093e\u092a\u0915 \u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 \u0915\u0930\u0947\u0902.",
	4020: "\u0907\u0938 \u0917\u093e\u0907\u0921 \u0915\u093e \u090f\u0915 \u092e\u0938\u094c\u0926\u093e \u092a\u0939\u0932\u0947 \u0938\u0947 \u092e\u094c\u091c\u0942\u0926 \u0939\u0948; \u090f\u0915 \u0917\u093e\u0907\u0921 \u0915\u0947 \u0915\u0908 \u092e\u0938\u094c\u0926\u094b\u0902 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0928\u0939\u0940\u0902 \u0939\u0948\u0964",
	4021: "\u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0915\u0947 \u0905\u092e\u093e\u0928\u094d\u092f \u092e\u093e\u0928 [envs]",
	2054: "\u090f\u0915 \u092a\u0941\u0930\u093e\u0928\u093e \u0914\u0930 \u0928\u092f\u093e \u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0938\u092e\u093e\u0928 \u0928\u0939\u0940\u0902 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948",
	playNextBotTour: "\u0905\u0917\u0932\u093E \u092C\u0949\u091F \u091F\u0942\u0930 \u0916\u0947\u0932\u0947\u0902",
	defaultBotEndingMessage: "\u0939\u092E \u0938\u092E\u093E\u092A\u094D\u0924 \u0915\u0930 \u091A\u0941\u0915\u0947 \u0939\u0948\u0902, \u092C\u0939\u0941\u0924 \u092C\u0939\u0941\u0924 \u0927\u0928\u094D\u092F\u0935\u093E\u0926! \u0907\u0938\u0938\u0947 \u092A\u0939\u0932\u0947 \u0915\u093F \u092E\u0948\u0902 \u0907\u0938\u0947 \u0938\u092E\u093E\u092A\u094D\u0924 \u0915\u0930\u0942\u0902, \u0915\u0941\u091B \u0914\u0930?",
	loginNext: "\u0905\u0917\u0932\u093e",
	3068: "\u0906\u092A\u0915\u093E \u092A\u0941\u0930\u093E\u0928\u093E \u092A\u093E\u0938\u0935\u0930\u094D\u0921 \u0938\u092E\u093E\u092A\u094D\u0924 \u0939\u094B \u0917\u092F\u093E \u0939\u0948, \u0932\u0949\u0917\u093F\u0928 \u0915\u0947 \u0932\u093F\u090F \u0928\u092F\u093E \u092A\u093E\u0938\u0935\u0930\u094D\u0921 \u0938\u0947\u091F \u0915\u0930\u0947\u0902\u0964",
	includeScreen: "\u0938\u094D\u0915\u094D\u0930\u0940\u0928\u0936\u0949\u091F \u0936\u093E\u092E\u093F\u0932 \u0915\u0930\u0947\u0902",
	feedbackPlaceholder: "\u092A\u094D\u0930\u0924\u093F\u0915\u094D\u0930\u093F\u092F\u093E \u0939\u0948? \u0939\u092E\u0947\u0902 \u0907\u0938\u0947 \u0938\u0941\u0928\u0928\u093E \u0905\u091A\u094D\u091B\u093E \u0932\u0917\u0947\u0917\u093E!",
	feedbackOptBtn: "\u091C\u093E\u0928\u0915\u093E\u0930\u0940 \u0915\u094B \u0939\u093E\u0907\u0932\u093E\u0907\u091F \u0915\u0930\u0928\u0947 \u092F\u093E \u091B\u093F\u092A\u093E\u0928\u0947 \u0915\u0947 \u0932\u093F\u090F \u0915\u094D\u0932\u093F\u0915 \u0915\u0930\u0947\u0902",
	highlight: "\u092A\u094D\u0930\u092E\u0941\u0916\u0924\u093E \u0938\u0947 \u0926\u093F\u0916\u093E\u0928\u093E",
	send: "\u092D\u0947\u091C\u0928\u093E",
	done: "\u092A\u0942\u0930\u094D\u0923",
	hide: "\u091B\u093F\u092A\u093E\u0928\u093E"
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.it_IT = {
	currentPage: "Pagina corrente",
	myChat: "mychat",
	import: "Importazione",
	export: "Esportazione",
	redirectLivetour: "Gioca dal vivo",
	guideNotAvailable: "Guida non disponibile sull'URL corrente. Vuoi andare all'URL della guida?",
	downloadPPT: "Scarica PPT",
	btnYes: "S\u00ec",
	btnNo: "No",
	inApp: "In-App",
	live: "Vivere",
	resume: "Riassumere",
	tourCloseConfirm: "Vuoi davvero chiudere questa Guida?",
	notifSnoozeDonotMsg: "Per favore, dicci se vuoi guardarlo pi\u00f9 tardi o non mostrare mai la notifica?",
	surveyThanksMessage: "Grazie per aver fornito la tua risposta",
	testMePassedMessage: "Felicitazioni! Hai superato",
	testMeFailedMessage: "Oops! Hai fallito",
	testMeGuideEfficiency: "Efficienza del test:",
	testMeGuideEffectiveness: "Efficacia del test:",
	testMeTestTime: "Tempo di test",
	testMeExpectedTime: "Tempo previsto",
	testMeStepsTaken: "Misure adottate",
	testMeExpectedSteps: "Passi previsti",
	testMeRetakeTestBtn: "Ripetizione test",
	testMeResultTitle: "Risultato MyTest",
	ConfirmIfTestMeModeRidirect: "Guida non disponibile sull'URL corrente. Vuoi reindirizzare all'URL della Guida TV?",
	feedCmt: "Il tuo feedback \u00e8 prezioso per noi!<br> Dicci cosa ne pensi in 500 caratteri o meno",
	doNotShowAgain: "Non mostrare pi\u00f9",
	neverShowAgain: "Non mostrare mai pi\u00f9",
	skipGuide: "Salta la guida",
	surveyErrorMsg: "Si prega di rispondere ad almeno una domanda",
	redirect: "Reindirizzare",
	liveGuide: "Guida dal vivo",
	question: "Domanda",
	exitGuide: "Guida all'uscita",
	continueGuide: "Guida continua",
	stop: "Fermarsi",
	characters: "Personaggi:",
	survey: "Sondaggio",
	testMeStopMessage: "Sei in modalit\u00e0 TestMe, fai clic su STOP per uscire",
	testMeFailedErrorMessage: "Non \u00e8 stato possibile raggiungere il passo obiettivo.<br>Hai {CORRECT_STEPS} passaggi corretti da {TOTAL_STEPS}.",
	surveyCommentPlaceholder: "Digita qui! Max 500 caratteri",
	pushTourSnoozeMsg: "Questo tour di lancio automatico verr\u00e0 posticipato per",
	of: "di",
	wbMplayerTitle: "Tutorial",
	wbDragTooltip: "Trascina e rilascia questo lettore in qualsiasi punto della pagina",
	dontShowEdResult: "Non voglio vedere questo",
	mPlayerHeaderTitle: "Micro Lettore",
	closePreview: "Chiudi anteprima",
	elmNotFound: "Sembra che non riusciamo a trovare l'elemento per il passaggio:",
	elmNotFoundInfo: "Assicurati di essere sulla pagina corretta per eseguire questo passaggio. Controlla anche se riesci a vedere l'elemento selezionato",
	notExists: "Non esiste",
	elmNotFoundHeader: "Elemento Step non trovato",
	goToStep: "Vai al passaggio",
	notFoundStep: "Non siamo riusciti a trovare l'elemento per il passo #",
	pleaseReselect: "Prova a selezionare nuovamente l'elemento.",
	stepRuleMatchErr: "Errore di configurazione: le regole dei passaggi non corrispondono",
	guideRuleMatchErr: "Errore di configurazione: le regole della guida non corrispondono",
	stepNotFoundRedirect: "Passaggio non trovato in questa pagina. Vuoi reindirizzare?",
	branchStepMessagePopup: "Seleziona una delle attivit\u00e0 seguenti per procedere",
	btnSkip: "Saltare",
	kindlyHoverPopup: "Passa gentilmente il mouse su questo elemento per aprire il popup",
	stepPlayIsdefinedPopover: "Il passo che stai per riprodurre \u00e8 definito sul popover",
	elmNotFoundWestpac: "Passaggio non trovato: questa guida terminer\u00e0",
	findingElementMessage: "Cercando di trovare un passo. . .",
	badDomain: "Il dominio e l'URL correnti non sono autorizzati a eseguire MyGuide. Contatta l'amministratore per assistenza.",
	hostJsError: "Sembra che ci sia un errore sulla pagina web. MyGuide non pu\u00f2 continuare",
	remember: "Ricordati di me",
	forgotPass: "Hai dimenticato la password?",
	dontHavAcc: "Non hai un account?",
	loginTitle: "Accesso",
	loginOtpScreenTitle: "Verifica OTP per accedere",
	forgetPassTitl: "Reimposta password",
	placeholderEmail: "ID e-mail",
	placeholderPassword: "Parola d\u2019ordine",
	placeholderNewPassword: "Nuova password",
	placeholderCurrentPassword: "Password corrente",
	placeholderFirstname: "Nome di battesimo",
	placeholderLastname: "Cognome",
	placeholderPasswordC: "Conferma password",
	btnCancel: "Annulla",
	btnPayment: "Piano di aggiornamento",
	btnSubmit: "Invia",
	btnLogin: "Accesso",
	termsOfUse: "Condizioni d'uso",
	andLabel: "e",
	policyPrivacy: "Informativa sulla privacy",
	passwordError: "La password deve essere lunga 8 cifre",
	confirmPasswordError: "La password e la password di conferma devono essere uguali",
	firstnameError: "Inserisci un nome valido",
	lastnameError: "Inserisci un cognome valido",
	emailError: "Inserisci un ID e-mail valido",
	orgError: "Inserisci un URL dell'organizzazione valido",
	otpError: "Inserisci OTP valido",
	placeholderOtp: "Inserisci qui la tua OTP",
	otpSentDesc: "Se \u00e8 stato fornito un indirizzo e-mail valido, ti verr\u00e0 inviato un link di ripristino.<br>Se non vedi l'e-mail in pochi minuti, controlla la tua cartella spam per un'e-mail da",
	btnOtpVerify: "Verifica OTP",
	alreadyHavAcc: "Hai gi\u00e0 un account?",
	smartbiteMessageError: "Si prega di inserire il messaggio",
	smartbiteLinkError: "Inserisci un link valido",
	noGuidesOnThisPage: "Nessuna guida disponibile in questa pagina!",
	clickOn: "Clicca su ",
	contactUs: "Contattaci",
	search: "Ricerca",
	noRecordFound: "Nessun record trovato",
	category: "Cartella",
	subCategory: "Sottocartella",
	confirmPasswordRequired: "Conferma password richiesta",
	logInWithSSO: "Accedi con SSO",
	inputPlaceHolderSearch: "Cerca qualsiasi guida",
	noGuideAvailableFor: "Nessuna guida trovata corrisponde alla tua ricerca",
	tryModifyingYourSearch: "Prova a modificare i criteri di ricerca",
	signInVerifyYourEmail: "Questo ID e-mail non \u00e8 stato verificato. Controlla la tua email per i dettagli",
	signInVerifyYourAccount: "Ti abbiamo inviato un'email con una OTP. Verifica il tuo account per completare la procedura di accesso",
	maintenanceMessage: "Manutenzione in corso. Vi preghiamo di contattarci tramite support@csod.com",
	back: "Indietro",
	changePassword: "Cambia password",
	startTestAuto: "Inizia i test di automazione",
	msgPasswordChangedSuccess: "La tua password \u00e8 stata modificata correttamente",
	msgConfirmNewPasswordError: "Conferma password deve essere uguale a Nuova password",
	enterUrl: "Inserisci l'URL del team",
	dragPlaceholderDropThis: "Elimina questo ",
	dragPlaceholderHere: " qui",
	termsOfService: "Termini",
	versionText: "Versione",
	videoStepSuccessMessage: "Il tuo passaggio \u00e8 stato creato correttamente",
	importSuccessMessage: "Guida caricata correttamente. Vai a Stato attivit\u00e0 per controllare lo stato di importazione",
	worldBankHelpSupport: "Alcuni strumenti, come i tooltip, possono essere visualizzati solo nell'interfaccia",
	helpSupport: "Aiuto & Supporto",
	page: "pagina",
	selectAnApplication: "Seleziona un'applicazione",
	refresh: "Aggiornare",
	loginBtn: "Accesso",
	account: "Conto",
	taskStatus: "Stato dell'attivit\u00e0 ",
	logoutBtn: "Logout",
	app: "App:",
	firstStep: "Primo passo",
	lastStep: "Ultimo passo",
	startTest: "Inizia il test",
	noInappStepInGuide: "TestMe non pu\u00f2 procedere poich\u00e9 non esiste un passaggio in linea in questa guida",
	settingBtn: "Impostazioni avanzate",
	orgSetting: "Impostazioni dell'organizzazione",
	close: "Chiudere",
	pdf: ".PDF",
	downloadPptx: ".PPT",
	giphy: ".GIF",
	downloadWord: "Documento",
	downloadBlog: "Blog",
	downloadTxt: "Testo normale",
	serviceErrorMessage: "Oops! Si \u00e8 verificato un errore. Riprova dopo qualche tempo. Puoi anche inviarci un'e-mail all'indirizzo support@csod.com per qualsiasi assistenza",
	guidesTab: "Guide",
	noGuideCreatedYet: "Nessuna guida ancora creata!",
	noCategoryCreatedYet: "Nessuna cartella creata ancora!",
	chatbot: "mychat",
	notAutorised: "Non hai l'accesso richiesto, contatta l'amministratore",
	ok: "OK",
	apiError: "Errore di configurazione. Si prega di contattare l'amministratore",
	select: "Selezionare",
	mute_unmute: "Disattiva\/Riattiva audio",
	privacyPolicy: "Privacy & cookie",
	privacyPolicyText: "MyGuide utilizza i cookie. Se continui, accetti i nostri Termini e l'Informativa sulla privacy e ci dai il consenso all'utilizzo dei cookie",
	terms: "Termini",
	westPecErrorMessage: "Non sei autorizzato ad accedere a questa applicazione. Accedi alla rete Westpac",
	noApp: "Nessuna applicazione trovata",
	role: "Ruolo:",
	all: "Tutto",
	video: "Video",
	course: "Corso",
	article: "Articolo",
	image: "Immagine",
	pathways: "Vie",
	preview: "Anteprima",
	more: "Pi\u00f9",
	history: "Storia",
	publish: "Pubblicare",
	selectGuideLink: "Si prega di selezionare Guida al link",
	selectGuideBeforeSubmit: "Si prega di selezionare una guida prima di inviare",
	change: "Cambiare",
	checkNow: "Controlla ora",
	minutes: "verbale",
	clickHere: "clicca qui",
	youAlmostDone: "Hai quasi finito!",
	setOrg: "per configurare la tua organizzazione",
	apps: "Applicazioni",
	me: "Me",
	playStep: "Gioca Passo",
	miniPlayerHelp: "Guida",
	defaultMiniPlayerHelp: "Guida",
	defaultConfirmIfSlideshowOrRedirect: "Passaggio non disponibile sull'URL corrente.<br>Vuoi andare all'URL del passaggio o riprodurre la presentazione?",
	defaultServiceErrorMessage: "Oops! Si \u00e8 verificato un errore. Riprova dopo qualche tempo. Puoi anche inviarci un'e-mail all'indirizzo support@csod.com per qualsiasi assistenza",
	defaultMaintenanceMessage: "Manutenzione in corso. Vi preghiamo di contattarci tramite support@csod.com",
	userNotFollowingGuideMessage: "Sembra che tu stia eseguendo passaggi che non fanno parte di questa guida. Se non desideri pi\u00f9 seguire la Guida, fai clic su Guida all'uscita",
	defaultUserNotFollowingGuideMessage: "Sembra che tu stia eseguendo passaggi che non fanno parte di questa guida. Se non desideri pi\u00f9 seguire la Guida, fai clic su Guida all'uscita",
	resumeGuide: "Guida al curriculum",
	defaultResumeGuideMessage: "Guida al curriculum",
	backToLogin: "Torna al Login",
	filters: "Filtri",
	thisApp: "Questa applicazione",
	thisWebsite: "Questo sito web",
	maxFreeTourLimit: "Limite massimo di tour raggiunto",
	passwordRegexCheck: "La password deve contenere un minimo di 8 caratteri, di cui almeno un valore maiuscolo, uno minuscolo e uno numerico",
	countLimit: "99+",
	microsoftServiceKey: "Immettere la chiave di sottoscrizione di Servizi cognitivi Microsoft Speech",
	numberOfImgFile: "Il numero di file di immagine e file di testo deve essere lo stesso",
	availableOn: "Disponibile su",
	tooltipUnpubWorkflowTitle: "Flusso di lavoro non pubblicato",
	tooltipUnpubParentWorkflowTitle: "Flusso di lavoro pubblicato, cartelle padre non pubblicate",
	tooltipPubParentWorkflowTitle: "Flusso di lavoro pubblicato, cartella pubblicata",
	tooltipUnpubTooltipTitle: "Tooltip non pubblicato",
	tooltipUnpubParentTooltipTitle: "Descrizione comando pubblicata, cartelle padre non pubblicate",
	tooltipPubParentTooltipTitle: "Descrizione comando pubblicata, cartella pubblicata",
	tooltipUnpubTutorialTitle: "Tutorial inedito",
	tooltipUnpubParentTutorialTitle: "Esercitazione pubblicata, cartelle padre non pubblicate",
	tooltipPubParentTutorialTitle: "Esercitazione pubblicata, cartella pubblicata",
	tooltipUnpubSubFolderTitle: "Sottocartella non pubblicata",
	tooltipUnpubSubFolderDesc: "Utilizzare le sottocartelle per organizzare le guide",
	tooltipUnpubParentSubFolderTitle: "Sottocartella pubblicata, cartelle padre non pubblicate",
	tooltipPubParentSubFolderTitle: "Sottocartella pubblicata, Cartella pubblicata",
	tooltipPubParentSubFolderDesc: "Organizza le guide",
	exitSurvey: "Exit Survey",
	disable: "Disabilitare",
	instructionExitSurvey: "Exit Survey viene mostrato quando un utente esce da una guida prima del completamento",
	msgVideoNotFound: "Caricamento del video, prova dopo un po 'di tempo",
	msgGiphyNotFound: "Carica la tua GIF, prova dopo un po 'di tempo",
	userPref: "Le mie preferenze",
	manageAccount: "Portale di amministrazione",
	analyticsPortal: "Portale di approfondimenti",
	errorInvalidUrl: "URL non valido",
	wbFooterText: "Apprendimento tecnico ITS",
	navigationMenu: "Menu di navigazione",
	clearHistory: "Cancella cronologia",
	userDeniedMessage: "Autorizzazioni di accesso a videocamera e microfono negate all'utente",
	pushNotification: "Notifiche push",
	viewDetail: "Visualizza dettaglio",
	contactAdmin: "Contatta support@csod.com o il tuo amministratore per ulteriore assistenza",
	noAppOnDomain: "L'applicazione non \u00e8 assegnata per il dominio corrente ",
	noGuidesOnDomain: "Nessuna guida trovata",
	apply: "Applicare",
	invalidLoginCred: "Credenziali di accesso non valide. Il tuo account verr\u00e0 bloccato dopo pi\u00f9 tentativi non riusciti, riceverai un'email per sbloccare il tuo account oppure potrai reimpostare la password",
	resendOTP: "Invia di nuovo OTP",
	sendFeedback: "Invia feedback",
	guideNotExist: "Questa guida non \u00e8 disponibile in questa pagina (Errore: mancata corrispondenza del dominio) ",
	cdnAccess: "<b>Siamo spiacenti<\/b> <br><br>Sembra che ci sia un problema con i nostri server.<br> Siamo stati informati dell'errore e lo correggeremo il prima possibile",
	tourPlayError: "La guida non pu\u00f2 essere riprodotta. Errore durante il recupero dei dettagli della Guida TV",
	playerMode: "Modalit\u00e0 giocatore",
	closePanel: "Chiudi pannello",
	switchCreatorMode: "Passa alla modalit\u00e0 Creator",
	extensionContextError: "Il contesto dell'estensione \u00e8 invalidato. Si prega di ricaricare la pagina per continuare",
	otpSent: "OTP \u00e8 stato inviato nuovamente alla tua email, controlla la tua casella di posta",
	startOver: "Ricomincia",
	yesResume: "Riassumere",
	dontShowAgain: "Non mostrare pi\u00f9",
	notificationHeader: "Hai ricevuto una notifica!",
	watchLater: "Guarda pi\u00f9 tardi",
	pushSnoozeMsg: "Questa notifica verr\u00e0 posticipata per",
	showAgain: "Mostra di nuovo",
	noGuidesOnThisTab: "Non ci sono notifiche in questa pagina",
	iAgree: "Sono d'accordo",
	viewMore: "Scopri di pi\u00f9",
	lostInternetConnection: "Connessione persa al server. Riconnettiti e riprova",
	next: "Prossimo",
	recent: "Recente",
	older: "Pi\u00f9 vecchio",
	atoz: "A - Z",
	ztoa: "Z - A",
	clear: "Chiaro",
	tooltipDontShowAgain: "Le notifiche non verranno pi\u00f9 visualizzate. Per abilitare una notifica ora, passa il mouse su di essa e fai clic su \"Mostra di nuovo\"",
	tooltipWatchLater1: "Le notifiche vengono posticipate per",
	tooltipWatchLater2: "e apparir\u00e0 dopo. Per abilitare una notifica ora, passa il mouse su di essa e fai clic su \"Mostra di nuovo\"",
	hour: "ora",
	hours: "orario",
	insightsTracker: "Tracker di approfondimenti",
	slideshow: "Presentazione",
	autoplay: "RIPRODUZIONE AUTOMATICA",
	powerFormOldData: "Dati esistenti",
	powerFormNewData: "Utilizza questo modulo per inserire nuovi dati",
	powerFormNewDataMore: "Se i tuoi dati esistenti non sono visibili, fai clic sulla freccia in alto a sinistra per visualizzare i tuoi dati. I dati devono quindi essere copiati nel formato puntato consentito.",
	powerFormTitle: "Assistente inserimento dati",
	powerFormMandatory: "Questo \u00e8 un campo obbligatorio, limite massimo di caratteri ",
	belongToOtherApp: "Questa guida viene creata su {TOURURL}, che appartiene all'app {APPNAME}. Copia questa guida in quell'app e riprova",
	setDomain: "Se sei sicuro che {TOURURL} debba essere aggiunto nelle impostazioni correnti del dominio dell'applicazione, aggiungi e riprova",
	on: "SU",
	off: "SPENTO",
	btnPrev: "Prev",
	btnPrevious: "Precedente",
	taskList: "Elenco attivit\u00e0",
	unprocessedVideo: "Attendi mentre il video \u00e8 in fase di elaborazione.",
	searchResult: "Risultato della ricerca",
	pleaseWait: "Attendere prego!",
	mediaDownloadMsg: "Mentre prepariamo i tuoi file per il download",
	mediaFileNotFound: "File multimediale non trovato",
	searchInFolder: "Cerca nella cartella",
	currentPageSearchPlaceholder: "Cerca le guide disponibili nella pagina corrente",
	brandLogo: "Logo del marchio",
	accessibility: "Accessibilit\u00e0",
	replay: "Replay",
	defaultGreetingMessage: "Ehi! Benvenuti in MyGuide. Come posso aiutarti? Tieni presente che sono un bot.",
	defaultErrorMessage: "Mi dispiace, non l'ho capito. Potrebbe essere pi\u00f9 specifico? ",
	defaultEndMessage: "Abbiamo finito, grazie mille!",
	greetingMessage: "Ehi! Benvenuti in MyGuide. Come posso aiutarti? Tieni presente che sono un bot.",
	errorMessage: "Mi dispiace, non l'ho capito. Potrebbe essere pi\u00f9 specifico? ",
	endMessage: "Abbiamo finito, grazie mille!",
	guideLnkToRedirect: "Utilizzare il seguente link per reindirizzare alla pagina e riprodurre la guida",
	otpTimer: "Puoi riprovare in ",
	seconds: " Secondi",
	limitWarning: "Hai raggiunto il limite massimo di tentativi non riusciti",
	403: "Abbiamo riscontrato un problema con questa richiesta. Riprova. Se il problema persiste, segnalaci all'support@csod.com",
	405: "Si \u00e8 verificato un problema durante l'elaborazione di questa richiesta. Riprova. Se il problema persiste, segnalaci all'support@csod.com",
	429: "Troppe richieste",
	1003: "Si \u00e8 verificato un problema durante l'autenticazione. Effettua nuovamente il login e riprova. Se il problema persiste, aggiornare la pagina e riprovare",
	1007: "Si \u00e8 verificato un problema durante l'autenticazione. Riprova. Se il problema persiste, segnalaci all'support@csod.com",
	1005: "<b>Siamo spiacenti<\/b> <br><br>Sembra che ci sia un problema con la richiesta o con i nostri server.<br> Siamo stati informati dell'errore e lo correggeremo il prima possibile",
	1009: "L'email dell'utente non \u00e8 verificata",
	1014: "Manutenzione in corso. Vi preghiamo di contattarci tramite support@csod.com",
	1017: "Si \u00e8 verificato un problema durante l'autenticazione. Effettua nuovamente il login e riprova. Se il problema persiste, segnalaci all'support@csod.com",
	1018: "\u00c8 stato raggiunto il limite massimo per la creazione di passaggi",
	2000: "Abbiamo riscontrato un problema con questa richiesta. Siamo stati avvisati. Riprova. Se il problema persiste, segnalaci all'support@csod.com",
	2001: "Credenziali di accesso non valide. Il tuo account verr\u00e0 bloccato dopo pi\u00f9 tentativi non riusciti, riceverai un'email per sbloccare il tuo account oppure potrai reimpostare la password",
	2002: "OTP non valido o scaduto",
	2003: "Il file caricato non \u00e8 un'immagine valida (sono supportati i file JPG e PNG)",
	2004: "Sessione scaduta",
	2005: "Non siamo riusciti a rintracciare questo utente. Aggiorna e riprova. Se il problema persiste, segnalaci all'support@csod.com",
	2006: "L'indirizzo e-mail non \u00e8 corretto. Riprova",
	2007: "Ruolo utente non valido. Riprova",
	2008: "\u00c8 necessario specificare un tipo di attivit\u00e0 corretto",
	2009: "L'Applicazione fornita non \u00e8 valida; potrebbe essere stato cancellato o non \u00e8 mai esistito",
	2010: "Parametri di input non validi. Aggiorna e riprova. Se il problema persiste, segnalaci all'support@csod.com",
	2011: "L'organizzazione specificata non \u00e8 valida; potrebbe essere stato cancellato o non \u00e8 mai esistito",
	2012: "Nella richiesta era presente un parametro mancante o non valido. Ricontrolla e riprova. Se il problema persiste, segnalaci all'support@csod.com",
	2013: "Nella richiesta era presente un parametro mancante o non valido. Ricontrolla e riprova. Se il problema persiste, segnalaci all'support@csod.com",
	2014: "Parametro obbligatorio per Super Admin[organization_id]",
	2015: "Il contenuto dei Dati immagine fornito non \u00e8 valido. Ricontrolla e riprova. Se il problema persiste, segnalaci all'support@csod.com",
	2016: "Dominio non valido",
	2017: "Nella richiesta era presente un parametro mancante o non valido",
	2018: "Nella richiesta era presente un parametro mancante o non valido",
	2019: "Quello che stai cercando non esiste o potrebbe essere stato eliminato",
	2020: "Nella richiesta era presente un parametro mancante o non valido",
	2021: "Il server di autenticazione ha rilevato un errore imprevisto durante il tentativo di elaborare questa richiesta. Segnala il problema a support@csod.com",
	2022: "Nella richiesta era presente un parametro mancante o non valido. Inserisci un URL del team valido",
	2023: "Il server di autenticazione ha rilevato un errore imprevisto durante il tentativo di elaborare questa richiesta. Segnala il problema a support@csod.com",
	2024: "La dimensione del file deve essere inferiore a 5 MB",
	2025: "Nella richiesta era presente un parametro mancante o non valido. Inserisci un URL valido",
	2026: "La password deve contenere un minimo di 8 caratteri, di cui almeno un valore maiuscolo, uno minuscolo e uno numerico",
	2027: "Password non valida",
	2028: "Nella richiesta era presente un parametro mancante o non valido",
	2029: "La citt\u00e0 che hai fornito non \u00e8 supportata",
	2030: "Nella richiesta era presente un parametro mancante o non valido",
	2031: "Il server di autenticazione ha rilevato un errore imprevisto durante il tentativo di elaborare questo parametro. Segnala il problema a support@csod.com",
	2032: "Parametro non valido[file_id]",
	2033: "URL non valido. Ricontrolla e riprova",
	2034: "Il server di autenticazione ha rilevato un errore imprevisto durante l'elaborazione di questi parametri. Segnala il problema a support@csod.com",
	2035: "Il server di autenticazione ha rilevato un errore imprevisto durante l'elaborazione di questa AppKey. Segnala il problema a support@csod.com",
	2036: "Il server di autenticazione ha rilevato un errore imprevisto. Si prega di aggiornare questa pagina. Se il problema persiste, segnalarlo a support@csod.com",
	2044: "Sembra che abbiamo smarrito la traduzione per questo passaggio. Si prega di passare alla lingua predefinita e ritradurre il passaggio, oppure contattare il nostro servizio clienti per ulteriori dettagli.",
	2200: "Abbiamo riscontrato un problema durante l'accesso ai controlli audio \/ video. Controlla le impostazioni del browser e riprova. Se il problema persiste, segnalaci all'support@csod.com",
	3061: "Puoi aggiungere fino a 5 guide",
	4000: "Non \u00e8 possibile creare sottocategorie all'interno di una cartella, se \u00e8 gi\u00e0 stata creata una Guida",
	4001: "Se un utente \u00e8 gi\u00e0 un super amministratore, non \u00e8 possibile modificare il ruolo utente",
	4002: "Questa azione non \u00e8 consentita su una Guida pubblicata",
	4003: "Impossibile pubblicare la guida bloccata",
	4004: "Questa azione non \u00e8 consentita in una cartella pubblicata. Si prega di annullare la pubblicazione",
	4006: "L'applicazione deve appartenere all'organizzazione specificata",
	4007: "Non sei autorizzato a eseguire questa azione",
	4008: "L'azione non \u00e8 consentita per questa sottocategoria",
	4009: "La guida deve essere pubblicata",
	4010: "Impossibile creare la guida all'interno di una cartella con una sottocategoria",
	4011: "Per creare i passaggi, \u00e8 necessario sbloccare questa guida",
	4012: "Per modificare i passaggi, \u00e8 necessario sbloccare questa guida",
	4013: "Per eliminare i passaggi, \u00e8 necessario sbloccare questa guida",
	4014: "Per copiare e incollare i passaggi, \u00e8 necessario sbloccare questa guida",
	3001: "La guida sar\u00e0 presto disponibile per l'esportazione. Per controllare lo stato, vai su \"Stato attivit\u00e0\" nel menu dell'account",
	3002: "Caricamento avviato. Si prega di non aggiornare o chiudere il browser fino al completamento del caricamento. \u00c8 possibile controllare lo stato dell'importazione una volta completato",
	3003: "L'utente esiste gi\u00e0",
	3004: "L'ID e-mail \u00e8 gi\u00e0 verificato",
	3005: "Questo URL \u00e8 in conflitto con altre configurazioni dell'applicazione, prova ad aggiungere qualsiasi altro URL",
	3006: "La cartella deve appartenere alla stessa applicazione",
	3007: "Il dominio esiste gi\u00e0",
	3008: "Hai raggiunto il limite massimo di Guide create",
	3009: "L'indagine esiste gi\u00e0 nella guida fornita",
	3010: "Il Passo deve appartenere alla stessa Guida",
	3011: "Questa organizzazione \u00e8 sospesa. Contatta il tuo amministratore",
	3012: "Le guide devono appartenere alla stessa cartella",
	3013: "Questa guida esiste gi\u00e0 con la coppia di oggetti e il nome del campo specificati",
	3014: "Utente sospeso",
	3015: "Utente gi\u00e0 verificato",
	3017: "OTP \u00e8 stato inviato con successo al tuo indirizzo email",
	3018: "Il ruolo esiste gi\u00e0",
	3019: "Il paese esiste gi\u00e0",
	3020: "La citt\u00e0 esiste gi\u00e0",
	3023: "La tua organizzazione non \u00e8 verificata. Per assistenza, si prega di contattare support@csod.com",
	3024: "Il file JSON non \u00e8 disponibile per questa organizzazione",
	3025: "Si \u00e8 verificato un problema durante l'autenticazione. Riprova. Se il problema persiste, aggiornare la pagina e riprovare",
	3026: "Il file JSON non \u00e8 disponibile per questa guida",
	3027: "Nessun passaggio disponibile. Creare almeno un passaggio per pubblicare la Guida TV",
	3028: "Raggiunto il limite massimo di pubblicazione del tour",
	3047: "Il tuo account \u00e8 stato temporaneamente bloccato a causa di eccessivi errori di accesso. Ti abbiamo inviato un'e-mail con i passaggi per sbloccarlo. Per ulteriore assistenza, contattaci all'indirizzo support@csod.com",
	3033: "Credenziali non valide. Contatta support@csod.com o il tuo amministratore per ulteriore assistenza.",
	4020: "Esiste gi\u00e0 una bozza di questa guida; non sono ammesse pi\u00f9 bozze di una guida.",
	4021: "Valori non validi del parametro [envs]",
	2054: "Una vecchia e una nuova password non possono essere uguali",
	playNextBotTour: "Riproduci il prossimo tour del bot",
	defaultBotEndingMessage: "Abbiamo finito, grazie mille! Nient'altro prima di dare il via?",
	loginNext: "Prossimo",
	3068: "La tua vecchia password \u00E8 scaduta imposta una nuova password per il login.",
	includeScreen: "Includi screenshot",
	feedbackPlaceholder: "Hai un feedback? Ci piacerebbe sentirlo!",
	feedbackOptBtn: "Fare clic per evidenziare o nascondere le informazioni",
	highlight: "Evidenziare",
	send: "Inviare",
	done: "Fatto",
	hide: "Nascondere"
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.ja_JP = {
    "403": "このリクエストで問題が発生しました。 リクエストを再試行してください。 問題が解決しない場合は、support@csod.com に報告してください",
    "405": "このリクエストの処理中に問題が発生しました。 リクエストを再試行してください。 問題が解決しない場合は、support@csod.com に報告してください",
    "429": "リクエストが多すぎます",
    "1003": "認証時に問題が発生しました。 再ログインしてもう一度実行してください。 問題が解決しない場合は、ページを更新し、再試行してください",
    "1005": "<b>申し訳ありません。</b><br><br>リクエストに問題があるか、サーバに問題があるようです。<br> エラーを検知しました。できるだけ早く修正します",
    "1007": "認証時に問題が発生しました。 再試行してください。 問題が解決しない場合は、support@csod.com に報告してください",
    "1009": "ユーザーメールが検証されていません",
    "1014": "メンテナンス処理中。 support@csod.com 経由でお問い合わせください",
    "1017": "認証時に問題が発生しました。 再ログインしてもう一度実行してください。 問題が解決しない場合は、support@csod.com に報告してください",
    "1018": "ステップ作成の上限に達しました",
    "2000": "このリクエストで問題が発生しました。 検知しました。 リクエストを再試行してください。 問題が解決しない場合は、support@csod.com に報告してください",
    "2001": "ログイン資格情報が無効です。 複数回失敗するとアカウントがロックされ、ロックを解除するためのメールが届きます。パスワードをリセットすることもできます",
    "2002": "無効または失効済みのワンタイムパスワード",
    "2003": "アップロードされたファイルは有効な画像ではありません (JPGおよびPNGファイルがサポートされています)",
    "2004": "セッションが期限切れです",
    "2005": "このユーザーをトラッキングできませんでした。 更新して再度実行してください。 問題が解決しない場合は、support@csod.com に報告してください",
    "2006": "メールアドレスが正しくありません。 再試行してください",
    "2007": "ユーザーの役割が無効です。 再試行してください",
    "2008": "正しいタスクタイプを指定する必要があります",
    "2009": "指定されたアプリケーションは無効です。削除されたか、存在しない可能性があります",
    "2010": "入力パラメータが無効です。 更新して再度実行してください。 問題が解決しない場合は、support@csod.com に報告してください",
    "2011": "指定された組織は無効です。削除されたか、存在しない可能性があります",
    "2012": "リクエストに無効または不完全なパラメータがありました。 再チェックしてもう一度実行してください。 問題が解決しない場合は、support@csod.com に報告してください",
    "2013": "リクエストに無効または不完全なパラメータがありました。 再チェックしてもう一度実行してください。 問題が解決しない場合は、support@csod.com に報告してください",
    "2014": "スーパー管理者[organization_id]に必要なパラメータ",
    "2015": "指定された画像データコンテンツが無効です。 再チェックしてもう一度実行してください。 問題が解決しない場合は、support@csod.com に報告してください",
    "2016": "ドメインが無効です",
    "2017": "リクエストに無効または不完全なパラメータがありました。",
    "2018": "リクエストに無効または不完全なパラメータがありました。",
    "2019": "探しているものが存在しないか、削除された可能性があります",
    "2020": "リクエストに無効または不完全なパラメータがありました。",
    "2021": "リクエストの処理中に認証サーバに予期しないエラーが発生しました。 問題を support@csod.com に報告してください",
    "2022": "リクエストに無効または不完全なパラメータがありました。 有効なチーム URL を入力してください",
    "2023": "リクエストの処理中に認証サーバに予期しないエラーが発生しました。 問題を support@csod.com に報告してください",
    "2024": "ファイルサイズは5MB未満である必要があります",
    "2025": "リクエストに無効または不完全なパラメータがありました。 有効な URL を入力してください。",
    "2026": "パスワードは8文字以上とし、少なくとも大文字と小文字を1つずつと数字を1つ含める必要があります。",
    "2027": "無効なパスワード",
    "2028": "リクエストに無効または不完全なパラメータがありました。",
    "2029": "指定した市区町村はサポートされていません",
    "2030": "リクエストに無効または不完全なパラメータがありました。",
    "2031": "このパラメータの処理中に認証サーバに予期しないエラーが発生しました。 問題を support@csod.com に報告してください",
    "2032": "パラメータ [file_id] が無効です",
    "2033": "URL は無効です。 再チェックしてもう一度実行してください",
    "2034": "パラメータの処理中に認証サーバに予期しないエラーが発生しました。 問題を support@csod.com に報告してください",
    "2035": "アプリキーの処理中に認証サーバに予期しないエラーが発生しました。 問題を support@csod.com に報告してください",
    "2036": "認証サーバに予期しないエラーが発生しました。 このページを更新してください。 問題が解決しない場合は、support@csod.com に問題を報告してください",
    "2044": "このステップについては、変換が間違っているようです。 デフォルト言語に切り替えて、ステップを再変換するか、または詳細についてカスタマーサポートにお問い合わせください。",
    "2054": "新旧のパスワードを同じにすることはできません",
    "2200": "オーディオ/動画コントロールにアクセス中に問題が発生しました。 ブラウザ設定を確認し、再試行してください。 問題が解決しない場合は、support@csod.com に報告してください",
    "3001": "ガイドはすぐにエクスポートできるようになります。 ステータスをチェックするには、[アカウント] メニューの [タスクステータス] に移動します",
    "3002": "アップロードが開始されました。 アップロードが完了するまで、ブラウザを更新または閉じないでください。 完了後にインポートステータスを確認できます",
    "3003": "ユーザーは既に存在します",
    "3004": "メールアドレスが既に検証されています",
    "3005": "この URLは他のアプリケーション設定と重複しています。それ以外の URL を追加してください",
    "3006": "フォルダは同じアプリケーションに属する必要があります",
    "3007": "ドメインは既に存在します",
    "3008": "作成済みガイドの上限に達しました。",
    "3009": "アンケートは指定されたガイドに既に存在します",
    "3010": "ステップは同じガイドに属する必要があります",
    "3011": "この組織は停止済みです。管理者に連絡してください",
    "3012": "ガイドは同じフォルダに属する必要があります",
    "3013": "このガイドは、指定されたオブジェクトのペアとフィールド名で既に存在しています",
    "3014": "ユーザー停止済み",
    "3015": "ユーザーは既に検証済み",
    "3017": "ワンタイムパスワードがご登録のメールアドレスに正常に送信されました",
    "3018": "役割が既に存在します",
    "3019": "国が既に存在します",
    "3020": "市町村が既に存在します",
    "3023": "組織が検証されていません。 ヘルプについては、support@csod.com にお問い合わせください",
    "3024": "この組織には JSON ファイルを使用できません",
    "3025": "認証時に問題が発生しました。 リクエストを再試行してください。 問題が解決しない場合は、ページを更新し、再試行してください",
    "3026": "JSONファイルはこのガイドを利用できません",
    "3027": "使用可能なステップがありません。ガイドを公開するには、少なくとも1つのステップを作成してください",
    "3028": "ツアー公開上限に達しました",
    "3033": "無効な資格情報です。 詳細については、support@csod.com または管理者にお問い合わせください。",
    "3047": "ログインが複数回失敗したため、アカウントが一時的にロックされています。 メールを送信して、ロックを解除する手順を実行しました。 詳細については、support@csod.com にお問い合わせください。",
    "3061": "最大5個のガイドのみピン留めできます",
    "3068": "古いパスワードの有効期限が切れていますので、ログイン用に新しいパスワードを設定してください。",
    "4000": "ガイドが既に作成されている場合、サブカテゴリをフォルダ内に作成することはできません",
    "4001": "ユーザーが既にスーパー管理者になっている場合、ユーザーの役割を変更することはできません",
    "4002": "このアクションは公開済みガイドでは許可されていません",
    "4003": "ロック済みガイドは公開できません",
    "4004": "このアクションは公開済みフォルダでは許可されていません。 公開を取り消してください",
    "4006": "アプリケーションが指定された組織に属している必要があります",
    "4007": "このアクションを実行する権限がありません。",
    "4008": "このサブカテゴリにアクションは許可されていません",
    "4009": "ガイドは公開する必要があります",
    "4010": "ガイドはサブカテゴリを持つフォルダ内に作成することはできません",
    "4011": "ステップを作成するには、このガイドのロックを解除する必要があります",
    "4012": "ステップを編集するには、このガイドのロックを解除する必要があります",
    "4013": "ステップを削除するには、このガイドのロックを解除する必要があります",
    "4014": "ステップをコピーして貼り付けるには、このガイドのロックを解除する必要があります",
    "4020": "このガイドのドラフトは既に存在します。ガイドは複数のドラフトを作成できません。",
    "4021": "パラメータ [envs] の値が無効です",
    "currentPage": "現在のページ",
    "myChat": "マイチャット",
    "import": "インポート",
    "export": "エクスポート",
    "redirectLivetour": "ライブ再生",
    "guideNotAvailable": "ガイドは現在の URL で使用できません。ガイドURLへ移動しますか?",
    "downloadPPT": "PPT をダウンロード",
    "btnYes": "はい",
    "btnNo": "いいえ",
    "inApp": "アプリ内",
    "live": "ライブ",
    "resume": "再開",
    "tourCloseConfirm": "本当にこのガイドを終了しますか?",
    "notifSnoozeDonotMsg": "後でこれを視聴するか、今後は通知を表示しないかをお聞かせください。",
    "surveyThanksMessage": "ご回答ありがとうございます",
    "testMePassedMessage": "おめでとうございます 合格です",
    "testMeFailedMessage": "残念。 不合格です",
    "testMeGuideEfficiency": "テスト効率:",
    "testMeGuideEffectiveness": "テストの有効性:",
    "testMeTestTime": "テスト時間",
    "testMeExpectedTime": "予定時刻",
    "testMeStepsTaken": "取得したステップ",
    "testMeExpectedSteps": "予想されるステップ",
    "testMeRetakeTestBtn": "テストの再受験",
    "testMeResultTitle": "MyTest結果",
    "ConfirmIfTestMeModeRidirect": "ガイドは現在のURLで使用できません。ガイドURLへリダイレクトしますか?",
    "feedCmt": "皆様のご意見をお待ちしております。<br> 250文字以下でご感想をお聞かせください。",
    "doNotShowAgain": "再度表示しない",
    "neverShowAgain": "二度と表示しない",
    "skipGuide": "ガイドをスキップ",
    "surveyErrorMsg": "少なくとも1つの質問に回答してください",
    "redirect": "リダイレクト",
    "liveGuide": "ライブガイド",
    "question": "質問",
    "exitGuide": "ガイドを終了",
    "continueGuide": "ガイドを続行",
    "stop": "中止",
    "characters": "文字数:",
    "survey": "アンケート",
    "testMeStopMessage": "TestMe モードで表示しています。[停止] をクリックして終了してください",
    "testMeFailedErrorMessage": "目標ステップに到達できませんでした。<br> {TOTAL_STEPS} のうち正しいステップは {CORRECT_STEPS} でした。",
    "surveyCommentPlaceholder": "こちらに入力してください 最大250文字",
    "pushTourSnoozeMsg": "この自動開始ツアーはスヌーズになります",
    "of": ":",
    "wbMplayerTitle": "チュートリアル",
    "wbDragTooltip": "ページ上の任意の場所にこのプレイヤーをドラッグ＆ドロップします",
    "dontShowEdResult": "これは表示しない",
    "mPlayerHeaderTitle": "マイクロプレイヤー",
    "closePreview": "プレビューを閉じる",
    "elmNotFound": "このステップの要素を見つけることができないようです:",
    "elmNotFoundInfo": "このステップを実行するには、正しいページを使用していることを確認してください。 選択した要素を表示できるかどうかも確認してください",
    "notExists": "存在しません",
    "elmNotFoundHeader": "ステップ要素が見つかりません",
    "goToStep": "ステップへ移動",
    "notFoundStep": "次のステップの要素が見つかりませんでした: #",
    "pleaseReselect": "要素を再度選択してください。",
    "stepRuleMatchErr": "設定エラー: ステップルールが一致しません",
    "guideRuleMatchErr": "設定エラー: ガイドルールが一致しません",
    "stepNotFoundRedirect": "このページにステップが見つかりません。 何をリダイレクトしますか?",
    "branchStepMessagePopup": "続行するには、以下のいずれかのタスクを選択してください",
    "btnSkip": "スキップ",
    "kindlyHoverPopup": "ポップアップを開くには、この要素の上にマウスポインターを移動してください",
    "stepPlayIsdefinedPopover": "再生しようとしているステップがポップオーバーに定義されています",
    "elmNotFoundWestpac": "ステップが見つかりません – このガイドは終了します",
    "findingElementMessage": "ステップを検索しようとしています。 . .",
    "badDomain": "現在のドメインおよびURLをMyGuideで実行する権限がありません。ヘルプについては管理者管理者に連絡してください。",
    "hostJsError": "ウェブページにエラーがあるようです。MyGuide は続行できません",
    "remember": "ログイン情報を記録する",
    "forgotPass": "パスワードをお忘れですか?",
    "dontHavAcc": "アカウントをお持ちでない場合。",
    "loginTitle": "ログイン",
    "loginOtpScreenTitle": "ワンタイムパスワードを検証してサインイン",
    "forgetPassTitl": "パスワードのリセット",
    "placeholderEmail": "メールアドレス",
    "placeholderPassword": "パスワード",
    "placeholderNewPassword": "新しいパスワード",
    "placeholderCurrentPassword": "現在のパスワード",
    "placeholderFirstname": "名",
    "placeholderLastname": "姓",
    "placeholderPasswordC": "パスワードの確認",
    "btnCancel": "キャンセル",
    "btnPayment": "計画のアップグレード",
    "btnSubmit": "送信",
    "btnLogin": "ログイン",
    "termsOfUse": "利用規約",
    "andLabel": "および",
    "policyPrivacy": "プライバシーポリシーに同意します",
    "passwordError": "パスワードには8桁の長さを指定してください",
    "confirmPasswordError": "パスワードと確認パスワードは一致する必要があります",
    "firstnameError": "有効な名を入力してください",
    "lastnameError": "有効な姓を入力してください",
    "emailError": "有効なメールアドレスを入力してください",
    "orgError": "有効な組織 URL を入力してください",
    "otpError": "有効なワンタイムパスワードを入力してください",
    "placeholderOtp": "ここにワンタイムパスワードを入力してください",
    "otpSentDesc": "有効なメールアドレスが指定されている場合、リセットリンクが送信されます。<br>数分後にメールが表示されない場合は、迷惑メールフォルダを確認してください。",
    "btnOtpVerify": "ワンタイムパスワードを確認",
    "alreadyHavAcc": "既にアカウントをお持ちの場合",
    "smartbiteMessageError": "メッセージを入力してください",
    "smartbiteLinkError": "有効なリンクを入力してください",
    "noGuidesOnThisPage": "このページには使用できるガイドがありません",
    "clickOn": "クリックしてください:",
    "contactUs": "お問い合わせ",
    "search": "検索",
    "noRecordFound": "レコードが見つかりません",
    "category": "フォルダ",
    "subCategory": "サブフォルダ",
    "confirmPasswordRequired": "パスワードの確認入力は必須です",
    "logInWithSSO": "SSOでログインする",
    "inputPlaceHolderSearch": "任意のガイドを検索",
    "noGuideAvailableFor": "検索に一致するガイドが見つかりません",
    "tryModifyingYourSearch": "検索条件を変更してください",
    "signInVerifyYourEmail": "このメールアドレスは検証されていません。 詳細はメールを確認してください",
    "signInVerifyYourAccount": "ワンタイムパスワードが記載されたメールを送信しました。 サインインプロセスを完了するには、アカウントを確認してください",
    "maintenanceMessage": "メンテナンス処理中。 support@csod.com 経由でお問い合わせください",
    "back": "戻る",
    "changePassword": "パスワードの変更",
    "startTestAuto": "自動化テストの開始",
    "msgPasswordChangedSuccess": "パスワードが正常に変更されました",
    "msgConfirmNewPasswordError": "パスワードの確認は新しいパスワードと一致する必要があります",
    "enterUrl": "チーム URL を入力",
    "dragPlaceholderDropThis": "これを",
    "dragPlaceholderHere": "ここにドロップ",
    "termsOfService": "条件",
    "versionText": "バージョン",
    "videoStepSuccessMessage": "ステップが正常に作成されました",
    "importSuccessMessage": "ガイドのアップロードに成功しました。 タスクステータスに移動してインポートステータスを確認してください",
    "worldBankHelpSupport": "ツールチップなどの一部のツールは、インターフェイスでのみ表示できます",
    "helpSupport": "ヘルプ & サポート",
    "page": "ページ",
    "selectAnApplication": "アプリケーションの選択",
    "refresh": "更新",
    "loginBtn": "ログイン",
    "account": "アカウント",
    "taskStatus": "タスクステータス",
    "logoutBtn": "ログアウト",
    "app": "アプリ:",
    "firstStep": "最初のステップ",
    "lastStep": "最後のステップ",
    "startTest": "テストの開始",
    "noInappStepInGuide": "このガイドにはインラインステップがないため TestMe を続行できません",
    "settingBtn": "詳細設定",
    "orgSetting": "組織の設定",
    "close": "終了",
    "pdf": "PDF",
    "downloadPptx": "PPT",
    "giphy": "GIF",
    "downloadWord": "WORD",
    "downloadBlog": "ウェブページ",
    "downloadTxt": "テキスト",
    "serviceErrorMessage": "このファイルの エラーが発生しました。 しばらくしてから再度試してください。 また、support@csod.com にメールでお問い合わせください",
    "guidesTab": "ガイド",
    "noGuideCreatedYet": "ガイドはまだ作成されていません",
    "noCategoryCreatedYet": "フォルダはまだ作成されていません",
    "chatbot": "マイチャット",
    "notAutorised": "必要なアクセス権がありません。管理者にお問い合わせください",
    "ok": "OK",
    "apiError": "設定エラー: 管理者に連絡してください",
    "select": "選択",
    "mute_unmute": "ミュート/ミュート解除",
    "privacyPolicy": "プライバシー&クッキー",
    "privacyPolicyText": "MyGuideはクッキーを使用します。 続行すると、お客様が使用許諾契約書とプライバシーポリシーに同意し、クッキーの利用に同意されたものとします。",
    "terms": "条件",
    "westPecErrorMessage": "このアプリケーションにアクセスする権限がありません。 ウェストパックのネットワークにログインしてください",
    "noApp": "アプリケーションが見つかりません",
    "role": "役割:",
    "all": "すべて",
    "video": "動画",
    "course": "コース",
    "article": "記事",
    "image": "画像",
    "pathways": "Pathways",
    "preview": "プレビュー",
    "more": "もっと見る",
    "history": "履歴",
    "publish": "公開",
    "selectGuideLink": "リンクするガイドを選択してください",
    "selectGuideBeforeSubmit": "送信する前にガイドを選択してください",
    "change": "変更",
    "checkNow": "今すぐ確認",
    "minutes": "分",
    "clickHere": "ここをクリックしてください",
    "youAlmostDone": "まもなく完了します",
    "setOrg": "組織を設定するには",
    "apps": "アプリケーション",
    "me": "自分",
    "playStep": "ステップの再生",
    "miniPlayerHelp": "ヘルプ",
    "defaultMiniPlayerHelp": "ヘルプ",
    "defaultConfirmIfSlideshowOrRedirect": "現在 URLのステップは使用できません。<br>ステップ URL に移動するか、またはスライドショーを再生しますか?",
    "defaultServiceErrorMessage": "このファイルの エラーが発生しました。 しばらくしてから再度試してください。 また、support@csod.com にメールでお問い合わせください",
    "defaultMaintenanceMessage": "メンテナンス処理中。 support@csod.com 経由でお問い合わせください",
    "userNotFollowingGuideMessage": "このガイドに含まれていないステップを実行しているようです。ガイドをフォローする必要がなくなった場合は、[ガイドを終了] をクリックしてください。",
    "defaultUserNotFollowingGuideMessage": "このガイドに含まれていないステップを実行しているように見えます。ガイドをフォローする必要がなくなった場合は、[ガイドを終了] をクリックしてください。",
    "resumeGuide": "ガイドを再開",
    "defaultResumeGuideMessage": "ガイドを再開",
    "backToLogin": "ログインに戻る",
    "filters": "フィルタ",
    "thisApp": "このアプリ",
    "thisWebsite": "このウェブサイト",
    "maxFreeTourLimit": "ツアーの上限数に達しました",
    "passwordRegexCheck": "パスワードは8文字以上とし、少なくとも大文字と小文字を1つずつと数字を1つ含める必要があります。",
    "countLimit": "99+",
    "microsoftServiceKey": "Microsoft Cognitive Services Speech のサブスクリプションキーを入力してください",
    "numberOfImgFile": "画像ファイルとテキストファイルの数を同じにする必要があります",
    "availableOn": "利用可能",
    "tooltipUnpubWorkflowTitle": "未公開ワークフロー",
    "tooltipUnpubParentWorkflowTitle": "公開済みワークフロー、未公開上位フォルダ",
    "tooltipPubParentWorkflowTitle": "公開済みワークフロー、公開済みフォルダ",
    "tooltipUnpubTooltipTitle": "未公開ツールチップ",
    "tooltipUnpubParentTooltipTitle": "公開済みツールチップ、未公開上位フォルダ",
    "tooltipPubParentTooltipTitle": "公開済みツールチップ、公開済みフォルダ",
    "tooltipUnpubTutorialTitle": "未公開チュートリアル",
    "tooltipUnpubParentTutorialTitle": "公開済みチュートリアル、未公開上位フォルダ",
    "tooltipPubParentTutorialTitle": "公開済みチュートリアル、公開済みフォルダ",
    "tooltipUnpubSubFolderTitle": "未公開サブフォルダ",
    "tooltipUnpubSubFolderDesc": "サブフォルダを使用してガイドを整理する",
    "tooltipUnpubParentSubFolderTitle": "公開済みサブフォルダ、未公開上位フォルダ",
    "tooltipPubParentSubFolderTitle": "公開済みサブフォルダ、公開済みフォルダ",
    "tooltipPubParentSubFolderDesc": "ガイドを主催する",
    "exitSurvey": "終了アンケート",
    "disable": "無効化",
    "instructionExitSurvey": "完了前にユーザーがガイドを終了すると、終了アンケートが表示されます",
    "msgVideoNotFound": "動画をアップロードしています。しばらくしてから試してください",
    "msgGiphyNotFound": "GIFをアップロードしています。しばらくしてから試してください",
    "userPref": "マイ設定",
    "manageAccount": "管理者ポータル",
    "analyticsPortal": "インサイトポータル",
    "errorInvalidUrl": "有効な URL ではありません",
    "wbFooterText": "ITS技術ラーニング",
    "navigationMenu": "ナビゲーションメニュー",
    "clearHistory": "履歴をクリア",
    "userDeniedMessage": "カメラとマイクのアクセス許可が拒否されました",
    "pushNotification": "プッシュ通知",
    "viewDetail": "詳細の表示",
    "contactAdmin": "詳細については、support@csod.com または管理者にお問い合わせください。",
    "noAppOnDomain": "現在のドメインにはアプリケーションが割り当てられていません",
    "noGuidesOnDomain": "ガイドが見つかりません",
    "apply": "適用",
    "invalidLoginCred": "ログイン資格情報が無効です。 複数回失敗するとアカウントがロックされ、ロックを解除するためのメールが届きます。パスワードをリセットすることもできます",
    "resendOTP": "ワンタイムパスワードを再送信",
    "sendFeedback": "フィードバックを送る",
    "guideNotExist": "このガイドはこのページでは使用できません (エラー: ドメインが一致しません）",
    "cdnAccess": "<b>申し訳ありません。</b><br><br>サーバに問題があるようです。<br> エラーを検知しました。できるだけ早く修正します",
    "tourPlayError": "ガイドを再生できません。ガイドの詳細の取得中にエラーが発生しました",
    "playerMode": "プレイヤーモード",
    "closePanel": "パネルを閉じる",
    "switchCreatorMode": "作成者モードに切り替え",
    "extensionContextError": "拡張コンテキストが無効になりました。 続行するにはページをリロードしてください",
    "otpSent": "ワンタイムパスワードがメールで再送信されました。受信ボックスを確認してください",
    "startOver": "再起動",
    "yesResume": "再開",
    "dontShowAgain": "このメッセージを今後表示しない",
    "notificationHeader": "通知があります",
    "watchLater": "後で見る",
    "pushSnoozeMsg": "この通知はスヌーズになります",
    "showAgain": "再度表示",
    "noGuidesOnThisTab": "このページには通知はありません",
    "iAgree": "同意する",
    "viewMore": "詳細の表示",
    "lostInternetConnection": "サーバーに接続できません",
    "next": "次へ",
    "recent": "最近",
    "older": "古い",
    "atoz": "テキスト (昇順)",
    "ztoa": "テキスト (降り順)",
    "clear": "クリア",
    "tooltipDontShowAgain": "通知が今後表示されることはありません。 すぐに通知を有効にするには、その上にマウスポインタを置いて [再度表示] をクリックしてください",
    "tooltipWatchLater1": "通知はスヌーズになっています",
    "tooltipWatchLater2": "その後に表示されます。 すぐに通知を有効にするには、その上にマウスポインタを置いて [再度表示] をクリックしてください",
    "hour": "時間",
    "hours": "時間",
    "insightsTracker": "Insights トラッカー",
    "slideshow": "スライドショー",
    "autoplay": "自動再生",
    "powerFormOldData": "既存のデータ",
    "powerFormNewData": "このフォームを使用して新しいデータを入力してください",
    "powerFormNewDataMore": "既存のデータが表示されていない場合は、左上の矢印をクリックしてデータを表示してください。 データは、許可されている箇条書き形式にコピーする必要があります。",
    "powerFormTitle": "データ入力アシスタント",
    "powerFormMandatory": "これは必須フィールドです。文字数上限",
    "belongToOtherApp": "この ガイドは、{APPNAME} に属する {TOURURL} 上で作成されています。 そのアプリでこのガイドをコピーし、再試行してください",
    "setDomain": "{TOURURL} を現在のアプリケーションドメイン設定に追加する必要があることを確認済みの場合は、追加して再試行してください。",
    "on": "オン",
    "off": "オフ",
    "btnPrev": "前へ",
    "btnPrevious": "前へ",
    "taskList": "タスクリスト",
    "unprocessedVideo": "動画が処理されている間お待ちください。",
    "searchResult": "検索結果",
    "pleaseWait": "お待ちください",
    "mediaDownloadMsg": "ダウンロードするファイルの準備中",
    "mediaFileNotFound": "メディアファイルが見つかりません",
    "searchInFolder": "フォルダ内で検索",
    "currentPageSearchPlaceholder": "現在のページで使用可能なガイドを検索",
    "brandLogo": "ブランドロゴ",
    "accessibility": "アクセシビリティ",
    "replay": "リプレイ",
    "defaultGreetingMessage": "ねえ! [MyGuide] へようこそ。 ご用件は何ですか? （私はボットです）",
    "defaultErrorMessage": "すみません。理解できませんでした。 具体的に説明してください。",
    "greetingMessage": "ねえ! [MyGuide] へようこそ。 ご用件は何ですか? （私はボットです）",
    "errorMessage": "すみません。理解できませんでした。 具体的に説明してください。",
    "guideLnkToRedirect": "ページにリダイレクトしてガイドを再生するには、次のリンクを使用します",
    "otpTimer": "こちらで再試行できます",
    "seconds": "秒",
    "limitWarning": "失敗した試行回数の上限に達しました。",
    "startBotLbl": "チャットボットの開始",
    "doitForMeWarning": "DoItForMe は、画像、動画、調査の各ステップには使用できません。",
    "playNextBotTour": "次のボット ツアーを再生する",
    "includeScreen": "スクリーンショットを含める",
    "feedbackPlaceholder": "フィードバックがありますか?ぜひお聞かせください。",
    "feedbackOptBtn": "クリックして情報をハイライトまたは非表示",
    "highlight": "ハイライト",
    "send": "送信",
    "done": "完了",
    "hide": "非表示",
    "multiSelectOptionError": "オプションを少なくとも 1 つ選択してください",
    "loginNext": "次へ",
    "captchaLbl": "CAPTCHA",
    "placeholderEnterCaptcha": "CAPTCHAを入力してください",
    "captchaError": "有効なCAPTCHAを入力してください",
    "allGuides": "すべてのガイド",
    "helpCenter": "ヘルプセンター",
    "feedbackRequired": "フィードバックを入力してください。",
    "default": "デフォルト",
    "feedbackImgErrorMsg": "ブラウザ関連の問題により、スクリーンショットをフィードバックに添付できませんでした。ページをリロードし、Chrome アクション バーから Guide アクション機能をクリックして開いてください。フィードバックのためのスクリーンショットを再キャプチャしてください。"
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.ko_KR = {
    "403": "이 요청에 문제가 발생했습니다. 다시 시도하십시오. 문제가 지속되는 경우 support@csod.com으로 알려주십시오.",
    "405": "이 요청을 처리하는 동안 문제가 발생했습니다. 다시 시도하십시오. 문제가 지속되는 경우 support@csod.com으로 알려주십시오.",
    "429": "너무 많은 요청",
    "1003": "인증 중 문제가 발생했습니다. 다시 로그인한 후 다시 시도하십시오. 문제가 지속되는 경우 페이지를 새로 고친 후 다시 시도하십시오.",
    "1005": "<b>죄송합니다.</b> <br><br>요청 또는 서버에 문제가 있는 것 같습니다.<br> 오류에 대한 알림을 받았습니다. 최대한 빨리 해결하겠습니다.",
    "1007": "인증 중 문제가 발생했습니다. 다시 시도하십시오. 문제가 지속되는 경우 support@csod.com으로 알려주십시오.",
    "1009": "사용자 전자 메일이 확인되지 않았습니다.",
    "1014": "유지 관리가 진행 중입니다. support@csod.com을 통해 문의하십시오.",
    "1017": "인증 중 문제가 발생했습니다. 다시 로그인한 후 다시 시도하십시오. 문제가 지속되는 경우 support@csod.com으로 알려주십시오.",
    "1018": "단계를 만들기 위한 최대 한도에 도달했습니다.",
    "2000": "이 요청에 문제가 발생했습니다. 통보를 받았습니다. 다시 시도하십시오. 문제가 지속되는 경우 support@csod.com으로 알려주십시오.",
    "2001": "잘못된 로그인 자격 증명입니다. 여러 번 실패한 후 계정이 잠기거나, 계정 잠금을 해제하라는 전자 메일을 받거나, 암호를 재설정할 수 있습니다",
    "2002": "잘못되었거나 만료된 OTP",
    "2003": "업로드된 파일은 유효한 이미지가 아닙니다(JPG 및 PNG 파일은 지원됨).",
    "2004": "세션 만료됨",
    "2005": "이 사용자를 추적할 수 없습니다. 새로 고친 후 다시 시도하십시오. 문제가 지속되는 경우 support@csod.com으로 알려주십시오.",
    "2006": "전자 메일 주소가 잘못되었습니다. 다시 시도하십시오.",
    "2007": "사용자 역할이 잘못되었습니다. 다시 시도하십시오.",
    "2008": "올바른 과제 유형을 지정해야 합니다.",
    "2009": "지정한 응용 프로그램이 잘못되었습니다. 삭제되었거나 존재하지 않았을 수 있습니다.",
    "2010": "잘못된 입력 매개 변수입니다. 새로 고친 후 다시 시도하십시오. 문제가 지속되는 경우 support@csod.com으로 알려주십시오.",
    "2011": "지정한 조직이 잘못되었습니다. 삭제되었거나 존재하지 않았을 수 있습니다.",
    "2012": "요청에 매개 변수가 누락되었거나 잘못되었습니다. 다시 확인한 후 다시 시도하십시오. 문제가 지속되는 경우 support@csod.com으로 알려주십시오.",
    "2013": "요청에 매개 변수가 누락되었거나 잘못되었습니다. 다시 확인한 후 다시 시도하십시오. 문제가 지속되는 경우 support@csod.com으로 알려주십시오.",
    "2014": "수퍼 Admin [organization_id]에 필요한 매개 변수",
    "2015": "제공된 이미지 데이터 콘텐츠가 잘못되었습니다. 다시 확인한 후 다시 시도하십시오. 문제가 지속되는 경우 support@csod.com으로 알려주십시오.",
    "2016": "잘못된 도메인",
    "2017": "요청에 매개 변수가 누락되었거나 잘못되었습니다.",
    "2018": "요청에 매개 변수가 누락되었거나 잘못되었습니다.",
    "2019": "찾고 있는 항목이 없거나 삭제되었을 수 있습니다",
    "2020": "요청에 매개 변수가 누락되었거나 잘못되었습니다.",
    "2021": "인증 서버에서 이 요청을 처리하는 동안 예기치 않은 오류가 발생했습니다. support@csod.com에 문제를 보고하십시오.",
    "2022": "요청에 매개 변수가 누락되었거나 잘못되었습니다. 올바른 팀 URL을 입력하십시오.",
    "2023": "인증 서버에서 이 요청을 처리하는 동안 예기치 않은 오류가 발생했습니다. support@csod.com에 문제를 보고하십시오.",
    "2024": "파일 크기는 5MB 미만이어야 함",
    "2025": "요청에 매개 변수가 누락되었거나 잘못되었습니다. 올바른 URL을 입력하십시오.",
    "2026": "암호는 최소 하나의 대문자, 하나의 소문자 및 하나의 숫자 값을 포함하여 최소 8자 이상이어야 합니다.",
    "2027": "잘못된 암호",
    "2028": "요청에 매개 변수가 누락되었거나 잘못되었습니다.",
    "2029": "제공한 구/군/시가 지원되지 않습니다.",
    "2030": "요청에 매개 변수가 누락되었거나 잘못되었습니다.",
    "2031": "인증 서버에서 이 매개 변수를 처리하는 동안 예기치 않은 오류가 발생했습니다. support@csod.com에 문제를 보고하십시오.",
    "2032": "잘못된 매개 변수[file_id]",
    "2033": "잘못된 URL. 다시 확인한 후 다시 시도하십시오.",
    "2034": "인증 서버에서 이러한 매개 변수를 처리하는 동안 예기치 않은 오류가 발생했습니다. support@csod.com에 문제를 보고하십시오.",
    "2035": "인증 서버에서 이 AppKey를 처리하는 동안 예기치 않은 오류가 발생했습니다. support@csod.com에 문제를 보고하십시오.",
    "2036": "인증 서버에서 예기치 않은 오류가 발생했습니다. 이 페이지를 새로 고치십시오. 문제가 지속되는 경우 이 문제를 support@csod.com으로 알려주십시오.",
    "2044": "이 단계에 대한 번역의 위치가 잘못된 것 같습니다. 기본 언어로 전환하고 단계를 다시 번역하거나 고객 지원에 자세한 정보를 문의하십시오.",
    "2054": "기존 암호와 새 암호가 같을 수 없습니다.",
    "2200": "오디오/비디오 컨트롤에 액세스하는 중 문제가 발생했습니다. 브라우저 설정을 확인하고 다시 시도하십시오. 문제가 지속되는 경우 support@csod.com으로 알려주십시오.",
    "3001": "Guide는 곧 내보낼 수 있습니다. 상태를 확인하려면 계정 메뉴에서 '과제 상태'로 이동하십시오.",
    "3002": "업로드가 시작되었습니다. 업로드가 완료될 때까지 브라우저를 새로 고치거나 닫지 마십시오. 완료되면 가져오기 상태를 확인할 수 있습니다.",
    "3003": "사용자가 이미 있습니다.",
    "3004": "전자 메일 ID가 이미 확인됨",
    "3005": "이 URL이 다른 응용 프로그램 구성과 충돌합니다. 다른 URL을 추가하십시오.",
    "3006": "폴더는 동일한 응용 프로그램에 속해야 합니다.",
    "3007": "도메인이 이미 있습니다.",
    "3008": "생성된 Guide의 최대 한도에 도달했습니다.",
    "3009": "Survey가 지정된 Guide에 이미 있습니다.",
    "3010": "이 단계는 동일한 Guide에 속해야 합니다.",
    "3011": "이 조직은 일시 중단되었습니다. Admin에게 문의하십시오.",
    "3012": "Guide는 동일한 폴더에 속해야 합니다.",
    "3013": "이 Guide에 지정한 개체와 폴더 이름 쌍이 이미 있습니다.",
    "3014": "사용자 일시 중단됨",
    "3015": "사용자가 이미 확인됨",
    "3017": "전자 메일 주소로 OTP가 성공적으로 전송되었습니다.",
    "3018": "역할이 이미 있음",
    "3019": "국가가 이미 있음",
    "3020": "구/군/시가 이미 있음",
    "3023": "조직이 확인되지 않았습니다. 도움이 필요한 경우 support@csod.com에 문의하십시오.",
    "3024": "이 조직에서 JSON 파일을 사용할 수 없습니다.",
    "3025": "인증 중 문제가 발생했습니다. 다시 시도하십시오. 문제가 지속되는 경우 페이지를 새로 고친 후 다시 시도하십시오.",
    "3026": "이 Guide에서 JSON 파일을 사용할 수 없습니다.",
    "3027": "사용 가능한 단계가 없습니다. Guide를 게시할 단계를 하나 이상 만드십시오.",
    "3028": "최대 투어 게시 한도에 도달했습니다.",
    "3033": "잘못된 자격 증명. support@csod.com에 문의하거나 Admin에게 추가 지원을 요청하십시오.",
    "3047": "과도한 로그인 실패로 인해 계정이 일시적으로 잠겼습니다. 잠금을 해제하는 단계가 포함된 전자 메일을 전송했습니다. 도움이 필요한 경우 support@csod.com에 문의하십시오.",
    "3061": "Guide를 최대 5개까지 고정할 수 있습니다.",
    "3068": "이전 암호가 만료되었습니다. 로그인을 위한 새 암호를 설정하십시오.",
    "4000": "Guide가 이미 생성된 경우 폴더 내에 하위 범주를 만들 수 없습니다.",
    "4001": "이미 수퍼 Admin 사용자인 경우 사용자 역할을 변경할 수 없습니다.",
    "4002": "이 작업은 게시된 Guide에서 허용되지 않습니다.",
    "4003": "잠긴 Guide는 게시할 수 없습니다.",
    "4004": "이 작업은 게시된 폴더에서 허용되지 않습니다. 게시를 취소하십시오.",
    "4006": "응용 프로그램은 지정된 조직에 속해야 합니다.",
    "4007": "이 작업을 수행할 권한이 없습니다.",
    "4008": "이 하위 범주에 대한 작업은 허용되지 않습니다.",
    "4009": "Guide를 게시해야 합니다.",
    "4010": "Guide를 하위 범주가 있는 폴더 안에 만들 수 없습니다.",
    "4011": "단계를 만들려면 이 Guide의 잠금을 해제해야 합니다.",
    "4012": "단계를 편집하려면 이 Guide의 잠금을 해제해야 합니다.",
    "4013": "단계를 삭제하려면 이 Guide의 잠금을 해제해야 합니다.",
    "4014": "단계를 복사 및 붙여 넣으려면 이 Guide의 잠금을 해제해야 합니다.",
    "4020": "이 Guide가 이미 있습니다. Guide의 여러 초안은 허용되지 않습니다.",
    "4021": "매개 변수 [envs]의 값이 잘못되었습니다.",
    "currentPage": "현재 Page",
    "myChat": "내채팅",
    "import": "가져오기",
    "export": "내보내기",
    "redirectLivetour": "라이브 재생",
    "guideNotAvailable": "Guide는 현재 URL에서 사용할 수 없습니다. Guide URL을 제거하시겠습니까?",
    "downloadPPT": "PPT 다운로드",
    "btnYes": "예",
    "btnNo": "아니요",
    "inApp": "앱 내",
    "live": "라이브",
    "resume": "다시 시작",
    "tourCloseConfirm": "이 Guide를 끝내시겠습니까?",
    "notifSnoozeDonotMsg": "나중에 이를 관찰하거나 알림을 표시하지 않으시겠습니까?",
    "surveyThanksMessage": "응답을 제공해 주셔서 감사합니다.",
    "testMePassedMessage": "축하합니다. 합격했습니다.",
    "testMeFailedMessage": "죄송합니다. 불합격했습니다.",
    "testMeGuideEfficiency": "테스트 효율성:",
    "testMeGuideEffectiveness": "테스트 효율성:",
    "testMeTestTime": "테스트 시간",
    "testMeExpectedTime": "예상 시간",
    "testMeStepsTaken": "수행한 단계",
    "testMeExpectedSteps": "예상 단계",
    "testMeRetakeTestBtn": "테스트 재실행",
    "testMeResultTitle": "내테스트 결과",
    "ConfirmIfTestMeModeRidirect": "Guide는 현재 URL에서 사용할 수 없습니다. Guide URL을 리디렉션하시겠습니까?",
    "feedCmt": "귀하의 피드백은 소중합니다!<br> 500자 이내로 귀하의 생각을 알려 주십시오.",
    "doNotShowAgain": "다시 표시하지 않음",
    "neverShowAgain": "다시 표시 안 함",
    "skipGuide": "Guide 건너뛰기",
    "surveyErrorMsg": "질문을 하나 이상 답변하십시오.",
    "redirect": "리디렉션",
    "liveGuide": "라이브 Guide",
    "question": "질문",
    "exitGuide": "Guide 끝내기",
    "continueGuide": "Guide 계속",
    "stop": "중지",
    "characters": "문자 수:",
    "survey": "Survey",
    "testMeStopMessage": "TestMe 모드를 종료하려면 중지를 클릭하십시오.",
    "testMeFailedErrorMessage": "목표 단계에 연결할 수 없습니다. <br>{TOTAL_STEPS}개 중 {CORRECT_STEPS}개의 단계가 정답입니다.",
    "surveyCommentPlaceholder": "여기에 입력하십시오! 최대 500자",
    "pushTourSnoozeMsg": "이 자동 시작 투어는 다음 시간 동안 스누즈됩니다.",
    "of": "/",
    "wbMplayerTitle": "자습서",
    "wbDragTooltip": "페이지의 아무 곳이나 끌어서 놓으십시오.",
    "dontShowEdResult": "이 항목을 표시하지 않겠습니다.",
    "mPlayerHeaderTitle": "마이크로 플레이어",
    "closePreview": "미리 보기 닫기",
    "elmNotFound": "단계에 대한 요소를 찾을 수 없습니다.",
    "elmNotFoundInfo": "이 단계를 재생하려면 올바른 페이지에 있는지 확인하십시오. 선택한 요소가 표시되는지도 확인하십시오.",
    "notExists": "없음",
    "elmNotFoundHeader": "단계 요소가 없습니다.",
    "goToStep": "단계로 가기",
    "notFoundStep": "#단계에 대한 요소를 찾을 수 없습니다.",
    "pleaseReselect": "요소를 다시 선택하십시오.",
    "stepRuleMatchErr": "설정 오류: 단계 규칙이 일치하지 않습니다.",
    "guideRuleMatchErr": "설정 오류: Guide 규칙이 일치하지 않습니다.",
    "stepNotFoundRedirect": "이 페이지에서 단계를 찾을 수 없습니다. 리디렉션하시겠습니까?",
    "branchStepMessagePopup": "계속하려면 아래 과제 중 하나를 선택하십시오.",
    "btnSkip": "건너뛰기",
    "kindlyHoverPopup": "팝업을 열려면 이 요소 위에 마우스 커서를 놓으십시오.",
    "stepPlayIsdefinedPopover": "재생할 단계가 팝오버에 정의되어 있습니다.",
    "elmNotFoundWestpac": "단계를 찾을 수 없습니다. 이 Guide는 종료됩니다.",
    "findingElementMessage": "단계 찾기 시도 중. . .",
    "badDomain": "현재 도메인이며 URL이 MyGuide를 실행할 권한이 없습니다. Admin 관리자에게 도움을 문의하십시오.",
    "hostJsError": "웹 페이지에 오류가 있는 것 같습니다. MyGuide를 계속할 수 없습니다.",
    "remember": "로그인 정보 저장",
    "forgotPass": "암호를 잊으셨습니까?",
    "dontHavAcc": "계정이 없으십니까?",
    "loginTitle": "로그인",
    "loginOtpScreenTitle": "로그인을 위해 OTP 확인",
    "forgetPassTitl": "암호 재설정",
    "placeholderEmail": "전자 메일 ID",
    "placeholderPassword": "암호",
    "placeholderNewPassword": "새 암호",
    "placeholderCurrentPassword": "현재 암호",
    "placeholderFirstname": "이름",
    "placeholderLastname": "성",
    "placeholderPasswordC": "암호 확인",
    "btnCancel": "취소",
    "btnPayment": "업그레이드 계획",
    "btnSubmit": "전송",
    "btnLogin": "로그인",
    "termsOfUse": "이용 약관",
    "andLabel": "및",
    "policyPrivacy": "개인 정보 보호 정책",
    "passwordError": "암호는 8자리 길이여야 합니다.",
    "confirmPasswordError": "암호와 암호 확인은 동일해야 합니다.",
    "firstnameError": "올바른 이름을 입력하십시오.",
    "lastnameError": "올바른 성을 입력하십시오.",
    "emailError": "유효한 전자 메일 ID를 입력하십시오.",
    "orgError": "올바른 조직 URL을 입력하십시오.",
    "otpError": "올바른 OTP를 입력하십시오.",
    "placeholderOtp": "여기에 OTP를 입력하십시오.",
    "otpSentDesc": "유효한 전자 메일 주소가 제공된 경우 재설정 링크가 전송됩니다. <br>몇 분 후에 전자 메일을 볼 수 없는 경우 스팸 폴더에서 전자 메일을 확인하십시오.",
    "btnOtpVerify": "OTP 확인",
    "alreadyHavAcc": "이미 계정이 있습니까?",
    "smartbiteMessageError": "메시지를 입력하십시오.",
    "smartbiteLinkError": "올바른 링크를 입력하십시오.",
    "noGuidesOnThisPage": "이 페이지에는 Guides를 사용할 수 없습니다.",
    "clickOn": "클릭",
    "contactUs": "문의처",
    "search": "검색",
    "noRecordFound": "레코드를 찾을 수 없음",
    "category": "폴더",
    "subCategory": "하위 폴더",
    "confirmPasswordRequired": "암호 확인 필수",
    "logInWithSSO": "SSO로 로그인",
    "inputPlaceHolderSearch": "Guide 검색",
    "noGuideAvailableFor": "검색 조건과 일치하는 Guide를 찾을 수 없습니다.",
    "tryModifyingYourSearch": "검색 기준을 수정하십시오.",
    "signInVerifyYourEmail": "이 전자 메일 ID가 확인되지 않았습니다. 자세한 내용은 전자 메일을 확인하십시오.",
    "signInVerifyYourAccount": "OTP로 전자 메일을 전송했습니다. 로그인 과정을 완료하려면 계정을 확인하십시오.",
    "maintenanceMessage": "유지 관리가 진행 중입니다. support@csod.com을 통해 문의하십시오.",
    "back": "뒤로",
    "changePassword": "암호 변경",
    "startTestAuto": "자동화 테스트 시작",
    "msgPasswordChangedSuccess": "암호가 변경되었습니다.",
    "msgConfirmNewPasswordError": "암호 확인은 새 암호와 동일해야 합니다.",
    "enterUrl": "팀 URL 입력",
    "dragPlaceholderDropThis": "삭제",
    "dragPlaceholderHere": "여기",
    "termsOfService": "조건",
    "versionText": "버전",
    "videoStepSuccessMessage": "단계가 성공적으로 만들어졌습니다.",
    "importSuccessMessage": "Guide가 업로드되었습니다. 가져오기 상태를 확인하려면 과제 상태로 이동",
    "worldBankHelpSupport": "Tooltip과 같은 일부 도구는 인터페이스에서만 볼 수 있습니다.",
    "helpSupport": "도움말 및 지원",
    "page": "페이지",
    "selectAnApplication": "응용 프로그램 선택",
    "refresh": "새로 고침",
    "loginBtn": "로그인",
    "account": "계정",
    "taskStatus": "과제 상태",
    "logoutBtn": "로그아웃",
    "app": "앱:",
    "firstStep": "첫 번째 단계",
    "lastStep": "마지막 단계",
    "startTest": "테스트 시작",
    "noInappStepInGuide": "이 안내서에는 인라인 단계가 없으므로 TestMe를 계속할 수 없습니다.",
    "settingBtn": "고급 설정",
    "orgSetting": "조직 설정",
    "close": "닫기",
    "pdf": "PDF",
    "downloadPptx": "PPT",
    "giphy": "GIF",
    "downloadWord": "문서",
    "downloadBlog": "블로그",
    "downloadTxt": "일반 텍스트",
    "serviceErrorMessage": "죄송합니다. 오류가 발생했습니다. 잠시 후 다시 시도하십시오. 지원이 필요한 경우 support@csod.com으로 전자 메일로 보낼 수도 있습니다.",
    "guidesTab": "Guides",
    "noGuideCreatedYet": "Guide가 아직 생성되지 않았습니다.",
    "noCategoryCreatedYet": "폴더가 아직 생성되지 않았습니다.",
    "chatbot": "내채팅",
    "notAutorised": "필요한 액세스 권한이 없습니다. Admin에게 문의하십시오.",
    "ok": "확인",
    "apiError": "설정 오류. Admin에게 문의하십시오.",
    "select": "선택",
    "mute_unmute": "음소거/음소거 해제",
    "privacyPolicy": "개인 정보 및 쿠키",
    "privacyPolicyText": "MyGuide는 쿠키를 사용합니다. 계속하면 약관 및 개인 정보 보호 정책에 동의하는 것이며 쿠키 사용 동의를 제공하는 것입니다.",
    "terms": "조건",
    "westPecErrorMessage": "이 응용 프로그램에 액세스할 권한이 없습니다. Westpac의 네트워크에 로그인하십시오.",
    "noApp": "응용 프로그램을 찾을 수 없음",
    "role": "역할:",
    "all": "모두",
    "video": "비디오",
    "course": "과정",
    "article": "기사",
    "image": "이미지",
    "pathways": "Pathways",
    "preview": "미리 보기",
    "more": "초과",
    "history": "기록",
    "publish": "게시",
    "selectGuideLink": "링크하려면 Guide를 선택하십시오.",
    "selectGuideBeforeSubmit": "전송 전에 Guide를 선택하십시오.",
    "change": "변경",
    "checkNow": "지금 확인",
    "minutes": "분",
    "clickHere": "여기 클릭",
    "youAlmostDone": "거의 완료되었습니다.",
    "setOrg": "조직을 설정하려면",
    "apps": "앱",
    "me": "내 정보",
    "playStep": "단계 재생",
    "miniPlayerHelp": "도움말",
    "defaultMiniPlayerHelp": "도움말",
    "defaultConfirmIfSlideshowOrRedirect": "현재 URL에 사용할 수 있는 단계가 없습니다.<br>단계 URL로 이동하거나 슬라이드쇼를 재생하시겠습니까?",
    "defaultServiceErrorMessage": "죄송합니다. 오류가 발생했습니다. 잠시 후 다시 시도하십시오. 지원이 필요한 경우 support@csod.com으로 전자 메일로 보낼 수도 있습니다.",
    "defaultMaintenanceMessage": "유지 관리가 진행 중입니다. support@csod.com을 통해 문의하십시오.",
    "userNotFollowingGuideMessage": "이 Guide에 속하지 않는 단계를 수행하는 것 같습니다. Guide를 더 이상 수행하지 않으려는 경우 Guide 끝내기를 클릭하십시오.",
    "defaultUserNotFollowingGuideMessage": "이 Guide에 속하지 않는 단계를 수행하는 것 같습니다. Guide를 더 이상 수행하지 않으려는 경우 Guide 끝내기를 클릭하십시오.",
    "resumeGuide": "Guide 다시 시작",
    "defaultResumeGuideMessage": "Guide 다시 시작",
    "backToLogin": "로그인으로 돌아가기",
    "filters": "필터",
    "thisApp": "이 앱",
    "thisWebsite": "이 웹 사이트",
    "maxFreeTourLimit": "투어 최대 한도에 도달했음",
    "passwordRegexCheck": "암호는 최소 하나의 대문자, 하나의 소문자 및 하나의 숫자 값을 포함하여 최소 8자 이상이어야 합니다.",
    "countLimit": "99+",
    "microsoftServiceKey": "Microsoft Cognitive Services Speech 구독 키를 입력하십시오.",
    "numberOfImgFile": "이미지 파일 수와 텍스트 파일이 동일해야 합니다.",
    "availableOn": "사용 가능 날짜",
    "tooltipUnpubWorkflowTitle": "Workflow 게시 취소됨",
    "tooltipUnpubParentWorkflowTitle": "게시된 Workflow, 게시 취소된 상위 폴더",
    "tooltipPubParentWorkflowTitle": "게시된 Workflow, 게시된 폴더",
    "tooltipUnpubTooltipTitle": "Tooltip 게시 취소됨",
    "tooltipUnpubParentTooltipTitle": "게시된 Tooltip, 게시 취소된 상위 폴더",
    "tooltipPubParentTooltipTitle": "게시된 Tooltip, 게시된 폴더",
    "tooltipUnpubTutorialTitle": "Tutorial 게시 취소됨",
    "tooltipUnpubParentTutorialTitle": "게시된 Tutorial, 게시 취소된 상위 폴더",
    "tooltipPubParentTutorialTitle": "게시된 Tutorial, 게시된 폴더",
    "tooltipUnpubSubFolderTitle": "게시 취소된 하위 폴더",
    "tooltipUnpubSubFolderDesc": "하위 폴더를 사용하여 Guides 정리",
    "tooltipUnpubParentSubFolderTitle": "게시된 하위 폴더, 게시 취소된 상위 폴더",
    "tooltipPubParentSubFolderTitle": "게시된 하위 폴더, 게시된 폴더",
    "tooltipPubParentSubFolderDesc": "Guides 구성",
    "exitSurvey": "Survey 끝내기",
    "disable": "사용 안 함",
    "instructionExitSurvey": "완료하기 전에 사용자가 안내서를 끝내면 Survey 끝내기가 표시됩니다.",
    "msgVideoNotFound": "비디오를 업로드하는 중입니다. 잠시 후 다시 시도하십시오.",
    "msgGiphyNotFound": "GIF를 업로드하는 중입니다. 잠시 후 다시 시도하십시오.",
    "userPref": "내 기본 설정",
    "manageAccount": "Admin 포털",
    "analyticsPortal": "Insights 포털",
    "errorInvalidUrl": "올바른 URL이 아닙니다.",
    "wbFooterText": "ITS 기술 학습",
    "navigationMenu": "탐색 메뉴",
    "clearHistory": "기록 지우기",
    "userDeniedMessage": "사용자가 카메라 및 마이크 액세스 권한을 거부했습니다.",
    "pushNotification": "푸시 알림",
    "viewDetail": "세부 정보 보기",
    "contactAdmin": "support@csod.com에 문의하거나 Admin에게 추가 지원을 요청하십시오.",
    "noAppOnDomain": "현재 도메인에 대해 응용 프로그램이 지정되지 않았습니다.",
    "noGuidesOnDomain": "Guides를 찾을 수 없습니다.",
    "apply": "신청",
    "invalidLoginCred": "잘못된 로그인 자격 증명입니다. 여러 번 실패한 후 계정이 잠기거나, 계정 잠금을 해제하라는 전자 메일을 받거나, 암호를 재설정할 수 있습니다",
    "resendOTP": "OTP 다시 보내기",
    "sendFeedback": "피드백 보내기",
    "guideNotExist": "이 Guide는 이 페이지에서 사용할 수 없습니다(오류: 도메인 불일치)",
    "cdnAccess": "<b>죄송합니다.</b><br><br>서버에 문제가 있는 것 같습니다.<br> 오류에 대한 알림을 받았습니다. 최대한 빨리 해결하겠습니다.",
    "tourPlayError": "Guide를 재생할 수 없습니다. Guide 세부 정보를 검색하는 중 오류 발생",
    "playerMode": "플레이어 모드",
    "closePanel": "패널 닫기",
    "switchCreatorMode": "생성자 모드로 전환",
    "extensionContextError": "확장 컨텍스트가 무효화되었습니다. 계속하려면 페이지를 다시 로드하십시오.",
    "otpSent": "OTP가 전자 메일로 다시 전송되었습니다. 받은 편지함을 확인하십시오.",
    "startOver": "다시 시작",
    "yesResume": "다시 시작",
    "dontShowAgain": "다시 표시 안 함",
    "notificationHeader": "알림을 받았습니다!",
    "watchLater": "나중에 관찰",
    "pushSnoozeMsg": "이 알림은 다음 시간 동안 스누즈됩니다.",
    "showAgain": "다시 표시",
    "noGuidesOnThisTab": "이 페이지에 대한 알림이 없습니다.",
    "iAgree": "동의함",
    "viewMore": "추가 보기",
    "lostInternetConnection": "서버에 대한 연결이 끊겼습니다. 다시 연결한 후 다시 시도하십시오.",
    "next": "다음",
    "recent": "최근",
    "older": "이전",
    "atoz": "A - Z",
    "ztoa": "Z - A",
    "clear": "지우기",
    "tooltipDontShowAgain": "알림이 더 이상 표시되지 않습니다. 지금 알림을 활성화하려면 알림 위에 마우스 커서를 놓은 다음 '다시 표시'를 클릭하십시오.",
    "tooltipWatchLater1": "다음에 대한 알림이 스누즈됩니다.",
    "tooltipWatchLater2": "그 후에 표시됩니다. 지금 알림을 활성화하려면 알림 위에 마우스 커서를 놓은 다음 '다시 표시'를 클릭하십시오.",
    "hour": "시간",
    "hours": "시간",
    "insightsTracker": "Insights 추적기",
    "slideshow": "슬라이드 쇼",
    "autoplay": "자동 재생",
    "powerFormOldData": "기존 데이터",
    "powerFormNewData": "이 양식을 사용하여 새 데이터 입력",
    "powerFormNewDataMore": "기존 데이터가 표시되지 않는 경우 왼쪽 상단의 화살표를 클릭하여 데이터를 표시하십시오. 허용되는 글머리 기호 형식으로 데이터를 복사해야 합니다.",
    "powerFormTitle": "데이터 입력 도우미",
    "powerFormMandatory": "필수 필드이며, 최대 문자 제한이 있습니다.",
    "belongToOtherApp": "이 Guide가 {APPNAME} 앱에 속하는 {TOURURL}에 생성되었습니다. 해당 앱에서 이 Guide를 복사하고 다시 시도하십시오.",
    "setDomain": "{TOURURL})을 현재 응용 프로그램 도메인 설정에 추가해야 하는 경우 추가하고 다시 시도하십시오.",
    "on": "사용",
    "off": "해제",
    "btnPrev": "이전",
    "btnPrevious": "이전",
    "taskList": "과제 목록",
    "unprocessedVideo": "비디오를 처리하는 동안 잠시 기다려 주십시오.",
    "searchResult": "검색 결과",
    "pleaseWait": "잠시 기다려 주십시오!",
    "mediaDownloadMsg": "다운로드할 파일을 준비하는 중입니다.",
    "mediaFileNotFound": "미디어 파일이 없습니다.",
    "searchInFolder": "폴더 검색",
    "currentPageSearchPlaceholder": "현재 페이지에서 사용 가능한 Guide 검색",
    "brandLogo": "브랜드 로고",
    "accessibility": "접근성",
    "replay": "재생",
    "defaultGreetingMessage": "안녕하세요! MyGuide를 시작합니다. 무엇을 도와 드릴까요? 저는 봇입니다.",
    "defaultErrorMessage": "죄송합니다. 이해하지 못했어요. 더 구체적으로 지정해 주시겠어요?",
    "greetingMessage": "안녕하세요! MyGuide를 시작합니다. 무엇을 도와 드릴까요? 저는 봇입니다.",
    "errorMessage": "죄송합니다. 이해하지 못했어요. 더 구체적으로 지정해 주시겠어요?",
    "guideLnkToRedirect": "다음 링크를 사용하여 페이지로 리디렉션하고 가이드를 실행하십시오.",
    "otpTimer": "다음 시간 후에 다시 시도할 수 있습니다.",
    "seconds": "초",
    "limitWarning": "시도 실패의 최대 한도에 도달했습니다.",
    "startBotLbl": "봇 시작",
    "doitForMeWarning": "DoItForMe는 이미지, 비디오 및 설문 조사 단계에 사용할 수 없습니다.",
    "playNextBotTour": "다음 봇 투어 재생",
    "includeScreen": "스크린샷 포함",
    "feedbackPlaceholder": "피드백이 있으신가요? 귀하의 피드백을 환영합니다!",
    "feedbackOptBtn": "클릭하여 정보 강조 표시 또는 숨기기",
    "highlight": "강조",
    "send": "보내기",
    "done": "완료",
    "hide": "숨김",
    "multiSelectOptionError": "하나 이상의 옵션을 선택하십시오.",
    "loginNext": "다음",
    "captchaLbl": "Captcha",
    "placeholderEnterCaptcha": "Captcha 입력",
    "captchaError": "올바른 captcha를 입력하십시오.",
    "allGuides": "모든 Guides",
    "helpCenter": "도움말 센터",
    "feedbackRequired": "피드백을 입력해 주세요.",
    "default": "기본값",
    "feedbackImgErrorMsg": "브라우저 관련 문제로 인해 스크린샷을 피드백에 첨부할 수 없습니다. 페이지를 새로 고치고 Chrome 작업 표시줄에서  Guide 확장 프로그램을 클릭하여 열고 피드백용 스크린샷을 다시 캡처하세요."
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.nl_NL = {
	currentPage: "Huidige pagina",
	myChat: "Mychat",
	import: "Importeren",
	export: "Exporteren",
	redirectLivetour: "Live spelen",
	guideNotAvailable: "Gids niet beschikbaar op de huidige URL. Wilt u naar de URL van de gids gaan?",
	downloadPPT: "PPT downloaden",
	btnYes: "Ja",
	btnNo: "Nee",
	inApp: "In-app",
	live: "Wonen",
	resume: "Hervatten",
	tourCloseConfirm: "Wil je deze gids echt afsluiten?",
	notifSnoozeDonotMsg: "Laat het ons weten als je dit later wilt bekijken of de melding nooit wilt laten zien?",
	surveyThanksMessage: "Bedankt voor het geven van uw antwoord",
	testMePassedMessage: "Gefeliciteerd! Je bent geslaagd",
	testMeFailedMessage: "Oeps! Je hebt gefaald",
	testMeGuideEfficiency: "Testeffici\u00ebntie:",
	testMeGuideEffectiveness: "Effectiviteit van de test:",
	testMeTestTime: "Testtijd",
	testMeExpectedTime: "Verwachte tijd",
	testMeStepsTaken: "Genomen stappen",
	testMeExpectedSteps: "Verwachte stappen",
	testMeRetakeTestBtn: "Herkansingstest",
	testMeResultTitle: "MyTest Resultaat",
	ConfirmIfTestMeModeRidirect: "Gids niet beschikbaar op de huidige URL. Wilt u omleiden naar de URL van de gids?",
	feedCmt: "Uw feedback is waardevol voor ons!<br> Vertel ons wat je ervan vond in 500 tekens of minder",
	doNotShowAgain: "Niet meer weergeven",
	neverShowAgain: "Nooit meer weergeven",
	skipGuide: "Gids overslaan",
	surveyErrorMsg: "Beantwoord ten minste \u00e9\u00e9n vraag",
	redirect: "Doorsturen",
	liveGuide: "Live gids",
	question: "Vraag",
	exitGuide: "Afsluitgids",
	continueGuide: "Gids doorgaan",
	stop: "Stoppen",
	characters: "Karakters:",
	survey: "Enqu\u00eate",
	testMeStopMessage: "U bevindt zich in de TestMe-modus, klik op STOPPEN om af te sluiten",
	testMeFailedErrorMessage: "Je kon de doelstap niet bereiken.<br>U hebt {CORRECT_STEPS} stappen correct uit {TOTAL_STEPS}.",
	surveyCommentPlaceholder: "Typ hier! Max 500 tekens",
	pushTourSnoozeMsg: "Deze Auto Launch Tour wordt gesnoozed voor",
	of: "van",
	wbMplayerTitle: "Tutorials",
	wbDragTooltip: "Sleep deze speler overal op de pagina",
	dontShowEdResult: "Ik wil dit niet zien",
	mPlayerHeaderTitle: "Microspeler",
	closePreview: "Voorbeeld sluiten",
	elmNotFound: "Het lijkt erop dat we het element voor de stap niet kunnen vinden:",
	elmNotFoundInfo: "Zorg ervoor dat u op de juiste pagina bent om deze stap af te spelen. Controleer ook of u het geselecteerde element kunt zien",
	notExists: "Bestaat niet",
	elmNotFoundHeader: "Stapelement niet gevonden",
	goToStep: "Ga naar stap",
	notFoundStep: "We konden het element voor stap niet vinden #",
	pleaseReselect: "Probeer het element opnieuw te selecteren.",
	stepRuleMatchErr: "Configuratiefout: stapregels komen niet overeen",
	guideRuleMatchErr: "Configuratiefout: gidsregels komen niet overeen",
	stepNotFoundRedirect: "Stap niet gevonden op deze pagina. Wilt u omleiden?",
	branchStepMessagePopup: "Selecteer een van de onderstaande taken om door te gaan",
	btnSkip: "Overslaan",
	kindlyHoverPopup: "Plaats de muisaanwijzer op dit element om de pop-up te openen",
	stepPlayIsdefinedPopover: "De stap die je gaat spelen is gedefinieerd op de popover",
	elmNotFoundWestpac: "Stap niet gevonden \u2013 Deze handleiding eindigt",
	findingElementMessage: "Proberen om stap te vinden. . .",
	badDomain: "Huidig domein en URL zijn niet geautoriseerd om MyGuide uit te voeren. Neem contact op met uw beheerder voor hulp.",
	hostJsError: "Er lijkt een fout op de webpagina te staan. MyGuide kan niet doorgaan",
	remember: "Onthoud mij",
	forgotPass: "Wachtwoord vergeten?",
	dontHavAcc: "Heb je nog geen account?",
	loginTitle: "Inloggen",
	loginOtpScreenTitle: "Otp verifi\u00ebren om in te loggen",
	forgetPassTitl: "Wachtwoord opnieuw instellen",
	placeholderEmail: "E-mail-ID",
	placeholderPassword: "Wachtwoord",
	placeholderNewPassword: "Nieuw wachtwoord",
	placeholderCurrentPassword: "Huidig wachtwoord",
	placeholderFirstname: "Voornaam",
	placeholderLastname: "Achternaam",
	placeholderPasswordC: "Bevestig wachtwoord",
	btnCancel: "Annuleren",
	btnPayment: "Upgradeplan",
	btnSubmit: "Opslaan",
	btnLogin: "Inloggen",
	termsOfUse: "Gebruiksvoorwaarden",
	andLabel: "en",
	policyPrivacy: "Privacybeleid",
	passwordError: "Wachtwoord moet 8 cijfers lang zijn",
	confirmPasswordError: "Wachtwoord en wachtwoord bevestigen moeten hetzelfde zijn",
	firstnameError: "Voer een geldige voornaam in",
	lastnameError: "Voer een geldige achternaam in",
	emailError: "Voer een geldig e-mailadres in",
	orgError: "Voer een geldige organisatie-URL in",
	otpError: "Voer een geldige OTP in",
	placeholderOtp: "Voer hier uw OTP in",
	otpSentDesc: "Als er een geldig e-mailadres is opgegeven, wordt er een resetlink naar u verzonden.<br>Als u de e-mail binnen een paar minuten niet ziet, controleer dan uw spammap op een e-mail van",
	btnOtpVerify: "OTP verifi\u00ebren",
	alreadyHavAcc: "Heb je al een account?",
	smartbiteMessageError: "Voer bericht in",
	smartbiteLinkError: "Voer een geldige link in",
	noGuidesOnThisPage: "Geen gidsen beschikbaar op deze pagina!",
	clickOn: "Klik op ",
	contactUs: "Neem contact met ons op",
	search: "Zoeken",
	noRecordFound: "Geen records gevonden",
	category: "Map",
	subCategory: "Submap",
	confirmPasswordRequired: "Wachtwoord bevestigen vereist",
	logInWithSSO: "Inloggen met SSO",
	inputPlaceHolderSearch: "Zoek naar een gids",
	noGuideAvailableFor: "Er zijn geen gids(en) gevonden die overeenkomen met uw zoekopdracht",
	tryModifyingYourSearch: "Probeer uw zoekcriteria aan te passen",
	signInVerifyYourEmail: "Deze e-mail-ID is niet geverifieerd. Controleer uw e-mail voor meer informatie",
	signInVerifyYourAccount: "We hebben je een e-mail gestuurd met een OTP. Verifieer uw account om het aanmeldingsproces te voltooien",
	maintenanceMessage: "Onderhoud in uitvoering. Neem dan contact met ons op via support@csod.com",
	back: "Terug",
	changePassword: "Wachtwoord wijzigen",
	startTestAuto: "Start met het testen van automatisering",
	msgPasswordChangedSuccess: "Uw wachtwoord is gewijzigd",
	msgConfirmNewPasswordError: "Wachtwoord bevestigen moet hetzelfde zijn als Nieuw wachtwoord",
	enterUrl: "Voer de team-URL in",
	dragPlaceholderDropThis: "Laat dit vallen ",
	dragPlaceholderHere: " hier",
	termsOfService: "Voorwaarde",
	versionText: "Versie",
	videoStepSuccessMessage: "Uw stap is met succes gemaakt",
	importSuccessMessage: "Gids succesvol ge\u00fcpload. Ga naar Taakstatus om de importstatus te controleren",
	worldBankHelpSupport: "Sommige tools, zoals Tooltip(s), kunnen alleen in de interface worden bekeken",
	helpSupport: "Hulp & Ondersteuning",
	page: "bladzijde",
	selectAnApplication: "Selecteer een toepassing",
	refresh: "Opfrissen",
	loginBtn: "Inloggen",
	account: "Rekening",
	taskStatus: "Taakstatus ",
	logoutBtn: "Logout",
	app: "App:",
	firstStep: "Eerste stap",
	lastStep: "Laatste stap",
	startTest: "Test starten",
	noInappStepInGuide: "TestMe kan niet doorgaan omdat er geen inline stap in deze handleiding is",
	settingBtn: "Geavanceerde instellingen",
	orgSetting: "Organisatie-instellingen",
	close: "Sluiten",
	pdf: ".PDF",
	downloadPptx: ".PPT",
	giphy: ".GIF",
	downloadWord: "Document",
	downloadBlog: "Blog",
	downloadTxt: "Platte tekst",
	serviceErrorMessage: "Oeps! Er is een fout opgetreden. Probeer het na enige tijd opnieuw. U kunt ons ook e-mailen op support@csod.com voor hulp",
	guidesTab: "Hulplijnen",
	noGuideCreatedYet: "Nog geen gids gemaakt!",
	noCategoryCreatedYet: "Nog geen map gemaakt!",
	chatbot: "Mychat",
	notAutorised: "U hebt niet de vereiste toegang, neem contact op met de beheerder",
	ok: "OK",
	apiError: "Configuratiefout. Neem contact op met de beheerder",
	select: "Selecteren",
	mute_unmute: "Dempen\/dempen",
	privacyPolicy: "Privacy & Cookies",
	privacyPolicyText: "MyGuide maakt gebruik van cookies. Als u doorgaat, gaat u akkoord met onze Voorwaarden en Ons Privacybeleid en geeft u ons toestemming om cookies te gebruiken",
	terms: "Voorwaarde",
	westPecErrorMessage: "U bent niet gemachtigd om toegang te krijgen tot deze applicatie. Meld u aan bij het netwerk van Westpac",
	noApp: "Geen toepassingen gevonden",
	role: "Rol:",
	all: "Alle",
	video: "Video",
	course: "Cursus",
	article: "Artikel",
	image: "Beeld",
	pathways: "Trajecten",
	preview: "Voorbeeld",
	more: "Meer",
	history: "Geschiedenis",
	publish: "Uitgeven",
	selectGuideLink: "Selecteer Gids om te linken",
	selectGuideBeforeSubmit: "Selecteer een gids voordat u deze verzendt",
	change: "Veranderen",
	checkNow: "Nu controleren",
	minutes: "notulen",
	clickHere: "klik hier",
	youAlmostDone: "Je bent bijna klaar!",
	setOrg: "om uw organisatie in te stellen",
	apps: "Apps",
	me: "Mij",
	playStep: "Stap afspelen",
	miniPlayerHelp: "Help",
	defaultMiniPlayerHelp: "Help",
	defaultConfirmIfSlideshowOrRedirect: "Stap niet beschikbaar op de huidige URL.<br>Wilt u naar de stap-URL gaan of diavoorstelling afspelen?",
	defaultServiceErrorMessage: "Oeps! Er is een fout opgetreden. Probeer het na enige tijd opnieuw. U kunt ons ook e-mailen op support@csod.com voor hulp",
	defaultMaintenanceMessage: "Onderhoud in uitvoering. Neem dan contact met ons op via support@csod.com",
	userNotFollowingGuideMessage: "Het lijkt erop dat u stappen uitvoert die geen deel uitmaken van deze handleiding. Als u de gids niet langer wilt volgen, klikt u op Gids afsluiten",
	defaultUserNotFollowingGuideMessage: "Het lijkt erop dat u stappen uitvoert die geen deel uitmaken van deze handleiding. Als u de gids niet langer wilt volgen, klikt u op Gids afsluiten",
	resumeGuide: "Cv-gids",
	defaultResumeGuideMessage: "Cv-gids",
	backToLogin: "Terug naar Login",
	filters: "Filters",
	thisApp: "Deze app",
	thisWebsite: "Deze website",
	maxFreeTourLimit: "Maximale limiet van tours bereikt",
	passwordRegexCheck: "Het wachtwoord moet minimaal 8 tekens bevatten, waaronder ten minste \u00e9\u00e9n hoofdletter, \u00e9\u00e9n kleine letter en \u00e9\u00e9n numerieke waarde",
	countLimit: "99+",
	microsoftServiceKey: "Voer uw Microsoft Cognitive Services Speech-abonnementssleutel in",
	numberOfImgFile: "Het aantal afbeeldings- en tekstbestanden moet hetzelfde zijn",
	availableOn: "Beschikbaar op",
	tooltipUnpubWorkflowTitle: "Niet-gepubliceerde workflow",
	tooltipUnpubParentWorkflowTitle: "Gepubliceerde workflow, niet-gepubliceerde bovenliggende map(en)",
	tooltipPubParentWorkflowTitle: "Gepubliceerde workflow, gepubliceerde map",
	tooltipUnpubTooltipTitle: "Niet-gepubliceerde knopinfo",
	tooltipUnpubParentTooltipTitle: "Gepubliceerde knopinfo, niet-gepubliceerde bovenliggende map(en)",
	tooltipPubParentTooltipTitle: "Gepubliceerde knopinfo, gepubliceerde map",
	tooltipUnpubTutorialTitle: "Ongepubliceerde tutorial",
	tooltipUnpubParentTutorialTitle: "Gepubliceerde zelfstudie, Niet-gepubliceerde bovenliggende map(en)",
	tooltipPubParentTutorialTitle: "Gepubliceerde zelfstudie, gepubliceerde map",
	tooltipUnpubSubFolderTitle: "Niet-gepubliceerde submap",
	tooltipUnpubSubFolderDesc: "Submappen gebruiken om hulplijnen te ordenen",
	tooltipUnpubParentSubFolderTitle: "Gepubliceerde submap, niet-gepubliceerde bovenliggende map(en)",
	tooltipPubParentSubFolderTitle: "Gepubliceerde submap, Gepubliceerde map",
	tooltipPubParentSubFolderDesc: "Organiseert gidsen",
	exitSurvey: "Exit Enqu\u00eate",
	disable: "Uitschakelen",
	instructionExitSurvey: "Exit Survey wordt weergegeven wanneer een gebruiker een gids afsluit voordat deze is voltooid",
	msgVideoNotFound: "Upload je video, probeer het na enige tijd",
	msgGiphyNotFound: "Uploaden van uw GIF, probeer het na enige tijd",
	userPref: "Mijn voorkeuren",
	manageAccount: "Beheerportaal",
	analyticsPortal: "Portal voor inzichten",
	errorInvalidUrl: "Geen geldige URL",
	wbFooterText: "ITS Technisch leren",
	navigationMenu: "Navigatiemenu",
	clearHistory: "Geschiedenis wissen",
	userDeniedMessage: "Gebruiker heeft camera- en microfoontoegangsrechten geweigerd",
	pushNotification: "Push notificaties",
	viewDetail: "Bekijk detail",
	contactAdmin: "Neem contact op met support@csod.com of uw beheerder voor verdere hulp",
	noAppOnDomain: "Toepassing is niet toegewezen voor huidig domein ",
	noGuidesOnDomain: "Geen gidsen gevonden",
	apply: "Toepassen",
	invalidLoginCred: "Ongeldige inloggegevens. Uw account wordt vergrendeld na meerdere mislukte pogingen, u ontvangt een e-mail om uw account te ontgrendelen of u kunt uw wachtwoord opnieuw instellen",
	resendOTP: "OTP opnieuw verzenden",
	sendFeedback: "Feedback verzenden",
	guideNotExist: "Deze handleiding is niet beschikbaar op deze pagina (Fout: Domein komt niet overeen) ",
	cdnAccess: "<b>Het spijt ons<\/b> <br><br>Het lijkt erop dat er een probleem is met onze servers.<br> We zijn op de hoogte gebracht van de fout en zullen deze zo snel mogelijk corrigeren",
	tourPlayError: "Gids kan niet worden gespeeld. Fout bij het ophalen van gidsdetails",
	playerMode: "Speler-modus",
	closePanel: "Paneel sluiten",
	switchCreatorMode: "Overschakelen naar de Creator-modus",
	extensionContextError: "De context van de extensie is ongeldig gemaakt. Laad de pagina opnieuw om door te gaan",
	otpSent: "OTP is opnieuw verzonden naar uw e-mail, controleer uw inbox",
	startOver: "Opnieuw beginnen",
	yesResume: "Hervatten",
	dontShowAgain: "Niet meer weergeven",
	notificationHeader: "Je hebt een melding!",
	watchLater: "Later bekijken",
	pushSnoozeMsg: "Deze melding wordt gesnoozed voor",
	showAgain: "Opnieuw weergeven",
	noGuidesOnThisTab: "Er zijn geen meldingen op deze pagina",
	iAgree: "Ik ben het ermee eens",
	viewMore: "Meer weergeven",
	lostInternetConnection: "Verbinding met de server is verbroken. Maak opnieuw verbinding en probeer het opnieuw",
	next: "Volgend",
	recent: "Recent",
	older: "Ouder",
	atoz: "A - Z",
	ztoa: "Z - A",
	clear: "Duidelijk",
	tooltipDontShowAgain: "Meldingen worden niet meer weergegeven. Om nu een melding in te schakelen, plaatst u de muisaanwijzer erop en klikt u op 'Opnieuw weergeven'",
	tooltipWatchLater1: "Meldingen worden gesnoozed voor",
	tooltipWatchLater2: "en zal daarna verschijnen. Om nu een melding in te schakelen, plaatst u de muisaanwijzer erop en klikt u op 'Opnieuw weergeven'",
	hour: "uur",
	hours: "uren",
	insightsTracker: "Insights Tracker",
	slideshow: "Diavoorstelling",
	autoplay: "AUTOMATISCH AFSPELEN",
	powerFormOldData: "Bestaande gegevens",
	powerFormNewData: "Gebruik dit formulier om nieuwe gegevens in te voeren",
	powerFormNewDataMore: "Als uw bestaande gegevens niet zichtbaar zijn, klikt u op de pijl linksboven om uw gegevens te bekijken. De gegevens moeten vervolgens worden gekopieerd naar het toegestane indeling met opsommingstekens.",
	powerFormTitle: "Assistent voor gegevensinvoer",
	powerFormMandatory: "Dit is een verplicht veld, maximale tekenlimiet ",
	belongToOtherApp: "Deze gids is gemaakt op {TOURURL}, die behoort tot de {APPNAME}-app. Kopieer deze handleiding in die app en probeer het opnieuw",
	setDomain: "Als u zeker weet dat de {TOURURL} moet worden toegevoegd in de huidige domeininstellingen van de toepassing, voegt u deze toe en probeert u het opnieuw",
	on: "OP",
	off: "AF",
	btnPrev: "Vorige",
	btnPrevious: "Vorig",
	taskList: "Takenlijst",
	unprocessedVideo: "Wacht even terwijl je video wordt verwerkt.",
	searchResult: "Zoekresultaat",
	pleaseWait: "Een ogenblik geduld!",
	mediaDownloadMsg: "Terwijl we uw bestanden voorbereiden om te downloaden",
	mediaFileNotFound: "Mediabestand niet gevonden",
	searchInFolder: "Zoeken in map",
	currentPageSearchPlaceholder: "Zoeken naar gids(en) die beschikbaar zijn op de huidige pagina",
	brandLogo: "Brand Logo",
	accessibility: "Toegankelijkheid",
	replay: "Overspelen",
	defaultGreetingMessage: "Hallo! Welkom bij MyGuide. Hoe kan ik je helpen?? Houd er rekening mee dat ik een bot ben.",
	defaultErrorMessage: "Het spijt me, ik heb dat niet begrepen. Kunt u specifieker zijn? ",
	defaultEndMessage: "We zijn klaar, heel erg bedankt!",
	greetingMessage: "Hallo! Welkom bij MyGuide. Hoe kan ik je helpen?? Houd er rekening mee dat ik een bot ben.",
	errorMessage: "Het spijt me, ik heb dat niet begrepen. Kunt u specifieker zijn? ",
	endMessage: "We zijn klaar, heel erg bedankt!",
	guideLnkToRedirect: "Gebruik de volgende link om om te leiden naar de pagina en speel de gids af",
	otpTimer: "U kunt het opnieuw proberen in ",
	seconds: " Seconden",
	limitWarning: "U hebt de maximumlimiet van mislukte pogingen bereikt",
	403: "We liepen tegen een probleem aan met dit verzoek. Probeer dit opnieuw. Als het probleem zich blijft voordoen, meldt u dit aan ons op support@csod.com",
	405: "We liepen tegen een probleem aan tijdens het verwerken van dit verzoek. Probeer dit opnieuw. Als het probleem zich blijft voordoen, meldt u dit aan ons op support@csod.com",
	429: "Te veel verzoeken",
	1003: "We liepen tegen een probleem aan tijdens de authenticatie. Log opnieuw in en probeer het opnieuw. Als het probleem zich blijft voordoen, vernieuwt u de pagina en probeert u het opnieuw",
	1007: "We liepen tegen een probleem aan tijdens de authenticatie. Probeer het opnieuw. Als het probleem zich blijft voordoen, meldt u dit aan ons op support@csod.com",
	1005: "<b>Het spijt ons<\/b> <br><br>Het lijkt erop dat er een probleem is met het verzoek of met onze servers.<br> We zijn op de hoogte gebracht van de fout en zullen deze zo snel mogelijk corrigeren",
	1009: "E-mailadres van gebruiker is niet geverifieerd",
	1014: "Onderhoud in uitvoering. Neem dan contact met ons op via support@csod.com",
	1017: "We liepen tegen een probleem aan tijdens de authenticatie. Log opnieuw in en probeer het opnieuw. Als het probleem zich blijft voordoen, meldt u dit aan ons op support@csod.com",
	1018: "U hebt de maximale limiet voor het maken van stappen bereikt",
	2000: "We liepen tegen een probleem aan met dit verzoek. We zijn op de hoogte gebracht. Probeer dit opnieuw. Als het probleem zich blijft voordoen, meldt u dit aan ons op support@csod.com",
	2001: "Ongeldige inloggegevens. Uw account wordt vergrendeld na meerdere mislukte pogingen, u ontvangt een e-mail om uw account te ontgrendelen of u kunt uw wachtwoord opnieuw instellen",
	2002: "Ongeldige of verlopen OTP",
	2003: "Ge\u00fcpload bestand is geen geldige afbeelding (JPG- en PNG-bestanden worden ondersteund)",
	2004: "Sessie verlopen",
	2005: "We konden deze gebruiker niet volgen. Vernieuw en probeer het opnieuw. Als het probleem zich blijft voordoen, meldt u dit aan ons op support@csod.com",
	2006: "E-mailadres is onjuist. Probeer het opnieuw",
	2007: "Gebruikersrol ongeldig. Probeer het opnieuw",
	2008: "U moet een correct taaktype opgeven",
	2009: "De gegeven Applicatie is ongeldig; het had kunnen worden verwijderd of nooit bestaan",
	2010: "Ongeldige invoerparameters. Vernieuw en probeer het opnieuw. Als het probleem zich blijft voordoen, meldt u dit aan ons op support@csod.com",
	2011: "De gegeven organisatie is ongeldig; het had kunnen worden verwijderd of nooit bestaan",
	2012: "Er was een ontbrekende of ongeldige parameter in de aanvraag. Controleer dit opnieuw en probeer het opnieuw. Als het probleem zich blijft voordoen, meldt u dit aan ons op support@csod.com",
	2013: "Er was een ontbrekende of ongeldige parameter in de aanvraag. Controleer dit opnieuw en probeer het opnieuw. Als het probleem zich blijft voordoen, meldt u dit aan ons op support@csod.com",
	2014: "Parameter vereist voor Hoofdbeheerder[organization_id]",
	2015: "De verstrekte inhoud van afbeeldingsgegevens is ongeldig. Controleer dit opnieuw en probeer het opnieuw. Als het probleem aanhoudt, meld het ons dan op support@csod.com",
	2016: "Ongeldig domein",
	2017: "Er was een ontbrekende of ongeldige parameter in de aanvraag",
	2018: "Er was een ontbrekende of ongeldige parameter in de aanvraag",
	2019: "Wat u zoekt, bestaat niet of is mogelijk verwijderd",
	2020: "Er was een ontbrekende of ongeldige parameter in de aanvraag",
	2021: "Er is een onverwachte fout opgetreden op de verificatieserver tijdens het verwerken van deze aanvraag. Meld het probleem aan support@csod.com",
	2022: "Er was een ontbrekende of ongeldige parameter in de aanvraag. Voer een geldige team-URL in",
	2023: "Er is een onverwachte fout opgetreden op de verificatieserver tijdens het verwerken van deze aanvraag. Meld het probleem aan support@csod.com",
	2024: "De bestandsgrootte moet kleiner zijn dan 5 MB",
	2025: "Er was een ontbrekende of ongeldige parameter in de aanvraag. Voer een geldige URL in",
	2026: "Het wachtwoord moet minimaal 8 tekens bevatten, waaronder ten minste \u00e9\u00e9n hoofdletter, \u00e9\u00e9n kleine letter en \u00e9\u00e9n numerieke waarde",
	2027: "Ongeldig wachtwoord",
	2028: "Er was een ontbrekende of ongeldige parameter in de aanvraag",
	2029: "De stad die u hebt opgegeven, wordt niet ondersteund",
	2030: "Er was een ontbrekende of ongeldige parameter in de aanvraag",
	2031: "Er is een onverwachte fout opgetreden op de verificatieserver tijdens het verwerken van deze parameter. Meld het probleem aan support@csod.com",
	2032: "Ongeldige parameter[file_id]",
	2033: "Ongeldige URL. Controleer opnieuw en probeer het opnieuw",
	2034: "Er is een onverwachte fout opgetreden op de verificatieserver tijdens het verwerken van deze parameters. Meld het probleem aan support@csod.com",
	2035: "De verificatieserver heeft een onverwachte fout aangetroffen tijdens het verwerken van deze AppKey. Meld het probleem aan support@csod.com",
	2036: "Er is een onverwachte fout opgetreden op de verificatieserver. Vernieuw deze pagina. Als het probleem zich blijft voordoen, meldt u het probleem aan support@csod.com",
	2044: "We lijken de vertaling voor deze stap verkeerd te hebben geplaatst. Schakel over naar Standaardtaal en vertaal de stap opnieuw, of neem contact op met onze klantenservice voor meer informatie.",
	2200: "We liepen tegen een probleem aan tijdens het openen van audio \/ video-bedieningselementen. Controleer uw browserinstellingen en probeer dit opnieuw. Als het probleem aanhoudt, meld het ons dan op support@csod.com",
	3061: "U kunt maximaal 5 gids(en) vastmaken",
	4000: "Subcategorie kan niet in een map worden gemaakt als er al een gids is gemaakt",
	4001: "Als een gebruiker al hoofdbeheerder is, kunt u de gebruikersrol niet wijzigen",
	4002: "Deze actie is niet toegestaan in een gepubliceerde gids",
	4003: "Vergrendelde gids kan niet worden gepubliceerd",
	4004: "Deze actie is niet toegestaan in een gepubliceerde map. Maak de publicatie ongedaan",
	4006: "Aanvraag moet behoren tot de gegeven organisatie",
	4007: "U bent niet bevoegd om deze actie uit te voeren",
	4008: "Actie is niet toegestaan voor deze subcategorie",
	4009: "Gids moet worden gepubliceerd",
	4010: "Gids kan niet worden gemaakt in een map met een subcategorie",
	4011: "Om stap(en) te maken, moet u deze handleiding ontgrendelen",
	4012: "Als u stap(en) wilt bewerken, moet u deze handleiding ontgrendelen",
	4013: "Als u stap(en) wilt verwijderen, moet u deze handleiding ontgrendelen",
	4014: "Om stap(en) te kopi\u00ebren en plakken, moet u deze handleiding ontgrendelen",
	3001: "Gids zal binnenkort beschikbaar zijn voor export. Om de status te controleren, gaat u naar 'Taakstatus' onder het accountmenu",
	3002: "Uploaden gestart. Vernieuw of sluit de browser niet totdat het uploaden is voltooid. U kunt de importstatus controleren zodra deze is voltooid",
	3003: "Gebruiker bestaat al",
	3004: "E-mail-ID is al geverifieerd",
	3005: "Deze URL conflicteert met andere toepassingsconfiguraties, probeer een andere URL toe te voegen",
	3006: "Map moet bij dezelfde toepassing horen",
	3007: "Domein bestaat al",
	3008: "Je hebt de maximale limiet van gemaakte gids(en) bereikt",
	3009: "Enqu\u00eate bestaat al in de gegeven gids",
	3010: "De stap moet tot dezelfde gids behoren",
	3011: "Deze organisatie is opgeschort. Neem contact op met uw beheerder",
	3012: "Gids(en) moeten tot dezelfde map behoren",
	3013: "Deze handleiding bestaat al met het gegeven paar objecten en veldnaam",
	3014: "Gebruiker geschorst",
	3015: "Gebruiker al geverifieerd",
	3017: "OTP is succesvol verzonden naar uw e-mailadres",
	3018: "Rol bestaat al",
	3019: "Land bestaat al",
	3020: "Stad bestaat al",
	3023: "Uw organisatie is niet geverifieerd. Neem voor hulp contact op met support@csod.com",
	3024: "JSON-bestand is niet beschikbaar voor deze organisatie",
	3025: "We liepen tegen een probleem aan tijdens de authenticatie. Probeer dit opnieuw. Als het probleem zich blijft voordoen, vernieuwt u de pagina en probeert u het opnieuw",
	3026: "JSON-bestand is niet beschikbaar voor deze handleiding",
	3027: "Geen stap beschikbaar. Ten minste \u00e9\u00e9n stap maken om de gids te publiceren",
	3028: "Maximale publicatielimiet voor tour bereikt",
	3047: "Uw account is tijdelijk vergrendeld vanwege overmatige aanmeldingsfouten. We hebben u een e-mail gestuurd met stappen om het te ontgrendelen. Neem voor meer hulp contact met ons op via support@csod.com",
	3033: "Ongeldige referenties. Neem contact op met support@csod.com of uw beheerder voor verdere hulp.",
	4020: "Er bestaat reeds een concept van deze gids; meerdere concepten van een gids zijn niet toegestaan.",
	4021: "Ongeldige waarden van parameter [envs]",
	2054: "Een oud en nieuw wachtwoord kunnen niet hetzelfde zijn",
	playNextBotTour: "Speel de volgende bottour",
	defaultBotEndingMessage: "We zijn klaar, heel erg bedankt! Nog iets voordat ik begin?",
	loginNext: "Volgend",
	3068: "Uw oude wachtwoord is verlopen stel een nieuw wachtwoord in om in te loggen.",
	includeScreen: "Inclusief screenshot",
	feedbackPlaceholder: "Heeft u feedback? We horen het graag!",
	feedbackOptBtn: "Klik om informatie te markeren of te verbergen",
	highlight: "Markeer",
	send: "Versturen",
	done: "Klaar",
	hide: "Verbergen"
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.pl_PL = {
	currentPage: "Bie\u017c\u0105ca strona",
	myChat: "mychat",
	import: "Import",
	export: "Eksport",
	redirectLivetour: "Graj na \u017cywo",
	guideNotAvailable: "Przewodnik niedost\u0119pny pod bie\u017c\u0105cym adresem URL. Czy chcesz przej\u015b\u0107 do adresu URL przewodnika?",
	downloadPPT: "Pobierz PPT",
	btnYes: "Tak",
	btnNo: "Nie",
	inApp: "W aplikacji",
	live: "Mieszka\u0107",
	resume: "Wznawia\u0107",
	tourCloseConfirm: "Czy naprawd\u0119 chcesz zamkn\u0105\u0107 ten przewodnik?",
	notifSnoozeDonotMsg: "Powiedz nam, czy chcesz obejrze\u0107 to p\u00f3\u017aniej, czy nigdy nie wy\u015bwietla\u0107 powiadomienia?",
	surveyThanksMessage: "Dzi\u0119kujemy za udzielenie odpowiedzi",
	testMePassedMessage: "Gratulacje! Zda\u0142e\u015b",
	testMeFailedMessage: "Oops! Nie uda\u0142o Ci si\u0119",
	testMeGuideEfficiency: "Skuteczno\u015b\u0107 testu:",
	testMeGuideEffectiveness: "Skuteczno\u015b\u0107 testu:",
	testMeTestTime: "Czas testu",
	testMeExpectedTime: "Przewidywany czas",
	testMeStepsTaken: "Podj\u0119te kroki",
	testMeExpectedSteps: "Oczekiwane kroki",
	testMeRetakeTestBtn: "Test poprawkowy",
	testMeResultTitle: "Wynik MyTest",
	ConfirmIfTestMeModeRidirect: "Przewodnik niedost\u0119pny pod bie\u017c\u0105cym adresem URL. Czy chcesz przekierowa\u0107 do adresu URL przewodnika?",
	feedCmt: "Twoja opinia jest dla nas cenna!<br> Powiedz nam, co my\u015blisz w 500 znakach lub mniej",
	doNotShowAgain: "Nie pokazuj ponownie",
	neverShowAgain: "Nigdy wi\u0119cej nie pokazuj",
	skipGuide: "Pomi\u0144 przewodnik",
	surveyErrorMsg: "Prosz\u0119 odpowiedzie\u0107 na co najmniej jedno pytanie",
	redirect: "Przekierowanie",
	liveGuide: "Przewodnik na \u017cywo",
	question: "Pytanie",
	exitGuide: "Przewodnik po wyj\u015bciach",
	continueGuide: "Kontynuuj przewodnik",
	stop: "Zatrzyma\u0107",
	characters: "Znak\u00f3w:",
	survey: "Sonda\u017c",
	testMeStopMessage: "Jeste\u015b w trybie TestMe, kliknij STOP, aby wyj\u015b\u0107",
	testMeFailedErrorMessage: "Nie mo\u017cna osi\u0105gn\u0105\u0107 kroku celu.<br>Kroki {CORRECT_STEPS} zosta\u0142y poprawione z {TOTAL_STEPS}.",
	surveyCommentPlaceholder: "Wpisz tutaj! Maksymalnie 500 znak\u00f3w",
	pushTourSnoozeMsg: "Ta wycieczka z automatycznym uruchomieniem zostanie od\u0142o\u017cona na p\u00f3\u017aniejsz\u0105",
	of: "z",
	wbMplayerTitle: "Samouczki",
	wbDragTooltip: "Przeci\u0105gnij i upu\u015b\u0107 ten odtwarzacz w dowolnym miejscu na stronie",
	dontShowEdResult: "Nie chc\u0119 tego widzie\u0107",
	mPlayerHeaderTitle: "Odtwarzacz Micro",
	closePreview: "Zamknij podgl\u0105d",
	elmNotFound: "Wygl\u0105da na to, \u017ce nie mo\u017cemy znale\u017a\u0107 elementu dla kroku:",
	elmNotFoundInfo: "Upewnij si\u0119, \u017ce jeste\u015b na w\u0142a\u015bciwej stronie, aby odtworzy\u0107 ten krok. Sprawd\u017a r\u00f3wnie\u017c, czy widzisz wybrany element",
	notExists: "Nie istnieje",
	elmNotFoundHeader: "Nie znaleziono elementu Step",
	goToStep: "Przejd\u017a do kroku",
	notFoundStep: "Nie mogli\u015bmy znale\u017a\u0107 elementu dla kroku #",
	pleaseReselect: "Spr\u00f3buj ponownie zaznaczy\u0107 element.",
	stepRuleMatchErr: "B\u0142\u0105d konfiguracji: regu\u0142y krok\u00f3w nie s\u0105 zgodne",
	guideRuleMatchErr: "B\u0142\u0105d konfiguracji: regu\u0142y przewodnika nie s\u0105 zgodne",
	stepNotFoundRedirect: "Krok nie zosta\u0142 znaleziony na tej stronie. Czy chcesz przekierowa\u0107?",
	branchStepMessagePopup: "Wybierz jedno z poni\u017cszych zada\u0144, aby kontynuowa\u0107",
	btnSkip: "Pomin\u0105\u0107",
	kindlyHoverPopup: "Prosimy o najechanie kursorem na ten element, aby otworzy\u0107 wyskakuj\u0105ce okienko",
	stepPlayIsdefinedPopover: "Krok, kt\u00f3ry zamierzasz odtworzy\u0107, jest zdefiniowany w wyskakuj\u0105cym okienku",
	elmNotFoundWestpac: "Nie znaleziono kroku \u2014 ten przewodnik si\u0119 zako\u0144czy",
	findingElementMessage: "Pr\u00f3ba znalezienia kroku. . .",
	badDomain: "Bie\u017c\u0105ca domena i adres URL nie s\u0105 autoryzowane do uruchamiania aplikacji MyGuide. Skontaktuj si\u0119 z administratorem, aby uzyska\u0107 pomoc.",
	hostJsError: "Wygl\u0105da na to, \u017ce na stronie internetowej wyst\u0105pi\u0142 b\u0142\u0105d. Aplikacja MyGuide nie mo\u017ce kontynuowa\u0107",
	remember: "Zapami\u0119taj mnie",
	forgotPass: "Zapomnia\u0142e\u015b has\u0142a?",
	dontHavAcc: "Nie masz konta?",
	loginTitle: "Login",
	loginOtpScreenTitle: "Weryfikowanie has\u0142a jednorazowego w celu zalogowania si\u0119",
	forgetPassTitl: "Zresetuj has\u0142o",
	placeholderEmail: "Identyfikator e-mail",
	placeholderPassword: "Has\u0142o",
	placeholderNewPassword: "Nowe has\u0142o",
	placeholderCurrentPassword: "Aktualne has\u0142o",
	placeholderFirstname: "Imi\u0119",
	placeholderLastname: "Nazwisko",
	placeholderPasswordC: "Potwierd\u017a has\u0142o",
	btnCancel: "Anuluj",
	btnPayment: "Plan uaktualnie\u0144",
	btnSubmit: "Prze\u015blij",
	btnLogin: "Login",
	termsOfUse: "Warunki korzystania z serwisu",
	andLabel: "i",
	policyPrivacy: "Polityka prywatno\u015bci",
	passwordError: "Has\u0142o musi sk\u0142ada\u0107 si\u0119 z 8 cyfr",
	confirmPasswordError: "Has\u0142o i potwierd\u017a has\u0142o musz\u0105 by\u0107 takie same",
	firstnameError: "Podaj prawid\u0142owe imi\u0119",
	lastnameError: "Podaj poprawne nazwisko",
	emailError: "Podaj prawid\u0142owy identyfikator e-mail",
	orgError: "Podaj prawid\u0142owy adres URL organizacji",
	otpError: "Podaj prawid\u0142owy kod jednorazowy",
	placeholderOtp: "Wpisz tutaj sw\u00f3j OTP",
	otpSentDesc: "Je\u015bli podano prawid\u0142owy adres e-mail, zostanie wys\u0142any link resetowania.<br>Je\u015bli nie zobaczysz wiadomo\u015bci e-mail w ci\u0105gu kilku minut, sprawd\u017a, czy w folderze spamu nie ma wiadomo\u015bci e-mail od",
	btnOtpVerify: "Weryfikacja OTP",
	alreadyHavAcc: "Masz ju\u017c konto?",
	smartbiteMessageError: "Wpisz wiadomo\u015b\u0107",
	smartbiteLinkError: "Podaj prawid\u0142owy link",
	noGuidesOnThisPage: "Brak dost\u0119pnych przewodnik\u00f3w na tej stronie!",
	clickOn: "Kliknij na ",
	contactUs: "Skontaktuj si\u0119 z nami",
	search: "Szuka\u0107",
	noRecordFound: "Nie znaleziono \u017cadnych rekord\u00f3w",
	category: "Folder",
	subCategory: "Podfolder",
	confirmPasswordRequired: "Potwierd\u017a wymagane has\u0142o",
	logInWithSSO: "Zaloguj si\u0119 przy u\u017cyciu logowania jednokrotnego",
	inputPlaceHolderSearch: "Wyszukaj dowolny przewodnik",
	noGuideAvailableFor: "Nie znaleziono przewodnika pasuj\u0105cego do wyszukiwania",
	tryModifyingYourSearch: "Spr\u00f3buj zmodyfikowa\u0107 kryteria wyszukiwania",
	signInVerifyYourEmail: "Ten identyfikator e-mail nie zosta\u0142 zweryfikowany. Sprawd\u017a poczt\u0119 e-mail, aby uzyska\u0107 szczeg\u00f3\u0142owe informacje",
	signInVerifyYourAccount: "Wys\u0142ali\u015bmy Ci wiadomo\u015b\u0107 e-mail z OTP. Zweryfikuj swoje konto, aby uko\u0144czy\u0107 proces logowania",
	maintenanceMessage: "Konserwacja w toku. Skontaktuj si\u0119 z nami za po\u015brednictwem support@csod.com",
	back: "Wstecz",
	changePassword: "Zmie\u0144 has\u0142o",
	startTestAuto: "Rozpocznij testowanie automatyzacji",
	msgPasswordChangedSuccess: "Twoje has\u0142o zosta\u0142o pomy\u015blnie zmienione",
	msgConfirmNewPasswordError: "Potwierd\u017a has\u0142o musi by\u0107 takie samo jak nowe has\u0142o",
	enterUrl: "Wpisz adres URL zespo\u0142u",
	dragPlaceholderDropThis: "Upu\u015b\u0107 to ",
	dragPlaceholderHere: " tu",
	termsOfService: "Warunki",
	versionText: "Wersja",
	videoStepSuccessMessage: "Tw\u00f3j krok zosta\u0142 pomy\u015blnie utworzony",
	importSuccessMessage: "Przewodnik zosta\u0142 pomy\u015blnie przes\u0142any. Przejd\u017a do Stan zadania, aby sprawdzi\u0107 stan importu",
	worldBankHelpSupport: "Niekt\u00f3re narz\u0119dzia, takie jak Tooltip(s), mo\u017cna wy\u015bwietla\u0107 tylko w interfejsie",
	helpSupport: "Pomoc i wsparcie",
	page: "strona",
	selectAnApplication: "Wybierz aplikacj\u0119",
	refresh: "Od\u015bwie\u017cy\u0107",
	loginBtn: "Login",
	account: "Rachunek",
	taskStatus: "Stan zadania ",
	logoutBtn: "Wyloguj",
	app: "App:",
	firstStep: "Pierwszy krok",
	lastStep: "Ostatni krok",
	startTest: "Rozpocznij test",
	noInappStepInGuide: "TestMe nie mo\u017ce kontynuowa\u0107, poniewa\u017c w tym przewodniku nie ma wbudowanego kroku",
	settingBtn: "Ustawienia zaawansowane",
	orgSetting: "Ustawienia organizacji",
	close: "Zamyka\u0107",
	pdf: ".PDF",
	downloadPptx: ".PPT",
	giphy: ".GIF",
	downloadWord: "Dokument",
	downloadBlog: "Blog",
	downloadTxt: "Zwyk\u0142y tekst",
	serviceErrorMessage: "Oops! Wyst\u0105pi\u0142 b\u0142\u0105d. Spr\u00f3buj ponownie za jaki\u015b czas. Mo\u017cesz r\u00f3wnie\u017c wys\u0142a\u0107 do nas wiadomo\u015b\u0107 e-mail na adres support@csod.com w celu uzyskania pomocy",
	guidesTab: "Prowadnice",
	noGuideCreatedYet: "\u017baden przewodnik jeszcze nie powsta\u0142!",
	noCategoryCreatedYet: "Nie utworzono jeszcze folderu!",
	chatbot: "mychat",
	notAutorised: "Nie masz wymaganego dost\u0119pu, skontaktuj si\u0119 z Adminem",
	ok: "OK",
	apiError: "B\u0142\u0105d konfiguracji. Skontaktuj si\u0119 z Adminem",
	select: "Wybra\u0107",
	mute_unmute: "Wyciszenie\/wy\u0142\u0105czenie wyciszenia",
	privacyPolicy: "Prywatno\u015b\u0107 i pliki cookie",
	privacyPolicyText: "Aplikacja MyGuide wykorzystuje pliki cookie. Je\u015bli b\u0119dziesz kontynuowa\u0107, zgadzasz si\u0119 na nasze Warunki i Polityk\u0119 prywatno\u015bci oraz wyra\u017casz zgod\u0119 na u\u017cywanie plik\u00f3w cookie",
	terms: "Warunki",
	westPecErrorMessage: "U\u017cytkownik nie jest upowa\u017cniony do dost\u0119pu do tej aplikacji. Zaloguj si\u0119 do sieci Westpac",
	noApp: "Nie znaleziono aplikacji",
	role: "Rola:",
	all: "Ca\u0142y",
	video: "Wideo",
	course: "Kurs",
	article: "Artyku\u0142",
	image: "Obraz",
	pathways: "\u015acie\u017cek",
	preview: "Prapremiera",
	more: "Wi\u0119cej",
	history: "Historia",
	publish: "Publikowa\u0107",
	selectGuideLink: "Wybierz Przewodnik po linku",
	selectGuideBeforeSubmit: "Wybierz przewodnik przed przes\u0142aniem",
	change: "Zmienia\u0107",
	checkNow: "Sprawd\u017a teraz",
	minutes: "protok\u00f3\u0142",
	clickHere: "kliknij tutaj",
	youAlmostDone: "Prawie gotowe!",
	setOrg: ", aby skonfigurowa\u0107 organizacj\u0119",
	apps: "Aplikacje",
	me: "Mnie",
	playStep: "Play Step",
	miniPlayerHelp: "Pomoc",
	defaultMiniPlayerHelp: "Pomoc",
	defaultConfirmIfSlideshowOrRedirect: "Krok niedost\u0119pny pod bie\u017c\u0105cym adresem URL.<br>Czy chcesz przej\u015b\u0107 do adresu URL kroku lub odtworzy\u0107 pokaz slajd\u00f3w?",
	defaultServiceErrorMessage: "Oops! Wyst\u0105pi\u0142 b\u0142\u0105d. Spr\u00f3buj ponownie za jaki\u015b czas. Mo\u017cesz r\u00f3wnie\u017c wys\u0142a\u0107 do nas wiadomo\u015b\u0107 e-mail na adres support@csod.com w celu uzyskania pomocy",
	defaultMaintenanceMessage: "Konserwacja w toku. Skontaktuj si\u0119 z nami za po\u015brednictwem support@csod.com",
	userNotFollowingGuideMessage: "Wygl\u0105da na to, \u017ce wykonujesz kroki, kt\u00f3re nie s\u0105 cz\u0119\u015bci\u0105 tego przewodnika. Je\u015bli nie chcesz ju\u017c post\u0119powa\u0107 zgodnie z przewodnikiem, kliknij Exit Guide",
	defaultUserNotFollowingGuideMessage: "Wygl\u0105da na to, \u017ce wykonujesz kroki, kt\u00f3re nie s\u0105 cz\u0119\u015bci\u0105 tego przewodnika. Je\u015bli nie chcesz ju\u017c post\u0119powa\u0107 zgodnie z przewodnikiem, kliknij Exit Guide",
	resumeGuide: "Przewodnik po \u017cyciorysach",
	defaultResumeGuideMessage: "Przewodnik po \u017cyciorysach",
	backToLogin: "Powr\u00f3t do logowania",
	filters: "Filtry",
	thisApp: "Ta aplikacja",
	thisWebsite: "Ta strona internetowa",
	maxFreeTourLimit: "Maksymalny limit osi\u0105gni\u0119tych wycieczek",
	passwordRegexCheck: "Has\u0142o musi zawiera\u0107 co najmniej 8 znak\u00f3w, w tym co najmniej jedn\u0105 wielk\u0105 i jedn\u0105 ma\u0142\u0105 i jedn\u0105 cyfr\u0119",
	countLimit: "99+",
	microsoftServiceKey: "Wprowad\u017a klucz subskrypcji Microsoft Cognitive Services Speech",
	numberOfImgFile: "Liczba plik\u00f3w graficznych i tekstowych powinna by\u0107 taka sama",
	availableOn: "Dost\u0119pne na",
	tooltipUnpubWorkflowTitle: "Nieopublikowany przep\u0142yw pracy",
	tooltipUnpubParentWorkflowTitle: "Opublikowany przep\u0142yw pracy, nieopublikowane foldery nadrz\u0119dne",
	tooltipPubParentWorkflowTitle: "Opublikowany przep\u0142yw pracy, Opublikowany folder",
	tooltipUnpubTooltipTitle: "Nieopublikowana etykietka narz\u0119dzia",
	tooltipUnpubParentTooltipTitle: "Opublikowana etykietka narz\u0119dzia, nieopublikowane foldery nadrz\u0119dne",
	tooltipPubParentTooltipTitle: "Opublikowana etykietka narz\u0119dzia, Opublikowany folder",
	tooltipUnpubTutorialTitle: "Nieopublikowany samouczek",
	tooltipUnpubParentTutorialTitle: "Opublikowany samouczek, Nieopublikowane foldery nadrz\u0119dne",
	tooltipPubParentTutorialTitle: "Opublikowany samouczek, Opublikowany folder",
	tooltipUnpubSubFolderTitle: "Nieopublikowany podfolder",
	tooltipUnpubSubFolderDesc: "U\u017cywanie podfolder\u00f3w do organizowania linii pomocniczych",
	tooltipUnpubParentSubFolderTitle: "Opublikowany podfolder, Nieopublikowane foldery nadrz\u0119dne",
	tooltipPubParentSubFolderTitle: "Podfolder Opublikowane, Folder Opublikowany",
	tooltipPubParentSubFolderDesc: "Organizuje przewodniki",
	exitSurvey: "Ankieta ko\u0144cowa",
	disable: "Wy\u0142\u0105cza\u0107",
	instructionExitSurvey: "Exit Survey jest wy\u015bwietlany, gdy u\u017cytkownik zamyka przewodnik przed zako\u0144czeniem",
	msgVideoNotFound: "Przesy\u0142aj\u0105c sw\u00f3j film, spr\u00f3buj za jaki\u015b czas",
	msgGiphyNotFound: "Przesy\u0142aj\u0105c GIF, spr\u00f3buj po pewnym czasie",
	userPref: "Moje preferencje",
	manageAccount: "Portal administracyjny",
	analyticsPortal: "Portal aplikacji Insights",
	errorInvalidUrl: "Nieprawid\u0142owy adres URL",
	wbFooterText: "Nauka techniczna ITS",
	navigationMenu: "Menu nawigacji",
	clearHistory: "Wyczy\u015b\u0107 histori\u0119",
	userDeniedMessage: "U\u017cytkownikowi odm\u00f3wiono dost\u0119pu do kamery i mikrofonu",
	pushNotification: "Powiadomienia push",
	viewDetail: "Zobacz szczeg\u00f3\u0142y",
	contactAdmin: "Skontaktuj si\u0119 z support@csod.com lub administratorem, aby uzyska\u0107 dalsz\u0105 pomoc",
	noAppOnDomain: "Aplikacja nie jest przypisana do bie\u017c\u0105cej domeny ",
	noGuidesOnDomain: "Nie znaleziono przewodnik\u00f3w",
	apply: "Zastosowa\u0107",
	invalidLoginCred: "Nieprawid\u0142owe dane logowania. Twoje konto zostanie zablokowane po wielu nieudanych pr\u00f3bach, otrzymasz wiadomo\u015b\u0107 e-mail z pro\u015bb\u0105 o odblokowanie konta lub mo\u017cesz zresetowa\u0107 has\u0142o",
	resendOTP: "Wy\u015blij ponownie OTP",
	sendFeedback: "Wy\u015blij opini\u0119",
	guideNotExist: "Ten przewodnik nie jest dost\u0119pny na tej stronie (B\u0142\u0105d: Niezgodno\u015b\u0107 domeny) ",
	cdnAccess: "<b>Przepraszamy<\/b> <br><br>Wygl\u0105da na to, \u017ce jest problem z naszymi serwerami.<br> Zostali\u015bmy powiadomieni o b\u0142\u0119dzie i poprawimy go tak szybko, jak to mo\u017cliwe",
	tourPlayError: "Przewodnika nie mo\u017cna odtworzy\u0107. B\u0142\u0105d podczas pobierania szczeg\u00f3\u0142\u00f3w przewodnika",
	playerMode: "Tryb gracza",
	closePanel: "Zamknij panel",
	switchCreatorMode: "Prze\u0142\u0105czanie do trybu tw\u00f3rcy",
	extensionContextError: "Kontekst rozszerzenia jest uniewa\u017cniony. Od\u015bwie\u017c stron\u0119, aby kontynuowa\u0107",
	otpSent: "OTP zosta\u0142 ponownie wys\u0142any na Tw\u00f3j adres e-mail, sprawd\u017a swoj\u0105 skrzynk\u0119 odbiorcz\u0105",
	startOver: "Zacznij od nowa",
	yesResume: "Wznawia\u0107",
	dontShowAgain: "Nie pokazuj wi\u0119cej",
	notificationHeader: "Masz powiadomienie!",
	watchLater: "Obejrzyj p\u00f3\u017aniej",
	pushSnoozeMsg: "To powiadomienie zostanie od\u0142o\u017cone na p\u00f3\u017aniej",
	showAgain: "Poka\u017c ponownie",
	noGuidesOnThisTab: "Na tej stronie nie ma \u017cadnych powiadomie\u0144",
	iAgree: "Zgadzam si\u0119",
	viewMore: "Zobacz wi\u0119cej",
	lostInternetConnection: "Utracono po\u0142\u0105czenie z serwerem. Po\u0142\u0105cz si\u0119 ponownie i spr\u00f3buj ponownie",
	next: "Nast\u0119pny",
	recent: "Niedawny",
	older: "Starszy",
	atoz: "A - Z",
	ztoa: "Z - A",
	clear: "Jasny",
	tooltipDontShowAgain: "Powiadomienia nie b\u0119d\u0105 ju\u017c wy\u015bwietlane. Aby w\u0142\u0105czy\u0107 powiadomienie teraz, najed\u017a na nie kursorem i kliknij \"Poka\u017c ponownie\"",
	tooltipWatchLater1: "Powiadomienia s\u0105 odk\u0142adane dla",
	tooltipWatchLater2: "i pojawi si\u0119 p\u00f3\u017aniej. Aby w\u0142\u0105czy\u0107 powiadomienie teraz, najed\u017a na nie kursorem i kliknij \"Poka\u017c ponownie\"",
	hour: "godzina",
	hours: "Godzin",
	insightsTracker: "\u015aledzenie statystyk",
	slideshow: "Pokaz slajd\u00f3w",
	autoplay: "AUTOODTWARZANIE",
	powerFormOldData: "Istniej\u0105ce dane",
	powerFormNewData: "U\u017cyj tego formularza, aby wprowadzi\u0107 nowe dane",
	powerFormNewDataMore: "Je\u015bli istniej\u0105ce dane nie s\u0105 widoczne, kliknij strza\u0142k\u0119 w lewym g\u00f3rnym rogu, aby wy\u015bwietli\u0107 dane. Nast\u0119pnie dane nale\u017cy skopiowa\u0107 do dozwolonego formatu punktowanego.",
	powerFormTitle: "Asystent wprowadzania danych",
	powerFormMandatory: "Jest to pole obowi\u0105zkowe, maksymalny limit znak\u00f3w ",
	belongToOtherApp: "Ten przewodnik jest tworzony w aplikacji {TOURURL}, kt\u00f3ra nale\u017cy do aplikacji {APPNAME}. Skopiuj ten przewodnik do tej aplikacji i spr\u00f3buj ponownie",
	setDomain: "Je\u015bli masz pewno\u015b\u0107, \u017ce {TOURURL} powinien zosta\u0107 dodany w bie\u017c\u0105cych ustawieniach domeny aplikacji, dodaj i spr\u00f3buj ponownie",
	on: "NA",
	off: "OD",
	btnPrev: "Poprzedni",
	btnPrevious: "Poprzedni",
	taskList: "Lista zada\u0144",
	unprocessedVideo: "Poczekaj, a\u017c film b\u0119dzie przetwarzany.",
	searchResult: "Wynik wyszukiwania",
	pleaseWait: "Czekaj!",
	mediaDownloadMsg: "Podczas gdy my przygotowujemy Twoje pliki do pobrania",
	mediaFileNotFound: "Nie znaleziono pliku multimedialnego",
	searchInFolder: "Szukaj w folderze",
	currentPageSearchPlaceholder: "Wyszukaj przewodnik(i) dost\u0119pny na bie\u017c\u0105cej stronie",
	brandLogo: "Logo marki",
	accessibility: "Dost\u0119pno\u015b\u0107",
	replay: "Replay",
	defaultGreetingMessage: "Hej! Witamy w aplikacji MyGuide. Jak mog\u0119 Ci pom\u00f3c? Prosz\u0119 pami\u0119ta\u0107, \u017ce jestem botem.",
	defaultErrorMessage: "Przepraszam, nie zrozumia\u0142em tego. Czy m\u00f3g\u0142by\u015b by\u0107 bardziej konkretny? ",
	defaultEndMessage: "Gotowe, dzi\u0119kujemy bardzo!",
	greetingMessage: "Hej! Witamy w aplikacji MyGuide. Jak mog\u0119 Ci pom\u00f3c? Prosz\u0119 pami\u0119ta\u0107, \u017ce jestem botem.",
	errorMessage: "Przepraszam, nie zrozumia\u0142em tego. Czy m\u00f3g\u0142by\u015b by\u0107 bardziej konkretny? ",
	endMessage: "Gotowe, dzi\u0119kujemy bardzo!",
	guideLnkToRedirect: "U\u017cyj poni\u017cszego linku, aby przekierowa\u0107 na stron\u0119 i odtworzy\u0107 przewodnik",
	otpTimer: "Mo\u017cesz spr\u00f3bowa\u0107 ponownie w ",
	seconds: " Sekund",
	limitWarning: "Osi\u0105gn\u0105\u0142e\u015b maksymalny limit nieudanych pr\u00f3b",
	403: "Wyst\u0105pi\u0142 problem z t\u0105 pro\u015bb\u0105. Spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, zg\u0142o\u015b si\u0119 do nas na support@csod.com",
	405: "Wyst\u0105pi\u0142 problem podczas przetwarzania tego \u017c\u0105dania. Spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, zg\u0142o\u015b si\u0119 do nas na support@csod.com",
	429: "Zbyt wiele pr\u00f3\u015bb",
	1003: "Wyst\u0105pi\u0142 problem podczas uwierzytelniania. Zaloguj si\u0119 ponownie i spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, od\u015bwie\u017c stron\u0119 i spr\u00f3buj ponownie",
	1007: "Wyst\u0105pi\u0142 problem podczas uwierzytelniania. Spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, zg\u0142o\u015b si\u0119 do nas na support@csod.com",
	1005: "<b>Przepraszamy<\/b> <br><br>Wygl\u0105da na to, \u017ce wyst\u0105pi\u0142 problem z \u017c\u0105daniem lub z naszymi serwerami.<br> Zostali\u015bmy powiadomieni o b\u0142\u0119dzie i poprawimy go tak szybko, jak to mo\u017cliwe",
	1009: "Adres e-mail u\u017cytkownika nie jest zweryfikowany",
	1014: "Konserwacja w toku. Skontaktuj si\u0119 z nami za po\u015brednictwem support@csod.com",
	1017: "Wyst\u0105pi\u0142 problem podczas uwierzytelniania. Zaloguj si\u0119 ponownie i spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, zg\u0142o\u015b si\u0119 do nas na support@csod.com",
	1018: "Osi\u0105gni\u0119to maksymalny limit tworzenia krok\u00f3w",
	2000: "Wyst\u0105pi\u0142 problem z t\u0105 pro\u015bb\u0105. Zostali\u015bmy powiadomieni. Spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, zg\u0142o\u015b si\u0119 do nas na support@csod.com",
	2001: "Nieprawid\u0142owe dane logowania. Twoje konto zostanie zablokowane po wielu nieudanych pr\u00f3bach, otrzymasz wiadomo\u015b\u0107 e-mail z pro\u015bb\u0105 o odblokowanie konta lub mo\u017cesz zresetowa\u0107 has\u0142o",
	2002: "Nieprawid\u0142owy lub wygas\u0142y OTP",
	2003: "Przes\u0142any plik nie jest prawid\u0142owym obrazem (obs\u0142ugiwane s\u0105 pliki JPG i PNG)",
	2004: "Sesja wygas\u0142a",
	2005: "Nie mogli\u015bmy \u015bledzi\u0107 tego u\u017cytkownika. Od\u015bwie\u017c i spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, zg\u0142o\u015b si\u0119 do nas na support@csod.com",
	2006: "Adres e-mail jest niepoprawny. Spr\u00f3buj ponownie",
	2007: "Rola u\u017cytkownika jest nieprawid\u0142owa. Spr\u00f3buj ponownie",
	2008: "Nale\u017cy okre\u015bli\u0107 poprawny typ zadania",
	2009: "Dany Wniosek jest niewa\u017cny; M\u00f3g\u0142 zosta\u0107 usuni\u0119ty lub nigdy nie istnia\u0142",
	2010: "Nieprawid\u0142owe parametry wej\u015bciowe. Od\u015bwie\u017c i spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, zg\u0142o\u015b si\u0119 do nas na support@csod.com",
	2011: "Dana Organizacja jest niewa\u017cna; M\u00f3g\u0142 zosta\u0107 usuni\u0119ty lub nigdy nie istnia\u0142",
	2012: "W \u017c\u0105daniu brakowa\u0142o lub by\u0142 on nieprawid\u0142owy. Sprawd\u017a ponownie i spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, zg\u0142o\u015b si\u0119 do nas na support@csod.com",
	2013: "W \u017c\u0105daniu brakowa\u0142o lub by\u0142 on nieprawid\u0142owy. Sprawd\u017a ponownie i spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, zg\u0142o\u015b si\u0119 do nas na support@csod.com",
	2014: "Parametr wymagany dla Super Admina[organization_id]",
	2015: "Podana zawarto\u015b\u0107 danych obrazu jest nieprawid\u0142owa. Sprawd\u017a ponownie i spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, zg\u0142o\u015b si\u0119 do nas na support@csod.com",
	2016: "Nieprawid\u0142owa domena",
	2017: "W \u017c\u0105daniu brakowa\u0142o lub by\u0142 on nieprawid\u0142owy",
	2018: "W \u017c\u0105daniu brakowa\u0142o lub by\u0142 on nieprawid\u0142owy",
	2019: "To, czego szukasz, nie istnieje lub mog\u0142o zosta\u0107 usuni\u0119te",
	2020: "W \u017c\u0105daniu brakowa\u0142o lub by\u0142 on nieprawid\u0142owy",
	2021: "Serwer uwierzytelniania napotka\u0142 nieoczekiwany b\u0142\u0105d podczas pr\u00f3by przetworzenia tego \u017c\u0105dania. Zg\u0142o\u015b problem do support@csod.com",
	2022: "W \u017c\u0105daniu brakowa\u0142o lub by\u0142 on nieprawid\u0142owy. Podaj prawid\u0142owy adres URL zespo\u0142u",
	2023: "Serwer uwierzytelniania napotka\u0142 nieoczekiwany b\u0142\u0105d podczas pr\u00f3by przetworzenia tego \u017c\u0105dania. Zg\u0142o\u015b problem do support@csod.com",
	2024: "Rozmiar pliku powinien by\u0107 mniejszy ni\u017c 5 MB",
	2025: "W \u017c\u0105daniu brakowa\u0142o lub by\u0142 on nieprawid\u0142owy. Podaj prawid\u0142owy adres URL",
	2026: "Has\u0142o musi zawiera\u0107 co najmniej 8 znak\u00f3w, w tym co najmniej jedn\u0105 wielk\u0105 i jedn\u0105 ma\u0142\u0105 i jedn\u0105 cyfr\u0119",
	2027: "Nieprawid\u0142owe has\u0142o",
	2028: "W \u017c\u0105daniu brakowa\u0142o lub by\u0142 on nieprawid\u0142owy",
	2029: "Podane miasto nie jest obs\u0142ugiwane",
	2030: "W \u017c\u0105daniu brakowa\u0142o lub by\u0142 on nieprawid\u0142owy",
	2031: "Serwer uwierzytelniania napotka\u0142 nieoczekiwany b\u0142\u0105d podczas pr\u00f3by przetworzenia tego parametru. Zg\u0142o\u015b problem do support@csod.com",
	2032: "Nieprawid\u0142owy parametr[file_id]",
	2033: "Nieprawid\u0142owy adres URL. Sprawd\u017a ponownie i spr\u00f3buj ponownie",
	2034: "Serwer uwierzytelniania napotka\u0142 nieoczekiwany b\u0142\u0105d podczas przetwarzania tych parametr\u00f3w. Zg\u0142o\u015b problem do support@csod.com",
	2035: "Serwer uwierzytelniania napotka\u0142 nieoczekiwany b\u0142\u0105d podczas przetwarzania tego klucza aplikacji. Zg\u0142o\u015b problem do support@csod.com",
	2036: "Serwer uwierzytelniania napotka\u0142 nieoczekiwany b\u0142\u0105d. Od\u015bwie\u017c t\u0119 stron\u0119. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, zg\u0142o\u015b go do support@csod.com",
	2044: "Wydaje si\u0119, \u017ce \u017ale umie\u015bcili\u015bmy t\u0142umaczenie tego kroku. Prze\u0142\u0105cz si\u0119 na j\u0119zyk domy\u015blny i ponownie przet\u0142umacz krok lub skontaktuj si\u0119 z naszym dzia\u0142em obs\u0142ugi klienta w celu uzyskania dalszych informacji.",
	2200: "Napotkali\u015bmy problem podczas uzyskiwania dost\u0119pu do element\u00f3w steruj\u0105cych audio \/ wideo. Sprawd\u017a ustawienia przegl\u0105darki i spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, zg\u0142o\u015b si\u0119 do nas na support@csod.com",
	3061: "Mo\u017cesz przypi\u0105\u0107 maksymalnie 5 przewodnik\u00f3w",
	4000: "Nie mo\u017cna utworzy\u0107 podkategorii wewn\u0105trz folderu, je\u015bli przewodnik zosta\u0142 ju\u017c utworzony",
	4001: "Je\u015bli u\u017cytkownik jest ju\u017c superadministratorem, nie mo\u017cna zmieni\u0107 roli u\u017cytkownika",
	4002: "Ta akcja nie jest dozwolona w opublikowanym przewodniku",
	4003: "Nie mo\u017cna opublikowa\u0107 zablokowanego przewodnika",
	4004: "Ta akcja nie jest dozwolona w opublikowanym folderze. Cofnij publikacj\u0119",
	4006: "Aplikacja musi nale\u017ce\u0107 do danej organizacji",
	4007: "Nie jeste\u015b upowa\u017cniony do wykonania tej czynno\u015bci",
	4008: "Dzia\u0142anie nie jest dozwolone dla tej podkategorii",
	4009: "Przewodnik musi zosta\u0107 opublikowany",
	4010: "Przewodnika nie mo\u017cna utworzy\u0107 wewn\u0105trz folderu z podkategori\u0105",
	4011: "Aby utworzy\u0107 krok (y), musisz odblokowa\u0107 ten przewodnik",
	4012: "Aby edytowa\u0107 krok (y), musisz odblokowa\u0107 ten przewodnik",
	4013: "Aby usun\u0105\u0107 krok (y), musisz odblokowa\u0107 ten przewodnik",
	4014: "Aby skopiowa\u0107 i wklei\u0107 krok (y), musisz odblokowa\u0107 ten przewodnik",
	3001: "Przewodnik b\u0119dzie dost\u0119pny na eksport wkr\u00f3tce. Aby sprawdzi\u0107 status, przejd\u017a do \"Status zadania\" w menu konta",
	3002: "Przesy\u0142anie rozpocz\u0119te. Nie od\u015bwie\u017caj ani nie zamykaj przegl\u0105darki, dop\u00f3ki przesy\u0142anie nie zostanie zako\u0144czone. Stan importowania mo\u017cna sprawdzi\u0107 po jego zako\u0144czeniu",
	3003: "U\u017cytkownik ju\u017c istnieje",
	3004: "Identyfikator e-mail jest ju\u017c zweryfikowany",
	3005: "Ten adres URL jest w konflikcie z inn\u0105 konfiguracj\u0105 aplikacji, spr\u00f3buj doda\u0107 dowolny inny adres URL",
	3006: "Folder musi nale\u017ce\u0107 do tej samej aplikacji",
	3007: "Domena ju\u017c istnieje",
	3008: "Osi\u0105gn\u0105\u0142e\u015b maksymalny limit utworzonych przewodnik\u00f3w",
	3009: "Ankieta ju\u017c istnieje w danym Przewodniku",
	3010: "Krok musi nale\u017ce\u0107 do tego samego przewodnika",
	3011: "Ta organizacja zostaje zawieszona. Skontaktuj si\u0119 z administratorem",
	3012: "Przewodniki musz\u0105 nale\u017ce\u0107 do tego samego folderu",
	3013: "Ten przewodnik ju\u017c istnieje z dan\u0105 par\u0105 obiekt\u00f3w i nazw\u0105 pola",
	3014: "U\u017cytkownik zawieszony",
	3015: "U\u017cytkownik ju\u017c zweryfikowany",
	3017: "OTP zosta\u0142 pomy\u015blnie wys\u0142any na Tw\u00f3j adres e-mail",
	3018: "Rola ju\u017c istnieje",
	3019: "Kraj ju\u017c istnieje",
	3020: "Miasto ju\u017c istnieje",
	3023: "Twoja organizacja nie jest zweryfikowana. Aby uzyska\u0107 pomoc, skontaktuj si\u0119 z support@csod.com",
	3024: "Plik JSON nie jest dost\u0119pny dla tej organizacji",
	3025: "Wyst\u0105pi\u0142 problem podczas uwierzytelniania. Spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, od\u015bwie\u017c stron\u0119 i spr\u00f3buj ponownie",
	3026: "Plik JSON nie jest dost\u0119pny dla tego przewodnika",
	3027: "Brak dost\u0119pnych krok\u00f3w. Utw\u00f3rz co najmniej jeden krok, aby opublikowa\u0107 przewodnik",
	3028: "Osi\u0105gni\u0119to maksymalny limit publikacji wycieczek",
	3047: "Twoje konto zosta\u0142o tymczasowo zablokowane z powodu nadmiernych b\u0142\u0119d\u00f3w logowania. Wys\u0142ali\u015bmy Ci wiadomo\u015b\u0107 e-mail z instrukcjami, aby j\u0105 odblokowa\u0107. Aby uzyska\u0107 dodatkow\u0105 pomoc, skontaktuj si\u0119 z nami pod adresem support@csod.com",
	3033: "Nieprawid\u0142owe po\u015bwiadczenia. Skontaktuj si\u0119 z support@csod.com lub administratorem, aby uzyska\u0107 dalsz\u0105 pomoc.",
	4020: "Projekt tego przewodnika ju\u017c istnieje; Wielokrotne wersje przewodnika s\u0105 niedozwolone.",
	4021: "Nieprawid\u0142owe warto\u015bci parametru [envs]",
	2054: "Stare i nowe has\u0142o nie mog\u0105 by\u0107 takie same",
	playNextBotTour: "Zagraj w nast\u0119pn\u0105 wycieczk\u0119 bota",
	defaultBotEndingMessage: "Sko\u0144czyli\u015Bmy, dzi\u0119kujemy bardzo! Co\u015B jeszcze, zanim zaczn\u0119?",
	loginNext: "Nast\u0119pny",
	3068: "Twoje stare has\u0142o wygas\u0142o ustaw nowe has\u0142o do logowania.",
	includeScreen: "Do\u0142\u0105cz zrzut ekranu",
	feedbackPlaceholder: "Masz opini\u0119? Chcieliby\u015Bmy to us\u0142ysze\u0107!",
	feedbackOptBtn: "Kliknij, aby zaznaczy\u0107 lub ukry\u0107 informacje",
	highlight: "Atrakcja",
	send: "Wys\u0142a\u0107",
	done: "Zrobione",
	hide: "Ukrywa\u0107"
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.pt_PT = {
	currentPage: "P\u00e1gina Atual",
	myChat: "mychat",
	import: "Importa\u00e7\u00e3o",
	export: "Exporta\u00e7\u00e3o",
	redirectLivetour: "Jogar ao vivo",
	guideNotAvailable: "Guia n\u00e3o dispon\u00edvel no URL atual. Deseja ir para o URL do Guia?",
	downloadPPT: "Baixar PPT",
	btnYes: "Sim",
	btnNo: "N\u00e3o",
	inApp: "No aplicativo",
	live: "Ao vivo",
	resume: "Resumo",
	tourCloseConfirm: "Quer mesmo fechar este Guia?",
	notifSnoozeDonotMsg: "Por favor, diga-nos se voc\u00ea quer assistir isso mais tarde ou nunca mostrar a notifica\u00e7\u00e3o?",
	surveyThanksMessage: "Obrigado por fornecer a sua resposta",
	testMePassedMessage: "Parab\u00e9ns;! Voc\u00ea passou",
	testMeFailedMessage: "Ops! Falhou",
	testMeGuideEfficiency: "Efici\u00eancia do teste:",
	testMeGuideEffectiveness: "Efic\u00e1cia do teste:",
	testMeTestTime: "Tempo de teste",
	testMeExpectedTime: "Tempo esperado",
	testMeStepsTaken: "Passos dados",
	testMeExpectedSteps: "Passos esperados",
	testMeRetakeTestBtn: "Teste de retomada",
	testMeResultTitle: "Resultado do MyTest",
	ConfirmIfTestMeModeRidirect: "Guia n\u00e3o dispon\u00edvel no URL atual. Deseja redirecionar para o URL do Guia?",
	feedCmt: "O seu feedback \u00e9 valioso para n\u00f3s!<br> Diga-nos o que achou em 500 caracteres ou menos",
	doNotShowAgain: "N\u00e3o voltar a aparecer",
	neverShowAgain: "Nunca mais mostrar",
	skipGuide: "Pular Guia",
	surveyErrorMsg: "Por favor, responda pelo menos uma pergunta",
	redirect: "Redirecionamento",
	liveGuide: "Guia ao vivo",
	question: "Pergunta",
	exitGuide: "Guia de Sa\u00edda",
	continueGuide: "Continuar Guia",
	stop: "Parar",
	characters: "Personagens:",
	survey: "Inqu\u00e9rito",
	testMeStopMessage: "Voc\u00ea est\u00e1 no modo TestMe, clique em PARAR para sair",
	testMeFailedErrorMessage: "N\u00e3o foi poss\u00edvel atingir o passo do objetivo.<br>Voc\u00ea tem {CORRECT_STEPS} passos corretos de {TOTAL_STEPS}.",
	surveyCommentPlaceholder: "Digite aqui! Max 500 caracteres",
	pushTourSnoozeMsg: "Este Tour de Lan\u00e7amento Autom\u00e1tico ser\u00e1 dormido para",
	of: "de",
	wbMplayerTitle: "Tutoriais",
	wbDragTooltip: "Arraste e solte este player em qualquer lugar da p\u00e1gina",
	dontShowEdResult: "Eu n\u00e3o quero ver isso",
	mPlayerHeaderTitle: "Micro Jogador",
	closePreview: "Fechar Pr\u00e9-visualiza\u00e7\u00e3o",
	elmNotFound: "Parece que n\u00e3o conseguimos encontrar o elemento para a etapa:",
	elmNotFoundInfo: "Certifique-se de que est\u00e1 na p\u00e1gina correta para reproduzir este passo. Verifique tamb\u00e9m se voc\u00ea pode ver o elemento selecionado",
	notExists: "N\u00e3o existe",
	elmNotFoundHeader: "Elemento Step n\u00e3o encontrado",
	goToStep: "Ir para o passo",
	notFoundStep: "N\u00e3o conseguimos encontrar o elemento para o passo #",
	pleaseReselect: "Por favor, tente selecionar novamente o elemento.",
	stepRuleMatchErr: "Erro de configura\u00e7\u00e3o: As regras de etapa n\u00e3o correspondem",
	guideRuleMatchErr: "Erro de configura\u00e7\u00e3o: as regras do guia n\u00e3o correspondem",
	stepNotFoundRedirect: "Passo n\u00e3o encontrado nesta p\u00e1gina. Deseja redirecionar?",
	branchStepMessagePopup: "Selecione uma das tarefas abaixo para prosseguir",
	btnSkip: "Saltar",
	kindlyHoverPopup: "Por favor, passe o mouse sobre este elemento para abrir o pop-up",
	stepPlayIsdefinedPopover: "O passo que voc\u00ea vai jogar \u00e9 definido no popover",
	elmNotFoundWestpac: "Etapa n\u00e3o encontrada \u2013 Este guia terminar\u00e1",
	findingElementMessage: "Tentando encontrar o passo. . .",
	badDomain: "O dom\u00ednio e o URL atuais n\u00e3o est\u00e3o autorizados a executar o MyGuide. Entre em contato com seu administrador para obter ajuda.",
	hostJsError: "Parece haver um erro na p\u00e1gina da Web. MyGuide n\u00e3o pode continuar",
	remember: "Lembrar-me",
	forgotPass: "Esqueceu-se da palavra-passe?",
	dontHavAcc: "N\u00e3o tem uma conta?",
	loginTitle: "Iniciar sess\u00e3o",
	loginOtpScreenTitle: "Verificar OTP para entrar",
	forgetPassTitl: "Redefinir senha",
	placeholderEmail: "ID de e-mail",
	placeholderPassword: "Palavra-passe",
	placeholderNewPassword: "Nova palavra-passe",
	placeholderCurrentPassword: "Palavra-passe atual",
	placeholderFirstname: "Nome pr\u00f3prio",
	placeholderLastname: "Apelido",
	placeholderPasswordC: "Confirmar palavra-passe",
	btnCancel: "Cancelar",
	btnPayment: "Plano de atualiza\u00e7\u00e3o",
	btnSubmit: "Enviar",
	btnLogin: "Iniciar sess\u00e3o",
	termsOfUse: "Termos de Utiliza\u00e7\u00e3o",
	andLabel: "e",
	policyPrivacy: "Pol\u00edtica de Privacidade",
	passwordError: "A palavra-passe deve ter 8 d\u00edgitos",
	confirmPasswordError: "A senha e a senha de confirma\u00e7\u00e3o devem ser as mesmas",
	firstnameError: "Introduza um nome pr\u00f3prio v\u00e1lido",
	lastnameError: "Introduza um apelido v\u00e1lido",
	emailError: "Introduza um ID de e-mail v\u00e1lido",
	orgError: "Introduza um URL de Organiza\u00e7\u00e3o v\u00e1lido",
	otpError: "Introduza OTP v\u00e1lida",
	placeholderOtp: "Introduza a sua OTP aqui",
	otpSentDesc: "Se um endere\u00e7o de e-mail v\u00e1lido tiver sido fornecido, um link de redefini\u00e7\u00e3o ser\u00e1 enviado para voc\u00ea.<br>Se voc\u00ea n\u00e3o vir o e-mail em poucos minutos, verifique sua pasta de spam para um e-mail de",
	btnOtpVerify: "Verificar OTP",
	alreadyHavAcc: "J\u00e1 tem uma conta?",
	smartbiteMessageError: "Introduza a mensagem",
	smartbiteLinkError: "Introduza uma liga\u00e7\u00e3o v\u00e1lida",
	noGuidesOnThisPage: "Nenhum guia dispon\u00edvel nesta p\u00e1gina!",
	clickOn: "Clique em ",
	contactUs: "Contacte-nos",
	search: "Pesquisar",
	noRecordFound: "N\u00e3o foram encontrados registos",
	category: "Pasta",
	subCategory: "Subpasta",
	confirmPasswordRequired: "Confirmar palavra-passe necess\u00e1ria",
	logInWithSSO: "Login com SSO",
	inputPlaceHolderSearch: "Procurar qualquer Guia",
	noGuideAvailableFor: "Nenhum guia foi encontrado para corresponder \u00e0 sua pesquisa",
	tryModifyingYourSearch: "Tente modificar os crit\u00e9rios de pesquisa",
	signInVerifyYourEmail: "Este ID de e-mail n\u00e3o foi verificado. Por favor, verifique o seu e-mail para mais detalhes",
	signInVerifyYourAccount: "Envi\u00e1mos-lhe um e-mail com uma OTP. Verifique a sua conta para concluir o processo de in\u00edcio de sess\u00e3o",
	maintenanceMessage: "Manuten\u00e7\u00e3o em curso. Entre em contato conosco via support@csod.com",
	back: "Voltar",
	changePassword: "Alterar palavra-passe",
	startTestAuto: "Iniciar testes de automa\u00e7\u00e3o",
	msgPasswordChangedSuccess: "A sua palavra-passe foi alterada com sucesso",
	msgConfirmNewPasswordError: "Confirmar senha deve ser o mesmo que Nova senha",
	enterUrl: "Insira o URL da equipe",
	dragPlaceholderDropThis: "Solte este ",
	dragPlaceholderHere: " aqui",
	termsOfService: "Termos e Condi\u00e7\u00f5es",
	versionText: "Vers\u00e3o",
	videoStepSuccessMessage: "O seu passo foi criado com sucesso",
	importSuccessMessage: "Guia carregado com sucesso. V\u00e1 para Status da Tarefa para verificar o status de importa\u00e7\u00e3o",
	worldBankHelpSupport: "Algumas ferramentas, como dica(s) de ferramenta, s\u00f3 podem ser visualizadas na interface",
	helpSupport: "Ajuda e Suporte",
	page: "p\u00e1gina",
	selectAnApplication: "Selecione uma Aplica\u00e7\u00e3o",
	refresh: "Atualizar",
	loginBtn: "Iniciar sess\u00e3o",
	account: "Conta",
	taskStatus: "Estado da tarefa ",
	logoutBtn: "Sair",
	app: "Aplica\u00e7\u00e3o:",
	firstStep: "Primeiro Passo",
	lastStep: "\u00daltima Etapa",
	startTest: "Iniciar teste",
	noInappStepInGuide: "O TestMe n\u00e3o pode continuar, pois n\u00e3o h\u00e1 nenhuma etapa embutida neste guia",
	settingBtn: "Configura\u00e7\u00f5es avan\u00e7adas",
	orgSetting: "Configura\u00e7\u00f5es da organiza\u00e7\u00e3o",
	close: "Fechar",
	pdf: ".PDF",
	downloadPptx: ".PPT",
	giphy: ".GIF",
	downloadWord: "Documento",
	downloadBlog: "Blogue",
	downloadTxt: "Texto simples",
	serviceErrorMessage: "Ops! Ocorreu um erro. Por favor, tente novamente depois de algum tempo. Voc\u00ea tamb\u00e9m pode nos enviar um e-mail para support@csod.com para qualquer assist\u00eancia",
	guidesTab: "Guias",
	noGuideCreatedYet: "Nenhum Guia criado ainda!",
	noCategoryCreatedYet: "Nenhuma pasta criada ainda!",
	chatbot: "mychat",
	notAutorised: "Voc\u00ea n\u00e3o tem o acesso necess\u00e1rio, entre em contato com o administrador",
	ok: "OK",
	apiError: "Erro de configura\u00e7\u00e3o. Entre em contato com o administrador",
	select: "Selecione",
	mute_unmute: "Mudo\/Sem mudo",
	privacyPolicy: "Privacidade & cookies",
	privacyPolicyText: "O MyGuide utiliza cookies. Se continuar, est\u00e1 a concordar com os nossos Termos e Pol\u00edtica de Privacidade e a dar-nos consentimento para utilizar cookies",
	terms: "Termos e Condi\u00e7\u00f5es",
	westPecErrorMessage: "N\u00e3o est\u00e1 autorizado a aceder a esta aplica\u00e7\u00e3o. Inicie sess\u00e3o na rede da Westpac",
	noApp: "Nenhuma aplica\u00e7\u00e3o encontrada",
	role: "Fun\u00e7\u00e3o:",
	all: "Tudo",
	video: "V\u00eddeo",
	course: "Curso",
	article: "Artigo",
	image: "Imagem",
	pathways: "Percursos",
	preview: "Previsualizar",
	more: "Saber mais",
	history: "Hist\u00f3ria",
	publish: "Publicar",
	selectGuideLink: "Por favor, selecione Guia para vincular",
	selectGuideBeforeSubmit: "Selecione um Guia antes de enviar",
	change: "Alterar",
	checkNow: "Verifique agora",
	minutes: "minutos",
	clickHere: "clique aqui",
	youAlmostDone: "Voc\u00ea est\u00e1 quase pronto!",
	setOrg: "para configurar a sua organiza\u00e7\u00e3o",
	apps: "Aplica\u00e7\u00f5es",
	me: "Eu",
	playStep: "Passo de Reprodu\u00e7\u00e3o",
	miniPlayerHelp: "Ajuda",
	defaultMiniPlayerHelp: "Ajuda",
	defaultConfirmIfSlideshowOrRedirect: "Etapa n\u00e3o dispon\u00edvel no URL atual.<br>Deseja ir para o URL da etapa ou reproduzir uma apresenta\u00e7\u00e3o de slides?",
	defaultServiceErrorMessage: "Ops! Ocorreu um erro. Por favor, tente novamente depois de algum tempo. Voc\u00ea tamb\u00e9m pode nos enviar um e-mail para support@csod.com para qualquer assist\u00eancia",
	defaultMaintenanceMessage: "Manuten\u00e7\u00e3o em curso. Entre em contato conosco via support@csod.com",
	userNotFollowingGuideMessage: "Parece que voc\u00ea est\u00e1 executando etapas que n\u00e3o fazem parte deste Guia. Se n\u00e3o quiser mais seguir o Guia, clique em Guia de Sa\u00edda",
	defaultUserNotFollowingGuideMessage: "Parece que voc\u00ea est\u00e1 executando etapas que n\u00e3o fazem parte deste Guia. Se n\u00e3o quiser mais seguir o Guia, clique em Guia de Sa\u00edda",
	resumeGuide: "Guia de Curr\u00edculo",
	defaultResumeGuideMessage: "Guia de Curr\u00edculo",
	backToLogin: "Voltar ao Login",
	filters: "Filtros",
	thisApp: "Este aplicativo",
	thisWebsite: "Este site",
	maxFreeTourLimit: "Limite m\u00e1ximo de passeios atingidos",
	passwordRegexCheck: "A palavra-passe deve conter um m\u00ednimo de 8 caracteres, incluindo pelo menos um valor mai\u00fasculo, um min\u00fasculo e um valor num\u00e9rico",
	countLimit: "99+",
	microsoftServiceKey: "Introduza a sua chave de subscri\u00e7\u00e3o do Microsoft Cognitive Services Speech",
	numberOfImgFile: "O n\u00famero de arquivos de imagem e arquivos de texto deve ser o mesmo",
	availableOn: "Dispon\u00edvel em",
	tooltipUnpubWorkflowTitle: "Fluxo de trabalho n\u00e3o publicado",
	tooltipUnpubParentWorkflowTitle: "Fluxo de trabalho publicado, pasta(s) pai(s) n\u00e3o publicada(s)",
	tooltipPubParentWorkflowTitle: "Fluxo de trabalho publicado, pasta publicada",
	tooltipUnpubTooltipTitle: "Dica de ferramenta n\u00e3o publicada",
	tooltipUnpubParentTooltipTitle: "Dica de ferramenta publicada, pasta(s) pai(s) n\u00e3o publicada(s)",
	tooltipPubParentTooltipTitle: "Dica de ferramenta publicada, pasta publicada",
	tooltipUnpubTutorialTitle: "Tutorial in\u00e9dito",
	tooltipUnpubParentTutorialTitle: "Tutorial publicado, pasta(s) pai(s) n\u00e3o publicada(s)",
	tooltipPubParentTutorialTitle: "Tutorial publicado, pasta publicada",
	tooltipUnpubSubFolderTitle: "Subpasta n\u00e3o publicada",
	tooltipUnpubSubFolderDesc: "Usar subpastas para organizar Guias",
	tooltipUnpubParentSubFolderTitle: "Subpasta publicada, pasta(s) pai(s) n\u00e3o publicada(s)",
	tooltipPubParentSubFolderTitle: "Subpasta publicada, pasta publicada",
	tooltipPubParentSubFolderDesc: "Organiza Guias",
	exitSurvey: "Inqu\u00e9rito de Sa\u00edda",
	disable: "Desativar",
	instructionExitSurvey: "A pesquisa de sa\u00edda \u00e9 mostrada quando um usu\u00e1rio sai de um guia antes da conclus\u00e3o",
	msgVideoNotFound: "Carregando seu v\u00eddeo, tente depois de algum tempo",
	msgGiphyNotFound: "Carregando seu GIF, por favor, tente depois de algum tempo",
	userPref: "As minhas prefer\u00eancias",
	manageAccount: "Portal de administra\u00e7\u00e3o",
	analyticsPortal: "Portal de insights",
	errorInvalidUrl: "N\u00e3o \u00e9 um URL v\u00e1lido",
	wbFooterText: "Aprendizagem T\u00e9cnica ITS",
	navigationMenu: "Menu de navega\u00e7\u00e3o",
	clearHistory: "Limpar hist\u00f3rico",
	userDeniedMessage: "Usu\u00e1rio negado permiss\u00f5es de acesso \u00e0 c\u00e2mera e microfone",
	pushNotification: "Notifica\u00e7\u00f5es push",
	viewDetail: "Ver Detalhe",
	contactAdmin: "Entre em contato com support@csod.com ou seu administrador para obter mais assist\u00eancia",
	noAppOnDomain: "O aplicativo n\u00e3o est\u00e1 atribu\u00eddo para o dom\u00ednio atual ",
	noGuidesOnDomain: "Nenhum guia encontrado",
	apply: "Candidatar-se",
	invalidLoginCred: "Credenciais de login inv\u00e1lidas. Sua conta ser\u00e1 bloqueada ap\u00f3s v\u00e1rias tentativas malsucedidas, voc\u00ea receber\u00e1 um e-mail para desbloquear sua conta ou poder\u00e1 redefinir sua senha",
	resendOTP: "Reenviar OTP",
	sendFeedback: "Enviar coment\u00e1rios",
	guideNotExist: "Este Guia n\u00e3o est\u00e1 dispon\u00edvel nesta p\u00e1gina (Erro: Incompatibilidade de dom\u00ednio) ",
	cdnAccess: "<b>Lamentamos<\/b> <br><br>Parece que h\u00e1 um problema com nossos servidores.<br> Fomos notificados do erro e iremos corrigi-lo o mais rapidamente poss\u00edvel",
	tourPlayError: "Guia n\u00e3o pode ser jogado. Erro ao recuperar detalhes do guia",
	playerMode: "Modo de jogador",
	closePanel: "Fechar painel",
	switchCreatorMode: "Mudar para o Modo de Criador",
	extensionContextError: "O contexto da extens\u00e3o \u00e9 invalidado. Por favor, recarregue a p\u00e1gina para continuar",
	otpSent: "OTP foi re-enviado para o seu e-mail, por favor, verifique a sua caixa de entrada",
	startOver: "Recome\u00e7ar",
	yesResume: "Resumo",
	dontShowAgain: "N\u00e3o mostrar novamente",
	notificationHeader: "Voc\u00ea tem uma notifica\u00e7\u00e3o!",
	watchLater: "Assista mais tarde",
	pushSnoozeMsg: "Esta notifica\u00e7\u00e3o ser\u00e1 suspensa por",
	showAgain: "Mostrar novamente",
	noGuidesOnThisTab: "N\u00e3o h\u00e1 notifica\u00e7\u00f5es nesta p\u00e1gina",
	iAgree: "Concordo",
	viewMore: "Ver Mais",
	lostInternetConnection: "Perda de conex\u00e3o com o servidor. Reconecte-se e tente novamente",
	next: "Seguinte",
	recent: "Recentes",
	older: "Mais antigos",
	atoz: "A - Z",
	ztoa: "Z - A",
	clear: "Limpar",
	tooltipDontShowAgain: "As notifica\u00e7\u00f5es n\u00e3o aparecer\u00e3o mais. Para ativar uma notifica\u00e7\u00e3o agora, passe o mouse sobre ela e clique em 'Mostrar novamente'",
	tooltipWatchLater1: "As notifica\u00e7\u00f5es s\u00e3o suspensas para",
	tooltipWatchLater2: "e aparecer\u00e1 depois disso. Para ativar uma notifica\u00e7\u00e3o agora, passe o mouse sobre ela e clique em 'Mostrar novamente'",
	hour: "hora",
	hours: "horas",
	insightsTracker: "Rastreador de insights",
	slideshow: "Apresenta\u00e7\u00e3o de slides",
	autoplay: "REPRODU\u00c7\u00c3O AUTOM\u00c1TICA",
	powerFormOldData: "Dados existentes",
	powerFormNewData: "Use este formul\u00e1rio para inserir novos dados",
	powerFormNewDataMore: "Se os seus dados existentes n\u00e3o estiverem vis\u00edveis, clique na seta no canto superior esquerdo para visualizar os seus dados. Em seguida, os dados precisam ser copiados para o formato com marcadores permitido.",
	powerFormTitle: "Assistente de Entrada de Dados",
	powerFormMandatory: "Este \u00e9 um campo obrigat\u00f3rio, limite m\u00e1ximo de caracteres ",
	belongToOtherApp: "Este Guia \u00e9 criado em {TOURURL}, que pertence ao aplicativo {APPNAME}. Por favor, copie este Guia nesse aplicativo e tente novamente",
	setDomain: "Se voc\u00ea tiver certeza de que o {TOURURL} deve ser adicionado nas configura\u00e7\u00f5es atuais do dom\u00ednio do aplicativo, adicione e tente novamente",
	on: "EM",
	off: "DESLIGADO",
	btnPrev: "Anterior",
	btnPrevious: "Anterior",
	taskList: "Lista de Tarefas",
	unprocessedVideo: "Aguarde enquanto o v\u00eddeo est\u00e1 a ser processado.",
	searchResult: "Resultado da Pesquisa",
	pleaseWait: "Aguarde!",
	mediaDownloadMsg: "Enquanto preparamos os seus ficheiros para download",
	mediaFileNotFound: "Arquivo de m\u00eddia n\u00e3o encontrado",
	searchInFolder: "Pesquisar na pasta",
	currentPageSearchPlaceholder: "Pesquisar Guia(s) dispon\u00edvel(is) na p\u00e1gina atual",
	brandLogo: "Log\u00f3tipo da Marca",
	accessibility: "Acessibilidade",
	replay: "Repeti\u00e7\u00e3o",
	defaultGreetingMessage: "Ei! Bem-vindo ao MyGuide. Como posso ajud\u00e1-lo? Por favor, tenha em mente que eu sou um bot.",
	defaultErrorMessage: "Sinto muito, n\u00e3o entendi isso. Poderia ser mais espec\u00edfico? ",
	defaultEndMessage: "Estamos feitos, muito obrigado!",
	greetingMessage: "Ei! Bem-vindo ao MyGuide. Como posso ajud\u00e1-lo? Por favor, tenha em mente que eu sou um bot.",
	errorMessage: "Sinto muito, n\u00e3o entendi isso. Poderia ser mais espec\u00edfico? ",
	endMessage: "Estamos feitos, muito obrigado!",
	guideLnkToRedirect: "Use o link a seguir para redirecionar para a p\u00e1gina e reproduzir o guia",
	otpTimer: "Pode tentar novamente em ",
	seconds: " segundos",
	limitWarning: "Atingiu o limite m\u00e1ximo de tentativas infrut\u00edferas",
	403: "Deparamo-nos com um problema com este pedido. Por favor, tente isso novamente. Se o problema persistir, informe-nos em support@csod.com",
	405: "Deparamo-nos com um problema ao processar este pedido. Por favor, tente isso novamente. Se o problema persistir, informe-nos em support@csod.com",
	429: "Demasiados pedidos",
	1003: "Deparamo-nos com um problema durante a autentica\u00e7\u00e3o. Por favor, fa\u00e7a login novamente e tente novamente. Se o problema persistir, atualize a p\u00e1gina e tente novamente",
	1007: "Deparamo-nos com um problema durante a autentica\u00e7\u00e3o. Por favor, tente novamente. Se o problema persistir, informe-nos em support@csod.com",
	1005: "<b>Lamentamos<\/b> <br><br>Parece que h\u00e1 um problema com o pedido ou com os nossos servidores.<br> Fomos notificados do erro e iremos corrigi-lo o mais rapidamente poss\u00edvel",
	1009: "O e-mail do usu\u00e1rio n\u00e3o \u00e9 verificado",
	1014: "Manuten\u00e7\u00e3o em curso. Entre em contato conosco via support@csod.com",
	1017: "Deparamo-nos com um problema durante a autentica\u00e7\u00e3o. Por favor, fa\u00e7a login novamente e tente novamente. Se o problema persistir, informe-nos em support@csod.com",
	1018: "Voc\u00ea atingiu o limite m\u00e1ximo para criar etapas",
	2000: "Deparamo-nos com um problema com este pedido. Fomos notificados. Por favor, tente isso novamente. Se o problema persistir, informe-nos em support@csod.com",
	2001: "Credenciais de login inv\u00e1lidas. Sua conta ser\u00e1 bloqueada ap\u00f3s v\u00e1rias tentativas malsucedidas, voc\u00ea receber\u00e1 um e-mail para desbloquear sua conta ou poder\u00e1 redefinir sua senha",
	2002: "OTP inv\u00e1lida ou expirada",
	2003: "O ficheiro carregado n\u00e3o \u00e9 uma imagem v\u00e1lida (os ficheiros JPG e PNG s\u00e3o suportados)",
	2004: "A sess\u00e3o expirou",
	2005: "N\u00e3o foi poss\u00edvel rastrear este usu\u00e1rio. Atualize e tente novamente. Se o problema persistir, informe-nos em support@csod.com",
	2006: "O endere\u00e7o de e-mail est\u00e1 incorreto. Por favor, tente novamente",
	2007: "Fun\u00e7\u00e3o de usu\u00e1rio inv\u00e1lida. Por favor, tente novamente",
	2008: "Voc\u00ea deve especificar um tipo de tarefa correto",
	2009: "O pedido apresentado \u00e9 inv\u00e1lido; poderia ter sido eliminado ou nunca existiu",
	2010: "Par\u00e2metros de entrada inv\u00e1lidos. Atualize e tente novamente. Se o problema persistir, informe-nos em support@csod.com",
	2011: "A Organiza\u00e7\u00e3o dada \u00e9 inv\u00e1lida; poderia ter sido eliminado ou nunca existiu",
	2012: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o. Verifique novamente e tente novamente. Se o problema persistir, informe-nos em support@csod.com",
	2013: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o. Verifique novamente e tente novamente. Se o problema persistir, informe-nos em support@csod.com",
	2014: "Par\u00e2metro necess\u00e1rio para Super Admin[organization_id]",
	2015: "O conte\u00fado dos dados de imagem fornecido \u00e9 inv\u00e1lido. Verifique novamente e tente novamente. Se o problema persistir, informe-nos em support@csod.com",
	2016: "Dom\u00ednio inv\u00e1lido",
	2017: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o",
	2018: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o",
	2019: "O que procura n\u00e3o existe ou pode ter sido eliminado",
	2020: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o",
	2021: "O servidor de autentica\u00e7\u00e3o encontrou um erro inesperado ao tentar processar essa solicita\u00e7\u00e3o. Por favor, comunique o problema ao support@csod.com",
	2022: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o. Introduza um URL de Equipa v\u00e1lido",
	2023: "O servidor de autentica\u00e7\u00e3o encontrou um erro inesperado ao tentar processar essa solicita\u00e7\u00e3o. Por favor, comunique o problema ao support@csod.com",
	2024: "O tamanho do ficheiro deve ser inferior a 5 MB",
	2025: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o. Introduza um URL v\u00e1lido",
	2026: "A palavra-passe deve conter um m\u00ednimo de 8 caracteres, incluindo pelo menos um valor mai\u00fasculo, um min\u00fasculo e um valor num\u00e9rico",
	2027: "Palavra-passe inv\u00e1lida",
	2028: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o",
	2029: "A cidade que voc\u00ea forneceu n\u00e3o \u00e9 suportada",
	2030: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o",
	2031: "O servidor de autentica\u00e7\u00e3o encontrou um erro inesperado ao tentar processar esse par\u00e2metro. Por favor, comunique o problema ao support@csod.com",
	2032: "Par\u00e2metro inv\u00e1lido[file_id]",
	2033: "URL inv\u00e1lido. Por favor, verifique novamente e tente novamente",
	2034: "O servidor de autentica\u00e7\u00e3o encontrou um erro inesperado ao processar esses par\u00e2metros. Por favor, comunique o problema ao support@csod.com",
	2035: "O servidor de autentica\u00e7\u00e3o encontrou um erro inesperado ao processar esta AppKey. Por favor, comunique o problema ao support@csod.com",
	2036: "O servidor de autentica\u00e7\u00e3o encontrou um erro inesperado. Por favor, atualize esta p\u00e1gina. Se o problema persistir, comunique o problema a support@csod.com",
	2044: "Parece que perdemos a tradu\u00e7\u00e3o para este passo. Mude para o idioma padr\u00e3o e traduza novamente a etapa, ou entre em contato com nosso suporte ao cliente para obter mais detalhes.",
	2200: "N\u00f3s nos deparamos com um problema ao acessar controles de \u00e1udio \/ v\u00eddeo. Verifique as configura\u00e7\u00f5es do seu navegador e tente isso novamente. Se o problema persistir, informe-nos em support@csod.com",
	3061: "Pode fixar apenas 5 guia(s)",
	4000: "A subcategoria n\u00e3o pode ser criada dentro de uma pasta, se um Guia j\u00e1 estiver criado",
	4001: "Se um usu\u00e1rio j\u00e1 for um Superadministrador, n\u00e3o ser\u00e1 poss\u00edvel alterar a Fun\u00e7\u00e3o de Usu\u00e1rio",
	4002: "Esta a\u00e7\u00e3o n\u00e3o \u00e9 permitida em um Guia publicado",
	4003: "O Guia Bloqueado n\u00e3o pode ser publicado",
	4004: "Esta a\u00e7\u00e3o n\u00e3o \u00e9 permitida em uma pasta publicada. Por favor, cancele a publica\u00e7\u00e3o",
	4006: "A candidatura deve pertencer \u00e0 organiza\u00e7\u00e3o em causa",
	4007: "Voc\u00ea n\u00e3o est\u00e1 autorizado a executar esta a\u00e7\u00e3o",
	4008: "N\u00e3o \u00e9 permitida a a\u00e7\u00e3o para esta subcategoria",
	4009: "Guia deve ser publicado",
	4010: "O guia n\u00e3o pode ser criado dentro de uma pasta com uma subcategoria",
	4011: "Para criar passo(s), voc\u00ea precisa desbloquear este Guia",
	4012: "Para editar passo(s), precisa de desbloquear este Guia",
	4013: "Para excluir etapas, voc\u00ea precisa desbloquear este Guia",
	4014: "Para copiar e colar passo(s), voc\u00ea precisa desbloquear este Guia",
	3001: "Guia estar\u00e1 dispon\u00edvel para exporta\u00e7\u00e3o em breve. Para verificar o estado, v\u00e1 a 'Estado da Tarefa' no menu da conta",
	3002: "O carregamento foi iniciado. Por favor, n\u00e3o atualize ou feche o navegador at\u00e9 que o upload seja conclu\u00eddo. Voc\u00ea pode verificar o status da importa\u00e7\u00e3o assim que ela for conclu\u00edda",
	3003: "O usu\u00e1rio j\u00e1 existe",
	3004: "O ID do e-mail j\u00e1 est\u00e1 verificado",
	3005: "Este URL entra em conflito com outra configura\u00e7\u00e3o de aplica\u00e7\u00e3o, tente adicionar qualquer outro URL",
	3006: "A pasta deve pertencer ao mesmo aplicativo",
	3007: "O dom\u00ednio j\u00e1 existe",
	3008: "Atingiu o limite m\u00e1ximo do(s) Guia(s) criado(s)",
	3009: "O inqu\u00e9rito j\u00e1 existe no Guia fornecido",
	3010: "O Passo deve pertencer ao mesmo Guia",
	3011: "Esta Organiza\u00e7\u00e3o est\u00e1 suspensa. Entre em contato com seu administrador",
	3012: "O(s) guia(s) deve(m) pertencer \u00e0 mesma pasta",
	3013: "Este Guia j\u00e1 existe com o par de objetos e o nome do campo",
	3014: "Usu\u00e1rio suspenso",
	3015: "Usu\u00e1rio j\u00e1 verificado",
	3017: "OTP foi enviado com sucesso para o seu endere\u00e7o de e-mail",
	3018: "A fun\u00e7\u00e3o j\u00e1 existe",
	3019: "Pa\u00eds j\u00e1 existe",
	3020: "Cidade j\u00e1 existe",
	3023: "Sua organiza\u00e7\u00e3o n\u00e3o \u00e9 verificada. Para obter ajuda, entre em contato com support@csod.com",
	3024: "O arquivo JSON n\u00e3o est\u00e1 dispon\u00edvel para esta organiza\u00e7\u00e3o",
	3025: "Deparamo-nos com um problema durante a autentica\u00e7\u00e3o. Por favor, tente isso novamente. Se o problema persistir, atualize a p\u00e1gina e tente novamente",
	3026: "O arquivo JSON n\u00e3o est\u00e1 dispon\u00edvel para este Guia",
	3027: "Nenhum passo dispon\u00edvel. Crie pelo menos uma etapa para publicar o Guia",
	3028: "Limite m\u00e1ximo de publica\u00e7\u00e3o da turn\u00ea atingido",
	3047: "A sua conta foi temporariamente bloqueada devido a falhas excessivas de in\u00edcio de sess\u00e3o. Enviamos-lhe um e-mail com passos para desbloque\u00e1-lo. Para mais assist\u00eancia, por favor contacte-nos em support@csod.com",
	3033: "Credenciais inv\u00e1lidas. Entre em contato com support@csod.com ou seu administrador para obter mais assist\u00eancia.",
	4020: "J\u00e1 existe um projeto deste Guia; n\u00e3o s\u00e3o permitidos v\u00e1rios rascunhos de um Guia.",
	4021: "Valores inv\u00e1lidos do par\u00e2metro [envs]",
	2054: "Uma senha antiga e nova n\u00e3o pode ser a mesma",
	playNextBotTour: "Reproduzir o pr\u00F3ximo tour de bot",
	defaultBotEndingMessage: "Terminamos, muito obrigado! Mais alguma coisa antes de eu come\u00E7ar?",
	loginNext: "Seguinte",
	3068: "Sua senha antiga expirou. Defina uma nova senha para login.",
	includeScreen: "Dołącz zrzut ekranu",
	feedbackPlaceholder: "Masz opini\u0119? Chcieliby\u015Bmy to us\u0142ysze\u0107!",
	feedbackOptBtn: "Kliknij, aby zaznaczy\u0107 lub ukry\u0107 informacje",
	highlight: "Atrakcja",
	send: "Wys\u0142a\u0107",
	done: "Zrobione",
	hide: "Ukrywa\u0107"
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.ru_RU = {
	currentPage: "\u0422\u0435\u043a\u0443\u0449\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430",
	myChat: "\u043c\u0430\u0439\u0447\u0430\u0442",
	import: "\u0418\u043c\u043f\u043e\u0440\u0442",
	export: "\u042d\u043a\u0441\u043f\u043e\u0440\u0442",
	redirectLivetour: "\u0418\u0433\u0440\u0430\u0442\u044c \u0432\u0436\u0438\u0432\u0443\u044e",
	guideNotAvailable: "\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u043f\u043e \u0442\u0435\u043a\u0443\u0449\u0435\u043c\u0443 URL-\u0430\u0434\u0440\u0435\u0441\u0443. \u0412\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u043f\u043e URL-\u0430\u0434\u0440\u0435\u0441\u0443 \u0433\u0438\u0434\u0430?",
	downloadPPT: "\u0421\u043a\u0430\u0447\u0430\u0442\u044c PPT",
	btnYes: "\u0414\u0430",
	btnNo: "\u041d\u0435\u0442",
	inApp: "\u0412 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438",
	live: "\u0416\u0438\u0442\u044c",
	resume: "\u0420\u0435\u0437\u044e\u043c\u0435",
	tourCloseConfirm: "\u0412\u044b \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0445\u043e\u0442\u0438\u0442\u0435 \u0437\u0430\u043a\u0440\u044b\u0442\u044c \u044d\u0442\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e?",
	notifSnoozeDonotMsg: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043d\u0430\u043c, \u0435\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u044d\u0442\u043e \u043f\u043e\u0437\u0436\u0435 \u0438\u043b\u0438 \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435?",
	surveyThanksMessage: "\u0421\u043f\u0430\u0441\u0438\u0431\u043e \u0437\u0430 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u043e\u0442\u0432\u0435\u0442",
	testMePassedMessage: "\u041f\u043e\u0437\u0434\u0440\u0430\u0432\u043b\u044f\u044e! \u0412\u044b \u043f\u0440\u043e\u0448\u043b\u0438",
	testMeFailedMessage: "\u041e\u0439! \u0412\u044b \u043f\u043e\u0442\u0435\u0440\u043f\u0435\u043b\u0438 \u043d\u0435\u0443\u0434\u0430\u0447\u0443",
	testMeGuideEfficiency: "\u042d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u0442\u0435\u0441\u0442\u0430:",
	testMeGuideEffectiveness: "\u042d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u0442\u0435\u0441\u0442\u0430:",
	testMeTestTime: "\u0412\u0440\u0435\u043c\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f",
	testMeExpectedTime: "\u041e\u0436\u0438\u0434\u0430\u0435\u043c\u043e\u0435 \u0432\u0440\u0435\u043c\u044f",
	testMeStepsTaken: "\u041f\u0440\u0435\u0434\u043f\u0440\u0438\u043d\u044f\u0442\u044b\u0435 \u0448\u0430\u0433\u0438",
	testMeExpectedSteps: "\u041e\u0436\u0438\u0434\u0430\u0435\u043c\u044b\u0435 \u0448\u0430\u0433\u0438",
	testMeRetakeTestBtn: "\u041f\u043e\u0432\u0442\u043e\u0440\u043d\u044b\u0439 \u0442\u0435\u0441\u0442",
	testMeResultTitle: "\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 MyTest",
	ConfirmIfTestMeModeRidirect: "\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u043f\u043e \u0442\u0435\u043a\u0443\u0449\u0435\u043c\u0443 URL-\u0430\u0434\u0440\u0435\u0441\u0443. \u0412\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043d\u0430 URL-\u0430\u0434\u0440\u0435\u0441 \u0433\u0438\u0434\u0430?",
	feedCmt: "\u0412\u0430\u0448\u0438 \u043e\u0442\u0437\u044b\u0432\u044b \u0446\u0435\u043d\u043d\u044b \u0434\u043b\u044f \u043d\u0430\u0441!<br> \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0440\u0430\u0441\u0441\u043a\u0430\u0436\u0438\u0442\u0435 \u043d\u0430\u043c, \u0447\u0442\u043e \u0432\u044b \u0434\u0443\u043c\u0430\u0435\u0442\u0435 \u0432 500 \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u0445 \u0438\u043b\u0438 \u043c\u0435\u043d\u044c\u0448\u0435",
	doNotShowAgain: "\u0411\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c",
	neverShowAgain: "\u0411\u043e\u043b\u044c\u0448\u0435 \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c",
	skipGuide: "\u041f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0433\u0438\u0434",
	surveyErrorMsg: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043e\u0442\u0432\u0435\u0442\u044c\u0442\u0435 \u0445\u043e\u0442\u044f \u0431\u044b \u043d\u0430 \u043e\u0434\u0438\u043d \u0432\u043e\u043f\u0440\u043e\u0441",
	redirect: "\u041f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u0438\u0442\u044c",
	liveGuide: "\u0416\u0438\u0432\u043e\u0439 \u043f\u0443\u0442\u0435\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c",
	question: "\u0412\u043e\u043f\u0440\u043e\u0441",
	exitGuide: "\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0432\u044b\u0445\u043e\u0434\u0443",
	continueGuide: "\u041f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e",
	stop: "\u041e\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430",
	characters: "\u041f\u0438\u0441\u044c\u043c\u0435\u043d\u0430:",
	survey: "\u041e\u0431\u0437\u043e\u0440",
	testMeStopMessage: "\u0412\u044b \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0435\u0441\u044c \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 TestMe, \u043d\u0430\u0436\u043c\u0438\u0442\u0435 STOP \u0434\u043b\u044f \u0432\u044b\u0445\u043e\u0434\u0430",
	testMeFailedErrorMessage: "\u0412\u044b \u043d\u0435 \u0441\u043c\u043e\u0433\u043b\u0438 \u0434\u043e\u0441\u0442\u0438\u0447\u044c \u0446\u0435\u043b\u0435\u0432\u043e\u0433\u043e \u0448\u0430\u0433\u0430.<br>\u0418\u0437 {TOTAL_STEPS} \u0432\u044b \u0438\u0441\u043f\u0440\u0430\u0432\u0438\u043b\u0438 \u0448\u0430\u0433\u0438 {CORRECT_STEPS}.",
	surveyCommentPlaceholder: "\u041d\u0430\u0431\u0435\u0440\u0438\u0442\u0435 \u0437\u0434\u0435\u0441\u044c! \u041c\u0430\u043a\u0441\u0438\u043c\u0443\u043c 500 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432",
	pushTourSnoozeMsg: "\u042d\u0442\u043e\u0442 \u0442\u0443\u0440 \u043f\u043e \u0430\u0432\u0442\u043e\u0441\u0442\u0430\u0440\u0442\u0443 \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043b\u043e\u0436\u0435\u043d \u0434\u043b\u044f",
	of: "\u0438\u0437",
	wbMplayerTitle: "\u0423\u0447\u0435\u0431\u043d\u0438\u043a\u0438",
	wbDragTooltip: "\u041f\u0435\u0440\u0435\u0442\u0430\u0449\u0438\u0442\u0435 \u044d\u0442\u043e\u0442 \u043f\u0440\u043e\u0438\u0433\u0440\u044b\u0432\u0430\u0442\u0435\u043b\u044c \u0432 \u043b\u044e\u0431\u043e\u0435 \u043c\u0435\u0441\u0442\u043e \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435",
	dontShowEdResult: "\u042f \u043d\u0435 \u0445\u043e\u0447\u0443 \u044d\u0442\u043e\u0433\u043e \u0432\u0438\u0434\u0435\u0442\u044c",
	mPlayerHeaderTitle: "\u041c\u0438\u043a\u0440\u043e \u043f\u043b\u0435\u0435\u0440",
	closePreview: "\u0417\u0430\u043a\u0440\u044b\u0442\u044c \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440",
	elmNotFound: "\u041a\u0430\u0436\u0435\u0442\u0441\u044f, \u043c\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u043c \u043d\u0430\u0439\u0442\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0434\u043b\u044f \u0448\u0430\u0433\u0430:",
	elmNotFoundInfo: "\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0432\u044b \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0435\u0441\u044c \u043d\u0430 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u044d\u0442\u043e\u0433\u043e \u0448\u0430\u0433\u0430. \u0422\u0430\u043a\u0436\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0432\u0438\u0434\u0438\u0442\u0435 \u043b\u0438 \u0432\u044b \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442",
	notExists: "\u041d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442",
	elmNotFoundHeader: "\u042d\u043b\u0435\u043c\u0435\u043d\u0442 \u0448\u0430\u0433\u0430 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d",
	goToStep: "\u041f\u0435\u0440\u0435\u0439\u0442\u0438 \u043a \u0448\u0430\u0433\u0443",
	notFoundStep: "\u041c\u044b \u043d\u0435 \u0441\u043c\u043e\u0433\u043b\u0438 \u043d\u0430\u0439\u0442\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0434\u043b\u044f \u0448\u0430\u0433\u0430 #",
	pleaseReselect: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u044d\u043b\u0435\u043c\u0435\u043d\u0442.",
	stepRuleMatchErr: "\u041e\u0448\u0438\u0431\u043a\u0430 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438: \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u0448\u0430\u0433\u0430 \u043d\u0435 \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u044e\u0442",
	guideRuleMatchErr: "\u041e\u0448\u0438\u0431\u043a\u0430 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438: \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0435\u0439 \u043d\u0435 \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u044e\u0442",
	stepNotFoundRedirect: "\u0428\u0430\u0433 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043d\u0430 \u044d\u0442\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435. \u0412\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u0438\u0442\u044c?",
	branchStepMessagePopup: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u043e\u0434\u043d\u0443 \u0438\u0437 \u0437\u0430\u0434\u0430\u0447 \u043d\u0438\u0436\u0435, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c",
	btnSkip: "\u0421\u043a\u0438\u043f",
	kindlyHoverPopup: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043d\u0430\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u0443\u0440\u0441\u043e\u0440 \u043d\u0430 \u044d\u0442\u043e\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442, \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043a\u0440\u044b\u0442\u044c \u0432\u0441\u043f\u043b\u044b\u0432\u0430\u044e\u0449\u0435\u0435 \u043e\u043a\u043d\u043e",
	stepPlayIsdefinedPopover: "\u0428\u0430\u0433, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b \u0441\u043e\u0431\u0438\u0440\u0430\u0435\u0442\u0435\u0441\u044c \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0441\u0442\u0438, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0432\u043e \u0432\u0441\u043f\u043b\u044b\u0432\u0430\u044e\u0449\u0435\u043c \u043e\u043a\u043d\u0435",
	elmNotFoundWestpac: "\u0428\u0430\u0433 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u2013 \u042d\u0442\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u0442\u0441\u044f",
	findingElementMessage: "\u041f\u044b\u0442\u0430\u044f\u0441\u044c \u043d\u0430\u0439\u0442\u0438 \u0448\u0430\u0433...",
	badDomain: "\u0422\u0435\u043a\u0443\u0449\u0438\u0439 \u0434\u043e\u043c\u0435\u043d \u0438 URL-\u0430\u0434\u0440\u0435\u0441 \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 MyGuide. \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435\u0441\u044c \u0437\u0430 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0443.",
	hostJsError: "\u041f\u043e\u0445\u043e\u0436\u0435, \u0447\u0442\u043e \u043d\u0430 \u0432\u0435\u0431-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0435\u0441\u0442\u044c \u043e\u0448\u0438\u0431\u043a\u0430. \u041d\u0435 \u0443\u0434\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \"\u041c\u043e\u0439\u0433\u0438\u0434\"",
	remember: "\u041f\u043e\u043c\u043d\u0438 \u043c\u0435\u043d\u044f",
	forgotPass: "\u0417\u0430\u0431\u044b\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c?",
	dontHavAcc: "\u0423 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0443\u0447\u0435\u0442\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438?",
	loginTitle: "\u041b\u043e\u0433\u0438\u043d",
	loginOtpScreenTitle: "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 OTP \u0434\u043b\u044f \u0432\u0445\u043e\u0434\u0430",
	forgetPassTitl: "\u0421\u0431\u0440\u043e\u0441 \u043f\u0430\u0440\u043e\u043b\u044f",
	placeholderEmail: "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0447\u0442\u044b",
	placeholderPassword: "\u041f\u0430\u0440\u043e\u043b\u044c",
	placeholderNewPassword: "\u041d\u043e\u0432\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c",
	placeholderCurrentPassword: "\u0422\u0435\u043a\u0443\u0449\u0438\u0439 \u043f\u0430\u0440\u043e\u043b\u044c",
	placeholderFirstname: "\u0418\u043c\u044f",
	placeholderLastname: "\u0424\u0430\u043c\u0438\u043b\u0438\u044f",
	placeholderPasswordC: "\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u0435 \u043f\u0430\u0440\u043e\u043b\u044c",
	btnCancel: "\u041e\u0442\u043c\u0435\u043d\u0430",
	btnPayment: "\u041f\u043b\u0430\u043d \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f",
	btnSubmit: "\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c",
	btnLogin: "\u041b\u043e\u0433\u0438\u043d",
	termsOfUse: "\u0423\u0441\u043b\u043e\u0432\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f",
	andLabel: "\u0438",
	policyPrivacy: "\u041f\u043e\u043b\u0438\u0442\u0438\u043a\u0430 \u043a\u043e\u043d\u0444\u0438\u0434\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438",
	passwordError: "\u041f\u0430\u0440\u043e\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c 8 \u0446\u0438\u0444\u0440",
	confirmPasswordError: "\u041f\u0430\u0440\u043e\u043b\u044c \u0438 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u044e\u0449\u0438\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0442\u044c",
	firstnameError: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0438\u043c\u044f",
	lastnameError: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u0443\u044e \u0444\u0430\u043c\u0438\u043b\u0438\u044e",
	emailError: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0447\u0442\u044b",
	orgError: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 URL-\u0430\u0434\u0440\u0435\u0441 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438",
	otpError: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 OTP",
	placeholderOtp: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0432\u043e\u0439 OTP \u0437\u0434\u0435\u0441\u044c",
	otpSentDesc: "\u0415\u0441\u043b\u0438 \u0443\u043a\u0430\u0437\u0430\u043d \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0430\u0434\u0440\u0435\u0441 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0447\u0442\u044b, \u0432\u0430\u043c \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0430 \u0441\u0441\u044b\u043b\u043a\u0430 \u0434\u043b\u044f \u0441\u0431\u0440\u043e\u0441\u0430.<br>\u0415\u0441\u043b\u0438 \u0432\u044b \u043d\u0435 \u0432\u0438\u0434\u0438\u0442\u0435 \u043f\u0438\u0441\u044c\u043c\u043e \u0432 \u0442\u0435\u0447\u0435\u043d\u0438\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043c\u0438\u043d\u0443\u0442, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u043f\u0430\u043f\u043a\u0443 \u0441\u043f\u0430\u043c\u0430 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0433\u043e \u043f\u0438\u0441\u044c\u043c\u0430 \u043e\u0442",
	btnOtpVerify: "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 OTP",
	alreadyHavAcc: "\u0423 \u0432\u0430\u0441 \u0443\u0436\u0435 \u0435\u0441\u0442\u044c \u0443\u0447\u0435\u0442\u043d\u0430\u044f \u0437\u0430\u043f\u0438\u0441\u044c?",
	smartbiteMessageError: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435",
	smartbiteLinkError: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u0443\u044e \u0441\u0441\u044b\u043b\u043a\u0443",
	noGuidesOnThisPage: "\u041d\u0430 \u044d\u0442\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043d\u0435\u0442 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432!",
	clickOn: "\u041d\u0430\u0436\u043c\u0438\u0442\u0435 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 ",
	contactUs: "\u0421\u0432\u044f\u0436\u0438\u0442\u0435\u0441\u044c \u0441 \u043d\u0430\u043c\u0438",
	search: "\u0418\u0441\u043a\u0430\u0442\u044c",
	noRecordFound: "\u0417\u0430\u043f\u0438\u0441\u0438 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b",
	category: "\u041f\u0430\u043f\u043a\u0430",
	subCategory: "\u0412\u043b\u043e\u0436\u0435\u043d\u043d\u0430\u044f \u043f\u0430\u043f\u043a\u0430",
	confirmPasswordRequired: "\u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f",
	logInWithSSO: "\u0412\u0445\u043e\u0434 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0435\u0434\u0438\u043d\u043e\u0433\u043e \u0432\u0445\u043e\u0434\u0430",
	inputPlaceHolderSearch: "\u041f\u043e\u0438\u0441\u043a \u043b\u044e\u0431\u043e\u0433\u043e \u0433\u0438\u0434\u0430",
	noGuideAvailableFor: "\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043d\u0438 \u043e\u0434\u043d\u043e\u0433\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430 ,\u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u043f\u043e\u0438\u0441\u043a\u0443",
	tryModifyingYourSearch: "\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u043a\u0440\u0438\u0442\u0435\u0440\u0438\u0438 \u043f\u043e\u0438\u0441\u043a\u0430",
	signInVerifyYourEmail: "\u042d\u0442\u043e\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0447\u0442\u044b \u043d\u0435 \u0431\u044b\u043b \u043f\u0440\u043e\u0432\u0435\u0440\u0435\u043d. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u0441\u0432\u043e\u044e \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u0443\u044e \u043f\u043e\u0447\u0442\u0443 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438",
	signInVerifyYourAccount: "\u041c\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u043b\u0438 \u0432\u0430\u043c \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0435 \u043f\u0438\u0441\u044c\u043c\u043e \u0441 OTP. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u0435 \u0441\u0432\u043e\u044e \u0443\u0447\u0435\u0442\u043d\u0443\u044e \u0437\u0430\u043f\u0438\u0441\u044c, \u0447\u0442\u043e\u0431\u044b \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0432\u0445\u043e\u0434\u0430",
	maintenanceMessage: "\u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0435\u0442\u0441\u044f. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u0432\u044f\u0436\u0438\u0442\u0435\u0441\u044c \u0441 \u043d\u0430\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 support@csod.com",
	back: "\u041d\u0430\u0437\u0430\u0434",
	changePassword: "\u0421\u043c\u0435\u043d\u0430 \u043f\u0430\u0440\u043e\u043b\u044f",
	startTestAuto: "\u0417\u0430\u043f\u0443\u0441\u043a \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f",
	msgPasswordChangedSuccess: "\u0412\u0430\u0448 \u043f\u0430\u0440\u043e\u043b\u044c \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u0435\u043d",
	msgConfirmNewPasswordError: "\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f \u0434\u043e\u043b\u0436\u043d\u043e \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0442\u044c \u0441 \u043d\u043e\u0432\u044b\u043c \u043f\u0430\u0440\u043e\u043b\u0435\u043c",
	enterUrl: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 URL-\u0430\u0434\u0440\u0435\u0441 \u0433\u0440\u0443\u043f\u043f\u044b",
	dragPlaceholderDropThis: "\u041e\u0442\u0431\u0440\u043e\u0441\u044c\u0442\u0435 \u044d\u0442\u043e ",
	dragPlaceholderHere: " \u0437\u0434\u0435\u0441\u044c",
	termsOfService: "\u0423\u0441\u043b\u043e\u0432\u0438\u044f",
	versionText: "\u0412\u0435\u0440\u0441\u0438\u044f",
	videoStepSuccessMessage: "\u0412\u0430\u0448 \u0448\u0430\u0433 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u043d",
	importSuccessMessage: "\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043e. \u041f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u0432 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0438\u043c\u043f\u043e\u0440\u0442\u0430",
	worldBankHelpSupport: "\u041d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u044b, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a \u0432\u0441\u043f\u043b\u044b\u0432\u0430\u044e\u0449\u0438\u0435 \u043f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0438, \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0435",
	helpSupport: "\u041f\u043e\u043c\u043e\u0449\u044c \u0438 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430",
	page: "\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430",
	selectAnApplication: "\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435",
	refresh: "\u041e\u0441\u0432\u0435\u0436\u0430\u0442\u044c",
	loginBtn: "\u041b\u043e\u0433\u0438\u043d",
	account: "\u0421\u0447\u0435\u0442",
	taskStatus: "\u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 ",
	logoutBtn: "\u0412\u044b\u0445\u043e\u0434",
	app: "\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435:",
	firstStep: "\u041f\u0435\u0440\u0432\u044b\u0439 \u0448\u0430\u0433",
	lastStep: "\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u0448\u0430\u0433",
	startTest: "\u041d\u0430\u0447\u0430\u0442\u044c \u0442\u0435\u0441\u0442",
	noInappStepInGuide: "TestMe \u043d\u0435 \u0443\u0434\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c, \u0442\u0430\u043a \u043a\u0430\u043a \u0432 \u044d\u0442\u043e\u043c \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0435 \u043d\u0435\u0442 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0433\u043e \u0448\u0430\u0433\u0430",
	settingBtn: "\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438",
	orgSetting: "\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438",
	close: "\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0442\u044c",
	pdf: ".PDF",
	downloadPptx: ".PPT",
	giphy: ".GIF",
	downloadWord: "\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442",
	downloadBlog: "\u0411\u043b\u043e\u0433",
	downloadTxt: "\u041e\u0431\u044b\u0447\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442",
	serviceErrorMessage: "\u041e\u0439! \u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443 \u0447\u0435\u0440\u0435\u0437 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u0440\u0435\u043c\u044f. \u0412\u044b \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043d\u0430\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043b\u044e\u0431\u043e\u0439 \u043f\u043e\u043c\u043e\u0449\u0438",
	guidesTab: "\u041d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0435",
	noGuideCreatedYet: "\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u0435\u0449\u0435 \u043d\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043e!",
	noCategoryCreatedYet: "\u041f\u0430\u043f\u043a\u0430 \u0435\u0449\u0435 \u043d\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0430!",
	chatbot: "\u043c\u0430\u0439\u0447\u0430\u0442",
	notAutorised: "\u0423 \u0432\u0430\u0441 \u043d\u0435\u0442 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0433\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u0430, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u0432\u044f\u0436\u0438\u0442\u0435\u0441\u044c \u0441 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u043c",
	ok: "\u0425\u041e\u0420\u041e\u0428\u041e",
	apiError: "\u041e\u0448\u0438\u0431\u043a\u0430 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u0432\u044f\u0436\u0438\u0442\u0435\u0441\u044c \u0441 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u043c",
	select: "\u0412\u044b\u0431\u0438\u0440\u0430\u0442\u044c",
	mute_unmute: "\u041e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\/\u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0437\u0432\u0443\u043a\u0430",
	privacyPolicy: "\u041a\u043e\u043d\u0444\u0438\u0434\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0438 \u0444\u0430\u0439\u043b\u044b cookie",
	privacyPolicyText: "MyGuide \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0444\u0430\u0439\u043b\u044b cookie. \u0415\u0441\u043b\u0438 \u0432\u044b \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u0435, \u0432\u044b \u0441\u043e\u0433\u043b\u0430\u0448\u0430\u0435\u0442\u0435\u0441\u044c \u0441 \u043d\u0430\u0448\u0438\u043c\u0438 \u0423\u0441\u043b\u043e\u0432\u0438\u044f\u043c\u0438 \u0438 \u041f\u043e\u043b\u0438\u0442\u0438\u043a\u043e\u0439 \u043a\u043e\u043d\u0444\u0438\u0434\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0438 \u0434\u0430\u0435\u0442\u0435 \u043d\u0430\u043c \u0441\u043e\u0433\u043b\u0430\u0441\u0438\u0435 \u043d\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 cookie.",
	terms: "\u0423\u0441\u043b\u043e\u0432\u0438\u044f",
	westPecErrorMessage: "\u0412\u044b \u043d\u0435 \u0438\u043c\u0435\u0435\u0442\u0435 \u043f\u0440\u0430\u0432\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u044d\u0442\u043e\u043c\u0443 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044e. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u043e\u0439\u0434\u0438\u0442\u0435 \u0432 \u0441\u0435\u0442\u044c Westpac",
	noApp: "\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b",
	role: "\u0420\u043e\u043b\u044c:",
	all: "\u0412\u0441\u0435",
	video: "\u0412\u0438\u0434\u0435\u043e",
	course: "\u041a\u0443\u0440\u0441",
	article: "\u0421\u0442\u0430\u0442\u044c\u044f",
	image: "\u041e\u0431\u0440\u0430\u0437",
	pathways: "\u041f\u0443\u0442\u0438",
	preview: "\u041f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440",
	more: "\u0411\u043e\u043b\u044c\u0448\u0435",
	history: "\u0418\u0441\u0442\u043e\u0440\u0438\u044f",
	publish: "\u0418\u0437\u0434\u0430\u0432\u0430\u0442\u044c",
	selectGuideLink: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435",
	selectGuideBeforeSubmit: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u0435\u0440\u0435\u0434 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u043e\u0439",
	change: "\u041c\u0435\u043d\u044f\u0442\u044c",
	checkNow: "\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u0435\u0439\u0447\u0430\u0441",
	minutes: "\u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b",
	clickHere: "\u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u0437\u0434\u0435\u0441\u044c",
	youAlmostDone: "\u0412\u044b \u043f\u043e\u0447\u0442\u0438 \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u0438!",
	setOrg: ", \u0447\u0442\u043e\u0431\u044b \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u044e",
	apps: "\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f",
	me: "\u041c\u0435\u043d\u044f",
	playStep: "\u0418\u0433\u0440\u0430\u0442\u044c \u0428\u0430\u0433",
	miniPlayerHelp: "\u0421\u043f\u0440\u0430\u0432\u043a\u0430",
	defaultMiniPlayerHelp: "\u0421\u043f\u0440\u0430\u0432\u043a\u0430",
	defaultConfirmIfSlideshowOrRedirect: "\u0428\u0430\u0433 \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u043c URL-\u0430\u0434\u0440\u0435\u0441\u0435.<br>\u0412\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u043f\u043e URL-\u0430\u0434\u0440\u0435\u0441\u0443 \u0448\u0430\u0433\u0430 \u0438\u043b\u0438 \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0441\u0442\u0438 \u0441\u043b\u0430\u0439\u0434-\u0448\u043e\u0443?",
	defaultServiceErrorMessage: "\u041e\u0439! \u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443 \u0447\u0435\u0440\u0435\u0437 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u0440\u0435\u043c\u044f. \u0412\u044b \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043d\u0430\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043b\u044e\u0431\u043e\u0439 \u043f\u043e\u043c\u043e\u0449\u0438",
	defaultMaintenanceMessage: "\u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0435\u0442\u0441\u044f. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u0432\u044f\u0436\u0438\u0442\u0435\u0441\u044c \u0441 \u043d\u0430\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 support@csod.com",
	userNotFollowingGuideMessage: "\u041f\u043e\u0445\u043e\u0436\u0435, \u0447\u0442\u043e \u0432\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0447\u0430\u0441\u0442\u044c\u044e \u044d\u0442\u043e\u0433\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430. \u0415\u0441\u043b\u0438 \u0432\u044b \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u0445\u043e\u0442\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0443, \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u00ab\u0412\u044b\u0439\u0442\u0438 \u0438\u0437 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430\u00bb",
	defaultUserNotFollowingGuideMessage: "\u041f\u043e\u0445\u043e\u0436\u0435, \u0447\u0442\u043e \u0432\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0447\u0430\u0441\u0442\u044c\u044e \u044d\u0442\u043e\u0433\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430. \u0415\u0441\u043b\u0438 \u0432\u044b \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u0445\u043e\u0442\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0443, \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u00ab\u0412\u044b\u0439\u0442\u0438 \u0438\u0437 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430\u00bb",
	resumeGuide: "\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0440\u0435\u0437\u044e\u043c\u0435",
	defaultResumeGuideMessage: "\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0440\u0435\u0437\u044e\u043c\u0435",
	backToLogin: "\u041d\u0430\u0437\u0430\u0434 \u043a \u0412\u0445\u043e\u0434\u0443",
	filters: "\u0424\u0438\u043b\u044c\u0442\u0440\u044b",
	thisApp: "\u042d\u0442\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435",
	thisWebsite: "\u042d\u0442\u043e\u0442 \u0432\u0435\u0431-\u0441\u0430\u0439\u0442",
	maxFreeTourLimit: "\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u043b\u0438\u043c\u0438\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d\u043d\u044b\u0445 \u0442\u0443\u0440\u043e\u0432",
	passwordRegexCheck: "\u041f\u0430\u0440\u043e\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 8 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u043f\u043e \u043a\u0440\u0430\u0439\u043d\u0435\u0439 \u043c\u0435\u0440\u0435 \u043e\u0434\u043d\u043e \u043f\u0440\u043e\u043f\u0438\u0441\u043d\u043e\u0435, \u043e\u0434\u043d\u043e \u0441\u0442\u0440\u043e\u0447\u043d\u043e\u0435 \u0438 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435",
	countLimit: "99+",
	microsoftServiceKey: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043b\u044e\u0447 \u043f\u043e\u0434\u043f\u0438\u0441\u043a\u0438 \u043d\u0430 \u0440\u0435\u0447\u044c \u0441\u043b\u0443\u0436\u0431 Microsoft Cognitive Services",
	numberOfImgFile: "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0444\u0430\u0439\u043b\u043e\u0432 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u0438 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u043c",
	availableOn: "\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u043d\u0430",
	tooltipUnpubWorkflowTitle: "\u041d\u0435\u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0440\u0430\u0431\u043e\u0447\u0438\u0439 \u043f\u0440\u043e\u0446\u0435\u0441\u0441",
	tooltipUnpubParentWorkflowTitle: "\u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0440\u0430\u0431\u043e\u0447\u0438\u0439 \u043f\u0440\u043e\u0446\u0435\u0441\u0441, \u041d\u0435\u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u043f\u0430\u043f\u043a\u0438",
	tooltipPubParentWorkflowTitle: "\u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0440\u0430\u0431\u043e\u0447\u0438\u0439 \u043f\u0440\u043e\u0446\u0435\u0441\u0441, \u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u043f\u0430\u043f\u043a\u0430",
	tooltipUnpubTooltipTitle: "\u041d\u0435\u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u043f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430",
	tooltipUnpubParentTooltipTitle: "\u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0432\u0441\u043f\u043b\u044b\u0432\u0430\u044e\u0449\u0430\u044f \u043f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430, \u043d\u0435\u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u043f\u0430\u043f\u043a\u0438",
	tooltipPubParentTooltipTitle: "\u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0432\u0441\u043f\u043b\u044b\u0432\u0430\u044e\u0449\u0430\u044f \u043f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430, \u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u043f\u0430\u043f\u043a\u0430",
	tooltipUnpubTutorialTitle: "\u041d\u0435\u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0443\u0447\u0435\u0431\u043d\u043e\u0435 \u043f\u043e\u0441\u043e\u0431\u0438\u0435",
	tooltipUnpubParentTutorialTitle: "\u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0443\u0447\u0435\u0431\u043d\u043e\u0435 \u043f\u043e\u0441\u043e\u0431\u0438\u0435, \u043d\u0435\u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u043f\u0430\u043f\u043a\u0438",
	tooltipPubParentTutorialTitle: "\u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0443\u0447\u0435\u0431\u043d\u0438\u043a, \u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u043f\u0430\u043f\u043a\u0430",
	tooltipUnpubSubFolderTitle: "\u041d\u0435\u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u0430\u044f \u043f\u0430\u043f\u043a\u0430",
	tooltipUnpubSubFolderDesc: "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0445 \u043f\u0430\u043f\u043e\u043a \u0434\u043b\u044f \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0445",
	tooltipUnpubParentSubFolderTitle: "\u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u0430\u044f \u043f\u0430\u043f\u043a\u0430, \u041d\u0435\u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0430\u044f \u043f\u0430\u043f\u043a\u0430 (\u043f\u0430\u043f\u043a\u0438)",
	tooltipPubParentSubFolderTitle: "\u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u0430\u044f \u043f\u0430\u043f\u043a\u0430, \u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u043f\u0430\u043f\u043a\u0430",
	tooltipPubParentSubFolderDesc: "\u0423\u043f\u043e\u0440\u044f\u0434\u043e\u0447\u0438\u0432\u0430\u0435\u0442 \u0433\u0438\u0434\u044b",
	exitSurvey: "\u041e\u0431\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0430 \u0432\u044b\u0435\u0437\u0434\u0435",
	disable: "\u041e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u044c",
	instructionExitSurvey: "\u041e\u043f\u0440\u043e\u0441 \u043f\u0440\u0438 \u0432\u044b\u0445\u043e\u0434\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f, \u043a\u043e\u0433\u0434\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0432\u044b\u0445\u043e\u0434\u0438\u0442 \u0438\u0437 \u0433\u0438\u0434\u0430 \u043f\u0435\u0440\u0435\u0434 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435\u043c",
	msgVideoNotFound: "\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0432 \u0432\u0438\u0434\u0435\u043e, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0447\u0435\u0440\u0435\u0437 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u0440\u0435\u043c\u044f",
	msgGiphyNotFound: "\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0432 gif, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0447\u0435\u0440\u0435\u0437 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u0440\u0435\u043c\u044f",
	userPref: "\u041c\u043e\u0438 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0435\u043d\u0438\u044f",
	manageAccount: "\u041f\u043e\u0440\u0442\u0430\u043b \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f",
	analyticsPortal: "\u041f\u043e\u0440\u0442\u0430\u043b \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438",
	errorInvalidUrl: "\u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 URL-\u0430\u0434\u0440\u0435\u0441",
	wbFooterText: "\u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 ITS",
	navigationMenu: "\u041c\u0435\u043d\u044e \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438",
	clearHistory: "\u041e\u0447\u0438\u0441\u0442\u0438\u0442\u044c \u0438\u0441\u0442\u043e\u0440\u0438\u044e",
	userDeniedMessage: "\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u043e\u0442\u043a\u0430\u0437\u0430\u043d\u043e \u0432 \u0434\u043e\u0441\u0442\u0443\u043f\u0435 \u043a \u043a\u0430\u043c\u0435\u0440\u0435 \u0438 \u043c\u0438\u043a\u0440\u043e\u0444\u043e\u043d\u0443",
	pushNotification: "Push-\u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f",
	viewDetail: "\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435",
	contactAdmin: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u0432\u044f\u0436\u0438\u0442\u0435\u0441\u044c \u0441 support@csod.com \u0438\u043b\u0438 \u0432\u0430\u0448\u0438\u043c \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u043c \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u043e\u043c\u043e\u0449\u0438",
	noAppOnDomain: "\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043d\u0435 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043e \u0434\u043b\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0434\u043e\u043c\u0435\u043d\u0430 ",
	noGuidesOnDomain: "\u0413\u0438\u0434\u044b \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b",
	apply: "\u041f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c",
	invalidLoginCred: "\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0435 \u0443\u0447\u0435\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0432\u0445\u043e\u0434\u0430. \u0412\u0430\u0448\u0430 \u0443\u0447\u0435\u0442\u043d\u0430\u044f \u0437\u0430\u043f\u0438\u0441\u044c \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u043f\u043e\u0441\u043b\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043d\u0435\u0443\u0434\u0430\u0447\u043d\u044b\u0445 \u043f\u043e\u043f\u044b\u0442\u043e\u043a, \u0432\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0435 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0435 \u043f\u0438\u0441\u044c\u043c\u043e \u0434\u043b\u044f \u0440\u0430\u0437\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0438 \u0432\u0430\u0448\u0435\u0439 \u0443\u0447\u0435\u0442\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u043b\u0438 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u0431\u0440\u043e\u0441\u0438\u0442\u044c \u0441\u0432\u043e\u0439 \u043f\u0430\u0440\u043e\u043b\u044c",
	resendOTP: "\u041f\u043e\u0432\u0442\u043e\u0440\u043d\u0430\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 OTP",
	sendFeedback: "\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043e\u0442\u0437\u044b\u0432",
	guideNotExist: "\u042d\u0442\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u043d\u0430 \u044d\u0442\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 (\u041e\u0448\u0438\u0431\u043a\u0430: \u043d\u0435\u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435 \u0434\u043e\u043c\u0435\u043d\u0430) ",
	cdnAccess: "<b>\u041d\u0430\u043c \u0436\u0430\u043b\u044c<\/b> <br><br>\u041f\u043e\u0445\u043e\u0436\u0435, \u0435\u0441\u0442\u044c \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0441 \u043d\u0430\u0448\u0438\u043c\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430\u043c\u0438.<br> \u041c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435 \u0438 \u0438\u0441\u043f\u0440\u0430\u0432\u0438\u043c \u0435\u0435 \u0432 \u043a\u0440\u0430\u0442\u0447\u0430\u0439\u0448\u0438\u0435 \u0441\u0440\u043e\u043a\u0438",
	tourPlayError: "\u0412 \u0433\u0438\u0434 \u0438\u0433\u0440\u0430\u0442\u044c \u043d\u0435\u043b\u044c\u0437\u044f. \u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0435",
	playerMode: "\u0420\u0435\u0436\u0438\u043c \u0438\u0433\u0440\u043e\u043a\u0430",
	closePanel: "\u0417\u0430\u043a\u0440\u044b\u0442\u044c \u043f\u0430\u043d\u0435\u043b\u044c",
	switchCreatorMode: "\u041f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0432 \u0440\u0435\u0436\u0438\u043c \u0441\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044f",
	extensionContextError: "\u041a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043d \u043d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c",
	otpSent: "OTP \u0431\u044b\u043b \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d \u043d\u0430 \u0432\u0430\u0448\u0443 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u0443\u044e \u043f\u043e\u0447\u0442\u0443, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u0441\u0432\u043e\u0439 \u043f\u043e\u0447\u0442\u043e\u0432\u044b\u0439 \u044f\u0449\u0438\u043a",
	startOver: "\u041d\u0430\u0447\u0430\u0442\u044c \u0437\u0430\u043d\u043e\u0432\u043e",
	yesResume: "\u0420\u0435\u0437\u044e\u043c\u0435",
	dontShowAgain: "\u0411\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c",
	notificationHeader: "\u0423 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435!",
	watchLater: "\u0421\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043f\u043e\u0437\u0436\u0435",
	pushSnoozeMsg: "\u042d\u0442\u043e \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043b\u043e\u0436\u0435\u043d\u043e \u0434\u043b\u044f",
	showAgain: "\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0435\u0449\u0435 \u0440\u0430\u0437",
	noGuidesOnThisTab: "\u041d\u0430 \u044d\u0442\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043d\u0435\u0442 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439",
	iAgree: "\u041f\u0440\u0438\u043d\u0438\u043c\u0430\u044e",
	viewMore: "\u0421\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435",
	lostInternetConnection: "\u041f\u043e\u0442\u0435\u0440\u044f\u043d\u043e \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c. \u041f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u0441\u044c \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443",
	next: "\u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439",
	recent: "\u041d\u0435\u0434\u0430\u0432\u043d\u0438\u0439",
	older: "\u0421\u0442\u0430\u0440\u0448\u0438\u0439",
	atoz: "\u0410 - \u042f",
	ztoa: "\u042f - \u0410",
	clear: "\u042f\u0441\u043d\u044b\u0439",
	tooltipDontShowAgain: "\u0423\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u044f\u0432\u043b\u044f\u0442\u044c\u0441\u044f. \u0427\u0442\u043e\u0431\u044b \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u0441\u0435\u0439\u0447\u0430\u0441, \u043d\u0430\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u0430 \u043d\u0435\u0433\u043e \u043a\u0443\u0440\u0441\u043e\u0440 \u0438 \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u00ab\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0441\u043d\u043e\u0432\u0430\u00bb",
	tooltipWatchLater1: "\u0423\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0434\u043b\u044f",
	tooltipWatchLater2: "\u0438 \u043f\u043e\u044f\u0432\u0438\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e. \u0427\u0442\u043e\u0431\u044b \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u0441\u0435\u0439\u0447\u0430\u0441, \u043d\u0430\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u0430 \u043d\u0435\u0433\u043e \u043a\u0443\u0440\u0441\u043e\u0440 \u0438 \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u00ab\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0441\u043d\u043e\u0432\u0430\u00bb",
	hour: "\u0447\u0430\u0441",
	hours: "\u0427\u0430\u0441\u043e\u0432",
	insightsTracker: "\u041e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u043d\u0438\u0435 \u0438\u0434\u0435\u0439",
	slideshow: "\u0421\u043b\u0430\u0439\u0434-\u0448\u043e\u0443",
	autoplay: "\u0410\u0412\u0422\u041e\u0417\u0410\u041f\u0423\u0421\u041a",
	powerFormOldData: "\u0421\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0435",
	powerFormNewData: "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u044d\u0442\u0443 \u0444\u043e\u0440\u043c\u0443 \u0434\u043b\u044f \u0432\u0432\u043e\u0434\u0430 \u043d\u043e\u0432\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445",
	powerFormNewDataMore: "\u0415\u0441\u043b\u0438 \u0432\u0430\u0448\u0438 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0435 \u0432\u0438\u0434\u043d\u044b, \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u043d\u0430 \u0441\u0442\u0440\u0435\u043b\u043a\u0443 \u0432 \u043b\u0435\u0432\u043e\u043c \u0432\u0435\u0440\u0445\u043d\u0435\u043c \u0443\u0433\u043b\u0443, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0432\u0430\u0448\u0438 \u0434\u0430\u043d\u043d\u044b\u0435. \u0417\u0430\u0442\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043d\u044b\u0439 \u043c\u0430\u0440\u043a\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442.",
	powerFormTitle: "\u041f\u043e\u043c\u043e\u0449\u043d\u0438\u043a \u043f\u043e \u0432\u0432\u043e\u0434\u0443 \u0434\u0430\u043d\u043d\u044b\u0445",
	powerFormMandatory: "\u042d\u0442\u043e \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u043f\u043e\u043b\u0435, \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 ",
	belongToOtherApp: "\u042d\u0442\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043e \u043d\u0430 {TOURURL}, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0438\u0442 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044e {APPNAME}. \u0421\u043a\u043e\u043f\u0438\u0440\u0443\u0439\u0442\u0435 \u044d\u0442\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u0432 \u044d\u0442\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443",
	setDomain: "\u0415\u0441\u043b\u0438 \u0432\u044b \u0443\u0432\u0435\u0440\u0435\u043d\u044b, \u0447\u0442\u043e {TOURURL} \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u0432 \u0442\u0435\u043a\u0443\u0449\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0434\u043e\u043c\u0435\u043d\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443",
	on: "\u041d\u0410",
	off: "\u041e\u0422",
	btnPrev: "\u041f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0430\u044f",
	btnPrevious: "\u041f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0439",
	taskList: "\u0421\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u0434\u0430\u0447",
	unprocessedVideo: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u0434\u043e\u0436\u0434\u0438\u0442\u0435, \u043f\u043e\u043a\u0430 \u0432\u0430\u0448\u0435 \u0432\u0438\u0434\u0435\u043e \u0431\u0443\u0434\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043e.",
	searchResult: "\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043f\u043e\u0438\u0441\u043a\u0430",
	pleaseWait: "\u041f\u043e\u0434\u043e\u0436\u0434\u0438\u0442\u0435!",
	mediaDownloadMsg: "\u041f\u043e\u043a\u0430 \u043c\u044b \u0433\u043e\u0442\u043e\u0432\u0438\u043c \u0432\u0430\u0448\u0438 \u0444\u0430\u0439\u043b\u044b \u043a \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435",
	mediaFileNotFound: "\u041c\u0435\u0434\u0438\u0430\u0444\u0430\u0439\u043b \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d",
	searchInFolder: "\u041f\u043e\u0438\u0441\u043a \u0432 \u043f\u0430\u043f\u043a\u0435",
	currentPageSearchPlaceholder: "\u041f\u043e\u0438\u0441\u043a \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430 (\u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432), \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435",
	brandLogo: "\u041b\u043e\u0433\u043e\u0442\u0438\u043f \u0431\u0440\u0435\u043d\u0434\u0430",
	accessibility: "\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0441\u0442\u044c",
	replay: "\u041f\u0435\u0440\u0435\u0438\u0433\u0440\u044b\u0432\u0430\u0442\u044c",
	defaultGreetingMessage: "\u042d\u0439! \u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c \u0432 MyGuide. \u041a\u0430\u043a \u044f \u043c\u043e\u0433\u0443 \u0432\u0430\u043c \u043f\u043e\u043c\u043e\u0447\u044c? \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0438\u043c\u0435\u0439\u0442\u0435 \u0432 \u0432\u0438\u0434\u0443, \u0447\u0442\u043e \u044f \u0431\u043e\u0442.",
	defaultErrorMessage: "\u0418\u0437\u0432\u0438\u043d\u0438\u0442\u0435, \u044f \u044d\u0442\u043e\u0433\u043e \u043d\u0435 \u043f\u043e\u043d\u044f\u043b. \u041d\u0435 \u043c\u043e\u0433\u043b\u0438 \u0431\u044b \u0432\u044b \u0431\u044b\u0442\u044c \u0431\u043e\u043b\u0435\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u043c\u0438? ",
	defaultEndMessage: "\u041c\u044b \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u0438, \u0441\u043f\u0430\u0441\u0438\u0431\u043e \u0431\u043e\u043b\u044c\u0448\u043e\u0435!",
	greetingMessage: "\u042d\u0439! \u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c \u0432 MyGuide. \u041a\u0430\u043a \u044f \u043c\u043e\u0433\u0443 \u0432\u0430\u043c \u043f\u043e\u043c\u043e\u0447\u044c? \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0438\u043c\u0435\u0439\u0442\u0435 \u0432 \u0432\u0438\u0434\u0443, \u0447\u0442\u043e \u044f \u0431\u043e\u0442.",
	errorMessage: "\u0418\u0437\u0432\u0438\u043d\u0438\u0442\u0435, \u044f \u044d\u0442\u043e\u0433\u043e \u043d\u0435 \u043f\u043e\u043d\u044f\u043b. \u041d\u0435 \u043c\u043e\u0433\u043b\u0438 \u0431\u044b \u0432\u044b \u0431\u044b\u0442\u044c \u0431\u043e\u043b\u0435\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u043c\u0438? ",
	endMessage: "\u041c\u044b \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u0438, \u0441\u043f\u0430\u0441\u0438\u0431\u043e \u0431\u043e\u043b\u044c\u0448\u043e\u0435!",
	guideLnkToRedirect: "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0441\u0441\u044b\u043b\u043a\u0443, \u0447\u0442\u043e\u0431\u044b \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0438 \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0441\u0442\u0438 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e",
	otpTimer: "\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u044c \u043f\u043e\u043f\u044b\u0442\u043a\u0443 \u0432 ",
	seconds: " \u0442\u043e\u0432\u0430\u0440\u044b \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u0441\u043e\u0440\u0442\u0430",
	limitWarning: "\u0412\u044b \u0434\u043e\u0441\u0442\u0438\u0433\u043b\u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u0435\u043b\u0430 \u043d\u0435\u0443\u0434\u0430\u0447\u043d\u044b\u0445 \u043f\u043e\u043f\u044b\u0442\u043e\u043a",
	403: "\u041c\u044b \u0441\u0442\u043e\u043b\u043a\u043d\u0443\u043b\u0438\u0441\u044c \u0441 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u043e\u0439 \u0441 \u044d\u0442\u0438\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043d\u0430\u043c \u043e\u0431 \u044d\u0442\u043e\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com",
	405: "\u041c\u044b \u0441\u0442\u043e\u043b\u043a\u043d\u0443\u043b\u0438\u0441\u044c \u0441 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u043e\u0439 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u044d\u0442\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043d\u0430\u043c \u043e\u0431 \u044d\u0442\u043e\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com",
	429: "\u0421\u043b\u0438\u0448\u043a\u043e\u043c \u043c\u043d\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432",
	1003: "\u041c\u044b \u0441\u0442\u043e\u043b\u043a\u043d\u0443\u043b\u0438\u0441\u044c \u0441 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u043e\u0439 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u0432\u043e\u0439\u0434\u0438\u0442\u0435 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443",
	1007: "\u041c\u044b \u0441\u0442\u043e\u043b\u043a\u043d\u0443\u043b\u0438\u0441\u044c \u0441 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u043e\u0439 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043d\u0430\u043c \u043e\u0431 \u044d\u0442\u043e\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com",
	1005: "<b>\u041d\u0430\u043c \u0436\u0430\u043b\u044c<\/b> <br><br>\u041f\u043e\u0445\u043e\u0436\u0435, \u0435\u0441\u0442\u044c \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0441 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c \u0438\u043b\u0438 \u0441 \u043d\u0430\u0448\u0438\u043c\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430\u043c\u0438.<br> \u041c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435 \u0438 \u0438\u0441\u043f\u0440\u0430\u0432\u0438\u043c \u0435\u0435 \u0432 \u043a\u0440\u0430\u0442\u0447\u0430\u0439\u0448\u0438\u0435 \u0441\u0440\u043e\u043a\u0438",
	1009: "\u042d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u0430\u044f \u043f\u043e\u0447\u0442\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0435 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0430",
	1014: "\u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0435\u0442\u0441\u044f. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u0432\u044f\u0436\u0438\u0442\u0435\u0441\u044c \u0441 \u043d\u0430\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 support@csod.com",
	1017: "\u041c\u044b \u0441\u0442\u043e\u043b\u043a\u043d\u0443\u043b\u0438\u0441\u044c \u0441 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u043e\u0439 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u0432\u043e\u0439\u0434\u0438\u0442\u0435 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043d\u0430\u043c \u043e\u0431 \u044d\u0442\u043e\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com",
	1018: "\u0412\u044b \u0434\u043e\u0441\u0442\u0438\u0433\u043b\u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u0435\u043b\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0448\u0430\u0433\u043e\u0432",
	2000: "\u041c\u044b \u0441\u0442\u043e\u043b\u043a\u043d\u0443\u043b\u0438\u0441\u044c \u0441 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u043e\u0439 \u0441 \u044d\u0442\u0438\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c. \u041c\u044b \u0431\u044b\u043b\u0438 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u044b. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043d\u0430\u043c \u043e\u0431 \u044d\u0442\u043e\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com",
	2001: "\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0435 \u0443\u0447\u0435\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0432\u0445\u043e\u0434\u0430. \u0412\u0430\u0448\u0430 \u0443\u0447\u0435\u0442\u043d\u0430\u044f \u0437\u0430\u043f\u0438\u0441\u044c \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u043f\u043e\u0441\u043b\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043d\u0435\u0443\u0434\u0430\u0447\u043d\u044b\u0445 \u043f\u043e\u043f\u044b\u0442\u043e\u043a, \u0432\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0435 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0435 \u043f\u0438\u0441\u044c\u043c\u043e \u0434\u043b\u044f \u0440\u0430\u0437\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0438 \u0432\u0430\u0448\u0435\u0439 \u0443\u0447\u0435\u0442\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u043b\u0438 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u0431\u0440\u043e\u0441\u0438\u0442\u044c \u0441\u0432\u043e\u0439 \u043f\u0430\u0440\u043e\u043b\u044c",
	2002: "\u041d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0438\u043b\u0438 \u043f\u0440\u043e\u0441\u0440\u043e\u0447\u0435\u043d\u043d\u044b\u0439 OTP",
	2003: "\u0417\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u043c \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043c (\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u0444\u0430\u0439\u043b\u044b JPG \u0438 PNG)",
	2004: "\u0421\u0440\u043e\u043a \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441\u0435\u0430\u043d\u0441\u0430 \u0438\u0441\u0442\u0435\u043a",
	2005: "\u041c\u044b \u043d\u0435 \u0441\u043c\u043e\u0433\u043b\u0438 \u043e\u0442\u0441\u043b\u0435\u0434\u0438\u0442\u044c \u044d\u0442\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u041e\u0431\u043d\u043e\u0432\u0438\u0442\u0435 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043d\u0430\u043c \u043e\u0431 \u044d\u0442\u043e\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com",
	2006: "\u0410\u0434\u0440\u0435\u0441 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0447\u0442\u044b \u043d\u0435\u0432\u0435\u0440\u0435\u043d. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443",
	2007: "\u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0430\u044f \u0440\u043e\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443",
	2008: "\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0439 \u0442\u0438\u043f \u0437\u0430\u0434\u0430\u0447\u0438",
	2009: "\u0414\u0430\u043d\u043d\u043e\u0435 \u0417\u0430\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c; \u041e\u043d \u043c\u043e\u0433 \u0431\u044b\u0442\u044c \u0443\u0434\u0430\u043b\u0435\u043d \u0438\u043b\u0438 \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u043b",
	2010: "\u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0435 \u0432\u0445\u043e\u0434\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b. \u041e\u0431\u043d\u043e\u0432\u0438\u0442\u0435 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043d\u0430\u043c \u043e\u0431 \u044d\u0442\u043e\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com",
	2011: "\u0414\u0430\u043d\u043d\u0430\u044f \u041e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u044f \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439; \u041e\u043d \u043c\u043e\u0433 \u0431\u044b\u0442\u044c \u0443\u0434\u0430\u043b\u0435\u043d \u0438\u043b\u0438 \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u043b",
	2012: "\u0412 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0438\u043b\u0438 \u0431\u044b\u043b \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043d\u0430\u043c \u043e\u0431 \u044d\u0442\u043e\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com",
	2013: "\u0412 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0438\u043b\u0438 \u0431\u044b\u043b \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043d\u0430\u043c \u043e\u0431 \u044d\u0442\u043e\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com",
	2014: "\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0439 \u0434\u043b\u044f Super Admin[organization_id]",
	2015: "\u041f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 Image Data \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u043c. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043d\u0430\u043c \u043e\u0431 \u044d\u0442\u043e\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com",
	2016: "\u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u0434\u043e\u043c\u0435\u043d",
	2017: "\u0412 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0438\u043b\u0438 \u0431\u044b\u043b \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440",
	2018: "\u0412 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0438\u043b\u0438 \u0431\u044b\u043b \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440",
	2019: "\u0422\u043e, \u0447\u0442\u043e \u0432\u044b \u0438\u0449\u0435\u0442\u0435, \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0438\u043b\u0438 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0443\u0434\u0430\u043b\u0435\u043d\u043e",
	2020: "\u0412 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0438\u043b\u0438 \u0431\u044b\u043b \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440",
	2021: "\u0421\u0435\u0440\u0432\u0435\u0440 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u043b \u043d\u0435\u043f\u0440\u0435\u0434\u0432\u0438\u0434\u0435\u043d\u043d\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043f\u043e\u043f\u044b\u0442\u043a\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u044d\u0442\u043e\u0442 \u0437\u0430\u043f\u0440\u043e\u0441. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0435 support@csod.com",
	2022: "\u0412 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0438\u043b\u0438 \u0431\u044b\u043b \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 URL-\u0430\u0434\u0440\u0435\u0441 \u043a\u043e\u043c\u0430\u043d\u0434\u044b",
	2023: "\u0421\u0435\u0440\u0432\u0435\u0440 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u043b \u043d\u0435\u043f\u0440\u0435\u0434\u0432\u0438\u0434\u0435\u043d\u043d\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043f\u043e\u043f\u044b\u0442\u043a\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u044d\u0442\u043e\u0442 \u0437\u0430\u043f\u0440\u043e\u0441. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0435 support@csod.com",
	2024: "\u0420\u0430\u0437\u043c\u0435\u0440 \u0444\u0430\u0439\u043b\u0430 \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u0442\u044c 5 \u041c\u0411",
	2025: "\u0412 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0438\u043b\u0438 \u0431\u044b\u043b \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 URL",
	2026: "\u041f\u0430\u0440\u043e\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 8 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u043f\u043e \u043a\u0440\u0430\u0439\u043d\u0435\u0439 \u043c\u0435\u0440\u0435 \u043e\u0434\u043d\u043e \u043f\u0440\u043e\u043f\u0438\u0441\u043d\u043e\u0435, \u043e\u0434\u043d\u043e \u0441\u0442\u0440\u043e\u0447\u043d\u043e\u0435 \u0438 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435",
	2027: "\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c",
	2028: "\u0412 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0438\u043b\u0438 \u0431\u044b\u043b \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440",
	2029: "\u0413\u043e\u0440\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u0438\u043b\u0438, \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f",
	2030: "\u0412 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0438\u043b\u0438 \u0431\u044b\u043b \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440",
	2031: "\u0421\u0435\u0440\u0432\u0435\u0440 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u043b \u043d\u0435\u043f\u0440\u0435\u0434\u0432\u0438\u0434\u0435\u043d\u043d\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043f\u043e\u043f\u044b\u0442\u043a\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u044d\u0442\u043e\u0433\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0435 support@csod.com",
	2032: "\u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440[file_id]",
	2033: "\u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 URL-\u0430\u0434\u0440\u0435\u0441. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443",
	2034: "\u0421\u0435\u0440\u0432\u0435\u0440 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u043b \u043d\u0435\u043f\u0440\u0435\u0434\u0432\u0438\u0434\u0435\u043d\u043d\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u044d\u0442\u0438\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0435 support@csod.com",
	2035: "\u0421\u0435\u0440\u0432\u0435\u0440 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u043b \u043d\u0435\u043f\u0440\u0435\u0434\u0432\u0438\u0434\u0435\u043d\u043d\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u044d\u0442\u043e\u0433\u043e \u043a\u043b\u044e\u0447\u0430 AppKey. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0435 support@csod.com",
	2036: "\u0421\u0435\u0440\u0432\u0435\u0440 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u043b \u043d\u0435\u043f\u0440\u0435\u0434\u0432\u0438\u0434\u0435\u043d\u043d\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u0435 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043e \u043d\u0435\u0439 support@csod.com",
	2044: "\u041f\u043e\u0445\u043e\u0436\u0435, \u043c\u044b \u0443\u043f\u0443\u0441\u0442\u0438\u043b\u0438 \u043f\u0435\u0440\u0435\u0432\u043e\u0434 \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0448\u0430\u0433\u0430. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u0441\u044c \u043d\u0430 \u044f\u0437\u044b\u043a \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u043f\u0435\u0440\u0435\u0432\u0435\u0434\u0438\u0442\u0435 \u0448\u0430\u0433 \u0438\u043b\u0438 \u0441\u0432\u044f\u0436\u0438\u0442\u0435\u0441\u044c \u0441 \u043d\u0430\u0448\u0435\u0439 \u0441\u043b\u0443\u0436\u0431\u043e\u0439 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438.",
	2200: "\u041c\u044b \u0441\u0442\u043e\u043b\u043a\u043d\u0443\u043b\u0438\u0441\u044c \u0441 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u043e\u0439 \u043f\u0440\u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u0435 \u043a \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0430\u0443\u0434\u0438\u043e \/ \u0432\u0438\u0434\u0435\u043e. \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043d\u0430\u043c \u043e\u0431 \u044d\u0442\u043e\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com",
	3061: "\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0437\u0430\u043a\u0440\u0435\u043f\u0438\u0442\u044c \u0434\u043e 5 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0445 \u0442\u043e\u043b\u044c\u043a\u043e",
	4000: "\u041f\u043e\u0434\u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0441\u043e\u0437\u0434\u0430\u043d\u0430 \u0432\u043d\u0443\u0442\u0440\u0438 \u043f\u0430\u043f\u043a\u0438, \u0435\u0441\u043b\u0438 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u0443\u0436\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043e",
	4001: "\u0415\u0441\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0443\u0436\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u0443\u043f\u0435\u0440\u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u043c, \u0432\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0440\u043e\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
	4002: "\u042d\u0442\u043e \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043d\u0435 \u0434\u043e\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f \u0432 \u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u043e\u043c \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0435",
	4003: "\u0417\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043e",
	4004: "\u042d\u0442\u043e \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u043e \u0434\u043b\u044f \u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u043f\u0430\u043f\u043a\u0438. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043e\u0442\u043c\u0435\u043d\u0438\u0442\u0435 \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u044e",
	4006: "\u0417\u0430\u044f\u0432\u043a\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438",
	4007: "\u0412\u044b \u043d\u0435 \u0438\u043c\u0435\u0435\u0442\u0435 \u043f\u0440\u0430\u0432\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u044d\u0442\u043e \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435",
	4008: "\u0414\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0434\u043b\u044f \u044d\u0442\u043e\u0439 \u043f\u043e\u0434\u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u043d\u0435 \u0434\u043e\u043f\u0443\u0441\u043a\u0430\u044e\u0442\u0441\u044f",
	4009: "\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043e",
	4010: "\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0441\u043e\u0437\u0434\u0430\u043d\u043e \u0432\u043d\u0443\u0442\u0440\u0438 \u043f\u0430\u043f\u043a\u0438 \u0441 \u043f\u043e\u0434\u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0435\u0439",
	4011: "\u0427\u0442\u043e\u0431\u044b \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0448\u0430\u0433\u0438, \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0440\u0430\u0437\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e",
	4012: "\u0427\u0442\u043e\u0431\u044b \u043e\u0442\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0448\u0430\u0433\u0438, \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0440\u0430\u0437\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e",
	4013: "\u0427\u0442\u043e\u0431\u044b \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0448\u0430\u0433\u0438, \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0440\u0430\u0437\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e",
	4014: "\u0427\u0442\u043e\u0431\u044b \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438 \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0448\u0430\u0433\u0438, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0430\u0437\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e",
	3001: "\u0413\u0438\u0434 \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0434\u043b\u044f \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0430 \u0432 \u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0435\u0435 \u0432\u0440\u0435\u043c\u044f. \u0427\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0443\u0441, \u043f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u0432 \u00ab\u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438\u00bb \u0432 \u043c\u0435\u043d\u044e \u0443\u0447\u0435\u0442\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438",
	3002: "\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043d\u0430\u0447\u0430\u043b\u0430\u0441\u044c. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043d\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0439\u0442\u0435 \u0438 \u043d\u0435 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0439\u0442\u0435 \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u0434\u043e \u0442\u0435\u0445 \u043f\u043e\u0440, \u043f\u043e\u043a\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0430. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0443\u0441 \u0438\u043c\u043f\u043e\u0440\u0442\u0430 \u043f\u043e\u0441\u043b\u0435 \u0435\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f",
	3003: "\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442",
	3004: "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0447\u0442\u044b \u0443\u0436\u0435 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d",
	3005: "\u042d\u0442\u043e\u0442 URL-\u0430\u0434\u0440\u0435\u0441 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u0443\u0435\u0442 \u0441 \u0434\u0440\u0443\u0433\u043e\u0439 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0435\u0439 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 URL-\u0430\u0434\u0440\u0435\u0441",
	3006: "\u041f\u0430\u043f\u043a\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0430\u0442\u044c \u043e\u0434\u043d\u043e\u043c\u0443 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044e",
	3007: "\u0414\u043e\u043c\u0435\u043d \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442",
	3008: "\u0412\u044b \u0434\u043e\u0441\u0442\u0438\u0433\u043b\u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u0435\u043b\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0445 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432",
	3009: "\u041e\u043f\u0440\u043e\u0441 \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0435",
	3010: "\u0428\u0430\u0433 \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0430\u0442\u044c \u043e\u0434\u043d\u043e\u043c\u0443 \u0438 \u0442\u043e\u043c\u0443 \u0436\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0443",
	3011: "\u0414\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u044d\u0442\u043e\u0439 \u041e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u0440\u0438\u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u0432\u044f\u0436\u0438\u0442\u0435\u0441\u044c \u0441 \u0432\u0430\u0448\u0438\u043c \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u043c",
	3012: "\u0413\u0438\u0434(\u044b) \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0430\u0442\u044c \u043a \u043e\u0434\u043d\u043e\u0439 \u043f\u0430\u043f\u043a\u0435",
	3013: "\u042d\u0442\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043f\u0430\u0440\u043e\u0439 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0438 \u0438\u043c\u0435\u043d\u0435\u043c \u043f\u043e\u043b\u044f",
	3014: "\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043d",
	3015: "\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0443\u0436\u0435 \u0432\u0435\u0440\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d",
	3017: "OTP \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d \u043d\u0430 \u0432\u0430\u0448 \u0430\u0434\u0440\u0435\u0441 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0447\u0442\u044b",
	3018: "\u0420\u043e\u043b\u044c \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442",
	3019: "\u0421\u0442\u0440\u0430\u043d\u0430 \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442",
	3020: "\u0413\u043e\u0440\u043e\u0434 \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442",
	3023: "\u0412\u0430\u0448\u0430 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u044f \u043d\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u0435\u043d\u0430. \u0417\u0430 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043e\u0431\u0440\u0430\u0449\u0430\u0439\u0442\u0435\u0441\u044c \u0432 support@csod.com",
	3024: "\u0424\u0430\u0439\u043b JSON \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438",
	3025: "\u041c\u044b \u0441\u0442\u043e\u043b\u043a\u043d\u0443\u043b\u0438\u0441\u044c \u0441 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u043e\u0439 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443",
	3026: "\u0424\u0430\u0439\u043b JSON \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430",
	3027: "\u0428\u0430\u0433 \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d. \u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0445\u043e\u0442\u044f \u0431\u044b \u043e\u0434\u0438\u043d \u0448\u0430\u0433 \u0434\u043b\u044f \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430",
	3028: "\u0414\u043e\u0441\u0442\u0438\u0433\u043d\u0443\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u043b\u0438\u043c\u0438\u0442 \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438 \u0442\u0443\u0440\u0430",
	3047: "\u0412\u0430\u0448\u0430 \u0443\u0447\u0435\u0442\u043d\u0430\u044f \u0437\u0430\u043f\u0438\u0441\u044c \u0431\u044b\u043b\u0430 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u0438\u0437-\u0437\u0430 \u0447\u0440\u0435\u0437\u043c\u0435\u0440\u043d\u044b\u0445 \u043e\u0448\u0438\u0431\u043e\u043a \u0432\u0445\u043e\u0434\u0430 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443. \u041c\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u043b\u0438 \u0432\u0430\u043c \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0435 \u043f\u0438\u0441\u044c\u043c\u043e \u0441 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f\u043c\u0438 \u043f\u043e \u0435\u0433\u043e \u0440\u0430\u0437\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0435. \u0414\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u043e\u043c\u043e\u0449\u0438, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u0432\u044f\u0436\u0438\u0442\u0435\u0441\u044c \u0441 \u043d\u0430\u043c\u0438 \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com",
	3033: "\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0435 \u0443\u0447\u0435\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u0432\u044f\u0436\u0438\u0442\u0435\u0441\u044c \u0441 support@csod.com \u0438\u043b\u0438 \u0432\u0430\u0448\u0438\u043c \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u043c \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u043e\u043c\u043e\u0449\u0438.",
	4020: "\u041f\u0440\u043e\u0435\u043a\u0442 \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0433\u043e \u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430 \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442; \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430 \u043d\u0435 \u0434\u043e\u043f\u0443\u0441\u043a\u0430\u044e\u0442\u0441\u044f.",
	4021: "\u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 [envs]",
	2054: "\u0421\u0442\u0430\u0440\u044b\u0439 \u0438 \u043d\u043e\u0432\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u043d\u0435 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u043c\u0438",
	playNextBotTour: "\u0412\u043E\u0441\u043F\u0440\u043E\u0438\u0437\u0432\u0435\u0441\u0442\u0438 \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0438\u0439 \u0431\u043E\u0442-\u0442\u0443\u0440",
	defaultBotEndingMessage: "\u041C\u044B \u0437\u0430\u043A\u043E\u043D\u0447\u0438\u043B\u0438, \u0431\u043E\u043B\u044C\u0448\u043E\u0435 \u0441\u043F\u0430\u0441\u0438\u0431\u043E! \u0427\u0442\u043E-\u043D\u0438\u0431\u0443\u0434\u044C \u0435\u0449\u0435, \u043F\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043C \u044F \u043D\u0430\u0447\u043D\u0443?",
	loginNext: "\u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439",
	3068: "\u0421\u0440\u043E\u043A \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044F \u0432\u0430\u0448\u0435\u0433\u043E \u0441\u0442\u0430\u0440\u043E\u0433\u043E \u043F\u0430\u0440\u043E\u043B\u044F \u0438\u0441\u0442\u0435\u043A, \u0443\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u0435 \u043D\u043E\u0432\u044B\u0439 \u043F\u0430\u0440\u043E\u043B\u044C \u0434\u043B\u044F \u0432\u0445\u043E\u0434\u0430.",
	includeScreen: "\u0412\u043A\u043B\u044E\u0447\u0438\u0442\u044C \u0441\u043D\u0438\u043C\u043E\u043A \u044D\u043A\u0440\u0430\u043D\u0430",
	feedbackPlaceholder: "\u0415\u0441\u0442\u044C \u043E\u0442\u0437\u044B\u0432\u044B? \u041C\u044B \u0445\u043E\u0442\u0435\u043B\u0438 \u0431\u044B \u0443\u0441\u043B\u044B\u0448\u0430\u0442\u044C \u044D\u0442\u043E!",
	feedbackOptBtn: "\u041D\u0430\u0436\u043C\u0438\u0442\u0435, \u0447\u0442\u043E\u0431\u044B \u0432\u044B\u0434\u0435\u043B\u0438\u0442\u044C \u0438\u043B\u0438 \u0441\u043A\u0440\u044B\u0442\u044C \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044E",
	highlight: "\u0412\u044B\u0434\u0435\u043B\u044F\u0442\u044C",
	send: "\u041E\u0442\u043F\u0440\u0430\u0432\u043B\u044F\u0442\u044C",
	done: "\u0421\u0434\u0435\u043B\u0430\u043D\u043D\u044B\u0439",
	hide: "\u0421\u043A\u0440\u044B\u0432\u0430\u0442\u044C"
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.tr_TR = {
	currentPage: "Ge\u00e7erli Sayfa",
	myChat: "mychat",
	import: "Ithalat",
	export: "Ihracat",
	redirectLivetour: "Canl\u0131 Oyna",
	guideNotAvailable: "K\u0131lavuz ge\u00e7erli URL'de mevcut de\u011fil. Rehber URL'sine gitmek istiyor musunuz?",
	downloadPPT: "PPT'yi indirin",
	btnYes: "Evet",
	btnNo: "Hay\u0131r",
	inApp: "Uygulama \u0130\u00e7i",
	live: "Ya\u015famak",
	resume: "\u00d6zge\u00e7mi\u015f",
	tourCloseConfirm: "Bu K\u0131lavuzu ger\u00e7ekten kapatmak istiyor musunuz?",
	notifSnoozeDonotMsg: "L\u00fctfen bunu daha sonra izlemek isteyip istemedi\u011finizi veya bildirimi hi\u00e7 g\u00f6stermemek isteyip istemedi\u011finizi bize bildirin?",
	surveyThanksMessage: "Yan\u0131t\u0131n\u0131z\u0131 verdi\u011finiz i\u00e7in te\u015fekk\u00fcr ederiz",
	testMePassedMessage: "Tebrikler! Sen Ge\u00e7tin",
	testMeFailedMessage: "Oops! Ba\u015far\u0131s\u0131z Oldunuz",
	testMeGuideEfficiency: "Test verimlili\u011fi:",
	testMeGuideEffectiveness: "Test etkinli\u011fi:",
	testMeTestTime: "Test S\u00fcresi",
	testMeExpectedTime: "Beklenen S\u00fcre",
	testMeStepsTaken: "At\u0131lan Ad\u0131mlar",
	testMeExpectedSteps: "Beklenen Ad\u0131mlar",
	testMeRetakeTestBtn: "Tekrar S\u0131nava Girme",
	testMeResultTitle: "MyTest Sonucu",
	ConfirmIfTestMeModeRidirect: "K\u0131lavuz ge\u00e7erli URL'de mevcut de\u011fil. K\u0131lavuz URL'sine y\u00f6nlendirmek istiyor musunuz?",
	feedCmt: "Geri bildiriminiz bizim i\u00e7in de\u011ferlidir!<br> L\u00fctfen bize 500 karakter veya daha k\u0131sa s\u00fcrede ne d\u00fc\u015f\u00fcnd\u00fc\u011f\u00fcn\u00fcz\u00fc s\u00f6yleyin",
	doNotShowAgain: "Bir daha g\u00f6sterme",
	neverShowAgain: "Bir Daha Asla G\u00f6sterme",
	skipGuide: "Atlama K\u0131lavuzu",
	surveyErrorMsg: "L\u00fctfen en az bir soruyu cevaplay\u0131n",
	redirect: "Y\u00f6nlendirme",
	liveGuide: "Canl\u0131 Rehber",
	question: "Soru",
	exitGuide: "\u00c7\u0131k\u0131\u015f K\u0131lavuzu",
	continueGuide: "Devam K\u0131lavuzu",
	stop: "Durmak",
	characters: "Karakter:",
	survey: "Anket",
	testMeStopMessage: "TestMe modundas\u0131n\u0131z, \u00e7\u0131kmak i\u00e7in DURDUR'u t\u0131klat\u0131n",
	testMeFailedErrorMessage: "Hedef ad\u0131m\u0131na ula\u015famad\u0131n\u0131z.<br>{CORRECT_STEPS} d\u0131\u015f\u0131nda {TOTAL_STEPS} ad\u0131mlar\u0131n\u0131z var.",
	surveyCommentPlaceholder: "Buraya yaz\u0131n! En fazla 500 karakter",
	pushTourSnoozeMsg: "Bu Otomatik Ba\u015flatma Turu i\u00e7in ertelenecek",
	of: "in",
	wbMplayerTitle: "\u00d6\u011freticiler",
	wbDragTooltip: "Bu oynat\u0131c\u0131y\u0131 sayfada herhangi bir yere s\u00fcr\u00fckleyip b\u0131rak\u0131n",
	dontShowEdResult: "Bunu g\u00f6rmek istemiyorum",
	mPlayerHeaderTitle: "Mikro Oynat\u0131c\u0131",
	closePreview: "\u00d6nizlemeyi Kapat",
	elmNotFound: "G\u00f6r\u00fcn\u00fc\u015fe g\u00f6re ad\u0131m i\u00e7in \u00f6\u011feyi bulam\u0131yoruz:",
	elmNotFoundInfo: "Bu ad\u0131m\u0131 oynamak i\u00e7in do\u011fru sayfada oldu\u011funuzdan emin olun. Ayr\u0131ca se\u00e7ilen \u00f6\u011feyi g\u00f6r\u00fcp g\u00f6remedi\u011finizi de kontrol edin",
	notExists: "Yok",
	elmNotFoundHeader: "Ad\u0131m \u00f6\u011fesi bulunamad\u0131",
	goToStep: "Ad\u0131ma git",
	notFoundStep: "Ad\u0131m i\u00e7in eleman\u0131 bulamad\u0131k #",
	pleaseReselect: "L\u00fctfen \u00f6\u011feyi yeniden se\u00e7meyi deneyin.",
	stepRuleMatchErr: "Yap\u0131land\u0131rma hatas\u0131: Ad\u0131m kurallar\u0131 e\u015fle\u015fmiyor",
	guideRuleMatchErr: "Yap\u0131land\u0131rma hatas\u0131: K\u0131lavuz kurallar\u0131 e\u015fle\u015fmiyor",
	stepNotFoundRedirect: "Ad\u0131m bu sayfada bulunamad\u0131. Y\u00f6nlendirme yapmak ister misiniz?",
	branchStepMessagePopup: "Devam etmek i\u00e7in l\u00fctfen a\u015fa\u011f\u0131daki g\u00f6revlerden birini se\u00e7in",
	btnSkip: "Atlamak",
	kindlyHoverPopup: "L\u00fctfen a\u00e7\u0131l\u0131r pencereyi a\u00e7mak i\u00e7in fareyi bu \u00f6\u011fenin \u00fczerine getirin",
	stepPlayIsdefinedPopover: "Oynayaca\u011f\u0131n\u0131z ad\u0131m a\u00e7\u0131l\u0131r pencerede tan\u0131mlan\u0131r",
	elmNotFoundWestpac: "Ad\u0131m bulunamad\u0131 \u2013 Bu K\u0131lavuz sona erecek",
	findingElementMessage: "Ad\u0131m bulmaya \u00e7al\u0131\u015fmak...",
	badDomain: "Ge\u00e7erli alan ad\u0131 ve URL, MyGuide'\u0131 \u00e7al\u0131\u015ft\u0131rma yetkisine sahip de\u011fildir. Yard\u0131m i\u00e7in l\u00fctfen Y\u00f6neticinizle ileti\u015fime ge\u00e7in.",
	hostJsError: "Web sayfas\u0131nda bir hata var gibi g\u00f6r\u00fcn\u00fcyor. MyGuide devam edemiyor",
	remember: "Beni Hat\u0131rla",
	forgotPass: "\u015eifrenizi mi unuttunuz?",
	dontHavAcc: "Hesab\u0131n\u0131z yok mu?",
	loginTitle: "Oturum a\u00e7ma",
	loginOtpScreenTitle: "Oturum A\u00e7mak i\u00e7in OTP'yi do\u011frulama",
	forgetPassTitl: "\u015eifreyi S\u0131f\u0131rla",
	placeholderEmail: "E-posta Kimli\u011fi",
	placeholderPassword: "Parola",
	placeholderNewPassword: "Yeni \u015eifre",
	placeholderCurrentPassword: "Ge\u00e7erli \u015eifre",
	placeholderFirstname: "Ad",
	placeholderLastname: "Soyad\u0131",
	placeholderPasswordC: "\u015eifreyi Onayla",
	btnCancel: "\u0130ptal",
	btnPayment: "Y\u00fckseltme plan\u0131",
	btnSubmit: "G\u00f6nder",
	btnLogin: "Oturum a\u00e7ma",
	termsOfUse: "Kullan\u0131m \u015eartlar\u0131",
	andLabel: "ve",
	policyPrivacy: "Gizlilik Politikas\u0131",
	passwordError: "\u015eifre 8 hane uzunlu\u011funda olmal\u0131d\u0131r",
	confirmPasswordError: "Parola ve onay parolas\u0131 ayn\u0131 olmal\u0131d\u0131r",
	firstnameError: "L\u00fctfen ge\u00e7erli bir ad girin",
	lastnameError: "L\u00fctfen ge\u00e7erli bir soyad\u0131 girin",
	emailError: "L\u00fctfen ge\u00e7erli bir E-posta Kimli\u011fi girin",
	orgError: "L\u00fctfen ge\u00e7erli bir Kurulu\u015f URL'si girin",
	otpError: "L\u00fctfen ge\u00e7erli OTP girin",
	placeholderOtp: "OTP'nizi buraya girin",
	otpSentDesc: "Ge\u00e7erli bir e-posta adresi sa\u011flanm\u0131\u015fsa, size bir s\u0131f\u0131rlama ba\u011flant\u0131s\u0131 g\u00f6nderilecektir.<br>E-postay\u0131 birka\u00e7 dakika i\u00e7inde g\u00f6rmezseniz, l\u00fctfen spam klas\u00f6r\u00fcn\u00fczde bir e-posta olup olmad\u0131\u011f\u0131n\u0131 kontrol edin.",
	btnOtpVerify: "OTP'yi do\u011frulama",
	alreadyHavAcc: "Zaten bir hesab\u0131n\u0131z m\u0131 var?",
	smartbiteMessageError: "L\u00fctfen mesaj girin",
	smartbiteLinkError: "L\u00fctfen ge\u00e7erli bir ba\u011flant\u0131 girin",
	noGuidesOnThisPage: "Bu sayfada Rehber Yok!",
	clickOn: "\u00dczerine t\u0131klay\u0131n ",
	contactUs: "Bize Ula\u015f\u0131n",
	search: "Aramak",
	noRecordFound: "Kay\u0131t bulunamad\u0131",
	category: "Klas\u00f6r",
	subCategory: "Alt Klas\u00f6r",
	confirmPasswordRequired: "Gerekli \u015eifreyi Onayla",
	logInWithSSO: "TOA ile giri\u015f yap",
	inputPlaceHolderSearch: "Herhangi bir K\u0131lavuzu aray\u0131n",
	noGuideAvailableFor: "Araman\u0131za uygun K\u0131lavuz(lar) bulunamad\u0131",
	tryModifyingYourSearch: "Arama \u00f6l\u00e7\u00fctlerinizi de\u011fi\u015ftirmeyi deneyin",
	signInVerifyYourEmail: "Bu E-posta Kimli\u011fi do\u011frulanmad\u0131. Ayr\u0131nt\u0131lar i\u00e7in l\u00fctfen e-postan\u0131z\u0131 kontrol edin",
	signInVerifyYourAccount: "Size OTP i\u00e7eren bir e-posta g\u00f6nderdik. Oturum A\u00e7ma i\u015flemini tamamlamak i\u00e7in l\u00fctfen hesab\u0131n\u0131z\u0131 do\u011frulay\u0131n",
	maintenanceMessage: "Bak\u0131m devam ediyor. L\u00fctfen support@csod.com \u00fczerinden bizimle ileti\u015fime ge\u00e7in",
	back: "Geri",
	changePassword: "Parolay\u0131 de\u011fi\u015ftir",
	startTestAuto: "Otomasyon Testini Ba\u015flat",
	msgPasswordChangedSuccess: "\u015eifreniz ba\u015far\u0131yla de\u011fi\u015ftirildi",
	msgConfirmNewPasswordError: "Parolay\u0131 Onayla Yeni Parola ile ayn\u0131 olmal\u0131d\u0131r",
	enterUrl: "Ekip URL'sini girin",
	dragPlaceholderDropThis: "Bunu b\u0131rak ",
	dragPlaceholderHere: " burada",
	termsOfService: "Terim",
	versionText: "S\u00fcr\u00fcm",
	videoStepSuccessMessage: "Ad\u0131m\u0131n\u0131z ba\u015far\u0131yla olu\u015fturuldu",
	importSuccessMessage: "K\u0131lavuz ba\u015far\u0131yla y\u00fcklendi. \u0130\u00e7e aktarma durumunu kontrol etmek i\u00e7in G\u00f6rev Durumu'na gidin",
	worldBankHelpSupport: "Ara\u00e7 \u0130pu\u00e7lar\u0131 gibi baz\u0131 ara\u00e7lar yaln\u0131zca aray\u00fczde g\u00f6r\u00fcnt\u00fclenebilir",
	helpSupport: "Yard\u0131m ve Destek",
	page: "sayfa",
	selectAnApplication: "Bir Uygulama Se\u00e7in",
	refresh: "Yenilemek",
	loginBtn: "Oturum a\u00e7ma",
	account: "Hesap",
	taskStatus: "G\u00f6rev durumu ",
	logoutBtn: "Oturum kapatma",
	app: "App:",
	firstStep: "\u0130lk Ad\u0131m",
	lastStep: "Son Ad\u0131m",
	startTest: "Testi Ba\u015flat",
	noInappStepInGuide: "Bu k\u0131lavuzda sat\u0131r i\u00e7i ad\u0131m olmad\u0131\u011f\u0131ndan TestMe devam edemiyor",
	settingBtn: "Geli\u015fmi\u015f Ayarlar",
	orgSetting: "Kurulu\u015f ayarlar\u0131",
	close: "Kapatmak",
	pdf: ".PDF",
	downloadPptx: ".PPT",
	giphy: ".GIF",
	downloadWord: "Belge",
	downloadBlog: "Blog Yaz\u0131lar\u0131",
	downloadTxt: "D\u00fcz metin",
	serviceErrorMessage: "Oops! Bir hata olu\u015ftu. L\u00fctfen bir s\u00fcre sonra tekrar deneyin. Ayr\u0131ca herhangi bir yard\u0131m i\u00e7in support@csod.com adresinden bize e-posta g\u00f6nderebilirsiniz.",
	guidesTab: "Rehberleri",
	noGuideCreatedYet: "Hen\u00fcz Rehber olu\u015fturulmad\u0131!",
	noCategoryCreatedYet: "Hen\u00fcz Klas\u00f6r olu\u015fturulmad\u0131!",
	chatbot: "mychat",
	notAutorised: "Gerekli eri\u015fime sahip de\u011filsiniz, l\u00fctfen Y\u00f6netici ile ileti\u015fime ge\u00e7in",
	ok: "TAMAM",
	apiError: "Yap\u0131land\u0131rma hatas\u0131. L\u00fctfen Y\u00f6netici ile ileti\u015fime ge\u00e7in",
	select: "Se\u00e7mek",
	mute_unmute: "Sesi Kapat\/Sesi A\u00e7",
	privacyPolicy: "Gizlilik ve \u00c7erezler",
	privacyPolicyText: "MyGuide \u00e7erezleri kullan\u0131r. Devam ederseniz, \u015eartlar ve Gizlilik Politikam\u0131z\u0131 kabul etmi\u015f ve \u00e7erezleri kullanmam\u0131za izin vermi\u015f olursunuz.",
	terms: "Terim",
	westPecErrorMessage: "Bu uygulamaya eri\u015fme yetkiniz yoktur. L\u00fctfen Westpac'\u0131n a\u011f\u0131nda oturum a\u00e7\u0131n",
	noApp: "Uygulama bulunamad\u0131",
	role: "Rol:",
	all: "T\u00fcm",
	video: "Video",
	course: "Kurs",
	article: "Makale",
	image: "Resim",
	pathways: "Yol",
	preview: "\u00d6nizleme",
	more: "Daha",
	history: "Tarih",
	publish: "Yay\u0131nlamak",
	selectGuideLink: "L\u00fctfen Ba\u011flant\u0131 k\u0131lavuzu'nu se\u00e7in",
	selectGuideBeforeSubmit: "L\u00fctfen g\u00f6ndermeden \u00f6nce bir Rehber se\u00e7in",
	change: "De\u011fi\u015ftirmek",
	checkNow: "\u015eimdi Kontrol Et",
	minutes: "tutanak",
	clickHere: "buraya t\u0131klay\u0131n",
	youAlmostDone: "Neredeyse bitti!",
	setOrg: "Kurulu\u015funuzu kurmak i\u00e7in",
	apps: "Apps",
	me: "Beni",
	playStep: "Ad\u0131m\u0131 Oynat",
	miniPlayerHelp: "Yard\u0131m",
	defaultMiniPlayerHelp: "Yard\u0131m",
	defaultConfirmIfSlideshowOrRedirect: "Bu ad\u0131m ge\u00e7erli URL'de kullan\u0131lam\u0131yor.<br>Ad\u0131m URL'sine gitmek mi yoksa slayt g\u00f6sterisi oynatmak m\u0131 istiyorsunuz?",
	defaultServiceErrorMessage: "Oops! Bir hata olu\u015ftu. L\u00fctfen bir s\u00fcre sonra tekrar deneyin. Ayr\u0131ca herhangi bir yard\u0131m i\u00e7in support@csod.com adresinden bize e-posta g\u00f6nderebilirsiniz.",
	defaultMaintenanceMessage: "Bak\u0131m devam ediyor. L\u00fctfen support@csod.com \u00fczerinden bizimle ileti\u015fime ge\u00e7in",
	userNotFollowingGuideMessage: "G\u00f6r\u00fcn\u00fc\u015fe g\u00f6re bu K\u0131lavuzun par\u00e7as\u0131 olmayan ad\u0131mlar\u0131 ger\u00e7ekle\u015ftiriyorsunuz. Art\u0131k K\u0131lavuzu takip etmek istemiyorsan\u0131z, \u00c7\u0131k\u0131\u015f K\u0131lavuzu'na t\u0131klay\u0131n",
	defaultUserNotFollowingGuideMessage: "G\u00f6r\u00fcn\u00fc\u015fe g\u00f6re bu K\u0131lavuzun par\u00e7as\u0131 olmayan ad\u0131mlar\u0131 ger\u00e7ekle\u015ftiriyorsunuz. Art\u0131k K\u0131lavuzu takip etmek istemiyorsan\u0131z, \u00c7\u0131k\u0131\u015f K\u0131lavuzu'na t\u0131klay\u0131n",
	resumeGuide: "\u00d6zge\u00e7mi\u015f K\u0131lavuzu",
	defaultResumeGuideMessage: "\u00d6zge\u00e7mi\u015f K\u0131lavuzu",
	backToLogin: "Giri\u015f Yap'a Geri D\u00f6n",
	filters: "Filtre",
	thisApp: "Bu Uygulama",
	thisWebsite: "Bu Web Sitesi",
	maxFreeTourLimit: "Maksimum tur s\u0131n\u0131r\u0131na ula\u015f\u0131ld\u0131",
	passwordRegexCheck: "Parola, en az bir b\u00fcy\u00fck harf, bir k\u00fc\u00e7\u00fck harf ve bir say\u0131sal de\u011fer dahil olmak \u00fczere en az 8 karakter i\u00e7ermelidir",
	countLimit: "99+",
	microsoftServiceKey: "L\u00fctfen Microsoft Bili\u015fsel Hizmetler Konu\u015fma abonelik anahtar\u0131n\u0131z\u0131 girin",
	numberOfImgFile: "G\u00f6r\u00fcnt\u00fc dosyalar\u0131n\u0131n ve metin dosyalar\u0131n\u0131n say\u0131s\u0131 ayn\u0131 olmal\u0131d\u0131r",
	availableOn: "\u015eurada mevcuttur:",
	tooltipUnpubWorkflowTitle: "Yay\u0131nlanmam\u0131\u015f \u0130\u015f Ak\u0131\u015f\u0131",
	tooltipUnpubParentWorkflowTitle: "Yay\u0131mlanm\u0131\u015f \u0130\u015f Ak\u0131\u015f\u0131, Yay\u0131mlanmam\u0131\u015f \u00dcst Klas\u00f6r(ler)",
	tooltipPubParentWorkflowTitle: "Yay\u0131mlanm\u0131\u015f \u0130\u015f Ak\u0131\u015f\u0131, Yay\u0131mlanm\u0131\u015f Klas\u00f6r",
	tooltipUnpubTooltipTitle: "Yay\u0131nlanmam\u0131\u015f Ara\u00e7 \u0130pucu",
	tooltipUnpubParentTooltipTitle: "Yay\u0131mlanm\u0131\u015f Ara\u00e7 \u0130pucu, Yay\u0131mlanmam\u0131\u015f \u00dcst Klas\u00f6r(ler)",
	tooltipPubParentTooltipTitle: "Yay\u0131nlanan Ara\u00e7 \u0130pucu, Yay\u0131nlanm\u0131\u015f Klas\u00f6r",
	tooltipUnpubTutorialTitle: "Yay\u0131nlanmam\u0131\u015f \u00d6\u011fretici",
	tooltipUnpubParentTutorialTitle: "Yay\u0131mlanm\u0131\u015f \u00d6\u011fretici, Yay\u0131mlanmam\u0131\u015f \u00dcst Klas\u00f6r(ler)",
	tooltipPubParentTutorialTitle: "Yay\u0131nlanan \u00d6\u011fretici, Yay\u0131mlanm\u0131\u015f Klas\u00f6r",
	tooltipUnpubSubFolderTitle: "Yay\u0131mlanmam\u0131\u015f Alt Klas\u00f6r",
	tooltipUnpubSubFolderDesc: "K\u0131lavuzlar\u0131 d\u00fczenlemek i\u00e7in alt klas\u00f6rleri kullanma",
	tooltipUnpubParentSubFolderTitle: "Yay\u0131mlanm\u0131\u015f Alt Klas\u00f6r, Yay\u0131mlanmam\u0131\u015f \u00dcst Klas\u00f6r(ler)",
	tooltipPubParentSubFolderTitle: "Yay\u0131mlanm\u0131\u015f Alt Klas\u00f6r, Yay\u0131mlanm\u0131\u015f Klas\u00f6r",
	tooltipPubParentSubFolderDesc: "K\u0131lavuzlar\u0131 D\u00fczenler",
	exitSurvey: "Anketten \u00c7\u0131k",
	disable: "Devre d\u0131\u015f\u0131 b\u0131rakmak",
	instructionExitSurvey: "Anketten \u00c7\u0131k, kullan\u0131c\u0131 tamamlanmadan \u00f6nce bir k\u0131lavuzdan \u00e7\u0131kt\u0131\u011f\u0131nda g\u00f6sterilir",
	msgVideoNotFound: "Videonuzu y\u00fcklerken l\u00fctfen bir s\u00fcre sonra deneyin",
	msgGiphyNotFound: "GIF'inizi y\u00fcklerken, l\u00fctfen bir s\u00fcre sonra deneyin",
	userPref: "Tercihlerim",
	manageAccount: "Y\u00f6netici portal\u0131",
	analyticsPortal: "\u0130\u00e7g\u00f6r\u00fcler portal\u0131",
	errorInvalidUrl: "Ge\u00e7erli bir URL de\u011fil",
	wbFooterText: "ITS Teknik \u00d6\u011frenme",
	navigationMenu: "Gezinme men\u00fcs\u00fc",
	clearHistory: "Ge\u00e7mi\u015fi Temizle",
	userDeniedMessage: "Kullan\u0131c\u0131 taraf\u0131ndan reddedilen Kamera ve Mikrofon eri\u015fim izinleri",
	pushNotification: "Anl\u0131k Bildirimler",
	viewDetail: "Detay\u0131 G\u00f6r\u00fcnt\u00fcle",
	contactAdmin: "Daha fazla yard\u0131m i\u00e7in l\u00fctfen support@csod.com veya Y\u00f6neticinizle ileti\u015fime ge\u00e7in",
	noAppOnDomain: "Ge\u00e7erli etki alan\u0131 i\u00e7in uygulama atanmad\u0131 ",
	noGuidesOnDomain: "Rehber bulunamad\u0131",
	apply: "Uygulamak",
	invalidLoginCred: "Ge\u00e7ersiz oturum a\u00e7ma kimlik bilgileri. Birden fazla ba\u015far\u0131s\u0131z denemeden sonra hesab\u0131n\u0131z kilitlenir, hesab\u0131n\u0131z\u0131n kilidini a\u00e7mak i\u00e7in bir e-posta al\u0131rs\u0131n\u0131z veya \u015fifrenizi s\u0131f\u0131rlayabilirsiniz",
	resendOTP: "OTP'yi yeniden g\u00f6nder",
	sendFeedback: "Geri Bildirim G\u00f6nder",
	guideNotExist: "Bu K\u0131lavuz bu sayfada mevcut de\u011fil (Hata: Etki alan\u0131 uyu\u015fmazl\u0131\u011f\u0131) ",
	cdnAccess: "<b>\u00dczg\u00fcn\u00fcz<\/b>. <br><br>Sunucular\u0131m\u0131zla ilgili bir sorun var gibi g\u00f6r\u00fcn\u00fcyor.<br> Hata bize bildirildi ve m\u00fcmk\u00fcn olan en k\u0131sa s\u00fcrede d\u00fczeltece\u011fiz",
	tourPlayError: "Rehber oynat\u0131lamaz. K\u0131lavuz ayr\u0131nt\u0131lar\u0131 al\u0131n\u0131rken hata olu\u015ftu",
	playerMode: "Oynat\u0131c\u0131 modu",
	closePanel: "Paneli kapat",
	switchCreatorMode: "\u0130\u00e7erik \u00dcretici Modu'na ge\u00e7me",
	extensionContextError: "Uzant\u0131 ba\u011flam\u0131 ge\u00e7ersiz k\u0131l\u0131nd\u0131. Devam etmek i\u00e7in l\u00fctfen sayfay\u0131 yeniden y\u00fckleyin",
	otpSent: "OTP e-postan\u0131za yeniden g\u00f6nderildi, l\u00fctfen gelen kutunuzu kontrol edin",
	startOver: "Yeniden Ba\u015fla",
	yesResume: "\u00d6zge\u00e7mi\u015f",
	dontShowAgain: "Bir daha g\u00f6sterme",
	notificationHeader: "Bir bildiriminiz var!",
	watchLater: "Daha sonra izleyin",
	pushSnoozeMsg: "Bu bildirim i\u00e7in ertelenecektir",
	showAgain: "Tekrar g\u00f6ster",
	noGuidesOnThisTab: "Bu sayfada bildirim yok",
	iAgree: "Kabul Ediyorum",
	viewMore: "Daha Fazlas\u0131n\u0131 G\u00f6r",
	lostInternetConnection: "Sunucu ba\u011flant\u0131s\u0131 kesildi. L\u00fctfen yeniden ba\u011flan\u0131n ve yeniden deneyin",
	next: "\u00d6n\u00fcm\u00fczdeki",
	recent: "Yeni",
	older: "Eski",
	atoz: "A'dan Z'ye",
	ztoa: "Z - A",
	clear: "Berrak",
	tooltipDontShowAgain: "Bildirimler art\u0131k g\u00f6r\u00fcnmez. Bir bildirimi \u015fimdi etkinle\u015ftirmek i\u00e7in, fareyle \u00fczerine gelin ve 'Tekrar G\u00f6ster'i t\u0131klay\u0131n.",
	tooltipWatchLater1: "Bildirimler i\u00e7in ertelenir",
	tooltipWatchLater2: "ve bundan sonra g\u00f6r\u00fcnecektir. Bir bildirimi \u015fimdi etkinle\u015ftirmek i\u00e7in, fareyle \u00fczerine gelin ve 'Tekrar G\u00f6ster'i t\u0131klay\u0131n.",
	hour: "saat",
	hours: "Saat",
	insightsTracker: "\u0130\u00e7g\u00f6r\u00fcler \u0130zleyici",
	slideshow: "Slayt G\u00f6sterisi",
	autoplay: "OTOMAT\u0130K OYNATMA",
	powerFormOldData: "Mevcut veriler",
	powerFormNewData: "Yeni veriler girmek i\u00e7in bu formu kullan\u0131n",
	powerFormNewDataMore: "Mevcut verileriniz g\u00f6r\u00fcnm\u00fcyorsa, verilerinizi g\u00f6r\u00fcnt\u00fclemek i\u00e7in l\u00fctfen sol \u00fcstteki oka t\u0131klay\u0131n. Daha sonra verilerin izin verilen madde i\u015faretli bi\u00e7ime kopyalanmas\u0131 gerekir.",
	powerFormTitle: "Veri Giri\u015f Yard\u0131mc\u0131s\u0131",
	powerFormMandatory: "Bu zorunlu bir aland\u0131r, maksimum karakter s\u0131n\u0131r\u0131 ",
	belongToOtherApp: "Bu K\u0131lavuz, {APPNAME} uygulamas\u0131na ait olan {TOURURL} \u00fczerinde olu\u015fturulmu\u015ftur. L\u00fctfen bu K\u0131lavuzu bu uygulamaya kopyalay\u0131n ve tekrar deneyin",
	setDomain: "{TOURURL} \u00f6\u011fesinin ge\u00e7erli uygulama etki alan\u0131 ayarlar\u0131na eklenmesi gerekti\u011finden eminseniz, l\u00fctfen ekleyin ve yeniden deneyin",
	on: "\u00dcZER\u0130NDE",
	off: "KAPALI",
	btnPrev: "\u00d6nceki",
	btnPrevious: "\u00d6nceki",
	taskList: "G\u00f6rev Listesi",
	unprocessedVideo: "Videonuz i\u015flenirken l\u00fctfen bekleyin.",
	searchResult: "Arama Sonucu",
	pleaseWait: "L\u00fctfen bekleyin!",
	mediaDownloadMsg: "Dosyalar\u0131n\u0131z\u0131 indirmeye haz\u0131rlarken",
	mediaFileNotFound: "Medya dosyas\u0131 bulunamad\u0131",
	searchInFolder: "Klas\u00f6rde ara",
	currentPageSearchPlaceholder: "Ge\u00e7erli sayfada bulunan K\u0131lavuz(lar)\u0131 aray\u0131n",
	brandLogo: "Marka Logosu",
	accessibility: "Eri\u015filebilirlik",
	replay: "Replay",
	defaultGreetingMessage: "Selam! MyGuide'a ho\u015f geldiniz. Size nas\u0131l yard\u0131mc\u0131 olabilirim? L\u00fctfen bir bot oldu\u011fumu unutmay\u0131n.",
	defaultErrorMessage: "\u00dczg\u00fcn\u00fcm, bunu anlamad\u0131m. Daha spesifik olabilir misiniz? ",
	defaultEndMessage: "\u0130\u015fimiz bitti, \u00e7ok te\u015fekk\u00fcr ederim!",
	greetingMessage: "Selam! MyGuide'a ho\u015f geldiniz. Size nas\u0131l yard\u0131mc\u0131 olabilirim? L\u00fctfen bir bot oldu\u011fumu unutmay\u0131n.",
	errorMessage: "\u00dczg\u00fcn\u00fcm, bunu anlamad\u0131m. Daha spesifik olabilir misiniz? ",
	endMessage: "\u0130\u015fimiz bitti, \u00e7ok te\u015fekk\u00fcr ederim!",
	guideLnkToRedirect: "Sayfaya y\u00f6nlendirmek ve k\u0131lavuzu oynatmak i\u00e7in a\u015fa\u011f\u0131daki ba\u011flant\u0131y\u0131 kullan\u0131n",
	otpTimer: "\u015eurada tekrar deneyebilirsiniz: ",
	seconds: " Saniye",
	limitWarning: "Ba\u015far\u0131s\u0131z denemelerin maksimum s\u0131n\u0131r\u0131na ula\u015ft\u0131n\u0131z",
	403: "Bu istekle ilgili bir sorunla kar\u015f\u0131la\u015ft\u0131k. L\u00fctfen bunu tekrar deneyin. Sorun devam ederse, support@csod.com adresinden bize bildirin",
	405: "Bu iste\u011fi i\u015flerken bir sorunla kar\u015f\u0131la\u015ft\u0131k. L\u00fctfen bunu tekrar deneyin. Sorun devam ederse, support@csod.com adresinden bize bildirin",
	429: "\u00c7ok fazla istek",
	1003: "Kimlik do\u011frulama s\u0131ras\u0131nda bir sorunla kar\u015f\u0131la\u015ft\u0131k. L\u00fctfen yeniden giri\u015f yap\u0131n ve tekrar deneyin. Sorun devam ederse, sayfay\u0131 yenileyin ve yeniden deneyin",
	1007: "Kimlik do\u011frulama s\u0131ras\u0131nda bir sorunla kar\u015f\u0131la\u015ft\u0131k. L\u00fctfen tekrar deneyin. Sorun devam ederse, support@csod.com adresinden bize bildirin",
	1005: "<b>\u00dczg\u00fcn\u00fcz<\/b>. <br><br>\u0130stekte veya sunucular\u0131m\u0131zda bir sorun var gibi g\u00f6r\u00fcn\u00fcyor.<br> Hata bize bildirildi ve m\u00fcmk\u00fcn olan en k\u0131sa s\u00fcrede d\u00fczeltece\u011fiz",
	1009: "Kullan\u0131c\u0131 e-postas\u0131 do\u011frulanmad\u0131",
	1014: "Bak\u0131m devam ediyor. L\u00fctfen support@csod.com \u00fczerinden bizimle ileti\u015fime ge\u00e7in",
	1017: "Kimlik do\u011frulama s\u0131ras\u0131nda bir sorunla kar\u015f\u0131la\u015ft\u0131k. L\u00fctfen yeniden giri\u015f yap\u0131n ve tekrar deneyin. Sorun devam ederse, support@csod.com adresinden bize bildirin",
	1018: "Ad\u0131m olu\u015fturmak i\u00e7in maksimum s\u0131n\u0131ra ula\u015ft\u0131n\u0131z",
	2000: "Bu istekle ilgili bir sorunla kar\u015f\u0131la\u015ft\u0131k. Bize haber verildi. L\u00fctfen bunu tekrar deneyin. Sorun devam ederse, support@csod.com adresinden bize bildirin",
	2001: "Ge\u00e7ersiz oturum a\u00e7ma kimlik bilgileri. Birden fazla ba\u015far\u0131s\u0131z denemeden sonra hesab\u0131n\u0131z kilitlenir, hesab\u0131n\u0131z\u0131n kilidini a\u00e7mak i\u00e7in bir e-posta al\u0131rs\u0131n\u0131z veya \u015fifrenizi s\u0131f\u0131rlayabilirsiniz",
	2002: "Ge\u00e7ersiz veya s\u00fcresi dolmu\u015f OTP",
	2003: "Y\u00fcklenen dosya ge\u00e7erli bir resim de\u011fil (JPG ve PNG dosyalar\u0131 desteklenir)",
	2004: "Oturumun s\u00fcresi doldu",
	2005: "Bu kullan\u0131c\u0131y\u0131 takip edemedik. L\u00fctfen yenileyin ve tekrar deneyin. Sorun devam ederse, support@csod.com adresinden bize bildirin",
	2006: "E-posta adresi yanl\u0131\u015f. L\u00fctfen tekrar deneyin",
	2007: "Kullan\u0131c\u0131 Rol\u00fc ge\u00e7ersiz. L\u00fctfen tekrar deneyin",
	2008: "Do\u011fru bir G\u00f6rev t\u00fcr\u00fc belirtmeniz gerekir",
	2009: "Verilen Ba\u015fvuru ge\u00e7ersizdir; silinmi\u015f veya hi\u00e7 var olmam\u0131\u015f olabilir",
	2010: "Ge\u00e7ersiz giri\u015f parametreleri. L\u00fctfen yenileyin ve tekrar deneyin. Sorun devam ederse, support@csod.com adresinden bize bildirin",
	2011: "Verilen Kurulu\u015f ge\u00e7ersizdir; silinmi\u015f veya hi\u00e7 var olmam\u0131\u015f olabilir",
	2012: "\u0130stekte eksik veya ge\u00e7ersiz bir parametre vard\u0131. L\u00fctfen tekrar kontrol edin ve tekrar deneyin. Sorun devam ederse, support@csod.com adresinden bize bildirin",
	2013: "\u0130stekte eksik veya ge\u00e7ersiz bir parametre vard\u0131. L\u00fctfen tekrar kontrol edin ve tekrar deneyin. Sorun devam ederse, support@csod.com adresinden bize bildirin",
	2014: "S\u00fcper Y\u00f6netici i\u00e7in gerekli parametre[organization_id]",
	2015: "Sa\u011flanan G\u00f6r\u00fcnt\u00fc Verileri i\u00e7eri\u011fi ge\u00e7ersiz. L\u00fctfen tekrar kontrol edin ve tekrar deneyin. Sorun devam ederse bize bildirin support@csod.com",
	2016: "Ge\u00e7ersiz Etki Alan\u0131",
	2017: "\u0130stekte eksik veya ge\u00e7ersiz bir parametre vard\u0131",
	2018: "\u0130stekte eksik veya ge\u00e7ersiz bir parametre vard\u0131",
	2019: "Arad\u0131\u011f\u0131n\u0131z \u015fey mevcut de\u011fil veya silinmi\u015f olabilir",
	2020: "\u0130stekte eksik veya ge\u00e7ersiz bir parametre vard\u0131",
	2021: "Kimlik do\u011frulama sunucusu bu iste\u011fi i\u015flemeye \u00e7al\u0131\u015f\u0131rken beklenmeyen bir hatayla kar\u015f\u0131la\u015ft\u0131. L\u00fctfen sorunu support@csod.com",
	2022: "\u0130stekte eksik veya ge\u00e7ersiz bir parametre vard\u0131. L\u00fctfen ge\u00e7erli bir Ekip URL'si girin",
	2023: "Kimlik do\u011frulama sunucusu bu iste\u011fi i\u015flemeye \u00e7al\u0131\u015f\u0131rken beklenmeyen bir hatayla kar\u015f\u0131la\u015ft\u0131. L\u00fctfen sorunu support@csod.com",
	2024: "Dosya boyutu 5 MB'den k\u00fc\u00e7\u00fck olmal\u0131d\u0131r",
	2025: "\u0130stekte eksik veya ge\u00e7ersiz bir parametre vard\u0131. L\u00fctfen ge\u00e7erli bir URL girin",
	2026: "Parola, en az bir b\u00fcy\u00fck harf, bir k\u00fc\u00e7\u00fck harf ve bir say\u0131sal de\u011fer dahil olmak \u00fczere en az 8 karakter i\u00e7ermelidir",
	2027: "Ge\u00e7ersiz \u015eifre",
	2028: "\u0130stekte eksik veya ge\u00e7ersiz bir parametre vard\u0131",
	2029: "Sa\u011flad\u0131\u011f\u0131n\u0131z \u015eehir desteklenmiyor",
	2030: "\u0130stekte eksik veya ge\u00e7ersiz bir parametre vard\u0131",
	2031: "Kimlik do\u011frulama sunucusu bu parametreyi i\u015flemeye \u00e7al\u0131\u015f\u0131rken beklenmeyen bir hatayla kar\u015f\u0131la\u015ft\u0131. L\u00fctfen sorunu support@csod.com",
	2032: "Ge\u00e7ersiz parametre[file_id]",
	2033: "Ge\u00e7ersiz URL. L\u00fctfen tekrar kontrol edin ve tekrar deneyin",
	2034: "Kimlik do\u011frulama sunucusu bu parametreleri i\u015flerken beklenmeyen bir hatayla kar\u015f\u0131la\u015ft\u0131. L\u00fctfen sorunu support@csod.com",
	2035: "Kimlik do\u011frulama sunucusu bu AppKey i\u015flenirken beklenmeyen bir hatayla kar\u015f\u0131la\u015ft\u0131. L\u00fctfen sorunu support@csod.com",
	2036: "Kimlik do\u011frulama sunucusu beklenmeyen bir hatayla kar\u015f\u0131la\u015ft\u0131. L\u00fctfen bu sayfay\u0131 yenileyin. Sorun devam ederse, sorunu support@csod.com",
	2044: "Bu ad\u0131m i\u00e7in \u00e7eviriyi yanl\u0131\u015f yerle\u015ftirmi\u015f gibi g\u00f6r\u00fcn\u00fcyoruz. L\u00fctfen Varsay\u0131lan Dil'e ge\u00e7in ve ad\u0131m\u0131 yeniden \u00e7evirin veya daha fazla ayr\u0131nt\u0131 i\u00e7in m\u00fc\u015fteri deste\u011fimizle ileti\u015fime ge\u00e7in.",
	2200: "Ses \/ video kontrollerine eri\u015firken bir sorunla kar\u015f\u0131la\u015ft\u0131k. L\u00fctfen taray\u0131c\u0131 ayarlar\u0131n\u0131z\u0131 kontrol edin ve tekrar deneyin. Sorun devam ederse bize bildirin support@csod.com",
	3061: "Yaln\u0131zca 5 adede kadar K\u0131lavuzu sabitleyebilirsiniz",
	4000: "Bir K\u0131lavuz zaten olu\u015fturulmu\u015fsa, alt kategori bir Klas\u00f6r\u00fcn i\u00e7inde olu\u015fturulamaz",
	4001: "Bir kullan\u0131c\u0131 zaten S\u00fcper Y\u00f6neticiyse, Kullan\u0131c\u0131 Rol\u00fcn\u00fc de\u011fi\u015ftiremezsiniz",
	4002: "Yay\u0131mlanm\u0131\u015f bir K\u0131lavuzda bu eyleme izin verilmez",
	4003: "Kilitli K\u0131lavuz yay\u0131nlanam\u0131yor",
	4004: "Bu eyleme yay\u0131mlanm\u0131\u015f bir klas\u00f6rde izin verilmez. L\u00fctfen yay\u0131ndan kald\u0131r\u0131n",
	4006: "Ba\u015fvuru verilen kurulu\u015fa ait olmal\u0131d\u0131r",
	4007: "Bu eylemi ger\u00e7ekle\u015ftirme yetkiniz yoktur",
	4008: "Bu alt kategori i\u00e7in eyleme izin verilmiyor",
	4009: "Rehber yay\u0131nlanmal\u0131",
	4010: "K\u0131lavuz, alt kategorisi olan bir klas\u00f6r\u00fcn i\u00e7inde olu\u015fturulamaz",
	4011: "Ad\u0131m(lar) olu\u015fturmak i\u00e7in bu K\u0131lavuzun kilidini a\u00e7man\u0131z gerekir",
	4012: "Ad\u0131m(lar)\u0131 d\u00fczenlemek i\u00e7in bu K\u0131lavuzun kilidini a\u00e7man\u0131z gerekir",
	4013: "Ad\u0131m(lar)\u0131 silmek i\u00e7in bu K\u0131lavuzun kilidini a\u00e7man\u0131z gerekir",
	4014: "Ad\u0131m(lar)\u0131 kopyalay\u0131p yap\u0131\u015ft\u0131rmak i\u00e7in bu K\u0131lavuzun kilidini a\u00e7man\u0131z gerekir",
	3001: "K\u0131lavuz yak\u0131nda d\u0131\u015fa aktar\u0131lmak \u00fczere kullan\u0131ma sunulacakt\u0131r. Durumu kontrol etmek i\u00e7in, hesap men\u00fcs\u00fc alt\u0131ndaki 'G\u00f6rev Durumu'na gidin",
	3002: "Y\u00fckleme ba\u015flad\u0131. L\u00fctfen y\u00fckleme tamamlanana kadar taray\u0131c\u0131y\u0131 yenilemeyin veya kapatmay\u0131n. \u0130\u00e7e aktarma durumunu tamamland\u0131ktan sonra kontrol edebilirsiniz",
	3003: "Kullan\u0131c\u0131 zaten var",
	3004: "E-posta Kimli\u011fi zaten do\u011frulanm\u0131\u015f",
	3005: "Bu URL di\u011fer uygulama yap\u0131land\u0131rmalar\u0131yla \u00e7ak\u0131\u015f\u0131yor, l\u00fctfen ba\u015fka bir URL eklemeyi deneyin",
	3006: "Klas\u00f6r ayn\u0131 uygulamaya ait olmal\u0131d\u0131r",
	3007: "Etki alan\u0131 zaten var",
	3008: "Olu\u015fturulan Rehber(ler)in maksimum s\u0131n\u0131r\u0131na ula\u015ft\u0131n\u0131z",
	3009: "Anket verilen K\u0131lavuzda zaten var",
	3010: "Ad\u0131m ayn\u0131 K\u0131lavuza ait olmal\u0131d\u0131r",
	3011: "Bu kurulu\u015f ask\u0131ya al\u0131nd\u0131. L\u00fctfen Y\u00f6neticinizle ileti\u015fime ge\u00e7in",
	3012: "K\u0131lavuz(lar) ayn\u0131 klas\u00f6re ait olmal\u0131d\u0131r",
	3013: "Bu K\u0131lavuz, verilen nesne \u00e7ifti ve alan ad\u0131yla zaten var",
	3014: "Kullan\u0131c\u0131 ask\u0131ya al\u0131nd\u0131",
	3015: "Kullan\u0131c\u0131 zaten do\u011frulanm\u0131\u015f",
	3017: "OTP e-posta adresinize ba\u015far\u0131yla g\u00f6nderildi",
	3018: "Rol zaten var",
	3019: "\u00dclke zaten var",
	3020: "\u015eehir zaten var",
	3023: "Kurulu\u015funuz do\u011frulanmad\u0131. Yard\u0131m i\u00e7in l\u00fctfen support@csod.com ileti\u015fime ge\u00e7in",
	3024: "JSON dosyas\u0131 bu kurulu\u015f i\u00e7in kullan\u0131lam\u0131yor",
	3025: "Kimlik do\u011frulama s\u0131ras\u0131nda bir sorunla kar\u015f\u0131la\u015ft\u0131k. L\u00fctfen bunu tekrar deneyin. Sorun devam ederse sayfay\u0131 yenileyin ve yeniden deneyin",
	3026: "JSON dosyas\u0131 bu K\u0131lavuz i\u00e7in kullan\u0131lam\u0131yor",
	3027: "Ad\u0131m yok. K\u0131lavuzu yay\u0131mlamak i\u00e7in en az bir ad\u0131m olu\u015fturma",
	3028: "Maksimum tur yay\u0131nlama s\u0131n\u0131r\u0131na ula\u015f\u0131ld\u0131",
	3047: "Hesab\u0131n\u0131z a\u015f\u0131r\u0131 giri\u015f hatalar\u0131 nedeniyle ge\u00e7ici olarak kilitlendi. Size kilidini a\u00e7ma ad\u0131mlar\u0131n\u0131 i\u00e7eren bir e-posta g\u00f6nderdik. Daha fazla yard\u0131m i\u00e7in l\u00fctfen support@csod.com adresinden bizimle ileti\u015fime ge\u00e7in",
	3033: "Ge\u00e7ersiz kimlik bilgileri. Daha fazla yard\u0131m i\u00e7in l\u00fctfen support@csod.com veya Y\u00f6neticinizle ileti\u015fime ge\u00e7in.",
	4020: "Bu K\u0131lavuzun bir tasla\u011f\u0131 zaten mevcuttur; bir K\u0131lavuzun birden fazla tasla\u011f\u0131na izin verilmez.",
	4021: "[envs] parametresinin ge\u00e7ersiz de\u011ferleri",
	2054: "Eski ve yeni bir \u015fifre ayn\u0131 olamaz",
	playNextBotTour: "Sonraki bot turunu oyna",
	defaultBotEndingMessage: "Bitirdik, \u00E7ok te\u015Fekk\u00FCrler! Ba\u015Flamadan \u00F6nce ba\u015Fka bir \u015Fey var m\u0131?",
	loginNext: "\u00d6n\u00fcm\u00fczdeki",
	3068: "Eski \u015Fifrenizin s\u00FCresi doldu, giri\u015F i\u00E7in yeni \u015Fifre belirleyin.",
	includeScreen: "Ekran G\u00F6r\u00FCnt\u00FCs\u00FCn\u00FC Dahil Et",
	feedbackPlaceholder: "Geri bildiriminiz var m\u0131? Duymay\u0131 \u00E7ok isteriz!",
	feedbackOptBtn: "Bilgileri vurgulamak veya gizlemek i\u00E7in t\u0131klay\u0131n",
	highlight: "Vurgulamak",
	send: "G\u00F6ndermek",
	done: "Tamamlamak",
	hide: "Saklamak"
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.zh_CN = {
	currentPage: "\u5f53\u524d\u9875\u9762",
	myChat: "\u6211\u7684\u804a\u5929",
	import: "\u8fdb\u53e3",
	export: "\u51fa\u53e3",
	redirectLivetour: "\u5b9e\u65f6\u64ad\u653e",
	guideNotAvailable: "\u6307\u5357\u5728\u5f53\u524d URL \u4e0a\u4e0d\u53ef\u7528\u3002\u662f\u5426\u8981\u8f6c\u5230\u6307\u5357\u7f51\u5740\uff1f",
	downloadPPT: "\u4e0b\u8f7dPPT",
	btnYes: "\u662f\u7684",
	btnNo: "\u4e0d",
	inApp: "\u5e94\u7528\u5185",
	live: "\u4f4f",
	resume: "\u6062\u590d",
	tourCloseConfirm: "\u662f\u5426\u786e\u5b9e\u8981\u5173\u95ed\u672c\u6307\u5357\uff1f",
	notifSnoozeDonotMsg: "\u8bf7\u544a\u8bc9\u6211\u4eec\u60a8\u662f\u5426\u60f3\u7a0d\u540e\u89c2\u770b\u6216\u4ece\u4e0d\u663e\u793a\u901a\u77e5\uff1f",
	surveyThanksMessage: "\u611f\u8c22\u60a8\u7684\u56de\u590d",
	testMePassedMessage: "\u795d\u8d3a\uff01\u4f60\u901a\u8fc7\u4e86",
	testMeFailedMessage: "\u54ce\u5440\uff01\u4f60\u5931\u8d25\u4e86",
	testMeGuideEfficiency: "\u6d4b\u8bd5\u6548\u7387\uff1a",
	testMeGuideEffectiveness: "\u6d4b\u8bd5\u6548\u679c\uff1a",
	testMeTestTime: "\u6d4b\u8bd5\u65f6\u95f4",
	testMeExpectedTime: "\u9884\u671f\u65f6\u95f4",
	testMeStepsTaken: "\u91c7\u53d6\u7684\u6b65\u9aa4",
	testMeExpectedSteps: "\u9884\u671f\u6b65\u9aa4",
	testMeRetakeTestBtn: "\u91cd\u8003",
	testMeResultTitle: "\u6211\u7684\u6d4b\u8bd5\u7ed3\u679c",
	ConfirmIfTestMeModeRidirect: "\u6307\u5357\u5728\u5f53\u524d URL \u4e0a\u4e0d\u53ef\u7528\u3002\u662f\u5426\u8981\u91cd\u5b9a\u5411\u5230\u6307\u5357\u7f51\u5740\uff1f",
	feedCmt: "\u60a8\u7684\u53cd\u9988\u5bf9\u6211\u4eec\u5f88\u6709\u4ef7\u503c\uff01<br> \u8bf7\u7528 500 \u4e2a\u5b57\u7b26\u6216\u66f4\u5c11\u7684\u5b57\u7b26\u544a\u8bc9\u6211\u4eec\u60a8\u7684\u60f3\u6cd5",
	doNotShowAgain: "\u4e0d\u518d\u663e\u793a",
	neverShowAgain: "\u518d\u4e5f\u4e0d\u663e\u793a",
	skipGuide: "\u8df3\u8fc7\u6307\u5357",
	surveyErrorMsg: "\u8bf7\u81f3\u5c11\u56de\u7b54\u4e00\u4e2a\u95ee\u9898",
	redirect: "\u91cd\u5b9a\u5411",
	liveGuide: "\u73b0\u573a\u5bfc\u6e38",
	question: "\u95ee\u9898",
	exitGuide: "\u9000\u51fa\u6307\u5357",
	continueGuide: "\u7ee7\u7eed\u6307\u5357",
	stop: "\u505c",
	characters: "\u5b57\u7b26\uff1a",
	survey: "\u8c03\u67e5",
	testMeStopMessage: "\u60a8\u5904\u4e8e\u6d4b\u8bd5\u6211\u6a21\u5f0f\uff0c\u5355\u51fb\u505c\u6b62\u9000\u51fa",
	testMeFailedErrorMessage: "\u60a8\u65e0\u6cd5\u8fbe\u5230\u76ee\u6807\u6b65\u9aa4\u3002<br>\u4f60\u4ece {TOTAL_STEPS} \u4e2d\u6b63\u786e\u83b7\u5f97\u4e86 {CORRECT_STEPS} \u4e2a\u6b65\u9aa4\u3002",
	surveyCommentPlaceholder: "\u5728\u8fd9\u91cc\u8f93\u5165\uff01\u6700\u591a 500 \u4e2a\u5b57\u7b26",
	pushTourSnoozeMsg: "\u6b64\u81ea\u52a8\u53d1\u5e03\u4e4b\u65c5\u5c06\u88ab\u6682\u505c",
	of: "\u4e4b",
	wbMplayerTitle: "\u6559\u7a0b",
	wbDragTooltip: "\u5c06\u6b64\u64ad\u653e\u5668\u62d6\u653e\u5230\u9875\u9762\u4e0a\u7684\u4efb\u4f55\u4f4d\u7f6e",
	dontShowEdResult: "\u6211\u4e0d\u60f3\u770b\u5230\u8fd9\u4e2a",
	mPlayerHeaderTitle: "\u5fae\u578b\u64ad\u653e\u5668",
	closePreview: "\u5173\u95ed\u9884\u89c8",
	elmNotFound: "\u4f3c\u4e4e\u6211\u4eec\u627e\u4e0d\u5230\u8be5\u6b65\u9aa4\u7684\u5143\u7d20\uff1a",
	elmNotFoundInfo: "\u786e\u4fdd\u60a8\u5728\u6b63\u786e\u7684\u9875\u9762\u4e0a\u624d\u80fd\u6267\u884c\u6b64\u6b65\u9aa4\u3002\u8fd8\u8981\u68c0\u67e5\u60a8\u662f\u5426\u53ef\u4ee5\u770b\u5230\u6240\u9009\u5143\u7d20",
	notExists: "\u4e0d\u5b58\u5728",
	elmNotFoundHeader: "\u672a\u627e\u5230\u6b65\u9aa4\u5143\u7d20",
	goToStep: "\u8f6c\u5230\u6b65\u9aa4",
	notFoundStep: "\u6211\u4eec\u627e\u4e0d\u5230\u6b65\u9aa4\u7684\u5143\u7d20#",
	pleaseReselect: "\u8bf7\u5c1d\u8bd5\u91cd\u65b0\u9009\u62e9\u8be5\u5143\u7d20\u3002",
	stepRuleMatchErr: "\u914d\u7f6e\u9519\u8bef\uff1a\u6b65\u9aa4\u89c4\u5219\u4e0d\u5339\u914d",
	guideRuleMatchErr: "\u914d\u7f6e\u9519\u8bef\uff1a\u6307\u5357\u89c4\u5219\u4e0d\u5339\u914d",
	stepNotFoundRedirect: "\u5728\u6b64\u9875\u9762\u4e0a\u627e\u4e0d\u5230\u6b65\u9aa4\u3002\u662f\u5426\u8981\u91cd\u5b9a\u5411\uff1f",
	branchStepMessagePopup: "\u8bf7\u9009\u62e9\u4ee5\u4e0b\u4efb\u52a1\u4e4b\u4e00\u4ee5\u7ee7\u7eed",
	btnSkip: "\u8df3",
	kindlyHoverPopup: "\u8bf7\u5c06\u9f20\u6807\u60ac\u505c\u5728\u6b64\u5143\u7d20\u4e0a\u4ee5\u6253\u5f00\u5f39\u51fa\u7a97\u53e3",
	stepPlayIsdefinedPopover: "\u60a8\u8981\u64ad\u653e\u7684\u6b65\u9aa4\u5728\u5f39\u51fa\u6846\u4e0a\u5b9a\u4e49",
	elmNotFoundWestpac: "\u672a\u627e\u5230\u6b65\u9aa4 \u2013 \u672c\u6307\u5357\u5c06\u7ed3\u675f",
	findingElementMessage: "\u8bd5\u56fe\u627e\u5230\u6b65\u9aa4\u3002\u3002\u3002",
	badDomain: "\u5f53\u524d\u57df\u548c URL \u65e0\u6743\u8fd0\u884c MyGuide\u3002\u8bf7\u8054\u7cfb\u60a8\u7684\u7ba1\u7406\u5458\u5bfb\u6c42\u5e2e\u52a9\u3002",
	hostJsError: "\u7f51\u9875\u4e0a\u4f3c\u4e4e\u6709\u9519\u8bef\u3002\u6211\u7684\u5411\u5bfc\u65e0\u6cd5\u7ee7\u7eed",
	remember: "\u8bb0\u4f4f\u6211",
	forgotPass: "\u5fd8\u8bb0\u5bc6\u7801\uff1f",
	dontHavAcc: "\u6ca1\u6709\u5e10\u6237\uff1f",
	loginTitle: "\u767b\u5f55",
	loginOtpScreenTitle: "\u9a8c\u8bc1 OTP \u4ee5\u767b\u5f55",
	forgetPassTitl: "\u91cd\u7f6e\u5bc6\u7801",
	placeholderEmail: "\u7535\u5b50\u90ae\u4ef6\u7f16\u53f7",
	placeholderPassword: "\u5bc6\u7801",
	placeholderNewPassword: "\u65b0\u5bc6\u7801",
	placeholderCurrentPassword: "\u5f53\u524d\u5bc6\u7801",
	placeholderFirstname: "\u540d\u5b57",
	placeholderLastname: "\u59d3",
	placeholderPasswordC: "\u786e\u8ba4\u5bc6\u7801",
	btnCancel: "\u53d6\u6d88",
	btnPayment: "\u5347\u7ea7\u8ba1\u5212",
	btnSubmit: "\u63d0\u4ea4",
	btnLogin: "\u767b\u5f55",
	termsOfUse: "\u4f7f\u7528\u6761\u6b3e",
	andLabel: "\u548c",
	policyPrivacy: "\u9690\u79c1\u7b56\u7565",
	passwordError: "\u5bc6\u7801\u957f\u5ea6\u5fc5\u987b\u4e3a 8 \u4f4d\u6570\u5b57",
	confirmPasswordError: "\u5bc6\u7801\u548c\u786e\u8ba4\u5bc6\u7801\u5fc5\u987b\u76f8\u540c",
	firstnameError: "\u8bf7\u8f93\u5165\u6709\u6548\u7684\u540d\u5b57",
	lastnameError: "\u8bf7\u8f93\u5165\u6709\u6548\u7684\u59d3\u6c0f",
	emailError: "\u8bf7\u8f93\u5165\u6709\u6548\u7684\u7535\u5b50\u90ae\u4ef6ID",
	orgError: "\u8bf7\u8f93\u5165\u6709\u6548\u7684\u7ec4\u7ec7\u7f51\u5740",
	otpError: "\u8bf7\u8f93\u5165\u6709\u6548\u7684\u4e00\u6b21\u6027\u5bc6\u7801",
	placeholderOtp: "\u5728\u6b64\u8f93\u5165\u60a8\u7684\u4e00\u6b21\u6027\u5bc6\u7801",
	otpSentDesc: "\u5982\u679c\u63d0\u4f9b\u4e86\u6709\u6548\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff0c\u5219\u4f1a\u5411\u60a8\u53d1\u9001\u91cd\u7f6e\u94fe\u63a5\u3002<br>\u5982\u679c\u60a8\u5728\u51e0\u5206\u949f\u5185\u6ca1\u6709\u770b\u5230\u8be5\u7535\u5b50\u90ae\u4ef6\uff0c\u8bf7\u68c0\u67e5\u60a8\u7684\u5783\u573e\u90ae\u4ef6\u6587\u4ef6\u5939\u4e2d\u662f\u5426\u6709\u6765\u81ea",
	btnOtpVerify: "\u9a8c\u8bc1\u4e00\u6b21\u6027\u5bc6\u7801",
	alreadyHavAcc: "\u5df2\u6709\u5e10\u6237\uff1f",
	smartbiteMessageError: "\u8bf7\u8f93\u5165\u7559\u8a00",
	smartbiteLinkError: "\u8bf7\u8f93\u5165\u6709\u6548\u94fe\u63a5",
	noGuidesOnThisPage: "\u6b64\u9875\u9762\u4e0a\u6ca1\u6709\u53ef\u7528\u7684\u6307\u5357\uff01",
	clickOn: "\u70b9\u51fb ",
	contactUs: "\u8054\u7cfb\u6211\u4eec",
	search: "\u641c\u7d22",
	noRecordFound: "\u672a\u627e\u5230\u8bb0\u5f55",
	category: "\u6587\u4ef6\u5939",
	subCategory: "\u5b50\u6587\u4ef6\u5939",
	confirmPasswordRequired: "\u786e\u8ba4\u5bc6\u7801 \u5fc5\u586b",
	logInWithSSO: "\u4f7f\u7528 SSO \u767b\u5f55",
	inputPlaceHolderSearch: "\u641c\u7d22\u4efb\u4f55\u6307\u5357",
	noGuideAvailableFor: "\u672a\u627e\u5230\u4e0e\u60a8\u7684\u641c\u7d22\u5339\u914d\u7684\u6307\u5357",
	tryModifyingYourSearch: "\u5c1d\u8bd5\u4fee\u6539\u641c\u7d22\u6761\u4ef6",
	signInVerifyYourEmail: "\u6b64\u7535\u5b50\u90ae\u4ef6 ID \u5c1a\u672a\u9a8c\u8bc1\u3002\u8bf7\u67e5\u770b\u60a8\u7684\u7535\u5b50\u90ae\u4ef6\u4e86\u89e3\u8be6\u7ec6\u4fe1\u606f",
	signInVerifyYourAccount: "\u6211\u4eec\u5df2\u5411\u60a8\u53d1\u9001\u4e00\u5c01\u5305\u542b OTP \u7684\u7535\u5b50\u90ae\u4ef6\u3002\u8bf7\u9a8c\u8bc1\u60a8\u7684\u5e10\u6237\u4ee5\u5b8c\u6210\u767b\u5f55\u8fc7\u7a0b",
	maintenanceMessage: "\u7ef4\u62a4\u6b63\u5728\u8fdb\u884c\u4e2d\u3002\u8bf7\u901a\u8fc7 support@csod.com \u4e0e\u6211\u4eec\u8054\u7cfb",
	back: "\u8fd4\u56de",
	changePassword: "\u66f4\u6539\u5bc6\u7801",
	startTestAuto: "\u5f00\u59cb\u81ea\u52a8\u5316\u6d4b\u8bd5",
	msgPasswordChangedSuccess: "\u60a8\u7684\u5bc6\u7801\u5df2\u6210\u529f\u66f4\u6539",
	msgConfirmNewPasswordError: "\u786e\u8ba4\u5bc6\u7801\u5fc5\u987b\u4e0e\u65b0\u5bc6\u7801\u76f8\u540c",
	enterUrl: "\u8f93\u5165\u56e2\u961f\u7f51\u5740",
	dragPlaceholderDropThis: "\u653e\u4e0b\u8fd9\u4e2a ",
	dragPlaceholderHere: " \u8fd9\u91cc",
	termsOfService: "\u6761\u6b3e",
	versionText: "\u7248\u672c",
	videoStepSuccessMessage: "\u60a8\u7684\u6b65\u9aa4\u5df2\u6210\u529f\u521b\u5efa",
	importSuccessMessage: "\u6307\u5357\u4e0a\u4f20\u6210\u529f\u3002\u8f6c\u5230\u4efb\u52a1\u72b6\u6001\u4ee5\u68c0\u67e5\u5bfc\u5165\u72b6\u6001",
	worldBankHelpSupport: "\u67d0\u4e9b\u5de5\u5177\uff08\u4f8b\u5982\u5de5\u5177\u63d0\u793a\uff09\u53ea\u80fd\u5728\u754c\u9762\u4e2d\u67e5\u770b",
	helpSupport: "\u5e2e\u52a9\u4e0e\u652f\u6301",
	page: "\u9875",
	selectAnApplication: "\u9009\u62e9\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f",
	refresh: "\u5237\u65b0",
	loginBtn: "\u767b\u5f55",
	account: "\u5e10\u6237",
	taskStatus: "\u4efb\u52a1\u72b6\u6001 ",
	logoutBtn: "\u6ce8\u9500",
	app: "\u5e94\u7528\u7a0b\u5e8f\uff1a",
	firstStep: "\u7b2c\u4e00\u6b65",
	lastStep: "\u6700\u540e\u4e00\u6b65",
	startTest: "\u5f00\u59cb\u6d4b\u8bd5",
	noInappStepInGuide: "TestMe \u65e0\u6cd5\u7ee7\u7eed\uff0c\u56e0\u4e3a\u672c\u6307\u5357\u4e2d\u6ca1\u6709\u5185\u8054\u6b65\u9aa4",
	settingBtn: "\u9ad8\u7ea7\u8bbe\u7f6e",
	orgSetting: "\u7ec4\u7ec7\u8bbe\u7f6e",
	close: "\u5173\u95ed",
	pdf: ".PDF",
	downloadPptx: ".PPT",
	giphy: ".GIF",
	downloadWord: "\u516c\u6587",
	downloadBlog: "\u535a\u5ba2",
	downloadTxt: "\u7eaf\u6587\u672c",
	serviceErrorMessage: "\u54ce\u5440\uff01\u53d1\u751f\u9519\u8bef\u3002\u8bf7\u7a0d\u540e\u91cd\u8bd5\u3002\u60a8\u4e5f\u53ef\u4ee5\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u81f3 support@csod.com \u4ee5\u83b7\u53d6\u4efb\u4f55\u5e2e\u52a9",
	guidesTab: "\u6307\u5357",
	noGuideCreatedYet: "\u5c1a\u672a\u521b\u5efa\u6307\u5357\uff01",
	noCategoryCreatedYet: "\u5c1a\u672a\u521b\u5efa\u6587\u4ef6\u5939\uff01",
	chatbot: "\u6211\u7684\u804a\u5929",
	notAutorised: "\u60a8\u6ca1\u6709\u6240\u9700\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458",
	ok: "\u8fd8\u884c",
	apiError: "\u914d\u7f6e\u9519\u8bef\u3002\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458",
	select: "\u9009\u62e9",
	mute_unmute: "\u9759\u97f3\/\u53d6\u6d88\u9759\u97f3",
	privacyPolicy: "\u9690\u79c1\u548c\u997c\u5e72",
	privacyPolicyText: "MyGuide \u4f7f\u7528\u997c\u5e72\u3002\u5982\u679c\u60a8\u7ee7\u7eed\uff0c\u5373\u8868\u793a\u60a8\u540c\u610f\u6211\u4eec\u7684\u6761\u6b3e\u548c\u9690\u79c1\u653f\u7b56\uff0c\u5e76\u540c\u610f\u6211\u4eec\u4f7f\u7528 Cookie",
	terms: "\u6761\u6b3e",
	westPecErrorMessage: "\u60a8\u65e0\u6743\u8bbf\u95ee\u6b64\u5e94\u7528\u7a0b\u5e8f\u3002\u8bf7\u767b\u5f55\u897f\u592a\u5e73\u6d0b\u94f6\u884c\u7684\u7f51\u7edc",
	noApp: "\u672a\u627e\u5230\u5e94\u7528\u7a0b\u5e8f",
	role: "\u89d2\u8272\uff1a",
	all: "\u90fd",
	video: "\u89c6\u9891",
	course: "\u8bfe\u7a0b",
	article: "\u54c1",
	image: "\u56fe\u50cf",
	pathways: "\u9014\u5f84",
	preview: "\u9884\u89c8",
	more: "\u66f4\u591a",
	history: "\u5386\u53f2",
	publish: "\u53d1\u5e03",
	selectGuideLink: "\u8bf7\u9009\u62e9\u94fe\u63a5\u6307\u5357",
	selectGuideBeforeSubmit: "\u8bf7\u5728\u63d0\u4ea4\u524d\u9009\u62e9\u4e00\u4e2a\u6307\u5357",
	change: "\u6539\u53d8",
	checkNow: "\u7acb\u5373\u68c0\u67e5",
	minutes: "\u7eaa\u8981",
	clickHere: "\u70b9\u51fb\u8fd9\u91cc",
	youAlmostDone: "\u4f60\u5feb\u5b8c\u6210\u4e86\uff01",
	setOrg: "\u8bbe\u7f6e\u60a8\u7684\u7ec4\u7ec7",
	apps: "\u5e94\u7528\u7a0b\u5e8f",
	me: "\u6211",
	playStep: "\u64ad\u653e\u6b65\u9aa4",
	miniPlayerHelp: "\u5e2e\u52a9",
	defaultMiniPlayerHelp: "\u5e2e\u52a9",
	defaultConfirmIfSlideshowOrRedirect: "\u6b65\u9aa4\u5728\u5f53\u524d URL \u4e0a\u4e0d\u53ef\u7528\u3002<br>\u60a8\u8981\u8f6c\u5230\u6b65\u9aa4 URL \u8fd8\u662f\u64ad\u653e\u5e7b\u706f\u7247\uff1f",
	defaultServiceErrorMessage: "\u54ce\u5440\uff01\u53d1\u751f\u9519\u8bef\u3002\u8bf7\u7a0d\u540e\u91cd\u8bd5\u3002\u60a8\u4e5f\u53ef\u4ee5\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u81f3 support@csod.com \u4ee5\u83b7\u53d6\u4efb\u4f55\u5e2e\u52a9",
	defaultMaintenanceMessage: "\u7ef4\u62a4\u6b63\u5728\u8fdb\u884c\u4e2d\u3002\u8bf7\u901a\u8fc7 support@csod.com \u4e0e\u6211\u4eec\u8054\u7cfb",
	userNotFollowingGuideMessage: "\u60a8\u4f3c\u4e4e\u6b63\u5728\u6267\u884c\u4e0d\u5c5e\u4e8e\u672c\u6307\u5357\u7684\u6b65\u9aa4\u3002\u5982\u679c\u60a8\u4e0d\u518d\u5e0c\u671b\u9075\u5faa\u6307\u5357\uff0c\u8bf7\u5355\u51fb\u9000\u51fa\u6307\u5357",
	defaultUserNotFollowingGuideMessage: "\u60a8\u4f3c\u4e4e\u6b63\u5728\u6267\u884c\u4e0d\u5c5e\u4e8e\u672c\u6307\u5357\u7684\u6b65\u9aa4\u3002\u5982\u679c\u60a8\u4e0d\u518d\u5e0c\u671b\u9075\u5faa\u6307\u5357\uff0c\u8bf7\u5355\u51fb\u9000\u51fa\u6307\u5357",
	resumeGuide: "\u7b80\u5386\u6307\u5357",
	defaultResumeGuideMessage: "\u7b80\u5386\u6307\u5357",
	backToLogin: "\u8fd4\u56de\u767b\u5f55",
	filters: "\u8fc7\u6ee4 \u5668",
	thisApp: "\u8fd9\u4e2a\u7a0b\u5e8f",
	thisWebsite: "\u672c\u7f51\u7ad9",
	maxFreeTourLimit: "\u8fbe\u5230\u6700\u5927\u65c5\u884c\u9650\u5236",
	passwordRegexCheck: "\u5bc6\u7801\u5fc5\u987b\u81f3\u5c11\u5305\u542b 8 \u4e2a\u5b57\u7b26\uff0c\u5305\u62ec\u81f3\u5c11\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd\u3001\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd\u548c\u4e00\u4e2a\u6570\u503c",
	countLimit: "99+",
	microsoftServiceKey: "\u8bf7\u8f93\u5165\u4f60\u7684 Microsoft \u8ba4\u77e5\u670d\u52a1\u8bed\u97f3\u8ba2\u9605\u5bc6\u94a5",
	numberOfImgFile: "\u56fe\u50cf\u6587\u4ef6\u548c\u6587\u672c\u6587\u4ef6\u7684\u6570\u91cf\u5e94\u76f8\u540c",
	availableOn: "\u9002\u7528\u4e8e",
	tooltipUnpubWorkflowTitle: "\u672a\u53d1\u5e03\u7684\u5de5\u4f5c\u6d41",
	tooltipUnpubParentWorkflowTitle: "\u5df2\u53d1\u5e03\u7684\u5de5\u4f5c\u6d41\uff0c\u672a\u53d1\u5e03\u7684\u7236\u6587\u4ef6\u5939",
	tooltipPubParentWorkflowTitle: "\u5df2\u53d1\u5e03\u5de5\u4f5c\u6d41\uff0c\u5df2\u53d1\u5e03\u6587\u4ef6\u5939",
	tooltipUnpubTooltipTitle: "\u672a\u53d1\u5e03\u7684\u5de5\u5177\u63d0\u793a",
	tooltipUnpubParentTooltipTitle: "\u5df2\u53d1\u5e03\u7684\u5de5\u5177\u63d0\u793a\uff0c\u672a\u53d1\u5e03\u7684\u7236\u6587\u4ef6\u5939",
	tooltipPubParentTooltipTitle: "\u5df2\u53d1\u5e03\u5de5\u5177\u63d0\u793a\uff0c\u5df2\u53d1\u5e03\u6587\u4ef6\u5939",
	tooltipUnpubTutorialTitle: "\u672a\u53d1\u5e03\u7684\u6559\u7a0b",
	tooltipUnpubParentTutorialTitle: "\u5df2\u53d1\u5e03\u6559\u7a0b\uff0c \u672a\u53d1\u5e03\u7684\u7236\u6587\u4ef6\u5939",
	tooltipPubParentTutorialTitle: "\u5df2\u53d1\u5e03\u6559\u7a0b\uff0c \u5df2\u53d1\u5e03\u6587\u4ef6\u5939",
	tooltipUnpubSubFolderTitle: "\u672a\u53d1\u5e03\u7684\u5b50\u6587\u4ef6\u5939",
	tooltipUnpubSubFolderDesc: "\u4f7f\u7528\u5b50\u6587\u4ef6\u5939\u7ec4\u7ec7\u6307\u5357",
	tooltipUnpubParentSubFolderTitle: "\u5df2\u53d1\u5e03\u5b50\u6587\u4ef6\u5939\u3001\u672a\u53d1\u5e03\u7684\u7236\u6587\u4ef6\u5939",
	tooltipPubParentSubFolderTitle: "\u5df2\u53d1\u5e03\u5b50\u6587\u4ef6\u5939\u3001\u5df2\u53d1\u5e03\u6587\u4ef6\u5939",
	tooltipPubParentSubFolderDesc: "\u7ec4\u7ec7\u6307\u5357",
	exitSurvey: "\u9000\u51fa\u8c03\u67e5",
	disable: "\u7981\u7528",
	instructionExitSurvey: "\u5f53\u7528\u6237\u5728\u5b8c\u6210\u4e4b\u524d\u9000\u51fa\u6307\u5357\u65f6\uff0c\u5c06\u663e\u793a\u9000\u51fa\u8c03\u67e5",
	msgVideoNotFound: "\u4e0a\u4f20\u60a8\u7684\u89c6\u9891\uff0c\u8bf7\u5728\u4e00\u6bb5\u65f6\u95f4\u540e\u5c1d\u8bd5",
	msgGiphyNotFound: "\u4e0a\u4f20\u60a8\u7684 GIF\uff0c\u8bf7\u5728\u4e00\u6bb5\u65f6\u95f4\u540e\u5c1d\u8bd5",
	userPref: "\u6211\u7684\u504f\u597d",
	manageAccount: "\u7ba1\u7406\u95e8\u6237",
	analyticsPortal: "\u89c1\u89e3\u95e8\u6237",
	errorInvalidUrl: "\u4e0d\u662f\u6709\u6548\u7684\u7f51\u5740",
	wbFooterText: "\u667a\u80fd\u4ea4\u901a\u7cfb\u7edf\u6280\u672f\u5b66\u4e60",
	navigationMenu: "\u5bfc\u822a\u83dc\u5355",
	clearHistory: "\u6e05\u9664\u5386\u53f2\u8bb0\u5f55",
	userDeniedMessage: "\u7528\u6237\u62d2\u7edd\u6444\u50cf\u5934\u548c\u9ea6\u514b\u98ce\u8bbf\u95ee\u6743\u9650",
	pushNotification: "\u63a8\u9001\u901a\u77e5",
	viewDetail: "\u67e5\u770b\u8be6\u60c5",
	contactAdmin: "\u8bf7\u8054\u7cfb support@csod.com \u6216\u60a8\u7684\u7ba1\u7406\u5458\u4ee5\u83b7\u5f97\u8fdb\u4e00\u6b65\u7684\u5e2e\u52a9",
	noAppOnDomain: "\u672a\u4e3a\u5f53\u524d\u57df\u5206\u914d\u5e94\u7528\u7a0b\u5e8f ",
	noGuidesOnDomain: "\u672a\u627e\u5230\u6307\u5357",
	apply: "\u5e94\u7528",
	invalidLoginCred: "\u767b\u5f55\u51ed\u636e\u65e0\u6548\u3002\u591a\u6b21\u5c1d\u8bd5\u5931\u8d25\u540e\uff0c\u60a8\u7684\u5e10\u6237\u5c06\u88ab\u9501\u5b9a\uff0c\u60a8\u5c06\u6536\u5230\u4e00\u5c01\u89e3\u9501\u5e10\u6237\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u91cd\u7f6e\u5bc6\u7801",
	resendOTP: "\u91cd\u65b0\u53d1\u9001\u4e00\u6b21\u6027\u5bc6\u7801",
	sendFeedback: "\u53d1\u9001\u53cd\u9988",
	guideNotExist: "\u672c\u6307\u5357\u5728\u6b64\u9875\u9762\u4e0a\u4e0d\u53ef\u7528\uff08\u9519\u8bef\uff1a\u57df\u4e0d\u5339\u914d\uff09 ",
	cdnAccess: "<b>\u5bf9\u4e0d\u8d77<\/b> <br><br>\u6211\u4eec\u7684\u670d\u52a1\u5668\u4f3c\u4e4e\u6709\u95ee\u9898\u3002<br> \u6211\u4eec\u5df2\u6536\u5230\u6709\u5173\u8be5\u9519\u8bef\u7684\u901a\u77e5\uff0c\u5e76\u5c06\u5c3d\u5feb\u66f4\u6b63",
	tourPlayError: "\u6307\u5357\u4e0d\u80fd\u64ad\u653e\u3002\u68c0\u7d22\u6307\u5357\u8be6\u7ec6\u4fe1\u606f\u65f6\u51fa\u9519",
	playerMode: "\u64ad\u653e\u5668\u6a21\u5f0f",
	closePanel: "\u5173\u95ed\u9762\u677f",
	switchCreatorMode: "\u5207\u6362\u5230\u521b\u5efa\u8005\u6a21\u5f0f",
	extensionContextError: "\u6269\u5c55\u4e0a\u4e0b\u6587\u5931\u6548\u3002\u8bf7\u91cd\u65b0\u52a0\u8f7d\u9875\u9762\u4ee5\u7ee7\u7eed",
	otpSent: "\u4e00\u6b21\u6027\u5bc6\u7801\u5df2\u91cd\u65b0\u53d1\u9001\u5230\u60a8\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u8bf7\u68c0\u67e5\u60a8\u7684\u6536\u4ef6\u7bb1",
	startOver: "\u91cd\u65b0\u5f00\u59cb",
	yesResume: "\u6062\u590d",
	dontShowAgain: "\u4e0d\u518d\u663e\u793a",
	notificationHeader: "\u60a8\u6536\u5230\u901a\u77e5\uff01",
	watchLater: "\u7a0d\u540e\u89c2\u770b",
	pushSnoozeMsg: "\u6b64\u901a\u77e5\u5c06\u88ab\u6682\u505c",
	showAgain: "\u518d\u6b21\u663e\u793a",
	noGuidesOnThisTab: "\u6b64\u9875\u9762\u4e0a\u6ca1\u6709\u901a\u77e5",
	iAgree: "\u6211\u540c\u610f",
	viewMore: "\u67e5\u770b\u66f4\u591a",
	lostInternetConnection: "\u5931\u53bb\u4e0e\u670d\u52a1\u5668\u7684\u8fde\u63a5\u3002\u8bf7\u91cd\u65b0\u8fde\u63a5\u5e76\u91cd\u8bd5",
	next: "\u4e0b\u4e00\u4e2a",
	recent: "\u6700\u8fd1",
	older: "\u8001",
	atoz: "A - Z",
	ztoa: "Z - A",
	clear: "\u6e05\u695a",
	tooltipDontShowAgain: "\u901a\u77e5\u5c06\u4e0d\u518d\u663e\u793a\u3002\u8981\u7acb\u5373\u542f\u7528\u901a\u77e5\uff0c\u8bf7\u5c06\u9f20\u6807\u60ac\u505c\u5728\u901a\u77e5\u4e0a\uff0c\u7136\u540e\u5355\u51fb\u201c\u518d\u6b21\u663e\u793a\u201d",
	tooltipWatchLater1: "\u901a\u77e5\u88ab\u6682\u505c",
	tooltipWatchLater2: "\u5e76\u5c06\u5728\u90a3\u4e4b\u540e\u51fa\u73b0\u3002\u8981\u7acb\u5373\u542f\u7528\u901a\u77e5\uff0c\u8bf7\u5c06\u9f20\u6807\u60ac\u505c\u5728\u901a\u77e5\u4e0a\uff0c\u7136\u540e\u5355\u51fb\u201c\u518d\u6b21\u663e\u793a\u201d",
	hour: "\u5c0f\u65f6",
	hours: "\u5c0f\u65f6",
	insightsTracker: "\u6d1e\u5bdf\u8ffd\u8e2a\u5668",
	slideshow: "\u5e7b\u706f\u7247\u653e\u6620",
	autoplay: "\u81ea\u52a8\u64ad\u653e",
	powerFormOldData: "\u73b0\u6709\u6570\u636e",
	powerFormNewData: "\u4f7f\u7528\u6b64\u8868\u5355\u8f93\u5165\u65b0\u6570\u636e",
	powerFormNewDataMore: "\u5982\u679c\u60a8\u73b0\u6709\u7684\u6570\u636e\u4e0d\u53ef\u89c1\uff0c\u8bf7\u5355\u51fb\u5de6\u4e0a\u89d2\u7684\u7bad\u5934\u67e5\u770b\u60a8\u7684\u6570\u636e\u3002\u7136\u540e\uff0c\u9700\u8981\u5c06\u6570\u636e\u590d\u5236\u5230\u5141\u8bb8\u7684\u9879\u76ee\u7b26\u53f7\u683c\u5f0f\u3002",
	powerFormTitle: "\u6570\u636e\u8f93\u5165\u52a9\u624b",
	powerFormMandatory: "\u8fd9\u662f\u5fc5\u586b\u5b57\u6bb5\uff0c\u6700\u5927\u5b57\u7b26\u6570\u9650\u5236 ",
	belongToOtherApp: "\u672c\u6307\u5357\u662f\u5728\u5c5e\u4e8e {APPNAME} \u5e94\u7528\u7a0b\u5e8f\u7684 {TOURURL} \u4e0a\u521b\u5efa\u7684\u3002\u8bf7\u5728\u8be5\u5e94\u7528\u7a0b\u5e8f\u4e2d\u590d\u5236\u672c\u6307\u5357\uff0c\u7136\u540e\u91cd\u8bd5",
	setDomain: "\u5982\u679c\u60a8\u786e\u5b9a\u5e94\u5728\u5f53\u524d\u5e94\u7528\u7a0b\u5e8f\u57df\u8bbe\u7f6e\u4e2d\u6dfb\u52a0 {TOURURL}\uff0c\u8bf7\u6dfb\u52a0\u5e76\u91cd\u8bd5",
	on: "\u4e0a",
	off: "\u5173\u95ed",
	btnPrev: "\u6628\u65e5",
	btnPrevious: "\u4ee5\u524d",
	taskList: "\u4efb\u52a1\u5217\u8868",
	unprocessedVideo: "\u6b63\u5728\u5904\u7406\u60a8\u7684\u89c6\u9891\uff0c\u8bf7\u7a0d\u5019\u3002",
	searchResult: "\u641c\u7d22\u7ed3\u679c",
	pleaseWait: "\u8bf7\u7a0d\u5019\uff01",
	mediaDownloadMsg: "\u5f53\u6211\u4eec\u51c6\u5907\u60a8\u7684\u6587\u4ef6\u4ee5\u4f9b\u4e0b\u8f7d\u65f6",
	mediaFileNotFound: "\u672a\u627e\u5230\u5a92\u4f53\u6587\u4ef6",
	searchInFolder: "\u5728\u6587\u4ef6\u5939\u4e2d\u641c\u7d22",
	currentPageSearchPlaceholder: "\u641c\u7d22\u5f53\u524d\u9875\u9762\u4e0a\u53ef\u7528\u7684\u6307\u5357",
	brandLogo: "\u54c1\u724c\u6807\u5fd7",
	accessibility: "\u53ef\u53ca\u6027",
	replay: "\u91cd\u64ad",
	defaultGreetingMessage: "\u563f\uff01\u6b22\u8fce\u6765\u5230\u6211\u7684\u5411\u5bfc\u3002\u6211\u8be5\u600e\u4e48\u5e2e\u52a9\u4f60\uff1f\u8bf7\u8bb0\u4f4f\uff0c\u6211\u662f\u4e00\u4e2a\u673a\u5668\u4eba\u3002",
	defaultErrorMessage: "\u5bf9\u4e0d\u8d77\uff0c\u6211\u4e0d\u660e\u767d\u3002\u4f60\u80fd\u66f4\u5177\u4f53\u4e00\u70b9\u5417\uff1f ",
	defaultEndMessage: "\u6211\u4eec\u5b8c\u6210\u4e86\uff0c\u975e\u5e38\u611f\u8c22\uff01",
	greetingMessage: "\u563f\uff01\u6b22\u8fce\u6765\u5230\u6211\u7684\u5411\u5bfc\u3002\u6211\u8be5\u600e\u4e48\u5e2e\u52a9\u4f60\uff1f\u8bf7\u8bb0\u4f4f\uff0c\u6211\u662f\u4e00\u4e2a\u673a\u5668\u4eba\u3002",
	errorMessage: "\u5bf9\u4e0d\u8d77\uff0c\u6211\u4e0d\u660e\u767d\u3002\u4f60\u80fd\u66f4\u5177\u4f53\u4e00\u70b9\u5417\uff1f ",
	endMessage: "\u6211\u4eec\u5b8c\u6210\u4e86\uff0c\u975e\u5e38\u611f\u8c22\uff01",
	guideLnkToRedirect: "\u4f7f\u7528\u4ee5\u4e0b\u94fe\u63a5\u91cd\u5b9a\u5411\u5230\u9875\u9762\u5e76\u64ad\u653e\u6307\u5357",
	otpTimer: "\u60a8\u53ef\u4ee5\u5728 ",
	seconds: " \u79d2",
	limitWarning: "\u60a8\u5df2\u8fbe\u5230\u5931\u8d25\u5c1d\u8bd5\u7684\u6700\u5927\u9650\u5236",
	403: "\u6211\u4eec\u9047\u5230\u4e86\u8fd9\u4e2a\u8bf7\u6c42\u7684\u95ee\u9898\u3002\u8bf7\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5411\u6211\u4eec\u62a5\u544a support@csod.com",
	405: "\u6211\u4eec\u5728\u5904\u7406\u6b64\u8bf7\u6c42\u65f6\u9047\u5230\u4e86\u95ee\u9898\u3002\u8bf7\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5411\u6211\u4eec\u62a5\u544a support@csod.com",
	429: "\u8bf7\u6c42\u8fc7\u591a",
	1003: "\u6211\u4eec\u5728\u8eab\u4efd\u9a8c\u8bc1\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u95ee\u9898\u3002\u8bf7\u91cd\u65b0\u767b\u5f55\uff0c\u7136\u540e\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u5237\u65b0\u9875\u9762\u5e76\u91cd\u8bd5",
	1007: "\u6211\u4eec\u5728\u8eab\u4efd\u9a8c\u8bc1\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u95ee\u9898\u3002\u8bf7\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5411\u6211\u4eec\u62a5\u544a support@csod.com",
	1005: "<b>\u5bf9\u4e0d\u8d77<\/b> <br><br>\u8bf7\u6c42\u6216\u6211\u4eec\u7684\u670d\u52a1\u5668\u4f3c\u4e4e\u6709\u95ee\u9898\u3002<br> \u6211\u4eec\u5df2\u6536\u5230\u6709\u5173\u8be5\u9519\u8bef\u7684\u901a\u77e5\uff0c\u5e76\u5c06\u5c3d\u5feb\u66f4\u6b63",
	1009: "\u7528\u6237\u7535\u5b50\u90ae\u4ef6\u672a\u9a8c\u8bc1",
	1014: "\u7ef4\u62a4\u6b63\u5728\u8fdb\u884c\u4e2d\u3002\u8bf7\u901a\u8fc7 support@csod.com \u4e0e\u6211\u4eec\u8054\u7cfb",
	1017: "\u6211\u4eec\u5728\u8eab\u4efd\u9a8c\u8bc1\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u95ee\u9898\u3002\u8bf7\u91cd\u65b0\u767b\u5f55\uff0c\u7136\u540e\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5411\u6211\u4eec\u62a5\u544a support@csod.com",
	1018: "\u60a8\u5df2\u8fbe\u5230\u521b\u5efa\u6b65\u9aa4\u7684\u6700\u5927\u9650\u5236",
	2000: "\u6211\u4eec\u9047\u5230\u4e86\u8fd9\u4e2a\u8bf7\u6c42\u7684\u95ee\u9898\u3002\u6211\u4eec\u5df2\u6536\u5230\u901a\u77e5\u3002\u8bf7\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5411\u6211\u4eec\u62a5\u544a support@csod.com",
	2001: "\u767b\u5f55\u51ed\u636e\u65e0\u6548\u3002\u591a\u6b21\u5c1d\u8bd5\u5931\u8d25\u540e\uff0c\u60a8\u7684\u5e10\u6237\u5c06\u88ab\u9501\u5b9a\uff0c\u60a8\u5c06\u6536\u5230\u4e00\u5c01\u89e3\u9501\u5e10\u6237\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u91cd\u7f6e\u5bc6\u7801",
	2002: "\u65e0\u6548\u6216\u8fc7\u671f\u7684\u4e00\u6b21\u6027\u5bc6\u7801",
	2003: "\u4e0a\u4f20\u7684\u6587\u4ef6\u4e0d\u662f\u6709\u6548\u7684\u56fe\u50cf\uff08\u652f\u6301 JPG \u548c PNG \u6587\u4ef6\uff09",
	2004: "\u4f1a\u8bdd\u5df2\u8fc7\u671f",
	2005: "\u6211\u4eec\u65e0\u6cd5\u8ddf\u8e2a\u6b64\u7528\u6237\u3002\u8bf7\u5237\u65b0\u5e76\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5411\u6211\u4eec\u62a5\u544a support@csod.com",
	2006: "\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u4e0d\u6b63\u786e\u3002\u8bf7\u91cd\u8bd5",
	2007: "\u7528\u6237\u89d2\u8272\u65e0\u6548\u3002\u8bf7\u91cd\u8bd5",
	2008: "\u60a8\u5fc5\u987b\u6307\u5b9a\u6b63\u786e\u7684\u4efb\u52a1\u7c7b\u578b",
	2009: "\u7ed9\u5b9a\u7684\u5e94\u7528\u7a0b\u5e8f\u65e0\u6548;\u5b83\u53ef\u80fd\u5df2\u88ab\u5220\u9664\u6216\u4ece\u672a\u5b58\u5728",
	2010: "\u8f93\u5165\u53c2\u6570\u65e0\u6548\u3002\u8bf7\u5237\u65b0\u5e76\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5411\u6211\u4eec\u62a5\u544a support@csod.com",
	2011: "\u7ed9\u5b9a\u7684\u7ec4\u7ec7\u65e0\u6548;\u5b83\u53ef\u80fd\u5df2\u88ab\u5220\u9664\u6216\u4ece\u672a\u5b58\u5728",
	2012: "\u8bf7\u6c42\u4e2d\u7f3a\u5c11\u53c2\u6570\u6216\u53c2\u6570\u65e0\u6548\u3002\u8bf7\u91cd\u65b0\u68c0\u67e5\u5e76\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5411\u6211\u4eec\u62a5\u544a support@csod.com",
	2013: "\u8bf7\u6c42\u4e2d\u7f3a\u5c11\u53c2\u6570\u6216\u53c2\u6570\u65e0\u6548\u3002\u8bf7\u91cd\u65b0\u68c0\u67e5\u5e76\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5411\u6211\u4eec\u62a5\u544a support@csod.com",
	2014: "\u8d85\u7ea7\u7ba1\u7406\u5458\u6240\u9700\u7684\u53c2\u6570[organization_id]",
	2015: "\u63d0\u4f9b\u7684\u56fe\u50cf\u6570\u636e\u5185\u5bb9\u65e0\u6548\u3002\u8bf7\u91cd\u65b0\u68c0\u67e5\u5e76\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u5411\u6211\u4eec\u62a5\u544a support@csod.com",
	2016: "\u65e0\u6548\u57df",
	2017: "\u8bf7\u6c42\u4e2d\u7f3a\u5c11\u53c2\u6570\u6216\u53c2\u6570\u65e0\u6548",
	2018: "\u8bf7\u6c42\u4e2d\u7f3a\u5c11\u53c2\u6570\u6216\u53c2\u6570\u65e0\u6548",
	2019: "\u60a8\u8981\u67e5\u627e\u7684\u5185\u5bb9\u4e0d\u5b58\u5728\u6216\u53ef\u80fd\u5df2\u88ab\u5220\u9664",
	2020: "\u8bf7\u6c42\u4e2d\u7f3a\u5c11\u53c2\u6570\u6216\u53c2\u6570\u65e0\u6548",
	2021: "\u8eab\u4efd\u9a8c\u8bc1\u670d\u52a1\u5668\u5728\u5c1d\u8bd5\u5904\u7406\u6b64\u8bf7\u6c42\u65f6\u9047\u5230\u610f\u5916\u9519\u8bef\u3002\u8bf7\u5c06\u95ee\u9898\u62a5\u544a\u7ed9 support@csod.com",
	2022: "\u8bf7\u6c42\u4e2d\u7f3a\u5c11\u53c2\u6570\u6216\u53c2\u6570\u65e0\u6548\u3002\u8bf7\u8f93\u5165\u6709\u6548\u7684\u56e2\u961f\u7f51\u5740",
	2023: "\u8eab\u4efd\u9a8c\u8bc1\u670d\u52a1\u5668\u5728\u5c1d\u8bd5\u5904\u7406\u6b64\u8bf7\u6c42\u65f6\u9047\u5230\u610f\u5916\u9519\u8bef\u3002\u8bf7\u5c06\u95ee\u9898\u62a5\u544a\u7ed9 support@csod.com",
	2024: "\u6587\u4ef6\u5927\u5c0f\u5e94\u5c0f\u4e8e 5 MB",
	2025: "\u8bf7\u6c42\u4e2d\u7f3a\u5c11\u53c2\u6570\u6216\u53c2\u6570\u65e0\u6548\u3002\u8bf7\u8f93\u5165\u6709\u6548\u7684\u7f51\u5740",
	2026: "\u5bc6\u7801\u5fc5\u987b\u81f3\u5c11\u5305\u542b 8 \u4e2a\u5b57\u7b26\uff0c\u5305\u62ec\u81f3\u5c11\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd\u3001\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd\u548c\u4e00\u4e2a\u6570\u503c",
	2027: "\u5bc6\u7801\u65e0\u6548",
	2028: "\u8bf7\u6c42\u4e2d\u7f3a\u5c11\u53c2\u6570\u6216\u53c2\u6570\u65e0\u6548",
	2029: "\u4e0d\u652f\u6301\u60a8\u63d0\u4f9b\u7684\u57ce\u5e02",
	2030: "\u8bf7\u6c42\u4e2d\u7f3a\u5c11\u53c2\u6570\u6216\u53c2\u6570\u65e0\u6548",
	2031: "\u8eab\u4efd\u9a8c\u8bc1\u670d\u52a1\u5668\u5728\u5c1d\u8bd5\u5904\u7406\u6b64\u53c2\u6570\u65f6\u9047\u5230\u610f\u5916\u9519\u8bef\u3002\u8bf7\u5c06\u95ee\u9898\u62a5\u544a\u7ed9 support@csod.com",
	2032: "\u53c2\u6570\u65e0\u6548[file_id]",
	2033: "\u7f51\u5740\u65e0\u6548\u3002\u8bf7\u91cd\u65b0\u68c0\u67e5\u5e76\u91cd\u8bd5",
	2034: "\u8eab\u4efd\u9a8c\u8bc1\u670d\u52a1\u5668\u5728\u5904\u7406\u8fd9\u4e9b\u53c2\u6570\u65f6\u9047\u5230\u610f\u5916\u9519\u8bef\u3002\u8bf7\u5c06\u95ee\u9898\u62a5\u544a\u7ed9 support@csod.com",
	2035: "\u8eab\u4efd\u9a8c\u8bc1\u670d\u52a1\u5668\u5728\u5904\u7406\u6b64\u5e94\u7528\u7a0b\u5e8f\u5bc6\u94a5\u65f6\u9047\u5230\u610f\u5916\u9519\u8bef\u3002\u8bf7\u5c06\u95ee\u9898\u62a5\u544a\u7ed9 support@csod.com",
	2036: "\u8eab\u4efd\u9a8c\u8bc1\u670d\u52a1\u5668\u9047\u5230\u610f\u5916\u9519\u8bef\u3002\u8bf7\u5237\u65b0\u6b64\u9875\u9762\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u5411 support@csod.com \u62a5\u544a\u95ee\u9898",
	2044: "\u6211\u4eec\u4f3c\u4e4e\u653e\u9519\u4e86\u8fd9\u4e00\u6b65\u7684\u7ffb\u8bd1\u3002\u8bf7\u5207\u6362\u5230\u9ed8\u8ba4\u8bed\u8a00\u5e76\u91cd\u65b0\u7ffb\u8bd1\u8be5\u6b65\u9aa4\uff0c\u6216\u8054\u7cfb\u6211\u4eec\u7684\u5ba2\u6237\u652f\u6301\u4ee5\u83b7\u53d6\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002",
	2200: "\u6211\u4eec\u5728\u8bbf\u95ee\u97f3\u9891\/\u89c6\u9891\u63a7\u4ef6\u65f6\u9047\u5230\u4e86\u95ee\u9898\u3002\u8bf7\u68c0\u67e5\u60a8\u7684\u6d4f\u89c8\u5668\u8bbe\u7f6e\uff0c\u7136\u540e\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u5411\u6211\u4eec\u62a5\u544a support@csod.com",
	3061: "\u60a8\u6700\u591a\u53ea\u80fd\u56fa\u5b9a 5 \u4e2a\u6307\u5357",
	4000: "\u5982\u679c\u5df2\u521b\u5efa\u53c2\u8003\u7ebf\uff0c\u5219\u65e0\u6cd5\u5728\u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u5b50\u7c7b\u522b",
	4001: "\u5982\u679c\u7528\u6237\u5df2\u7ecf\u662f\u8d85\u7ea7\u7528\u6237\uff0c\u5219\u65e0\u6cd5\u66f4\u6539\u7528\u6237\u89d2\u8272",
	4002: "\u5df2\u53d1\u5e03\u7684\u6307\u5357\u4e0d\u5141\u8bb8\u6b64\u64cd\u4f5c",
	4003: "\u65e0\u6cd5\u53d1\u5e03\u9501\u5b9a\u7684\u6307\u5357",
	4004: "\u4e0d\u5141\u8bb8\u5bf9\u5df2\u53d1\u5e03\u7684\u6587\u4ef6\u5939\u6267\u884c\u6b64\u64cd\u4f5c\u3002\u8bf7\u53d6\u6d88\u53d1\u5e03",
	4006: "\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u5c5e\u4e8e\u7ed9\u5b9a\u7ec4\u7ec7",
	4007: "\u60a8\u65e0\u6743\u6267\u884c\u6b64\u64cd\u4f5c",
	4008: "\u4e0d\u5141\u8bb8\u5bf9\u6b64\u5b50\u7c7b\u522b\u6267\u884c\u64cd\u4f5c",
	4009: "\u6307\u5357\u5fc5\u987b\u53d1\u5e03",
	4010: "\u65e0\u6cd5\u5728\u5177\u6709\u5b50\u7c7b\u522b\u7684\u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u53c2\u8003\u7ebf",
	4011: "\u8981\u521b\u5efa\u6b65\u9aa4\uff0c\u60a8\u9700\u8981\u89e3\u9501\u672c\u6307\u5357",
	4012: "\u8981\u7f16\u8f91\u6b65\u9aa4\uff0c\u60a8\u9700\u8981\u89e3\u9501\u672c\u6307\u5357",
	4013: "\u8981\u5220\u9664\u6b65\u9aa4\uff0c\u60a8\u9700\u8981\u89e3\u9501\u672c\u6307\u5357",
	4014: "\u8981\u590d\u5236\u548c\u7c98\u8d34\u6b65\u9aa4\uff0c\u60a8\u9700\u8981\u89e3\u9501\u672c\u6307\u5357",
	3001: "\u6307\u5357\u5c06\u5f88\u5feb\u53ef\u4f9b\u5bfc\u51fa\u3002\u8981\u68c0\u67e5\u72b6\u6001\uff0c\u8bf7\u8f6c\u5230\u5e10\u6237\u83dc\u5355\u4e0b\u7684\u201c\u4efb\u52a1\u72b6\u6001\u201d",
	3002: "\u4e0a\u4f20\u5df2\u5f00\u59cb\u3002\u5728\u4e0a\u4f20\u5b8c\u6210\u4e4b\u524d\uff0c\u8bf7\u4e0d\u8981\u5237\u65b0\u6216\u5173\u95ed\u6d4f\u89c8\u5668\u3002\u60a8\u53ef\u4ee5\u5728\u5bfc\u5165\u5b8c\u6210\u540e\u68c0\u67e5\u5bfc\u5165\u72b6\u6001",
	3003: "\u7528\u6237\u5df2\u5b58\u5728",
	3004: "\u7535\u5b50\u90ae\u4ef6 ID \u5df2\u901a\u8fc7\u9a8c\u8bc1",
	3005: "\u6b64 URL \u4e0e\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u914d\u7f6e\u51b2\u7a81\uff0c\u8bf7\u5c1d\u8bd5\u6dfb\u52a0\u4efb\u4f55\u5176\u4ed6 URL",
	3006: "\u6587\u4ef6\u5939\u5fc5\u987b\u5c5e\u4e8e\u540c\u4e00\u5e94\u7528\u7a0b\u5e8f",
	3007: "\u57df\u5df2\u5b58\u5728",
	3008: "\u60a8\u5df2\u8fbe\u5230\u5df2\u521b\u5efa\u6307\u5357\u7684\u6700\u5927\u9650\u5236",
	3009: "\u8c03\u67e5\u5df2\u5b58\u5728\u4e8e\u7ed9\u5b9a\u7684\u6307\u5357\u4e2d",
	3010: "\u6b65\u9aa4\u5fc5\u987b\u5c5e\u4e8e\u540c\u4e00\u6307\u5357",
	3011: "\u672c\u7ec4\u7ec7\u6682\u505c\u8fd0\u4f5c\u3002\u8bf7\u8054\u7cfb\u60a8\u7684\u7ba1\u7406\u5458",
	3012: "\u6307\u5357\u5fc5\u987b\u5c5e\u4e8e\u540c\u4e00\u6587\u4ef6\u5939",
	3013: "\u672c\u6307\u5357\u5df2\u5b58\u5728\u7ed9\u5b9a\u7684\u5bf9\u8c61\u5bf9\u548c\u5b57\u6bb5\u540d\u79f0",
	3014: "\u7528\u6237\u5df2\u6682\u505c",
	3015: "\u7528\u6237\u5df2\u9a8c\u8bc1",
	3017: "\u4e00\u6b21\u6027\u5bc6\u7801\u5df2\u6210\u529f\u53d1\u9001\u5230\u60a8\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740",
	3018: "\u89d2\u8272\u5df2\u5b58\u5728",
	3019: "\u56fd\u5bb6\/\u5730\u533a\u5df2\u5b58\u5728",
	3020: "\u57ce\u5e02\u5df2\u7ecf\u5b58\u5728",
	3023: "\u60a8\u7684\u7ec4\u7ec7\u672a\u901a\u8fc7\u9a8c\u8bc1\u3002\u5982\u9700\u5e2e\u52a9\uff0c\u8bf7\u8054\u7cfb support@csod.com",
	3024: "JSON \u6587\u4ef6\u4e0d\u9002\u7528\u4e8e\u6b64\u7ec4\u7ec7",
	3025: "\u6211\u4eec\u5728\u8eab\u4efd\u9a8c\u8bc1\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u95ee\u9898\u3002\u8bf7\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u5237\u65b0\u9875\u9762\u5e76\u91cd\u8bd5",
	3026: "JSON \u6587\u4ef6\u4e0d\u9002\u7528\u4e8e\u672c\u6307\u5357",
	3027: "\u6ca1\u6709\u53ef\u7528\u7684\u6b65\u9aa4\u3002\u521b\u5efa\u81f3\u5c11\u4e00\u4e2a\u6b65\u9aa4\u6765\u53d1\u5e03\u6307\u5357",
	3028: "\u5df2\u8fbe\u5230\u6700\u5927\u5de1\u56de\u53d1\u5e03\u9650\u5236",
	3047: "\u7531\u4e8e\u767b\u5f55\u5931\u8d25\u8fc7\u591a\uff0c\u60a8\u7684\u5e10\u6237\u5df2\u88ab\u6682\u65f6\u9501\u5b9a\u3002\u6211\u4eec\u5df2\u5411\u60a8\u53d1\u9001\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u5176\u4e2d\u5305\u542b\u89e3\u9501\u6b65\u9aa4\u3002\u5982\u9700\u66f4\u591a\u5e2e\u52a9\uff0c\u8bf7\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u4e0e\u6211\u4eec\u8054\u7cfb support@csod.com",
	3033: "\u51ed\u636e\u65e0\u6548\u3002\u8bf7\u8054\u7cfb support@csod.com \u6216\u60a8\u7684\u7ba1\u7406\u5458\u4ee5\u83b7\u5f97\u8fdb\u4e00\u6b65\u7684\u5e2e\u52a9\u3002",
	4020: "\u672c\u6307\u5357\u7684\u8349\u6848\u5df2\u7ecf\u5b58\u5728\u3002\u4e0d\u5141\u8bb8\u591a\u6b21\u8d77\u8349\u6307\u5357\u3002",
	4021: "\u53c2\u6570 [envs] \u7684\u503c\u65e0\u6548",
	2054: "\u65b0\u65e7\u5bc6\u7801\u4e0d\u80fd\u76f8\u540c",
	playNextBotTour: "\u64AD\u653E\u4E0B\u4E00\u4E2A\u673A\u5668\u4EBA\u4E4B\u65C5",
	defaultBotEndingMessage: "\u6211\u4EEC\u5B8C\u6210\u4E86\uFF0C\u975E\u5E38\u611F\u8C22\uFF01\u5728\u6211\u5F00\u59CB\u4E4B\u524D\u8FD8\u6709\u4EC0\u4E48\u4E8B\u5417\uFF1F",
	loginNext: "\u4e0b\u4e00\u4e2a",
	3068: "\u60A8\u7684\u65E7\u5BC6\u7801\u5DF2\u8FC7\u671F\uFF0C\u8BF7\u8BBE\u7F6E\u65B0\u5BC6\u7801\u8FDB\u884C\u767B\u5F55\u3002",
	includeScreen: "\u5305\u62EC\u5C4F\u5E55\u622A\u56FE",
	feedbackPlaceholder: "\u6709\u53CD\u9988\u5417\uFF1F \u6211\u4EEC\u5F88\u60F3\u542C\u542C\uFF01",
	feedbackOptBtn: "\u5355\u51FB\u4EE5\u7A81\u51FA\u663E\u793A\u6216\u9690\u85CF\u4FE1\u606F",
	highlight: "\u5F3A\u8C03",
	send: "\u53D1\u9001",
	done: "\u5B8C\u6BD5",
	hide: "\u9690\u85CF"
};
GmCXt.svgs = {
	iconPopupDrag: '<svg width="17" height="17" viewBox="0 0 17 17" fill="none">' +
		'<path d="M13.9443 7.55643H9.4991C9.18045 7.55643 8.93013 7.81896 8.93013 8.13378C8.93013 8.45074 9.18256 8.70806 9.4991 8.70806H13.9435L13.0248 9.64754C12.8048 9.87252 12.8048 10.2329 13.0248 10.4579C13.1353 10.5709 13.2802 10.6285 13.4288 10.6285C13.5774 10.6285 13.7224 10.5709 13.8328 10.4579L15.7107 8.53744C15.9307 8.31246 15.9307 7.95203 15.7107 7.72705L13.8328 5.80656C13.6104 5.57906 13.2503 5.57906 13.0278 5.80656C12.8079 6.03152 12.8078 6.39192 13.0278 6.6169L13.0277 6.61678L13.1708 6.47716L13.0278 6.61695L13.9443 7.55643Z" fill="#757575" stroke="#757575" stroke-width="0.4"/>' +
		'<path d="M2.84286 10.4579C2.9533 10.5709 3.09821 10.6285 3.24684 10.6285C3.39547 10.6285 3.54038 10.5709 3.65082 10.4579C3.87081 10.2329 3.87081 9.87252 3.65082 9.64754L2.73219 8.70806H7.17656C7.49416 8.70806 7.74553 8.4466 7.74553 8.13378C7.74553 7.8231 7.49625 7.55643 7.17656 7.55643H2.7314L3.64782 6.61695L3.50482 6.47712L3.64799 6.61678L3.64787 6.6169C3.86781 6.39192 3.8678 6.03152 3.64782 5.80656C3.42538 5.57906 3.0653 5.57906 2.84286 5.80656L0.964993 7.72705C0.745002 7.95203 0.745002 8.31246 0.964993 8.53744L2.84286 10.4579Z" fill="#757575" stroke="#757575" stroke-width="0.4"/>' +
		'<path d="M6.06066 3.32867C6.27841 3.55932 6.64328 3.55681 6.86178 3.32955L7.76905 2.40168V6.94241C7.76905 7.25723 8.01938 7.51976 8.33803 7.51976C8.65668 7.51976 8.907 7.25723 8.907 6.94241V2.40168L9.81493 3.33021C9.92537 3.44316 10.0703 3.50083 10.2189 3.50083C10.3675 3.50083 10.5124 3.44316 10.6229 3.33021C10.8429 3.10523 10.8429 2.7448 10.6229 2.51981L8.74501 0.599317C8.52857 0.377962 8.15649 0.377962 7.94004 0.599317L6.06216 2.51981C5.84267 2.74429 5.84217 3.10358 6.06066 3.32867Z" fill="#757575" stroke="#757575" stroke-width="0.4"/>' +
		'<path d="M7.76917 13.86L6.86126 12.9314C6.63882 12.7039 6.27874 12.7039 6.0563 12.9314C5.83631 13.1564 5.83631 13.5168 6.0563 13.7418L7.93417 15.6623C8.04012 15.7707 8.18439 15.8329 8.33815 15.8329C8.48804 15.8329 8.63556 15.7713 8.74213 15.6623L10.62 13.7418C10.84 13.5168 10.84 13.1564 10.62 12.9314C10.3976 12.7039 10.0375 12.7039 9.81503 12.9314L8.90712 13.86V9.31924H8.90714L8.9071 9.31637C8.90264 9.00646 8.65933 8.74189 8.33815 8.74189C8.0195 8.74189 7.76917 9.00443 7.76917 9.31924V13.86Z" fill="#757575" stroke="#757575" stroke-width="0.4"/>' +
		'</svg>',
	iconStepAutoGear: '<svg width="35px" height="35px" viewBox="0 0 35 35" version="1.1" >' +
		'<g id="Popup-Design" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g id="Desktop" transform="translate(-235.000000, -594.000000)" fill-rule="nonzero">' +
		'<g id="automation-step-popup" transform="translate(186.000000, 576.000000)">' +
		'<g class="Group-3" transform="translate(49.000000, 18.000000)">' +
		'<path d="M35,19.3074463 L35,15.6868582 L32.3417597,14.7818585 C32.1983895,13.9709332 31.9833343,13.1875035 31.7172156,12.425874 L33.5633522,10.314208 L31.7533528,7.18284608 L28.9951462,7.72136805 C28.7225464,7.41223837 28.4495539,7.1105718 28.1690983,6.83050895 C27.8819651,6.54337579 27.5802985,6.26390214 27.2715616,5.99797991 L27.8175467,3.24684361 L24.6852029,1.43743337 L22.5670557,3.28219516 C21.8119073,3.01077381 21.0300488,2.80161046 20.2181415,2.65116997 L19.3131418,0 L15.6860726,0 L14.7800909,2.65116997 C13.9691656,2.80141406 13.1863251,3.01057741 12.4256776,3.28219516 L10.3134224,1.43743337 L7.1816677,3.24684361 L7.72765277,5.99797991 C7.41852309,6.26350934 7.10978621,6.54357219 6.82972336,6.83050895 C6.53551989,7.1186241 6.25604624,7.42736098 5.98953482,7.74356097 L5.99660513,7.72195724 L3.24645082,7.18343527 L1.43546939,10.3147971 L3.28160597,12.4264632 C3.01607654,13.1880927 2.80102127,13.9780035 2.65018798,14.7824477 L-1.42108547e-14,15.6874474 L-1.42108547e-14,19.3080355 L2.65018798,20.2130352 C2.80102127,21.0239605 3.01666573,21.8148533 3.28160597,22.5690197 L1.43546939,24.6806857 L3.24645082,27.8185287 L5.99660513,27.2725436 C6.26311655,27.5812805 6.5425902,27.8833399 6.82972336,28.170473 C7.11685652,28.4585882 7.42657539,28.738651 7.73472308,29.0035913 L7.1816677,31.7482465 L10.3204927,33.564727 L12.4260704,31.7189832 C13.1867179,31.9849054 13.9772179,32.2001571 14.7804837,32.3439201 L15.6864654,35 L19.3135346,35 L20.2185343,32.3439201 C21.0304416,32.2001571 21.8123001,31.9849054 22.5745188,31.7103417 L24.6855956,33.5645306 L27.8179395,31.7480501 L27.2719544,28.9959318 C27.5806913,28.7300095 27.8823579,28.4515179 28.169491,28.1698838 C28.4499467,27.8827507 28.7296167,27.5806913 28.995539,27.2719544 L31.7537456,27.8179395 L33.563745,24.6800965 L31.7176084,22.5684305 C31.9835307,21.8142641 32.1987823,21.0239605 32.3421525,20.212446 L35,19.3074463 Z M17.5033388,22.5821783 C14.6883733,22.5821783 12.4111442,20.3065204 12.4111442,17.4986252 C12.4111442,14.6885697 14.6881769,12.4131081 17.5033388,12.4131081 C20.3114303,12.4131081 22.5888558,14.6887661 22.5888558,17.4986252 C22.588463,20.3065204 20.3112339,22.5821783 17.5033388,22.5821783 Z" class="shape" fill="#454560"></path>' +
		'<path d="M17.5032383,9.77477477 C13.2315636,9.77477477 9.77477477,13.2323075 9.77477477,17.4975465 C9.77477477,21.7621966 13.2315636,25.2252252 17.5032383,25.2252252 C21.7678476,25.2252252 25.2252252,21.7621966 25.2252252,17.4975465 C25.2246364,13.2319149 21.7678476,9.77477477 17.5032383,9.77477477 Z M17.5032383,21.5831861 C15.2407129,21.5831861 13.4103596,19.7536282 13.4103596,17.4975465 C13.4103596,15.2408758 15.2407129,13.4097477 17.5032383,13.4097477 C19.7596797,13.4097477 21.5884628,15.2408758 21.5884628,17.4975465 C21.5884628,19.7536282 19.7590909,21.5831861 17.5032383,21.5831861 Z" class="shape" fill="#454560"></path>' +
		'<path d="M17.6621871,7.25225225 C12.0838459,7.25225225 7.56756757,11.7679398 7.56756757,17.3387975 C7.56756757,22.9096553 12.083649,27.4324324 17.6621871,27.4324324 C23.2330449,27.4324324 27.7477477,22.9092614 27.7477477,17.3387975 C27.7477477,11.767349 23.2330449,7.25225225 17.6621871,7.25225225 Z M17.6621871,23.1485358 C14.4452767,23.1485358 11.8443746,20.5470429 11.8443746,17.3387975 C11.8443746,14.1313399 14.4452767,11.5284685 17.6621871,11.5284685 C20.8700386,11.5284685 23.4715315,14.1313399 23.4715315,17.3387975 C23.4715315,20.5472398 20.8702355,23.1485358 17.6621871,23.1485358 Z" class="shape" fill="#56E7CE"></path>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	iconPopupEdit: '<svg width="15" height="15" viewBox="0 0 15 15" fill="none" >' +
		'<path d="M12.9655 1.65245C12.1867 0.873663 10.9241 0.873663 10.1453 1.65245L2.23938 9.55838C2.18519 9.61256 2.14607 9.67973 2.12565 9.75347L1.08599 13.5068C1.04324 13.6607 1.08669 13.8255 1.19955 13.9386C1.31259 14.0514 1.47738 14.0949 1.63127 14.0523L5.38465 13.0125C5.45839 12.992 5.52555 12.9529 5.57973 12.8987L13.4855 4.99263C14.2631 4.21333 14.2631 2.95176 13.4855 2.17245L12.9655 1.65245ZM3.20494 9.84642L9.67533 3.37586L11.7621 5.46261L5.29152 11.9332L3.20494 9.84642ZM2.78811 10.6829L4.45526 12.3502L2.14919 12.9891L2.78811 10.6829ZM12.8589 4.366L12.3889 4.83598L10.302 2.74905L10.7721 2.27908C11.2047 1.8465 11.9061 1.8465 12.3387 2.27908L12.8589 2.79908C13.2907 3.23218 13.2907 3.93307 12.8589 4.366Z" fill="#757575" stroke="#757575" stroke-width="0.5" />' +
		'</svg>',
	iconClosePopup: '<svg width="12" height="12" viewBox="0 0 12 13" fill="none" > ' +
		'<path d = "M6.90481 6.67981L11.5191 1.96076C11.8058 1.66783 11.8058 1.19252 11.5191 0.89958C11.2324 0.60639 10.7682 0.60639 10.4815 0.89958L5.86718 5.61863L1.25264 0.89958C0.965959 0.60639 0.501692 0.60639 0.215011 0.89958C-0.0716703 1.19252 -0.0716703 1.66783 0.215011 1.96076L4.82955 6.67981L0.215011 11.3989C-0.0716703 11.6918 -0.0716703 12.1671 0.215011 12.46C0.358352 12.6064 0.546211 12.6797 0.733826 12.6797C0.92144 12.6797 1.1093 12.6064 1.25264 12.4598L5.86718 7.74075L10.4815 12.4598C10.6248 12.6064 10.8127 12.6797 11.0003 12.6797C11.1879 12.6797 11.3758 12.6064 11.5191 12.4598C11.8058 12.1669 11.8058 11.6915 11.5191 11.3986L6.90481 6.67981Z"' +
		'fill = "#666666"' +
		' fill-opacity="0.9"  />' +
		'</svg>',
	iconPause: '<svg width="15px" height="21px" viewBox="0 0 15 21" version="1.1" >' +
		'<g id="Popup-Design" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g id="Automation-Setp-POPUP" transform="translate(-765.000000, -999.000000)" fill="#FFFFFE">' +
		'<g id="automation-step-popup-copy" transform="translate(198.000000, 736.000000)">' +
		'<path d="M580.5,263 L577.5,263 C576.672,263 576,263.672 576,264.5 L576,282.5 C576,283.328 576.672,284 577.5,284 L580.5,284 C581.328,284 582,283.328 582,282.5 L582,264.5 C582,263.672 581.328,263 580.5,263 L580.5,263 Z M571.5,263 L568.5,263 C567.672,263 567,263.672 567,264.5 L567,282.5 C567,283.328 567.672,284 568.5,284 L571.5,284 C572.328,284 573,283.328 573,282.5 L573,264.5 C573,263.672 572.328,263 571.5,263 L571.5,263 Z" id="Fill-125"></path>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	iconClassicNavNext: '<svg  width="12px" height="12px" version="1.1" id="Capa_1" x="0px" y="0px" viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve">' +
		'<g><g><path d="M37.3,27.1L17.2,45.1c-1.3,1.2-3.3,1.2-4.6,0c-1.3-1.2-1.3-3,0-4.1l17.8-16L12.6,9c-1.3-1.2-1.3-3,0-4.1' +
		'c1.3-1.2,3.3-1.2,4.6,0l20.1,18.1c0.7,0.5,1,1.3,1,2.1S38,26.5,37.3,27.1z"/>' +
		'</g></g>' +
		'</svg>',
	iconClassicNavPrev: '<svg  width="12px" height="12px" version="1.1" id="Capa_1" x="0px" y="0px" viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve">' +
		'<g><g>' +
		'<path d="M11.7,25c0-0.7,0.3-1.5,1-2.1L32.8,4.9c1.3-1.2,3.3-1.2,4.6,0s1.3,3,0,4.1L19.6,25l17.8,16c1.3,1.2,1.3,3,0,4.1' +
		'c-1.3,1.2-3.3,1.2-4.6,0L12.7,27.1C12,26.5,11.7,25.7,11.7,25z"/> </g></g>' +
		'</svg>',
	iconPlayStepNext: '<svg  width="12px" height="12px" version="1.1" id="Capa_1" x="0px" y="0px" viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve">' +
		'<g> <g><path d="M29.2,27.3L9.1,47.4c-1.3,1.3-3.4,1.3-4.6,0c-1.3-1.3-1.3-3.3,0-4.6L22.2,25L4.5,7.2c-1.3-1.3-1.3-3.3,0-4.6' +
		'c1.3-1.3,3.3-1.3,4.6,0l20.1,20.1c0.6,0.6,1,1.5,1,2.3C30.1,25.8,29.8,26.7,29.2,27.3z"/></g><g>' +
		'<path d="M45.5,27.3L25.4,47.4c-1.3,1.3-3.4,1.3-4.6,0c-1.3-1.3-1.3-3.3,0-4.6L38.6,25L20.8,7.2c-1.3-1.3-1.3-3.3,0-4.6' +
		'c1.3-1.3,3.3-1.3,4.6,0l20.1,20.1c0.6,0.6,1,1.5,1,2.3C46.5,25.8,46.2,26.7,45.5,27.3z"/> </g></g>' +
		'</svg>',
	iconStepPlayAudioOn: '<svg width="19" height="17" viewBox="0 0 19 17" fill="none">' +
		'<mask id="path-1-outside-1" maskUnits="userSpaceOnUse" x="0" y="-0.366699" width="19" height="17" fill="black">' +
		'<rect fill="white" y="-0.366699" width="19" height="17"/>' +
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M10.2682 15.6333C10.2007 15.6333 10.1334 15.613 10.0755 15.5729C8.89613 14.7576 7.87115 13.976 6.87993 13.2202L6.87919 13.2197C5.91912 12.4876 4.92723 11.7312 3.79765 10.9467H1.34404C1.15403 10.9467 1 10.7892 1 10.5949V5.67172C1 5.47743 1.15403 5.31987 1.34404 5.31987H3.79778C6.12166 3.70627 10.0229 0.733296 10.0625 0.703072C10.1669 0.623485 10.3062 0.611029 10.4224 0.670632C10.5388 0.730341 10.6122 0.852045 10.6122 0.985114V15.2815C10.6122 15.4116 10.542 15.5312 10.4295 15.5922C10.3789 15.6197 10.3235 15.6333 10.2682 15.6333ZM1.68808 10.2431H3.90323C3.9719 10.2431 4.03902 10.2641 4.09593 10.3034C5.27491 11.1186 6.29956 11.8999 7.29049 12.6555C8.12158 13.2893 8.97669 13.9413 9.92413 14.6139V1.68434C8.7392 2.58106 5.90625 4.7116 4.09603 5.96323C4.03916 6.00256 3.97204 6.02361 3.90333 6.02361H1.68808V10.2431ZM13.2438 10.9244C13.155 10.9244 13.0663 10.8895 12.999 10.8197C12.8655 10.6814 12.8668 10.4587 13.0021 10.3221C13.5813 9.73721 13.9003 8.95988 13.9003 8.13331C13.9003 7.30668 13.5813 6.52938 13.002 5.94458C12.8668 5.80806 12.8654 5.58527 12.9989 5.44696C13.1324 5.30865 13.3501 5.30724 13.4854 5.44372C14.1967 6.16181 14.5884 7.117 14.5884 8.13328C14.5884 9.14952 14.1967 10.1047 13.4855 10.8228C13.4184 10.8906 13.3311 10.9244 13.2438 10.9244ZM15.601 12.4459C15.6683 12.5157 15.7571 12.5506 15.8458 12.5506C15.9331 12.5506 16.0205 12.5168 16.0875 12.4491C17.229 11.2966 17.8576 9.76397 17.8576 8.13354C17.8576 6.50315 17.229 4.97047 16.0875 3.81778C15.9523 3.68126 15.7344 3.68267 15.6009 3.82095C15.4674 3.95926 15.4688 4.18201 15.604 4.31856C16.6136 5.33797 17.1696 6.69283 17.1696 8.13354C17.1696 9.57429 16.6136 10.9291 15.6041 11.9483C15.4689 12.0849 15.4675 12.3076 15.601 12.4459Z"/>' +
		'</mask>' +
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M10.2682 15.6333C10.2007 15.6333 10.1334 15.613 10.0755 15.5729C8.89613 14.7576 7.87115 13.976 6.87993 13.2202L6.87919 13.2197C5.91912 12.4876 4.92723 11.7312 3.79765 10.9467H1.34404C1.15403 10.9467 1 10.7892 1 10.5949V5.67172C1 5.47743 1.15403 5.31987 1.34404 5.31987H3.79778C6.12166 3.70627 10.0229 0.733296 10.0625 0.703072C10.1669 0.623485 10.3062 0.611029 10.4224 0.670632C10.5388 0.730341 10.6122 0.852045 10.6122 0.985114V15.2815C10.6122 15.4116 10.542 15.5312 10.4295 15.5922C10.3789 15.6197 10.3235 15.6333 10.2682 15.6333ZM1.68808 10.2431H3.90323C3.9719 10.2431 4.03902 10.2641 4.09593 10.3034C5.27491 11.1186 6.29956 11.8999 7.29049 12.6555C8.12158 13.2893 8.97669 13.9413 9.92413 14.6139V1.68434C8.7392 2.58106 5.90625 4.7116 4.09603 5.96323C4.03916 6.00256 3.97204 6.02361 3.90333 6.02361H1.68808V10.2431ZM13.2438 10.9244C13.155 10.9244 13.0663 10.8895 12.999 10.8197C12.8655 10.6814 12.8668 10.4587 13.0021 10.3221C13.5813 9.73721 13.9003 8.95988 13.9003 8.13331C13.9003 7.30668 13.5813 6.52938 13.002 5.94458C12.8668 5.80806 12.8654 5.58527 12.9989 5.44696C13.1324 5.30865 13.3501 5.30724 13.4854 5.44372C14.1967 6.16181 14.5884 7.117 14.5884 8.13328C14.5884 9.14952 14.1967 10.1047 13.4855 10.8228C13.4184 10.8906 13.3311 10.9244 13.2438 10.9244ZM15.601 12.4459C15.6683 12.5157 15.7571 12.5506 15.8458 12.5506C15.9331 12.5506 16.0205 12.5168 16.0875 12.4491C17.229 11.2966 17.8576 9.76397 17.8576 8.13354C17.8576 6.50315 17.229 4.97047 16.0875 3.81778C15.9523 3.68126 15.7344 3.68267 15.6009 3.82095C15.4674 3.95926 15.4688 4.18201 15.604 4.31856C16.6136 5.33797 17.1696 6.69283 17.1696 8.13354C17.1696 9.57429 16.6136 10.9291 15.6041 11.9483C15.4689 12.0849 15.4675 12.3076 15.601 12.4459Z" fill="#757575"/>' +
		'<path d="M10.0755 15.5729L10.36 15.1617L10.3598 15.1616L10.0755 15.5729ZM6.87993 13.2202L7.1831 12.8226L7.183 12.8225L6.87993 13.2202ZM6.87919 13.2197L6.57601 13.6173L6.57612 13.6173L6.87919 13.2197ZM3.79765 10.9467L4.08287 10.5361L3.95424 10.4467H3.79765V10.9467ZM3.79778 5.31987V5.81987H3.95435L4.08296 5.73058L3.79778 5.31987ZM10.0625 0.703072L10.3657 1.10066L10.3657 1.10063L10.0625 0.703072ZM10.4224 0.670632L10.6508 0.225813L10.6505 0.225677L10.4224 0.670632ZM10.4295 15.5922L10.1909 15.1528L10.1908 15.1529L10.4295 15.5922ZM1.68808 10.2431H1.18808V10.7431H1.68808V10.2431ZM4.09593 10.3034L4.38028 9.89217L4.38025 9.89215L4.09593 10.3034ZM7.29049 12.6555L7.59367 12.258L7.59367 12.258L7.29049 12.6555ZM9.92413 14.6139L9.6347 15.0216L10.4241 15.582V14.6139H9.92413ZM9.92413 1.68434H10.4241V0.678921L9.62241 1.28564L9.92413 1.68434ZM4.09603 5.96323L3.81167 5.55196L3.8116 5.55201L4.09603 5.96323ZM1.68808 6.02361V5.52361H1.18808V6.02361H1.68808ZM12.999 10.8197L12.6392 11.167L12.6392 11.167L12.999 10.8197ZM13.0021 10.3221L13.3573 10.674L13.3574 10.674L13.0021 10.3221ZM13.002 5.94458L13.3572 5.5927L13.3572 5.59269L13.002 5.94458ZM12.9989 5.44696L12.6392 5.09964L12.6391 5.09974L12.9989 5.44696ZM13.4854 5.44372L13.8407 5.09185L13.8405 5.09174L13.4854 5.44372ZM13.4855 10.8228L13.1302 10.471L13.1301 10.4712L13.4855 10.8228ZM15.601 12.4459L15.9608 12.0987L15.9607 12.0987L15.601 12.4459ZM16.0875 12.4491L15.7323 12.0973L15.7322 12.0974L16.0875 12.4491ZM16.0875 3.81778L16.4427 3.46595L16.4427 3.46593L16.0875 3.81778ZM15.6009 3.82095L15.2412 3.47368L15.2412 3.47372L15.6009 3.82095ZM15.604 4.31856L15.2487 4.67036L15.2488 4.6704L15.604 4.31856ZM15.6041 11.9483L15.9593 12.3002L15.9594 12.3002L15.6041 11.9483ZM9.79098 15.9841C9.93362 16.0828 10.1004 16.1333 10.2682 16.1333V15.1333C10.3011 15.1333 10.3333 15.1433 10.36 15.1617L9.79098 15.9841ZM6.57676 13.6178C7.56726 14.3731 8.60092 15.1613 9.79114 15.9842L10.3598 15.1616C9.19134 14.3538 8.17504 13.579 7.1831 12.8226L6.57676 13.6178ZM6.57612 13.6173L6.57686 13.6179L7.183 12.8225L7.18226 12.822L6.57612 13.6173ZM3.51243 11.3574C4.63163 12.1347 5.6152 12.8846 6.57601 13.6173L7.18237 12.8221C6.22304 12.0905 5.22283 11.3278 4.08287 10.5361L3.51243 11.3574ZM1.34404 11.4467H3.79765V10.4467H1.34404V11.4467ZM0.5 10.5949C0.5 11.0546 0.86733 11.4467 1.34404 11.4467V10.4467C1.44072 10.4467 1.5 10.5237 1.5 10.5949H0.5ZM0.5 5.67172V10.5949H1.5V5.67172H0.5ZM1.34404 4.81987C0.86733 4.81987 0.5 5.21196 0.5 5.67172H1.5C1.5 5.7429 1.44072 5.81987 1.34404 5.81987V4.81987ZM3.79778 4.81987H1.34404V5.81987H3.79778V4.81987ZM9.75931 0.305489C9.71744 0.337422 5.82555 3.30316 3.51261 4.90917L4.08296 5.73058C6.41776 4.10938 10.3283 1.12917 10.3657 1.10066L9.75931 0.305489ZM10.6505 0.225677C10.3623 0.0779435 10.0164 0.109434 9.75928 0.305513L10.3657 1.10063C10.3173 1.13753 10.25 1.14412 10.1944 1.11559L10.6505 0.225677ZM11.1122 0.985114C11.1122 0.668733 10.9376 0.373023 10.6508 0.225813L10.1941 1.11545C10.14 1.08766 10.1122 1.03536 10.1122 0.985114H11.1122ZM11.1122 15.2815V0.985114H10.1122V15.2815H11.1122ZM10.6681 16.0316C10.9452 15.8811 11.1122 15.5908 11.1122 15.2815H10.1122C10.1122 15.2324 10.1387 15.1812 10.1909 15.1528L10.6681 16.0316ZM10.2682 16.1333C10.4056 16.1333 10.5433 16.0994 10.6682 16.0315L10.1908 15.1529C10.2145 15.14 10.2413 15.1333 10.2682 15.1333V16.1333ZM3.90323 9.74307H1.68808V10.7431H3.90323V9.74307ZM4.38025 9.89215C4.2405 9.79554 4.07435 9.74307 3.90323 9.74307V10.7431C3.86945 10.7431 3.83755 10.7327 3.8116 10.7147L4.38025 9.89215ZM7.59367 12.258C6.60345 11.5029 5.57013 10.7148 4.38028 9.89217L3.81157 10.7147C4.97969 11.5224 5.99566 12.297 6.98731 13.0531L7.59367 12.258ZM10.2136 14.2062C9.27408 13.5392 8.42544 12.8922 7.59367 12.258L6.98731 13.0531C7.81773 13.6864 8.6793 14.3434 9.6347 15.0216L10.2136 14.2062ZM9.42413 1.68434V14.6139H10.4241V1.68434H9.42413ZM4.38039 6.37449C6.2009 5.11576 9.04234 2.97869 10.2259 2.08304L9.62241 1.28564C8.43606 2.18343 5.61161 4.30744 3.81167 5.55196L4.38039 6.37449ZM3.90333 6.52361C4.07444 6.52361 4.24065 6.47115 4.38046 6.37444L3.8116 5.55201C3.83767 5.53398 3.86963 5.52361 3.90333 5.52361V6.52361ZM1.68808 6.52361H3.90333V5.52361H1.68808V6.52361ZM2.18808 10.2431V6.02361H1.18808V10.2431H2.18808ZM12.6392 11.167C12.8034 11.3371 13.0232 11.4244 13.2438 11.4244V10.4244C13.2868 10.4244 13.3292 10.4419 13.3587 10.4725L12.6392 11.167ZM12.6468 9.97028C12.3202 10.3 12.3171 10.8333 12.6392 11.167L13.3587 10.4725C13.4138 10.5296 13.4135 10.6173 13.3573 10.674L12.6468 9.97028ZM13.4003 8.13331C13.4003 8.82872 13.1329 9.47944 12.6468 9.97029L13.3574 10.674C14.0298 9.99498 14.4003 9.09103 14.4003 8.13331H13.4003ZM12.6468 6.29645C13.1329 6.78718 13.4003 7.43784 13.4003 8.13331H14.4003C14.4003 7.17552 14.0297 6.27158 13.3572 5.5927L12.6468 6.29645ZM12.6391 5.09974C12.317 5.43348 12.3202 5.96676 12.6468 6.29647L13.3572 5.59269C13.4134 5.64936 13.4138 5.73706 13.3586 5.79418L12.6391 5.09974ZM13.8405 5.09174C13.5078 4.75604 12.9675 4.75964 12.6392 5.09964L13.3585 5.79427C13.2973 5.85765 13.1925 5.85844 13.1303 5.7957L13.8405 5.09174ZM15.0884 8.13328C15.0884 6.98605 14.6453 5.90416 13.8407 5.09185L13.1302 5.79559C13.7482 6.41946 14.0884 7.24796 14.0884 8.13328H15.0884ZM13.8408 11.1747C14.6453 10.3623 15.0884 9.28048 15.0884 8.13328H14.0884C14.0884 9.01856 13.7482 9.84704 13.1302 10.471L13.8408 11.1747ZM13.2438 11.4244C13.4608 11.4244 13.6773 11.3398 13.8409 11.1745L13.1301 10.4712C13.1596 10.4414 13.2013 10.4244 13.2438 10.4244V11.4244ZM15.8458 12.0506C15.8889 12.0506 15.9312 12.0681 15.9608 12.0987L15.2412 12.7931C15.4053 12.9632 15.6252 13.0506 15.8458 13.0506V12.0506ZM15.7322 12.0974C15.7618 12.0675 15.8035 12.0506 15.8458 12.0506V13.0506C16.0628 13.0506 16.2793 12.9661 16.4429 12.8009L15.7322 12.0974ZM17.3576 8.13354C17.3576 9.63294 16.7805 11.0389 15.7323 12.0973L16.4428 12.801C17.6775 11.5543 18.3576 9.89499 18.3576 8.13354H17.3576ZM15.7322 4.16961C16.7805 5.22815 17.3576 6.63418 17.3576 8.13354H18.3576C18.3576 6.37212 17.6775 4.71279 16.4427 3.46595L15.7322 4.16961ZM15.9607 4.16822C15.8994 4.23171 15.7945 4.23249 15.7322 4.16963L16.4427 3.46593C16.11 3.13003 15.5695 3.13363 15.2412 3.47368L15.9607 4.16822ZM15.9593 3.96676C16.0154 4.02343 16.0158 4.1111 15.9607 4.16817L15.2412 3.47372C14.9191 3.80742 14.9222 4.3406 15.2487 4.67036L15.9593 3.96676ZM17.6696 8.13354C17.6696 6.56169 17.062 5.0802 15.9593 3.96673L15.2488 4.6704C16.1652 5.59574 16.6696 6.82397 16.6696 8.13354H17.6696ZM15.9594 12.3002C17.062 11.1868 17.6696 9.70542 17.6696 8.13354H16.6696C16.6696 9.44315 16.1652 10.6713 15.2489 11.5965L15.9594 12.3002ZM15.9607 12.0987C16.0159 12.1558 16.0155 12.2435 15.9593 12.3002L15.2489 11.5964C14.9223 11.9262 14.9191 12.4595 15.2413 12.7932L15.9607 12.0987Z" fill="#757575" mask="url(#path-1-outside-1)"/>' +
		'</svg>',
	iconStepPlayAudioOff: '<svg width="19" height="17" viewBox="0 0 19 17" fill="none">' +
		'<mask id="path-1-outside-1" maskUnits="userSpaceOnUse" x="0" y="-0.366699" width="19" height="17" fill="black">' +
		'<rect fill="white" y="-0.366699" width="19" height="17" />' +
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M10.0755 15.5729C10.1334 15.613 10.2007 15.6333 10.2682 15.6333C10.3235 15.6333 10.3789 15.6197 10.4295 15.5922C10.542 15.5312 10.6122 15.4116 10.6122 15.2815V0.985114C10.6122 0.852045 10.5388 0.730341 10.4224 0.670632C10.3062 0.611029 10.1669 0.623485 10.0625 0.703072C10.0229 0.733296 6.12166 3.70627 3.79778 5.31987H1.34404C1.15403 5.31987 1 5.47743 1 5.67172V10.5949C1 10.7892 1.15403 10.9467 1.34404 10.9467H3.79765C4.92723 11.7312 5.91912 12.4876 6.87919 13.2197L6.87993 13.2202C7.87115 13.976 8.89613 14.7576 10.0755 15.5729ZM3.90323 10.2431H1.68808V6.02361H3.90333C3.97204 6.02361 4.03916 6.00256 4.09603 5.96323C5.90625 4.7116 8.7392 2.58106 9.92413 1.68434V14.6139C8.97669 13.9413 8.12158 13.2893 7.29049 12.6555C6.29956 11.8999 5.27491 11.1186 4.09593 10.3034C4.03902 10.2641 3.9719 10.2431 3.90323 10.2431ZM17.9084 6.53378L15.9422 8.50005L17.9084 10.4662C18.0305 10.5883 18.0305 10.7863 17.9084 10.9084C17.8473 10.9695 17.7673 11 17.6873 11C17.6074 11 17.5273 10.9695 17.4662 10.9084L15.5001 8.94211L13.5338 10.9084C13.4727 10.9695 13.3926 11 13.3127 11C13.2327 11 13.1527 10.9695 13.0916 10.9085C12.9695 10.7864 12.9695 10.5884 13.0916 10.4663L15.0579 8.50005L13.0916 6.53378C12.9695 6.41172 12.9695 6.21368 13.0916 6.09162C13.2138 5.96946 13.4116 5.96946 13.5338 6.09162L15.5001 8.05789L17.4662 6.09162C17.5884 5.96946 17.7862 5.96946 17.9084 6.09162C18.0305 6.21368 18.0305 6.41172 17.9084 6.53378Z" />' +
		'</mask>' +
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M10.0755 15.5729C10.1334 15.613 10.2007 15.6333 10.2682 15.6333C10.3235 15.6333 10.3789 15.6197 10.4295 15.5922C10.542 15.5312 10.6122 15.4116 10.6122 15.2815V0.985114C10.6122 0.852045 10.5388 0.730341 10.4224 0.670632C10.3062 0.611029 10.1669 0.623485 10.0625 0.703072C10.0229 0.733296 6.12166 3.70627 3.79778 5.31987H1.34404C1.15403 5.31987 1 5.47743 1 5.67172V10.5949C1 10.7892 1.15403 10.9467 1.34404 10.9467H3.79765C4.92723 11.7312 5.91912 12.4876 6.87919 13.2197L6.87993 13.2202C7.87115 13.976 8.89613 14.7576 10.0755 15.5729ZM3.90323 10.2431H1.68808V6.02361H3.90333C3.97204 6.02361 4.03916 6.00256 4.09603 5.96323C5.90625 4.7116 8.7392 2.58106 9.92413 1.68434V14.6139C8.97669 13.9413 8.12158 13.2893 7.29049 12.6555C6.29956 11.8999 5.27491 11.1186 4.09593 10.3034C4.03902 10.2641 3.9719 10.2431 3.90323 10.2431ZM17.9084 6.53378L15.9422 8.50005L17.9084 10.4662C18.0305 10.5883 18.0305 10.7863 17.9084 10.9084C17.8473 10.9695 17.7673 11 17.6873 11C17.6074 11 17.5273 10.9695 17.4662 10.9084L15.5001 8.94211L13.5338 10.9084C13.4727 10.9695 13.3926 11 13.3127 11C13.2327 11 13.1527 10.9695 13.0916 10.9085C12.9695 10.7864 12.9695 10.5884 13.0916 10.4663L15.0579 8.50005L13.0916 6.53378C12.9695 6.41172 12.9695 6.21368 13.0916 6.09162C13.2138 5.96946 13.4116 5.96946 13.5338 6.09162L15.5001 8.05789L17.4662 6.09162C17.5884 5.96946 17.7862 5.96946 17.9084 6.09162C18.0305 6.21368 18.0305 6.41172 17.9084 6.53378Z" fill="#757575" />' +
		'<path d="M10.0755 15.5729L10.36 15.1617L10.3598 15.1616L10.0755 15.5729ZM10.4295 15.5922L10.1909 15.1528L10.1908 15.1529L10.4295 15.5922ZM10.4224 0.670632L10.6508 0.225813L10.6505 0.225677L10.4224 0.670632ZM10.0625 0.703072L10.3657 1.10066L10.3657 1.10063L10.0625 0.703072ZM3.79778 5.31987V5.81987H3.95435L4.08296 5.73058L3.79778 5.31987ZM3.79765 10.9467L4.08287 10.5361L3.95424 10.4467H3.79765V10.9467ZM6.87919 13.2197L6.57601 13.6173L6.57612 13.6173L6.87919 13.2197ZM6.87993 13.2202L7.1831 12.8226L7.183 12.8225L6.87993 13.2202ZM1.68808 10.2431H1.18808V10.7431H1.68808V10.2431ZM1.68808 6.02361V5.52361H1.18808V6.02361H1.68808ZM4.09603 5.96323L3.81167 5.55196L3.8116 5.55201L4.09603 5.96323ZM9.92413 1.68434H10.4241V0.678921L9.62241 1.28564L9.92413 1.68434ZM9.92413 14.6139L9.6347 15.0216L10.4241 15.582V14.6139H9.92413ZM7.29049 12.6555L7.59367 12.258L7.59367 12.258L7.29049 12.6555ZM4.09593 10.3034L4.38028 9.89217L4.38025 9.89215L4.09593 10.3034ZM15.9422 8.50005L15.5886 8.14651L15.2351 8.50006L15.5886 8.85361L15.9422 8.50005ZM17.9084 6.53378L17.555 6.18009L17.5548 6.18024L17.9084 6.53378ZM17.9084 10.4662L17.5548 10.8198L17.555 10.8199L17.9084 10.4662ZM17.9084 10.9084L17.555 10.5547L17.5548 10.5548L17.9084 10.9084ZM17.4662 10.9084L17.8198 10.5548L17.8198 10.5548L17.4662 10.9084ZM15.5001 8.94211L15.8536 8.58856L15.5001 8.235L15.1465 8.58855L15.5001 8.94211ZM13.5338 10.9084L13.1802 10.5548L13.1802 10.5548L13.5338 10.9084ZM13.0916 10.9085L12.7382 11.2622L12.7384 11.2623L13.0916 10.9085ZM13.0916 10.4663L13.445 10.82L13.4452 10.8199L13.0916 10.4663ZM15.0579 8.50005L15.4115 8.85361L15.765 8.50005L15.4115 8.1465L15.0579 8.50005ZM13.0916 6.53378L13.4452 6.18023L13.445 6.18009L13.0916 6.53378ZM13.0916 6.09162L13.445 6.44532L13.4452 6.44517L13.0916 6.09162ZM13.5338 6.09162L13.1802 6.44517L13.1802 6.44518L13.5338 6.09162ZM15.5001 8.05789L15.1465 8.41145L15.5001 8.765L15.8536 8.41144L15.5001 8.05789ZM17.4662 6.09162L17.1127 5.73807L17.1127 5.73808L17.4662 6.09162ZM17.9084 6.09162L17.5548 6.44517L17.555 6.44532L17.9084 6.09162ZM10.2682 15.1333C10.3011 15.1333 10.3333 15.1433 10.36 15.1617L9.79098 15.9841C9.93362 16.0828 10.1004 16.1333 10.2682 16.1333V15.1333ZM10.1908 15.1529C10.2145 15.14 10.2413 15.1333 10.2682 15.1333V16.1333C10.4056 16.1333 10.5433 16.0994 10.6682 16.0315L10.1908 15.1529ZM10.1122 15.2815C10.1122 15.2324 10.1387 15.1812 10.1909 15.1528L10.6681 16.0316C10.9452 15.8811 11.1122 15.5908 11.1122 15.2815H10.1122ZM10.1122 0.985114V15.2815H11.1122V0.985114H10.1122ZM10.1941 1.11545C10.14 1.08766 10.1122 1.03536 10.1122 0.985114H11.1122C11.1122 0.668733 10.9376 0.373023 10.6508 0.225813L10.1941 1.11545ZM10.3657 1.10063C10.3173 1.13753 10.25 1.14412 10.1944 1.11559L10.6505 0.225677C10.3623 0.0779435 10.0164 0.109434 9.75928 0.305513L10.3657 1.10063ZM4.08296 5.73058C6.41776 4.10938 10.3283 1.12917 10.3657 1.10066L9.75931 0.305489C9.71744 0.337422 5.82555 3.30316 3.51261 4.90917L4.08296 5.73058ZM1.34404 5.81987H3.79778V4.81987H1.34404V5.81987ZM1.5 5.67172C1.5 5.7429 1.44072 5.81987 1.34404 5.81987V4.81987C0.86733 4.81987 0.5 5.21196 0.5 5.67172H1.5ZM1.5 10.5949V5.67172H0.5V10.5949H1.5ZM1.34404 10.4467C1.44072 10.4467 1.5 10.5237 1.5 10.5949H0.5C0.5 11.0546 0.86733 11.4467 1.34404 11.4467V10.4467ZM3.79765 10.4467H1.34404V11.4467H3.79765V10.4467ZM7.18237 12.8221C6.22304 12.0905 5.22283 11.3278 4.08287 10.5361L3.51243 11.3574C4.63163 12.1347 5.6152 12.8846 6.57601 13.6173L7.18237 12.8221ZM7.183 12.8225L7.18226 12.822L6.57612 13.6173L6.57686 13.6179L7.183 12.8225ZM10.3598 15.1616C9.19134 14.3538 8.17504 13.579 7.1831 12.8226L6.57676 13.6178C7.56726 14.3731 8.60092 15.1613 9.79114 15.9842L10.3598 15.1616ZM1.68808 10.7431H3.90323V9.74307H1.68808V10.7431ZM1.18808 6.02361V10.2431H2.18808V6.02361H1.18808ZM3.90333 5.52361H1.68808V6.52361H3.90333V5.52361ZM3.8116 5.55201C3.83767 5.53398 3.86963 5.52361 3.90333 5.52361V6.52361C4.07444 6.52361 4.24065 6.47115 4.38046 6.37444L3.8116 5.55201ZM9.62241 1.28564C8.43606 2.18343 5.61161 4.30744 3.81167 5.55196L4.38039 6.37449C6.2009 5.11576 9.04234 2.97869 10.2259 2.08304L9.62241 1.28564ZM10.4241 14.6139V1.68434H9.42413V14.6139H10.4241ZM6.98731 13.0531C7.81773 13.6864 8.6793 14.3434 9.6347 15.0216L10.2136 14.2062C9.27408 13.5392 8.42544 12.8922 7.59367 12.258L6.98731 13.0531ZM3.81157 10.7147C4.97969 11.5224 5.99566 12.297 6.98731 13.0531L7.59367 12.258C6.60345 11.5029 5.57013 10.7148 4.38028 9.89217L3.81157 10.7147ZM3.90323 10.7431C3.86945 10.7431 3.83755 10.7327 3.8116 10.7147L4.38025 9.89215C4.2405 9.79554 4.07435 9.74307 3.90323 9.74307V10.7431ZM16.2958 8.8536L18.2619 6.88733L17.5548 6.18024L15.5886 8.14651L16.2958 8.8536ZM18.2619 10.1127L16.2957 8.1465L15.5886 8.85361L17.5548 10.8198L18.2619 10.1127ZM18.2618 11.2621C18.5794 10.9447 18.5794 10.4299 18.2618 10.1125L17.555 10.8199C17.4817 10.7467 17.4817 10.6279 17.555 10.5547L18.2618 11.2621ZM17.6873 11.5C17.8946 11.5 18.1034 11.4205 18.2619 11.2619L17.5548 10.5548C17.5912 10.5184 17.64 10.5 17.6873 10.5V11.5ZM17.1127 11.2619C17.2712 11.4205 17.4801 11.5 17.6873 11.5V10.5C17.7347 10.5 17.7834 10.5184 17.8198 10.5548L17.1127 11.2619ZM15.1465 9.29565L17.1127 11.2619L17.8198 10.5548L15.8536 8.58856L15.1465 9.29565ZM13.8873 11.2619L15.8536 9.29566L15.1465 8.58855L13.1802 10.5548L13.8873 11.2619ZM13.3127 11.5C13.5199 11.5 13.7288 11.4205 13.8873 11.2619L13.1802 10.5548C13.2166 10.5184 13.2653 10.5 13.3127 10.5V11.5ZM12.7384 11.2623C12.8968 11.4205 13.1055 11.5 13.3127 11.5V10.5C13.36 10.5 13.4086 10.5184 13.4449 10.5546L12.7384 11.2623ZM12.7382 10.1126C12.4206 10.43 12.4206 10.9448 12.7382 11.2622L13.445 10.5548C13.5183 10.628 13.5183 10.7468 13.445 10.82L12.7382 10.1126ZM14.7044 8.1465L12.7381 10.1128L13.4452 10.8199L15.4115 8.85361L14.7044 8.1465ZM12.7381 6.88734L14.7044 8.85361L15.4115 8.1465L13.4452 6.18023L12.7381 6.88734ZM12.7382 5.73792C12.4206 6.05528 12.4206 6.57013 12.7382 6.88748L13.445 6.18009C13.5183 6.25332 13.5183 6.37208 13.445 6.44532L12.7382 5.73792ZM13.8873 5.73808C13.5699 5.42064 13.0555 5.42064 12.7381 5.73808L13.4452 6.44517C13.3721 6.51828 13.2533 6.51828 13.1802 6.44517L13.8873 5.73808ZM15.8536 7.70434L13.8873 5.73807L13.1802 6.44518L15.1465 8.41145L15.8536 7.70434ZM17.1127 5.73808L15.1465 7.70435L15.8536 8.41144L17.8198 6.44517L17.1127 5.73808ZM18.2619 5.73807C17.9445 5.42064 17.4301 5.42064 17.1127 5.73807L17.8198 6.44517C17.7467 6.51828 17.6279 6.51828 17.5548 6.44517L18.2619 5.73807ZM18.2618 6.88748C18.5794 6.57013 18.5794 6.05528 18.2618 5.73793L17.555 6.44532C17.4817 6.37208 17.4817 6.25332 17.555 6.18009L18.2618 6.88748Z" fill="#757575" mask="url(#path-1-outside-1)" />' +
		'</svg>',
	insights_popup_desktop: '<svg version="1.1" id="Layer_1" class="mgPlayerJSTest_position-center mgPlayerJSTest_width-height-100" x="0px" y="0px" viewBox="0 0 146.65 139.91" style="enable-background:new 0 0 146.65 139.91;" xml:space="preserve">' +
        '<style type="text/css">' +
        '.st0 { fill: #A3FEFE; } .st1 { fill: #FFFFFF; } .st2 { fill: #1F37DD; } .st3 { fill: url(#SVGID_1_); }' +
        '</style>' +
        '<g>' +
        '<ellipse class="st0" cx="71.66" cy="125.37" rx="46.19" ry="5.32" />' +
        '<g>' +
        '<path class="st1" d="M129.26,102.52H17.39c-4.4,0-7.96-3.56-7.96-7.96V17.18c0-4.4,3.56-7.96,7.96-7.96h111.87' +
        'c4.4,0,7.96,3.56,7.96,7.96v77.38C137.22,98.95,133.66,102.52,129.26,102.52z" />' +
        '<path class="st2" d="M129.26,103.02H17.39c-4.66,0-8.46-3.79-8.46-8.46V17.18c0-4.66,3.79-8.46,8.46-8.46h111.87' +
        'c4.66,0,8.46,3.79,8.46,8.46v77.38C137.72,99.22,133.93,103.02,129.26,103.02z M17.39,9.72c-4.11,0-7.46,3.35-7.46,7.46v77.38' +
        'c0,4.11,3.35,7.46,7.46,7.46h111.87c4.11,0,7.46-3.35,7.46-7.46V17.18c0-4.11-3.35-7.46-7.46-7.46H17.39z" />' +
        '</g>' +
        '<rect x="9.43" y="84.59" class="st2" width="127.79" height="1" />' +
        '<circle class="st2" cx="73.33" cy="92.92" r="2.25" />' +
        '<g>' +
        '<path class="st1" d="M96.95,61.59H51.14c-1.94,0-3.51-1.57-3.51-3.51V42.48c0-1.94,1.57-3.51,3.51-3.51h45.81' +
        'c1.94,0,3.51,1.57,3.51,3.51v15.61C100.45,60.02,98.88,61.59,96.95,61.59z" />' +
        '<path class="st2" d="M96.95,62.09H51.14c-2.21,0-4.01-1.8-4.01-4.01V42.48c0-2.21,1.8-4.01,4.01-4.01h45.81' +
        'c2.21,0,4.01,1.8,4.01,4.01v15.61C100.95,60.29,99.16,62.09,96.95,62.09z M51.14,39.47c-1.66,0-3.01,1.35-3.01,3.01v15.61' +
        'c0,1.66,1.35,3.01,3.01,3.01h45.81c1.66,0,3.01-1.35,3.01-3.01V42.48c0-1.66-1.35-3.01-3.01-3.01H51.14z" />' +
        '</g>' +
        '<g>' +
        '<line class="st1" x1="57.81" y1="50.28" x2="88.71" y2="50.28" />' +
        '<rect x="57.81" y="49.78" class="st2" width="30.89" height="1" />' +
        '</g>' +
        '<g>' +
        '<rect x="62.02" y="102.52" class="st1" width="23.01" height="14.42" />' +
        '<path class="st2" d="M85.53,117.43h-24v-15.42h24V117.43z M62.53,116.43h22v-13.42h-22V116.43z" />' +
        '</g>' +
        '<g>' +
        '<path class="st1" d="M97.42,124.14H49.64v-3.45c0-6.06,4.91-10.97,10.97-10.97h25.85c6.06,0,10.97,4.91,10.97,10.97V124.14z" />' +
        '<path class="st2" d="M97.92,124.64H49.14v-3.95c0-6.32,5.14-11.47,11.47-11.47h25.85c6.32,0,11.47,5.14,11.47,11.47V124.64z' +
        'M50.14,123.64h46.78v-2.95c0-5.77-4.7-10.47-10.47-10.47H60.6c-5.77,0-10.47,4.7-10.47,10.47V123.64z" />' +
        '</g>' +
        '<g>' +
        '<linearGradient id="SVGID_1_" gradientUnits="userSpaceOnUse" x1="127.0829" y1="66.1833" x2="88.6796" y2="61.2281">' +
        '<stop offset="7.853836e-03" style="stop-color:#C529F5" />' +
        '<stop offset="0.9933" style="stop-color:#AA3888" />' +
        '</linearGradient>' +
        '<path class="st3" d="M87.52,46.62l12.52,30.96c0.15,0.36,0.66,0.35,0.79-0.01l4.76-12.63c0.05-0.13,0.16-0.23,0.3-0.26l11.63-2.81' +
        'c0.39-0.09,0.45-0.62,0.09-0.79L88.11,46.08C87.76,45.9,87.37,46.25,87.52,46.62z" />' +
        '<path class="st2" d="M100.44,78.35c-0.38,0-0.71-0.23-0.86-0.58L87.06,46.8c-0.15-0.36-0.05-0.77,0.23-1.03' +
        'c0.29-0.26,0.7-0.32,1.05-0.14l29.51,14.99c0.35,0.18,0.55,0.54,0.5,0.93c-0.04,0.39-0.32,0.7-0.7,0.79l-11.64,2.81l-4.71,12.58' +
        'c-0.13,0.36-0.47,0.59-0.85,0.6C100.45,78.35,100.44,78.35,100.44,78.35z M88.06,46.61l12.38,30.61l4.69-12.45' +
        'c0.11-0.29,0.35-0.5,0.65-0.58l11.44-2.77L88.06,46.61z" />' +
        '</g>' +
        '</g>' +
        '</svg>',
	popup_info: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none">' +
		'<circle cx="12" cy="12" r="11.1" stroke="white" stroke-width="1.8"/>' +
		'<rect x="11" y="11" width="2" height="9" rx="1" fill="white"/>' +
		'<circle cx="12" cy="7.5" r="1.5" fill="white"/>' +
		'</svg>',
	fullscreen: '<svg version="1.1" class="Capa_1" x="0px" y="0px" viewBox="0 0 28.361 28.361" style="enable-background:new 0 0 28.361 28.361;" xml:space="preserve">' +
		'<g>' +
		'<g class="c115_arrows">' +
		'<path d="M28.36,19.595c0-0.868-0.665-1.57-1.491-1.57c-0.819,0.002-1.492,0.702-1.492,1.57v3.25l-6.018-6.021 c-0.582-0.583-1.524-0.583-2.106,0c-0.582,0.582-0.582,1.527,0,2.109l5.989,5.987h-3.235c-0.881,0.002-1.591,0.669-1.591,1.491 c0,0.824,0.71,1.49,1.591,1.49h6.761c0.881,0,1.59-0.665,1.593-1.49c-0.003-0.022-0.006-0.039-0.009-0.061 c0.003-0.028,0.009-0.058,0.009-0.087v-6.668H28.36z"/>' +
		'<path d="M9,16.824l-6.015,6.021v-3.25c0-0.868-0.672-1.568-1.493-1.57c-0.824,0-1.49,0.702-1.49,1.57L0,26.264 c0,0.029,0.008,0.059,0.01,0.087c-0.002,0.021-0.006,0.038-0.008,0.061c0.002,0.825,0.712,1.49,1.592,1.49h6.762 c0.879,0,1.59-0.666,1.59-1.49c0-0.822-0.711-1.489-1.59-1.491H5.121l5.989-5.987c0.58-0.582,0.58-1.527,0-2.109 C10.527,16.241,9.584,16.241,9,16.824z"/>' +
		'<path d="M19.359,11.535l6.018-6.017v3.25c0,0.865,0.673,1.565,1.492,1.568c0.826,0,1.491-0.703,1.491-1.568V2.097 c0-0.029-0.006-0.059-0.009-0.085c0.003-0.021,0.006-0.041,0.009-0.062c-0.003-0.826-0.712-1.491-1.592-1.491h-6.761 c-0.881,0-1.591,0.665-1.591,1.491c0,0.821,0.71,1.49,1.591,1.492h3.235l-5.989,5.987c-0.582,0.581-0.582,1.524,0,2.105 C17.835,12.12,18.777,12.12,19.359,11.535z"/>' +
		'<path d="M5.121,3.442h3.234c0.879-0.002,1.59-0.671,1.59-1.492c0-0.826-0.711-1.491-1.59-1.491H1.594 c-0.88,0-1.59,0.665-1.592,1.491C0.004,1.971,0.008,1.991,0.01,2.012C0.008,2.038,0,2.067,0,2.097l0.002,6.672 c0,0.865,0.666,1.568,1.49,1.568c0.821-0.003,1.493-0.703,1.493-1.568v-3.25L9,11.535c0.584,0.585,1.527,0.585,2.11,0 c0.58-0.581,0.58-1.524,0-2.105L5.121,3.442z"/>' +
		'</g>' +
		'<g class="Capa_1_253_">' +
		'</g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'</svg>',
	close_btn: '<svg width="10px" height="10px" viewBox="0 0 14 14" version="1.1" >' +
		'<defs></defs>' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="step-action-icons" transform="translate(-6.000000, -6.000000)" fill-rule="nonzero" fill="#FFFFFF">' +
		'<g class="down-arrow-copy" transform="translate(5.000000, 5.000000)">' +
		'<g class="download-arrow" transform="translate(1.000000, 1.000000)">' +
		'<path d="M6.81388436,5.99990412 L11.8314316,0.982437076 C12.0561895,0.757682781 12.0561895,0.393320016 11.8314316,0.168565721 C11.6066737,-0.0561885737 11.2423051,-0.0561885737 11.0175472,0.168565721 L6,5.18603276 L0.982452776,0.169332801 C0.757694889,-0.0554214942 0.393326302,-0.0554214942 0.168568415,0.169332801 C-0.0561894717,0.394087095 -0.0561894717,0.75844986 0.168568415,0.983204155 L5.18611564,6.00067119 L0.169335507,11.0173712 C-0.0554223799,11.2421254 -0.0554223799,11.6064882 0.169335507,11.8312425 C0.282097996,11.9432361 0.428612523,12 0.575894141,12 C0.72317576,12 0.870457378,11.9440032 0.982452776,11.8312425 L6,6.81377547 L11.0175472,11.8312425 C11.1303097,11.9432361 11.2768242,12 11.4241059,12 C11.5713875,12 11.7186691,11.9440032 11.8306645,11.8312425 C12.0554224,11.6064882 12.0554224,11.2421254 11.8306645,11.0173712 L6.81388436,5.99990412 Z" class="shape"></path>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	delay_timer_5sec: '<svg width="20px" height="20px" viewBox="0 0 13 13" version="1.1" >' +
		'<defs></defs>' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="02-inline-step-capture-and-Navigation-and-dealy-capture-mode-" transform="translate(-189.000000, -86.000000)" fill-rule="nonzero">' +
		'<g class="Group-9" transform="translate(177.000000, 82.000000)">' +
		'<g class="Group-12" transform="translate(2.000000, 0.000000)">' +
		'<g class="Group-11" transform="translate(6.000000, 0.000000)">' +
		'<g class="Group-10" transform="translate(4.000000, 4.000000)">' +
		'<g class="svg-(1)">' +
		'<path d="M1.35382189,5.39265438 C1.49446965,5.7367172 1.63721664,6.08078002 1.77366597,6.42903873 C1.78626129,6.45840995 1.76107064,6.51505444 1.73797922,6.5465236 C1.4272946,6.96191651 1.21947178,7.42136626 1.1292053,7.9332646 C0.831116007,9.62630543 1.90591685,11.2480162 3.58529317,11.6382338 C5.39482116,12.0578226 7.21694447,10.8200356 7.48984312,8.9864325 C7.70606282,7.54514495 6.94404582,6.15420806 5.61104086,5.55419607 C5.57955256,5.53951046 5.54806425,5.52482485 5.51657594,5.51013925 C5.74329175,4.91642108 5.74329175,4.91642108 5.71180344,4.44228573 C6.34786722,4.66256986 6.89576375,5.00873062 7.36179068,5.48286597 C8.07552561,6.21085255 8.48907203,7.08359727 8.58143773,8.09900218 C8.77876445,10.2451989 7.38278288,12.1501321 5.35073753,12.6641284 C3.2997992,13.1823206 1.19638036,12.1438383 0.348295314,10.1801627 C-0.430515455,8.37593079 0.180357682,6.43113667 1.35382189,5.39265438 Z M5.01234626,8.48953141 C5.01443549,8.81806642 4.79715569,9.10265725 4.4858606,9.18426786 C4.16203013,9.27006363 3.82775352,9.12986079 3.67315059,8.82643674 C3.47467386,8.43512434 3.28664326,8.03962678 3.10279113,7.64203664 C2.69330228,6.75269028 2.29217035,5.86334391 1.97460757,4.93633112 C1.91193071,4.7521841 1.86178922,4.56385193 1.82209387,4.37342718 C1.80746927,4.30227947 1.8388077,4.22276145 1.85134307,4.14742858 C1.92237685,4.17672469 2.00803523,4.19137275 2.06026595,4.23950208 C2.22113657,4.39435298 2.37782873,4.55338904 2.51780706,4.72498057 C3.17173568,5.52016085 3.75045206,6.3697482 4.32290075,7.22142812 C4.51302057,7.50392638 4.69687271,7.79270238 4.88281407,8.07938579 C4.96220477,8.20284799 5.01652472,8.33886567 5.01234626,8.48953141 Z M5.01257165,4.71466633 C5.01048201,5.10751809 4.69494675,5.42305328 4.30209489,5.42514292 C3.90715339,5.42514292 3.58534921,5.10333882 3.58743885,4.70839741 C3.58952849,4.30927674 3.90715339,3.99792082 4.3083638,4.00001046 C4.70121566,4.00001046 5.01257165,4.31972492 5.01257165,4.71466633 Z M10.1757812,2.51171875 C10.7773468,2.51171875 11.2506493,2.6608058 11.5957031,2.95898438 C11.9407569,3.25716295 12.1132812,3.66536199 12.1132812,4.18359375 C12.1132812,4.77474254 11.9251321,5.23827957 11.5488281,5.57421875 C11.1725242,5.91015793 10.6536491,6.078125 9.9921875,6.078125 C9.34895512,6.078125 8.85807461,5.97526145 8.51953125,5.76953125 L8.51953125,5.14453125 C8.70182383,5.26171934 8.92838406,5.35351529 9.19921875,5.41992188 C9.47005344,5.48632846 9.73697785,5.51953125 10,5.51953125 C10.4583356,5.51953125 10.8144519,5.41145941 11.0683594,5.1953125 C11.3222669,4.97916559 11.4492188,4.66666871 11.4492188,4.2578125 C11.4492188,3.46093352 10.9609424,3.0625 9.984375,3.0625 C9.73697793,3.0625 9.40625207,3.10026004 8.9921875,3.17578125 L8.65625,2.9609375 L8.87109375,0.2890625 L11.7109375,0.2890625 L11.7109375,0.88671875 L9.42578125,0.88671875 L9.28125,2.6015625 C9.58073066,2.54166637 9.87890477,2.51171875 10.1757812,2.51171875 Z" class="combined-shape"></path>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	delay_timer_10sec: '<svg width="25px" height="21px" viewBox="0 0 16 13" version="1.1" >' +
		'<defs></defs>' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="02-inline-step-capture-and-Navigation-and-dealy-capture-mode-" transform="translate(-187.000000, -125.000000)" fill-rule="nonzero" fill="#FFFFFF">' +
		'<g class="Group-9" transform="translate(177.000000, 82.000000)">' +
		'<g class="Group-13" transform="translate(0.000000, 39.000000)">' +
		'<g class="Group-11" transform="translate(8.000000, 0.000000)">' +
		'<g class="Group-10" transform="translate(2.000000, 4.000000)">' +
		'<g class="svg-(1)">' +
		'<path d="M1.41679028,5.42486069 C1.5639798,5.77688026 1.71336618,6.12889982 1.85616198,6.48521231 C1.86934313,6.51526276 1.84298083,6.5732172 1.81881538,6.60541411 C1.49368033,7.03041334 1.27619134,7.50048825 1.18172643,8.02422468 C0.869772527,9.75641851 1.99456406,11.4156327 3.75205083,11.8148744 C5.64574282,12.2441665 7.55261597,10.9777547 7.83820757,9.10174798 C8.06448399,7.62712944 7.26702437,6.20402595 5.87201925,5.59013817 C5.83906637,5.57511295 5.80611349,5.56008772 5.77316062,5.5450625 C6.01042133,4.9376141 6.01042133,4.9376141 5.97746845,4.45251397 C6.64311657,4.67789235 7.21649663,5.03205837 7.7041992,5.51715851 C8.45113108,6.26198039 8.8839122,7.15490807 8.98057397,8.19379508 C9.18707867,10.3896244 7.72616779,12.3386108 5.5996088,12.8644937 C3.45327808,13.3946695 1.2520259,12.3321714 0.36449508,10.3230842 C-0.450539409,8.4771279 0.188746403,6.48735877 1.41679028,5.42486069 Z M5.24547841,8.59335563 C5.24766481,8.92948829 5.02027899,9.22066053 4.69450507,9.30415845 C4.35561274,9.39193832 4.00578839,9.24849317 3.84399464,8.93805218 C3.63628643,8.53769035 3.43951024,8.13304657 3.24710685,7.72626182 C2.81857203,6.81634857 2.39878282,5.90643532 2.06644969,4.95798457 C2.00085763,4.769579 1.94838398,4.57689149 1.90684234,4.382063 C1.89153752,4.30926994 1.92433355,4.22791299 1.93745197,4.15083799 C2.01178964,4.1808116 2.10143213,4.19579841 2.15609218,4.24504077 C2.32444515,4.40347273 2.48842531,4.56618663 2.63491425,4.74174636 C3.31925812,5.55531586 3.92489152,6.42455063 4.5239657,7.29592638 C4.7229283,7.58495765 4.91533169,7.88041183 5.10992148,8.17372505 C5.19300476,8.30004242 5.24985121,8.43920562 5.24547841,8.59335563 Z M5.24571429,4.73119359 C5.24352746,5.13313038 4.91331614,5.4559626 4.50219213,5.45810056 C4.08888128,5.45810056 3.75210947,5.12885446 3.7542963,4.72477971 C3.75648313,4.31642903 4.08888128,3.99787274 4.50875261,4.0000107 C4.91987663,4.0000107 5.24571429,4.32711883 5.24571429,4.73119359 Z M9.79296875,6 L9.16015625,6 L9.16015625,1.9296875 C9.16015625,1.59114414 9.17057281,1.27083484 9.19140625,0.96875 C9.13671848,1.02343777 9.07552117,1.08072887 9.0078125,1.140625 C8.94010383,1.20052113 8.63021109,1.45442484 8.078125,1.90234375 L7.734375,1.45703125 L9.24609375,0.2890625 L9.79296875,0.2890625 L9.79296875,6 Z M15.75,3.13671875 C15.75,4.12370285 15.5944026,4.86067465 15.2832031,5.34765625 C14.9720037,5.83463785 14.496097,6.078125 13.8554688,6.078125 C13.2408823,6.078125 12.7734391,5.82877854 12.453125,5.33007812 C12.1328109,4.83137771 11.9726562,4.10026523 11.9726562,3.13671875 C11.9726562,2.14192211 12.1276026,1.40364824 12.4375,0.921875 C12.7473974,0.440101758 13.2200489,0.19921875 13.8554688,0.19921875 C14.4752635,0.19921875 14.9459619,0.45051832 15.2675781,0.953125 C15.5891943,1.45573168 15.75,2.18358898 15.75,3.13671875 Z M12.6289062,3.13671875 C12.6289062,3.96745207 12.7265615,4.57226373 12.921875,4.95117188 C13.1171885,5.33008002 13.4283833,5.51953125 13.8554688,5.51953125 C14.2877626,5.51953125 14.6009105,5.32747588 14.7949219,4.94335938 C14.9889333,4.55924287 15.0859375,3.95703535 15.0859375,3.13671875 C15.0859375,2.31640215 14.9889333,1.7154967 14.7949219,1.33398438 C14.6009105,0.952472051 14.2877626,0.76171875 13.8554688,0.76171875 C13.4283833,0.76171875 13.1171885,0.94986791 12.921875,1.32617188 C12.7265615,1.70247584 12.6289062,2.30598543 12.6289062,3.13671875 Z" class="combined-shape"></path>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	toolbar_position_arrow: '<svg width="10px" height="10px" viewBox="0 0 10 16" version="1.1" >' +
		'<defs></defs>' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="step-action-icons" transform="translate(-5.000000, -2.000000)" fill-rule="nonzero" fill="#FFFFFF">' +
		'<g class="down-arrow" transform="translate(4.000000, 1.000000)">' +
		'<g class="download-arrow" transform="translate(1.000000, 1.000000)">' +
		'<path d="M10.8400953,10.7782304 C11.0533016,10.5525616 11.0533016,10.1972856 10.8400953,9.97161667 C10.6194343,9.75357174 10.2640906,9.75357174 10.0513814,9.97161667 L6.05214946,14.061611 L6.05214946,0.564680469 C6.05214946,0.250065518 5.80763323,0 5.5,0 C5.19236677,0 4.9398988,0.250065518 4.9398988,0.564680469 L4.9398988,14.061611 L0.94861861,9.97161667 C0.727957621,9.75357174 0.380565658,9.75357174 0.159904669,9.97161667 C-0.0533015565,10.1972856 -0.0533015565,10.5525616 0.159904669,10.7782304 L5.10589152,15.8364663 C5.31909775,16.0545112 5.67394447,16.0545112 5.89460546,15.8364663 L10.8400953,10.7782304 Z" class="shape"></path>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	capture_tool: '<svg width="22" height="17" viewBox="0 0 22 17" fill="none">' +
		'<path d="M19.9114 14.0602H19.8924V14.1602C19.8924 14.4753 19.7703 14.7542 19.5605 14.964C19.3506 15.1739 19.0717 15.296 18.7567 15.296H3.24335C2.92829 15.296 2.64936 15.1739 2.43953 14.964C2.2297 14.7542 2.1076 14.4753 2.1076 14.1602V4.69253C2.1076 4.37747 2.2297 4.09855 2.43953 3.88871C2.64936 3.67888 2.92829 3.55679 3.24335 3.55679H6.91255C7.25295 3.55679 7.52586 3.28388 7.52586 2.94348V2.39215C7.52586 2.20708 7.59304 2.04319 7.70569 1.93054C7.81835 1.81789 7.98223 1.7507 8.1673 1.7507H13.8517C14.0368 1.7507 14.2007 1.81789 14.3133 1.93054C14.426 2.04319 14.4932 2.20708 14.4932 2.39215V2.94348C14.4932 3.28388 14.7661 3.55679 15.1065 3.55679H18.7757C19.0907 3.55679 19.3696 3.67888 19.5795 3.88871C19.7893 4.09855 19.9114 4.37747 19.9114 4.69253V14.0602ZM20.4053 3.04386C19.9874 2.60691 19.4106 2.34918 18.7567 2.34918H15.6997C15.684 1.87121 15.4869 1.41465 15.1571 1.10364C14.8158 0.762886 14.3538 0.562109 13.8517 0.562109H8.14829C7.62728 0.562109 7.16464 0.762891 6.82283 1.10471C6.49551 1.43203 6.29706 1.87064 6.28125 2.34918H3.24335C2.58898 2.34918 2.01186 2.60724 1.59387 3.04469C1.17804 3.46093 0.9 4.05573 0.9 4.69253V14.1602C0.9 14.8146 1.15806 15.3917 1.59549 15.8097C2.01174 16.2255 2.60654 16.5036 3.24335 16.5036H18.7567C19.411 16.5036 19.9882 16.2455 20.4062 15.808C20.822 15.3918 21.1 14.797 21.1 14.1602V4.69253C21.1 4.03858 20.8423 3.46178 20.4053 3.04386Z" fill="#666666" stroke="#666666" stroke-width="0.2"/>' +
		'<path d="M14.5502 9.44582L14.5503 9.44771C14.5687 10.4254 14.1631 11.3122 13.5154 11.9601C12.8671 12.5897 11.9792 12.996 11 12.996C10.0209 12.996 9.13302 12.5897 8.4847 11.9602C7.83799 11.3132 7.44986 10.4261 7.44986 9.44582C7.44986 8.46668 7.85617 7.57878 8.48572 6.93046C9.1327 6.28375 10.0197 5.89563 11 5.89563C11.9792 5.89563 12.8671 6.30194 13.5154 6.9315C14.1621 7.57847 14.5502 8.46552 14.5502 9.44582ZM11 4.65C9.67959 4.65 8.47577 5.19369 7.62135 6.04811C6.7477 6.92176 6.22324 8.10665 6.22324 9.42681C6.22324 10.7473 6.76693 11.9511 7.62135 12.8055C8.495 13.6792 9.67989 14.2036 11 14.2036C12.3205 14.2036 13.5243 13.6599 14.3787 12.8055C15.2524 11.9319 15.7769 10.747 15.7769 9.42681C15.7769 8.10635 15.2332 6.90253 14.3787 6.04811C13.5243 5.19369 12.3205 4.65 11 4.65Z" fill="#666666" stroke="#666666" stroke-width="0.2"/>' +
		'<path d="M17.7681 6.69359C18.3378 6.69359 18.7996 6.23174 18.7996 5.66203C18.7996 5.09231 18.3378 4.63047 17.7681 4.63047C17.1984 4.63047 16.7365 5.09231 16.7365 5.66203C16.7365 6.23174 17.1984 6.69359 17.7681 6.69359Z" fill="#666666" stroke="#666666" stroke-width="0.2"/>' +
		'</svg>',
	navigation_tool: '<svg width="20" height="20" viewBox="0 0 20 20" fill="none">' +
		'<path d="M19.8031 16.9154L15.823 12.9352L18.6625 11.295C18.8844 11.1668 19.0135 10.9232 18.995 10.6677C18.9766 10.412 18.8139 10.1895 18.5758 10.0946L5.91374 5.04376C5.66546 4.94463 5.38209 5.00301 5.19307 5.19197C5.00404 5.38106 4.94566 5.66443 5.04472 5.91264L10.0948 18.5761C10.1898 18.8141 10.4123 18.9769 10.668 18.9954C10.9236 19.014 11.1671 18.8848 11.2953 18.6628L12.9352 15.8233L16.9152 19.8036C17.0405 19.9291 17.2107 19.9996 17.3881 19.9996C17.5655 19.9996 17.7356 19.9291 17.8609 19.8036L19.8031 17.8613C20.0643 17.6 20.0643 17.1766 19.8031 16.9154ZM17.3881 18.385L13.2649 14.2614C13.1386 14.1351 12.9682 14.0654 12.792 14.0654C12.763 14.0654 12.7338 14.0673 12.7048 14.0712C12.4985 14.0982 12.3167 14.2197 12.2128 14.3998L10.8267 16.8L6.86378 6.86301L16.7997 10.8264L14.3994 12.2128C14.2193 12.3167 14.0978 12.4986 14.0708 12.7048C14.0436 12.9109 14.1139 13.1179 14.2609 13.265L18.3843 17.3885L17.3881 18.385Z" fill="white"/>' +
		'<path d="M19.8031 16.9154L15.823 12.9352L18.6625 11.295C18.8844 11.1668 19.0135 10.9232 18.995 10.6677C18.9766 10.412 18.8139 10.1895 18.5758 10.0946L5.91374 5.04376C5.66546 4.94463 5.38209 5.00301 5.19307 5.19197C5.00404 5.38106 4.94566 5.66443 5.04472 5.91264L10.0948 18.5761C10.1898 18.8141 10.4123 18.9769 10.668 18.9954C10.9236 19.014 11.1671 18.8848 11.2953 18.6628L12.9352 15.8233L16.9152 19.8036C17.0405 19.9291 17.2107 19.9996 17.3881 19.9996C17.5655 19.9996 17.7356 19.9291 17.8609 19.8036L19.8031 17.8613C20.0643 17.6 20.0643 17.1766 19.8031 16.9154ZM17.3881 18.385L13.2649 14.2614C13.1386 14.1351 12.9682 14.0654 12.792 14.0654C12.763 14.0654 12.7338 14.0673 12.7048 14.0712C12.4985 14.0982 12.3167 14.2197 12.2128 14.3998L10.8267 16.8L6.86378 6.86301L16.7997 10.8264L14.3994 12.2128C14.2193 12.3167 14.0978 12.4986 14.0708 12.7048C14.0436 12.9109 14.1139 13.1179 14.2609 13.265L18.3843 17.3885L17.3881 18.385Z" stroke="white"/>' +
		'<path d="M2.93675 1.99068C2.67547 1.72967 2.25217 1.72967 1.99076 1.99068C1.72955 2.25196 1.72955 2.67539 1.99076 2.93667L3.47689 4.4228C3.60746 4.5533 3.7787 4.61869 3.94988 4.61869C4.12099 4.61869 4.2921 4.5533 4.42281 4.4228C4.68396 4.16159 4.68396 3.73809 4.42281 3.47687L2.93675 1.99068Z" fill="white"/>' +
		'<path d="M2.93675 1.99068C2.67547 1.72967 2.25217 1.72967 1.99076 1.99068C1.72955 2.25196 1.72955 2.67539 1.99076 2.93667L3.47689 4.4228C3.60746 4.5533 3.7787 4.61869 3.94988 4.61869C4.12099 4.61869 4.2921 4.5533 4.42281 4.4228C4.68396 4.16159 4.68396 3.73809 4.42281 3.47687L2.93675 1.99068Z" stroke="white"/>' +
		'<path d="M3.44038 6.61407C3.44038 6.24471 3.14085 5.94531 2.77149 5.94531H0.669808C0.300515 5.94531 0.000919342 6.24464 0.000919342 6.61407C0.000919342 6.98336 0.300448 7.28289 0.669808 7.28289H2.77149C3.14085 7.28282 3.44038 6.98336 3.44038 6.61407Z" fill="white"/>' +
		'<path d="M3.44038 6.61407C3.44038 6.24471 3.14085 5.94531 2.77149 5.94531H0.669808C0.300515 5.94531 0.000919342 6.24464 0.000919342 6.61407C0.000919342 6.98336 0.300448 7.28289 0.669808 7.28289H2.77149C3.14085 7.28282 3.44038 6.98336 3.44038 6.61407Z" stroke="white"/>' +
		'<path d="M3.16917 8.67828L1.68291 10.1645C1.42163 10.4256 1.42163 10.8491 1.68291 11.1103C1.81348 11.2409 1.98453 11.3062 2.15584 11.3062C2.32695 11.3062 2.49806 11.2409 2.62863 11.1103L4.11496 9.62414C4.37618 9.36299 4.37618 8.93942 4.11496 8.67828C3.85389 8.41714 3.43045 8.41714 3.16917 8.67828Z" fill="white"/>' +
		'<path d="M3.16917 8.67828L1.68291 10.1645C1.42163 10.4256 1.42163 10.8491 1.68291 11.1103C1.81348 11.2409 1.98453 11.3062 2.15584 11.3062C2.32695 11.3062 2.49806 11.2409 2.62863 11.1103L4.11496 9.62414C4.37618 9.36299 4.37618 8.93942 4.11496 8.67828C3.85389 8.41714 3.43045 8.41714 3.16917 8.67828Z" stroke="white"/>' +
		'<path d="M6.61428 3.4396C6.98357 3.4396 7.2831 3.14007 7.2831 2.77071V0.668822C7.2831 0.299529 6.98364 0 6.61428 0C6.24492 0 5.94553 0.299461 5.94553 0.668822V2.77077C5.94553 3.14007 6.24485 3.4396 6.61428 3.4396Z" fill="white"/>' +
		'<path d="M6.61428 3.4396C6.98357 3.4396 7.2831 3.14007 7.2831 2.77071V0.668822C7.2831 0.299529 6.98364 0 6.61428 0C6.24492 0 5.94553 0.299461 5.94553 0.668822V2.77077C5.94553 3.14007 6.24485 3.4396 6.61428 3.4396Z" stroke="white"/>' +
		'<path d="M9.15108 4.31005C9.32239 4.31005 9.4935 4.24487 9.62408 4.11423L11.1101 2.6281C11.3714 2.36688 11.3714 1.94338 11.1101 1.68224C10.849 1.42103 10.4254 1.42103 10.1643 1.68224L8.67822 3.16837C8.417 3.42951 8.417 3.85308 8.67822 4.11423C8.80879 4.24487 8.97997 4.31005 9.15108 4.31005Z" fill="white"/>' +
		'<path d="M9.15108 4.31005C9.32239 4.31005 9.4935 4.24487 9.62408 4.11423L11.1101 2.6281C11.3714 2.36688 11.3714 1.94338 11.1101 1.68224C10.849 1.42103 10.4254 1.42103 10.1643 1.68224L8.67822 3.16837C8.417 3.42951 8.417 3.85308 8.67822 4.11423C8.80879 4.24487 8.97997 4.31005 9.15108 4.31005Z" stroke="white"/>' +
		'</svg>',
	delay_capture: '<svg width="22" height="22" viewBox="0 0 22 22" fill="none">' +
		'<path d="M0.9 10.9997C0.9 16.5696 5.43042 21.1 10.9997 21.1C16.5689 21.1 21.1 16.5696 21.0994 10.9997C21.0994 5.43108 16.5689 0.9 10.9997 0.9C5.43042 0.9 0.9 5.43108 0.9 10.9997ZM2.24299 10.9997C2.24299 6.1713 6.1713 2.24299 10.9997 2.24299C15.8287 2.24299 19.757 6.1713 19.7564 10.9997C19.7564 15.8287 15.8281 19.757 10.9997 19.757C6.1713 19.757 2.24299 15.8287 2.24299 10.9997Z" fill="#666666" stroke="#666666" stroke-width="0.2"/>' +
		'<path d="M13.5916 14.5418C13.7232 14.6733 13.8945 14.7385 14.0667 14.7385C14.2376 14.7385 14.4096 14.6733 14.5412 14.5418C14.8038 14.2798 14.8036 13.8546 14.5412 13.5922L11.6715 10.7225V4.51258C11.6715 4.1411 11.371 3.84141 11.0003 3.84141C10.629 3.84141 10.3285 4.14175 10.3285 4.51258V11.0002C10.3285 11.1787 10.3989 11.349 10.5252 11.4753L13.5916 14.5418Z" fill="#666666" stroke="#666666" stroke-width="0.2"/>' +
		'</svg>',
	tick: '<svg class="mgPlayerJSTest_position-center mgPlayerJSTest_width-height-100" viewBox="0 0 14 14" fill="none" >' +
		'<circle cx="7" cy="7" r="7" fill="#005BF0"/>' +
		'<path d="M6.06335 10.8651C5.98699 10.9517 5.8828 11 5.77457 11C5.66634 11 5.56215 10.9517 5.48579 10.8651L3.17951 8.26584C2.94016 7.99613 2.94016 7.55879 3.17951 7.28959L3.46829 6.96408C3.7077 6.69438 4.09536 6.69438 4.3347 6.96408L5.77457 8.58671L9.6653 4.20228C9.90471 3.93257 10.2927 3.93257 10.5317 4.20228L10.8205 4.52778C11.0598 4.79749 11.0598 5.23475 10.8205 5.50404L6.06335 10.8651Z" fill="white"/>' +
		'</svg>',
	double_tick: '<svg width="32px" height="32px" viewBox="0 0 32 32" version="1.1"  >' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="verified" fill="#26273b" fill-rule="nonzero">' +
		'<path d="M27.3136875,4.68625 C24.2916875,1.6643125 20.27375,0 16,0 C11.7261875,0 7.70825,1.6643125 4.68625,4.68625 C1.6643125,7.70825 0,11.72625 0,16 C0,20.27375 1.6643125,24.2916875 4.68625,27.3136875 C7.70825,30.3356875 11.72625,32 16,32 C20.27375,32 24.2916875,30.3356875 27.3136875,27.31375 C30.3356875,24.2916875 32,20.27375 32,16 C32,11.72625 30.3356875,7.7083125 27.3136875,4.68625 Z M23.644125,12.1920625 L14.7025625,21.1336875 C14.5195,21.31675 14.2795625,21.40825 14.0396875,21.40825 C13.79975,21.40825 13.5598125,21.31675 13.37675,21.1336875 L8.355875,16.112875 C7.98975,15.7468125 7.98975,15.15325 8.355875,14.7870625 C8.7219375,14.4209375 9.3155625,14.4209375 9.6816875,14.7870625 L14.0396875,19.145 L22.3183125,10.86625 C22.684375,10.500125 23.278,10.500125 23.644125,10.86625 C24.01025,11.232375 24.01025,11.8259375 23.644125,12.1920625 Z" class="shape" stroke="white"></path>' +
		'</g>' +
		'</g>' +
		'</svg>',
	down_arrow: '<svg width="16" height="20" viewBox="0 0 16 20" fill="none" >' +
		'<path d="M7.35176 19.0648C7.35193 19.065 7.3521 19.0651 7.35227 19.0653C7.37346 19.0865 7.39576 19.1065 7.41892 19.1256C7.42953 19.1343 7.44075 19.1418 7.45166 19.15C7.46468 19.1598 7.47744 19.1699 7.49098 19.179C7.50404 19.1877 7.51757 19.1952 7.53098 19.2032C7.54327 19.2106 7.55526 19.2183 7.56789 19.225C7.58156 19.2323 7.59561 19.2385 7.60957 19.2451C7.62272 19.2513 7.6357 19.2579 7.64919 19.2635C7.66272 19.2691 7.67656 19.2736 7.69031 19.2785C7.70479 19.2837 7.71906 19.2893 7.73384 19.2937C7.74759 19.2979 7.76155 19.301 7.77547 19.3044C7.79056 19.3083 7.80547 19.3125 7.82085 19.3155C7.83696 19.3187 7.8532 19.3206 7.8694 19.3229C7.88277 19.3248 7.89596 19.3274 7.90949 19.3287C7.96965 19.3346 8.03028 19.3346 8.09043 19.3287C8.10397 19.3274 8.11716 19.3248 8.13052 19.3229C8.14672 19.3206 8.16297 19.3187 8.17908 19.3155C8.19446 19.3125 8.20937 19.3083 8.22445 19.3044C8.23833 19.301 8.25234 19.2979 8.26609 19.2937C8.28087 19.2893 8.29518 19.2837 8.30962 19.2785C8.32337 19.2736 8.3372 19.2691 8.35074 19.2635C8.36423 19.2579 8.37721 19.2513 8.39036 19.2451C8.40432 19.2385 8.41837 19.2323 8.43204 19.225C8.44467 19.2183 8.45666 19.2105 8.46895 19.2032C8.48235 19.1952 8.49589 19.1877 8.50895 19.179C8.52249 19.1699 8.53525 19.1598 8.54827 19.15C8.55918 19.1419 8.5704 19.1343 8.58101 19.1256C8.60417 19.1065 8.62647 19.0865 8.64765 19.0653C8.64782 19.0651 8.648 19.065 8.64817 19.0648L15.0648 12.6482C15.4228 12.2902 15.4228 11.7098 15.0648 11.3518C14.7068 10.9938 14.1264 10.9938 13.7685 11.3518L8.91659 16.2036V1.91665C8.91659 1.41039 8.5062 1 7.99994 1C7.49368 1 7.08329 1.41039 7.08329 1.91665V16.2036L2.23147 11.3518C1.8735 10.9938 1.29308 10.9938 0.935105 11.3518C0.577133 11.7098 0.577133 12.2902 0.935105 12.6482L7.35176 19.0648Z" fill="#ffffff" stroke="#ffffff" stroke-width="0.7" />' +
		'</svg>',
	close_resume: '<svg width="15" height="15" viewBox="0 0 15 15" fill="none" >' +
		'<path d="M8.97536 7.53536L14.9293 13.4893L13.4893 14.9293L7.53536 8.97536L7.5 8.94L7.46464 8.97536L1.51071 14.9293L0.0707109 13.4893L6.02464 7.53536L6.06 7.5L6.02464 7.46464L0.0707107 1.51071L1.51071 0.0707107L7.46464 6.02464L7.5 6.06L7.53536 6.02464L13.4893 0.0707109L14.9293 1.51071L8.97536 7.46464L8.94 7.5L8.97536 7.53536Z" fill="white" stroke="white" stroke-width="0.1" />' +
		'</svg>',
	resume: '<svg width="30" height="30" viewBox="0 0 30 30" fill="none" >' +
		'<circle cx="15" cy="15" r="15" fill="#26273b" />' +
		'<path d="M12 8L22.3846 15.5L12 23V8Z" fill="white" />' +
		'</svg>',
	popup_close: '<svg viewBox="0 0 11 11" version="1.1" >' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" opacity="0.800000012">' +
		'<g class="Desktop" transform="translate(-598.000000, -109.000000)" fill="#333333">' +
		'<g class="Group-3" transform="translate(546.000000, 108.000000)">' +
		'<path d="M58.3537478,6.51267909 L62.8600942,1.9175241 C63.0539691,1.70602684 63.0453206,1.37891815 62.8405407,1.1779615 C62.6357608,0.97700485 62.3085543,0.974528998 62.1007571,1.17236383 L57.6015073,5.76042205 L52.9177457,1.16526706 C52.7836541,1.02441675 52.5834203,0.967912822 52.3954816,1.01788948 C52.2075429,1.06786613 52.0618215,1.21636649 52.0154005,1.40521871 C51.9689795,1.59407093 52.0292498,1.79320748 52.1726018,1.92462086 L56.8492668,6.51267909 L52.1726018,11.1007373 C51.9747713,11.3085392 51.9772471,11.6357528 52.1781993,11.8405372 C52.3791516,12.0453216 52.7062531,12.0539703 52.9177457,11.8600911 L57.6015073,7.26493612 L62.1007571,11.8529943 C62.3085543,12.0508292 62.6357608,12.0483533 62.8405407,11.8473967 C63.0453206,11.64644 63.0539691,11.3193313 62.8600942,11.1078341 L58.3537478,6.51267909 Z" class="shape"></path>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	micro_drag: '<svg viewBox="0 0 23 23" fill="none" >' +
		'<path d="M8.67297 4.91634L10.6347 2.95457V8.34838C10.6347 8.57787 10.7259 8.79796 10.8882 8.96023C11.0504 9.1225 11.2705 9.21367 11.5 9.21367C11.7295 9.21367 11.9496 9.1225 12.1119 8.96023C12.2741 8.79796 12.3653 8.57787 12.3653 8.34838V2.95388L14.3278 4.91634C14.49 5.07863 14.7102 5.16981 14.9397 5.16981C15.1692 5.16981 15.3893 5.07863 15.5516 4.91634C15.7139 4.75404 15.8051 4.53393 15.8051 4.30441C15.8051 4.07489 15.7139 3.85478 15.5516 3.69249L12.1119 0.253516C12.0316 0.173143 11.9362 0.109386 11.8312 0.0658876C11.7262 0.0223889 11.6137 0 11.5 0C11.3864 0 11.2738 0.0223889 11.1688 0.0658876C11.0638 0.109386 10.9684 0.173143 10.8881 0.253516L7.44912 3.69249C7.29146 3.85564 7.20418 4.07418 7.20609 4.30106C7.20799 4.52793 7.29893 4.74498 7.45932 4.90545C7.6197 5.06593 7.8367 5.15699 8.06357 5.15903C8.29045 5.16106 8.50904 5.07391 8.67228 4.91634H8.67297Z" fill="white" />' +
		'<path d="M14.3277 18.0832L12.3653 20.0456V14.6511C12.3653 14.4216 12.2741 14.2015 12.1118 14.0393C11.9496 13.877 11.7295 13.7858 11.5 13.7858C11.2705 13.7858 11.0504 13.877 10.8882 14.0393C10.7259 14.2015 10.6347 14.4216 10.6347 14.6511V20.0449L8.67295 18.0825C8.50918 17.9281 8.2917 17.8436 8.06665 17.8469C7.8416 17.8502 7.6267 17.9411 7.46755 18.1002C7.3084 18.2594 7.21752 18.4743 7.21421 18.6993C7.21089 18.9244 7.2954 19.1419 7.44979 19.3056L10.8888 22.7453C10.9691 22.8257 11.0645 22.8894 11.1695 22.9329C11.2745 22.9764 11.387 22.9988 11.5007 22.9988C11.6143 22.9988 11.7269 22.9764 11.8319 22.9329C11.9369 22.8894 12.0323 22.8257 12.1126 22.7453L15.5523 19.3056C15.7098 19.1424 15.797 18.9238 15.795 18.6969C15.7929 18.47 15.7019 18.253 15.5414 18.0927C15.3809 17.9323 15.1639 17.8413 14.937 17.8394C14.7101 17.8375 14.4916 17.9248 14.3284 18.0825L14.3277 18.0832Z" fill="white" />' +
		'<path d="M2.95457 12.3647H8.34838C8.57787 12.3647 8.79796 12.2735 8.96023 12.1112C9.1225 11.949 9.21367 11.7289 9.21367 11.4994C9.21367 11.2699 9.1225 11.0498 8.96023 10.8875C8.79796 10.7253 8.57787 10.6341 8.34838 10.6341H2.95457L4.91634 8.67234C5.07391 8.50911 5.16106 8.29051 5.15903 8.06363C5.15699 7.83676 5.06593 7.61976 4.90545 7.45938C4.74498 7.29899 4.52793 7.20805 4.30106 7.20615C4.07418 7.20424 3.85564 7.29152 3.69249 7.44918L0.253515 10.8882C0.173142 10.9685 0.109385 11.0639 0.0658863 11.1689C0.0223876 11.2739 0 11.3864 0 11.5001C0 11.6137 0.0223876 11.7263 0.0658863 11.8313C0.109385 11.9363 0.173142 12.0317 0.253515 12.112L3.69249 15.5517C3.77285 15.632 3.86825 15.6958 3.97324 15.7393C4.07823 15.7828 4.19077 15.8051 4.30441 15.8051C4.41806 15.8051 4.53059 15.7828 4.63558 15.7393C4.74058 15.6958 4.83598 15.632 4.91634 15.5517C4.9967 15.4713 5.06044 15.3759 5.10393 15.2709C5.14742 15.1659 5.16981 15.0534 5.16981 14.9397C5.16981 14.8261 5.14742 14.7136 5.10393 14.6086C5.06044 14.5036 4.9967 14.4082 4.91634 14.3278L2.95457 12.3647Z" fill="white" />' +
		'<path d="M22.9999 11.4994C22.9999 11.3858 22.9775 11.2732 22.9341 11.1682C22.8906 11.0632 22.8269 10.9678 22.7465 10.8875L19.3069 7.44851C19.1431 7.29412 18.9256 7.20961 18.7006 7.21292C18.4755 7.21624 18.2606 7.30711 18.1015 7.46627C17.9423 7.62542 17.8514 7.84032 17.8481 8.06537C17.8448 8.29042 17.9293 8.5079 18.0837 8.67167L20.0462 10.6334H14.6517C14.4222 10.6334 14.2021 10.7246 14.0398 10.8869C13.8775 11.0491 13.7864 11.2692 13.7864 11.4987C13.7864 11.7282 13.8775 11.9483 14.0398 12.1106C14.2021 12.2728 14.4222 12.364 14.6517 12.364H20.0455L18.083 14.3265C18.0003 14.4062 17.9344 14.5017 17.889 14.6073C17.8436 14.7128 17.8197 14.8264 17.8187 14.9412C17.8177 15.0561 17.8395 15.1701 17.883 15.2764C17.9265 15.3828 17.9907 15.4794 18.0719 15.5607C18.1532 15.6419 18.2498 15.7062 18.3561 15.7498C18.4624 15.7933 18.5763 15.8152 18.6912 15.8143C18.8061 15.8133 18.9197 15.7895 19.0253 15.7441C19.1308 15.6988 19.2263 15.6329 19.3062 15.5503L22.7458 12.1106C22.9082 11.9486 22.9996 11.7288 22.9999 11.4994Z" fill="white" />' +
		'</svg>',
	mplayer_close: '<svg class="mgPlayerJSTest_position-center mgPlayerJSTest_width-height-100" viewBox="0 0 22 22" fill="none" >' +
		'<path d="M3.32401 3.32414C7.55657 -0.908416 14.4435 -0.908 18.6756 3.32414C22.9077 7.55627 22.9077 14.4432 18.6756 18.6757C14.443 22.9083 7.55615 22.9083 3.32402 18.6757C-0.908127 14.4432 -0.908535 7.55669 3.32401 3.32414ZM14.0365 15.4458C14.4257 15.835 15.0565 15.835 15.4457 15.4458C15.8348 15.0567 15.8348 14.4258 15.4457 14.0367L12.409 10.9999L15.2958 8.11304C15.685 7.72388 15.685 7.09305 15.2958 6.70389C14.9067 6.31474 14.2759 6.31474 13.8867 6.70389L10.9998 9.59079L7.96308 6.55405C7.57392 6.1649 6.94309 6.1649 6.55393 6.55405C6.16472 6.94284 6.16484 7.57411 6.55393 7.9632L9.59066 10.9999L6.40452 14.1861C6.01536 14.5752 6.01536 15.2061 6.40452 15.5952C6.79367 15.9844 7.42451 15.9844 7.81366 15.5952L10.9998 12.4091L14.0365 15.4458Z" fill="white" stroke="#7BA827" stroke-width="0.3" />' +
		'</svg>',
	close: '<svg width="12" height="12" viewBox="0 0 12 12" fill="none">' +
		'<circle cx="6" cy="6" r="6" fill="#8E8FA6"/>' +
		'<path d="M6.66083 6.00078L8.90415 3.75737C8.96585 3.69561 8.9999 3.61322 9 3.52537C9 3.43746 8.96595 3.35498 8.90415 3.29332L8.70756 3.09678C8.64576 3.03488 8.56337 3.00098 8.47541 3.00098C8.38761 3.00098 8.30522 3.03488 8.24341 3.09678L6.0001 5.34005L3.75668 3.09678C3.69498 3.03488 3.61254 3.00098 3.52463 3.00098C3.43683 3.00098 3.35439 3.03488 3.29268 3.09678L3.096 3.29332C2.968 3.42132 2.968 3.62951 3.096 3.75737L5.33937 6.00078L3.096 8.2441C3.03424 8.30595 3.00024 8.38834 3.00024 8.4762C3.00024 8.56405 3.03424 8.64644 3.096 8.70825L3.29263 8.90478C3.35434 8.96664 3.43683 9.00059 3.52459 9.00059C3.61249 9.00059 3.69493 8.96664 3.75663 8.90478L6.00005 6.66146L8.24337 8.90478C8.30517 8.96664 8.38756 9.00059 8.47537 9.00059H8.47546C8.56332 9.00059 8.64571 8.96664 8.70751 8.90478L8.9041 8.70825C8.9658 8.64649 8.99985 8.56405 8.99985 8.4762C8.99985 8.38834 8.9658 8.30595 8.9041 8.24415L6.66083 6.00078Z" fill="white"/>' +
		'</svg>',
	slideshow_drag: '<svg width="16" height="16" viewBox="0 0 16 16">' +
		'<g fill="#FFFFFE" fill-rule="evenodd">' +
		'<path d="M10.8 11.825l-2.071 2.06V1.638l2.07 2.06c.191.194.5.194.691 0a.486.486 0 0 0 0-.688L8.61.14a.47.47 0 0 0-.37-.136.47.47 0 0 0-.37.136L4.992 3.01c-.19.194-.19.5 0 .689.19.193.5.193.69 0l2.072-2.061v12.247l-2.071-2.06a.482.482 0 0 0-.69 0 .486.486 0 0 0 0 .688l2.879 2.87a.47.47 0 0 0 .37.136.47.47 0 0 0 .37-.136l2.88-2.87c.19-.194.19-.5 0-.688a.482.482 0 0 0-.691 0"/>' +
		'<path d="M4.178 10.32l-2.06-2.07h12.246l-2.06 2.07a.482.482 0 0 0 0 .691c.189.19.494.19.688 0l2.87-2.88a.47.47 0 0 0 .136-.37.47.47 0 0 0-.135-.37l-2.87-2.879a.486.486 0 0 0-.69 0 .482.482 0 0 0 0 .69l2.061 2.071H2.117l2.06-2.07a.482.482 0 0 0 0-.69.486.486 0 0 0-.688 0L.62 7.391a.47.47 0 0 0-.136.369.47.47 0 0 0 .136.37l2.87 2.88c.194.19.5.19.689 0a.482.482 0 0 0 0-.69"/>' +
		'</g>' +
		'</svg>',
	task_list: '<svg width="58" height="58" viewBox="0 0 58 58" fill="none" >' +
		'<g filter="url(#filter0_d_task_list)">' +
		'<circle cx="29" cy="25" r="25" fill="#005BF0"/>' +
		'</g>' +
		'<path d="M20.0067 37.2828V17.3888H22.8733V18.5421C22.8733 19.1187 23.3033 19.5512 23.8767 19.5512H33.6233C34.1967 19.5512 34.6267 19.1187 34.6267 18.5421V17.3888H37.4934V25.6058V39.1747H39C39.2761 39.1747 39.5 38.9509 39.5 38.6747V26.3267V16.5238C39.5 15.9472 39.07 15.5147 38.4966 15.5147H34.6267V14.3614C34.6267 13.7848 34.1967 13.3523 33.6233 13.3523H32.4767C32.1899 11.1899 30.3266 9.74833 28.1766 10.0366C26.4566 10.1808 25.1667 11.6224 24.88 13.3523H23.8767C23.3033 13.3523 22.8733 13.7848 22.8733 14.3614V15.5147H19.0033C18.43 15.5147 18 15.9472 18 16.5238V38.292C18 38.8686 18.43 39.301 19.0033 39.301H38.8424C39.1186 39.301 39.3424 39.0772 39.3424 38.801V37.2828H26.7433H20.0067ZM28.75 11.9107C29.61 11.9107 30.3266 12.4874 30.6133 13.3523H26.8867C27.03 12.4874 27.89 11.9107 28.75 11.9107ZM24.7367 15.3706H32.6199V17.5329H24.7367V15.3706Z" fill="white"/>' +
		'<path d="M22.5796 23.1057H34.7917V24.2226H22.5796V23.1057Z" fill="white" stroke="white" stroke-width="0.5"/>' +
		'<path d="M22.5796 27.6852H34.7917V28.8022H22.5796V27.6852Z" fill="white" stroke="white" stroke-width="0.5"/>' +
		'<path d="M22.5796 32.2648H34.7917V33.3817H22.5796V32.2648Z" fill="white" stroke="white" stroke-width="0.5"/>' +
		'<defs>' +
		'<filter id="filter0_d_task_list" x="0" y="0" width="58" height="58" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">' +
		'<feFlood flood-opacity="0" result="BackgroundImageFix"/>' +
		'<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/>' +
		'<feOffset dy="4"/>' +
		'<feGaussianBlur stdDeviation="2"/>' +
		'<feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>' +
		'<feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow"/>' +
		'<feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow" result="shape"/>' +
		'</filter>' +
		'</defs>' +
		'</svg>',
	close_popup: '<svg width="12" height="12" viewBox="0 0 12 13" fill="none" >' +
		'<path d="M6.90481 6.67981L11.5191 1.96076C11.8058 1.66783 11.8058 1.19252 11.5191 0.89958C11.2324 0.60639 10.7682 0.60639 10.4815 0.89958L5.86718 5.61863L1.25264 0.89958C0.965959 0.60639 0.501692 0.60639 0.215011 0.89958C-0.0716703 1.19252 -0.0716703 1.66783 0.215011 1.96076L4.82955 6.67981L0.215011 11.3989C-0.0716703 11.6918 -0.0716703 12.1671 0.215011 12.46C0.358352 12.6064 0.546211 12.6797 0.733826 12.6797C0.92144 12.6797 1.1093 12.6064 1.25264 12.4598L5.86718 7.74075L10.4815 12.4598C10.6248 12.6064 10.8127 12.6797 11.0003 12.6797C11.1879 12.6797 11.3758 12.6064 11.5191 12.4598C11.8058 12.1669 11.8058 11.6915 11.5191 11.3986L6.90481 6.67981Z" fill="#666666" fill-opacity="0.9" />' +
		'</svg>',
	external_link: '<svg class="mgPlayerJSTest_position-center mgPlayerJSTest_width-height-100" viewBox="0 0 17 18" fill="none" >' +
		'<g clip-path="url(#clip)">' +
		'<path d="M13.0266 5.10103C13.1992 5.13132 13.3496 5.22781 13.4505 5.37282C13.5517 5.51647 13.5909 5.69066 13.5604 5.86336L13.4619 5.84599C13.4877 5.69966 13.4547 5.55242 13.3687 5.4304L13.3684 5.42995C13.2825 5.30656 13.1554 5.22515 13.0094 5.19952L13.0093 5.19951L6.98281 4.13688C6.98279 4.13688 6.98278 4.13687 6.98277 4.13687C6.8371 4.11126 6.69018 4.14394 6.56783 4.22962C6.44567 4.31515 6.36472 4.44211 6.33891 4.58775C6.33891 4.58776 6.33891 4.58777 6.3389 4.58778L6.24258 5.13487L6.24255 5.13501C6.21672 5.28049 6.24947 5.4274 6.33513 5.54973C6.4199 5.6708 6.54116 5.74565 6.68823 5.77146L10.2384 6.39115L10.4768 6.43276L10.2786 6.57157L3.68558 11.1881C3.43578 11.363 3.37455 11.7299 3.55106 11.982L3.86985 12.4372C4.0391 12.679 4.38546 12.7337 4.63939 12.568L4.63756 12.5646L11.2152 7.9589L11.4127 7.82064L11.3711 8.05807L10.7544 11.5783L10.7543 11.5784C10.7287 11.7237 10.7626 11.8729 10.8485 11.9955C10.9343 12.118 11.0621 12.2002 11.2079 12.226L11.755 12.3226C11.755 12.3226 11.755 12.3226 11.755 12.3226C11.9009 12.3483 12.048 12.3158 12.17 12.2304C12.2923 12.1447 12.3734 12.0178 12.3991 11.8722L12.3991 11.8722L13.4619 5.84599L13.0266 5.10103ZM13.0266 5.10103L7.00013 4.03839L13.0266 5.10103Z" fill="#666666" stroke="white" stroke-width="0.2" />' +
		'</g>' +
		'<defs>' +
		'<clipPath class="clip">' +
		'<rect width="12" height="12" fill="white" transform="translate(16.8906 10.2871) rotate(145)" />' +
		'</clipPath>' +
		'</defs>' +
		'</svg>',
	testme_result_passed: '<svg width="33px" height="37px" viewBox="0 0 33 37" version="1.1" >' +
		'<defs></defs>' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="Test-Result-for-TestMe-01" transform="translate(-654.000000, -232.000000)" fill-rule="nonzero" fill="#59A847">' +
		'<g class="Group-35" transform="translate(407.000000, 180.000000)">' +
		'<g class="Group-34" transform="translate(14.000000, 41.000000)">' +
		'<g class="like-(2)" transform="translate(229.000000, 9.000000)">' +
		'<path d="M36.1574,25.1045131 C36.681,24.5365796 37,23.7869359 37,22.9667458 C37,21.1988124 35.5194,19.760095 33.7,19.760095 L27.2950667,19.760095 C27.9294,17.8895487 28.2,15.407601 28.2,14.3437055 L28.2,13.2755344 C28.2,10.9182898 26.2258667,9 23.8,9 L22.7,9 C22.1954667,9 21.7554667,9.33349169 21.633,9.80950119 L21.0338667,12.1389549 C20.1942,15.4011876 17.5285333,19.0004751 14.7697333,19.6546318 C14.2864667,18.4660333 13.0933333,17.6223278 11.7,17.6223278 L5.1,17.6223278 C4.4928,17.6223278 4,18.1011876 4,18.6912114 L4,37.9311164 C4,38.5211401 4.4928,39 5.1,39 L11.7,39 C13.0119333,39 14.1471333,38.2524941 14.6788,37.172209 L18.4584,38.3964371 C19.6940667,38.7969121 20.9818,39 22.2849333,39 L31.5,39 C33.3194,39 34.8,37.5612827 34.8,35.7933492 C34.8,35.3764846 34.7178667,34.9774347 34.5682667,34.6118765 C35.9674667,34.2406176 37,32.9942993 37,31.5178147 C37,30.6976247 36.681,29.947981 36.1574,29.3800475 C36.681,28.812114 37,28.0624703 37,27.2422803 C37,26.4220903 36.681,25.6724466 36.1574,25.1045131 Z M12.8,35.7933492 C12.8,36.3826603 12.3064667,36.8622328 11.7,36.8622328 L6.2,36.8622328 L6.2,19.760095 L11.7,19.760095 C12.3064667,19.760095 12.8,20.2396675 12.8,20.8289786 L12.8,35.7933492 Z M31.5,26.1733967 L33.7,26.1733967 C34.3064667,26.1733967 34.8,26.6529691 34.8,27.2422803 C34.8,27.8315914 34.3064667,28.3111639 33.7,28.3111639 L31.5,28.3111639 C30.8928,28.3111639 30.4,28.7900238 30.4,29.3800475 C30.4,29.9700713 30.8928,30.4489311 31.5,30.4489311 L33.7,30.4489311 C34.3064667,30.4489311 34.8,30.9285036 34.8,31.5178147 C34.8,32.1071259 34.3064667,32.5866983 33.7,32.5866983 L31.5,32.5866983 C30.8928,32.5866983 30.4,33.0655582 30.4,33.6555819 C30.4,34.2456057 30.8928,34.7244656 31.5,34.7244656 C32.1064667,34.7244656 32.6,35.204038 32.6,35.7933492 C32.6,36.3826603 32.1064667,36.8622328 31.5,36.8622328 L22.2849333,36.8622328 C21.2186667,36.8622328 20.1648667,36.6961995 19.1536,36.3684086 L15,35.0230404 L15,21.7966746 C16.7255333,21.4781473 18.4144,20.4163895 19.939,18.6783848 C21.4276667,16.9809976 22.6347333,14.7306413 23.1678667,12.6577197 L23.5587333,11.1377672 L23.8,11.1377672 C25.0129333,11.1377672 26,12.0969121 26,13.2755344 L26,14.3437055 C26,15.7788599 25.538,18.5315914 24.9469333,19.760095 L22.7,19.760095 C22.0928,19.760095 21.6,20.2389549 21.6,20.8289786 C21.6,21.4190024 22.0928,21.8978622 22.7,21.8978622 L33.7,21.8978622 C34.3064667,21.8978622 34.8,22.3774347 34.8,22.9667458 C34.8,23.556057 34.3064667,24.0356295 33.7,24.0356295 L31.5,24.0356295 C30.8928,24.0356295 30.4,24.5144893 30.4,25.1045131 C30.4,25.6945368 30.8928,26.1733967 31.5,26.1733967 Z" class="shape"></path>' +
		'<circle class="Oval" cx="9" cy="33" r="1"></circle>' +
		'<path d="M24,2 C23.4477333,2 23,2.44039344 23,2.98360656 L23,5.01639344 C23,5.55960656 23.4477333,6 24,6 C24.5522667,6 25,5.55960656 25,5.01639344 L25,2.98360656 C25,2.44039344 24.5522667,2 24,2 Z" class="shape"></path>' +
		'<path d="M19.7426337,6.50001098 L18.5,5.25736818 C18.1569035,4.91421061 17.6005214,4.91421061 17.2573663,5.25736818 C16.9142112,5.60052575 16.9142112,6.15685341 17.2573663,6.50001098 L18.5,7.74265379 C18.8430965,8.08575278 19.3995372,8.08581136 19.7426337,7.74265379 C20.0857888,7.39949622 20.0857888,6.84316855 19.7426337,6.50001098 Z" class="shape"></path>' +
		'<path d="M31.7426337,5.25736881 C31.3995372,4.9142104 30.8431551,4.9142104 30.5,5.25736881 L29.2573663,6.49995606 C28.9142112,6.84311447 28.9142112,7.39944349 29.2573663,7.7426019 C29.6004628,8.08576031 30.1568449,8.08581889 30.5,7.74266048 L31.7426337,6.50001464 C32.0857888,6.15685624 32.0857888,5.60052721 31.7426337,5.25736881 Z" class="shape"></path>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	testme_result_failed: '<svg width="33px" height="30px" viewBox="0 0 33 30" version="1.1" >' +
		'<defs></defs>' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="Test-Result-for-TestMe-02" transform="translate(-654.000000, -239.000000)" fill-rule="nonzero" fill="#F04A5F">' +
		'<g class="Group-35" transform="translate(407.000000, 180.000000)">' +
		'<g class="Group-34" transform="translate(14.000000, 41.000000)">' +
		'<g class="like-(2)" transform="translate(249.000000, 31.000000) scale(1, -1) translate(-249.000000, -31.000000) translate(230.000000, 11.000000)">' +
		'<path d="M35.1574,19.1045131 C35.681,18.5365796 36,17.7869359 36,16.9667458 C36,15.1988124 34.5194,13.760095 32.7,13.760095 L26.2950667,13.760095 C26.9294,11.8895487 27.2,9.40760095 27.2,8.34370546 L27.2,7.27553444 C27.2,4.91828979 25.2258667,3 22.8,3 L21.7,3 C21.1954667,3 20.7554667,3.33349169 20.633,3.80950119 L20.0338667,6.13895487 C19.1942,9.40118765 16.5285333,13.0004751 13.7697333,13.6546318 C13.2864667,12.4660333 12.0933333,11.6223278 10.7,11.6223278 L4.1,11.6223278 C3.4928,11.6223278 3,12.1011876 3,12.6912114 L3,31.9311164 C3,32.5211401 3.4928,33 4.1,33 L10.7,33 C12.0119333,33 13.1471333,32.2524941 13.6788,31.172209 L17.4584,32.3964371 C18.6940667,32.7969121 19.9818,33 21.2849333,33 L30.5,33 C32.3194,33 33.8,31.5612827 33.8,29.7933492 C33.8,29.3764846 33.7178667,28.9774347 33.5682667,28.6118765 C34.9674667,28.2406176 36,26.9942993 36,25.5178147 C36,24.6976247 35.681,23.947981 35.1574,23.3800475 C35.681,22.812114 36,22.0624703 36,21.2422803 C36,20.4220903 35.681,19.6724466 35.1574,19.1045131 Z M11.8,29.7933492 C11.8,30.3826603 11.3064667,30.8622328 10.7,30.8622328 L5.2,30.8622328 L5.2,13.760095 L10.7,13.760095 C11.3064667,13.760095 11.8,14.2396675 11.8,14.8289786 L11.8,29.7933492 Z M30.5,20.1733967 L32.7,20.1733967 C33.3064667,20.1733967 33.8,20.6529691 33.8,21.2422803 C33.8,21.8315914 33.3064667,22.3111639 32.7,22.3111639 L30.5,22.3111639 C29.8928,22.3111639 29.4,22.7900238 29.4,23.3800475 C29.4,23.9700713 29.8928,24.4489311 30.5,24.4489311 L32.7,24.4489311 C33.3064667,24.4489311 33.8,24.9285036 33.8,25.5178147 C33.8,26.1071259 33.3064667,26.5866983 32.7,26.5866983 L30.5,26.5866983 C29.8928,26.5866983 29.4,27.0655582 29.4,27.6555819 C29.4,28.2456057 29.8928,28.7244656 30.5,28.7244656 C31.1064667,28.7244656 31.6,29.204038 31.6,29.7933492 C31.6,30.3826603 31.1064667,30.8622328 30.5,30.8622328 L21.2849333,30.8622328 C20.2186667,30.8622328 19.1648667,30.6961995 18.1536,30.3684086 L14,29.0230404 L14,15.7966746 C15.7255333,15.4781473 17.4144,14.4163895 18.939,12.6783848 C20.4276667,10.9809976 21.6347333,8.73064133 22.1678667,6.65771971 L22.5587333,5.13776722 L22.8,5.13776722 C24.0129333,5.13776722 25,6.09691211 25,7.27553444 L25,8.34370546 C25,9.77885986 24.538,12.5315914 23.9469333,13.760095 L21.7,13.760095 C21.0928,13.760095 20.6,14.2389549 20.6,14.8289786 C20.6,15.4190024 21.0928,15.8978622 21.7,15.8978622 L32.7,15.8978622 C33.3064667,15.8978622 33.8,16.3774347 33.8,16.9667458 C33.8,17.556057 33.3064667,18.0356295 32.7,18.0356295 L30.5,18.0356295 C29.8928,18.0356295 29.4,18.5144893 29.4,19.1045131 C29.4,19.6945368 29.8928,20.1733967 30.5,20.1733967 Z" class="shape"></path>' +
		'<circle class="Oval" cx="8" cy="27" r="1"></circle>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	popup_drag: '<svg width="17" height="17" viewBox="0 0 17 17" fill="none">' +
		'<path d="M13.9443 7.55643H9.4991C9.18045 7.55643 8.93013 7.81896 8.93013 8.13378C8.93013 8.45074 9.18256 8.70806 9.4991 8.70806H13.9435L13.0248 9.64754C12.8048 9.87252 12.8048 10.2329 13.0248 10.4579C13.1353 10.5709 13.2802 10.6285 13.4288 10.6285C13.5774 10.6285 13.7224 10.5709 13.8328 10.4579L15.7107 8.53744C15.9307 8.31246 15.9307 7.95203 15.7107 7.72705L13.8328 5.80656C13.6104 5.57906 13.2503 5.57906 13.0278 5.80656C12.8079 6.03152 12.8078 6.39192 13.0278 6.6169L13.0277 6.61678L13.1708 6.47716L13.0278 6.61695L13.9443 7.55643Z" fill="#757575" stroke="#757575" stroke-width="0.4"/>' +
		'<path d="M2.84286 10.4579C2.9533 10.5709 3.09821 10.6285 3.24684 10.6285C3.39547 10.6285 3.54038 10.5709 3.65082 10.4579C3.87081 10.2329 3.87081 9.87252 3.65082 9.64754L2.73219 8.70806H7.17656C7.49416 8.70806 7.74553 8.4466 7.74553 8.13378C7.74553 7.8231 7.49625 7.55643 7.17656 7.55643H2.7314L3.64782 6.61695L3.50482 6.47712L3.64799 6.61678L3.64787 6.6169C3.86781 6.39192 3.8678 6.03152 3.64782 5.80656C3.42538 5.57906 3.0653 5.57906 2.84286 5.80656L0.964993 7.72705C0.745002 7.95203 0.745002 8.31246 0.964993 8.53744L2.84286 10.4579Z" fill="#757575" stroke="#757575" stroke-width="0.4"/>' +
		'<path d="M6.06066 3.32867C6.27841 3.55932 6.64328 3.55681 6.86178 3.32955L7.76905 2.40168V6.94241C7.76905 7.25723 8.01938 7.51976 8.33803 7.51976C8.65668 7.51976 8.907 7.25723 8.907 6.94241V2.40168L9.81493 3.33021C9.92537 3.44316 10.0703 3.50083 10.2189 3.50083C10.3675 3.50083 10.5124 3.44316 10.6229 3.33021C10.8429 3.10523 10.8429 2.7448 10.6229 2.51981L8.74501 0.599317C8.52857 0.377962 8.15649 0.377962 7.94004 0.599317L6.06216 2.51981C5.84267 2.74429 5.84217 3.10358 6.06066 3.32867Z" fill="#757575" stroke="#757575" stroke-width="0.4"/>' +
		'<path d="M7.76917 13.86L6.86126 12.9314C6.63882 12.7039 6.27874 12.7039 6.0563 12.9314C5.83631 13.1564 5.83631 13.5168 6.0563 13.7418L7.93417 15.6623C8.04012 15.7707 8.18439 15.8329 8.33815 15.8329C8.48804 15.8329 8.63556 15.7713 8.74213 15.6623L10.62 13.7418C10.84 13.5168 10.84 13.1564 10.62 12.9314C10.3976 12.7039 10.0375 12.7039 9.81503 12.9314L8.90712 13.86V9.31924H8.90714L8.9071 9.31637C8.90264 9.00646 8.65933 8.74189 8.33815 8.74189C8.0195 8.74189 7.76917 9.00443 7.76917 9.31924V13.86Z" fill="#757575" stroke="#757575" stroke-width="0.4"/>' +
		'</svg>',
	close_slideshow: '<svg width="12" height="12" viewBox="0 0 12 12">' +
		'<path fill="#FFF" fill-rule="nonzero" d="M6.69 5.98L11.814.858a.503.503 0 0 0-.711-.71L5.98 5.268.858.147a.502.502 0 1 0-.71.71L5.268 5.98.148 11.1a.503.503 0 0 0 .71.712L5.98 6.69l5.122 5.122a.503.503 0 1 0 .71-.712L6.692 5.98z"/>' +
		'</svg>',
	slideshow_next_button: '<svg width="17" height="16" viewBox="0 0 17 16">' +
		'<path fill="#FFFFFE" fill-rule="evenodd" d="M15.35 8.993H4.306l4.3 4.298a1.045 1.045 0 1 1-1.476 1.481L1.228 8.868a1.028 1.028 0 0 1-.27-.919c-.057-.323.02-.667.27-.918L7.13 1.127a1.045 1.045 0 0 1 1.476 0 1.052 1.052 0 0 1 0 1.481l-4.3 4.298H15.35c.575 0 1.043.47 1.043 1.043 0 .574-.468 1.044-1.043 1.044z"/>' +
		'</svg>',
	slideshow_prev_button: '<svg width="17" height="16" viewBox="0 0 17 16">' +
		'<path fill="#FFFFFE" fill-rule="evenodd" d="M15.35 8.993H4.306l4.3 4.298a1.045 1.045 0 1 1-1.476 1.481L1.228 8.868a1.028 1.028 0 0 1-.27-.919c-.057-.323.02-.667.27-.918L7.13 1.127a1.045 1.045 0 0 1 1.476 0 1.052 1.052 0 0 1 0 1.481l-4.3 4.298H15.35c.575 0 1.043.47 1.043 1.043 0 .574-.468 1.044-1.043 1.044z"/>' +
		'</svg>',
	notification_guide_play: '<svg width="74px" height="75px" viewBox="0 0 74 75" version="1.1" >' +
		'<defs>' +
		'<filter x="-21.6%" y="-14.7%" width="143.1%" height="143.1%" filterUnits="objectBoundingBox" class="filter-np1">' +
		'<feOffset dx="0" dy="2" in="SourceAlpha" result="shadowOffsetOuter1"></feOffset>' +
		'<feGaussianBlur stdDeviation="1.5" in="shadowOffsetOuter1" result="shadowBlurOuter1"></feGaussianBlur>' +
		'<feColorMatrix values="0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.210484601 0" type="matrix" in="shadowBlurOuter1" result="shadowMatrixOuter1"></feColorMatrix>' +
		'<feMerge>' +
		'<feMergeNode in="shadowMatrixOuter1"></feMergeNode>' +
		'<feMergeNode in="SourceGraphic"></feMergeNode>' +
		'</feMerge>' +
		'</filter>' +
		'<path d="M29,0 C12.992,0 0,12.992 0,29 C0,45.008 12.992,58 29,58 C45.008,58 58,45.008 58,29 C58,12.992 45.008,0 29,0 L29,0 Z" class="path-np2"></path>' +
		'<filter x="-16.4%" y="-12.9%" width="132.8%" height="132.8%" filterUnits="objectBoundingBox" class="filter-np3">' +
		'<feMorphology radius="2.5" operator="dilate" in="SourceAlpha" result="shadowSpreadOuter1"></feMorphology>' +
		'<feOffset dx="0" dy="2" in="shadowSpreadOuter1" result="shadowOffsetOuter1"></feOffset>' +
		'<feMorphology radius="2.5" operator="erode" in="SourceAlpha" result="shadowInner"></feMorphology>' +
		'<feOffset dx="0" dy="2" in="shadowInner" result="shadowInner"></feOffset>' +
		'<feComposite in="shadowOffsetOuter1" in2="shadowInner" operator="out" result="shadowOffsetOuter1"></feComposite>' +
		'<feGaussianBlur stdDeviation="2" in="shadowOffsetOuter1" result="shadowBlurOuter1"></feGaussianBlur>' +
		'<feColorMatrix values="0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.211447011 0" type="matrix" in="shadowBlurOuter1"></feColorMatrix>' +
		'</filter>' +
		'<path d="M29,6 C41.696,6 52,16.304 52,29 C52,41.696 41.696,52 29,52 C16.304,52 6,41.696 6,29 C6,16.304 16.304,6 29,6 Z M37.394022,29.7044835 C38.2809792,29.0392656 38.2864907,27.964868 37.394022,27.2955165 L26.605978,19.2044835 C25.7190208,18.5392656 25,18.9023438 25,19.9945615 L25,37.0054385 C25,38.1070044 25.7135093,38.464868 26.605978,37.7955165 L37.394022,29.7044835 Z" class="path-np4"></path>' +
		'<filter x="-15.2%" y="-10.9%" width="130.4%" height="130.4%" filterUnits="objectBoundingBox" class="filter-np5">' +
		'<feOffset dx="0" dy="2" in="SourceAlpha" result="shadowOffsetOuter1"></feOffset>' +
		'<feGaussianBlur stdDeviation="2" in="shadowOffsetOuter1" result="shadowBlurOuter1"></feGaussianBlur>' +
		'<feColorMatrix values="0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.211447011 0" type="matrix" in="shadowBlurOuter1"></feColorMatrix>' +
		'</filter>' +
		'</defs>' +
		'<g class="Page-np1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" opacity="0.854520089">' +
		'<g class="03-slideshow-mode-copy-2" transform="translate(-1161.000000, -436.000000)">' +
		'<g class="Group-np-21" filter="url(#filter-np1)" transform="translate(1169.000000, 441.000000)">' +
		'<g class="Shape-Copy-np-3">' +
		'<use fill="black" fill-opacity="1" filter="url(#filter-np3)" xlink:href="#path-np2"></use>' +
		'<use stroke="#ffffff" stroke-width="5" xlink:href="#path-np2"></use>' +
		'</g>' +
		'<g class="combined-shape">' +
		'<use fill="black" fill-opacity="1" filter="url(#filter-np5)" xlink:href="#path-np4"></use>' +
		'<use fill="#ffffff" class="shape-combined-np" fill-rule="evenodd" xlink:href="#path-np4"></use>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	push_not_single_play: '<svg width="9" height="13" viewBox="0 0 9 13" fill="none">' +
		'<path opacity="0.3" d="M0 0L9 6.5L0 13V0Z" fill="black" />' +
		'</svg>',
	bellIcon: '<svg width="201" height="116" viewBox="0 0 201 116" fill="none">' +
		'<path d="M118.375 75.4041C117.34 75.4041 116.5 74.5643 116.5 73.5292C116.5 68.2699 114.453 63.3274 110.734 59.6071C110.001 58.8741 110.001 57.6893 110.734 56.956C111.467 56.223 112.652 56.223 113.385 56.956C117.813 61.3828 120.25 67.2687 120.25 73.5292C120.25 74.5643 119.41 75.4041 118.375 75.4041Z" fill="#005BF0"/>' +
		'<path d="M80.8749 75.4041C79.8401 75.4041 79 74.5643 79 73.5292C79 67.2687 81.4376 61.3828 85.8644 56.956C86.5974 56.223 87.7825 56.223 88.5155 56.956C89.2489 57.6893 89.2489 58.8741 88.5155 59.6071C84.7973 63.3253 82.7501 68.2699 82.7501 73.5292C82.7501 74.5643 81.91 75.4041 80.8749 75.4041Z" fill="#005BF0"/>' +
		'<path d="M107.125 92.5002C107.125 96.6424 103.767 100 99.6252 100C95.483 100 92.125 96.6424 92.125 92.5002C92.125 88.358 95.483 85 99.6252 85C103.767 85 107.125 88.358 107.125 92.5002Z" fill="#F79B42"/>' +
		'<path d="M99.6252 62.4999C98.5901 62.4999 97.75 61.6601 97.75 60.625V56.8749C97.75 55.8401 98.5901 55 99.6252 55C100.66 55 101.5 55.8401 101.5 56.8749V60.625C101.5 61.6601 100.66 62.4999 99.6252 62.4999Z" fill="#F79B42"/>' +
		'<path d="M117.211 86.7099C114.376 84.3135 112.75 80.813 112.75 77.1023V71.8749C112.75 64.6373 106.861 58.75 99.6252 58.75C92.3894 58.75 86.5 64.6373 86.5 71.8749V77.1023C86.5 80.813 84.8744 84.3155 82.0227 86.7267C81.2932 87.3491 80.875 88.2586 80.875 89.2185C80.875 91.0282 82.3468 92.5 84.1565 92.5H115.094C116.903 92.5 118.375 91.0282 118.375 89.2185C118.375 88.2586 117.957 87.3491 117.211 86.7099Z" fill="#FACC41"/>' +
		'<rect opacity="0.1" x="136" y="65" width="50" height="3" rx="1.5" fill="#0069d9"/>' +
		'<rect opacity="0.1" x="156" y="78" width="30" height="3" rx="1.5" fill="#0069d9"/>' +
		'<rect opacity="0.1" x="171" y="90" width="30" height="3" rx="1.5" fill="#0069d9"/>' +
		'<rect opacity="0.1" width="50" height="3" rx="1.5" transform="matrix(-1 0 0 1 65 65)" fill="#0069d9"/>' +
		'<rect opacity="0.1" width="30" height="3" rx="1.5" transform="matrix(-1 0 0 1 45 78)" fill="#0069d9"/>' +
		'<rect opacity="0.1" width="30" height="3" rx="1.5" transform="matrix(-1 0 0 1 30 90)" fill="#0069d9"/>' +
		'<path opacity="0.15" d="M67.6475 103.058C67.8422 102.863 67.8422 102.547 67.6475 102.353C67.4528 102.158 67.1372 102.158 66.9425 102.353L64.5 104.795L62.0575 102.353C61.8628 102.158 61.5472 102.158 61.3525 102.352C61.1578 102.547 61.1578 102.863 61.3525 103.058L63.795 105.5L61.3525 107.943C61.1578 108.137 61.1578 108.453 61.3525 108.648C61.5472 108.842 61.8628 108.842 62.0575 108.648L64.5 106.205L66.9425 108.648C67.1372 108.842 67.4528 108.842 67.6475 108.648C67.8422 108.453 67.8422 108.137 67.6475 107.943L65.205 105.5L67.6475 103.058Z" fill="#0069d9"/>' +
		'<path opacity="0.15" d="M117.648 36.0575C117.842 35.8628 117.842 35.5472 117.648 35.3525C117.453 35.1578 117.137 35.1578 116.943 35.3525L114.5 37.795L112.058 35.3525C111.863 35.1578 111.547 35.1578 111.352 35.3525C111.158 35.5472 111.158 35.8628 111.353 36.0575L113.795 38.5L111.353 40.9425C111.158 41.1372 111.158 41.4528 111.353 41.6475C111.547 41.8422 111.863 41.8422 112.058 41.6475L114.5 39.205L116.943 41.6475C117.137 41.8422 117.453 41.8422 117.648 41.6475C117.842 41.4528 117.842 41.1372 117.648 40.9425L115.205 38.5L117.648 36.0575Z" fill="#0069d9"/>' +
		'<path opacity="0.1" d="M187.339 29.0094H191V30.6604H187.339V35H185.661V30.6604H182V29.0094H185.661V25H187.339V29.0094Z" fill="#0069d9"/>' +
		'<path opacity="0.1" d="M16.3387 46.0094H20V47.6604H16.3387V52H14.6613V47.6604H11V46.0094H14.6613V42H16.3387V46.0094Z" fill="#0069d9"/>' +
		'<path opacity="0.1" d="M57 13H49V11H57V13Z" fill="#0069d9"/>' +
		'<path opacity="0.1" d="M59.9285 35.4675L57 34.6175L57.4461 33.1913L60.3745 34.2491L60.2873 31H61.7709L61.6739 34.2963L64.5539 33.2574L65 34.693L62.023 35.5525L63.943 38.1122L62.7406 39L60.937 36.2798L59.1915 38.9339L57.9794 38.0744L59.9285 35.4675Z" fill="#0069d9"/>' +
		'<path opacity="0.15" d="M149.83 22.7922L148 22.2609L148.279 21.3695L150.109 22.0307L150.055 20H150.982L150.921 22.0602L152.721 21.4109L153 22.3081L151.139 22.8453L152.339 24.4451L151.588 25L150.461 23.2999L149.37 24.9587L148.612 24.4215L149.83 22.7922Z" fill="#0069d9"/>' +
		'<circle opacity="0.1" cx="26" cy="110" r="6" fill="#0069d9"/>' +
		'<circle opacity="0.1" cx="108" cy="6" r="6" fill="#0069d9"/>' +
		'<path opacity="0.1" d="M137 91.5C137 93.433 135.433 95 133.5 95C131.567 95 130 93.433 130 91.5C130 89.567 131.567 88 133.5 88C135.433 88 137 89.567 137 91.5Z" fill="#0069d9"/>' +
		'</svg>',
	push_prev: '<svg width="30" height="30" version="1.1" class="Layer_1" x="0px" y="0px" viewBox="0 0 30 30" style="enable-background:new 0 0 30 30;" xml:space="preserve">' +
		'<style type="text/css">' +
		'.st0{fill:#FFFFFF;}' +
		'.st1{fill:#666666;}' +
		'</style>' +
		'<g>' +
		'<path class="st0" d="M15,2.8C8.3,2.8,2.8,8.3,2.8,15S8.3,27.2,15,27.2S27.2,21.7,27.2,15S21.7,2.8,15,2.8z"/>' +
		'</g>' +
		'<g>' +
		'<path class="st1" d="M15,0C6.7,0,0,6.7,0,15s6.7,15,15,15s15-6.7,15-15S23.3,0,15,0z M18.5,21.6c0.5,0.4,0.5,1.2,0,1.6 c-0.2,0.2-0.5,0.4-0.8,0.4s-0.6-0.1-0.8-0.3l-7.5-7.2C9.1,15.8,9,15.5,9,15.2s0.1-0.6,0.4-0.8l7.5-7.2c0.5-0.4,1.2-0.4,1.6,0 c0.4,0.5,0.4,1.2,0,1.6l-6.7,6.4L18.5,21.6z"/>' +
		'</g>' +
		'</svg>',
	overlay_tour_popup_close: '<svg  width="16px" height="16px" version="1.1" class="Capa_1" x="0px" y="0px" viewBox="0 0 24 24" style="enable-background:new 0 0 24 24;" xml:space="preserve">' +
		'<g>' +
		'<g class="close">' +
		'<polygon points="23.3,3 21,0.7 12,9.7 3,0.7 0.7,3 9.7,12 0.7,21 3,23.3 12,14.3 21,23.3 23.3,21 14.3,12"/>' +
		'</g>' +
		'</g>' +
		'</svg>',
	tutorial: '<svg width="32" height="32" viewBox="0 0 32 32" fill="none">' +
		'<circle cx="16" cy="16" r="16" fill="#45465F"/>' +
		'<path d="M20.9755 8H11.3879C10.2677 8.00051 9.3596 8.90847 9.35922 10.0287V11.8293H8.40574C8.18157 11.8293 8 12.011 8 12.2351C8 12.4591 8.18157 12.6408 8.40574 12.6408H9.35504V14.3782H8.40574C8.18157 14.3782 8 14.5598 8 14.7839C8 15.008 8.18157 15.1897 8.40574 15.1897H9.35504V17.8513H8.40574C8.18157 17.8513 8 18.033 8 18.2571C8 18.4812 8.18157 18.6628 8.40574 18.6628H9.35504V21.3244H8.40574C8.18157 21.3244 8 21.5061 8 21.7302C8 21.9542 8.18157 22.1359 8.40574 22.1359H9.35504V23.0123C9.35554 24.1325 10.2635 25.0405 11.3837 25.041H20.9713C22.0915 25.0405 22.9997 24.1325 23 23.0123V10.0287C23.0016 8.90923 22.0949 8.00076 20.9755 8ZM22.1927 23.0123C22.1907 23.6837 21.6469 24.2276 20.9755 24.2295H11.3879C10.7165 24.2276 10.1726 23.6837 10.1707 23.0123V22.1359H11.12C11.3442 22.1359 11.5257 21.9542 11.5257 21.7302C11.5257 21.5061 11.3442 21.3244 11.12 21.3244H10.1707V18.6628H11.12C11.3442 18.6628 11.5257 18.4812 11.5257 18.2571C11.5257 18.033 11.3442 17.8513 11.12 17.8513H10.1707V15.1897H11.12C11.3442 15.1897 11.5257 15.008 11.5257 14.7839C11.5257 14.5598 11.3442 14.3782 11.12 14.3782H10.1707V12.6408H11.12C11.3442 12.6408 11.5257 12.4591 11.5257 12.2351C11.5257 12.011 11.3442 11.8293 11.12 11.8293H10.1707V10.0287C10.1726 9.35732 10.7165 8.81338 11.3879 8.81148H20.9755C21.6469 8.81338 22.1907 9.35732 22.1927 10.0287V23.0123Z" fill="white" stroke="white" stroke-width="0.5"/>' +
		'<rect x="13.5449" y="11.697" width="6.4698" height="1.38639" fill="white"/>' +
		'<rect x="13.5449" y="15.394" width="6.4698" height="1.38639" fill="white"/>' +
		'<rect x="13.5449" y="19.0911" width="6.4698" height="1.38639" fill="white"/>' +
		'</svg>',
	white_myguide_logo: '<svg width="82" height="27" viewBox="0 0 82 27" fill="none">' +
		'<path d="M55.2148 18.8794C55.2127 18.8247 55.1993 18.7709 55.1756 18.7213C55.1519 18.6717 55.1184 18.6272 55.0768 18.5905C55.0353 18.5537 54.9867 18.5255 54.9339 18.5074C54.8811 18.4893 54.8251 18.4818 54.7693 18.4852C53.2776 18.5788 51.8711 19.1986 50.8107 20.2298C50.7399 20.3095 50.7024 20.4125 50.7058 20.5181C50.7092 20.6237 50.7531 20.7242 50.8289 20.7994C50.9047 20.8746 51.0067 20.9191 51.1145 20.9239C51.2223 20.9287 51.328 20.8935 51.4105 20.8253C52.3247 19.9234 53.5429 19.3778 54.8378 19.2904C54.9416 19.28 55.0377 19.2321 55.1074 19.1561C55.1771 19.0802 55.2154 18.9815 55.2148 18.8794Z" fill="#76C9BE" />' +
		'<path d="M54.7595 20.0531C53.6997 20.1452 52.7059 20.5961 51.949 21.328C51.9091 21.3662 51.8774 21.4119 51.8558 21.4623C51.8341 21.5127 51.823 21.5669 51.823 21.6216C51.823 21.6762 51.8341 21.7304 51.8558 21.7808C51.8774 21.8312 51.9091 21.8769 51.949 21.9151C52.0307 21.9954 52.1417 22.0407 52.2575 22.0409C52.3123 22.041 52.3665 22.0298 52.4167 22.0081C52.4669 21.9864 52.5119 21.9548 52.5488 21.9151C53.1688 21.3258 53.9761 20.9617 54.8366 20.8834C54.8926 20.8792 54.9471 20.8641 54.9971 20.8389C55.047 20.8137 55.0912 20.779 55.1272 20.7367C55.1631 20.6945 55.1901 20.6456 55.2064 20.593C55.2227 20.5404 55.2281 20.4852 55.2222 20.4305C55.2179 20.3757 55.2024 20.3223 55.1767 20.2734C55.151 20.2245 55.1155 20.1812 55.0723 20.146C55.0292 20.1108 54.9793 20.0845 54.9255 20.0685C54.8718 20.0525 54.8153 20.0473 54.7595 20.0531Z" fill="#76C9BE" />' +
		'<path d="M63.1583 20.5427C63.0764 20.4628 62.9654 20.418 62.8498 20.418C62.7342 20.418 62.6232 20.4628 62.5413 20.5427C62.5021 20.5812 62.4713 20.6271 62.4507 20.6775C62.4301 20.728 62.4201 20.782 62.4214 20.8363V22.6481C62.23 22.4867 62.0235 22.3434 61.8045 22.2203C61.4944 22.0407 61.1444 21.9377 60.7847 21.9202C60.4249 21.9026 60.0662 21.9711 59.7395 22.1196C59.44 22.2531 59.1673 22.4377 58.934 22.6648C58.7 22.8947 58.5112 23.1648 58.3771 23.4617C58.2392 23.7681 58.1691 24.0997 58.1714 24.4346C58.1693 24.7668 58.2394 25.0956 58.3771 25.3992C58.5073 25.6916 58.6901 25.9587 58.9169 26.1877C59.1505 26.4161 59.4269 26.5984 59.7309 26.7245C60.3677 26.9808 61.082 26.9808 61.7188 26.7245C61.9737 26.6211 62.2108 26.4797 62.4214 26.3051V26.4896C62.4202 26.5454 62.4305 26.6008 62.4515 26.6527C62.4725 26.7045 62.5039 26.7518 62.5438 26.7916C62.5837 26.8314 62.6313 26.8631 62.6838 26.8847C62.7364 26.9063 62.7928 26.9174 62.8498 26.9174C62.9073 26.9187 62.9645 26.9082 63.0177 26.8865C63.0708 26.8649 63.1187 26.8325 63.1583 26.7916C63.201 26.7535 63.2346 26.7068 63.2568 26.6546C63.279 26.6024 63.2893 26.5461 63.2868 26.4896V20.8363C63.2886 20.7812 63.278 20.7263 63.2558 20.6756C63.2336 20.6248 63.2003 20.5795 63.1583 20.5427ZM62.3014 25.1056C62.216 25.2996 62.0939 25.4761 61.9415 25.6257C61.7852 25.7767 61.6024 25.8989 61.4017 25.9864C60.982 26.1564 60.5105 26.1564 60.0908 25.9864C59.8888 25.905 59.7054 25.7852 59.551 25.6341C59.3166 25.3996 59.1576 25.103 59.0936 24.781C59.0296 24.459 59.0635 24.1257 59.1911 23.8223C59.3489 23.4309 59.6562 23.115 60.0479 22.9416C60.2572 22.8575 60.4814 22.8147 60.7077 22.8158C60.9275 22.8158 61.1453 22.8556 61.3503 22.9332C61.547 23.015 61.7248 23.1348 61.873 23.2855C62.0284 23.4344 62.1534 23.6109 62.2414 23.8056C62.3289 24.0169 62.381 24.2406 62.3957 24.4682C62.4052 24.686 62.3672 24.9033 62.2843 25.1056H62.3014Z" fill="white" />' +
		'<path d="M56.9546 22.6483C56.7235 22.4207 56.4501 22.2385 56.1491 22.1115C55.8445 21.9783 55.5145 21.9097 55.1809 21.9102C54.8296 21.9227 54.4837 21.9996 54.1612 22.1366C53.8432 22.2602 53.5523 22.4425 53.3044 22.6734C53.075 22.9004 52.8918 23.1679 52.7646 23.4619C52.6303 23.7723 52.561 24.1061 52.561 24.4432C52.561 24.7804 52.6303 25.1141 52.7646 25.4246C52.8904 25.7214 53.077 25.9897 53.313 26.213C53.5488 26.4345 53.8249 26.6109 54.127 26.7331C54.4405 26.8553 54.7749 26.9179 55.1123 26.9176C55.4536 26.9249 55.7934 26.8709 56.1148 26.7582C56.422 26.643 56.6956 26.4558 56.9117 26.213C56.9933 26.1329 57.0392 26.0243 57.0392 25.9111C57.0392 25.7979 56.9933 25.6893 56.9117 25.6091C56.8302 25.5318 56.7211 25.4885 56.6075 25.4885C56.494 25.4885 56.3849 25.5318 56.3033 25.6091C56.1434 25.7514 55.9612 25.8675 55.7635 25.953C55.364 26.1052 54.9207 26.1052 54.5211 25.953C54.1541 25.8204 53.8493 25.5608 53.6643 25.2233C53.6615 25.2038 53.6615 25.1841 53.6643 25.1646C53.5434 24.9337 53.4817 24.6775 53.4843 24.4181C53.4853 24.2174 53.523 24.0186 53.5957 23.8309C53.6269 23.7406 53.6671 23.6535 53.7157 23.5709C53.8106 23.4098 53.9322 23.2652 54.0756 23.1431C54.2285 23.0239 54.3989 22.9277 54.5811 22.858C54.9576 22.7247 55.3699 22.7247 55.7464 22.858C55.9285 22.9277 56.099 23.0239 56.2519 23.1431C56.3975 23.2654 56.5219 23.4099 56.6204 23.5709C56.6969 23.6934 56.7546 23.8262 56.7917 23.9651H54.6411C54.5421 23.9846 54.4531 24.037 54.3891 24.1135C54.3251 24.1899 54.2902 24.2857 54.2902 24.3845C54.2902 24.4833 54.3251 24.5791 54.3891 24.6556C54.4531 24.732 54.5421 24.7844 54.6411 24.8039H57.2887C57.3957 24.801 57.4984 24.7625 57.58 24.6949C57.6282 24.6567 57.6665 24.6079 57.6918 24.5526C57.7171 24.4972 57.7287 24.4367 57.7257 24.3761C57.717 24.0686 57.6441 23.766 57.5115 23.487C57.3831 23.1748 57.1939 22.8899 56.9546 22.6483Z" fill="white" />' +
		'<path d="M72.2655 13.4968C72.7827 14.0016 73.3973 14.4008 74.0735 14.671C74.7651 14.9556 75.5082 15.1011 76.2584 15.0988C77.0235 15.1105 77.7842 14.9854 78.5034 14.7297C79.1883 14.4622 79.7969 14.0363 80.2771 13.4884C80.4578 13.3014 80.5586 13.0538 80.5586 12.7964C80.5586 12.539 80.4578 12.2913 80.2771 12.1044C80.1871 12.0161 80.0803 11.9461 79.9626 11.8983C79.845 11.8506 79.7189 11.826 79.5916 11.826C79.4642 11.826 79.3381 11.8506 79.2205 11.8983C79.1029 11.9461 78.996 12.0161 78.9061 12.1044C78.5616 12.4401 78.1544 12.7078 77.7065 12.8928C76.8246 13.2584 75.8319 13.2734 74.9389 12.9348C74.5269 12.7822 74.1466 12.5577 73.8164 12.2722C73.478 11.9866 73.1886 11.6496 72.9596 11.274L72.8825 11.123C72.6202 10.6009 72.4825 10.0273 72.4797 9.44549C72.4807 8.98379 72.5678 8.52614 72.7368 8.09507C72.8097 7.89564 72.8985 7.70213 73.0024 7.51632C73.2214 7.141 73.5123 6.81062 73.8593 6.54335C74.1944 6.26242 74.5734 6.03588 74.9817 5.87233C75.8097 5.56413 76.7244 5.56413 77.5523 5.87233C77.9627 6.02813 78.3425 6.25232 78.6747 6.53496C79.0187 6.80858 79.3091 7.1411 79.5316 7.51632C79.7011 7.78909 79.8336 8.08234 79.9257 8.38864H75.1274C74.8638 8.38864 74.611 8.49115 74.4246 8.67362C74.2382 8.85609 74.1335 9.10357 74.1335 9.36162C74.1335 9.61967 74.2382 9.86715 74.4246 10.0496C74.611 10.2321 74.8638 10.3346 75.1274 10.3346H81.0311C81.2703 10.3295 81.5004 10.2436 81.6823 10.0913C81.7867 10.0001 81.8693 9.88732 81.9241 9.76117C81.9789 9.63503 82.0046 9.4986 81.9993 9.36162C81.9984 8.59075 81.8351 7.82835 81.5195 7.1221C81.2129 6.4543 80.7895 5.84402 80.2685 5.31875C79.7513 4.80283 79.1413 4.38483 78.4691 4.08575C77.7935 3.78614 77.0601 3.6317 76.3184 3.63282C75.5315 3.6742 74.7603 3.86507 74.0478 4.19479C73.3723 4.4785 72.7564 4.88234 72.2313 5.38585C71.7132 5.90485 71.3029 6.51727 71.0231 7.1892C70.7245 7.89357 70.573 8.64934 70.5776 9.41194C70.5716 10.1918 70.7261 10.9648 71.0317 11.685C71.3184 12.3619 71.7375 12.9774 72.2655 13.4968Z" fill="white" />' +
		'<path d="M13.3069 4.77153C12.9189 4.41655 12.4691 4.13247 11.9788 3.93276C11.4636 3.7204 10.9098 3.61199 10.3508 3.61402C9.67692 3.60539 9.01143 3.76104 8.41433 4.06696C7.97961 4.27903 7.58542 4.56276 7.24902 4.90573C6.91833 4.56369 6.52993 4.27995 6.10085 4.06696C5.50452 3.75813 4.83899 3.59958 4.16438 3.60564C3.6489 3.60777 3.14114 3.72844 2.68204 3.95792C2.47325 4.06206 2.27019 4.17685 2.07368 4.30181C2.01767 4.17771 1.93598 4.06633 1.83376 3.97469C1.63287 3.78075 1.3619 3.67223 1.07974 3.67274C0.939606 3.66963 0.80032 3.69484 0.670585 3.7468C0.540849 3.79875 0.42345 3.87633 0.325719 3.97469C0.221894 4.0705 0.139388 4.18624 0.0833615 4.3147C0.0273355 4.44315 -0.00100356 4.58153 0.000117865 4.7212V14.107C-0.0020539 14.2469 0.0258084 14.3856 0.0818992 14.5142C0.13799 14.6428 0.221058 14.7584 0.325719 14.8535C0.424645 14.9503 0.542265 15.0269 0.67172 15.0787C0.801175 15.1306 0.939878 15.1567 1.07974 15.1555C1.21974 15.1576 1.35873 15.132 1.48832 15.0801C1.61791 15.0282 1.73542 14.9511 1.83376 14.8535C1.93843 14.7584 2.02149 14.6428 2.07758 14.5142C2.13367 14.3856 2.16154 14.2469 2.15937 14.107V7.54785C2.1662 7.30303 2.22276 7.06199 2.32573 6.83878C2.42871 6.61557 2.57605 6.41466 2.75916 6.24776C2.94378 6.0689 3.16343 5.92841 3.40491 5.83472C3.64639 5.74104 3.90471 5.69608 4.16438 5.70256C4.42472 5.69669 4.68356 5.74274 4.92514 5.83791C5.16672 5.93308 5.38599 6.07538 5.56961 6.25615C5.75814 6.43044 5.90969 6.63944 6.01555 6.87117C6.12142 7.10291 6.17952 7.35281 6.18653 7.60657V14.1154C6.18436 14.2552 6.21222 14.3939 6.26831 14.5225C6.32441 14.6511 6.40747 14.7668 6.51213 14.8619C6.61106 14.9587 6.72868 15.0353 6.85814 15.0871C6.98759 15.139 7.12629 15.1651 7.26616 15.1639C7.40616 15.166 7.54514 15.1403 7.67474 15.0884C7.80433 15.0365 7.92184 14.9595 8.02018 14.8619C8.12484 14.7668 8.20791 14.6511 8.264 14.5225C8.32009 14.3939 8.34795 14.2552 8.34578 14.1154V7.59818C8.34491 7.3498 8.39746 7.10403 8.50001 6.87684C8.59825 6.64811 8.74083 6.44018 8.91987 6.26454C9.10384 6.09504 9.319 5.96127 9.55393 5.87031C10.0615 5.66481 10.6316 5.66481 11.1391 5.87031C11.3821 5.96706 11.6033 6.10955 11.7903 6.2897C11.9718 6.46184 12.1173 6.66697 12.2187 6.89361C12.3213 7.1208 12.3738 7.36658 12.3729 7.61496V14.1238C12.3708 14.2636 12.3986 14.4023 12.4547 14.5309C12.5108 14.6595 12.5939 14.7752 12.6986 14.8703C12.7975 14.9671 12.9151 15.0437 13.0446 15.0955C13.174 15.1473 13.3127 15.1734 13.4526 15.1723C13.5926 15.1744 13.7316 15.1487 13.8612 15.0968C13.9907 15.0449 14.1083 14.9679 14.2066 14.8703C14.3113 14.7752 14.3943 14.6595 14.4504 14.5309C14.5065 14.4023 14.5344 14.2636 14.5322 14.1238V7.59818C14.5361 7.05984 14.4191 6.52724 14.1895 6.03807C13.9974 5.55571 13.6956 5.12255 13.3069 4.77153Z" fill="white" />' +
		'<path d="M23.9405 3.63011C23.7348 3.62826 23.5328 3.68352 23.3579 3.78948C23.1733 3.89704 23.0314 4.0626 22.9552 4.25919L20.1361 11.2713L17.4285 4.25919C17.3489 4.062 17.2041 3.89661 17.0172 3.78948C16.829 3.67793 16.6116 3.62255 16.3917 3.63011C16.2498 3.62313 16.1081 3.64653 15.9764 3.69868C15.8447 3.75083 15.7262 3.83048 15.6291 3.93207C15.4476 4.1298 15.3496 4.38763 15.3549 4.65341C15.3547 4.80638 15.3867 4.95774 15.4492 5.09796C15.4492 5.18184 15.5263 5.31604 15.6377 5.60122C15.7491 5.8864 15.9633 6.43999 16.2461 7.16972C16.5288 7.89945 16.8973 8.84726 17.3428 9.99638C17.7884 11.1455 18.3196 12.5127 18.9537 14.1902L17.5999 17.6963C17.5999 17.755 17.5999 17.8137 17.5485 17.864C17.5393 17.9308 17.5393 17.9985 17.5485 18.0653C17.5483 18.3349 17.656 18.5938 17.8484 18.7867C17.9722 18.9147 18.127 19.01 18.2984 19.0639C18.4698 19.1178 18.6524 19.1286 18.8292 19.0951C19.006 19.0617 19.1713 18.9851 19.3099 18.8726C19.4485 18.76 19.5558 18.6151 19.622 18.4512L24.9259 5.08119C24.9932 4.9512 25.0284 4.80755 25.0287 4.6618C25.024 4.40061 24.9166 4.15125 24.7288 3.96562C24.6289 3.85862 24.507 3.77343 24.3712 3.71562C24.2354 3.65781 24.0886 3.62868 23.9405 3.63011Z" fill="white" />' +
		'<path d="M52.5503 3.63328C52.4101 3.63017 52.2708 3.65538 52.1411 3.70734C52.0114 3.75929 51.894 3.83687 51.7962 3.93524C51.6924 4.03104 51.6099 4.14679 51.5539 4.27524C51.4979 4.40369 51.4695 4.54208 51.4706 4.68174V10.8383C51.4598 11.1295 51.3868 11.4152 51.2564 11.6771C51.1314 11.9321 50.9634 12.1646 50.7595 12.3649C50.5383 12.5615 50.2829 12.7177 50.0054 12.8262C49.4119 13.0612 48.7482 13.0612 48.1547 12.8262C47.8715 12.7162 47.6126 12.5539 47.3921 12.3481C47.1725 12.1392 46.9952 11.8916 46.8694 11.6184C46.7506 11.354 46.6893 11.0684 46.6895 10.7796V4.68174C46.6906 4.54208 46.6622 4.40369 46.6062 4.27524C46.5502 4.14679 46.4677 4.03104 46.3638 3.93524C46.1619 3.74281 45.8916 3.63456 45.6098 3.63328C45.3287 3.63768 45.0607 3.75009 44.8635 3.94624C44.6664 4.14239 44.5559 4.40656 44.5559 4.68174V10.746C44.5575 11.3226 44.6769 11.893 44.9072 12.4236C45.1429 12.9399 45.4741 13.4091 45.884 13.8076C46.5173 14.3995 47.3086 14.8042 48.1667 14.9749C49.0248 15.1456 49.9147 15.0753 50.7338 14.7721C51.032 14.6688 51.319 14.5367 51.5906 14.3779C51.6485 14.5244 51.7393 14.6562 51.8562 14.7638C51.9551 14.8605 52.0728 14.9371 52.2022 14.9889C52.3317 15.0408 52.4704 15.0669 52.6102 15.0657C52.7502 15.0678 52.8892 15.0422 53.0188 14.9903C53.1484 14.9384 53.2659 14.8613 53.3643 14.7638C53.4689 14.6686 53.552 14.553 53.6081 14.4244C53.6642 14.2958 53.692 14.1571 53.6899 14.0172V4.68174C53.691 4.54208 53.6626 4.40369 53.6066 4.27524C53.5506 4.14679 53.4681 4.03104 53.3643 3.93524C53.2613 3.82724 53.1343 3.74385 52.9932 3.6915C52.852 3.63914 52.7005 3.61923 52.5503 3.63328Z" fill="white" />' +
		'<path d="M55.695 3.60561C55.5537 3.60332 55.4134 3.62887 55.2824 3.68075C55.1514 3.73262 55.0323 3.80976 54.9324 3.90757C54.8286 4.00337 54.7461 4.11912 54.6901 4.24757C54.634 4.37602 54.6057 4.51441 54.6068 4.65407V14.0399C54.6046 14.1797 54.6325 14.3184 54.6886 14.447C54.7447 14.5756 54.8277 14.6912 54.9324 14.7864C55.0316 14.8857 55.1503 14.9644 55.2814 15.0178C55.4124 15.0711 55.5531 15.098 55.695 15.0968C55.835 15.0989 55.974 15.0732 56.1036 15.0213C56.2332 14.9694 56.3507 14.8924 56.449 14.7948C56.5537 14.6996 56.6367 14.584 56.6928 14.4554C56.7489 14.3268 56.7768 14.1881 56.7746 14.0483V4.65407C56.7724 4.37523 56.6576 4.10857 56.4554 3.91218C56.2532 3.7158 55.9798 3.6056 55.695 3.60561Z" fill="white" />' +
		'<path d="M67.6396 13.7047V13.9563C67.6369 14.0962 67.6645 14.2351 67.7206 14.3638C67.7767 14.4924 67.8601 14.608 67.9652 14.7028C68.0638 14.8 68.1814 14.8768 68.3109 14.9287C68.4404 14.9805 68.5793 15.0064 68.7192 15.0048C68.8593 15.0079 68.9986 14.9827 69.1284 14.9307C69.2581 14.8788 69.3755 14.8012 69.4732 14.7028C69.5783 14.608 69.6617 14.4924 69.7178 14.3638C69.7739 14.2351 69.8015 14.0962 69.7988 13.9563V1.19024C69.8015 1.05035 69.7739 0.911491 69.7178 0.782814C69.6617 0.654137 69.5783 0.538571 69.4732 0.443739C69.2741 0.249615 69.0045 0.140625 68.7235 0.140625C68.4425 0.140625 68.1729 0.249615 67.9737 0.443739C67.8687 0.538571 67.7853 0.654137 67.7292 0.782814C67.673 0.911491 67.6454 1.05035 67.6481 1.19024V5.13246C67.2384 4.80985 66.7963 4.52882 66.3286 4.29369C65.541 3.86586 64.6586 3.63264 63.7581 3.61429C62.9742 3.61506 62.1988 3.77202 61.4789 4.07561C60.0663 4.65464 58.9221 5.724 58.2657 7.07841C57.9492 7.77552 57.7856 8.5299 57.7856 9.29276C57.7856 10.0556 57.9492 10.81 58.2657 11.5071C58.5804 12.1787 59.0158 12.7895 59.551 13.3105C60.0994 13.8338 60.7451 14.2495 61.4532 14.5351C62.2011 14.8334 63.0018 14.9845 63.8095 14.9796C64.5978 14.9817 65.3795 14.8394 66.1144 14.5602C66.6637 14.3514 67.1778 14.063 67.6396 13.7047ZM63.8181 12.9079C63.301 12.9123 62.7882 12.8153 62.31 12.6227C61.8526 12.4452 61.436 12.18 61.0847 11.8426C60.7343 11.5192 60.4548 11.1293 60.2633 10.6967C60.0718 10.2641 59.9723 9.7978 59.9708 9.32631C59.9706 8.84496 60.0697 8.36851 60.2622 7.92557C60.4689 7.4893 60.7599 7.09626 61.119 6.76806C61.477 6.43909 61.8919 6.17497 62.3443 5.98801C62.8225 5.79535 63.3352 5.69838 63.8523 5.70283C64.349 5.69972 64.8414 5.79383 65.3004 5.97962C65.7454 6.1548 66.1524 6.41095 66.5 6.73451C66.8531 7.06461 67.1433 7.45374 67.3568 7.88363C67.56 8.34297 67.6762 8.83467 67.6996 9.3347C67.7 9.80882 67.5978 10.2777 67.3997 10.7103C67.1988 11.1475 66.9069 11.5388 66.5428 11.8594C66.193 12.1985 65.7761 12.464 65.3175 12.6395C64.8422 12.83 64.3315 12.9214 63.8181 12.9079Z" fill="white" />' +
		'<path d="M34.8052 0C32.3977 0.0331607 30.1018 0.998956 28.4203 2.68585C26.7388 4.37274 25.8088 6.64323 25.834 9C25.834 15.165 33.8626 24.2069 34.2054 24.5927C34.2809 24.6752 34.3734 24.7412 34.4767 24.7864C34.5801 24.8316 34.692 24.8549 34.8052 24.8549C34.9183 24.8549 35.0303 24.8316 35.1336 24.7864C35.2369 24.7412 35.3294 24.6752 35.4049 24.5927C35.7391 24.2069 43.7677 15.165 43.7677 9C43.7952 6.64401 42.8671 4.3735 41.187 2.68636C39.5069 0.999224 37.2118 0.0331569 34.8052 0Z" fill="#76C9BE" />' +
		'<path d="M40.3249 10.4584C40.1966 11.1045 39.953 11.7235 39.6052 12.2869C39.2784 12.8363 38.8515 13.3225 38.3456 13.7212C37.8497 14.1284 37.284 14.4465 36.6748 14.6606C36.05 14.8892 35.3882 15.0057 34.7212 15.0045C33.957 15.0093 33.2005 14.8549 32.502 14.5516C31.8339 14.29 31.2231 13.9056 30.7026 13.4192C30.1856 12.8945 29.773 12.2801 29.4859 11.6075C29.1861 10.9003 29.0317 10.1421 29.0317 9.37637C29.0317 8.61066 29.1861 7.85248 29.4859 7.14524C29.769 6.45558 30.1817 5.82398 30.7026 5.28318C31.2178 4.76127 31.8319 4.34249 32.5105 4.05018C33.2829 3.72073 34.1217 3.56764 34.9634 3.60252C35.8051 3.6374 36.6277 3.85932 37.3688 4.25149C38.157 4.66176 38.8329 5.25148 39.3396 5.97097C39.456 6.13991 39.5214 6.33762 39.5281 6.54133C39.5251 6.75232 39.4496 6.95619 39.3139 7.12008C39.1927 7.25941 39.0283 7.35614 38.8458 7.39551C38.6632 7.43488 38.4726 7.41474 38.3028 7.33816C38.1445 7.27255 38.008 7.16509 37.9086 7.02782C37.4762 6.51205 36.9394 6.08941 36.3321 5.78644C35.849 5.55292 35.3197 5.42521 34.7811 5.41217C34.2425 5.39914 33.7074 5.50109 33.2131 5.71095C32.7489 5.90728 32.3294 6.19246 31.9793 6.54972C31.6171 6.91398 31.3266 7.3405 31.1224 7.80787C30.9227 8.293 30.8209 8.8114 30.8225 9.33443C30.8144 10.364 31.2207 11.3554 31.9536 12.094C32.3056 12.4491 32.7246 12.7339 33.1874 12.9328C33.6687 13.1374 34.1879 13.243 34.7126 13.2431C35.1235 13.2446 35.5317 13.1794 35.9208 13.0502C36.2931 12.9211 36.6472 12.7463 36.9747 12.5301C37.3041 12.2969 37.5933 12.0138 37.8315 11.6914C37.9606 11.5326 38.0726 11.3611 38.1657 11.1797H36.452C36.3331 11.1805 36.2153 11.1571 36.1061 11.1108C35.997 11.0646 35.8988 10.9967 35.8179 10.9113C35.733 10.8274 35.6658 10.7279 35.6202 10.6185C35.5746 10.5091 35.5516 10.392 35.5523 10.2739C35.5504 10.0327 35.6459 9.80057 35.8179 9.628C35.8996 9.54416 35.998 9.47777 36.1072 9.43301C36.2163 9.38826 36.3337 9.36612 36.452 9.36798H39.4681C39.5947 9.36552 39.7204 9.39056 39.8359 9.44133C39.9515 9.49209 40.0541 9.5673 40.1364 9.66155C40.2867 9.83759 40.3659 10.0613 40.3592 10.2906C40.3531 10.3475 40.3417 10.4036 40.3249 10.4584Z" fill="white" />' +
		'<path d="M68.1366 25.6495C67.9767 25.7918 67.7944 25.9079 67.5968 25.9934C67.1796 26.1612 66.7116 26.1612 66.2944 25.9934C66.0937 25.906 65.9109 25.7838 65.7546 25.6328C65.6004 25.4846 65.478 25.3078 65.3947 25.1127C65.3085 24.9109 65.2648 24.694 65.2662 24.4753C65.265 24.2538 65.3087 24.0343 65.3947 23.8294C65.4757 23.6306 65.5983 23.4506 65.7546 23.301C65.9092 23.148 66.0925 23.0255 66.2944 22.9403C66.7116 22.7725 67.1796 22.7725 67.5968 22.9403C67.7894 23.0194 67.9686 23.1269 68.128 23.259C68.2067 23.3354 68.3129 23.3782 68.4237 23.3782C68.5344 23.3782 68.6406 23.3354 68.7193 23.259C68.7611 23.2253 68.795 23.1831 68.8187 23.1353C68.8423 23.0875 68.8552 23.0353 68.8564 22.9822C68.8401 22.8678 68.7859 22.7617 68.7021 22.6803C68.5916 22.55 68.4616 22.4369 68.3165 22.3448C68.1323 22.2314 67.9371 22.1359 67.7339 22.0596C67.4866 21.973 67.2254 21.9304 66.9627 21.9338C66.6114 21.9464 66.2656 22.0232 65.9431 22.1603C65.6402 22.2885 65.3642 22.4705 65.1291 22.6971C64.8976 22.9223 64.7142 23.1903 64.5893 23.4855C64.4583 23.7938 64.3913 24.1246 64.3922 24.4585C64.3892 24.7988 64.4593 25.136 64.5978 25.4482C64.7236 25.745 64.9102 26.0133 65.1462 26.2367C65.3948 26.4626 65.6858 26.6393 66.0031 26.7567C66.3153 26.8829 66.6506 26.9457 66.9884 26.9412C67.2782 26.9506 67.5676 26.9138 67.8453 26.8322C68.0545 26.7671 68.2535 26.674 68.4365 26.5554C68.5846 26.4706 68.7153 26.3597 68.8221 26.2283C68.8977 26.1434 68.9454 26.0382 68.9592 25.9263C68.9595 25.8694 68.9474 25.813 68.9237 25.7609C68.9001 25.7089 68.8655 25.6623 68.8221 25.6244C68.7802 25.5737 68.7269 25.5333 68.6663 25.5063C68.6056 25.4793 68.5394 25.4666 68.4729 25.469C68.4064 25.4714 68.3413 25.489 68.283 25.5204C68.2246 25.5517 68.1745 25.5959 68.1366 25.6495Z" fill="white" />' +
		'<path d="M73.5945 22.688C73.3741 22.4648 73.1161 22.2804 72.8319 22.1428C72.5159 22.0125 72.1765 21.9453 71.8337 21.9453C71.4908 21.9453 71.1514 22.0125 70.8354 22.1428C70.5161 22.2641 70.2248 22.4466 69.9786 22.6796C69.7326 22.9064 69.5371 23.1805 69.4045 23.4848C69.2735 23.7931 69.2065 24.1239 69.2074 24.4578C69.2035 24.801 69.2736 25.1411 69.4131 25.4559C69.5389 25.7527 69.7255 26.0211 69.9615 26.2444C70.21 26.4704 70.501 26.647 70.8183 26.7644C71.1318 26.8866 71.4662 26.9493 71.8037 26.9489C72.165 26.9445 72.519 26.8492 72.8319 26.6722C73.0572 26.5482 73.2672 26.399 73.4574 26.2276V26.5463C73.4592 26.6291 73.4855 26.7096 73.5331 26.778C73.5807 26.8464 73.6475 26.8999 73.7255 26.9318C73.8035 26.9638 73.8894 26.9729 73.9726 26.9581C74.0558 26.9433 74.1328 26.9051 74.1943 26.8483C74.2357 26.8093 74.2684 26.7623 74.2905 26.7104C74.3127 26.6584 74.3236 26.6026 74.3228 26.5463V24.4578C74.336 24.1253 74.2776 23.7938 74.1514 23.4848C74.0174 23.188 73.8285 22.9179 73.5945 22.688ZM73.3289 25.1624C73.2403 25.3547 73.1186 25.5306 72.969 25.6824C72.8119 25.8282 72.6289 25.9447 72.4292 26.0263C72.006 26.1884 71.5345 26.1793 71.1182 26.0011C70.9176 25.9137 70.7347 25.7915 70.5784 25.6405C70.3477 25.4 70.1946 25.0982 70.1383 24.773C70.0819 24.4478 70.1247 24.1135 70.2614 23.8119C70.4192 23.4205 70.7265 23.1046 71.1182 22.9312C71.3242 22.8462 71.5458 22.8034 71.7694 22.8054C71.9957 22.8043 72.2199 22.8471 72.4292 22.9312C72.8209 23.1046 73.1282 23.4205 73.286 23.8119C73.3749 24.0162 73.4215 24.2358 73.4231 24.4578C73.4378 24.6964 73.4058 24.9355 73.3289 25.1624Z" fill="white" />' +
		'<path d="M76.7726 23.8967C75.9158 23.8045 75.7101 23.729 75.6587 23.3851C75.6587 23.3012 75.6073 23.0412 76.0443 22.8734C76.3695 22.7611 76.7217 22.7475 77.055 22.8343C77.3883 22.9211 77.687 23.1043 77.9122 23.3599C77.9777 23.4492 78.0763 23.5097 78.1868 23.5285C78.2974 23.5473 78.4111 23.5229 78.5034 23.4606C78.5495 23.4296 78.5887 23.3899 78.6189 23.3438C78.6491 23.2978 78.6696 23.2463 78.6791 23.1924C78.6887 23.1385 78.6872 23.0832 78.6747 23.0299C78.6622 22.9766 78.6389 22.9262 78.6062 22.8818C78.2692 22.4744 77.8105 22.1803 77.2944 22.0404C76.7782 21.9005 76.2303 21.922 75.7272 22.1018C75.4314 22.1873 75.1768 22.3742 75.0101 22.6283C74.8433 22.8824 74.7755 23.1868 74.819 23.4857C74.9647 24.5258 75.95 24.6349 76.6783 24.7187C77.4067 24.8026 77.8779 24.8949 77.9551 25.3814C78.015 25.6917 77.8351 25.9182 77.4409 26.0356C77.13 26.1369 76.7937 26.1351 76.4839 26.0305C76.1742 25.9259 75.9082 25.7243 75.7272 25.4569C75.6745 25.3674 75.5899 25.3001 75.4896 25.268C75.3893 25.2358 75.2804 25.241 75.1838 25.2826C75.0872 25.3241 75.0096 25.3991 74.966 25.4932C74.9224 25.5873 74.9158 25.6938 74.9475 25.7924C75.1404 26.1535 75.435 26.4529 75.7965 26.6551C76.1579 26.8573 76.571 26.9538 76.9868 26.9331C77.2333 26.9339 77.4785 26.9 77.7151 26.8324C78.0735 26.7593 78.3893 26.5537 78.5968 26.2584C78.8043 25.9632 78.8875 25.601 78.829 25.2472C78.5977 24.1064 77.5438 23.989 76.7726 23.8967Z" fill="white" />' +
		'<path d="M81.3993 21.9267H80.8509V20.8363C80.8527 20.7812 80.8421 20.7263 80.8199 20.6756C80.7977 20.6248 80.7644 20.5795 80.7224 20.5427C80.6405 20.4628 80.5296 20.418 80.4139 20.418C80.2983 20.418 80.1874 20.4628 80.1055 20.5427C80.0634 20.5795 80.0301 20.6248 80.0079 20.6756C79.9857 20.7263 79.9751 20.7812 79.9769 20.8363V21.9267H79.4371C79.3796 21.9259 79.3226 21.9366 79.2695 21.9583C79.2165 21.9799 79.1685 22.012 79.1286 22.0525C79.0866 22.0893 79.0533 22.1346 79.0311 22.1853C79.0089 22.2361 78.9983 22.2909 79.0001 22.3461C78.9976 22.4026 79.0079 22.4589 79.0301 22.5111C79.0523 22.5632 79.0859 22.61 79.1286 22.6481C79.1685 22.6886 79.2165 22.7207 79.2695 22.7423C79.3226 22.7639 79.3796 22.7747 79.4371 22.7739H79.9855V24.8708C79.9863 24.8848 79.9863 24.8988 79.9855 24.9127V25.6928C79.9642 25.8526 79.9787 26.0149 80.0281 26.1686C80.0776 26.3223 80.1607 26.4636 80.2716 26.5826C80.3826 26.7016 80.5187 26.7955 80.6706 26.8576C80.8225 26.9198 80.9863 26.9488 81.1508 26.9426C81.2644 26.9426 81.3734 26.8984 81.4537 26.8197C81.5341 26.7411 81.5792 26.6344 81.5792 26.5232C81.5792 26.4119 81.5341 26.3053 81.4537 26.2266C81.3734 26.148 81.2644 26.1038 81.1508 26.1038C81.0051 26.1038 80.8338 26.1038 80.8338 25.6844V24.9127C80.8338 24.9127 80.8338 24.9127 80.8338 24.8708V22.7739H81.3993C81.4568 22.7747 81.5138 22.7639 81.5669 22.7423C81.6199 22.7207 81.6679 22.6886 81.7078 22.6481C81.7505 22.61 81.7841 22.5632 81.8063 22.5111C81.8285 22.4589 81.8388 22.4026 81.8363 22.3461C81.8381 22.2909 81.8275 22.2361 81.8053 22.1853C81.7831 22.1346 81.7498 22.0893 81.7078 22.0525C81.6679 22.012 81.6199 21.9799 81.5669 21.9583C81.5138 21.9366 81.4568 21.9259 81.3993 21.9267Z" fill="white" />' +
		'<path d="M47.6924 23.4856C47.554 23.3572 47.3947 23.2523 47.2211 23.1753C47.0414 23.0939 46.845 23.0537 46.647 23.0578C46.4269 23.0577 46.2109 23.1157 46.0215 23.2256C45.8993 23.2921 45.7845 23.3708 45.6788 23.4604V22.4288C45.6801 22.3636 45.6555 22.3004 45.6102 22.2526C45.5856 22.2283 45.5562 22.2089 45.5238 22.1958C45.4915 22.1826 45.4568 22.1758 45.4217 22.1758C45.3867 22.1758 45.352 22.1826 45.3196 22.1958C45.2873 22.2089 45.2579 22.2283 45.2332 22.2526C45.208 22.2747 45.188 22.3019 45.1747 22.3323C45.1614 22.3627 45.155 22.3957 45.1561 22.4288V25.7167C45.1559 25.7509 45.1627 25.7849 45.1759 25.8165C45.1891 25.8482 45.2086 25.877 45.2332 25.9013C45.2851 25.9467 45.3522 25.9717 45.4217 25.9717C45.4913 25.9717 45.5584 25.9467 45.6102 25.9013C45.6541 25.8493 45.6783 25.7841 45.6788 25.7167V25.6412C45.7862 25.7256 45.9043 25.7961 46.0301 25.8509C46.2219 25.9324 46.4294 25.9724 46.6385 25.9684C46.8363 25.9738 47.0331 25.9386 47.2161 25.8649C47.3991 25.7912 47.5643 25.6807 47.7009 25.5406C47.8307 25.4089 47.9351 25.2555 48.0094 25.0877C48.0917 24.9114 48.1327 24.7194 48.1294 24.5257C48.1294 24.3296 48.0886 24.1355 48.0094 23.9553C47.933 23.7816 47.8257 23.6225 47.6924 23.4856ZM46.27 25.3896C46.1595 25.3463 46.0579 25.2838 45.9701 25.2051C45.8846 25.121 45.8124 25.0249 45.7559 24.9199C45.7055 24.8086 45.6764 24.6892 45.6702 24.5676V24.5257C45.6763 24.396 45.7053 24.2683 45.7559 24.1482C45.8102 24.0369 45.8825 23.9349 45.9701 23.8463C46.0551 23.762 46.1573 23.6962 46.27 23.6534C46.5066 23.5609 46.7703 23.5609 47.0069 23.6534C47.122 23.7004 47.2268 23.7687 47.3154 23.8547C47.4012 23.943 47.4708 24.0451 47.521 24.1566C47.5719 24.2733 47.5981 24.3988 47.5981 24.5257C47.6 24.65 47.5737 24.7732 47.521 24.8863C47.4736 24.9994 47.4038 25.1021 47.3155 25.1885C47.2273 25.2749 47.1224 25.3432 47.0069 25.3896C46.8908 25.4395 46.7653 25.4653 46.6385 25.4653C46.5116 25.4653 46.3862 25.4395 46.27 25.3896Z" fill="white" />' +
		'<path d="M55.7108 2.60773C56.3307 2.60773 56.8333 2.11579 56.8333 1.50894C56.8333 0.9021 56.3307 0.410156 55.7108 0.410156C55.0909 0.410156 54.5884 0.9021 54.5884 1.50894C54.5884 2.11579 55.0909 2.60773 55.7108 2.60773Z" fill="white" />' +
		'<path d="M50.6049 22.6058C50.5516 22.6053 50.4993 22.6196 50.454 22.647C50.4063 22.6748 50.3695 22.7176 50.3498 22.7685L49.6199 24.5819L48.9188 22.7685C48.8982 22.7175 48.8607 22.6747 48.8123 22.647C48.7636 22.6181 48.7073 22.6038 48.6503 22.6058C48.6136 22.604 48.5769 22.61 48.5428 22.6235C48.5087 22.637 48.478 22.6576 48.4529 22.6839C48.4059 22.735 48.3805 22.8017 48.3819 22.8704C48.3818 22.91 48.3901 22.9491 48.4063 22.9854C48.4063 23.0071 48.4263 23.0418 48.4551 23.1155C48.4839 23.1893 48.5394 23.3325 48.6126 23.5212C48.6858 23.7099 48.7812 23.955 48.8966 24.2522C49.012 24.5494 49.1495 24.903 49.3137 25.3368L48.9632 26.2436C48.9632 26.2587 48.9632 26.2739 48.9498 26.2869C48.9475 26.3042 48.9475 26.3217 48.9498 26.339C48.9498 26.4087 48.9777 26.4757 49.0275 26.5256C49.0596 26.5587 49.0996 26.5833 49.144 26.5973C49.1884 26.6112 49.2357 26.614 49.2815 26.6053C49.3272 26.5967 49.37 26.5769 49.4059 26.5478C49.4418 26.5187 49.4696 26.4812 49.4867 26.4388L50.86 22.9811C50.8775 22.9474 50.8866 22.9103 50.8867 22.8726C50.8854 22.805 50.8576 22.7406 50.809 22.6925C50.7831 22.6649 50.7516 22.6428 50.7164 22.6279C50.6813 22.6129 50.6433 22.6054 50.6049 22.6058Z" fill="white"/>' +
		'</svg>',
	expand_power_form: '<svg width="21px" height="22px" viewBox="0 0 21 22" version="1.1" >' +
		'<g class="Org-Settings" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="Group-21" transform="translate(0.759765, 0.499911)" fill="#33424E" fill-rule="nonzero">' +
		'<path d="M10.1624834,2.27541981 L3.04766596,10.8253949 L10.152206,19.156286 C10.6255219,19.7113033 10.5592897,20.544932 10.0042724,21.0182478 C9.44925516,21.4915636 8.61562647,21.4253315 8.14231066,20.8703142 L0.315807121,11.6928378 C-0.101354441,11.2036679 -0.105693382,10.485182 0.305529767,9.99100945 L8.1320333,0.585791292 C8.59861134,0.0250979825 9.4313793,-0.0511975253 9.99207261,0.415380506 C10.5527659,0.881958537 10.6290614,1.7147265 10.1624834,2.27541981 Z M19.4984209,2.16560259 L12.3836035,10.7155777 L19.4881435,19.0464688 C19.9614594,19.6014861 19.8952272,20.4351148 19.3402099,20.9084306 C18.7851927,21.3817464 17.951564,21.3155143 17.4782482,20.760497 L9.65174462,11.5830206 C9.23458306,11.0938506 9.23024412,10.3753648 9.64146727,9.88119224 L17.4679708,0.475974075 C17.9345488,-0.0847192344 18.7673168,-0.161014742 19.3280101,0.305563289 C19.8887034,0.77214132 19.9649989,1.60490928 19.4984209,2.16560259 Z" class="combined-shape"></path>' +
		'</g>' +
		'</g>' +
		'</svg>',
	slideshow_maximize: '<svg width="13" height="13" viewBox="0 0 13 13">' +
		'<path fill="#FFFFFE" fill-rule="evenodd" d="M12.443 0h-4.86a.541.541 0 1 0 0 1.083h3.591L7.491 4.766l.766.766 3.676-3.676-.016 3.56a.541.541 0 1 0 1.083 0V.543c0-.16-.066-.29-.17-.379A.538.538 0 0 0 12.442 0zM5.417 11.917H1.826l3.683-3.683-.766-.766-3.676 3.677.016-3.562a.541.541 0 1 0-1.083 0v4.875c0 .161.066.29.17.379.1.1.236.163.387.163h4.86a.541.541 0 1 0 0-1.083z"/>' +
		'</svg>',
	slideshow_minimize: '<svg width="20px" height="20px" viewBox="0 0 23 22" version="1.1" >' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="02-branching-Steps-in-Slideshow" transform="translate(-1425.000000, -157.000000)" fill="#FFFFFF" fill-rule="nonzero" stroke="#FFFFFF">' +
		'<g class="Group" transform="translate(1372.000000, 158.000000)">' +
		'<g class="Group-13" transform="translate(54.000000, 0.000000)">' +
		'<path d="M6.47313953,15.1523381 L0.915079615,20.7103981 L6.21813712e-12,19.7953184 L5.53024234,14.2650761 L2.58626288,14.2351782 L2.59940477,12.9411273 L7.76576717,12.9935949 L7.76930426,18.1171178 L6.47518692,18.1180112 L6.47313953,15.1523381 Z" class="combined-shape"></path>' +
		'<path d="M15.1545626,6.47094784 L18.1222454,6.47094784 L18.1222454,7.76506548 L12.9493121,7.76506548 L12.945775,2.58903707 L14.2398923,2.58815272 L14.2419187,5.55343307 L19.7955164,2.52700421e-15 L20.7105958,0.915079364 L15.1545626,6.47094784 Z" class="combined-shape"></path>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	playerbar_prev_button: '<svg width="12px" height="12px" viewBox="0 0 12 12" version="1.1" >' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="GuideMe-Player_slideshow-03-_new" transform="translate(-331.000000, -936.000000)" fill="#FFFFFF">' +
		'<g class="play--pssh-" transform="translate(315.000000, 925.000000)">' +
		'<polygon class="shape" points="18.8725 16.25 23.065 12.0575 22 11 16 17 22 23 23.0575 21.9425 18.8725 17.75 28 17.75 28 16.25"></polygon>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	playerbar_next_button: '<svg width="12px" height="12px" viewBox="0 0 12 12" version="1.1" >' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="GuideMe-Player_slideshow-03-_new" transform="translate(-423.000000, -936.000000)" fill="#FFFFFF">' +
		'<g class="play--pssh-" transform="translate(315.000000, 925.000000)">' +
		'<g class="ic_skip_previous-copy" transform="translate(114.000000, 17.000000) scale(-1, 1) translate(-114.000000, -17.000000) translate(102.000000, 5.000000)">' +
		'<polygon class="shape" points="18 11.25 8.8725 11.25 13.065 7.0575 12 6 6 12 12 18 13.0575 16.9425 8.8725 12.75 18 12.75"></polygon>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	slideshow_mute: '<svg width="21" height="21" viewBox="0 0 21 21">' +
		'<g fill="#FFF" fill-rule="evenodd">' +
		'<path d="M11.864 17.654l-2.996-4.286 2.996-2.996v7.282zm8.488-15.771L18.79.32 0 19.11l1.563 1.562 5.716-5.715 2.896 4.139a2.15 2.15 0 0 0 1.688.795 2.205 2.205 0 0 0 2.21-2.21V8.162l6.28-6.28zM4.125 11.858V7.734h3.892l3.845-5.497v1.885l2.172-2.172c-.093-.79-.58-1.477-1.327-1.785a2.229 2.229 0 0 0-2.408.48L6.865 5.522h-2.74c-1.219 0-2.21.992-2.21 2.21v4.422c0 .534.198 1.017.514 1.4l1.696-1.697z"/>' +
		'</g>' +
		'</svg>',
	slideshow_unmute: '<svg width="20" height="22" viewBox="0 0 20 22">' +
		'<path fill="#FFFFFE" fill-rule="evenodd" d="M14.72 4.489v1.76a4.4 4.4 0 0 1 0 8.622v1.76c2.981-.43 5.28-2.97 5.28-6.071 0-3.1-2.299-5.64-5.28-6.071zM0 7.04v7.04c0 .972.788 1.76 1.76 1.76H4.4V5.28H1.76A1.76 1.76 0 0 0 0 7.04zM12.32 0L6.16 4.107v12.906l6.16 4.107a1.76 1.76 0 0 0 1.76-1.76V1.76A1.76 1.76 0 0 0 12.32 0z"/>' +
		'</svg>',
	slideshow_video_mode: '<svg width="20px" height="14px" viewBox="0 0 20 14" version="1.1" >' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="GuideMe-Player_video02_new" transform="translate(-1138.000000, -936.000000)" fill="#FFFFFF">' +
		'<g class="Group-3-Copy-15" transform="translate(1130.000000, 925.000000)">' +
		'<g class="Group-3" transform="translate(8.000000, 8.000000)">' +
		'<path d="M14.4827586,6.29411765 L14.4827586,4.23529412 C14.4827586,3.55258824 14.02,3 13.4482759,3 L1.72413793,3 C0.771724138,3 0,6.13435294 0,10 C0,13.8656471 0.771724138,17 1.72413793,17 L13.4482759,17 C14.02,17 14.4827586,16.4474118 14.4827586,15.7647059 L14.4827586,13.7058824 L20,17 L20,3 L14.4827586,6.29411765 Z" class="Stroke-732"></path>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	slideshow_giphy_mode: '<svg width="14" height="11" viewBox="0 0 14 11">' +
		'<g fill="none" fill-rule="nonzero">' +
		'<circle cx="3.26" cy="6.802" r="3.255" fill="#FFF"/>' +
		'<circle cx="6.82" cy="5.028" r="3.255" fill="#003054" stroke="#175280" stroke-opacity=".612" stroke-width=".25"/>' +
		'<path fill="#FFF" d="M10.381 6.38a3.124 3.124 0 1 1 3.124-3.124 3.128 3.128 0 0 1-3.124 3.124z"/>' +
		'<path fill="#FFF9F9" d="M10.381.262a2.993 2.993 0 1 1-2.993 2.993A2.997 2.997 0 0 1 10.381.262zm0-.262a3.255 3.255 0 1 0 0 6.51 3.255 3.255 0 0 0 0-6.51z"/>' +
		'</g>' +
		'</svg>',
	slideshow_mode: '<svg width="15" height="14" viewBox="0 0 15 14">' +
		'<path fill="#FEFFFF" fill-rule="evenodd" d="M13.086 9.02c0 .53-.353.862-.89.862H3.284c-.537 0-.891-.332-.891-.862L2.387.824h10.706l-.007 8.196zM.74 0v.875h.875v8.313c0 1.036.72 1.75 1.75 1.75H5.99L4.24 14l1.318-.006 1.745-3.056h.875l1.744 3.056L11.24 14l-1.75-3.063h2.625c1.031 0 1.75-.713 1.75-1.75V.876h.875V0h-14zm4.294 3.294h5.412a1 1 0 0 1 1 1v2.941a1 1 0 0 1-1 1H5.034a1 1 0 0 1-1-1v-2.94a1 1 0 0 1 1-1zm-.176 4.118h5.765v-2.47l-2.306 2.47-1.153-1.853-2.306 1.853zm3.706-3.294a.412.412 0 1 0 0-.824.412.412 0 0 0 0 .824z"/>' +
		'</svg>',
	playerbar_close: '<svg width="20px" height="20px" viewBox="0 0 20 20" version="1.1" >' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="GuideMe-Player_video02_new" transform="translate(-1546.000000, -932.000000)" fill="#EFEFF5">' +
		'<path d="M1559.53562,944.65 C1559.78,944.89375 1559.78,945.29375 1559.53562,945.5375 C1559.29188,945.78125 1558.89563,945.78125 1558.65125,945.5375 L1556.00375,942.8875 L1553.3375,945.55625 C1553.09125,945.8 1552.6925,945.8 1552.44625,945.55625 C1552.20062,945.30625 1552.20062,944.90625 1552.44625,944.6625 L1555.1125,941.99375 L1552.465,939.35 C1552.22062,939.10625 1552.22062,938.70625 1552.465,938.4625 C1552.70813,938.21875 1553.10437,938.21875 1553.34875,938.4625 L1555.99625,941.1125 L1558.6825,938.425 C1558.92875,938.18125 1559.32687,938.18125 1559.57312,938.425 C1559.81875,938.675 1559.81875,939.06875 1559.57312,939.31875 L1556.8875,942.00625 L1559.53562,944.65 L1559.53562,944.65 Z M1556,932 C1550.47688,932 1546,936.475 1546,942 C1546,947.525 1550.47688,952 1556,952 C1561.52312,952 1566,947.525 1566,942 C1566,936.475 1561.52312,932 1556,932 L1556,932 Z" class="Fill-23"></path>' +
		'</g>' +
		'</g>' +
		'</svg>',
	branch_slideshow: '<svg width="26px" height="19px" viewBox="0 0 26 19" version="1.1" >' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" opacity="0.5">' +
		'<g class="02-branching-Steps-in-Slideshow" transform="translate(-708.000000, -287.000000)" fill="#FFFFFF" fill-rule="nonzero">' +
		'<g class="Group-17" transform="translate(721.000000, 296.375000) scale(1, -1) rotate(90.000000) translate(-721.000000, -296.375000) translate(712.000000, 284.000000)">' +
		'<path d="M17.9743355,3.54499151 C17.9743355,5.50285655 16.387209,7.08998302 14.429344,7.08998302 C12.4714789,7.08998302 10.8843525,5.50285655 10.8843525,3.54499151 C10.8843525,1.58714746 12.4714885,-1.50990331e-14 14.429344,-1.50990331e-14 C16.3871994,-1.50990331e-14 17.9743355,1.58714746 17.9743355,3.54499151 Z M16.7519246,3.54499151 C16.7519246,2.26226437 15.7120786,1.22241087 14.429344,1.22241087 C13.1466093,1.22241087 12.1067633,2.26226437 12.1067633,3.54499151 C12.1067633,4.82773767 13.1465978,5.86757216 14.429344,5.86757216 C15.7120901,5.86757216 16.7519246,4.82773767 16.7519246,3.54499151 Z" class="Stroke-1"></path>' +
		'<polygon class="Stroke-3" points="2.93378608 6.47877759 4.15619694 6.47877759 4.15619694 18.2444822 2.93378608 18.2444822"></polygon>' +
		'<path d="M7.08998302,3.54499151 C7.08998302,5.50285655 5.50285655,7.08998302 3.54499151,7.08998302 C1.58712647,7.08998302 -1.03828057e-12,5.50285655 -1.03828057e-12,3.54499151 C-1.03828057e-12,1.58714746 1.58713604,-1.50990331e-14 3.54499151,-1.50990331e-14 C5.50284698,-1.50990331e-14 7.08998302,1.58714746 7.08998302,3.54499151 Z M5.86757216,3.54499151 C5.86757216,2.26226437 4.82772614,1.22241087 3.54499151,1.22241087 C2.26225689,1.22241087 1.22241087,2.26226437 1.22241087,3.54499151 C1.22241087,4.82773767 2.26224535,5.86757216 3.54499151,5.86757216 C4.82773767,5.86757216 5.86757216,4.82773767 5.86757216,3.54499151 Z" class="Stroke-5"></path>' +
		'<path d="M7.08998302,21.1782835 C7.08998302,23.1361276 5.50284698,24.723275 3.54499151,24.723275 C1.58713604,24.723275 -1.03828057e-12,23.1361276 -1.03828057e-12,21.1782835 C-1.03828057e-12,19.2204185 1.58712647,17.633292 3.54499151,17.633292 C5.50285655,17.633292 7.08998302,19.2204185 7.08998302,21.1782835 Z M5.86757216,21.1782835 C5.86757216,19.8955374 4.82773767,18.8557029 3.54499151,18.8557029 C2.26224535,18.8557029 1.22241087,19.8955374 1.22241087,21.1782835 C1.22241087,22.4610107 2.26225689,23.5008642 3.54499151,23.5008642 C4.82772614,23.5008642 5.86757216,22.4610107 5.86757216,21.1782835 Z" class="Stroke-7"></path>' +
		'<path d="M13.8181385,8.63838031 L13.8181385,6.47877759 L15.0405494,6.47877759 L15.0405494,8.63838031 C15.0405494,10.5962244 13.4534134,12.1833718 11.4955579,12.1833718 L6.4787837,12.1833718 L6.4787837,10.960961 L11.4955579,10.960961 C12.7782925,10.960961 13.8181385,9.92110745 13.8181385,8.63838031 Z M6.47877759,10.960961 L6.47877759,12.1833718 C5.19603143,12.1833718 4.15619694,13.2232063 4.15619694,14.5059525 L2.93378608,14.5059525 C2.93378608,12.5480874 4.52091255,10.960961 6.47877759,10.960961 Z" class="combined-shape"></path>" +' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	icon_play_step: '<svg width="38px" height="43px" viewBox="0 0 38 43" version="1.1" >' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="Mobile" transform="translate(-129.000000, -142.000000)" fill="#ffffff">' +
		'<g class="Group-3" transform="translate(129.000000, 142.000000)">' +
		'<path d="M35.9019,23.8148 L4.3299,42.0428 C1.9489,43.4178 -0.0001,42.2928 -0.0001,39.5428 L-0.0001,3.0868 C-0.0001,0.3368 1.9489,-0.7882 4.3299,0.5868 L35.9019,18.8148 C38.2829,20.1898 38.2829,22.4398 35.9019,23.8148" class="Fill-1"></path>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	icon_pause_step: '<svg width="15px" height="21px" viewBox="0 0 15 21" version="1.1" >' +
		'<g class="Popup-Design" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="Automation-Setp-POPUP" transform="translate(-765.000000, -999.000000)" fill="#FFFFFE">' +
		'<g class="automation-step-popup-copy" transform="translate(198.000000, 736.000000)">' +
		'<path d="M580.5,263 L577.5,263 C576.672,263 576,263.672 576,264.5 L576,282.5 C576,283.328 576.672,284 577.5,284 L580.5,284 C581.328,284 582,283.328 582,282.5 L582,264.5 C582,263.672 581.328,263 580.5,263 L580.5,263 Z M571.5,263 L568.5,263 C567.672,263 567,263.672 567,264.5 L567,282.5 C567,283.328 567.672,284 568.5,284 L571.5,284 C572.328,284 573,283.328 573,282.5 L573,264.5 C573,263.672 572.328,263 571.5,263 L571.5,263 Z" class="Fill-125"></path>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	smallscreen: '<svg version="1.1" class="Capa_1" x="0px" y="0px" viewBox="0 0 28.359 28.359" style="enable-background:new 0 0 28.359 28.359;" xml:space="preserve">' +
		'<g>' +
		'<g class="c116_arrows">' +
		'<path d="M21.935,19.368h3.235c0.878-0.003,1.589-0.67,1.589-1.492c0-0.824-0.711-1.492-1.589-1.492h-6.764 c-0.879,0-1.59,0.668-1.591,1.492c0.001,0.019,0.007,0.041,0.007,0.061c0,0.027-0.007,0.057-0.007,0.086v6.673 c0,0.864,0.666,1.566,1.49,1.566c0.822-0.002,1.492-0.702,1.492-1.566v-3.252l6.018,6.02c0.582,0.583,1.525,0.583,2.108,0 c0.58-0.582,0.58-1.526,0-2.108L21.935,19.368z"/>' +
		'<path d="M11.543,17.876c-0.002-0.824-0.712-1.492-1.592-1.492H3.189c-0.877,0-1.593,0.668-1.593,1.492 c0,0.822,0.716,1.489,1.593,1.492h3.235l-5.991,5.986c-0.577,0.582-0.577,1.526,0,2.108c0.584,0.583,1.527,0.583,2.108,0 l6.019-6.02v3.252c0,0.864,0.67,1.564,1.491,1.566c0.826,0,1.491-0.702,1.491-1.566v-6.673c0-0.029-0.008-0.059-0.008-0.086 C11.535,17.917,11.541,17.895,11.543,17.876z"/>' +
		'<path d="M16.815,10.479c0.001,0.824,0.712,1.491,1.591,1.491h6.764c0.878,0,1.589-0.667,1.589-1.491 c0-0.822-0.711-1.487-1.589-1.489h-3.235l5.989-5.987c0.58-0.584,0.58-1.528,0-2.109c-0.583-0.582-1.526-0.582-2.108,0 l-6.018,6.02V3.662c0-0.867-0.67-1.568-1.492-1.568c-0.824,0-1.49,0.701-1.49,1.568v6.671c0,0.03,0.007,0.057,0.007,0.087 C16.822,10.44,16.816,10.456,16.815,10.479z"/>' +
		'<path d="M10.052,2.094c-0.821,0-1.491,0.701-1.491,1.568v3.251l-6.019-6.02c-0.581-0.582-1.524-0.582-2.108,0 c-0.577,0.581-0.577,1.525,0,2.109l5.991,5.987H3.189c-0.876,0.003-1.592,0.668-1.592,1.49c0,0.824,0.716,1.491,1.593,1.491h6.761 c0.88,0,1.59-0.667,1.592-1.491c-0.002-0.023-0.008-0.039-0.008-0.06c0-0.03,0.008-0.057,0.008-0.087v-6.67 C11.543,2.795,10.878,2.094,10.052,2.094z"/>' +
		'</g>' +
		'<g class="Capa_1_156_">' +
		'</g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'</svg>',
	play_step_audio_off: '<svg width="19" height="17" viewBox="0 0 19 17" fill="none">' +
		'<mask class="path-1-outside-1" maskUnits="userSpaceOnUse" x="0" y="-0.366699" width="19" height="17" fill="black">' +
		'<rect fill="white" y="-0.366699" width="19" height="17"/>' +
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M10.0755 15.5729C10.1334 15.613 10.2007 15.6333 10.2682 15.6333C10.3235 15.6333 10.3789 15.6197 10.4295 15.5922C10.542 15.5312 10.6122 15.4116 10.6122 15.2815V0.985114C10.6122 0.852045 10.5388 0.730341 10.4224 0.670632C10.3062 0.611029 10.1669 0.623485 10.0625 0.703072C10.0229 0.733296 6.12166 3.70627 3.79778 5.31987H1.34404C1.15403 5.31987 1 5.47743 1 5.67172V10.5949C1 10.7892 1.15403 10.9467 1.34404 10.9467H3.79765C4.92723 11.7312 5.91912 12.4876 6.87919 13.2197L6.87993 13.2202C7.87115 13.976 8.89613 14.7576 10.0755 15.5729ZM3.90323 10.2431H1.68808V6.02361H3.90333C3.97204 6.02361 4.03916 6.00256 4.09603 5.96323C5.90625 4.7116 8.7392 2.58106 9.92413 1.68434V14.6139C8.97669 13.9413 8.12158 13.2893 7.29049 12.6555C6.29956 11.8999 5.27491 11.1186 4.09593 10.3034C4.03902 10.2641 3.9719 10.2431 3.90323 10.2431ZM17.9084 6.53378L15.9422 8.50005L17.9084 10.4662C18.0305 10.5883 18.0305 10.7863 17.9084 10.9084C17.8473 10.9695 17.7673 11 17.6873 11C17.6074 11 17.5273 10.9695 17.4662 10.9084L15.5001 8.94211L13.5338 10.9084C13.4727 10.9695 13.3926 11 13.3127 11C13.2327 11 13.1527 10.9695 13.0916 10.9085C12.9695 10.7864 12.9695 10.5884 13.0916 10.4663L15.0579 8.50005L13.0916 6.53378C12.9695 6.41172 12.9695 6.21368 13.0916 6.09162C13.2138 5.96946 13.4116 5.96946 13.5338 6.09162L15.5001 8.05789L17.4662 6.09162C17.5884 5.96946 17.7862 5.96946 17.9084 6.09162C18.0305 6.21368 18.0305 6.41172 17.9084 6.53378Z"/>' +
		'</mask>' +
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M10.0755 15.5729C10.1334 15.613 10.2007 15.6333 10.2682 15.6333C10.3235 15.6333 10.3789 15.6197 10.4295 15.5922C10.542 15.5312 10.6122 15.4116 10.6122 15.2815V0.985114C10.6122 0.852045 10.5388 0.730341 10.4224 0.670632C10.3062 0.611029 10.1669 0.623485 10.0625 0.703072C10.0229 0.733296 6.12166 3.70627 3.79778 5.31987H1.34404C1.15403 5.31987 1 5.47743 1 5.67172V10.5949C1 10.7892 1.15403 10.9467 1.34404 10.9467H3.79765C4.92723 11.7312 5.91912 12.4876 6.87919 13.2197L6.87993 13.2202C7.87115 13.976 8.89613 14.7576 10.0755 15.5729ZM3.90323 10.2431H1.68808V6.02361H3.90333C3.97204 6.02361 4.03916 6.00256 4.09603 5.96323C5.90625 4.7116 8.7392 2.58106 9.92413 1.68434V14.6139C8.97669 13.9413 8.12158 13.2893 7.29049 12.6555C6.29956 11.8999 5.27491 11.1186 4.09593 10.3034C4.03902 10.2641 3.9719 10.2431 3.90323 10.2431ZM17.9084 6.53378L15.9422 8.50005L17.9084 10.4662C18.0305 10.5883 18.0305 10.7863 17.9084 10.9084C17.8473 10.9695 17.7673 11 17.6873 11C17.6074 11 17.5273 10.9695 17.4662 10.9084L15.5001 8.94211L13.5338 10.9084C13.4727 10.9695 13.3926 11 13.3127 11C13.2327 11 13.1527 10.9695 13.0916 10.9085C12.9695 10.7864 12.9695 10.5884 13.0916 10.4663L15.0579 8.50005L13.0916 6.53378C12.9695 6.41172 12.9695 6.21368 13.0916 6.09162C13.2138 5.96946 13.4116 5.96946 13.5338 6.09162L15.5001 8.05789L17.4662 6.09162C17.5884 5.96946 17.7862 5.96946 17.9084 6.09162C18.0305 6.21368 18.0305 6.41172 17.9084 6.53378Z" fill="#757575"/>' +
		'<path d="M10.0755 15.5729L10.36 15.1617L10.3598 15.1616L10.0755 15.5729ZM10.4295 15.5922L10.1909 15.1528L10.1908 15.1529L10.4295 15.5922ZM10.4224 0.670632L10.6508 0.225813L10.6505 0.225677L10.4224 0.670632ZM10.0625 0.703072L10.3657 1.10066L10.3657 1.10063L10.0625 0.703072ZM3.79778 5.31987V5.81987H3.95435L4.08296 5.73058L3.79778 5.31987ZM3.79765 10.9467L4.08287 10.5361L3.95424 10.4467H3.79765V10.9467ZM6.87919 13.2197L6.57601 13.6173L6.57612 13.6173L6.87919 13.2197ZM6.87993 13.2202L7.1831 12.8226L7.183 12.8225L6.87993 13.2202ZM1.68808 10.2431H1.18808V10.7431H1.68808V10.2431ZM1.68808 6.02361V5.52361H1.18808V6.02361H1.68808ZM4.09603 5.96323L3.81167 5.55196L3.8116 5.55201L4.09603 5.96323ZM9.92413 1.68434H10.4241V0.678921L9.62241 1.28564L9.92413 1.68434ZM9.92413 14.6139L9.6347 15.0216L10.4241 15.582V14.6139H9.92413ZM7.29049 12.6555L7.59367 12.258L7.59367 12.258L7.29049 12.6555ZM4.09593 10.3034L4.38028 9.89217L4.38025 9.89215L4.09593 10.3034ZM15.9422 8.50005L15.5886 8.14651L15.2351 8.50006L15.5886 8.85361L15.9422 8.50005ZM17.9084 6.53378L17.555 6.18009L17.5548 6.18024L17.9084 6.53378ZM17.9084 10.4662L17.5548 10.8198L17.555 10.8199L17.9084 10.4662ZM17.9084 10.9084L17.555 10.5547L17.5548 10.5548L17.9084 10.9084ZM17.4662 10.9084L17.8198 10.5548L17.8198 10.5548L17.4662 10.9084ZM15.5001 8.94211L15.8536 8.58856L15.5001 8.235L15.1465 8.58855L15.5001 8.94211ZM13.5338 10.9084L13.1802 10.5548L13.1802 10.5548L13.5338 10.9084ZM13.0916 10.9085L12.7382 11.2622L12.7384 11.2623L13.0916 10.9085ZM13.0916 10.4663L13.445 10.82L13.4452 10.8199L13.0916 10.4663ZM15.0579 8.50005L15.4115 8.85361L15.765 8.50005L15.4115 8.1465L15.0579 8.50005ZM13.0916 6.53378L13.4452 6.18023L13.445 6.18009L13.0916 6.53378ZM13.0916 6.09162L13.445 6.44532L13.4452 6.44517L13.0916 6.09162ZM13.5338 6.09162L13.1802 6.44517L13.1802 6.44518L13.5338 6.09162ZM15.5001 8.05789L15.1465 8.41145L15.5001 8.765L15.8536 8.41144L15.5001 8.05789ZM17.4662 6.09162L17.1127 5.73807L17.1127 5.73808L17.4662 6.09162ZM17.9084 6.09162L17.5548 6.44517L17.555 6.44532L17.9084 6.09162ZM10.2682 15.1333C10.3011 15.1333 10.3333 15.1433 10.36 15.1617L9.79098 15.9841C9.93362 16.0828 10.1004 16.1333 10.2682 16.1333V15.1333ZM10.1908 15.1529C10.2145 15.14 10.2413 15.1333 10.2682 15.1333V16.1333C10.4056 16.1333 10.5433 16.0994 10.6682 16.0315L10.1908 15.1529ZM10.1122 15.2815C10.1122 15.2324 10.1387 15.1812 10.1909 15.1528L10.6681 16.0316C10.9452 15.8811 11.1122 15.5908 11.1122 15.2815H10.1122ZM10.1122 0.985114V15.2815H11.1122V0.985114H10.1122ZM10.1941 1.11545C10.14 1.08766 10.1122 1.03536 10.1122 0.985114H11.1122C11.1122 0.668733 10.9376 0.373023 10.6508 0.225813L10.1941 1.11545ZM10.3657 1.10063C10.3173 1.13753 10.25 1.14412 10.1944 1.11559L10.6505 0.225677C10.3623 0.0779435 10.0164 0.109434 9.75928 0.305513L10.3657 1.10063ZM4.08296 5.73058C6.41776 4.10938 10.3283 1.12917 10.3657 1.10066L9.75931 0.305489C9.71744 0.337422 5.82555 3.30316 3.51261 4.90917L4.08296 5.73058ZM1.34404 5.81987H3.79778V4.81987H1.34404V5.81987ZM1.5 5.67172C1.5 5.7429 1.44072 5.81987 1.34404 5.81987V4.81987C0.86733 4.81987 0.5 5.21196 0.5 5.67172H1.5ZM1.5 10.5949V5.67172H0.5V10.5949H1.5ZM1.34404 10.4467C1.44072 10.4467 1.5 10.5237 1.5 10.5949H0.5C0.5 11.0546 0.86733 11.4467 1.34404 11.4467V10.4467ZM3.79765 10.4467H1.34404V11.4467H3.79765V10.4467ZM7.18237 12.8221C6.22304 12.0905 5.22283 11.3278 4.08287 10.5361L3.51243 11.3574C4.63163 12.1347 5.6152 12.8846 6.57601 13.6173L7.18237 12.8221ZM7.183 12.8225L7.18226 12.822L6.57612 13.6173L6.57686 13.6179L7.183 12.8225ZM10.3598 15.1616C9.19134 14.3538 8.17504 13.579 7.1831 12.8226L6.57676 13.6178C7.56726 14.3731 8.60092 15.1613 9.79114 15.9842L10.3598 15.1616ZM1.68808 10.7431H3.90323V9.74307H1.68808V10.7431ZM1.18808 6.02361V10.2431H2.18808V6.02361H1.18808ZM3.90333 5.52361H1.68808V6.52361H3.90333V5.52361ZM3.8116 5.55201C3.83767 5.53398 3.86963 5.52361 3.90333 5.52361V6.52361C4.07444 6.52361 4.24065 6.47115 4.38046 6.37444L3.8116 5.55201ZM9.62241 1.28564C8.43606 2.18343 5.61161 4.30744 3.81167 5.55196L4.38039 6.37449C6.2009 5.11576 9.04234 2.97869 10.2259 2.08304L9.62241 1.28564ZM10.4241 14.6139V1.68434H9.42413V14.6139H10.4241ZM6.98731 13.0531C7.81773 13.6864 8.6793 14.3434 9.6347 15.0216L10.2136 14.2062C9.27408 13.5392 8.42544 12.8922 7.59367 12.258L6.98731 13.0531ZM3.81157 10.7147C4.97969 11.5224 5.99566 12.297 6.98731 13.0531L7.59367 12.258C6.60345 11.5029 5.57013 10.7148 4.38028 9.89217L3.81157 10.7147ZM3.90323 10.7431C3.86945 10.7431 3.83755 10.7327 3.8116 10.7147L4.38025 9.89215C4.2405 9.79554 4.07435 9.74307 3.90323 9.74307V10.7431ZM16.2958 8.8536L18.2619 6.88733L17.5548 6.18024L15.5886 8.14651L16.2958 8.8536ZM18.2619 10.1127L16.2957 8.1465L15.5886 8.85361L17.5548 10.8198L18.2619 10.1127ZM18.2618 11.2621C18.5794 10.9447 18.5794 10.4299 18.2618 10.1125L17.555 10.8199C17.4817 10.7467 17.4817 10.6279 17.555 10.5547L18.2618 11.2621ZM17.6873 11.5C17.8946 11.5 18.1034 11.4205 18.2619 11.2619L17.5548 10.5548C17.5912 10.5184 17.64 10.5 17.6873 10.5V11.5ZM17.1127 11.2619C17.2712 11.4205 17.4801 11.5 17.6873 11.5V10.5C17.7347 10.5 17.7834 10.5184 17.8198 10.5548L17.1127 11.2619ZM15.1465 9.29565L17.1127 11.2619L17.8198 10.5548L15.8536 8.58856L15.1465 9.29565ZM13.8873 11.2619L15.8536 9.29566L15.1465 8.58855L13.1802 10.5548L13.8873 11.2619ZM13.3127 11.5C13.5199 11.5 13.7288 11.4205 13.8873 11.2619L13.1802 10.5548C13.2166 10.5184 13.2653 10.5 13.3127 10.5V11.5ZM12.7384 11.2623C12.8968 11.4205 13.1055 11.5 13.3127 11.5V10.5C13.36 10.5 13.4086 10.5184 13.4449 10.5546L12.7384 11.2623ZM12.7382 10.1126C12.4206 10.43 12.4206 10.9448 12.7382 11.2622L13.445 10.5548C13.5183 10.628 13.5183 10.7468 13.445 10.82L12.7382 10.1126ZM14.7044 8.1465L12.7381 10.1128L13.4452 10.8199L15.4115 8.85361L14.7044 8.1465ZM12.7381 6.88734L14.7044 8.85361L15.4115 8.1465L13.4452 6.18023L12.7381 6.88734ZM12.7382 5.73792C12.4206 6.05528 12.4206 6.57013 12.7382 6.88748L13.445 6.18009C13.5183 6.25332 13.5183 6.37208 13.445 6.44532L12.7382 5.73792ZM13.8873 5.73808C13.5699 5.42064 13.0555 5.42064 12.7381 5.73808L13.4452 6.44517C13.3721 6.51828 13.2533 6.51828 13.1802 6.44517L13.8873 5.73808ZM15.8536 7.70434L13.8873 5.73807L13.1802 6.44518L15.1465 8.41145L15.8536 7.70434ZM17.1127 5.73808L15.1465 7.70435L15.8536 8.41144L17.8198 6.44517L17.1127 5.73808ZM18.2619 5.73807C17.9445 5.42064 17.4301 5.42064 17.1127 5.73807L17.8198 6.44517C17.7467 6.51828 17.6279 6.51828 17.5548 6.44517L18.2619 5.73807ZM18.2618 6.88748C18.5794 6.57013 18.5794 6.05528 18.2618 5.73793L17.555 6.44532C17.4817 6.37208 17.4817 6.25332 17.555 6.18009L18.2618 6.88748Z" fill="#757575" mask="url(#path-1-outside-1)"/>' +
		'</svg>',
	play_step_audio_on: '<svg width="19" height="17" viewBox="0 0 19 17" fill="none">' +
		'<mask class="path-1-outside-1" maskUnits="userSpaceOnUse" x="0" y="-0.366699" width="19" height="17" fill="black">' +
		'<rect fill="white" y="-0.366699" width="19" height="17"/>' +
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M10.2682 15.6333C10.2007 15.6333 10.1334 15.613 10.0755 15.5729C8.89613 14.7576 7.87115 13.976 6.87993 13.2202L6.87919 13.2197C5.91912 12.4876 4.92723 11.7312 3.79765 10.9467H1.34404C1.15403 10.9467 1 10.7892 1 10.5949V5.67172C1 5.47743 1.15403 5.31987 1.34404 5.31987H3.79778C6.12166 3.70627 10.0229 0.733296 10.0625 0.703072C10.1669 0.623485 10.3062 0.611029 10.4224 0.670632C10.5388 0.730341 10.6122 0.852045 10.6122 0.985114V15.2815C10.6122 15.4116 10.542 15.5312 10.4295 15.5922C10.3789 15.6197 10.3235 15.6333 10.2682 15.6333ZM1.68808 10.2431H3.90323C3.9719 10.2431 4.03902 10.2641 4.09593 10.3034C5.27491 11.1186 6.29956 11.8999 7.29049 12.6555C8.12158 13.2893 8.97669 13.9413 9.92413 14.6139V1.68434C8.7392 2.58106 5.90625 4.7116 4.09603 5.96323C4.03916 6.00256 3.97204 6.02361 3.90333 6.02361H1.68808V10.2431ZM13.2438 10.9244C13.155 10.9244 13.0663 10.8895 12.999 10.8197C12.8655 10.6814 12.8668 10.4587 13.0021 10.3221C13.5813 9.73721 13.9003 8.95988 13.9003 8.13331C13.9003 7.30668 13.5813 6.52938 13.002 5.94458C12.8668 5.80806 12.8654 5.58527 12.9989 5.44696C13.1324 5.30865 13.3501 5.30724 13.4854 5.44372C14.1967 6.16181 14.5884 7.117 14.5884 8.13328C14.5884 9.14952 14.1967 10.1047 13.4855 10.8228C13.4184 10.8906 13.3311 10.9244 13.2438 10.9244ZM15.601 12.4459C15.6683 12.5157 15.7571 12.5506 15.8458 12.5506C15.9331 12.5506 16.0205 12.5168 16.0875 12.4491C17.229 11.2966 17.8576 9.76397 17.8576 8.13354C17.8576 6.50315 17.229 4.97047 16.0875 3.81778C15.9523 3.68126 15.7344 3.68267 15.6009 3.82095C15.4674 3.95926 15.4688 4.18201 15.604 4.31856C16.6136 5.33797 17.1696 6.69283 17.1696 8.13354C17.1696 9.57429 16.6136 10.9291 15.6041 11.9483C15.4689 12.0849 15.4675 12.3076 15.601 12.4459Z"/>' +
		'</mask>' +
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M10.2682 15.6333C10.2007 15.6333 10.1334 15.613 10.0755 15.5729C8.89613 14.7576 7.87115 13.976 6.87993 13.2202L6.87919 13.2197C5.91912 12.4876 4.92723 11.7312 3.79765 10.9467H1.34404C1.15403 10.9467 1 10.7892 1 10.5949V5.67172C1 5.47743 1.15403 5.31987 1.34404 5.31987H3.79778C6.12166 3.70627 10.0229 0.733296 10.0625 0.703072C10.1669 0.623485 10.3062 0.611029 10.4224 0.670632C10.5388 0.730341 10.6122 0.852045 10.6122 0.985114V15.2815C10.6122 15.4116 10.542 15.5312 10.4295 15.5922C10.3789 15.6197 10.3235 15.6333 10.2682 15.6333ZM1.68808 10.2431H3.90323C3.9719 10.2431 4.03902 10.2641 4.09593 10.3034C5.27491 11.1186 6.29956 11.8999 7.29049 12.6555C8.12158 13.2893 8.97669 13.9413 9.92413 14.6139V1.68434C8.7392 2.58106 5.90625 4.7116 4.09603 5.96323C4.03916 6.00256 3.97204 6.02361 3.90333 6.02361H1.68808V10.2431ZM13.2438 10.9244C13.155 10.9244 13.0663 10.8895 12.999 10.8197C12.8655 10.6814 12.8668 10.4587 13.0021 10.3221C13.5813 9.73721 13.9003 8.95988 13.9003 8.13331C13.9003 7.30668 13.5813 6.52938 13.002 5.94458C12.8668 5.80806 12.8654 5.58527 12.9989 5.44696C13.1324 5.30865 13.3501 5.30724 13.4854 5.44372C14.1967 6.16181 14.5884 7.117 14.5884 8.13328C14.5884 9.14952 14.1967 10.1047 13.4855 10.8228C13.4184 10.8906 13.3311 10.9244 13.2438 10.9244ZM15.601 12.4459C15.6683 12.5157 15.7571 12.5506 15.8458 12.5506C15.9331 12.5506 16.0205 12.5168 16.0875 12.4491C17.229 11.2966 17.8576 9.76397 17.8576 8.13354C17.8576 6.50315 17.229 4.97047 16.0875 3.81778C15.9523 3.68126 15.7344 3.68267 15.6009 3.82095C15.4674 3.95926 15.4688 4.18201 15.604 4.31856C16.6136 5.33797 17.1696 6.69283 17.1696 8.13354C17.1696 9.57429 16.6136 10.9291 15.6041 11.9483C15.4689 12.0849 15.4675 12.3076 15.601 12.4459Z" fill="#757575"/>' +
		'<path d="M10.0755 15.5729L10.36 15.1617L10.3598 15.1616L10.0755 15.5729ZM6.87993 13.2202L7.1831 12.8226L7.183 12.8225L6.87993 13.2202ZM6.87919 13.2197L6.57601 13.6173L6.57612 13.6173L6.87919 13.2197ZM3.79765 10.9467L4.08287 10.5361L3.95424 10.4467H3.79765V10.9467ZM3.79778 5.31987V5.81987H3.95435L4.08296 5.73058L3.79778 5.31987ZM10.0625 0.703072L10.3657 1.10066L10.3657 1.10063L10.0625 0.703072ZM10.4224 0.670632L10.6508 0.225813L10.6505 0.225677L10.4224 0.670632ZM10.4295 15.5922L10.1909 15.1528L10.1908 15.1529L10.4295 15.5922ZM1.68808 10.2431H1.18808V10.7431H1.68808V10.2431ZM4.09593 10.3034L4.38028 9.89217L4.38025 9.89215L4.09593 10.3034ZM7.29049 12.6555L7.59367 12.258L7.59367 12.258L7.29049 12.6555ZM9.92413 14.6139L9.6347 15.0216L10.4241 15.582V14.6139H9.92413ZM9.92413 1.68434H10.4241V0.678921L9.62241 1.28564L9.92413 1.68434ZM4.09603 5.96323L3.81167 5.55196L3.8116 5.55201L4.09603 5.96323ZM1.68808 6.02361V5.52361H1.18808V6.02361H1.68808ZM12.999 10.8197L12.6392 11.167L12.6392 11.167L12.999 10.8197ZM13.0021 10.3221L13.3573 10.674L13.3574 10.674L13.0021 10.3221ZM13.002 5.94458L13.3572 5.5927L13.3572 5.59269L13.002 5.94458ZM12.9989 5.44696L12.6392 5.09964L12.6391 5.09974L12.9989 5.44696ZM13.4854 5.44372L13.8407 5.09185L13.8405 5.09174L13.4854 5.44372ZM13.4855 10.8228L13.1302 10.471L13.1301 10.4712L13.4855 10.8228ZM15.601 12.4459L15.9608 12.0987L15.9607 12.0987L15.601 12.4459ZM16.0875 12.4491L15.7323 12.0973L15.7322 12.0974L16.0875 12.4491ZM16.0875 3.81778L16.4427 3.46595L16.4427 3.46593L16.0875 3.81778ZM15.6009 3.82095L15.2412 3.47368L15.2412 3.47372L15.6009 3.82095ZM15.604 4.31856L15.2487 4.67036L15.2488 4.6704L15.604 4.31856ZM15.6041 11.9483L15.9593 12.3002L15.9594 12.3002L15.6041 11.9483ZM9.79098 15.9841C9.93362 16.0828 10.1004 16.1333 10.2682 16.1333V15.1333C10.3011 15.1333 10.3333 15.1433 10.36 15.1617L9.79098 15.9841ZM6.57676 13.6178C7.56726 14.3731 8.60092 15.1613 9.79114 15.9842L10.3598 15.1616C9.19134 14.3538 8.17504 13.579 7.1831 12.8226L6.57676 13.6178ZM6.57612 13.6173L6.57686 13.6179L7.183 12.8225L7.18226 12.822L6.57612 13.6173ZM3.51243 11.3574C4.63163 12.1347 5.6152 12.8846 6.57601 13.6173L7.18237 12.8221C6.22304 12.0905 5.22283 11.3278 4.08287 10.5361L3.51243 11.3574ZM1.34404 11.4467H3.79765V10.4467H1.34404V11.4467ZM0.5 10.5949C0.5 11.0546 0.86733 11.4467 1.34404 11.4467V10.4467C1.44072 10.4467 1.5 10.5237 1.5 10.5949H0.5ZM0.5 5.67172V10.5949H1.5V5.67172H0.5ZM1.34404 4.81987C0.86733 4.81987 0.5 5.21196 0.5 5.67172H1.5C1.5 5.7429 1.44072 5.81987 1.34404 5.81987V4.81987ZM3.79778 4.81987H1.34404V5.81987H3.79778V4.81987ZM9.75931 0.305489C9.71744 0.337422 5.82555 3.30316 3.51261 4.90917L4.08296 5.73058C6.41776 4.10938 10.3283 1.12917 10.3657 1.10066L9.75931 0.305489ZM10.6505 0.225677C10.3623 0.0779435 10.0164 0.109434 9.75928 0.305513L10.3657 1.10063C10.3173 1.13753 10.25 1.14412 10.1944 1.11559L10.6505 0.225677ZM11.1122 0.985114C11.1122 0.668733 10.9376 0.373023 10.6508 0.225813L10.1941 1.11545C10.14 1.08766 10.1122 1.03536 10.1122 0.985114H11.1122ZM11.1122 15.2815V0.985114H10.1122V15.2815H11.1122ZM10.6681 16.0316C10.9452 15.8811 11.1122 15.5908 11.1122 15.2815H10.1122C10.1122 15.2324 10.1387 15.1812 10.1909 15.1528L10.6681 16.0316ZM10.2682 16.1333C10.4056 16.1333 10.5433 16.0994 10.6682 16.0315L10.1908 15.1529C10.2145 15.14 10.2413 15.1333 10.2682 15.1333V16.1333ZM3.90323 9.74307H1.68808V10.7431H3.90323V9.74307ZM4.38025 9.89215C4.2405 9.79554 4.07435 9.74307 3.90323 9.74307V10.7431C3.86945 10.7431 3.83755 10.7327 3.8116 10.7147L4.38025 9.89215ZM7.59367 12.258C6.60345 11.5029 5.57013 10.7148 4.38028 9.89217L3.81157 10.7147C4.97969 11.5224 5.99566 12.297 6.98731 13.0531L7.59367 12.258ZM10.2136 14.2062C9.27408 13.5392 8.42544 12.8922 7.59367 12.258L6.98731 13.0531C7.81773 13.6864 8.6793 14.3434 9.6347 15.0216L10.2136 14.2062ZM9.42413 1.68434V14.6139H10.4241V1.68434H9.42413ZM4.38039 6.37449C6.2009 5.11576 9.04234 2.97869 10.2259 2.08304L9.62241 1.28564C8.43606 2.18343 5.61161 4.30744 3.81167 5.55196L4.38039 6.37449ZM3.90333 6.52361C4.07444 6.52361 4.24065 6.47115 4.38046 6.37444L3.8116 5.55201C3.83767 5.53398 3.86963 5.52361 3.90333 5.52361V6.52361ZM1.68808 6.52361H3.90333V5.52361H1.68808V6.52361ZM2.18808 10.2431V6.02361H1.18808V10.2431H2.18808ZM12.6392 11.167C12.8034 11.3371 13.0232 11.4244 13.2438 11.4244V10.4244C13.2868 10.4244 13.3292 10.4419 13.3587 10.4725L12.6392 11.167ZM12.6468 9.97028C12.3202 10.3 12.3171 10.8333 12.6392 11.167L13.3587 10.4725C13.4138 10.5296 13.4135 10.6173 13.3573 10.674L12.6468 9.97028ZM13.4003 8.13331C13.4003 8.82872 13.1329 9.47944 12.6468 9.97029L13.3574 10.674C14.0298 9.99498 14.4003 9.09103 14.4003 8.13331H13.4003ZM12.6468 6.29645C13.1329 6.78718 13.4003 7.43784 13.4003 8.13331H14.4003C14.4003 7.17552 14.0297 6.27158 13.3572 5.5927L12.6468 6.29645ZM12.6391 5.09974C12.317 5.43348 12.3202 5.96676 12.6468 6.29647L13.3572 5.59269C13.4134 5.64936 13.4138 5.73706 13.3586 5.79418L12.6391 5.09974ZM13.8405 5.09174C13.5078 4.75604 12.9675 4.75964 12.6392 5.09964L13.3585 5.79427C13.2973 5.85765 13.1925 5.85844 13.1303 5.7957L13.8405 5.09174ZM15.0884 8.13328C15.0884 6.98605 14.6453 5.90416 13.8407 5.09185L13.1302 5.79559C13.7482 6.41946 14.0884 7.24796 14.0884 8.13328H15.0884ZM13.8408 11.1747C14.6453 10.3623 15.0884 9.28048 15.0884 8.13328H14.0884C14.0884 9.01856 13.7482 9.84704 13.1302 10.471L13.8408 11.1747ZM13.2438 11.4244C13.4608 11.4244 13.6773 11.3398 13.8409 11.1745L13.1301 10.4712C13.1596 10.4414 13.2013 10.4244 13.2438 10.4244V11.4244ZM15.8458 12.0506C15.8889 12.0506 15.9312 12.0681 15.9608 12.0987L15.2412 12.7931C15.4053 12.9632 15.6252 13.0506 15.8458 13.0506V12.0506ZM15.7322 12.0974C15.7618 12.0675 15.8035 12.0506 15.8458 12.0506V13.0506C16.0628 13.0506 16.2793 12.9661 16.4429 12.8009L15.7322 12.0974ZM17.3576 8.13354C17.3576 9.63294 16.7805 11.0389 15.7323 12.0973L16.4428 12.801C17.6775 11.5543 18.3576 9.89499 18.3576 8.13354H17.3576ZM15.7322 4.16961C16.7805 5.22815 17.3576 6.63418 17.3576 8.13354H18.3576C18.3576 6.37212 17.6775 4.71279 16.4427 3.46595L15.7322 4.16961ZM15.9607 4.16822C15.8994 4.23171 15.7945 4.23249 15.7322 4.16963L16.4427 3.46593C16.11 3.13003 15.5695 3.13363 15.2412 3.47368L15.9607 4.16822ZM15.9593 3.96676C16.0154 4.02343 16.0158 4.1111 15.9607 4.16817L15.2412 3.47372C14.9191 3.80742 14.9222 4.3406 15.2487 4.67036L15.9593 3.96676ZM17.6696 8.13354C17.6696 6.56169 17.062 5.0802 15.9593 3.96673L15.2488 4.6704C16.1652 5.59574 16.6696 6.82397 16.6696 8.13354H17.6696ZM15.9594 12.3002C17.062 11.1868 17.6696 9.70542 17.6696 8.13354H16.6696C16.6696 9.44315 16.1652 10.6713 15.2489 11.5965L15.9594 12.3002ZM15.9607 12.0987C16.0159 12.1558 16.0155 12.2435 15.9593 12.3002L15.2489 11.5964C14.9223 11.9262 14.9191 12.4595 15.2413 12.7932L15.9607 12.0987Z" fill="#757575" mask="url(#path-1-outside-1)"/>' +
		'</svg>',
	external_link_white: '<svg  fill="white" viewBox="0 0 30 30" width="24px" height="24px">' +
		'<path d="M 25.980469 2.9902344 A 1.0001 1.0001 0 0 0 25.869141 3 L 20 3 A 1.0001 1.0001 0 1 0 20 5 L 23.585938 5 L 13.292969 15.292969 A 1.0001 1.0001 0 1 0 14.707031 16.707031 L 25 6.4140625 L 25 10 A 1.0001 1.0001 0 1 0 27 10 L 27 4.1269531 A 1.0001 1.0001 0 0 0 25.980469 2.9902344 z M 6 7 C 4.9069372 7 4 7.9069372 4 9 L 4 24 C 4 25.093063 4.9069372 26 6 26 L 21 26 C 22.093063 26 23 25.093063 23 24 L 23 14 L 23 11.421875 L 21 13.421875 L 21 16 L 21 24 L 6 24 L 6 9 L 14 9 L 16 9 L 16.578125 9 L 18.578125 7 L 16 7 L 14 7 L 6 7 z"/>' +
		'</svg>',
	close_media_popup: '<svg version="1.2" overflow="visible" preserveAspectRatio="none" viewBox="0 0 24 24" width="24" height="24">' +
		'<g>' +
		'<path xmlns:default="http://www.w3.org/2000/svg" d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" style="fill: rgb(255, 255, 255);" vector-effect="non-scaling-stroke" />' +
		'</g>' +
		'</svg>',
	print_icon: '<svg version="1.2" overflow="visible" preserveAspectRatio="none" viewBox="0 0 24 24" width="24" height="24">' +
		'<g>' +
		'<path xmlns:default="http://www.w3.org/2000/svg" d="M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z" style="fill: rgb(255, 255, 255);" vector-effect="non-scaling-stroke" />' +
		'</g>' +
		'</svg>',
	min_pdf_icon: '<svg version="1.2" overflow="visible" preserveAspectRatio="none" viewBox="0 0 514 514" xml:space="preserve" y="0px" x="0px" class="Layer_1_1621441515254" width="20" height="20">' +
		'<g transform="translate(1, 1)">' +
		'<style type="text/css">' +
		'.st0_1621441515254 {' +
			'fill: #394042;' +
		'}' +
		'</style>' +
		'<path d="M140,274c-6.6,0-12-5.4-12-12v-12c0-6.6,5.4-12,12-12h232c6.6,0,12,5.4,12,12v12c0,6.6-5.4,12-12,12H140z   M504,256c0,137-111,248-248,248S8,393,8,256S119,8,256,8S504,119,504,256z M472,256c0-119.9-97.3-216-216-216  C136.1,40,40,137.3,40,256c0,119.9,97.3,216,216,216C375.9,472,472,374.7,472,256z" class="st0_1621441515254" vector-effect="non-scaling-stroke" style="fill: rgba(255, 255, 255, 0.8);" />' +
		'</g>' +
		'</svg>',
	max_pdf_icon: '<svg version="1.2" overflow="visible" preserveAspectRatio="none" viewBox="0 0 19.375 19.375" width="19.375" height="19.375">' +
		'<g transform="translate(0, 0)">' +
		'<g transform="translate(0, 0) rotate(0)">' +
		'<path d="M14.6875,9.45313v0.46875c0,0.25781 -0.21094,0.46875 -0.46875,0.46875h-3.82812v3.82813c0,0.25781 -0.21094,0.46875 -0.46875,0.46875h-0.46875c-0.25781,0 -0.46875,-0.21094 -0.46875,-0.46875v-3.82812h-3.82812c-0.25781,0 -0.46875,-0.21094 -0.46875,-0.46875v-0.46875c0,-0.25781 0.21094,-0.46875 0.46875,-0.46875h3.82813v-3.82812c0,-0.25781 0.21094,-0.46875 0.46875,-0.46875h0.46875c0.25781,0 0.46875,0.21094 0.46875,0.46875v3.82813h3.82813c0.25781,0 0.46875,0.21094 0.46875,0.46875zM19.375,9.6875c0,5.35156 -4.33594,9.6875 -9.6875,9.6875c-5.35156,0 -9.6875,-4.33594 -9.6875,-9.6875c0,-5.35156 4.33594,-9.6875 9.6875,-9.6875c5.35156,0 9.6875,4.33594 9.6875,9.6875zM18.125,9.6875c0,-4.68359 -3.80078,-8.4375 -8.4375,-8.4375c-4.68359,0 -8.4375,3.80078 -8.4375,8.4375c0,4.68359 3.80078,8.4375 8.4375,8.4375c4.68359,0 8.4375,-3.80078 8.4375,-8.4375z" style="stroke-width: 0; stroke-linecap: butt; stroke-linejoin: miter; fill: rgba(255, 255, 255, 0.8);" vector-effect="non-scaling-stroke" />' +
		'</g>' +
		'<defs>' +
		'<path class="path-162254104429736" d="M14.6875,9.45313v0.46875c0,0.25781 -0.21094,0.46875 -0.46875,0.46875h-3.82812v3.82813c0,0.25781 -0.21094,0.46875 -0.46875,0.46875h-0.46875c-0.25781,0 -0.46875,-0.21094 -0.46875,-0.46875v-3.82812h-3.82812c-0.25781,0 -0.46875,-0.21094 -0.46875,-0.46875v-0.46875c0,-0.25781 0.21094,-0.46875 0.46875,-0.46875h3.82813v-3.82812c0,-0.25781 0.21094,-0.46875 0.46875,-0.46875h0.46875c0.25781,0 0.46875,0.21094 0.46875,0.46875v3.82813h3.82813c0.25781,0 0.46875,0.21094 0.46875,0.46875zM19.375,9.6875c0,5.35156 -4.33594,9.6875 -9.6875,9.6875c-5.35156,0 -9.6875,-4.33594 -9.6875,-9.6875c0,-5.35156 4.33594,-9.6875 9.6875,-9.6875c5.35156,0 9.6875,4.33594 9.6875,9.6875zM18.125,9.6875c0,-4.68359 -3.80078,-8.4375 -8.4375,-8.4375c-4.68359,0 -8.4375,3.80078 -8.4375,8.4375c0,4.68359 3.80078,8.4375 8.4375,8.4375c4.68359,0 8.4375,-3.80078 8.4375,-8.4375z" vector-effect="non-scaling-stroke" />' +
		'</defs>' +
		'</g>' +
		'</svg>',
	page_down_icon: '<svg version="1.2" overflow="visible" preserveAspectRatio="none" viewBox="0 0 24 24" width="20" height="20">' +
		'<g>' +
		'<path xmlns:default="http://www.w3.org/2000/svg" d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z" fill="#010101" style="fill: rgba(255, 255, 255, 0.8);" vector-effect="non-scaling-stroke" />' +
		'</g>' +
		'</svg>',
	page_up_icon: '<svg version="1.2" overflow="visible" preserveAspectRatio="none" viewBox="0 0 24 24" width="20" height="20">' +
		'<g>' +
		'<path xmlns:default="http://www.w3.org/2000/svg" d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z" fill="#010101" style="fill: rgba(255, 255, 255, 0.8);" vector-effect="non-scaling-stroke" />' +
		'</g>' +
		'</svg>',
	pdf_download_icon: '<svg version="1.2" overflow="visible" preserveAspectRatio="none" viewBox="0 0 18.77415 17.33333" width="18.77415" height="17.33333">' +
		'<g transform="translate(0, 0)">' +
		'<g transform="translate(-0.000020000000001241247, -2.220446049250313e-16) rotate(0)">' +
		'<path d="M14.22417,15.67583c-0.28167,0.27083 -0.72583,0.26 -0.99667,-0.02167c-0.27083,-0.28167 -0.26,-0.72583 0.02167,-0.99667c0.28167,-0.27083 0.72583,-0.26 0.99667,0.02167c0.13,0.13 0.195,0.30333 0.195,0.4875c0,0.195 -0.08667,0.37917 -0.21667,0.50917zM17.10583,15.67583c-0.28167,0.27083 -0.72583,0.26 -0.99667,-0.02167c-0.27083,-0.28167 -0.26,-0.72583 0.02167,-0.99667c0.28167,-0.27083 0.72583,-0.26 0.99667,0.02167c0.13,0.13 0.195,0.30333 0.195,0.4875c0,0.195 -0.07583,0.37917 -0.21667,0.50917zM18.77417,12.6425c0,-0.59583 -0.4875,-1.08333 -1.08333,-1.08333h-5.24333l-1.53833,1.53833c-0.845,0.845 -2.22083,0.845 -3.06583,0v0l-1.51667,-1.53833h-5.24333c-0.59583,0 -1.08333,0.4875 -1.08333,1.08333v3.6075c0,0.59583 0.4875,1.08333 1.08333,1.08333h16.59667c0.59583,0 1.08333,-0.4875 1.08333,-1.08333v-3.61833v0zM14.44083,5.785h-2.8925v-5.05917c-0.01083,-0.40083 -0.33583,-0.715 -0.73667,-0.72583h-2.88167c-0.39,0.01083 -0.715,0.325 -0.72583,0.72583v5.04833h-2.87083c-0.30333,-0.01083 -0.56333,0.1625 -0.67167,0.44417c-0.14083,0.27083 -0.065,0.59583 0.1625,0.79083l5.04833,5.04833c0.27083,0.28167 0.715,0.2925 0.99667,0.02167c0.01083,-0.01083 0.01083,-0.01083 0.02167,-0.02167l5.04833,-5.04833c0.2275,-0.195 0.30333,-0.52 0.1625,-0.79083c-0.0975,-0.28167 -0.37917,-0.46583 -0.6825,-0.44417z" style="stroke-width: 0; stroke-linecap: butt; stroke-linejoin: miter; fill: rgb(255, 255, 255);" vector-effect="non-scaling-stroke" />' +
		'</g>' +
		'<defs>' +
		'<path class="path-162254104427026" d="M14.22417,15.67583c-0.28167,0.27083 -0.72583,0.26 -0.99667,-0.02167c-0.27083,-0.28167 -0.26,-0.72583 0.02167,-0.99667c0.28167,-0.27083 0.72583,-0.26 0.99667,0.02167c0.13,0.13 0.195,0.30333 0.195,0.4875c0,0.195 -0.08667,0.37917 -0.21667,0.50917zM17.10583,15.67583c-0.28167,0.27083 -0.72583,0.26 -0.99667,-0.02167c-0.27083,-0.28167 -0.26,-0.72583 0.02167,-0.99667c0.28167,-0.27083 0.72583,-0.26 0.99667,0.02167c0.13,0.13 0.195,0.30333 0.195,0.4875c0,0.195 -0.07583,0.37917 -0.21667,0.50917zM18.77417,12.6425c0,-0.59583 -0.4875,-1.08333 -1.08333,-1.08333h-5.24333l-1.53833,1.53833c-0.845,0.845 -2.22083,0.845 -3.06583,0v0l-1.51667,-1.53833h-5.24333c-0.59583,0 -1.08333,0.4875 -1.08333,1.08333v3.6075c0,0.59583 0.4875,1.08333 1.08333,1.08333h16.59667c0.59583,0 1.08333,-0.4875 1.08333,-1.08333v-3.61833v0zM14.44083,5.785h-2.8925v-5.05917c-0.01083,-0.40083 -0.33583,-0.715 -0.73667,-0.72583h-2.88167c-0.39,0.01083 -0.715,0.325 -0.72583,0.72583v5.04833h-2.87083c-0.30333,-0.01083 -0.56333,0.1625 -0.67167,0.44417c-0.14083,0.27083 -0.065,0.59583 0.1625,0.79083l5.04833,5.04833c0.27083,0.28167 0.715,0.2925 0.99667,0.02167c0.01083,-0.01083 0.01083,-0.01083 0.02167,-0.02167l5.04833,-5.04833c0.2275,-0.195 0.30333,-0.52 0.1625,-0.79083c-0.0975,-0.28167 -0.37917,-0.46583 -0.6825,-0.44417z" vector-effect="non-scaling-stroke" />' +
		'</defs>' +
		'</g>' +
		'</svg>',

	iconExternalLink: '<svg  class="mgPlayerJSTest_width-height-100" viewBox="0 0 24 25" fill="none">'+
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M19.3521 5.68455C19.3891 5.77155 19.4091 5.91455 19.4091 5.91455H19.3901V10.8506C19.3901 11.2506 19.0761 11.4736 18.6751 11.4736H18.6851C18.2841 11.4736 17.9411 11.2506 17.9411 10.8506V7.76755L11.6751 14.0686C11.3921 14.3526 10.9331 14.3456 10.6921 14.0626V14.0496C10.4501 13.7666 10.3851 13.2816 10.6691 12.9996L16.9531 6.63955H13.8701C13.4701 6.63955 13.1081 6.34155 13.1081 5.94055V5.96655C13.1081 5.56655 13.4701 5.19055 13.8701 5.19055H18.7021H18.6661V5.24055C18.9071 5.24055 19.2421 5.42355 19.3521 5.68455ZM16.1901 12.3766L17.6401 13.8266V18.3996C17.6401 19.1996 17.0101 19.8096 16.2101 19.8096H6.05906C5.25906 19.8096 4.59106 19.1996 4.59106 18.3996V8.25055C4.59106 7.45055 5.25906 6.76055 6.06006 6.76055H10.6321L12.0821 8.21055H6.04206V18.3605H16.1901V12.3766Z" fill="#555555"/>'+
		'</svg>',

	iconImageStepUploadImage: '<svg version="1.1" id="Capa_1" x="0px" y="0px"' +
		'viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve">' +
		'<g>' +
		'<g>' +
		'<path d="M47.4,24.4c-0.8,0-1.4,0.6-1.4,1.4v12.4c0,3.4-2.7,6.1-6.1,6.1H10c-3.4,0-6.1-2.7-6.1-6.1V25.6c0-0.8-0.6-1.4-1.4-1.4' +
		's-1.4,0.6-1.4,1.4v12.6c0,4.9,4,8.8,8.8,8.8H40c4.9,0,8.8-4,8.8-8.8V25.8C48.8,25.1,48.2,24.4,47.4,24.4z"/>' +
		'<path d="M17.3,13.9l6.3-6.3v27.7c0,0.8,0.6,1.4,1.4,1.4s1.4-0.6,1.4-1.4V7.6l6.3,6.3c0.3,0.3,0.6,0.4,1,0.4c0.4,0,0.7-0.1,1-0.4' +
		'c0.5-0.5,0.5-1.4,0-1.9L26,3.4c-0.3-0.3-0.6-0.4-1-0.4c-0.4,0-0.7,0.1-1,0.4L15.4,12c-0.5,0.5-0.5,1.4,0,1.9' +
		'C15.9,14.5,16.8,14.5,17.3,13.9z"/>' +
		'</g>' +
		'</g>' +
		'</svg>',

	iconImageStepCaptureScreen: '<svg width="8px" height="8px" viewBox="0 0 8 8" version="1.1"  >' +
		'<defs></defs>' +
		'<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g id="10-branching-on-guideme--copy" transform="translate(-1218.000000, -320.000000)">' +
		'<g id="Group-10" transform="translate(1202.000000, 256.000000)">' +
		'<g id="Group-8" transform="translate(16.000000, 61.000000)">' +
		'<g id="Group-3" transform="translate(0.000000, 3.000000)">' +
		'<path d="M0,0.880952381 L0,2.64285714 L0.880952381,2.64285714 L0.880952381,0.880952381 L2.64285714,0.880952381 L2.64285714,0 L0.880952381,0 C0.396428571,0 0,0.396428571 0,0.880952381 L0,0.880952381 Z M0.880952381,5.28571429 L0,5.28571429 L0,7.04761905 C0,7.53214286 0.396428571,7.92857143 0.880952381,7.92857143 L2.64285714,7.92857143 L2.64285714,7.04761905 L0.880952381,7.04761905 L0.880952381,5.28571429 L0.880952381,5.28571429 Z M7.04761905,7.04761905 L5.28571429,7.04761905 L5.28571429,7.92857143 L7.04761905,7.92857143 C7.53214286,7.92857143 7.92857143,7.53214286 7.92857143,7.04761905 L7.92857143,5.28571429 L7.04761905,5.28571429 L7.04761905,7.04761905 L7.04761905,7.04761905 Z M7.04761905,0 L5.28571429,0 L5.28571429,0.880952381 L7.04761905,0.880952381 L7.04761905,2.64285714 L7.92857143,2.64285714 L7.92857143,0.880952381 C7.92857143,0.396428571 7.53214286,0 7.04761905,0 L7.04761905,0 Z" class="shape"></path>' +
		'<path d="M4,5.42857143 C3.21142857,5.42857143 2.57142857,4.78857143 2.57142857,4 C2.57142857,3.21142857 3.21142857,2.57142857 4,2.57142857 C4.78857143,2.57142857 5.42857143,3.21142857 5.42857143,4 C5.42857143,4.78857143 4.78857143,5.42857143 4,5.42857143 L4,5.42857143 Z" class="shape"></path>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
};

GmCXt.model = {};

GmCXt.model.api = {
	code: {
		_type: "number",
		_required: true
	},
	data: {
		_type: "object",
		_required: true,
		_obj: {}
	},
	error: {
		_type: "bool",
		_required: true
	},
	message: {
		_type: "array",
		_required: true
	},
	version: {
		_type: "string"
	}
};

GmCXt.model.rule = {
	type: {
		_type: "string"
	},
	name: {
		_type: "string"
	},
	condition: {
		_type: "string"
	},
	value: {
		_type: "string"
	},
	logical_condition: {
		_type: "string"
	},
	showValueField: {
		_type: "bool"
	},
	isValid: {
		_type: "bool"
	}
};

GmCXt.model.langOption = {
	language: {
		_type: "string",
		_default: "en-US"
	},
	name: {
		_type: "string",
		_default: "English (United States)"
	},
	voice: {
		_type: "string",
		_default: "AriaNeural"
	}
};

GmCXt.model.segment = {
	id: {
		_type: "string"
	},
	key_name: {
		_type: "string"
	},
	data: {
		_type: "array",
		_obj: {
			_arrOf: 'string'
		},
	}
};

GmCXt.model.segmentGroup = {
	group_id: {
		_type: "string"
	},
	rules: {
		_type: "array",
		_obj: GmCXt.createDeepCopy(GmCXt.model.rule)
	},
	segments: {
		_type: "array",
		_obj: GmCXt.createDeepCopy(GmCXt.model.segment)
	},
	title: {
		_type: "string"
	},
	rule_check: {
		_type: "bool",
		_default: false
	}
};

GmCXt.model.segmentGroups = {
	_type: "array",
	_obj: GmCXt.createDeepCopy(GmCXt.model.segmentGroup)
};

GmCXt.validate = function(data, prop, validation) {

	var input = data[prop];
	var val = 'a(1f2'; // added val as random string

	switch (validation._type) {
		case "array":
			var input = GmCXt.validateModelArray(input, validation._obj);
			if (input) val = input;
			break;

		case "object":
			var input = GmCXt.validateObject(input, validation);
			if (input) val = input;
			break;

		case "bool":
			if (typeof input === 'boolean') val = input;
			else {
				var i = parseInt(input);
				if (i === 1 || input === 'true') val = true;
				else val = false;
			}
			break;

		case "number":
			if (!input) val = 0;
			else if (!isNaN(input)) val = input;
			else if (isNaN(input)) val = 1; //For any value, convert it to number, default 1
			break;

		case "string":
			if (typeof input === 'string' && GmCXt.isEmpty(input) && GmCXt.isDefined(validation._default)) val = validation._default;
			else if (typeof input === 'string') val = input;
			else if (!input) val = "";
			else if (validation._default) val = validation._default;
			else if (!isNaN(input)) val = String(input);
			break;

		case "number_or_null":
			if (!isNaN(input)) val = input;
			else val = null;
			break;
	}

	return val;
};

GmCXt.getDefault = function(type, _default) {

	var def = {
		"array": [],
		//"object": {}, 
		//Do not initialise object. Because simply checking if(obj) is true. 
		//It has to be if(GmCXt.isEmpty(obj)). In code, at all places this change 
		//must be done, before initiating to default object.
		"bool": false,
		"number": 0,
		"string": ""
	};

	if (type) return (typeof _default !== "undefined") ? _default : def[type];
	else return null;
};

GmCXt.validateObject = function(data, validation) {
	data = GmCXt.parseJSON__(data);

	if (typeof data !== 'object') return false;

	if (validation._obj)
		return GmCXt.validateDataModel(data, validation._obj);
	else
		return true;
};

GmCXt.validateModelArray = function(data, model) {
	data = GmCXt.parseJSON__(data);

	if (!Array.isArray(data)) return false;

	for (var i = 0, j = data.length; i < j; i++) {
		var valid = true;
		if (model) {

			if (model._arrOf === 'string') {
				valid = data[i];
			} else {
				if (typeof data[i] === 'string') {
					data[i] = GmCXt.parseJSON__(data[i]);
				}
				valid = GmCXt.validateDataModel(data[i], model);
			}
		}

		if (!valid) return false;
		else data[i] = valid;
	}

	return data;
};

GmCXt.cloneObject = function(model) {
	var obj = {};

	if (!GmCXt.isEmpty(model)) {
		for (var prop in model) {
			if (model.hasOwnProperty(prop)) {
				obj[prop] = GmCXt.getDefault(model[prop]._type, model[prop]._default);
			}
		}
	}

	return obj;
};

GmCXt.validateLanguageData = function(data, model) {
	data = GmCXt.parseJSON__(data);
	for (var prop in data) {
		data[prop] = GmCXt.validateDataModel(data[prop], model._obj);
	}
	return data;
};

GmCXt.validateDataModel = function(data, model) {

	var isValid = true;

	if (!GmCXt.isEmpty(data)) {
		for (var prop in model) {

			if (model.hasOwnProperty(prop)) {

				if ((model[prop]._type === 'object' || model[prop]._type === 'array') && typeof data[prop] === 'string') {
					data[prop] = GmCXt.parseJSON__(data[prop]);
					if (data[prop] === null) {
						if (model[prop]._type === 'array') {
							data[prop] = [];
						} else {
							data[prop] = {};
						}
					}
				}

				if (prop === 'widget_icon_zindex' && !GmCXt.isEmpty(data[prop]) && typeof data[prop] !== 'string') {
					data[prop] = data[prop].toString();
				}

				if (prop === 'language_data') {
					data[prop] = GmCXt.validateLanguageData(data[prop], model[prop]);
				} else if (typeof data[prop] === 'undefined' ||
					(typeof data[prop] !== 'boolean' && !data[prop] && model[prop]._inherit === true) ||
					(typeof data[prop] !== 'object' && model[prop]._type == 'object' && !GmCXt.isEmpty(data[prop])) ||
					(data[prop] && typeof data[prop] === 'object' && !Object.keys(data[prop]).length && model[prop]._clone)) {

					if (model[prop]._inherit === true) {
						if (model === GmCXt.model.application.settings._obj) {
							data[prop] = GmCXt.organization.settings[prop];

						} else if (model === GmCXt.model.application.settings._obj.popupDesign._obj) {
							data[prop] = GmCXt.organization.settings.popupDesign[prop];

						} else if (model === GmCXt.model.application.settings._obj.widget_icon_pos._obj) {
							data[prop] = GmCXt.organization.settings.widget_icon_pos[prop];

						} else if (model === GmCXt.model.application.settings._obj.selectorStyle._obj) {
							data[prop] = GmCXt.organization.settings.selectorStyle[prop];

						} else if (model === GmCXt.model.application.settings._obj.widgetIconSize._obj) {
							data[prop] = GmCXt.organization.settings.widgetIconSize[prop];

						} else if (model === GmCXt.model.application.settings._obj.notifications._obj) {
							data[prop] = GmCXt.organization.settings.notifications[prop];

						} else if (model === GmCXt.model.application.settings._obj.userLabels._obj) {
							data[prop] = GmCXt.organization.settings.userLabels[prop];
						}
						
					} else if (model[prop]._type !== 'object') {
						data[prop] = GmCXt.getDefault(model[prop]._type, model[prop]._default);
					
					} else if (model[prop]._type == 'object' && model[prop]._clone) {
						data[prop] = GmCXt.cloneObject(model[prop]._obj);
						GmCXt.validateDataModel(data[prop], model[prop]._obj);
					}

				} else if ((data[prop] === null || data[prop] === 'na' || data[prop] === '') && model[prop]._type === 'object') {
					data[prop] = {};

				} else if ((data[prop] === null || data[prop] === 'na' || data[prop] === '' || data[prop] === 0) && model[prop]._type === 'array') {
					data[prop] = [];
				} else {

					var valid = GmCXt.validate(data, prop, model[prop]);

					if (valid === 'a(1f2') {

						if (model[prop]._type == 'object' && model[prop]._clone) {
							data[prop] = GmCXt.cloneObject(model[prop]._obj);
							GmCXt.validateDataModel(data[prop], model[prop]._obj);
						} else {
							GmCXt.log(15, "Validation failed for prop: " + prop + "; invalid value: ", data[prop]);
							isValid = false;
						}

					} else {
						data[prop] = valid;
					}
				}

			}
		}
	}

	if (isValid) return data;
	else return false;

};

GmCXt.validateApiResp = function(cb, apiName, data, model, pin_tours) {

	if (Array.isArray(data))
		var valid = GmCXt.validateModelArray(data, model._obj);
	else
		var valid = GmCXt.validateDataModel(data, model);

	if (valid) {
		if (cb && pin_tours) cb(valid, pin_tours);
		else if (cb) cb(valid);
	} else {
		GmCXt.handleError(apiName);
	}
};
GmCXt.model.popupDesign_default = {
	bgColor: {
		_type: "string",
		_default: '#ffffff',
		_inherit: true
	},
	stepCountColor: {
		_type: "string",
		_default: "#505050",
		_inherit: true
	},
	borderColor: {
		_type: "string",
		_default: "#dfe0e7",
		_inherit: true
	},
	borderWidth: {
		_type: "number",
		_default: 1,
		_inherit: true
	},
	borderRadius: {
		_type: "number",
		_default: 3,
		_inherit: true
	},
	nextBtnBackground: {
		_type: "string",
		_default: "#005BF0",
		_inherit: true
	},
	nextBtnColor: {
		_type: "string",
		_default: "#ffffff",
		_inherit: true
	},
	prevBtnBackground: {
		_type: "string",
		_default: "#ffffff",
		_inherit: true
	},
	prevBtnColor: {
		_type: "string",
		_default: "#8e8fa6",
		_inherit: true
	},
	stepTitleColor: {
		_type: "string",
		_default: "#26273b",
		_inherit: true
	},
	stepDescColor: {
		_type: "string",
		_default: "#8e8fa6",
		_inherit: true
	},
	audioIconColor: {
		_type: "string",
		_default: "#acadc1",
		_inherit: true
	},
	closeIconColor: {
		_type: "string",
		_default: "#acadc1",
		_inherit: true
	},
	stepDesFontSize: {
		_type: "string",
		_default: "medium",
		_inherit: true
	},
	stepDesFontFamily: {
		_type: "string",
		_default: "arial, sans-serif",
		_inherit: true
	},
	stepTitleFontSize: {
		_type: "string",
		_default: "medium",
		_inherit: true
	},
	stepTitleFontFamily: {
		_type: "string",
		_default: "arial, sans-serif",
		_inherit: true
	},
	stepTitleFontWeight: {
		_type: "string",
		_default: "600",
		_inherit: true
	},
	padding: {
	    _type: "object",
	    _clone: true,
	    _obj: {
	        bottom: {
	            _type: "number",
	            _default: 0
	        },
	        left: {
	            _type: "number",
	            _default: 0
	        },
	        right: {
	            _type: "number",
	            _default: 0
	        },
	        top: {
	            _type: "number",
	            _default: 0
	        }
	    }
	}
};

GmCXt.model.userLabels = {
	guideMe: {
		_type: "string",
		_default: "",
		_inherit: true
	},
	showMe: {
		_type: "string",
		_default: "",
		_inherit: true
	},
	testMe: {
		_type: "string",
		_default: "",
		_inherit: true
	},
	vLab: {
		_type: "string",
		_default: "",
		_inherit: true
	},
	doItForMe: {
		_type: "string",
		_default: "",
		_inherit: true
	},
	miniPlayerHelp: {
		_type: "string",
		_default: "",
		_inherit: true
	},
	next: {
		_type: "string",
		_default: "",
		_inherit: true
	},
	btnPrev: {
		_type: "string",
		_default: "",
		_inherit: true
	}
};

GmCXt.model.defaultColorArray = {
	0: {
		_type: 'string',
		_default: '#FBEEB8'
	},
	1: {
		_type: 'string',
		_default: '#F8CAC6'
	},
	2: {
		_type: 'string',
		_default: '#ECCAFA'
	},
	3: {
		_type: 'string',
		_default: '#C2E0F4'
	},
	4: {
		_type: 'string',
		_default: '#2DC26B'
	},
	5: {
		_type: 'string',
		_default: '#F1C40F'
	},
	6: {
		_type: 'string',
		_default: '#E03E2D'
	},
	7: {
		_type: 'string',
		_default: '#B96AD9'
	},
	8: {
		_type: 'string',
		_default: '#3598DB'
	},
	9: {
		_type: 'string',
		_default: '#169179'
	}
};

GmCXt.model.popupDesign_classic = {
	bgColor: {
		_type: "string",
		_default: "#454560",
		_inherit: true
	},
	stepCountColor: {
		_type: "string",
		_default: "#505050",
		_inherit: true
	},
	borderColor: {
		_type: "string",
		_default: "#454560",
		_inherit: true
	},
	borderWidth: {
		_type: "number",
		_default: 1,
		_inherit: true
	},
	borderRadius: {
		_type: "number",
		_default: 0,
		_inherit: true
	},
	nextBtnBackground: {
		_type: "string",
		_default: "#ffffff",
		_inherit: true
	},
	nextBtnColor: {
		_type: "string",
		_default: "#26273b",
		_inherit: true
	},
	prevBtnBackground: {
		_type: "string",
		_default: "#ffffff",
		_inherit: true
	},
	prevBtnColor: {
		_type: "string",
		_default: "#26273b",
		_inherit: true
	},
	stepTitleColor: {
		_type: "string",
		_default: "#ffffff",
		_inherit: true
	},
	stepDescColor: {
		_type: "string",
		_default: "#ffffff",
		_inherit: true
	},
	audioIconColor: {
		_type: "string",
		_default: "#cfd0dd",
		_inherit: true
	},
	closeIconColor: {
		_type: "string",
		_default: "#cfd0dd",
		_inherit: true
	},
	stepDesFontSize: {
		_type: "string",
		_default: "medium",
		_inherit: true
	},
	stepDesFontFamily: {
		_type: "string",
		_default: "arial, sans-serif",
		_inherit: true
	},
	stepTitleFontSize: {
		_type: "string",
		_default: "medium",
		_inherit: true
	},
	stepTitleFontFamily: {
		_type: "string",
		_default: "arial, sans-serif",
		_inherit: true
	},
	padding: {
	    _type: "object",
	    _clone: true,
	    _obj: {
	        bottom: {
	            _type: "number",
	            _default: 0
	        },
	        left: {
	            _type: "number",
	            _default: 0
	        },
	        right: {
	            _type: "number",
	            _default: 0
	        },
	        top: {
	            _type: "number",
	            _default: 0
	        }
	    }
	}
};

GmCXt.model.tutorial_guide_default = {
	nextBtn: {
		_type: "object",
		_clone: true,
		_obj: {
			bgColor: {
				_type: "string",
				_default: "#005BF0"
			},
			border_color: {
				_type: "string",
				_default: "#005BF0"
			},
			border_radius: {
				_type: "number",
				_default: 4
			},
			border_width: {
				_type: "number",
				_default: 1
			},
			color: {
				_type: "string",
				_default: "#ffffff"
			},
			font_size: {
				_type: "string",
				_default: "medium"
			},
			padding: {
				_type: "object",
				_clone: true,
				_obj: {
					bottom: {
						_type: "number",
						_default: 5
					},
					left: {
						_type: "number",
						_default: 5
					},
					right: {
						_type: "number",
						_default: 5
					},
					top: {
						_type: "number",
						_default: 5
					}
				}
			}
		}
	},
	outerBox: {
		_type: "object",
		_clone: true,
		_obj: {
			border_color: {
				_type: "string",
				_default: "#454560"
			},
			border_radius: {
				_type: "number",
				_default: 0
			},
			border_width: {
				_type: "number",
				_default: 1
			},
			shadow: {
				_type: "object",
				_clone: true,
				_obj: {
					blur: {
						_type: "number",
						_default: 5				
					},
					color: {
						_type: "string",
						_default: "#00000080"				
					},
					horizontal: {
						_type: "number",
						_default: 2				
					},
					inset: {
						_type: "bool",
						_default: false				
					},
					spreadRadius: {
						_type: "number",
						_default: 0				
					},
					vertical: {
						_type: "number",
						_default: 2				
					}
				}
			}
		}
	},
	prevBtn: {
		_type: "object",
		_clone: true,
		_obj: {
			bgColor: {
				_type: "string",
				_default: "#005BF0"			
			},
			border_color: {
				_type: "string",
				_default: "#005BF0"			
			},
			border_radius: {
				_type: "number",
				_default: 4			
			},
			border_width: {
				_type: "number",
				_default: 1		
			},
			color: {
				_type: "string",
				_default: "#ffffff"			
			},
			font_size: {
				_type: "string",
				_default: "medium"				
			},
			padding: {
				_type: "object",
				_clone: true,
				_obj: {
					bottom: {
						_type: "number",
						_default: 5
					},
					left: {
						_type: "number",
						_default: 5
					},
					right: {
						_type: "number",
						_default: 5
					},
					top: {
						_type: "number",
						_default: 5				
					}
				}
			}
		}
	},
	titleBgColor: {
		_type: "string",
		_default: "#26273b"	
	}
};

GmCXt.model.notificationTheme_default = {
	width: {
		_type: "string",
		_default: "600"
	},
	height: {
		_type: "string",
		_default: "300"	
	},
	header: {
		_type: "object",
		_clone: true,
		_obj: {
			background: {
				_type: "string",
				_default: "#FF240A"			
			},
			color: {
				_type: "string",
				_default: "#FFFFFF"			
			},
			font: {
				_type: "string",
				_default: "Lato"			
			}
		}
	},
	body: {
		_type: "object",
		_clone: true,
		_obj: {
			action_button_background: {
				_type: "string",
				_default: "#005BF0"
			},
			action_button_border_color: {
				_type: "string",
				_default: "#FFFFFF"
			},
			action_button_font: {
				_type: "string",
				_default: "Lato"
			},
			action_button_text_color: {
				_type: "string",
				_default: "#FFFFFF"
			},
			action_button_url: {
				_type: "string",
				_default: ""
			},
			background_color: {
				_type: "string",
				_default: "#FFFFFF"
			},
			desc_color: {
				_type: "string",
				_default: "#555555"
			},
			desc_font_family: {
				_type: "string",
				_default: "Lato"
			},
			desc_font_size: {
				_type: "string",
				_default: "medium"
			},
			fill: {
				_type: "string",
				_default: "#707070"
			},
			padding_bottom: {
				_type: "string",
				_default: "20"
			},
			padding_left: {
				_type: "string",
				_default: "20"
			},
			padding_right: {
				_type: "string",
				_default: "20"
			},
			padding_top: {
				_type: "string",
				_default: "20"
			},
			title_color: {
				_type: "string",
				_default: "#000000"
			},
			title_font_family: {
				_type: "string",
				_default: "Lato"
			},
			title_font_size: {
				_type: "string",
				_default: "medium"
			}
		}
	},
	footer: {
		_type: "object",
		_clone: true,
		_obj: {
			primaryBtnTextColor: {
				_type: "string",
				_default: "#FFFFFF"
			},
			primaryBtnTextSize: {
				_type: "string",
				_default: "medium"
			},
			primaryBtnFont: {
				_type: "string",
				_default: "#Lato"
			},
			primaryBtnBackground : {
				_type: "string",
				_default: "#005BF0"
			},
			primaryBtnBorderColor: {
				_type: "string",
				_default: "#005BF0"
			},
			secondaryBtnTextColor: {
				_type: "string",
				_default: "#555555"
			},
			secondaryBtnTextSize: {
				_type: "string",
				_default: "#medium"
			},
			secondaryBtnFont: {
				_type: "string",
				_default: "#Lato"
			},
			secondaryBtnBackground : {
				_type: "string",
				_default: "#E6E6E6"
			},
			secondaryBtnBorderColor: {
				_type: "string",
				_default: "#555555"
			}
		}
	}
};

GmCXt.model.organization = {
	about: {
		_type: "string",
		_default: "About"
	},
	admin_settings: {
		_type: "object",
		_clone: true,
		_obj: {
			language_settings: {
				_type: "object",
				_clone: true,
				_obj: {
					default: {
						_type: "object",
						_obj: GmCXt.createDeepCopy(GmCXt.model.langOption)
					},
					translations: {
						_type: "array",
						_obj: GmCXt.createDeepCopy(GmCXt.model.langOption)
					}
				}
			},
			insights: {
				_type: "object",
				_required: true,
				_clone: true,
				_obj: {
					enabled: {
						_type: "bool",
						_default: false
					},
					guide: {
						_type: "bool",
						_default: false
					}
				}
			},
			doitforme: {
				_type: "bool",
				_default: false
			},
			chatbot: {
				_type: "bool",
				_default: false
			},
			lms: {
				_type: "bool",
				_default: false
			},
			display_accept_cookie_popup: {
				_type: "bool",
				_default: true
			},
			api_player: {
				_type: "bool",
				_default: true
			},
			app_switcher: {
				_type: "bool",
				_default: false
			},
			cdn_player: {
				_type: "bool",
				_default: false
			},
			current_page: {
				_type: "bool"
			},
			current_page_beacon: {
				_type: "bool",
				_default: false
			},
			myteacher: {
				_type: "bool",
				_default: false
			},
			guide_segmentation: {
				_type: "bool",
				_default: false
			},
			guide_translation: {
				_type: "bool",
				_default: false
			},
			isPITrackingEnabled: {
				_type: "bool",
				_default: false
			},
			mediafile_creation: {
				_type: "bool",
				_default: true
			},
			create_tooltip_media_file: {
				_type: "bool",
				_default: false
			},
			maintenance_mode: {
				_type: "bool",
				_default: false
			},
			myBotEnabled: {
				_type: "bool",
				_default: false
			},
			task_list: {
				_type: "bool",
				_default: false
			},
			efficient_rule_mode: {
				_type: "bool",
				_default: false
			},
			enable_guideme_as_secondary_option: {
				_type: "bool",
				_default: false
			},
			show_tooltips_during_workflow_guide: {
				_type: "bool",
				_default: false
			},
		}
	},
	bucket: {
		_type: "string"
	},
	creation_date: {
		_type: "number"
	},
	domains: {
		_type: "string"
	},
	image_id: {
		_type: "number"
	},
	image_path: {
		_type: "string"
	},
	image_url: {
		_type: "string"
	},
	is_active: {
		_type: "bool"
	},
	is_suspend: {
		_type: "bool"
	},
	is_sync_complete: {
		_type: "bool"
	},
	is_verified: {
		_type: "bool"
	},
	modification_date: {
		_type: "number"
	},
	name: {
		_type: "string"
	},
	organization_id: {
		_type: "number"
	},
	orgkey: {
		_type: "string"
	},
	role: {
		_type: "string"
	},
	settings: {
		_type: "object",
		_clone: true,
		_obj: {
			popupDesign: {
				_type: "object",
				_clone: true,
				_obj: {
					type: {
						_type: "string",
						_default: 'default'
					},
					default: {
						_type: "object",
						_clone: true,
						_obj: GmCXt.createDeepCopy(GmCXt.model.popupDesign_default)
					},
					classic: {
						_type: "object",
						_clone: true,
						_obj: GmCXt.createDeepCopy(GmCXt.model.popupDesign_classic)
					},
					current: {
						_type: "object",
						_clone: true,
						_obj: GmCXt.createDeepCopy(GmCXt.model.popupDesign_default)
					}
				}
			},
			tutorialBgColor: {
				_type: "string",
				_default: "#45465F"
			},
			feedback_type: {
				_type: "string",
				_default: "email"
			},
			feedback_email: {
				_type: "string",
				_default: "support@csod.com"
			},
			feedback_url: {
				_type: "string",
				_default: ""
			},
			showWidgetIcon: {
				_type: "bool",
				_clone: true,
				_default: true
			},
			rules: {
				_type: "array",
				_obj: GmCXt.createDeepCopy(GmCXt.model.rule)
			},
			widgetIconPos: {
				_type: "string",
				_default: 'bottom-right'
			},
			showWidgetIconRight: {
				_type: "bool",
				_default: true
			},
			showWidgetIconBottom: {
				_type: "bool",
				_default: true
			},
			widget_icon_pos: {
				_type: "object",
				_clone: true,
				_obj: {
					widget_icon_top_pos: {
						_type: "number",
						_default: 5
					},
					widget_icon_bottom_pos: {
						_type: "number",
						_default: 150
					},
					widget_icon_left_pos: {
						_type: "number",
						_default: 5
					},
					widget_icon_right_pos: {
						_type: "number",
						_default: 5
					},
					widget_icon_id: {
						_type: "number"
					},
					widget_icon_top_pos_unit: {
						_type: "string",
						_default: "px"
					},
					widget_icon_bottom_pos_unit: {
						_type: "string",
						_default: "px"
					},
					widget_icon_left_pos_unit: {
						_type: "string",
						_default: "px"
					},
					widget_icon_right_pos_unit: {
						_type: "string",
						_default: "px"
					}
				}
			},
			widget_icon_path: {
				_type: "string",
				_default: GmCXt.conf.staticContentPath + GmCXt.conf.appConfig.defaultIcon
			},
			hide_widget_if_noguide: {
				_type: "bool",
				_default: false
			},
			widget_icon_zindex: {
				_type: "string",
				_default: "Default"
			},
			notificationDelay: {
				_type: "number",
				_default: 0
			},
			guide_count_on_widget: {
				_type: "bool",
				_default: true
			},
			keep_player_panel_open: {
				_type: "bool",
				_default: false
			},
			defaultGuideView: {
				_type: "bool",
				_default: false
			},
			enable_send_feedback: {
				_type: "bool",
				_default: true
			},
			guide_count_widget_color: {
				_type: "string",
				_default: '#FF0000'
			},
			notificationsTime: {
				_type: "string",
				_default: "24 hours"
			},
			playAudio: {
				_type: "bool",
				_default: true
			},
			hideBrandLogo: {
				_type: "bool",
				_default: false
			},
			hideBrandLogo: {
				_type: "bool",
				_default: false
			},
			first_slide_text: {
				_type: "string",
				_default: 'Welcome'
			},
			last_slide_text: {
				_type: "string",
				_default: 'Thank you'
			},
			userLabels: {
				_type: "object",
				_obj: GmCXt.createDeepCopy(mg$.extend(GmCXt.model.userLabels, {
					userNotFollowingGuideMessage: {
						_type: "string",
						_default: ""
					},
					maintenanceMessage: {
						_type: "string",
						_default: ""
					},
					serviceErrorMessage: {
						_type: "string",
						_default: ""
					},
					resumeGuideMessage: {
						_type: "string",
						_default: ""
					}
				})),
				_clone: true
			},
			selectorStyle: {
				_type: "object",
				_clone: true,
				_obj: {
					borderColor: {
						_type: "string",
						_default: '#00a6d9'
					},
					borderWidth: {
						_type: "number",
						_default: 2
					}
				}
			},
			tooltipColor: {
				_type: "string",
				_default: "#005BF0"
			},
			stepPopupWidth: {
				_type: "number",
				_default: 300
			},
			logo_id: {
				_type: "number"
			},
			logo: {
				_type: "string"
			},
			guideMeSetting: {
				_type: "bool",
				_default: true
			},
			showMeSetting: {
				_type: "bool",
				_default: true
			},
			testMeSetting: {
				_type: "bool",
				_default: true
			},
			doitforme: {
				_type: "bool",
				_default: false
			},
			vLab: {
				_type: "bool",
				_default: false
			},
			giphy: {
				_type: "bool",
				_default: true
			},
			video: {
				_type: "bool",
				_default: true
			},
			slideshow: {
				_type: "bool",
				_default: true
			},
			dual_auth: {
				_type: "bool"
			},
			first_slide: {
				_type: "string",
				_default: GmCXt.conf.staticContentPath + "default_first_slide.png"
			},
			last_slide: {
				_type: "string",
				_default: GmCXt.conf.staticContentPath + "default_last_slide.png"
			},
			fqdn: {
				_type: "bool",
				_default: false
			},
			notifications: {
				_type: "object",
				_clone: true,
				_obj: {
					content: {
						_type: "string"
					},
					enable: {
						_type: "bool",
						_default: false
					},
					enforce: {
						_type: "bool",
						_default: false
					},
					rules: {
						_type: "array",
						_obj: GmCXt.createDeepCopy(GmCXt.model.rule)
					},
					notifThemeColor: {
						_type: "string",
						_default: "#26273b"
					}
				}
			},
			exitSurvey: {
				_type: "bool",
				_default: false
			},
			survey: {
				_type: "array",
				_obj: []
			},
			defaultPlayAction: {
				_type: "string",
				_default: "guideMe"
			},
			isMiniPlayer: {
				_type: "bool",
				_default: false
			},
			add_watermark: {
				_type: "bool",
				_default: true
			},
			stepDefaultColorArray: {
				_type: "object",
				_obj: GmCXt.createDeepCopy(GmCXt.model.defaultColorArray),
				_clone: true
			},
			sentiment: {
				_type: "object",
				_clone: true,
				_obj: {
					sentimentCode: {
						_type: "string"
					}
				}
			},
			tooltipTheme: {
				_type: "bool",
				_default: false
			},
			widgetIconType: {
				_type: "string",
				_default: 'circular'
			},
			widgetIconSize: {
				_type: "object",
				_clone: true,
				_obj: {
					widgetIconWidth: {
						_type: "number",
						_default: 50
					},
					widgetIconHeight: {
						_type: "number",
						_default: 50
					}
				}
			},
			all_guide: {
				_type: "bool",
				_default: false
			},
			tutorial_guide: {
				_type: "object",
				_clone: true,
				_obj: GmCXt.createDeepCopy(GmCXt.model.tutorial_guide_default)
			},
			helpUrl: {
				_type: "string",
				_default: "https://help.csod.com/MyGuide/"
			},
			autoProceedStep: {
				_type: "bool",
				_default: false
			},
			autoStepDelay: {
				_type: "number",
				default: 4
			},
			notificationTheme: {
				_type: "object",
				_clone: true,
				_obj: GmCXt.createDeepCopy(GmCXt.model.notificationTheme_default)
			}
		}
	},
	segment_groups: GmCXt.model.segmentGroups
};
GmCXt.model.stepSettings = {
	screenBlackout: {
		_type: "bool",
		_default: true
	},
	displayPreview: {
		_type: "bool",
		_default: true
	},
	mandatoryStep: {
		_type: "bool",
		_default: false
	},
	optional: {
		_type: "bool",
		_default: false
	},
	removeElement: {
		_type: "bool",
		_default: false
	},
	headerNext: {
		_type: "bool",
		_default: false
	},
	onCopyNext: {
		_type: "bool",
		_default: false
	},
	keepNext: {
		_type: "bool",
		_default: false
	},
	hoverNext: {
		_type: "bool",
		_default: false
	},
	clickNext: {
		_type: "bool",
		_default: false
	},
	onRightClickNext: {
		_type: "bool",
		_default: false
	},
	onKeyupNext: {
		_type: "bool",
		_default: false
	},
	onEnterPressNext: {
		_type: "bool",
		_default: false
	},
	onChangeNext: {
		_type: "bool",
		_default: false
	},
	closeAfterDelay: {
		_type: "bool",
		_default: false
	},
	onClickAnywhere: {
		_type: "bool",
		_default: false
	},
	inlineBranch: {
		_type: "bool",
		_default: false
	},
	customAudioText: {
		_type: "bool",
		_default: false
	},
	recordedAudio: {
		_type: "bool",
		_default: false
	},
	triggerEvent: {
		_type: "bool",
		_default: false
	},
	overlayOpacity: {
		_type: "number",
		_default: 0
	},
	smartTip: {
		_type: "object",
		_obj: {},
		_clone: true
	},
	completionTime: {
		_type: "number",
		_default: 4
	},
	completionEvent: {
		_type: "string"
	},
	stepPopupWidth: {
		_type: "number",
		_default: 300
	},
	stepPopupHeight: {
		_type: "number",
		_default: 0
	},
	stepDelayTime: {
		_type: "number",
		_default: 0
	},
	pageReloadOption: {
		_type: "string",
		_default: 'neither'
	},
	autoPlayStep: {
		_type: "bool",
		_default: false
	},
	stickTargetElement: {
		_type: "bool",
		_default: false
	},
	element: {
		_type: "object",
		_required: false,
		_obj: {
			//version: { _type: "string" },
			//selector: {
			// js, js1, js2, js3 are either array or null
			// hence require no validation
			//},
			meta: {
				_type: "object",
				_required: false,
				_obj: {
					elAttributes: {
						_type: "object",
						_obj: {}
					},
					inTopWindow: {
						_type: "bool"
					},
					iframeUrl: {
						_type: "string"
					},
					iframePath: {
						_type: "string"
					},
					iframeScheme: {
						_type: "string",
						_val: ["http", "https"]
					},
					jqueryInfo: {
						_type: "object",
						_obj: {}
					},
					path: {
						_type: "object",
						_required: false,
						_obj: {
							fromDocument: {
								_type: "array"
							},
							fromParent: {
								_type: "array"
							},
							parentId: {
								_type: "string"
							}
						}
					},
					score: {
						_type: "number"
					},
					selectorAttributes: {
						_type: "object",
						_obj: {}
					},
					textPropertyValue: {
						_type: "string"
					},
					textPropertyName: {
						_type: "string"
					},
					isUniqueText: {
						_type: "bool"
					}
				}
			},
			criteria: {
				_type: "object",
				_required: false,
				_obj: {
					precision_type: {
						_type: "string"
					},
					enforce_identify_by_text: {
						_type: "bool"
					},
					ignoreText: {
						_type: "bool"
					},
					jquery_selector: {
						_type: "string"
					},
					precision_level: {
						_type: "string"
					}
				}
			},
			position: {
				_type: "object",
				_required: false,
				_obj: {
					left: {
						_type: "number"
					},
					top: {
						_type: "number"
					},
					width: {
						_type: "number"
					},
					height: {
						_type: "number"
					},
					windowWidth: {
						_type: "number"
					},
					windowHeight: {
						_type: "number"
					}
				}
			},
			cssPosition: {
				_type: "bool"
			},
			appName: {
				_type: "string"
			},
			xpath: {
				_type: "string"
			},
			elOptions: {
				_type: "array",
				_obj: {}
			}
		}
	},
	alignment: {
		_type: "string"
	},
	onPageClickNext: {
		_type: "bool",
		_default: false
	},
	onPageRefresh: {
		_type: "bool"
	},
	rules: {
		_type: "array",
		_obj: GmCXt.createDeepCopy(GmCXt.model.rule)
	},
	area_of_interest: {
		_type: "object",
		_clone: true,
		_obj: {
			left: {
				_type: "number"
			},
			top: {
				_type: "number"
			},
			width: {
				_type: "number"
			},
			height: {
				_type: "number"
			}
		}
	},
	automation: {
		_type: "object",
		_clone: true,
		_obj: {
			enableDefaultData: {
				_type: "bool",
				_default: false
			},
			enableAutomationWindow: {
				_type: "bool",
				_default: false
			},
			hasHumanInteraction: {
				_type: "bool",
				_default: false
			},
			xpath: {
				_type: "string"
			},
			muteNarration: {
				_type: "bool",
				_default: false
			},
			afterXSeconds: {
				_type: "number",
				_default: 4
			},
			manualAutoTimer: {
				_type: "bool",
				_default: false
			},
			enableBot: {
				_type: "bool",
				_default: false
			},
			botQuestion: {
				_type: "string",
				_default: ""
			}
		}
	},
	scheme: {
		_type: "string",
		_val: ["http", "https"]
	},
	showPreviousStep: {
		_type: "bool",
		_default: false
	},
	hidePreviousStep: {
		_type: "bool",
		_default: false
	},
	tutorialHeight: {
		_type: "number",
		_default: 80
	},
	tutorialWidth: {
		_type: "number",
		_default: 40
	},
	tutorialUploadMode: {
		_type: "string",
		_default: 'new_tab'
	},
	tutorialUploadUrl: {
		_type: "string"
	},
	branch: {
		_type: "array",
		_required: false,
		_obj: {
			tail: {
				_type: "string"
			},
			branchName: {
				_type: "string"
			},
			isDefault: {
				_type: "bool"
			},
			rulesEngine: {
				_type: "array",
				_obj: GmCXt.createDeepCopy(GmCXt.model.rule)
			}
		}
	},
	branch_type: {
		_type: "string",
		_required: false,
		_default: "Rule Based"
	},
	matchByText: {
		_type: "bool",
		_default: false
	},
	matchVertically: {
		_type: "bool",
		_default: false
	},
	matchHorizontally: {
		_type: "bool",
		_default: false
	},
	matchPositionSetting: {
		_type: "string",
		_default: "Both"
	},
	groupTitle: {
		_type: "string",
		_required: false
	},
	showFullScreen: {
		_type: "bool",
		_default: false
	},
	dynamicPositioning: {
		_type: "bool",
		_default: false
	},
	transport_url : {
		_type: "string",
		_required: true
	},
};

GmCXt.model.step = {
	application_id: {
		_type: "number",
		_required: true
	},
	creation_date: {
		_type: "number",
		_required: false
	},
	image_path: {
		_type: "string",
		_required: true
	},
	image_url: {
		_type: "string",
		_required: true
	},
	is_active: {
		_type: "bool",
		_required: true
	},
	is_image_processed: {
		_type: "bool",
		_required: true
	},
	is_screen_url_processed: {
		_type: "bool",
		_required: true
	},
	is_thumbnail_processed: {
		_type: "bool",
		_required: true
	},
	modification_date: {
		_type: "number",
		_required: false
	},
	organization_id: {
		_type: "number",
		_required: true
	},
	screen_path: {
		_type: "string",
		_required: true
	},
	screen_url: {
		_type: "string",
		_required: true
	},
	step_audio: {
		_type: "string",
		_required: true,
		_val: ".mp3"
	},
	step_audio_text: {
		_type: "string",
		_required: true,
		_default: " "
	},
	step_description: {
		_type: "string",
		_required: true
	},
	step_id: {
		_type: "string",
		_required: true
	},
	step_image: {
		_type: "number",
		_required: true,
		_default: 0
	},
	step_order: {
		_type: "number",
		_required: true
	},
	step_screen: {
		_type: "string",
		_required: true,
		_default: 0
	},
	step_settings: {
		_type: "object",
		_clone: true,
		_obj: GmCXt.createDeepCopy(GmCXt.model.stepSettings)
	},
	step_thumbnail: {
		_type: "number",
		_required: true
	},
	step_title: {
		_type: "string",
		_required: true
	},
	step_type: {
		_type: "string",
		_required: true
	},
	step_url: {
		_type: "string",
		_required: true
	},
	step_video: {
		_type: "number",
		_required: true
	},
	step_video_url: {
		_type: "string",
		_required: true
	},
	thumbnail_path: {
		_type: "string",
		_required: true
	},
	thumbnail_url: {
		_type: "string",
		_required: true
	},
	tour_id: {
		_type: "string",
		_required: true
	},
	video_path: {
		_type: "string",
		_required: true
	},
	language_data: {
		_type: "object",
		_required: false,
		_obj: {
			step_title: {
				_type: "string"
			},
			voice: {
				_type: "string"
			},
			name: {
				_type: "string"
			},
			step_description: {
				_type: "string"
			}
		}
	}
};

GmCXt.model.steps = {
	_type: "array",
	_obj: GmCXt.createDeepCopy(GmCXt.model.step)
};
GmCXt.model.token = {
	token: {
		_type: "string"
	}
};

GmCXt.model.userToken = {
	refreshtoken: {
		_type: "string",
		_required: true
	},
	accesstoken: {
		_type: "string",
		_required: true
	},
	app_access: {
		_type: "array",
		_obj: {}
	}
};

GmCXt.model.user = {
	accesstoken: {
		_type: "string",
		_required: true
	},
	app_access: {
		_type: "array",
		_obj: {}
	},
	cdn_signature: {
		_type: "string",
		_required: true
	},
	cdn_signature_expiry: {
		_type: "number"
	},
	creation_date: {
		_type: "number"
	},
	first_name: {
		_type: "string",
		_required: true
	},
	image_id: {
		_type: "number"
	},
	image_url: {
		_type: "string",
		_required: true
	},
	is_paid: {
		_type: "bool"
	},
	is_suspend: {
		_type: "bool"
	},
	is_verified: {
		_type: "bool"
	},
	keep_login: {
		_type: "bool"
	},
	last_name: {
		_type: "string"
	},
	mandatory_pass_change: {
		_type: "bool"
	},
	modification_date: {
		_type: "number"
	},
	org_role_id: {
		_type: "number"
	},
	organization_id: {
		_type: "number",
		_required: true
	},
	profile: {
		_type: "string",
		_default: "{}"
	},
	refreshtoken: {
		_type: "string",
		_required: true
	},
	relation_id: {
		_type: "number"
	},
	role: {
		_type: "string"
	},
	settings: {
		_type: "object",
		_clone: true,
		_obj: {
			showToolbarTooltip: {
				_type: "bool",
				_default: true
			},
			showCaptureTagsInfo: {
				_type: "bool",
				_default: true
			},
			toolbarPosition: {
				_type: "string"
			},
			edcastTermsAccepted: {
				_type: "bool"
			},
			viewed_guide_notifications: {
				_type: "object",
				_obj: {},
			},
			surveyCompleted: {
				_type: "object",
				_obj: {},
			},
			guide_view: {
				_type: "object",
				_obj: {}
			},
		}
	},
	user_email: {
		_type: "string",
		_required: true
	},
	user_id: {
		_type: "number",
		_required: true
	},
	user_key: {
		_type: "string"
	}
};

GmCXt.model.users = {
	_type: "array",
	_obj: GmCXt.createDeepCopy(GmCXt.model.user)
};
GmCXt.model.guide = {
	application_id: {
		_type: "number",
		_required: true
	},
	category_id: {
		_type: "number",
		_required: true
	},
	category_title: {
		_type: "string",
		_required: true
	},
	creation_date: {
		_type: "number",
		_required: true
	},
	creator_id: {
		_type: "number",
		_required: true
	},
	image_path: {
		_type: "string",
		_required: true
	},
	image_url: {
		_type: "string",
		_required: true
	},
	is_active: {
		_type: "bool",
		_required: true
	},
	is_locked: {
		_type: "bool",
		_required: true
	},
	is_private: {
		_type: "bool",
		_required: true
	},
	is_published: {
		_type: "bool",
		_required: true,
		_default: false
	},
	media_files: {
		_type: "array",
		_obj: {
			gify: {
				_type: "string"
			},
			pdf: {
				_type: "string"
			},
			ppt: {
				_type: "string"
			},
			video: {
				_type: "string"
			},
			blog: {
				_type: "string"
			},
			doc: {
				_type: "string"
			},
			text: {
				_type: "string"
			}
		}
	},
	modification_date: {
		_type: "number",
		_required: true
	},
	organization_id: {
		_type: "number",
		_required: true
	},
	step_count: {
		_type: "number",
		_required: true
	},
	steps: {
		_type: "array",
		_obj: GmCXt.createDeepCopy(GmCXt.model.step)
	},
	thumbnail_path: {
		_type: "string",
		_required: true
	},
	thumbnail_url: {
		_type: "string",
		_required: true
	},
	tour_description: {
		_type: "string",
		_required: true
	},
	tour_id: {
		_type: "number",
		_required: true
	},
	tour_image: {
		_type: "number",
		_required: true,
		_default: "0"
	},
	tour_order: {
		_type: "number",
		_required: true
	},
	tour_settings: {
		_type: "object",
		_clone: true,
		_obj: {
			ruleCheckOnClick: {
				_type: "bool",
				default: false
			},
			beacon: {
				_type: "object",
				_clone: true,
				_obj: {
					beaconPreviewImagePath: {
						_type: "string"
					},
					beaconIcon: {
						_type: "string"
					},
					stickTargetElement: {
						_type: "bool",
						default: false
					}
				}
			},
			process_ppt: {
				_type: "object",
				_clone: true,
				_obj: {
					file_id: {
						_type: "number"
					},
					url: {
						_type: "string"
					}
				}
			},
			slideshow_mode: {
				_type: "bool"
			},
			enableBot: {
				_type: "bool",
				default: false
			},
			isAutolaunch: {
				_type: "bool",
				default: false
			},
			videoNotification: {
				_type: "bool",
				default: false
			},
			oneTimeNotification: {
				_type: "bool",
				default: false
			},
			stepDelayTime: {
				_type: "number",
				_default: 0
			},
			ruleDelayTime: {
				_type: "number",
				_default: 0
			},
			defaultPlayAction: {
				_type: "string",
				_default: 'Default'
			},
			rules: {
				_type: "array",
				_obj: GmCXt.createDeepCopy(GmCXt.model.rule)
			},
			overlay_rules: {
				_type: "array",
				_obj: {}
			},
			enableKeyboardInput: {
				_type: "bool",
				default: false
			},
			keyboardKeyInput: {
				_type: "string",
				_default: ''
			},
			video_settings: {
				_type: "object",
				_required: "false",
				_clone: true,
				_obj: {
					first_slide_text: {
						_type: "string"
					},
					first_slide_recorded_audio: {
						_type: "bool",
						_default: false
					},
					first_slide_recorded_audio_url: {
						_type: "string"
					},
					first_slide_id: {
						_type: "number"
					},
					first_slide_img: {
						_type: "string",
						_default: GmCXt.conf.staticContentPath + "default_first_slide.png"
					},
					last_slide_text: {
						_type: "string"
					},
					last_slide_recorded_audio: {
						_type: "bool",
						_default: false
					},
					last_slide_recorded_audio_url: {
						_type: "string"
					},
					last_slide_id: {
						_type: "number"
					},
					last_slide_img: {
						_type: "string",
						_default: GmCXt.conf.staticContentPath + "default_last_slide.png"
					}
				}
			},
			show_title_slide: {
				_type: "bool",
				_default: true
			},
			show_slide: {
				_type: "bool",
				_default: true
			},
			show_video_subtitle: {
				_type: "bool",
				_default: true
			},
			add_video_animation: {
				_type: "string",
				_default: ''
			},
			translationEnable: {
				_type: "bool",
				_default: true
			},
			disableRedirect: {
				_type: "bool",
				_default: false
			},
			language_settings: {
				_type: "object",
				_required: false,
				_clone: true,
				_obj: GmCXt.createDeepCopy(GmCXt.model.langOption)
			},
			step_settings: {
				_type: "object",
				_required: false,
				_clone: true,
				_obj: {
					hideStepIcon: {
						_type: "bool",
						_default: false
					},
					doNotShowPopup: {
						_type: "bool",
						_default: false
					},
					forceGuideMe: {
						_type: "bool",
						_default: false
					}
				}
			},
			play_structure: {
				_type: "array",
				_obj: {
					"id": {
						_type: "number"
					},
					"tail": {
						_type: "number_or_null"
					}
				}
			},
			downloadGuideFiles: {
				_type: "object",
				_required: false,
				_clone: true,
				_obj: {
					video_file: {
						_type: "bool",
						_default: true
					},
					pdf_file: {
						_type: "bool",
						_default: true
					},
					pptx_file: {
						_type: "bool",
						_default: true
					},
					gif_file: {
						_type: "bool",
						_default: true
					},
					text_file: {
						_type: "bool",
						_default: true
					},
					word_file: {
						_type: "bool",
						_default: true
					},
					blog_file: {
						_type: "bool",
						_default: true
					}
				}
			},
			tour_type: {
				_type: "string",
				_default: 'default'
			},
			version: {
				_type: "string"
			},
			enableAudio: {
				_type: "bool",
				default: false
			},
			disableAudio: {
				_type: "bool",
				default: false
			},
			enableVideoDefaultShowme: {
				_type: "bool",
				default: false
			},
			hidePrevBtn: {
				_type: "bool",
				default: false
			},
			guideHideForP: {
				_type: "bool",
				default: false
			},
			watchRulesElement: {
				_type: "bool",
				default: false
			},
			segments: {
				_type: "array",
				_obj: GmCXt.createDeepCopy(GmCXt.model.segment)
			},
			removeBeaconRulesInvalid: {
				_type: "bool",
				default: false
			},
			segment_groups: {
				_type: "array",
				_obj: {
					_arrOf: 'string'
				}
			},
			tutorial_tour_type: {
				_type: "string",
				_default: 'tutorial'
			},
			sentiment: {
				_type: "object",
				_clone: true,
				_obj: {
					sentimentCode: {
						_type: "string"
					}
				}
			},
			conversation: {
				_type: "object",
				_clone: true,
				_obj: {
					conversationCode: {
						_type: "string"
					}
				}
			}
			// publish_env: {
			// 	_type: "array",
			// 	_obj: {}
			// },
		}
	},
	tour_thumbnail: {
		_type: "number",
		_required: true
	},
	tour_title: {
		_type: "string",
		_required: true
	},
	tour_type: {
		_type: "string",
		_required: true
	},
	tour_url: {
		_type: "string",
		_required: true
	},
	user_email: {
		_type: "string",
		_required: true
	},
	user_first_name: {
		_type: "string",
		_required: true
	},
	user_id: {
		_type: "number",
		_required: true
	},
	user_last_name: {
		_type: "string",
		_required: true
	},
	keywords: {
		_type: "string",
		_required: true
	},
	language_data: {
		_type: "object",
		_obj: {
			tour_title: {
				_type: "string"
			},
			voice: {
				_type: "string"
			},
			name: {
				_type: "string"
			},
			tour_description: {
				_type: "string"
			}
		}
	},
	version: {
		_type: "number",
		_required: true
	}
};

GmCXt.model.guides = {
	_type: "array",
	_obj: GmCXt.createDeepCopy(GmCXt.model.guide)
};
GmCXt.model.category = {
	application_id: {
		_type: "number",
		_required: true
	},
	category_description: {
		_type: "string",
		_required: true
	},
	category_id: {
		_type: "number",
		_required: true
	},
	category_image: {
		_type: "number",
		_required: true
	},
	category_order: {
		_type: "number",
		_required: true
	},
	category_title: {
		_type: "string",
		_required: true
	},
	creation_date: {
		_type: "number",
		_required: true
	},
	has_child: {
		_type: "bool",
		_required: true
	},
	has_tour: {
		_type: "bool",
		_required: true
	},
	image_path: {
		_type: "string",
		_required: true
	},
	image_url: {
		_type: "string",
		_required: true
	},
	is_active: {
		_type: "bool",
		_required: true
	},
	is_published: {
		_type: "bool",
		_required: true
	},
	modification_date: {
		_type: "number",
		_required: true
	},
	organization_id: {
		_type: "number",
		_required: true
	},
	parent_id: {
		_type: "number",
		_required: true
	},
	settings: {
		_type: "string",
		_required: true
	},
	total_publish_tour: {
		_type: "number",
		_required: true
	},
	total_sub_category: {
		_type: "number",
		_required: true
	},
	total_unpublish_tour: {
		_type: "number",
		_required: true
	},
	user_id: {
		_type: "number",
		_required: true
	},
	language_data: {
		_type: "object",
		_required: "false",
		_obj: {
			category_title: {
				_type: "string"
			},
			voice: {
				_type: "string"
			},
			name: {
				_type: "string"
			},
			category_description: {
				_type: "string"
			}
		}
	}
};

GmCXt.model.categories = {
	_type: "array",
	_obj: GmCXt.createDeepCopy(GmCXt.model.category)
};
GmCXt.model.domain = {
	id: {
		_type: "string"
	},
	url: {
		_type: "string"
	},
	isDefault: {
		_type: "bool"
	},
	env: {
		_type: "string",
		_default: "prod"
	},
	appName: {
		_type: "string"
	}
};

GmCXt.model.application = {
	application_id: {
		_type: "number",
		_required: true
	},
	creation_date: {
		_type: "number",
		_required: true
	},
	description: {
		_type: "string",
		_required: true
	},
	image_id: {
		_type: "number",
		_required: true
	},
	image_path: {
		_type: "string",
		_required: true
	},
	image_url: {
		_type: "string",
		_required: true
	},
	is_active: {
		_type: "bool",
		_required: true
	},
	is_default: {
		_type: "bool",
		_required: true
	},
	modification_date: {
		_type: "number",
		_required: true
	},
	name: {
		_type: "string",
		_required: true
	},
	organization_id: {
		_type: "number",
		_required: true
	},
	app_url: {
		_type: "array",
		_required: true
	},
	categories: {
		_type: "array",
		_obj: mg$.extend({}, GmCXt.model.category)
	},
	settings: {
		_type: "object",
		_obj: {
			domains: {
				_type: "array",
				_obj: mg$.extend({}, GmCXt.model.domain)
			},
			first_slide_text: {
				_type: "string",
				_inherit: true
			},
			last_slide_text: {
				_type: "string",
				_inherit: true
			},
			copyright_text: {
				_type: "string",
				_inherit: true
			},
			first_slide: {
				_type: "string",
				_inherit: true
			},
			last_slide: {
				_type: "string",
				_inherit: true
			},
			widget_icon: {
				_type: "number",
				_inherit: true
			},
			fqdn: {
				_type: "bool",
				_inherit: true
			},
			popupDesign: {
				_type: "object",
				_clone: true,
				_inherit: true,
				_obj: {
					type: {
						_type: "string",
						_inherit: true
					},
					default: {
						_type: "object",
						_clone: true,
						_obj: mg$.extend({}, GmCXt.model.popupDesign_default)
					},
					classic: {
						_type: "object",
						_clone: true,
						_obj: mg$.extend({}, GmCXt.model.popupDesign_classic)
					},
					current: {
						_type: "object",
						_clone: true,
						_obj: mg$.extend({}, GmCXt.model.popupDesign_default)
					}
				}
			},
			tutorialBgColor: {
				_type: "string",
				_inherit: true
			},
			showWidgetIcon: {
				_type: "bool",
				_clone: true,
				_inherit: true
			},
			rules: {
				_type: "array",
				_obj: mg$.extend({}, GmCXt.model.rule)
			},
			widgetIconPos: {
				_type: "string",
				_inherit: true
			},
			showWidgetIconRight: {
				_type: "bool",
				_inherit: true
			},
			keep_player_panel_open: {
				_type: "bool",
				_inherit: true
			},
			defaultGuideView: {
				_type: "bool",
				_inherit: true
			},
			enable_send_feedback: {
				_type: "bool",
				_inherit: true
			},
			showWidgetIconBottom: {
				_type: "bool",
				_inherit: true
			},
			feedback_type: {
				_type: "string",
				_inherit: true
			},
			feedback_email: {
				_type: "string",
				_inherit: true
			},
			feedback_url: {
				_type: "string",
				_inherit: true
			},
			enable_chatbot: {
				_type: "bool",
				_inherit: true
			},
			chatIconPos: {
				_type: "string",
				_inherit: true
			},
			chat_icon_pos: {
				_type: "object",
				_clone: true,
				_inherit: true,
				_obj: {
					chat_icon_top_pos: {
						_type: "number",
						_inherit: true
					},
					chat_icon_bottom_pos: {
						_type: "number",
						_inherit: true
					},
					chat_icon_left_pos: {
						_type: "number",
						_inherit: true
					},
					chat_icon_right_pos: {
						_type: "number",
						_inherit: true
					},
					chat_icon_id: {
						_type: "number"
					},
					chat_icon_top_pos_unit: {
						_type: "string",
						_inherit: true
					},
					chat_icon_bottom_pos_unit: {
						_type: "string",
						_inherit: true
					},
					chat_icon_left_pos_unit: {
						_type: "string",
						_inherit: true
					},
					chat_icon_right_pos_unit: {
						_type: "string",
						_inherit: true
					}
				}
			},
			chat_icon_path: {
				_type: "string",
				_inherit: true
			},
			chatIconType: {
				_type: "string",
				_inherit: true
			},
			chatIconSize: {
				_type: "object",
				_clone: true,
				_inherit: true,
				_obj: {
					chatIconWidth: {
						_type: "number",
						_inherit: true
					},
					chatIconHeight: {
						_type: "number",
						_inherit: true
					}
				}
			},
			showChatIconRight: {
				_type: "bool",
				_inherit: true
			},
			showChatIconBottom: {
				_type: "bool",
				_inherit: true
			},
			widget_icon_pos: {
				_type: "object",
				_clone: true,
				_inherit: true,
				_obj: {
					widget_icon_top_pos: {
						_type: "number",
						_inherit: true
					},
					widget_icon_bottom_pos: {
						_type: "number",
						_inherit: true
					},
					widget_icon_left_pos: {
						_type: "number",
						_inherit: true
					},
					widget_icon_right_pos: {
						_type: "number",
						_inherit: true
					},
					widget_icon_id: {
						_type: "number"
					},
					widget_icon_top_pos_unit: {
						_type: "string",
						_inherit: true
					},
					widget_icon_bottom_pos_unit: {
						_type: "string",
						_inherit: true
					},
					widget_icon_left_pos_unit: {
						_type: "string",
						_inherit: true
					},
					widget_icon_right_pos_unit: {
						_type: "string",
						_inherit: true
					}
				}
			},
			widget_icon_path: {
				_type: "string",
				_inherit: true
			},
			hide_widget_if_noguide: {
				_type: "bool",
				_inherit: true
			},
			widget_icon_zindex: {
				_type: "string",
				_inherit: true
			},
			guide_count_on_widget: {
				_type: "bool",
				_inherit: true
			},
			guide_count_widget_color: {
				_type: "string",
				_inherit: true
			},
			selectorStyle: {
				_type: "object",
				_clone: true,
				_inherit: true,
				_obj: {
					borderColor: {
						_type: "string",
						_inherit: true
					},
					borderWidth: {
						_type: "number",
						_inherit: true
					}
				}
			},
			stepPopupWidth: {
				_type: "number",
				_inherit: true
			},
			hideBrandLogo: {
				_type: "bool",
				_inherit: true
			},
			logo_id: {
				_type: "number",
				_inherit: true
			},
			logo: {
				_type: "string",
				_inherit: true
			},
			variables: {
				_type: "array",
				_obj: mg$.extend({}, GmCXt.model.variables)
			},
			widgetIconType: {
				_type: "string",
				_inherit: true
			},
			guideMeSetting: {
				_type: "bool",
				_inherit: true
			},
			showMeSetting: {
				_type: "bool",
				_inherit: true
			},
			testMeSetting: {
				_type: "bool",
				_inherit: true
			},
			doitforme: {
				_type: "bool",
				_inherit: true
			},
			vLab: {
				_type: "bool",
				_inherit: true
			},
			giphy: {
				_type: "bool",
				_inherit: true
			},
			video: {
				_type: "bool",
				_inherit: true
			},
			slideshow: {
				_type: "bool",
				_inherit: true
			},
			defaultPlayAction: {
				_type: "string",
				_inherit: true
			},
			isMiniPlayer: {
				_type: "bool",
				_inherit: true
			},
			widgetIconSize: {
				_type: "object",
				_clone: true,
				_inherit: true,
				_obj: {
					widgetIconWidth: {
						_type: "number",
						_inherit: true
					},
					widgetIconHeight: {
						_type: "number",
						_inherit: true
					}
				}
			},
			notificationDelay: {
				_type: "number",
				_inherit: true
			},
			notificationsTime: {
				_type: "string",
				_inherit: true
			},
			userLabels: {
				_type: "object",
				_obj: mg$.extend({}, GmCXt.model.userLabels),
				_clone: true,
				_inherit: true
			},

			chatLabels: {
				_type: "object",
				_obj: mg$.extend({}, GmCXt.model.chatLabels),
				_clone: true
			},
			notifications: {
				_type: "object",
				_clone: true,
				_inherit: true,
				_obj: {
					notifThemeColor: {
						_type: "string",
						_inherit: true
					}
				}
			},
			all_guide: {
				_type: "bool",
				_default: false,
				_inherit: true
			},
			playAudio: {
				_type: "bool",
				_inherit: true
			},
			tutorial_guide: {
				_type: "object",
				_clone: true,
				_inherit: true,
				_obj: GmCXt.createDeepCopy(GmCXt.model.tutorial_guide_default)
			},
			tooltipTheme: {
				_type: "bool",
				_inherit: true
			},
			tooltipColor: {
				_type: "string",
				_inherit: true
			},
			autoProceedStep: {
				_type: "bool",
				_inherit: true
			},
			autoStepDelay: {
				_type: "number",
				_inherit: true
			},
			notificationTheme: {
				_type: "object",
				_clone: true,
				_inherit: true,
				_obj: GmCXt.createDeepCopy(GmCXt.model.notificationTheme_default)
			}
		},
		_clone: true
	},
	title: {
		_type: "string",
		_required: true
	}
};

GmCXt.model.chatLabels = {
	greetingMessage: {
		_type: "string",
		_default: ""
	},
	botEndingMessage: {
		_type: "string",
		_default: ""
	},
	errorMessage: {
		_type: "string",
		_default: ""
	}
};

GmCXt.model.variables = {
	name: {
		_type: "string",
	},
	element: {
		_type: "object",
		_obj: mg$.extend({}, GmCXt.model.stepSettings.element)
	},
	value: {
		_type: "string"
	},
	previewImage: {
		_type: "string"
	},
	url: {
		_type: "string"
	},
	rules: {
		_type: "array",
		_obj: mg$.extend({}, GmCXt.model.rule)
	}
};

GmCXt.model.applications = {
	_type: "array",
	_obj: mg$.extend({}, GmCXt.model.application)
};
/**
	* @file Guideme HTTP service
	* @author Nilesh Pachpande
	*/

GmCXt.userApiKeySignin = function(data) {

	var myGuideOrgKey = data.myGuideOrgKey;
	delete data.myGuideOrgKey;

	var serviceName = 'user/sso/login?mg_source_name=' + GmCXt.conf.appConfig.customer;

	var params = {
		url: serviceName,
		method: 'POST',
		headers: {
			'Content-Type': "application/json",
			"Authorization": myGuideOrgKey
		},
		data: JSON.stringify(data)
	};
	return GmCXt.xhr(params);
};

GmCXt.getAnonymousUserPrefrence = function(data, accesstoken) {

	var params = {
		url: 'user/preference',
		method: 'POST',
		headers: {
			'Content-Type': "application/json",
			AccessToken: accesstoken
		},
		data: JSON.stringify(data)
	};
	return GmCXt.xhr(params);
};

GmCXt.setAnonymousUserPrefrence = function(data) {

	var params = {
		url: 'user/preference',
		method: 'PUT',
		headers: {
			'Content-Type': "application/json",
			AccessToken: GmCXt.user.accesstoken
		},
		data: JSON.stringify(data)
	};
	return GmCXt.xhr(params);
};


GmCXt.apiGetHandOffToken = function() {
	var params = {
		url: "accounts/v1/handoff-token/generate/",
		method: 'GET',
		headers: {
			'Content-Type': "application/json",
			AccessToken: GmCXt.user.accesstoken,
			AppKey: GmCXt.conf.apiSecrret,
			RefreshToken: GmCXt.user.refreshtoken
		},
		data: ''
	};
	return GmCXt.xhrAnalytics(params);
};

GmCXt.apiRegisterClientInsight = function() {
	var params = {
		url: "event/v1/client/register/?org_id=" + GmCXt.organization.organization_id,
		method: 'POST',
		headers: {
			'Content-Type': "application/json",
			AccessToken: GmCXt.user.accesstoken,
			AppKey: GmCXt.conf.apiSecrret
		},
		data: ''
	};
	return GmCXt.xhrAnalytics(params, true);
};

GmCXt.apiGetClientSecretInsight = function(o) {
	var params = {
		url: "event/v1/client/secret/?org_id=" + GmCXt.organization.organization_id,
		method: 'POST',
		headers: {
			'Content-Type': "application/json"
		},
		data: JSON.stringify({
			"app_client_id": o
		})
	};
	return GmCXt.xhrAnalytics(params, true);
};

GmCXt.apiTrackEventV1 = function(o) {

	var params = {
		url: "event/v1/push/?org_id=" + o.payload[0].org_id + "&app_code=" + o.payload[0].app_code + "&event_type=" + o.payload[0].event_type,
		method: 'POST',
		headers: {
			'Content-Type': "application/json"
		},
		data: JSON.stringify(o)
	};
	return GmCXt.xhrAnalytics(params);
};

GmCXt.apitrackSentiment = function(o) {
	var params = {
		url: "register/v1/sentiment/report/",
		method: 'POST',
		headers: {
			'Content-Type': "application/json",
			accesstoken: GmCXt.user.accesstoken,
			appkey: GmCXt.conf.apiSecrret
		},
		data: JSON.stringify(o)
	};
	return GmCXt.xhrAnalytics(params);
};

GmCXt.apitrackConversation = function(o) {
	var params = {
		url: "register/v1/conversation/report/",
		method: 'POST',
		headers: {
			'Content-Type': "application/json",
			accesstoken: GmCXt.user.accesstoken,
			appkey: GmCXt.conf.apiSecrret
		},
		data: JSON.stringify(o)
	};
	return GmCXt.xhrAnalytics(params);
};

GmCXt.apiUpdateSentiment = function(o) {
	var params = {
		url: "sentiments/v1/questionaire/",
		method: 'PUT',
		headers: {
			'Content-Type': "application/json",
			accesstoken: GmCXt.user.accesstoken,
			key: GmCXt.trackerUtil.clientKey,
			appkey: GmCXt.conf.apiSecrret
		},
		data: JSON.stringify(o)
	};
	return GmCXt.xhrAnalytics(params);
};

GmCXt.apiDeleteSentiment = function(o) {
	var url = "";
	if (o.app_code) {
		url = "sentiments/v1/questionaire/?app_code=" + o.app_code + "&sentiment_code=" + o.sentiment_code +
			"&time_zone=utc+0530";
	} else {
		url = "sentiments/v1/questionaire/?sentiment_code=" + o.sentiment_code +
			"&time_zone=utc+0530";
	}

	var params = {
		url: url,
		method: 'DELETE',
		headers: {
			'Content-Type': "application/json",
			accesstoken: GmCXt.user.accesstoken,
			appkey: GmCXt.conf.apiSecrret
		},
		data: ''
	};

	return GmCXt.xhrAnalytics(params);
};

GmCXt.apiGetSentiment = function(o) {
	var url = "";
	if (o.app_code) {
		url = "sentiments/v1/questionaire/?app_code=" + o.app_code + "&sentiment_code=" + o.sentiment_code +
			"&time_zone=utc+0530";
	} else {
		url = "sentiments/v1/questionaire/?sentiment_code=" + o.sentiment_code +
			"&time_zone=utc+0530";
	}
	var params = {
		url: url,
		method: 'GET',
		headers: {
			'Content-Type': "application/json",
			accesstoken: GmCXt.user.accesstoken,
			appkey: GmCXt.conf.apiSecrret
		},
		data: ''
	};

	return GmCXt.xhrAnalytics(params);
};

GmCXt.apiGetBotConv = function(o) {
	var url = "";
	if (o.app_code) {
		url = "conversations/v1/questionaire/?app_code=" + o.app_code + "&conversation_code=" + o.conversation_code +
			"&time_zone=utc+0530";
	} else {
		url = "conversations/v1/questionaire/?conversation_code=" + o.conversation_code +
			"&time_zone=utc+0530";
	}
	var params = {
		url: url,
		method: 'GET',
		headers: {
			'Content-Type': "application/json",
			accesstoken: GmCXt.user.accesstoken,
			appkey: GmCXt.conf.apiSecrret
		},
		data: ''
	};

	return GmCXt.xhrAnalytics(params);
};

GmCXt.apiGetSentiments = function(o) {
	var url = "";
	if (o.app_code) {
		url = "sentiments/v1/list/?app_code=" + o.app_code + "&sort_by=sentiment_title&order=asc&page_index=" +
			o.pageIndex + "&page_size=" + o.pageSize;
	} else {
		url = "sentiments/v1/list/?sort_by=sentiment_title&order=asc&page_index=" +
			o.pageIndex + "&page_size=" + o.pageSize;
	}
	var params = {
		url: url,
		method: 'GET',
		headers: {
			'Content-Type': "application/json",
			accesstoken: GmCXt.user.accesstoken,
			appkey: GmCXt.conf.apiSecrret
		},
		data: ''
	};

	return GmCXt.xhrAnalytics(params);
};

GmCXt.apiGetBotConvList = function(o) {
	var url = "";
	if (o.app_code) {
		url = "conversations/v1/list/?app_code=" + o.app_code + "&sort_by=conversation_title&order=asc&page_index=" +
			o.pageIndex + "&page_size=" + o.pageSize;
	} else {
		url = "conversations/v1/list/?sort_by=conversation_title&order=asc&page_index=" +
			o.pageIndex + "&page_size=" + o.pageSize;
	}
	var params = {
		url: url,
		method: 'GET',
		headers: {
			'Content-Type': "application/json",
			accesstoken: GmCXt.user.accesstoken,
			appkey: GmCXt.conf.apiSecrret
		},
		data: ''
	};

	return GmCXt.xhrAnalytics(params);
};

GmCXt.apiPostSurvey = function(o, user) {
	var params = {
		url: "v3/survey/questionnaire/" + o.guide_id + "/",
		method: 'POST',
		headers: {
			'Content-Type': "application/json",
			accesstoken: user.accesstoken,
			key: GmCXt.trackerUtil.clientKey,
			appkey: GmCXt.conf.apiSecrret
		},
		data: JSON.stringify(o)
	};
	return GmCXt.xhrAnalytics(params);
};

GmCXt.apiPostSentiment = function(o) {
	var params = {
		url: "sentiments/v1/questionaire/",
		method: 'POST',
		headers: {
			'Content-Type': "application/json",
			accesstoken: GmCXt.user.accesstoken,
			key: GmCXt.trackerUtil.clientKey,
			appkey: GmCXt.conf.apiSecrret
		},
		data: JSON.stringify(o)
	};
	return GmCXt.xhrAnalytics(params);
};

GmCXt.apiUpdateUserProfile = function(user) {
	user.settings = JSON.stringify(user.settings);
	var params = {
		url: "user",
		method: 'PUT',
		data: JSON.stringify(user)
	};
	return GmCXt.xhr(params);
};

GmCXt.apiUpdateUserGuidevView = function(data) {
	var guideView = {
		guide_view: JSON.stringify(data)
	};

	var params = {
		url: "user/guide_view",
		method: 'PUT',
		data: JSON.stringify(guideView)
	};
	return GmCXt.xhr(params);
};

GmCXt.logoutUser = function() {
	GmCXt.msgToApp('mgPlayerJSTest_action:to_signin_page', {}, senderTabId);
};

GmCXt.loginFromConsole = function(email, password) {
	if (!GmCXt.isBackgroundPage) {
		GmCXt.msgToApp('mgPlayerJSTest_action:signin_from_console', {
			email: email,
			password: password
		}, senderTabId);
	}
};

GmCXt.saveMyBotReport = function(o) {
	var params = {
		url: "register/v1/mybot/report/",
		method: 'POST',
		headers: {
			'Content-Type': "application/json",
			'AccessToken': GmCXt.user.accesstoken,
			appkey: GmCXt.conf.apiSecrret
		},
		data: JSON.stringify(o)
	};
	return GmCXt.xhrAnalytics(params);
};

GmCXt.getElementsDetailInsights = function(id) {
	var params = {
		url: "tracker/v1/element/metedata/contextual/?app_code=" + id + "&url=" + GmCXt.urlParts.host,
		method: 'GET',
		headers: {
			'Content-Type': "application/json",
			'AccessToken': GmCXt.user.accesstoken,
			appkey: GmCXt.conf.apiSecrret
		}
	};
	return GmCXt.xhrAnalytics(params);
};

GmCXt.createNewElTrackObject = function(obj) {
	var params = {
		url: "tracker/v1/element/metedata/",
		method: 'POST',
		headers: {
			'Content-Type': "application/json",
			'AccessToken': GmCXt.user.accesstoken,
			appkey: GmCXt.conf.apiSecrret
		},
		data: JSON.stringify(obj)
	};
	return GmCXt.xhrAnalytics(params);
};

GmCXt.updateElTrackObject = function(obj) {
	var params = {
		url: "tracker/v1/element/metedata/",
		method: 'PUT',
		headers: {
			'Content-Type': "application/json",
			'AccessToken': GmCXt.user.accesstoken,
			appkey: GmCXt.conf.apiSecrret
		},
		data: JSON.stringify(obj)
	};
	return GmCXt.xhrAnalytics(params);
};

GmCXt.apiGetSegmentGroupList = function(o) {
	var params = {
		url: "segment/group/list?organization_id=" + o.organization_id,
		method: "GET",
		headers: {
			'Content-Type': "application/json"
		},
		data: ''
	};
	return GmCXt.xhr(params);
};

GmCXt.apiPostSegmentGroupList = function(data) {
	var params = {
		url: "segment/group",
		method: "POST",
		headers: {
			'Content-Type': "application/json"
		},
		data: JSON.stringify(data)
	};
	return GmCXt.xhr(params);
};

GmCXt.apiPutSegmentGroupList = function(data) {
	var params = {
		url: "segment/group",
		method: "PUT",
		headers: {
			'Content-Type': "application/json"
		},
		data: JSON.stringify(data)
	};
	return GmCXt.xhr(params);
};

GmCXt.apiDeleteSegmentGroupList = function(data) {

	var params = {
		url: 'segment/group',
		method: 'DELETE',
		headers: {
			'Content-Type': "application/json"
		},
		data: JSON.stringify(data)
	};
	return GmCXt.xhr(params);
};

GmCXt.callGetCdnSignature = function(data) {

	var params = {
		url: 'organization/signature?',
		method: 'GET',
		headers: {
			'Content-Type': "application/json"
		},
		data: GmCXt.encode(data)
	};
	return GmCXt.xhr(params);
};

GmCXt.sendFeedbackEmail = function(obj) {
	var params = {
		url: "organization/feedback",
		method: 'POST',
		headers: {
			'Content-Type': "application/json"
		},
		data: JSON.stringify(obj)
	};
	return GmCXt.xhr(params);
};

GmCXt.getSearchURL = function(url, searchData) {
	var searchParams = new URLSearchParams(searchData);
	var searchParamsStr = searchParams.toString();
	if (searchParamsStr.length && searchParamsStr.indexOf("?") === -1 && url.indexOf("?") === -1) {
		searchParams = "?" + searchParams.toString();
	}
	url = url + searchParams;
	return url;
};

GmCXt.xhr = function(params, doNotAddWebURL, extApi) {

	return new Promise(function(resolve, reject) {
		var host = "";

		if(!GmCXt.isEmpty(GmCXt.urlParts)){
			host = GmCXt.urlParts.host;
		}

		var headers = {
			'x-mg-host': host,
			'x-mg-source': GmCXt.conf.appName,
			'x-mg-orgId': ''
		};

		var showMaintenance = function() {
			if (GmCXt.isBackgroundPage === true) {
				GmCXt.sendMessageToPanel('mgPlayerJSTest_action:maintenance');
			} else {
				GmCXt.sendMessageToApp('mgPlayerJSTest_action:maintenance');
			}
		};

		var onError = function(error) {
			console.log(error);
			if (error) {
				error.url = params.url;
				error.paramsData = params.data;
				error.method = params.method;

				var code = error.code;

				if (code == 1003 || code === 2004 || (code === 2036 && (error.url.indexOf('user/signout') > 0 || error.url.indexOf('user/token') > 0))) { // AccessToken Invalid || Session Expired
					if (GmCXt.isBackgroundPage) {
						GmCXt.createStepJobs = [];
					}
					GmCXt.logoutUser();
					reject(error);

				} else if (code == 1007) { // AccessToken expired
					GmCXt.getAccessToken().then(function(r) {
						GmCXt.saveToken(r);
						params.headers.AccessToken = GmCXt.user.accesstoken;
						ajax();
					}).catch(function() {
						GmCXt.logoutUser();
					});

				} else if (code === 1014) {
					showMaintenance();
					reject(error);

				} else {
					reject(error);
				}

			} else {
				reject();
			}
		};

		var onSuccess = function(result) {

			result.code = parseInt(result.code);

			if (doNotAddWebURL) {
				resolve(result);
				return;
			}

			var code = result.code;
			if (result.error === false) {

				if (params.url && params.url.indexOf('user/token') !== -1) {
					result = GmCXt.validateDataModel(result.data, GmCXt.model.userToken);
				}
				if (params.onSuccess) {
					params.onSuccess(result);
				}

				resolve(result);
			} else if (code === 1005) {
				resolve(result);

			} else if (code === 1018) {
				resolve(result);

			} else if (code === 1014) {
				showMaintenance();
				reject(result);

			} else if (code == 1003 || code == 2004 || (code === 2036 && (params.url.indexOf('user/signout') > 0 || params.url.indexOf('user/token') > 0))) { // AccessToken Invalid || Session Expired

				if (GmCXt.isBackgroundPage) {
					GmCXt.createStepJobs = [];
				}
				GmCXt.logoutUser();
				reject(result);

			} else if (code == 1007) { // AccessToken expired
				GmCXt.getAccessToken().then(function(r) {
					GmCXt.saveToken(r);
					params.headers.AccessToken = GmCXt.user.accesstoken;
					callApi_();
				}).catch(function() {
					GmCXt.logoutUser();
				});

			} else {
				reject(result);
			}
		};

		function callApi_() {

			for (var key in params.headers) {
				if (params.headers.hasOwnProperty(key)) headers[key] = params.headers[key];
			}

			if (GmCXt.user && GmCXt.organization) {
				headers.appType = GmCXt.conf.appType;
				headers.orgId = GmCXt.organization.organization_id;
				headers['x-mg-orgId'] = GmCXt.organization.organization_id;

				headers.AccessToken = GmCXt.user.accesstoken;

				processApi();
			} else {
				GmCXt.getDatafromPanel().then(function(d) {
					GmCXt.user = d.user;
					GmCXt.organization = d.organization;
					if (GmCXt.user) {
						headers.appType = GmCXt.conf.appType;
						headers.orgId = GmCXt.organization.organization_id;
						headers.AccessToken = GmCXt.user.accesstoken;
						headers['x-mg-orgId'] = GmCXt.organization.organization_id;
					}
					processApi();
				}).catch(function(e) {
					console.log('Error while fetching user data', e);
				});
			}
		}

		function processApi() {

			var url = GmCXt.conf.webServiceUrl + "" + params.url;
			
			if (doNotAddWebURL) {
				url = params.url;
			}

			if (params.method === 'GET') {

				fetch(GmCXt.getSearchURL(url, params.data), {
						headers: headers,
						method: params.method
					})
					.then(function(response) {

						if (doNotAddWebURL && !extApi) {

							if (response.status === 200) {
								resolve();
							} else {
								reject();
							}

						} else {
							response.json()
								.then(onSuccess)
								.catch(onError);
						}

					}).catch(onError);

			} else {
				fetch(url, {
						headers: headers,
						method: params.method,
						body: params.data
					})
					.then(function(response) {
						response.json()
							.then(onSuccess)
							.catch(onError);
					}).catch(onError);
			}
		}

		callApi_();
	});
};

GmCXt.getDetailTour = function(o) {
	return new Promise(function(resolve, reject) {
		var params = {
			url: "tour",
			method: 'GET',
			headers: {
				'Content-Type': "application/json"
			},
			data: GmCXt.encode(o)
		};

		function gotTour(tour) {
			tour = GmCXt.migrateTour(tour);

			resolve(tour);
		}

		function onSuccess(r) {
			if (r && r.data) {
				GmCXt.validateApiResp(gotTour,
					"tour",
					r.data.tour,
					GmCXt.model.guide);
			} else {
				resolve();
			}
		}

		GmCXt.xhr(params).then(onSuccess);
	});
};

GmCXt.xhrAnalytics = function(params, isInsight) {

	return new Promise(function(resolve, reject) {

		function OnAccessTokenError() {
			GmCXt.getAccessToken().then(function(r) {
				r = r || {};
				GmCXt.saveToken(r);

				params.headers.accesstoken = GmCXt.user.accesstoken;
				ajax();
			}).catch(function() {
				GmCXt.logoutUser();
			});
		}

		var onSuccess = function(result) {

			result = GmCXt.parseJSON(result);

			if (result.status === 'success') {

				if (result.data.event_chain_id) {
					if (isInsight) {
						GmCXt.INSIGHTS_EVENT_CHAIN_ID = result.data.event_chain_id;
					} else {
						GmCXt.ANALYTICS_EVENT_CHAIN_ID = result.data.event_chain_id;
					}
				}
				resolve(result);
			} else {
				if (!GmCXt.isEmpty(result) && GmCXt.isDefined(result.status) &&
					result.status === 'error' &&
					result.description === "Access token expired.") {
					OnAccessTokenError();
				} else {
					reject(result);
				}
			}
		};

		var onError = function(xhr) {

			console.log(xhr);
			if (xhr.responseJSON) {

				if (xhr.responseJSON.description == "Access token expired.") {
					OnAccessTokenError();

				} else {
					var error = xhr.responseJSON;
					error.apiUrl = params.url;
					reject(error);
				}
			} else {
				reject(error);
			}
		};

		function ajax() {

			url = GmCXt.conf.analyticsPath + "" + params.url;

			if (params.method === 'GET') {

				fetch(GmCXt.getSearchURL(url, params.data), {
						headers: params.headers,
						method: params.method
					})
					.then(function(response) {
						response.json()
							.then(function(r) {
								onSuccess(r);
							})
							.catch(onError);
					});

			} else {
				fetch(url, {
						headers: params.headers,
						method: params.method,
						body: params.data
					})
					.then(function(response) {
						response.json()
							.then(onSuccess)
							.catch(onError);
					});
			}
		}

		var org = GmCXt.organization;

		if (!GmCXt.isEmpty(GmCXt.conf.analyticsPath) &&
			((org && org.admin_settings.insights.enabled) || params.url.indexOf("handoff-token") != -1 || GmCXt.isLogoutTrackApi)) {
			ajax();
		} else {
			reject();
		}
	});
};
GmCXt.apiPlayerProvider = function() {

	var pub = {};

	pub.updateUserProfile = GmCXt.updateUserProfile;
	pub.getSentiments = GmCXt.apiGetSentiments;
	pub.getBotConvList = GmCXt.apiGetBotConvList;
	pub.getSentiment = GmCXt.apiGetSentiment;
	pub.getGetBotConv = GmCXt.apiGetBotConv;
	pub.postSurvey = GmCXt.apiPostSurvey;
	pub.getSegmentGroupList = GmCXt.apiGetSegmentGroupList;
	pub.postSegmentGroupList = GmCXt.apiPostSegmentGroupList;
	pub.putSegmentGroupList = GmCXt.apiPutSegmentGroupList;
	pub.deleteSegmentGroupList = GmCXt.apiDeleteSegmentGroupList;
	pub.userApiKeySignin = GmCXt.userApiKeySignin;
	pub.registerClientInsight = GmCXt.apiRegisterClientInsight;
	pub.getClientSecretInsight = GmCXt.apiGetClientSecretInsight;
	pub.trackEventV1 = GmCXt.apiTrackEventV1;
	pub.saveMyBotReport = GmCXt.saveMyBotReport;
	pub.trackSentiment = GmCXt.apitrackSentiment;
	pub.trackConversation = GmCXt.apitrackConversation;
	pub.createNewElTrackObject = GmCXt.createNewElTrackObject;
	pub.getElementsDetailInsights = GmCXt.getElementsDetailInsights;
	pub.getHandOffToken = GmCXt.apiGetHandOffToken;
	pub.updateElTrackObject = GmCXt.updateElTrackObject;
	pub.getCdnSignature = GmCXt.callGetCdnSignature;
	pub.getTour = GmCXt.getDetailTour;
	pub.sendFeedbackEmail = GmCXt.sendFeedbackEmail;
	pub.getAnonymousUserPrefrence = GmCXt.getAnonymousUserPrefrence;
	pub.setAnonymousUserPrefrence = GmCXt.setAnonymousUserPrefrence;

	return pub;
};

if (GmCXt.inPlayer) {
	GmCXt.api = GmCXt.apiPlayerProvider();
}

GmCXt.guideMeApiProvider = function() {

	var pub = {};

	pub.getUser = function(o) {
		var params = {
			url: "user",
			method: 'GET',
			headers: {
				'Content-Type': "application/json"
			},
			data: GmCXt.encode(o)
		};
		return GmCXt.xhr(params);
	};

	pub.getOrganization = function(o) {
		var params = {
			url: "organization",
			method: 'GET',
			headers: {
				'Content-Type': "application/json"
			},
			data: GmCXt.encode(o)
		};
		return GmCXt.xhr(params);
	};

	pub.getOrgSettings = function(o) {
		var params = {
			url: "organization",
			method: 'GET',
			headers: {
				'Content-Type': "application/json"
			},
			data: GmCXt.encode(o)
		};
		return GmCXt.xhr(params);
	};

	pub.getTours = function(o) {
		var params = {
			url: "tour/list",
			method: 'GET',
			headers: {
				'Content-Type': "application/json"
			},
			data: GmCXt.encode(o)
		};
		return GmCXt.xhr(params);

		// 4830:
		//GmCXt.validateApiResp( cb,
		//    params.url, 
		//    r.data.tours, 
		//    GmCXt.model.guides 
		//);
	};

	pub.getVideoUploadUrl = function(data) {
		data.organization_id = GmCXt.organization.organization_id;
		var params = {
			url: "file/upload/url?",
			method: 'GET',
			headers: {},
			data: GmCXt.encode(data)
		};
		return GmCXt.xhr(params);
	};

	pub.getVideoUploadUrl_IBM = function(data) {
		data.organization_id = GmCXt.organization.organization_id;
		var params = {
			url: "file/presigned/upload/url?",
			method: "GET",
			headers: {},
			data: GmCXt.encode(data)
		};
		return GmCXt.xhr(params);
	};

	pub.videoUploadStatus = function(data) {
		data.organization_id = GmCXt.organization.organization_id;
		var params = {
			url: "file/upload/status",
			method: 'POST',
			headers: {},
			data: JSON.stringify(data)
		};
		return GmCXt.xhr(params);
	};

	pub.getVideoLocator = function(data) {
		data.organization_id = GmCXt.organization.organization_id;
		var params = {
			url: "file/upload/status",
			method: 'GET',
			headers: {},
			data: GmCXt.encode(data)
		};
		return GmCXt.xhr(params);
	};

	pub.uploadFTPFile = function(data, successCb, errorCb) {
		data.organization_id = GmCXt.organization.organization_id;
		var params = {
			url: "file/upload/ftp",
			method: "POST",
			serviceType: "",
			data: data,
			fileInput: true,
			onSuccess: successCb,
			onFail: errorCb
		};
		return GmCXt.xhr(params);
	};

	pub.createStep = function(o) {
		var params = {
			url: "step",
			method: 'POST',
			headers: {},
			data: JSON.stringify(o.args)
		};
		return GmCXt.xhr(params);
	};

	pub.deleteStep = function(data) {

		var params = {
			url: 'step',
			method: 'DELETE',
			data: JSON.stringify(data)
		};

		return GmCXt.xhr(params);
	};

	pub.updateTour = function(data) {
		var params = {
			url: 'tour',
			method: 'PUT',
			headers: {},
			data: JSON.stringify(data)
		};

		return GmCXt.xhr(params);
	};

	pub.updateStep = function(o) {
		var params = {
			url: "step",
			method: 'PUT',
			headers: {},
			data: JSON.stringify(o.args)
		};
		return GmCXt.xhr(params);
	};

	pub.updateStepLang = function(o) {
		var params = {
			url: "step/language/update",
			method: 'PUT',
			headers: {},
			data: JSON.stringify(o.args)
		};
		return GmCXt.xhr(params);
	};

	pub.uploadFileBase64 = function(o) {
		var params = {
			url: "file/base64image",
			method: 'POST',
			headers: {},
			data: o.args
		};
		return GmCXt.xhr(params);
	};

	pub.uploadBase64Image = function(o) {
		var params = {
			url: "file/upload/base64image",
			method: 'POST',
			headers: {},
			data: o.args
		};
		return GmCXt.xhr(params);
	};

	pub.uploadFile = function(o) {
		o.args.append("organization_id", GmCXt.organization.organization_id);
		var params = {
			url: "file/image",
			method: 'POST',
			headers: {},
			data: o.args
		};
		return GmCXt.xhr(params);
	};

	pub.uploadAudio = function(o) {
		var params = {
			url: "file/audio",
			method: 'POST',
			headers: {},
			data: o.args
		};
		return GmCXt.xhr(params);
	};

	pub.getAudio = function(o) {
		var params = {
			url: "file/audio",
			method: 'GET',
			data: GmCXt.encode(o.args)
		};
		return GmCXt.xhr(params);
	};

	pub.updateSurvey = function(o, user) {
		var params = {
			url: "v3/survey/questionnaire/" + o.guide_id + "/",
			method: 'PUT',
			headers: {
				'Content-Type': "application/json",
				accesstoken: user.accesstoken,
				key: GmCXt.trackerUtil.clientKey,
				appkey: GmCXt.conf.apiSecrret
			},
			data: JSON.stringify(o)
		};
		return GmCXt.xhrAnalytics(params);
	};

	pub.updateUserProfile = GmCXt.apiUpdateUserProfile;
	pub.getHandOffToken = GmCXt.apiGetHandOffToken;
	pub.getSentiments = GmCXt.apiGetSentiments;
	pub.getBotConvList = GmCXt.apiGetBotConvList;
	pub.updateSentiment = GmCXt.apiUpdateSentiment;
	pub.postSentiment = GmCXt.apiPostSentiment;
	pub.deleteSentiment = GmCXt.apiDeleteSentiment;
	pub.getSentiment = GmCXt.apiGetSentiment;
	pub.getGetBotConv = GmCXt.apiGetBotConv;
	pub.postSurvey = GmCXt.apiPostSurvey;
	pub.getSegmentGroupList = GmCXt.apiGetSegmentGroupList;
	pub.postSegmentGroupList = GmCXt.apiPostSegmentGroupList;
	pub.putSegmentGroupList = GmCXt.apiPutSegmentGroupList;
	pub.deleteSegmentGroupList = GmCXt.apiDeleteSegmentGroupList;
	pub.userApiKeySignin = GmCXt.userApiKeySignin;
	pub.registerClientInsight = GmCXt.apiRegisterClientInsight;
	pub.getClientSecretInsight = GmCXt.apiGetClientSecretInsight;
	pub.trackEventV1 = GmCXt.apiTrackEventV1;
	pub.saveMyBotReport = GmCXt.saveMyBotReport;
	pub.getOneTimeTokenInsights = GmCXt.getOneTimeTokenInsights;
	pub.trackSentiment = GmCXt.apitrackSentiment;
	pub.trackConversation = GmCXt.apitrackConversation;
	pub.createNewElTrackObject = GmCXt.createNewElTrackObject;
	pub.getElementsDetailInsights = GmCXt.getElementsDetailInsights;
	pub.updateElTrackObject = GmCXt.updateElTrackObject;
	pub.getCdnSignature = GmCXt.callGetCdnSignature;
	pub.getTour = GmCXt.getDetailTour;
	pub.sendFeedbackEmail = GmCXt.sendFeedbackEmail;
	pub.getAnonymousUserPrefrence = GmCXt.getAnonymousUserPrefrence;
	pub.setAnonymousUserPrefrence = GmCXt.setAnonymousUserPrefrence;

	return pub;
};

if (GmCXt.conf.provider === 'GuideMe') {
	GmCXt.api = GmCXt.guideMeApiProvider();
}
if (GmCXt === undefined) var GmCXt = {};
var stepAudio = {};
var userPrefAudio = false;

// Starts message channel only inside audio iframe
if (mg$('.mgPlayerJSTest_audio-iframe-icons') > 0) {
	GmCXt.startMsgChannel('Guide:audioIframe');
}

function setAudioModeOn() {
	mg$('.mgPlayerJSTest_play-step-audio-on').show();
	mg$('.mgPlayerJSTest_play-step-audio-off').hide();
	mg$('.mgPlayerJSTest_play-step-audio').addClass('playing-audio');

	if (userPrefAudio) {

		var action = "mgPlayerJSTest_action:set_audio_storage";
		var data = {
			'stepAudioRunningStatus': true
		};
		formatAndSendToParentWindow(action, data);
	}
}

function setAudioModeOff() {
	mg$('.mgPlayerJSTest_play-step-audio-on').hide();
	mg$('.mgPlayerJSTest_play-step-audio-off').show();
	mg$('.mgPlayerJSTest_play-step-audio').removeClass('playing-audio');

	if (userPrefAudio) {

		var action = "mgPlayerJSTest_action:set_audio_storage";
		var data = {
			'stepAudioRunningStatus': false
		};
		formatAndSendToParentWindow(action, data);
	}
}

window.addEventListener('error', function(event) {
	if (event && event.target) {
		GmCXt.onImageLoadError(mg$(event.target));
	}
}, true);

if (GmCXt.requestHandler === undefined) {
	GmCXt.requestHandler = {};
}

GmCXt.requestHandler.playAudioTrack = function(message) {
	if (GmCXt.FT.audio) {
		if (message.data.playerInstance) {
			GmCXt.playerI = message.data.playerInstance;
		}
		GmCXt.playStepAudio(message.data);
	}
};

GmCXt.requestHandler.stopAudioTrack = function(message) {
	GmCXt.stopAudio();
};

// This listener is only in Guide iframe
window.addEventListener('message', function(event) {
	if (!GmCXt) {
		GmCXt = event.target.GmCXt;
	}
	var message = GmCXt.parseMsg(event);

	if (!message) return;
	if (!message.action || message.action.indexOf('mgPlayerJSTest_action:') !== 0) return;
	message = GmCXt.convertMgdata(message);

	if (message.data) {

		if (message.data.config) {
			GmCXt.conf = message.data.config;
		}

		if (message.data.user && !GmCXt.isEmpty(message.data.user)) {
			GmCXt.updateGlobalUser(message.data.user);
		}

		stepAudio.tour = (message.data.tour) ? message.data.tour : {};
		stepAudio.type = (message.data.type) ? message.data.type : '';
		stepAudio.stepIndex = (message.data.stepIndex) ? message.data.stepIndex : -1;

		if (GmCXt.syncPlayerInst(message.action)) {
			if (message.data.playerInstance) {
				GmCXt.playerI = message.data.playerInstance;
			}
		}
	}

	switch (message.action) {

		case 'mgPlayerJSTest_action:set_audio_mode_on':
			setAudioModeOn();
			break;

		case 'mgPlayerJSTest_action:set_audio_mode_off':
			setAudioModeOff();
			break;

		case 'mgPlayerJSTest_action:stop_audio':
			GmCXt.requestHandler.stopAudioTrack();
			break;

		case 'mgPlayerJSTest_action:set_style_audio_icon_response':
			mg$("html:first").append(message.data.data);
			mg$('.mgPlayerJSTest_audio-iframe-icons').removeAttr('style');
			formatAndSendToParentWindow('mgPlayerJSTest_action:hide_pop_audio_ctrl', {});
			break;
	}

}, false);

function pauseAudio() {
	if (GmCXt.audioObject) {
		GmCXt.audioObject.pause();
	}
}

GmCXt.checkAssetUrl = function(tempUrl, url, cb) {
	if (tempUrl === url) {
		cb(tempUrl);
	} else {
		var promise = GmCXt.checkFileExist(tempUrl);
		promise.then(function() {
			cb(tempUrl);
		}).catch(function(e) {
			cb(url);
		});
	}
};

GmCXt.playStepAudio = function(message) {
	GmCXt.isPageReloaded = false;
	setAudioModeOn();
	if (!message || !message.data) {
		if (GmCXt.playerI) {
			var step = GmCXt.getCurrentStep(GmCXt.playerI.currentStepId);
			message = {
				audioTrack: step.step_audio,
				step: step
			}
		}
	}

	var audioTrack = message.audioTrack;

	var play = function(url) {
		if (url) {
			audioTrack = url;
		}
		var stepObj = message.step;

		if (GmCXt.audioObject) {
			GmCXt.audioObject.pause();
		}

		GmCXt.audioObject = new Audio(audioTrack);

		var action = "mgPlayerJSTest_action:start_step_completion_timeout";
		var data = {
			step: stepObj
		};

		GmCXt.audioObject.onended = function() {
			// Set Complete step timeout after audio is finished
			formatAndSendToParentWindow(action, data);
		};

		var promise = GmCXt.audioObject.play();
		if (promise !== undefined) {
			promise.then(function() {
				// Autoplay started!
			}).catch(function(e) {
				// Autoplay was prevented.
				// disbaled audio button
				formatAndSendToParentWindow(action, data);
				setAudioModeOff();
			});
		}
	};

	if (audioTrack && audioTrack.indexOf('?st=') === -1) {
		audioTrack = audioTrack + GmCXt.getCdnSign();
	}

	GmCXt.checkAssetUrl(audioTrack, audioTrack, play);

};

GmCXt.stopAudio = function() {
	if (GmCXt.audioObject) GmCXt.audioObject.pause();
};

function formatAndSendToParentWindow(action, data) {

	var obj = {};
	obj.action = action;
	obj.data = data || {};

	if (GmCXt.playerI || GmCXt.playerI === null) {
		obj.data.playerInstance = GmCXt.playerI;
	}

	GmCXt.sendToParentWindow(obj);
}

mg$('.mgPlayerJSTest_play-step-audio-on').off('click').on('click', function() {
	userPrefAudio = true;
	GmCXt.stopAudio();
	formatAndSendToParentWindow('mgPlayerJSTest_action:stop_audio', {});
	setAudioModeOff();
});

mg$('.mgPlayerJSTest_play-step-audio-off').off('click').on('click', function() {
	userPrefAudio = true;
	setAudioModeOn();
	if (GmCXt.playerI) {
		var step = GmCXt.getCurrentStep(GmCXt.playerI.currentStepId);
		message = {
			audioTrack: step.step_audio,
			step: step
		}
		GmCXt.isPageReloaded = false;
		GmCXt.playStepAudio(message);
	}
});

mg$(document).ready(function() {
	formatAndSendToParentWindow('mgPlayerJSTest_action:set_style_audio_icon', {});
});
GmCXt.ruleEngine = (function() {
	var pub = {};
	var jobs = {};
	var _queue = [];

	var queue = function(d) {

		if (d && d.rules && d.tour) {

			var tourId = d.tour.tour_id;
			var initiator = d.initiator ? d.initiator : 'init';
			var idStr = "rule_" + tourId + "_" + initiator;
			var jobId = idStr + "_" + GmCXt.getUUID();

			if (!GmCXt.isEmpty(d.rules)) {
				d.rules = updateVariableRule(d.rules);
			}
			// Check is only for guide level rules; does not apply for step level rules
			if (d.isTour && initiator !== 'currentPage' && initiator !== 'currPageSeg') {
				jobId = idStr;
				if (GmCXt.inArrayString(jobId, _queue)) unqueue(jobId);
			}

			GmCXt.log(5, "QUEUED " + initiator + " : " + GmCXt.tourLog(d.tour));
			_queue.push(jobId);

			d.jobId = jobId;
			jobs[jobId] = d;

			if (!d.rules.length) {
				sendResponse(true, jobId);
			} else {
				validate(jobId);
			}
		}
	};

	var unqueue = function(jobId) {
		if (_unqueue(jobId)) {
			delete jobs[jobId];
		}
	};

	function _unqueue(jid) {
		var i = _queue.indexOf(parseInt(jid));
		if (i >= 0) {
			_queue.splice(i, 1);
			return true;
		}
		return false;
	}

	var clearJobs = function(i) {
		GmCXt.log(5, "CLEARD RULES JOBS");
		if (i) {
			var inits = [i];
		} else {
			var inits = ['currentPage', 'beacon', 'smartTip', 'notif'];
		}

		for (var jobId in jobs) {
			if (GmCXt.inArrayString(jobs[jobId].initiator, inits)) {
				unqueue(jobId);
			}
		}
	};

	var updateVariableRule = function(rules) {
		var varData = GmCXt.getVariableData();

		for (var r = 0; r < rules.length; r++) {
			if (rules[r].type === "Variables") {
				for (var i = 0; i < varData.length; i++) {
					if (varData[i].name === rules[r].variableData) {
						rules[r].domRule = true;
						rules[r].element = varData[i].element;
						if (!GmCXt.isEmpty(varData[i].rules)) {
							for (var j = 0; j < varData[i].rules.length; j++) {
								var varRule = varData[i].rules[j];
								varRule.logical_condition = "&&";
								rules.push(varRule);
							}
						}
					}
				}

			}
		}
		return rules;
	};

	var validate = function(jobId) {

		var job = jobs[jobId];
		var rules = job.rules;
		var flag = false;

		job.domRuleRequests = [];

		if (rules) {
			var groups = getGroupedRules(rules);

			GmCXt.log(6, "VALIDATING, all groups" + GmCXt.tourLog(job.tour), groups);

			var tour = job.tour;
			var oldRegEx = false;

			if (tour) {
				var ts = tour.tour_settings;
				if (GmCXt.legacyWildChar(ts.version)) {
					oldRegEx = true;
				}
			}

			var domGroups = [];
			var apiGroups = [];

			// Rules are valid if there is a group having
			// all URL and Page title rules true
			for (var i = 0; i < groups.length; i++) {

				var group = groups[i];
				var rules = GmCXt.seggregateRules(group);

				var validGroup = false;

				if (rules.url.length) {
					validGroup = evaluateRuleGroup(group, oldRegEx);

					GmCXt.log(6, "URL rules status: " + validGroup);
				}

				if (validGroup || !rules.url.length) {

					if (!group.checkDom && !group.checkApi) {
						GmCXt.log(6, "GROUP MATCH", group);
						flag = true;
						break;
						// Since groups are validated with "OR" operator, any ONE group getting validated would satisfy the rules
					}

					group.index = i;
					if (group.checkDom) {
						domGroups.push(group);
					}
					if (group.checkApi) {
						apiGroups.push(group);
					}
				}
			}

			if (flag) {

				sendResponse(true, jobId);

			} else if (apiGroups.length) { // Validate rule groups having API rules and with URL rules true

				GmCXt.log(6, "Validating groups with API RULES" + GmCXt.tourLog(job.tour), domGroups);

				for (var j = 0; j < apiGroups.length; j++) {
					var group = apiGroups[j];
					var ruleIndex = group.findIndex(function(rule) {
						return rule.apiRule;
					});

					var rule = group[ruleIndex];

					if (rule.type !== 'Variables') {
						evaluateAPIRules(jobId, group, group.index, apiGroups.length, rule);
					} else {
						sendResponse(false, jobId);
					}
				}

			} else if (domGroups.length) { // Validate rule groups having DOM rules and with other rules true

				GmCXt.log(6, "Validating groups with DOM RULES" + GmCXt.tourLog(job.tour), domGroups);

				for (var k = 0; k < domGroups.length; k++) {
					var group = domGroups[k];
					evaluateElRules(jobId, group, group.index);
				}

			} else {
				sendResponse(false, jobId);
			}
		}
	};

	var getGroupedRules = function(rules) {

		var groups = [];
		var rulesKey = -1;

		rules.forEach(function(rule, key) {
			if (key === 0 || (rule.logical_condition === '||')) {
				groups[++rulesKey] = [];
				groups[rulesKey].push(rule);

			} else if (rule.logical_condition === '&&') {
				groups[rulesKey].push(rule);
			}
		});

		return groups;
	};

	var evaluateRules = function(rules, oldRegEx) {

		if (rules) {
			// Flat to group structure
			var groups = getGroupedRules(rules);
			GmCXt.log(5, "RULE GROUPS", groups);

			for (var index = 0; index < groups.length; index++) {
				var group = groups[index];
				var valid = evaluateRuleGroup(group, oldRegEx);

				if (valid) {
					GmCXt.log(5, "MATCHED group", group);
					return true;
				}
			}
		}
		return false;
	};

	var evaluateRuleGroup = function(group, oldRegEx) {
		var validGroup;

		for (var i = 0; i < group.length; i++) {
			var rule = group[i];

			// Skip element & api rules
			if (rule.domRule || rule.apiRule) continue;

			var isValid = evaluateNonElRules(rule, oldRegEx);

			group[i].isValid = isValid;

			if (validGroup === undefined) {
				validGroup = isValid;
			}

			validGroup = evaluateOperator(rule.logical_condition, isValid, validGroup);
		}

		return validGroup;
	};

	var validateRuleGroup = function(rules) {

		var valid = false;

		if (rules.length > 1) {
			for (var i = 0; i < rules.length; i++) {
				valid = evaluateOperator(rules[i].logical_condition, rules[i].isValid, valid);
				if (!valid) return valid;
			}
		} else if (rules.length === 1) {
			valid = rules[0].isValid;
		}

		return valid;
	};

	var evaluateOperator = function(operator, val1, val2) {
		if (operator === '') {
			return val1;
		} else {
			if (operator === '&&') {
				return val1 && val2;
			} else {
				return val1 || val2;
			}
		}
	};

	var evaluateNonElRules = function(rule, oldRegEx) {

		switch (rule.type) {

			case "URL Path":

				if (GmCXt.urlParts) var pathname = GmCXt.urlParts.pathname;

				if (GmCXt.browserApp === 'ie' && pathname) {
					var pathnameFirstCharactor = pathname.substring(0, 1);
					if (pathnameFirstCharactor.indexOf('/') !== 0) pathname = '/' + pathname;
				}

				return evaluateURLRule(rule.condition, rule.value, pathname, oldRegEx);

			case "URL":
				return evaluateURLRule(rule.condition, GmCXt.filterUrlScheme(rule.value), GmCXt.urlParts.href, oldRegEx);

			case "URL Hostname":
				return evaluateURLRule(rule.condition, rule.value, GmCXt.urlParts.host, oldRegEx);

			case "URL Parameters":
				return evaluateURLRule(rule.condition, rule.value, GmCXt.getUrlParam(), oldRegEx);

			case "URL Hash":
				return evaluateURLRule(rule.condition, rule.value, GmCXt.urlParts.hash, oldRegEx);

			case "Page Title":
				return evaluateURLRule(rule.condition, rule.value, GmCXt.pageTitle, oldRegEx);

			case "Display Frequency":
				return validateFrequencyRule(rule.condition, rule.value);

			case "Creation Date":
				return checkUserCreationDate(rule.condition, rule.value);

			case "Date":
				return checkDate(rule.condition, rule.value);

			case "Time":
				return checkTime(rule.condition, rule.value);

			default:
				return true;
		}
	};

	var evaluateURLRule = function(condition, value, url, oldRegEx) {

		var retVal = false;

		var regexPattern = getRegex(GmCXt.filterUrlScheme(value), condition, oldRegEx);

		if (regexPattern) {
			retVal = validateURLRuleWithRegex(condition, regexPattern, url);
		} else {
			retVal = validateURLRule(condition, value, url);
		}

		return retVal;
	};

	var validateURLRuleWithRegex = function(condition, regexPattern, url) {

		if (regexPattern) {
			var regExValid = regexPattern.test(url);

			var retVal = false;

			switch (condition) {
				case GmCXt.EQUALS:
				case GmCXt.CONTAINS:
				case GmCXt.STARTS_WITH:
				case GmCXt.ENDS_WITH: {
					if (regExValid) {
						retVal = true;
					}
					break;
				}

				case GmCXt.NOT_EQUAL:
				case GmCXt.NOT_CONTAINS:
				case "Not Contains": {
					if (!regExValid) {
						retVal = true;
					}
					break;
				}
			}
			return retVal;
		} else {
			return false;

		}
	};

	var validateURLRule = function(condition, value, url) {

		var retval = false;

		try {
			var valueLo = decodeURIComponent(value).toLowerCase();
		} catch (e) {
			var valueLo = value.toLowerCase();
		}

		try {
			var urlLo = decodeURIComponent(url).toLowerCase();
		} catch (e) {
			var urlLo = url.toLowerCase();
		}

		switch (condition) {

			case GmCXt.EQUALS:
				if (valueLo === urlLo) {
					retval = true;
				}
				break;

			case GmCXt.NOT_EQUAL:
				if (valueLo !== urlLo) {
					retval = true;
				}
				break;

			case GmCXt.CONTAINS:
				if (urlLo.indexOf(valueLo) !== -1) {
					retval = true;
				}
				break;

			case GmCXt.NOT_CONTAINS:
			case "Not Contains":
				if (urlLo.indexOf(valueLo) === -1) {
					retval = true;
				}
				break;

			case GmCXt.STARTS_WITH:
				if (urlLo.indexOf(valueLo) === 0) {
					retval = true;
				}
				break;

			case GmCXt.ENDS_WITH:
				valueLo = RegExp.escape(valueLo);
				retval = new RegExp(valueLo + "$").test(urlLo);
				break;
		}

		return retval;
	};

	var validateElRule = function(condition, value, element, elText, oldRegEx, varName) {
		var retval = false;

		var elExists = element && mg$(element).length;
		var elTagNameInput = elExists && mg$(element)[0].tagName === 'INPUT';
		var elTypeRadio = elTagNameInput && mg$(element).attr('type') === 'radio';
		var elTypeCheckbox = elTagNameInput && mg$(element).attr('type') === 'checkbox';

		try {
			var valueLo = decodeURIComponent(value).toLowerCase();
		} catch (e) {
			var valueLo = value.toLowerCase();
		}

		var elText = (elExists || varName) ? elText : '';
		elText = elText.substring(0, GmCXt.ruleTextLimit).trim().toLowerCase();

		var elAttrs = elExists ? GmCXt.createDeepCopy(GmCXt.getAttributeValues(element)) : {};
		if (elAttrs) {
			delete elAttrs.tagName;
		}

		switch (condition) {
			case GmCXt.EXISTS:
				if (elExists) {
					retval = true;
				}
				break;

			case GmCXt.NOT_EXISTS:
				if (!elExists) {
					retval = true;
				}
				break;

			case GmCXt.VISIBLE:
			case "Is Visible":
				if (elExists && GmCXt.getElVisibility(element) === 'visible') {
					retval = true;
				}
				break;

			case GmCXt.NOT_VISIBLE:
			case "Is Not Visible":
				if ((elExists && GmCXt.getElVisibility(element) === 'hidden') || !elExists) {
					retval = true;
				}
				break;

			case GmCXt.SELECTED:
				if (elTypeRadio && mg$(element).is(":checked")) {
					retval = true;
				}
				break;

			case GmCXt.NOT_SELECTED:
				if (elTypeRadio && !mg$(element).is(":checked")) {
					retval = true;
				}
				break;

			case GmCXt.CHECKED:
				if (elTypeCheckbox && mg$(element).is(":checked")) {
					retval = true;
				}
				break;

			case GmCXt.NOT_CHECKED:
				if (elTypeCheckbox && !mg$(element).is(":checked")) {
					retval = true;
				}
				break;

			case GmCXt.TXT_EQUALS:
			case GmCXt.EQUALS:
				if (elText) {
					if (elText === valueLo) {
						retval = true;
					} else {
						retval = compareForOlderVersion(element, oldRegEx, true, valueLo);
					}
				}
				break;

			case GmCXt.NOT_TXT:
			case GmCXt.NOT_EQUAL:
				if (elText) {
					if (elText !== valueLo) {
						retval = true;
					} else {
						retval = compareForOlderVersion(element, oldRegEx, false, valueLo);
					}
				} else {
					retval = true;
				}
				break;

			case GmCXt.TXT_CONTAINS:
				if (elText && elText.includes(valueLo)) {
					retval = true;
				}
				break;

			case GmCXt.NOT_CONTAINS:
				if (elText.indexOf(valueLo) === -1) {
					retval = true;
				}
				break;

			case GmCXt.TXT_MATCHES:
				if (elText) {
					var elNum = elText.match(/\d+/g);
					if (elNum && valueLo.includes(':')) {
						elNum = parseFloat(elNum);
						var valArr = valueLo.split(':');
						var lower = parseFloat(valArr[0].match(/\d+/g));
						var upper = parseFloat(valArr[1].match(/\d+/g));
						if (lower <= elNum && upper >= elNum) {
							retval = true;
						}
					} else if (valueLo.includes('|')) {
						var valArr = valueLo.match(/(?=\S)[^|]+?(?=\s*(\||$))/g);
						if (valArr.includes(elText)) {
							retval = true;
						}
					}
				}
				break;

			case GmCXt.GREAT_THAN:
				if (elText) {
					var elNum = elText.match(/\d+/g);
					if (elNum) {
						elNum = parseFloat(elNum);
						valNum = parseFloat(valueLo.match(/\d+/g));
						if (elNum > valNum) {
							retval = true;
						}
					}
				}
				break;

			case GmCXt.LESS_THAN:
				if (elText) {
					var elNum = elText.match(/\d+/g);
					if (elNum) {
						elNum = parseFloat(elNum);
						valNum = parseFloat(valueLo.match(/\d+/g));
						if (elNum < valNum) {
							retval = true;
						}
					}
				}
				break;

			case GmCXt.CLASSES:
			case 'Must have Class(s)':
				if (elAttrs.class) {
					var valArr = value.split("|");
					for (var i = 0; i < valArr.length; i++) {
						var clsArr = valArr[i].split(",");
						var length = clsArr.length;
						var match = 0;
						for (var j = 0; j < length; j++) {
							var cls = clsArr[j].trim();
							if (elAttrs.class.includes(cls)) {
								match++;
							}
						}
						if (match === length) {
							retval = true;
							break;
						}
					}
				}
				break;

			case GmCXt.NOT_CLASSES:
				retval = true; // True if no classes present & true till any class matched
				if (!GmCXt.isEmpty(elAttrs.class)) {
					var clsArr = value.split(",");
					for (var i = 0; i < clsArr.length; i++) {
						var cls = clsArr[i].trim();
						if (elAttrs.class.includes(cls)) {
							retval = false;
							break;
						}
					}
				}
				break;

			case GmCXt.ATTRIBUTES:
			case 'Must have Attribute(s)':
				var attrs = Object.keys(elAttrs);
				if (attrs.length) {
					var valArr = value.split("|");
					for (var i = 0; i < valArr.length; i++) {
						var attributesArr = valArr[i].split(",");
						var length = attributesArr.length;
						var match = 0;
						for (var j = 0; j < length; j++) {
							var name = attributesArr[j].trim();
							if (attrs.includes(name)) {
								match++;
							}
						}
						if (match === length) {
							retval = true;
							break;
						}
					}
				}
				break;

			case GmCXt.NOT_ATTRIBUTES:
				retval = true; // True if no attributes present & true till any attribute matched
				var attrs = Object.keys(elAttrs);
				if (!GmCXt.isEmpty(attrs)) {
					var attributesArr = value.split(",");
					for (var i = 0; i < attributesArr.length; i++) {
						var name = attributesArr[i].trim();
						if (attrs.includes(name)) {
							retval = false;
							break;
						}
					}
				}
				break;

			case GmCXt.DISABLED:
				retval = element.disabled;
				break;

			case GmCXt.NOT_DISABLED:
				retval = !element.disabled;
				break;

		}

		return retval;
	};

	var validateFrequencyRule = function(condition, value) {
		var retVal = false;

		if (value) {
			var date = new Date();

			switch (condition) {
				case GmCXt.DAY_OF_WEEK:

					var day = date.getDay();

					var dayOfWeekMap = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];

					var valArr = value.replace(/\s/g, '').toLowerCase().split('|');
					for (var i = 0; i < valArr.length; i++) {
						var range = valArr[i].split('-');
						if (range.length === 1) {
							var val = range[0].slice(0, 3);
							if (dayOfWeekMap.indexOf(val) === day) {
								retVal = true;
								break;
							}
						} else if (range.length === 2) {
							var lower = range[0].slice(0, 3);
							var upper = range[1].slice(0, 3);
							if (dayOfWeekMap.indexOf(lower) <= day && day <= dayOfWeekMap.indexOf(upper)) {
								retVal = true;
								break;
							}
						}
					}
					break;

				case GmCXt.FIX_TIME:
					var time = parseInt(date.toTimeString().slice(0, 5).replace(':', ''));

					var valArr = value.replace(/\s/g, '').split('|');
					for (var i = 0; i < valArr.length; i++) {
						var range = valArr[i].split('-');
						var lower = range[0];
						if (lower.length === 5) { // 24-hour format time; eg: '11:30'
							lower = parseInt(lower.slice(0, 5).replace(':', ''));

							var upper = range[1];
							if (upper && upper.length === 5) {
								upper = parseInt(upper.slice(0, 5).replace(':', ''));
							} else {
								upper = 2359; // 23:59 - End of day
							}

							if ((lower <= time) && (time <= upper)) {
								retVal = true;
								break;
							}
						}
					}

					break;
				case GmCXt.DATE_RANGE:
					var valArr = value.split('-');
					var today = new Date(date.toDateString());
					var startDate = valArr[0].length ? new Date(valArr[0]) : null;
					if (startDate && startDate <= today) {
						var endDate = valArr[1].length ? new Date(valArr[1]) : null;
						if (endDate && startDate <= endDate && endDate >= today) {
							retVal = true;
						}
					}
					break;
			}
		}
		return retVal;
	};

	var evaluateAPIRules = function(jobId, group, groupIndex, noOfApiGroups, rule) {

		rule.isValid = false;

		var sendResponseIfJobValid = function(res, jobId) {
			var job = jobs[jobId];
			if (job && job.cb && job.tour) {
				if (res) {
					sendResponse(true, jobId);
				} else {
					if (!job.hasOwnProperty('failedApiRules')) {
						job.failedApiRules = 1;
					} else {
						job.failedApiRules++;
					}

					if (job.failedApiRules === noOfApiGroups) {
						// All API rules have been checked
						// each Group can have only One API rule
						sendResponse(false, jobId);
					}
				}
			}
		};

		var cb = function(res) {
			if (res) {
				rule.isValid = true;
				GmCXt.log(6, "API response: true");
				if (group.checkDom) {
					GmCXt.log(6, "Evaluating DOM rules in the group. . .", group);
					evaluateElRules(jobId, group, groupIndex);
				} else {
					GmCXt.log(6, "GROUP MATCH", group);
					sendResponseIfJobValid(true, jobId);
				}
			} else {
				GmCXt.log(6, "API response: false");
				GmCXt.log(6, "GROUP NOT MATCHED.", group);
				sendResponseIfJobValid(false, jobId);
			}
		};

		var url = rule.value;

		var promise = GmCXt.externalApiCall(url);
		promise.then(function(res) {
			cb(res);
		}).catch(function(e) {
			console.log("Error from Variable Validation API: " + e);
			cb(false);
		});
	};

	var evaluateElRules = function(jobId, group, groupIndex) {
		for (var i = 0; i < group.length; i++) {
			var rule = group[i];
			if (rule.domRule) {
				rule.isValid = false;
				sendSelectElementRequest(jobId, rule, i, groupIndex);
			}
		}
	};

	var sendSelectElementRequest = function(jobId, rule, rIndex, gIndex) {

		job = jobs[jobId];

		rule.ruleId = rIndex;
		rule.groupId = gIndex;

		var message = {
			data: {
				rule: rule,
				jobId: jobId,
				job: job,
				fromSidePanel: GmCXt.isSidePanelApp
			}
		};

		// From side panel, sends to the top/parent window
		// From top window, sends to the same window

		if (GmCXt.isSidePanelApp) {
			message.action = 'mgPlayerJSTest_action:init;task:select_dom_element_for_rules';
			GmCXt.sendToParentWindow(message);

		} else {
			GmCXt.sendMessageToAllWindows(
				'mgPlayerJSTest_action:started;task:select_dom_element_for_rules',
				message.data);
		}
	};

	var onSuccessDOMRuleMatch = function(data) {
		var jobId = data.jobId;
		var valid = data.valid;
		var job = jobs[jobId];
		var ruleId = data.ruleId;
		var groupId = data.groupId;

		if (job && job.cb && job.tour) {
			if(job.domRuleRequests[groupId]) {
				job.domRuleRequests[groupId]++;
			} else {
				job.domRuleRequests[groupId] = 1;
			}
			
			var groupedRules = getGroupedRules(job.rules);
			var count = GmCXt.numberOfDomRules(groupedRules[groupId]);
			var isValidGroup = false;

			if (groupedRules.length) {
				groupedRules[groupId][ruleId].isValid = valid;
				isValidGroup = validateRuleGroup(groupedRules[groupId]);
			}

			var printlog = "DOM rules checked.\nRule: " + valid + "; Group: " + isValidGroup;
			GmCXt.log(6, printlog, groupedRules[groupId]);

			if (isValidGroup || job.domRuleRequests[groupId] === count) {
				var isValid = isValidGroup || validateAllGroups(groupedRules);
				sendResponse(isValid, jobId);
			}
		}
	};

	function validateAllGroups(groupedRule) {

		var valid = false;
		for (var i = 0; i < groupedRule.length; i++) {
			valid = validateRuleGroup(groupedRule[i]);
			if (valid) {
				break;
			}
		}

		return valid;

	}

	var getStringPlusRegex = function(val, parentLen, oldRegEx) {
		var retStr = val;
		var splitArr = val.split(oldRegEx ? "+" : "{+}");

		if (splitArr.length === 1 && parentLen > 1) {
			retStr = RegExp.escape(retStr);
		} else {
			retStr = '';
			for (var i = 0; i < splitArr.length; i++) {

				retStr = retStr + RegExp.escape(splitArr[i]);

				if (i !== splitArr.length - 1)
					retStr = retStr + "([a-zA-Z0-9:!+@#$&()?\\-_`.%+,=\\/]+)";
			}
		}

		return retStr;
	};

	var getStringStarRegex = function(splitArr, oldRegEx) {

		var retStr = '';
		for (var i = 0; i < splitArr.length; i++) {

			retStr = retStr + getStringPlusRegex(splitArr[i], splitArr.length, oldRegEx);

			if (i !== splitArr.length - 1)
				retStr = retStr + "([a-zA-Z0-9:!+@#$&()?\\-_`.%+,=\\/]*)";
		}

		return retStr;
	};

	var getRegexString = function(val, oldRegEx) {

		var retStr = val;
		var splitArr = val.split(oldRegEx ? "*" : "{*}");

		if (splitArr.length === 1) {
			retStr = getStringPlusRegex(val, 1, oldRegEx);
		} else {
			retStr = getStringStarRegex(splitArr, oldRegEx);
		}
		return retStr;
	};

	var getRegex = function(val, condition, oldRegEx) {

		var indexOfStar = val.indexOf(oldRegEx ? "*" : "{*}");
		var indexOfPlus = val.indexOf(oldRegEx ? "+" : "{+}");
		var regexPattern = null;

		if ((indexOfStar !== -1) || (indexOfPlus !== -1)) {

			var regexStr = getRegexString(val, oldRegEx);
			var regPattern = "([a-zA-Z0-9:!+@#$&()?\\-_`.%+,=\\/]*)";

			switch (condition) {
				case GmCXt.CONTAINS:
					regexStr = regPattern + regexStr + regPattern;
					break;
				case GmCXt.STARTS_WITH:
					regexStr = regPattern + regexStr;
					break;
				case GmCXt.ENDS_WITH:
					regexStr = regexStr + regPattern;
					break;
			}

			regexPattern = new RegExp("^" + regexStr + '$');
		}

		return regexPattern;
	};

	RegExp.escape = function(s) {
		return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
	};

	function getValueForOldRules(el) {
		var valArr = [];

		var value = el.getAttribute('value');
		var placeholder = el.getAttribute('placeholder');
		if (value) {
			valArr.push(el.value);
		}
		if (placeholder) {
			valArr.push(placeholder);
		}
		if (el.textContent) {
			valArr.push(el.textContent);
		}
		if (el.tagName === 'SELECT') {
			valArr.push(el.options[el.selectedIndex].textContent);
		}

		return valArr.map(function(v) {
			return v.substring(0, GmCXt.ruleTextLimit).trim().toLowerCase();
		});
	}

	function compareForOlderVersion(el, oldRegEx, checkEquals, value) {
		if (oldRegEx) {
			var elValues = getValueForOldRules(el);
			if (checkEquals) {
				return elValues.indexOf(value) !== -1;
			} else {
				return elValues.indexOf(value) === -1;
			}
		}
		return false;
	}

	function sendResponse(valid, jobId) {

		var job = jobs[jobId];
		var cb = job.cb;

		var result = {
			valid: valid,
			tour: job.tour,
			branchIndex: job.branchIndex
		};

		if (job.segmentId) {
			result.segmentId = job.segmentId;
		}

		GmCXt.log(5, (valid ? "VALID" : "INVALID") + " " + job.initiator + " : " + GmCXt.tourLog(job.tour));

		pub.unqueue(jobId);
		cb(result);
	}

	GmCXt.isSidePanelFrame = (GmCXt._location() && GmCXt._location().href &&
		GmCXt._location().href.indexOf("side_panel") !== -1) ? true : false;

	// Following functions needed only in main content script not inside iframe
	if (window.self === window.top || GmCXt.isSidePanelFrame) {
		pub.queue = queue;
		pub.unqueue = unqueue;
		pub.clearJobs = clearJobs;
		pub.onSuccessDOMRuleMatch = onSuccessDOMRuleMatch;
	}

	pub.evaluateRules = evaluateRules;
	pub.evaluateURLRule = evaluateURLRule;
	pub.validateElRule = validateElRule;
	pub.getGroupedRules = getGroupedRules;

	pub.hasRuleType = function(rules, type) {

		if (rules) {

			var ruleGroups = getGroupedRules(rules);

			for (var i in ruleGroups) {
				var group = ruleGroups[i];
				for (var j in group) {
					var rule = group[j];
					if (type.includes(rule.type) || type.includes(rule.condition)) {
						return true;
					}
				}
			}
		}
		return false;
	};

	return pub;

})();

String.prototype.replaceAll = function(search, replacement) {
	var target = this;
	return target.split(search).join(replacement);
};

var checkUserCreationDate = function(condition, val) {
	var creationDateSeconds = val / 1000;
	var getCreationDate = GmCXt.getCombinedDateFromTimestamp(parseInt(creationDateSeconds));
	var getUserCreationDate = GmCXt.getCombinedDateFromTimestamp(parseInt(GmCXt.user.creation_date));
	var comparisonResult = GmCXt.compareDates(getUserCreationDate, getCreationDate);

	switch (condition.toLowerCase()) {

		case GmCXt.EQUALS.toLowerCase():
			return comparisonResult === 0;

		case GmCXt.GREAT_THAN.toLowerCase():
			return comparisonResult > 0;

		case GmCXt.LESS_THAN.toLowerCase():
			return comparisonResult < 0;

		default:
			return false;
	}
};

var checkDate = function(condition, val) {
	var dateSeconds = val / 1000;
	var getDate = GmCXt.getCombinedDateFromTimestamp(parseInt(dateSeconds));
	var getCurrentDate = GmCXt.getCombinedDateFromTimestamp(parseInt(Date.now() / 1000));
	var comparisonResult = GmCXt.compareDates(getCurrentDate, getDate);

	switch (condition.toLowerCase()) {

		case GmCXt.EQUALS.toLowerCase():
			return comparisonResult === 0;

		case GmCXt.GREAT_THAN.toLowerCase():
			return comparisonResult > 0;

		case GmCXt.LESS_THAN.toLowerCase():
			return comparisonResult < 0;

		default:
			return false;
	}
};

var checkTime = function(condition, val) {
	var currentTime = new Date();
	var currentHours = currentTime.getHours().toString().padStart(2, '0');
	var currentMinutes = currentTime.getMinutes().toString().padStart(2, '0');
	var formattedCurrentTime = currentHours + ":" + currentMinutes;
	var comparisonResult = GmCXt.compareTimes(formattedCurrentTime, val);

	switch (condition.toLowerCase()) {

		case GmCXt.EQUALS.toLowerCase():
			return comparisonResult === 0;

		case GmCXt.GREAT_THAN.toLowerCase():
			return comparisonResult > 0;

		case GmCXt.LESS_THAN.toLowerCase():
			return comparisonResult < 0;

		default:
			return false;
	}
};
GmCXt.initDebugMode();
GmCXt.startMsgChannel('Guide:sidePanel');

var moduleArr = ["ui.router", "http-auth-interceptor", "ngSanitize", "LocalForageModule"];

GmCXt.isSidePanelApp = true;

GmCXt.alreadyLoadedNotif = [];

if (GmCXt.FT.creatorApp) {
    moduleArr.push('textAngularSetup', 'textAngular', 'dndLists', 'ngTagsInput', 'ui.tinymce');
}

GmCXt.messageService = function(m) {
    GmCXt.sendMessageToBackgroundService(m);
};

var app = angular.module("guideme", moduleArr);

app.controller('MainCtrl', ['$rootScope', '$timeout', 'appRootScope', 'comm_player', '$injector', 'tourUtilService',
    function($rootScope, $timeout, appRootScope, commPlayer, $injector, tourUtilService) {

        // Initialize functions in rootScope 
        appRootScope.set();

        // Set event listener to receive messages from backgound.js and from content script. 
        commPlayer.set();

        if ($rootScope.FT.creatorApp) {
            $injector.get('comm_creator').set();
        }
        $rootScope.labels = GmCXt.getAllLabels($rootScope.language);

        $rootScope.readStorage().then(function() {
            window.addEventListener('error', function(event) {
                if (event && event.target) {
                    GmCXt.onImageLoadError(mg$(event.target));
                }
            }, true);

            if (GmCXt.onPrem()) {
                GmCXt.getJsonTimeStamp(GmCXt.getOnPremJsonURL()).then(function(r) {
                    var last_updated_time = r.last_updated_time;
                    if ($rootScope.refreshTime && $rootScope.refreshTime !== last_updated_time) {
                        $rootScope.refreshAllData();
                    }
                });
            }

            $rootScope.resetNotificationData();

            $rootScope.subscribeEvents();

            $rootScope.updateLabels();

            $rootScope.reportInitialization();
        });
    }
]);

app.service('appRootScope', ['$rootScope', 'SVGS', '$state',
    'api', 'storage', 'authService', 'AuthLogin', 'modal',
    'cStorage', 'Message', '$window', 'logoutService', '$timeout', 'mgError',
    '$q', 'tourUtilService', 'naturalService', 'creatorUpdateService', 'playerUpdateService', 'languages',
    function($rootScope, SVGS, $state, api, storage,
        authService, AuthLogin, modal, cStorage, Message,
        $window, logoutService, $timeout, mgError, $q, tourUtilService, naturalService, creatorUpdate, playerUpdate, languages) {

        this.set = function() {

            $rootScope.FT = GmCXt.FT;
            $rootScope.showCaptchaError = false;
            $rootScope.svgs = SVGS;
            $rootScope.config = GmCXt.conf;
            $rootScope.staticContentPath = GmCXt.conf.staticContentPath;
            $rootScope.webPortalUrl = GmCXt.conf.webPortalUrl;
            $rootScope.analyticsPortalUrl = GmCXt.conf.analyticsPortalUrl;
            $rootScope.appConfig = GmCXt.conf.appConfig;
            $rootScope.appName = GmCXt.conf.appName;
            $rootScope.appType = GmCXt.conf.appType;
            $rootScope.brandName = "Cornerstone 2024";
            $rootScope.appVersion = GmCXt.conf.version;
            $rootScope.ssoRedirectionUrl = GmCXt.conf.ssoRedirectionUrl;
            $rootScope.ssoApiUrl = GmCXt.conf.ssoApiUrl;
            $rootScope.ssoConfigUrl = GmCXt.conf.ssoConfigUrl;
            $rootScope.ssoId = '';
            $rootScope.isLXP = GmCXt.isLXP();
            $rootScope.isWestpac = GmCXt.isWestpac();
            $rootScope.isMyGuide = GmCXt.isMyGuide();
            $rootScope.onPrem = GmCXt.onPrem();
            $rootScope.isWB = GmCXt.isWB();
            $rootScope.isMicroPlayer = GmCXt.isMicroPlayer();
            $rootScope.isClientJs = GmCXt.isClientJs();
            $rootScope.isElectron = GmCXt.isElectron();
            $rootScope.isWBMicroPlayer = GmCXt.isWBMicroPlayer();
            $rootScope.isWBC = GmCXt.isWBC();
            $rootScope.checkInsightEnabled = GmCXt.checkInsightEnabled;
            $rootScope.isScreenRecorderClose = false;
            $rootScope.taskListApiCalled = false;

            $rootScope.videoUploadMessage = false;
            $rootScope.uploadProgressBar = false;
            $rootScope.uploadStepProgressBar = false;
            $rootScope.showStepCreatedSuccessMsg = false;
            $rootScope.countLimit = 99;
            $rootScope.botGuideCount = 0;

            $rootScope.contextTours = {};
            GmCXt.urlParts = {};
            $rootScope.languageList = [];
            $rootScope.languages = [];
            $rootScope.selectedLanguage = '';
            $rootScope.tourVideoInProgressArr = [];

            $rootScope.ssoHitCount = 0;
            $rootScope.thirtyMinutesInSeconds = 1800;
            $rootScope.thirtyDaysInSeconds = 2592000;
            $rootScope.thirtyDaysInMSeconds = 2592000 * 1000;

            $rootScope.lastCheckBrandLogo = 0;

            $rootScope.browserApp = GmCXt.browserApp;
            $rootScope.allowedImageExtensions = ['image/png', 'image/jpeg', 'image/jpg'];

            $rootScope.isUserLoggedIn = AuthLogin.isSession;

            $rootScope.appDomainLimit = 500;

            $rootScope.playVideoTour = 'video';
            $rootScope.playSlideshow = 'slideshow';
            $rootScope.playGiphy = 'giphy';
            $rootScope.playVLab = 'vLab';
            $rootScope.playAuto = 'doitforme';
            $rootScope.playGuideMe = "guideMe";
            $rootScope.playTestMe = 'testMe';

            $rootScope.showPlayer = false;
            $rootScope.playerMode = false;

            $rootScope.isPlayer = GmCXt.isPlayer;
            $rootScope.browserLang = GmCXt.browserLang;

            $rootScope.maintenance = false;
            $rootScope.appEnvs = [];
            $rootScope.categoryDataForAutomation = [];
            $rootScope.jsonEditor = false;
            $rootScope.searchFilterDropDownVisible = false;
            $rootScope.isRefresh = false;
            $rootScope.isApiCallOn = false;
            $rootScope.isTaskListActive = false;
            $rootScope.isAppJsonCalling = false;
            $rootScope.isTaskListVisible = false;
            $rootScope.taskListCount = 0;

            $rootScope.pendingStepCount = -1;
            $rootScope.incrementPendingStepCount = function() {
                if ($rootScope.pendingStepCount < 0) $rootScope.pendingStepCount = 0;
                $rootScope.pendingStepCount++;
            };
            $rootScope.decrementPendingStepCount = function() {
                $rootScope.pendingStepCount--;
                $rootScope.pendingStepCount = $rootScope.pendingStepCount > 0 ? $rootScope.pendingStepCount : 0;
            };

            $rootScope.defaultAppEnv = {
                env_3: {
                    name: "Production",
                    checked: true,
                    order: 3,
                    old_key: 'prod'
                },
                env_2: {
                    name: "QA",
                    checked: false,
                    order: 2,
                    old_key: 'qa'
                },
                env_1: {
                    name: "Development",
                    checked: false,
                    order: 1,
                    old_key: 'stage'
                }
            };

            $rootScope.getAppSetting = GmCXt.getAppSetting;
            $rootScope.isFalse = GmCXt.isFalse;
            $rootScope.isResumeGuide = false;
            $rootScope.getNextStep = getNextStep;
            $rootScope.resumeFromStartPoint = false;
            $rootScope.removeHtmlFromText = GmCXt.removeHtmlFromText;

            $rootScope.resetCreatorData = function(clearStorage) {
                $rootScope.allCategories = {};
                if (!GmCXt.inPlayer) {
                    $rootScope.categoryStore = [];
                }

                $rootScope.subCategoryStore = {};

                $rootScope.allTourList = {};

                if (clearStorage) {

                    if (!GmCXt.inPlayer) {
                        storage.category.remove();
                    }

                    storage.allTourList.remove();

                    storage.serverUpdates.remove();
                    storage.serverDeletes.remove();
                    storage.refreshCache.remove();
                }
            };

            $rootScope.resetCreatorData();

            var storageAll = [
                storage.user.get(),
                storage.accessibility.get(),
                storage.organization.get(),
                storage.activeAppId.get(),
                storage.activeTourId.get(),
                storage.activeTab.get(),
                storage.activeView.get(),
                storage.activeLang.get(),
                storage.activeVoice.get(),
                storage.userPrefLang.get(),
                storage.genAIToken.get(),
                storage.videosInProgress.get(),
                storage.breadCrumbItems.get(),

                storage.currentTour.get(),
                storage.testAuto.get(),
                storage.loginTime.get(),
                storage.trackerSecrets.get(),
                storage.edcastLogin.get(),
                storage.allTourList.get(),
                storage.refreshTime.get(),
                storage.lastTimeStampSync.get(),
                storage.activeSortFilter.get(),
                storage.refreshCache.get(),
                storage.segmentGroupData.get(),
                storage.currentStep.get(),
                storage.appData.get(),
                storage.toursModifiedTime.get(),
                storage.stepsPlayed.get()
            ];

            if (GmCXt.FT.creatorApp) {
                storageAll.push(storage.showPlayer.get());
                storageAll.push(storage.serverUpdates.get());
                storageAll.push(storage.serverDeletes.get());
                storage.category.get();
            }

            $rootScope.readStorage = function() {
                return $q.all(storageAll);
            };

            $rootScope.clearStorage = function() {
                return $q.all([
                    storage.user.remove(),
                    storage.organization.remove(),
                    storage.appData.remove(),
                    storage.activeAppId.remove(),
                    storage.segmentGroupData.remove(),
                    storage.taskList.remove()
                ]);
            };

            $rootScope.notiTourIds = [];

            $rootScope.resetNotificationData = function() {
                $rootScope.notifications = {
                    snoozeTour: [],
                    doNotShowTour: []
                };
            };

            $rootScope.checkAppList = function() {

                return new Promise(function(resolve, reject) {
                    if (!GmCXt.isEmpty($rootScope.appList)) {
                        resolve();
                    } else {
                        storage.appData.get().then(function(r) {

                            if ($rootScope.inPlayer) {
                                $rootScope.syncApps(r);
                            }
                            resolve();
                        });
                    }
                });
            };

            $rootScope.getLanguageList = function() {
                languages.get().then(function(l) {
                    $rootScope.languageList = l;
                });
            };

            if (GmCXt.isExtension()) {

                chrome.storage.sync.get({
                    onPrem_appKey: '',
                    onPrem_apiUrl: '',
                    onPrem_insightsUrl: '',
                    onPrem_cdnUrl: '',
                    onPrem_adminPortal: '',
                    onPrem_insightsPortal: ''
                }, function(items) {
                    GmCXt.onPremise = {
                        appKey: items.onPrem_appKey,
                        apiUrl: items.onPrem_apiUrl,
                        analyticsUrl: items.onPrem_insightsUrl,
                        cdnUrl: items.onPrem_cdnUrl,
                        webPortal: items.onPrem_adminPortal,
                        analyticsPortal: items.onPrem_insightsPortal
                    };
                });
            }

            $rootScope.getOnPremOrg = function(forceMode) {
                return new Promise(function(resolve, reject) {

                    if (GmCXt.organization && !forceMode) {
                        processOrg(GmCXt.organization);
                    } else {
                        api.getOrgJson().then(function(r) {
                            GmCXt.getJsonTimeStamp(GmCXt.getOnPremJsonURL()).then(function(r) {
                                storage.refreshTime.set(r.last_updated_time);
                            });
                            $rootScope.showSpinner = false;

                            var org = r.data;
                            var apps = org.applications;

                            GmCXt.organization = GmCXt.validateDataModel(org, GmCXt.model.organization);
                            $rootScope.saveOrganization(GmCXt.organization);
                            apps = GmCXt.validateModelArray(apps, GmCXt.model.applications._obj);
                            $rootScope.saveApps(apps);
                            processOrg(org);
                        });
                    }

                    function processOrg(org) {
                        $rootScope.saveOrgSettings(org.settings);
                        $rootScope.enableOrgFeatures(org);
                        getCurrentAppObj().then(function() {
                            $rootScope.sendSidePanelInitEvent();
                            resolve();
                        });
                    }
                });
            };

            $rootScope.triggerError = function(d) {
                mgError.on({
                    code: d.code,
                    url: d.url,
                    params: d.params,
                    method_type: d.method_type,
                    message: d.errMessage
                });
            };

            $rootScope.getSsoUserInfo = function() {

                if ($rootScope.ssoHitCount < 30) {
                    $rootScope.ssoHitCount++;
                    $timeout(function() {
                        $rootScope.signInWithSso();
                    }, 2000);
                }
            };

            $rootScope.processActiveRequests = function() {
                if (!$rootScope.maintenance) {
                    var message = {
                        action: "mgPlayerJSTest_action:process_active_requests"
                    };

                    GmCXt.sendToParentWindow(message);
                    Message.send(message);
                }
            };

            function getKeysForTracking() {

                if (GmCXt.isEmpty($rootScope.trackerSecrets.secrets)) {
                    $rootScope.registerClientInsights();
                }
            }

            // Sends message to content script with user information
            $rootScope.sendUserInfo = function() {
                $rootScope.checkCdnSignature().then(function() {

                    if (GmCXt.inPlayer) {
                        GmCXt.orgBucket = GmCXt.organization.bucket;
                    }

                    if ($rootScope.FT.isPlayer) {

                        if (GmCXt.getAppSetting('defaultGuideView') && !GmCXt.getAppSetting('all_guide')) {
                            storage.activeView.set("/all_guides");
                        } else {
                            storage.activeView.set("/home/currentpage");
                        }
                    }
                    $rootScope.sendSidePanelInitEvent();
                    getKeysForTracking();
                });
            };

            $rootScope.getTranslatedTourAndSteps = function(_tour, lang) {
                var tour = angular.copy(_tour);
                var languageData = tour.language_data;
                if (!tour.tour_settings.translationEnable && GmCXt.isGuide(tour)) {
                    lang = $rootScope.defaultLang;
                } else {
                    lang = $rootScope.language;
                }

                if (languageData && languageData[lang] && !$rootScope.isGuideInOriginalLang(tour)) {
                    var lData = languageData[lang];

                    if (lData.tour_title) {
                        tour.tour_title = lData.tour_title;
                        tour.tour_description = lData.tour_description;
                    }

                    angular.forEach(tour.steps, function(step, key) {
                        var stepLangData = step.language_data;
                        if (stepLangData &&
                            stepLangData[lang] &&
                            (stepLangData[lang].step_title || stepLangData[lang].step_description)) {

                            var sData = stepLangData[lang];

                            tour.steps[key].step_title = sData.step_title;
                            if (sData.step_description) {
                                tour.steps[key].step_description = sData.step_description;
                            } else {
                                tour.steps[key].step_description = "";
                            }
                            tour.steps[key].step_audio = sData.step_audio;
                            tour.steps[key].step_audio_text = sData.step_audio_text;

                            sData.step_settings = GmCXt.parseJSON(sData.step_settings);
                            tour.steps[key].step_settings = GmCXt.validateDataModel(sData.step_settings, GmCXt.model.stepSettings);
                        }
                    });
                }
                return tour;
            };

            $rootScope.prepSingCatLang = function(_cat, lang) {
                var cat = angular.copy(_cat);
                var langData = cat.language_data;
                if (langData && langData[lang]) {
                    if (langData[lang].category_title) {
                        cat.category_title = langData[lang].category_title;
                    }
                    if (langData[lang].category_description) {
                        cat.category_description = langData[lang].category_description;
                    }
                }
                return cat;
            };

            $rootScope.prepCatLangJson = function(_categories, lang) {
                var categories = angular.copy(_categories);
                angular.forEach(categories, function(cat, key) {
                    cat = $rootScope.prepSingCatLang(cat, lang);
                    categories[key] = cat;
                });
                return categories;
            };

            $rootScope.notDefaultLang = function() {
                if ($rootScope.language && $rootScope.defaultLang && ($rootScope.defaultLang.language !== $rootScope.language)) {
                    return true;
                } else {
                    return false;
                }
            };

            $rootScope.getTranslatedTours = function(_tours, lang) {
                var tours = angular.copy(_tours);
                var lang = $rootScope.language;

                tours.forEach(function(tour, key) {
                    var tLangData = tour.language_data;
                    if (!tour.tour_settings.translationEnable && GmCXt.isGuide(tour)) {
                        lang = $rootScope.defaultLang;
                    } else {
                        lang = $rootScope.language;
                    }
                    if (tLangData && tLangData[lang] && !$rootScope.isGuideInOriginalLang(tour)) {
                        if (tLangData[lang].tour_title) {
                            tour.tour_title = tLangData[lang].tour_title;
                        }
                        if (tLangData[lang].tour_description) {
                            tour.tour_description = tLangData[lang].tour_description;
                        }

                        var ts = tLangData[lang].tour_settings;
                        if (ts) {
                            if (ts.beacon) {
                                tour.tour_settings.beacon = ts.beacon;
                            }
                            if (ts.rules) {
                                tour.tour_settings.rules = ts.rules;
                            }
                        }
                    }

                    var category = $rootScope.allCategories['cat_' + tour.category_id];
                    if (category && category.language_data && category.language_data[lang]) {
                        tour.category_title = category.language_data[lang].category_title;
                    }
                    if (tour.steps) {
                        tours[key] = $rootScope.getTranslatedTourAndSteps(tour, lang);
                    }
                });
                return tours;
            };

            function getAllLanguagesArr(langSett) {
                var langArr = [];
                langArr.push(GmCXt.defaultLang);

                if (langSett.translations) {
                    for (var i = 0, j = langSett.translations.length; i < j; i++) {
                        if (!GmCXt.isEmpty(langSett.translations[i].language)) {
                            langArr.push(langSett.translations[i]);
                        }
                    }
                } else {
                    for (var i = 0, j = langSett.length; i < j; i++) {
                        if (!GmCXt.isEmpty(langSett[i].language)) {
                            langArr.push(langSett[i]);
                        }
                    }
                }

                return GmCXt.removeDuplicates(langArr);
            }

            $rootScope.getAppOrgLanguage = function(l) {
                if ($rootScope.enableTranslation && $rootScope.organization) {
                    var langSett = $rootScope.organization.admin_settings.language_settings;
                    $rootScope.defaultLang = langSett.default;
                    GmCXt.defaultLang = langSett.default;

                    var defLanguage = $rootScope.language;
                    if (!defLanguage) defLanguage = langSett.default.language;

                    if (l) {
                        $rootScope.languages = getAllLanguagesArr(l);
                    } else {
                        $rootScope.languages = getAllLanguagesArr(langSett);
                    }

                    $rootScope.languages.filter(function(item) {
                        if (item.language === defLanguage) {
                            $rootScope.selectedLanguage = item.name;
                        }
                    });
                } else {
                    $rootScope.languages = [];
                }
            };

            $rootScope.resetAppData = function() {
                $rootScope.appList = {};
                storage.activeAppId.remove();
            };

            $rootScope.updateLabels = function() {
                if (!$rootScope.language && GmCXt.organization &&
                    GmCXt.organization.admin_settings.language_settings &&
                    GmCXt.organization.admin_settings.language_settings.default) {
                    $rootScope.language = GmCXt.organization.admin_settings.language_settings.default.language;

                    if (GmCXt.browserLang && GmCXt.browserLang !== $rootScope.language &&
                        GmCXt.checkLangExist(GmCXt.organization.admin_settings.language_settings.translations, GmCXt.browserLang)) {
                        $rootScope.language = GmCXt.browserLang;
                    }
                    storage.activeLang.set($rootScope.language);
                }

                if (!$rootScope.language && GmCXt.organization &&
                    GmCXt.organization.admin_settings.language_settings &&
                    GmCXt.organization.admin_settings.language_settings.default) {
                    $rootScope.language = GmCXt.organization.admin_settings.language_settings.default.language;
                }

                $rootScope.labels = GmCXt.getAllLabels($rootScope.language);

                var msg = {
                    action: 'mgPlayerJSTest_action:set_lang_content_script',
                    data: {
                        lang: $rootScope.language
                    }
                };
                GmCXt.sendToParentWindow(msg);

                if (GmCXt.organization) {
                    $rootScope.updateCustomLabels(GmCXt.organization.settings);
                }

                if (GmCXt.FT.isPlayer) {
                    $rootScope.notifSleepTime = GmCXt.getSleepTime($rootScope.labels);
                }
            };

            $rootScope.updateAppLang = function(language) {
                var lang = '';
                $rootScope.languages.filter(function(item) {
                    if (item.language === language) {
                        lang = item;
                    }
                });

                if (!lang) {
                    lang = $rootScope.defaultLang;
                }

                if (GmCXt.isDefined(lang)) {
                    $rootScope.selectedLanguage = lang.name;
                    GmCXt.mgActiveLang = lang.language;
                    storage.activeLang.set(lang.language);

                    $rootScope.updateLabels();
                }
            };

            $rootScope.showSurveyStep = function(step) {
                if (step.step_type === 'survey' && !$rootScope.checkInsightEnabled()) {
                    return false;
                }
                return true;
            };

            $rootScope.selectLanguage = function(lang) {

                if (GmCXt.FT.creatorApp) {
                    if ($rootScope.defaultLang.name === lang) {
                        return true;
                    }
                } else {
                    if ($rootScope.userPrefLang) {
                        if ($rootScope.selectedLanguage === lang) {
                            return true;
                        }
                    } else if (!lang) {
                        return true;
                    }
                }
            };

            function resetData() {

                $rootScope.contextTours = {};

                $rootScope.applicationDropdown = false;
                $rootScope.automationDropdown = false;

                if ($rootScope.FT.creatorApp) {
                    storage.segmentData.remove();
                }

                $rootScope.resetCreatorData(true);

                storage.allTourList.set({});

                $rootScope.cancelAutomationSelection();
            }

            function gotAccessToken() {

                if (GmCXt.inPlayer) {
                    $rootScope.loadJsonPlayer().then(function() {

                        $rootScope.showSpinner = true;

                        if ($rootScope.guideSegmentation) {

                            if (GmCXt.FT.creatorApp && $rootScope.hasCreatorAccess()) {
                                $rootScope.getSegmentsList();
                            }
                        }

                        $rootScope.goToView();

                        $rootScope.sendSidePanelInitEvent(true);

                        if (!$rootScope.$$phase) $rootScope.$apply();
                    });

                } else {
                    api.getOrganization(onRefreshSettings, true);
                }
            }

            $rootScope.refreshAllData = function(doNotGetAccessToken) {

                GmCXt.log(21, 'REFRESH event');

                $rootScope.showSpinner = true;
                $rootScope.isRefresh = true;
                if (!$rootScope.FT.isPlayer) {
                    $rootScope.isApiCallOn = true;
                }

                storage.taskList.remove();
                storage.languageList.remove();
                storage.segmentGroupData.remove();
                resetData();

                if (GmCXt.onPrem()) {
                    initOnPremPlayer(true);
                } else if (doNotGetAccessToken) {
                    gotAccessToken();
                } else {
                    $rootScope.getAccessTokenFromRefreshToken(gotAccessToken);
                }
            };

            $rootScope.redirectWithRefresh = function(lastUrl) {

                storage.allTourList.remove();

                if (lastUrl && lastUrl.length && lastUrl !== '/manage-keywords' && lastUrl !== '/findNReplace') {
                    GmCXt.redirect('#' + lastUrl);
                } else {
                    $rootScope.goToCurrentPage();
                }

            };

            function redirectToView() {
                if (GmCXt.user && GmCXt.organization.organization_id) {
                    $rootScope.fetchApps().then(function() {
                        $rootScope.sendSidePanelInitEvent(true);
                        $rootScope.$emit('refresh_header');
                    });
                } else {
                    GmCXt.redirect('#/noorg');
                }
            }

            function onRefreshSettings(org) {

                $rootScope.saveOrganization(org);

                storage.refreshTime.set(GmCXt.getCurrentTimeInSec());

                if ($rootScope.guideSegmentation) {

                    if (GmCXt.FT.creatorApp && $rootScope.hasCreatorAccess()) {
                        $rootScope.getSegmentsList();
                    }

                    $rootScope.showSpinner = true;

                    if ($rootScope.appConfig.customer !== 'westpac') {
                        $rootScope.getAllSegments().then(function() {
                            redirectToView();
                        });
                    } else {
                        redirectToView();
                    }

                } else {
                    redirectToView();
                }
            }

            function checkAppData() {

                return new Promise(function(resolve, reject) {

                    $rootScope.checkAppList().then(function() {
                        if (GmCXt.checkDomainInApps(GmCXt.urlParts.fullUrl).domainMatch) {
                            if ($rootScope.activeAppId && $rootScope.activeAppId !== GmCXt.checkDomainInApps(GmCXt.urlParts.fullUrl).appId) {
                                resetData();
                            }
                            if ($rootScope.FT.creatorApp) {
                                autoSwitchApp();
                            }
                            $rootScope.activeAppId = GmCXt.checkDomainInApps(GmCXt.urlParts.fullUrl).appId;
                            var cApp = $rootScope.appList['app:' + $rootScope.activeAppId];

                            if (cApp) {
                                $rootScope.initAppDetails(cApp);
                            }
                        } else if (!GmCXt.FT.creatorApp) {
                            storage.activeAppId.remove();
                        }
                        resolve();
                    });
                });
            }

            function initCommon() {

                checkAppData().then(function() {
                    if (!GmCXt.FT.creatorApp) {
                        var isAppSwitch = autoSwitchApp();
                        if (isAppSwitch) {
                            $rootScope.processedAppData = true;
                        }
                    }
                    $rootScope.syncUser();
                    $rootScope.setMode();
                    $rootScope.setNotifTours();
                    $rootScope.initPlayerMode();
                    $rootScope.showWidget();

                    $rootScope.sendUserInfo();
                });

            }

            function initOnPremPlayer(forceMode) {

                GmCXt.log(21, 'LOADED side panel. Initialising On Prem Player');
                $rootScope.getOnPremOrg(forceMode).then(function() {
                    $rootScope.goToCurrentPage();
                    $rootScope.processActiveRequests();
                });
            }

            $rootScope.isAllowedDomain = function() {
                var foundDomain = true;
                if (GmCXt.conf.allowedDomains && GmCXt.conf.allowedDomains.length) {
                    foundDomain = false;
                    for (var i = 0; i < GmCXt.conf.allowedDomains.length; i++) {
                        if (GmCXt.urlParts.host.indexOf(GmCXt.conf.allowedDomains[i]) >= 0) {
                            foundDomain = true;
                            break;
                        }
                    }
                }

                return foundDomain;
            };

            function initPlayer() {

                GmCXt.log(21, 'LOADED side panel. Initialising Player');

                if (GmCXt.user) {
                    initCommon();
                } else {
                    if (($rootScope.appConfig.login.SSO || GmCXt.myGuideInternalCustomers() || GmCXt.isMcKesson()) && $rootScope.isAllowedDomain()) {
                        if (GmCXt.urlParts) {
                            $rootScope.signInWithSso();
                        } else {
                            $timeout(function() {
                                $rootScope.signInWithSso();
                            }, 1000);
                        }
                    } else {
                        $rootScope.clearSession();
                    }
                }
            }

            function goToApp() {
                getCurrentAppObj().then(function(currentApp) {
                    if (!GmCXt.isEmpty(currentApp)) {
                        $rootScope.goToRoute();
                    }
                });
            }

            function autoSwitchApp(redirectCb) {

                var isAppSwitch = true;
                var r = GmCXt.checkDomainInApps(GmCXt.urlParts.fullUrl);

                updateSettingOnAppSwitch();

                if (!GmCXt.isFQDN()) {
                    goToApp();

                } else if (r.appId !== GmCXt.activeAppId) {

                    $rootScope.resetCreatorData(true);

                    if (r.domainMatch) {
                        GmCXt.log(21, 'SWITCH app for the current domain: ' + r.appName);

                        storage.activeAppId.set(r.appId);

                        if (GmCXt.inPlayer) {
                            resetData();
                        }

                        $rootScope.initAppDetails($rootScope.appList['app:' + r.appId]);

                        if (redirectCb) {
                            redirectCb();
                        } else if ($rootScope.FT.isPlayer) {
                            storage.activeView.set("/home/currentpage");
                        } else {
                            storage.activeView.set("/all_guides");
                        }
                    } else if ($rootScope.FT.isPlayer) {
                        $rootScope.goToNoApp();
                        isAppSwitch = false;
                    } else if ($rootScope.FT.creatorApp) {
                        goToApp();
                    }
                } else {
                    isAppSwitch = false;
                }

                return isAppSwitch;
            }

            function initCreator() {
                GmCXt.log(21, 'LOADED side panel. Initialising Creator');
                if (GmCXt.user) {
                    initCommon();
                } else {
                    $rootScope.clearSession();
                }
            }

            $rootScope.initApp = function() {

                if (GmCXt.onPrem()) initOnPremPlayer();
                else if (GmCXt.isPlayer()) initPlayer();
                else initCreator();
            };

            $rootScope.filterGuide = function(title, keywords, tid, description) {
                if (!title || !keywords) return true;
                title = title.toLowerCase();
                keywords = keywords.toLowerCase();
                var matchedKeyword = 0;
                var arr = keywords.split(' ');

                arr.filter(function(item) {
                    if (!item || title.indexOf(item) > -1 || description.indexOf(item) > -1 || item === tid)
                        matchedKeyword = matchedKeyword + 1;
                });

                return (matchedKeyword === arr.length);
            };

            function sortNotifTours(tours, viewedGuide) {
                $rootScope.resetNotificationData();

                if (tours) {
                    tours = GmCXt.sortToursByModifcationDate(tours);
                    for (var i = 0, j = tours.length; i < j; i++) {

                        var tour = $rootScope.notDefaultLang() ?
                            $rootScope.getTranslatedTourAndSteps(tours[i], $rootScope.language) :
                            tours[i];

                        if (tour && !tour.tour_settings.oneTimeNotification) {
                            if (viewedGuide[tour.tour_id]) {
                                $rootScope.notifications.doNotShowTour.push({
                                    tour_id: tour.tour_id,
                                    tour_title: tour.tour_title
                                });
                            } else if (GmCXt.inArray(tour.tour_id, $rootScope.notiTourIds)) {
                                $rootScope.notifications.snoozeTour.push({
                                    tour_id: tour.tour_id,
                                    tour_title: tour.tour_title
                                });
                            }
                        }
                    }
                }
            }

            $rootScope.processNotificationTours = function(viewedGuide) {

                if ($rootScope.notiTourIds.length === 0) {
                    return false;
                }

                var data = {
                    tour_ids: '[' + $rootScope.notiTourIds.toString() + ']'
                };

                if (GmCXt.inPlayer) {
                    sortNotifTours($rootScope.publishedTours, viewedGuide);
                } else {
                    api.getTours(data, function(_t) {
                        sortNotifTours(_t, viewedGuide);
                    });
                }
            };

            function setDefaultOrgFeatures() {
                $rootScope.currentPageBeacon = false;
                $rootScope.fqdn = false;
                $rootScope.guideSegmentation = false;
                $rootScope.mediafileCreation = false;
                $rootScope.createTooltipMediaFile = false;
                GmCXt.trackerUtil.trackPI = false;
                $rootScope.enableGuidemeMode = false;
            }

            function setDefaultAdminFeature() {
                $rootScope.lms = false;
                $rootScope.chatBot = false;
                $rootScope.enableMyteacher = false;
                $rootScope._doitforme = false;
                $rootScope.maintenance = false;
                $rootScope.currentPageOnly = false;
                $rootScope.showAppSwitcher = false;
                GmCXt.trackerUtil.enableTracking = false;
                GmCXt.trackerUtil.trackPI = false;
                $rootScope.FT.analytics = false;
                $rootScope.ruleCheck = false;
                $rootScope.displayAcceptCookiePopup = true;
                $rootScope.featureTracking = false;
                $rootScope.pageTracking = false;
                $rootScope.generateKeyword = false;
                setDefaultOrgFeatures();
            }

            $rootScope.handleError = function(e) {

                if (e && e.name) {
                    if (e.name === 'PermissionDeniedError' || e.name === 'NotAllowedError') {
                        $rootScope.showPopup($rootScope.labels.userDeniedMessage);
                    } else if (e.name === 'CameraNotFound') {
                        $rootScope.cameraDisabled = true;
                        $rootScope.showPopup($rootScope.labels.noCamera);
                    } else {
                        mgError.on({
                            code: 2200,
                            info: e
                        });
                    }
                }
            };

            $rootScope.enableOrgFeatures = function(org) {

                if (!GmCXt.isEmpty(org) && GmCXt.isDefined(org)) {

                    var as = org.admin_settings || {};
                    var os = org.settings || {};

                    GmCXt.log(21, "ENABLE org features", org);
                    setDefaultAdminFeature();

                    if (!GmCXt.isEmpty(org.bucket)) {
                        GmCXt.orgBucket = org.bucket;
                    }

                    if (as.lms) {
                        $rootScope.lms = true;
                    }

                    if (as.auto_generate_keywords === "1") {
                        $rootScope.generateKeyword = true;
                    }

                    if (GmCXt.isChatEnable()) {
                        $rootScope.chatBot = true;
                    }

                    if (GmCXt.getAppSetting('vLab')) {
                        $rootScope.enableMyteacher = true;
                    }

                    if (GmCXt.getAppSetting('doitforme')) {
                        $rootScope._doitforme = true;
                    }

                    if ((GmCXt.getAppSetting('all_guide') && GmCXt.isPlayer())) {
                        $rootScope.currentPageOnly = true;
                    }

                    if (as.app_switcher) {
                        $rootScope.showAppSwitcher = as.app_switcher;
                    }

                    if (!as.display_accept_cookie_popup)
                        $rootScope.displayAcceptCookiePopup = false;

                    if (as.maintenance_mode)
                        $rootScope.goToMaintenance();

                    if (as.current_page_beacon)
                        $rootScope.currentPageBeacon = true;

                    if (as.guide_segmentation)
                        $rootScope.guideSegmentation = true;

                    if (as.mediafile_creation)
                        $rootScope.mediafileCreation = true;

                    if (as.create_tooltip_media_file)
                        $rootScope.createTooltipMediaFile = true;

                    if (os.fqdn) {
                        $rootScope.fqdn = true;
                        $rootScope.showAppSwitcher = !os.fqdn;
                    }

                    if (as.language_settings && as.language_settings.translations.length &&
                        as.guide_translation
                    ) {
                        $rootScope.enableTranslation = true;
                        GmCXt.enableTranslation = true;

                    } else {
                        $rootScope.enableTranslation = false;
                        GmCXt.enableTranslation = false;
                        storage.activeLang.remove();
                        storage.activeVoice.remove();
                        $rootScope.isDefaultLang = true;
                    }

                    if (as.insights && as.insights.enabled) {
                        if (as.insights.guide) {
                            $rootScope.FT.analytics = true;
                            GmCXt.trackerUtil.enableTracking = true;
                        }

                        if (as.insights.app) {
                            var ias = as.insights.app[GmCXt.activeAppId];
                            if (ias && ias.enable_feature_tracking) {
                                GmCXt.trackerUtil.featureTracking = true;
                                $rootScope.featureTracking = true;
                            }
                            if (ias && ias.enable_page_tracking) {
                                GmCXt.trackerUtil.pageTracking = true;
                                $rootScope.pageTracking = true;
                            }
                        }
                    }

                    if (as.isPITrackingEnabled) {
                        GmCXt.trackerUtil.trackPI = true;
                    }

                    $rootScope.isGuideAutomationEnabled = as.myBotEnabled && !$rootScope.currentPageOnly;

                    if (as.efficient_rule_mode) {
                        $rootScope.ruleCheck = true;
                    }

                    if (GmCXt.isTrue(as.enable_guideme_as_secondary_option)) {
                        $rootScope.enableGuidemeMode = true;
                    }

                    var msg = {
                        action: "mgPlayerJSTest_action:update_tracking_info",
                        data: {
                            enableTracking: GmCXt.trackerUtil.enableTracking,
                            trackPI: GmCXt.trackerUtil.trackPI,
                            featureTracking: GmCXt.trackerUtil.featureTracking,
                            pageTracking: GmCXt.trackerUtil.pageTracking
                        }
                    };
                    GmCXt.sendToParentWindow(msg);
                    GmCXt.sendMessageToBackgroundService(msg);
                }
            };

            $rootScope.isGuideAutomationEnabledForApp = function() {
                // Enable Guide Automation with application settings
                return $rootScope.isGuideAutomationEnabled && GmCXt.getAppSetting('isAutomationEnabled');
            };

            $rootScope.closeNotification = function() {
                if ($rootScope.videoUploadMessage) $rootScope.videoUploadMessage = false;

                if ($rootScope.importUploadMessage) $rootScope.importUploadMessage = false;
                if (!$rootScope.$$phase) $rootScope.$apply();
            };

            $rootScope.reportInitialization = function() {
                GmCXt.log(21, "LOADING side panel, globals initialised");
                var msg = {
                    action: "mgPlayerJSTest_action:initialization:side_panel_loaded",
                    organization: GmCXt.organization

                };
                sendMessage(msg);
            };

            var sendMessage = function(msg) {
                GmCXt.sendToParentWindow(msg);
                Message.send(msg);
            };

            $rootScope.sendSidePanelInitEvent = function(reset) {

                if (!$rootScope.maintenance && $rootScope.activeAppId) {
                    GmCXt.log(21, "Side panel intialisation completed");

                    var appList = $rootScope.removeCatFromApplist($rootScope.appList);
                    var message = {
                        action: "mgPlayerJSTest_action:on_side_panel_init",
                        data: {
                            user: GmCXt.user,
                            activeAppId: $rootScope.activeAppId,
                            organization: GmCXt.organization,
                            userPrefLang: $rootScope.userPrefLang,
                            appList: appList,
                            refreshTime: $rootScope.refreshTime,
                            lastTimeStampSync: $rootScope.lastTimeStampSync,
                            url: GmCXt.urlParts.fullUrl,
                            reset: reset
                        }
                    };

                    if (GmCXt.onPrem()) {
                        message.data.onPremUrl = GmCXt.getOnPremJsonURL();
                    }

                    sendMessage(message);
                }
            };

            $rootScope.getPrevRoute = function(fromAddPage) {
                return new Promise(function(resolve, reject) {
                    var route;
                    var history = GmCXt.createDeepCopy($rootScope.breadCrumbItems);

                    if (!fromAddPage) {
                        if (history && !GmCXt.isEmpty(history)) {
                            history.pop();
                        }
                    }

                    var lastPage = null;

                    if (history && !GmCXt.isEmpty(history)) {
                        lastPage = history.pop();

                        if (lastPage && lastPage.type === "tour") {
                            lastPage = history.pop();
                        }
                    }

                    if (lastPage !== null) {

                        if (lastPage.type === 'category') {
                            if (!lastPage.has_child) {
                                route = '#/category/' + lastPage.id + '/tour/list';
                            } else {
                                route = '#/category/' + lastPage.id + '/list';
                            }
                        } else if (lastPage.type === 'start' || lastPage.type === 'search') {
                            route = lastPage.route;
                        }

                        resolve(route);
                    } else {

                        if ($rootScope.activeTab === $rootScope.labels.myChat) {
                            route = '#/chatbot';
                        } else {
                            route = '#/all_guides';
                        }

                        resolve(route);
                    }
                });
            };

            $rootScope.showCopySteps = function(tour) {
                return $rootScope.currentView === 'tour-view' && tour.steps.length &&
                    !GmCXt.containBranchStep(tour) && tour.tour_type !== 'insights';
            };

            $rootScope.goBack = function(fromAddPage) {
                $rootScope.copySteps = false;

                $rootScope.getPrevRoute(fromAddPage).then(function(data) {
                    GmCXt.redirect(data);
                });

                if ($rootScope.guideViewFullScreen) {
                    $rootScope.guideViewFullScreen = false;
                    $rootScope.toggleGuideViewFullScreen();
                }

            };

            $rootScope.toggleGuideViewFullScreen = function() {
                if ($rootScope.guideViewFullScreen) {
                    var m = {
                        action: "mgPlayerJSTest_action:increase_side_panel_width"
                    };
                    GmCXt.sendToParentWindow(m);

                    mg$('.ege-panel').css({
                        'width': '90%',
                        'max-width': '90%',
                        'transition': 'width 0s'
                    });

                } else {
                    var m = {
                        action: "mgPlayerJSTest_action:reduce_side_panel_width"
                    };
                    GmCXt.sendToParentWindow(m);

                    mg$('.ege-panel').css({
                        'width': '500px',
                        'max-width': '500px',
                        'transition': 'width 0s'
                    });
                }
            };

            $rootScope.getSsoId = function() {
                return new Promise(function(resolve, reject) {
                    var currHost = GmCXt.trimAndLowerCaseURL(GmCXt.urlParts.host);
                    mg$.ajax({
                        url: GmCXt.conf.ssoConfigUrl + '' + GmCXt.getMd5(currHost) + ".json",
                        xhrFields: {
                            withCredentials: false
                        },
                        method: "GET",
                        contentType: "application/json",
                        success: function(response) {
                            response = GmCXt.parseJSON(response);
                            $rootScope.ssoId = response.id;
                            resolve(response);
                        },
                        error: function(error) {
                            reject();
                        }
                    });
                });
            };

            $rootScope.getUserInfoWithSSO = function() {
                return new Promise(function(resolve, reject) {
                    var currHost = GmCXt.trimAndLowerCaseURL(GmCXt.urlParts.host);
                    mg$.ajax({
                        url: getSsoIdUrl($rootScope.ssoApiUrl),
                        xhrFields: {
                            withCredentials: true
                        },
                        method: "GET",
                        beforeSend: function(xhr) {
                            xhr.setRequestHeader('x-mg-host', currHost);
                            xhr.setRequestHeader('x-mg-source', GmCXt.conf.appName);
                            xhr.setRequestHeader('x-mg-orgId', '');
                        },
                        contentType: "application/json",
                        success: function(response) {
                            response = GmCXt.parseJSON(response);
                            resolve(response);
                        },
                        error: function(error) {
                            reject();
                        }
                    });
                });
            };

            $rootScope.registerClientInsights = function() {

                var date = new Date();
                var currentTime = date.getTime();

                if (!GmCXt.isEmpty($rootScope.trackerSecrets)) {
                    var age = parseInt((currentTime - $rootScope.trackerSecrets.app_client_timestamp) / 1000);
                } else {
                    var age = parseInt(currentTime / 1000);
                }

                if (GmCXt.isEmpty($rootScope.trackerSecrets) || !$rootScope.trackerSecrets.registerClientId) {

                    GmCXt.api.registerClientInsight().then(function(result) {
                        $rootScope.setInsightsClientKey(result.data.app_client_id, currentTime);
                    }).catch(function() {});

                } else if (age > 3600) {
                    $rootScope.setInsightsClientKey($rootScope.trackerSecrets.registerClientId, currentTime);
                }
            };

            $rootScope.setInsightsClientKey = function(secretKey, currentTime) {

                var cb = function(r) {
                    GmCXt.log(21, "Insights client key is set");
                    var data = {
                        registerClientId: secretKey,
                        app_client_secret: r.data.app_client_secret,
                        app_client_timestamp: currentTime
                    };

                    storage.trackerSecrets.set(data);
                };

                GmCXt.api.getClientSecretInsight(secretKey).then(function(result) {
                    cb(result);
                }).catch(function(err) {
                    GmCXt.log(1, "ERROR: failed to get insights client key");
                    if (err && err.errorCode === "006-001-002") {
                        $rootScope.trackerSecrets = {};
                        $rootScope.registerClientInsights();
                    }
                });
            };

            //TODO: to be removed after updating tour model
            $rootScope.existsOrUndefined = function(val) {
                if (val || val === undefined) return true;
                else return false;
            };

            function resetAll() {
                $rootScope.contextTours = {};
                storage.activeLang.remove();
            }

            $rootScope.onUserSignin = function(user, sso) {

                $rootScope.user = user;

                GmCXt.log(21, "USER login", user);

                GmCXt.storage().set({
                    "login_state": true
                });

                GmCXt.updateGlobalUser(user);

                storage.loginTime.set(new Date().getTime());

                user.signedInWithSso = sso;
                user.region = "US";

                resetAll();
                if (sso) storage.lastSsoRedirectTime.set('');

                $rootScope.setMode();
                $rootScope.saveUser(GmCXt.user);

                $rootScope.setNotifTours();

                $rootScope.registerClientInsights();

                GmCXt.lastTooltipSync = GmCXt.getCurrentTimeInSec();
                GmCXt.storage().set({
                    "lastTooltipSync": GmCXt.lastTooltipSync
                });

                $rootScope.getContextToursAfterLogin = true;

                $rootScope.initializeApp().then(function() {

                    $rootScope.initPlayerMode();
                    $rootScope.sendSidePanelInitEvent();

                    if (!GmCXt.inPlayer || !GmCXt.onPrem()) {
                        storage.refreshTime.set(GmCXt.getCurrentTimeInSec());
                    }

                    $rootScope.showWidget();
                });

                if ($rootScope.guideSegmentation) {
                    if (GmCXt.FT.creatorApp && $rootScope.hasCreatorAccess()) {
                        $rootScope.getSegmentsList();
                    }
                }

                $rootScope.onMinMaxChaticon();
            };

            $rootScope.checkAutoLogin = function() {
                if (GmCXt.isLXP() || GmCXt.conf.autologin || $rootScope.appConfig.login.SSO === 1) {
                    return true;
                } else {
                    return false;
                }
            };

            $rootScope.filterKeyInputGuides = function(tours) {
                $rootScope.keyInputGuides = tours.filter(function(tour) {
                    if (tour && tour.tour_settings && tour.tour_settings.enableKeyboardInput && !GmCXt.isEmpty(tour.tour_settings.keyboardKeyInput))
                        return tour;
                });

                var message = {
                    action: "mgPlayerJSTest_action:get_key_input_guides",
                    data: {
                        tours: $rootScope.keyInputGuides
                    }
                };

                GmCXt.sendToParentWindow(message);
            };

            $rootScope.processContextualGuide = function(r, url) {
                var tours = r;
                if (r.data) {
                    tours = r.data.data.tours;
                }
                $rootScope.filterKeyInputGuides(tours);

                if(GmCXt.isPlayer()) tours = GmCXt.filterScheduleTours(tours);

                if (GmCXt.inPlayer && $rootScope.notDefaultLang()) {
                    tours = $rootScope.getTranslatedTours(tours);
                }

                if (!$rootScope.contextTours[url]) {
                    $rootScope.contextTours[url] = [];
                }

                $rootScope.contextTours[url][GmCXt.pageTitle] = tours;

                return tours;
            };

            $rootScope.dropdownToggleMenu = function(event) {
                mg$('.dropdown-menu').addClass('tempToggleInactiv');
                mg$(this).next('.dropdown-menu').removeClass('tempToggleInactiv').addClass('tempToggleActive');

                mg$('.tempToggleInactiv').slideUp(100);
                mg$('.tempToggleActive').slideToggle(100);
                mg$('.tempToggleActive').removeClass('tempToggleActive');
                mg$('.tempToggleInactiv').removeClass('tempToggleInactiv');
            };

            $rootScope.shouldOpenSsoTab = function() {

                var currentTime = new Date().getTime();
                var promise = new Promise(function(resolve, reject) {
                    storage.lastSsoRedirectTime.get().then(function(data) {
                        var lastChecked = data;
                        var oneHourPassed = (currentTime > (lastChecked + GmCXt.t.openSso));

                        if (!lastChecked || oneHourPassed)
                            resolve(true);
                        else
                            resolve(false);
                    });
                });

                return promise;
            };

            function getSSOWindowOpt() {
                var retStr = 'width=350,height=300,';
                retStr += "top=" + (screen.width - 100) + ",";
                retStr += "left=" + (screen.height - 100);
                return retStr;
            }

            function getSsoIdUrl(url) {
                if (!$rootScope.myGuideOrgKey && (GmCXt.myGuideInternalCustomers() || GmCXt.isMcKesson())) {
                    return url + '' + $rootScope.ssoId;
                } else {
                    return url;
                }
            }

            $rootScope.openSsoTab = function() {
                var currentTime = new Date().getTime();
                storage.lastSsoRedirectTime.set(currentTime);
                var ssoOptions = getSSOWindowOpt();
                $rootScope.ssoTab = window.open(getSsoIdUrl($rootScope.ssoRedirectionUrl), "", ssoOptions);
                $rootScope.getSsoUserInfo();
            };

            function closeTabForSso() {
                if ($rootScope.ssoTab) $rootScope.ssoTab.close();
            }

            $rootScope.signInWithSso = function(target) {

                if (!$rootScope.myGuideOrgKey && (GmCXt.myGuideInternalCustomers() || GmCXt.isMcKesson())) {
                    $rootScope.getSsoId().then(function(response) {
                        getSsoUser();
                    }).catch(function() {
                        GmCXt.log(1, "ERROR: failed to get SSO Id");
                        $rootScope.clearSession();
                    });
                } else {
                    getSsoUser();
                }

                function retrySso() {

                    if (GmCXt.user) {
                        closeTabForSso();
                        return;
                    }

                    $rootScope.shouldOpenSsoTab().then(function(flag) {
                        if (flag) {
                            $rootScope.openSsoTab();
                        } else {
                            $rootScope.getSsoUserInfo();
                        }
                    });
                }

                function getSsoUser() {
                    $rootScope.getUserInfoWithSSO()
                        .then(gotUser)
                        .catch(function(err) {
                            retrySso();
                        });
                }

                function gotUser(r) {

                    if (r.error === false) {
                        closeTabForSso();
                        $rootScope.onUserSignin(r.data.user, true);
                    } else if (r.code === 1001) {
                        retrySso();
                    } else if (r.code === 1002) { // User not available

                        closeTabForSso();
                        $rootScope.hideWidget();
                    } else if (r.code === 1014) {
                        closeTabForSso();
                        $rootScope.goToMaintenance();
                    }
                }
            };

            $rootScope.onMinMaxChaticon = function() {

                $rootScope.chatBotMin = true;

            };

            $rootScope.toggleChaticon = function(t) {

                switch (t) {
                    case 0:
                        $rootScope.chatBotHide = true;
                        break;
                    case 1:
                        $rootScope.chatBotHide = false;
                        break;
                }

            };

            $rootScope.hideWidget = function() {
                var message = {
                    action: "mgPlayerJSTest_action:hide_widget"
                };
                GmCXt.sendToParentWindow(message);
            };

            $rootScope.showWidget = function() {
                var message = {
                    action: "mgPlayerJSTest_action:show_widget"
                };
                GmCXt.sendToParentWindow(message);
            };

            $rootScope.showChatIcon = function() {
                var message = {
                    action: "mgPlayerJSTest_action:show_chat_icon"
                };
                GmCXt.sendToParentWindow(message);
            };

            $rootScope.removeChatIcon = function() {
                var message = {
                    action: "mgPlayerJSTest_action:remove_chat_icon"
                };
                GmCXt.sendToParentWindow(message);
            };

            $rootScope.showCurrentPageGuidesIndicator = function(clearRulesJobs) {

                if (GmCXt.FT.isPlayer) {

                    GmCXt.log(30, "SHOW current page indicator");

                    $rootScope.msgSentCurrentPageCount = true;
                    var message = {
                        action: "mgPlayerJSTest_action:show_current_page_guide_indicator",
                        data: {
                            clearRulesJobs: clearRulesJobs
                        }
                    };
                    GmCXt.sendToParentWindow(message);
                }
            };

            $rootScope.hideCurrentPageGuidesIndicator = function() {
                if (GmCXt.FT.isPlayer) {

                    GmCXt.log(30, "HIDE current page indicator");

                    var message = {
                        action: "mgPlayerJSTest_action:hide_current_page_guide_indicator",
                    };
                    GmCXt.sendToParentWindow(message);

                }
            };

            $rootScope.taskListGuidesCount = function(tours) {

                if (GmCXt.FT.isPlayer) {
                    var taskCount = tours.length;

                    if (!taskCount || taskCount <= 0) {
                        GmCXt.taskListCount = 0;
                        $rootScope.taskListCount = 0;
                        $rootScope.isTaskListVisible = false;
                    } else if (taskCount < 100) {
                        $rootScope.taskListCount = taskCount;
                        $rootScope.isTaskListVisible = true;
                    } else {
                        $rootScope.taskListCount = "99+";
                        $rootScope.isTaskListVisible = true;
                    }

                    var message = {
                        action: "mgPlayerJSTest_action:inform_task_list_guide_count",
                        data: taskCount
                    };

                    GmCXt.sendToParentWindow(message);

                    if (!$rootScope.$$phase) $rootScope.$apply();
                }
            };

            $rootScope.getNewCdnSignature = function() {

                var promise = new Promise(function(resolve, reject) {

                    if (GmCXt.onPrem()) {
                        resolve();
                    } else if (GmCXt.organization) {

                        var data = {};
                        if (GmCXt.organization.organization_id) {
                            data.organization_id = GmCXt.organization.organization_id;
                            fetchCdnCall();
                        } else {
                            $rootScope.fetchOrgFromAPI().then(function(response) {
                                fetchCdnCall();
                            }).catch(function(err) {
                                reject(err);
                            });
                        }

                    } else {
                        $rootScope.fetchOrgFromAPI().then(function(response) {
                            fetchCdnCall();
                        });
                    }

                    function fetchCdnCall() {
                        api.getCdnSignature(data, function(response) {
                            cb(response);
                            resolve();
                        });
                    }

                    function cb(response) {
                        var result = response.data.data;
                        if (result && result.cdn_signature && result.cdn_signature_expiry) {

                            if (GmCXt.user) {
                                GmCXt.user.cdn_signature = result.cdn_signature;
                                GmCXt.user.cdn_signature_expiry = result.cdn_signature_expiry;

                                $rootScope.saveUser(GmCXt.user);
                                $rootScope.updateCdnSignature();
                            }
                        }
                    }
                });
                return promise;
            };

            /* This function is to set timeout to refresh cdn signature. */
            $rootScope.checkCdnSignature = function() {
                if (GmCXt.user) {

                    if (!GmCXt.user.cdn_signature || !GmCXt.user.cdn_signature_expiry) {
                        return $rootScope.getNewCdnSignature();
                    }

                    var expiryTime = parseInt(GmCXt.user.cdn_signature_expiry);
                    expiryTime = (!expiryTime) ? 0 : expiryTime * 1000;

                    if (expiryTime) expiryTime = expiryTime - (2 * 60 * 1000);

                    var currentTime = new Date().getTime();

                    if (expiryTime - currentTime <= 0) {
                        return $rootScope.getNewCdnSignature();
                    }
                }

                return new Promise(function(resolve, reject) {
                    resolve();
                });
            };

            //storing details of ANY active app
            $rootScope.processAppData = function(app) {

                var categories = {},
                    tours = {};

                GmCXt.log(21, "PROCESS NON ACTIVE app data", app);

                var processTour = function(newTours, t) {

                    newTours.forEach(function(nt) {
                        t['tour_' + nt.tour_id] = nt;
                    });

                    return t;
                };

                var processCategory = function(c) {

                    categories["cat_" + c.category_id] = c;

                    if (c.sub_categories && c.sub_categories.length > 0) {
                        angular.forEach(c.sub_categories, processCategory);

                    } else if (c.tours && c.tours.length > 0) {
                        tours = processTour(c.tours, tours);

                    }

                };

                if (app.categories && app.categories.length > 0) {
                    angular.forEach(app.categories, processCategory);
                }

                return {
                    categories: categories,
                    tours: tours
                };

            };

            //storing details of only active app
            $rootScope.processAppDataActiveApp = function(app) {

                var categories = [],
                    subCategories = {},
                    subCat = [],
                    tours = {};

                clearCache();

                GmCXt.log(21, "PROCESS app data", app);

                var updateTours = function(tours, cid, cOrder, subCOrder) {

                    tours.forEach(function(t) {
                        t = GmCXt.validateDataModel(t, GmCXt.model.guide);
                        t.category_order = parseInt(cOrder);
                        t.subCategory_order = parseInt(subCOrder);
                    });

                    $rootScope.addTourList(cid, tours);

                    return tours;
                };

                var processCategory = function(c, catOrder, subCatOrder) {

                    c = GmCXt.validateDataModel(c, GmCXt.model.category);
                    var cato = catOrder || c.category_order;

                    if (c.sub_categories && c.sub_categories.length > 0) {
                        subCategories["cat_" + c.category_id] = c.sub_categories;
                        angular.forEach(c.sub_categories, function(subCat) {
                            processCategory(subCat, cato, subCat.category_order);
                        });

                    } else if (c.tours && c.tours.length > 0) {
                        tours["cat_" + c.category_id] = updateTours(c.tours, c.category_id, cato, subCatOrder);

                    } else if (parseInt(c.parent_id)) {

                        if (!subCategories["cat_" + c.parent_id]) {
                            subCategories["cat_" + c.parent_id] = [];
                        }
                        subCategories["cat_" + c.parent_id].push(c);
                    }

                    if (c.is_published && !GmCXt.convertType(c.parent_id)) {
                        categories.push(c);
                    }

                    if (GmCXt.convertType(c.parent_id)) {
                        subCat.push(c);
                    }
                };

                if (app.categories && app.categories.length > 0) {
                    angular.forEach(app.categories, function(cat) {
                        processCategory(cat);
                    });
                }

                var filteredcat = [];
                var filteredSubCat = [];
                var filteredSubCategories = {};

                categories.forEach(function(cat) {
                    function segmentCb(t) {
                        if (!GmCXt.isEmpty(t)) {
                            var pubEnv = t.tour_settings.app_publish_env;
                            if ($rootScope.isDesktopGuide(t) || GmCXt.checkDomainInPublishedEnv(pubEnv)) {
                                if (mg$.inArray(cat, filteredcat) === -1) filteredcat.push(cat);
                            }
                        }
                    }

                    if (cat.tours) {
                        GmCXt.checkGuidesBasedOnSegment(cat.tours, segmentCb);
                    } else if (cat.sub_categories) {

                        var prevlen = filteredSubCat.length;
                        checkForSubCategories(cat.sub_categories, filteredSubCat, filteredSubCategories, cat);
                        var currlen = filteredSubCat.length;

                        if (currlen > prevlen && !filteredcat.includes(cat)) {
                            filteredcat.push(cat);
                        }
                    }
                });

                $rootScope.categoryStore = filteredcat;
                $rootScope.subCategoryStore = filteredSubCategories;

                $rootScope.addMultiCategory($rootScope.categoryStore);
                $rootScope.addMultiCategory(filteredSubCat);

                $rootScope.getAllPublishedTours(tours);

                var d = new Date().getTime();

                storage.storageSyncTime.set(d);
                storage.appData.set($rootScope.appList);

                if ($rootScope.activeView === "/all_guides") {
                    $rootScope.refreshPageView();
                } else if ($rootScope.currentView === "home" && GmCXt.inPlayer) {
                    $rootScope.refreshCurrentPage();
                }

            };

            function checkForSubCategories(subcategories, filteredsubcat, filteredSubCategories, cat) {

                function checkCatIdforSubCat(filteredCat, currentCat) {
                    var match = false;
                    if (filteredCat.length > 0) {
                        filteredCat.forEach(function(subcat) {
                            if (subcat.category_id === currentCat.category_id) {
                                match = true;
                            }
                        });
                    }
                    return match;

                }

                subcategories.forEach(function(subcat) {
                    function segmentCb(t) {
                        if (!GmCXt.isEmpty(t)) {
                            var pubEnv = t.tour_settings.app_publish_env;

                            if ((GmCXt.checkDomainInPublishedEnv(pubEnv)) || $rootScope.isDesktopGuide(t)) {
                                filteredsubcat.push(subcat);
                                if (!filteredSubCategories["cat_" + cat.category_id]) {
                                    filteredSubCategories["cat_" + cat.category_id] = [];
                                }
                                if (!checkCatIdforSubCat(filteredSubCategories["cat_" + cat.category_id], subcat)) {
                                    filteredSubCategories["cat_" + cat.category_id].push(subcat);
                                }
                            }
                        }
                    }

                    if (subcat.sub_categories) {
                        var prevlen = filteredsubcat.length;
                        checkForSubCategories(subcat.sub_categories, filteredsubcat,
                            filteredSubCategories, subcat);
                        var currlen = filteredsubcat.length;
                        if (currlen > prevlen && !filteredsubcat.includes(subcat)) {
                            filteredsubcat.push(subcat);
                            if (!filteredSubCategories["cat_" + cat.category_id]) {
                                filteredSubCategories["cat_" + cat.category_id] = [];
                            }
                            filteredSubCategories["cat_" + cat.category_id].push(subcat);

                        }
                    } else if (subcat.tours && subcat.tours.length > 0) {
                        GmCXt.checkGuidesBasedOnSegment(subcat.tours, segmentCb);
                    }
                });

            }

            function clearCache() {
                storage.allTourList.remove();
                storage.storageSyncTime.remove();

                $rootScope.resetCreatorData(true);
            }

            $rootScope.getTourLangInfo = function(tour) {
                var language = '';
                var tourSetting = tour.tour_settings;

                if (angular.isDefined(tourSetting.language_settings)) {
                    language = tourSetting.language_settings.language + "-" + tourSetting.language_settings.voice;
                }

                if ($rootScope.enableTranslation && $rootScope.language) {
                    language = $rootScope.language + "-" + $rootScope.languageVoice;
                }

                return language;
            };

            $rootScope.showLangErrorPopup = function(l, isBranch) {
                var lname = l.name || l.language;
                var str = $rootScope.labels.stepWarningForLanguage.replaceAll('{GUIDE_LANG}', lname);
                if (isBranch) {
                    $rootScope.alertMessage = str;
                    mg$(".mgPlayerJSTest_icon-play-popup").show();
                } else {
                    modal.open(str, 'warning');
                }
            };

            $rootScope.getTourCreationLang = function(tour) {
                var language = '';
                var tourSetting = tour.tour_settings;

                if (angular.isDefined(tourSetting.language_settings)) {
                    language = tourSetting.language_settings;
                }

                return language;
            };

            $rootScope.isGuideInOriginalLang = function(t, showError, isBranch) {
                var guideLang = $rootScope.getTourCreationLang(t);

                if ($rootScope.language &&
                    $rootScope.enableTranslation &&
                    guideLang.language &&
                    guideLang.name &&
                    (guideLang.language !== $rootScope.language)) {

                    if ((guideLang.language.indexOf('en-') !== -1) && (guideLang.language.substring(0, 3) === $rootScope.language.substring(0, 3))) {
                        return true;
                    } else {
                        if (showError) {
                            $rootScope.showLangErrorPopup(guideLang, isBranch);
                        }
                        return false;
                    }

                } else {
                    return true;
                }
            };

            $rootScope.loader = function() {
                return $rootScope.getBasePath('common/img/g_new_loader.gif');
            };

            $rootScope.isGuide = GmCXt.isGuide;

            $rootScope.noLogin = function() {
                if (GmCXt.onPrem())
                    return true;
                else
                    return false;
            };

            $rootScope.isCADGuide = function(t) {

                if (t && t.tour_type && (
                        t.tour_type.indexOf('desktop') !== -1 ||
                        t.tour_type.indexOf('mobile') !== -1
                    )) {
                    return true;
                } else
                    return false;
            };

            $rootScope.isDesktopGuide = function(t) {
                if (t && t.tour_settings && t.tour_settings.tour_type && (
                        t.tour_settings.tour_type.indexOf('desktop') !== -1
                    )) {
                    return true;
                } else
                    return false;
            };

            $rootScope.isDesktopApp = function() {
                var currentApp = $rootScope.appList['app:' + $rootScope.activeAppId];
                if (currentApp && (currentApp.type === 'electron')) {
                    return true;
                } else
                    return false;
            };

            $rootScope.isDefaultGuide = function(t) {
                if (t && t.tour_settings && t.tour_settings.tour_type && (
                        t.tour_settings.tour_type.indexOf('default') !== -1
                    )) {
                    return true;
                } else
                    return false;
            };

            $rootScope.isBotGuide = function(t) {
                if (t && t.tour_type === 'bot') {
                    return true;
                } else
                    return false;
            };

            $rootScope.isMobileGuide = function(t) {
                if (t && t.tour_settings && t.tour_settings.tour_type && (
                        t.tour_settings.tour_type.indexOf('mobile') !== -1
                    )) {
                    return true;
                } else
                    return false;
            };

            $rootScope.isTrackingGuide = GmCXt.isFeatureTags;

            $rootScope.isBeacon = function(t) {
                if (t && t.tour_type && t.tour_type.indexOf('beacon_tour') !== -1) return true;
                else return false;
            };

            $rootScope.isTooltip = function(t) {
                if (t && t.tour_type && t.tour_type.indexOf('smartTip') !== -1) return true;
                else return false;
            };

            $rootScope.isHelpArticle = function(t) {
                if (t && t.tour_type && t.tour_type.indexOf('help_article') !== -1) return true;
                else return false;
            };

            $rootScope.isOnboarding = GmCXt.isOnboarding;

            $rootScope.showAddAutomationOption = function(t) {
                return $rootScope.isGuideAutomationEnabledForApp();
            };

            $rootScope.getTourType = function(t) {
                if ($rootScope.isGuide(t) || $rootScope.isCADGuide(t)) return 'guide';
                else if ($rootScope.isBotGuide(t)) return 'bot';
                else if ($rootScope.isOnboarding(t)) return 'onboarding';
                else if ($rootScope.isHelpArticle(t)) return 'help_article';
                else if ($rootScope.isTrackingGuide(t)) return 'insights';
            };

            $rootScope.showInlineStep = function(t) {
                if ($rootScope.isGuide(t) &&
                    !$rootScope.isDesktopGuide(t) &&
                    !$rootScope.isMobileGuide(t)) {
                    return true;
                } else {
                    return false;
                }
            };

            $rootScope.showAddSurveyStep = function(t) {
                if ($rootScope.isGuide(t) && $rootScope.checkInsightEnabled()) {
                    return true;
                } else {
                    return false;
                }
            };

            $rootScope.showWalkthroughStep = function(t) {
                if ($rootScope.isGuide(t) && !$rootScope.isDesktopGuide(t) &&
                    !$rootScope.isMobileGuide(t)) {
                    return true;
                } else {
                    return false;
                }
            };

            $rootScope.showBranchStep = function(t) {

                if ($rootScope.isGuide(t) &&
                    !$rootScope.isDesktopGuide(t) && !$rootScope.isMobileGuide(t)) {
                    return true;
                } else {
                    return false;
                }
            };

            $rootScope.showLinkStep = function(t) {
                if ($rootScope.isGuide(t) &&
                    !$rootScope.isDesktopGuide(t) && !$rootScope.isMobileGuide(t)) {
                    return true;
                } else {
                    return false;
                }
            };

            $rootScope.lockedByUser = function(t) {
                if (t && t.is_locked && t.user_id === $rootScope.user.user_id)
                    return true;
                else
                    return false;
            };

            $rootScope.hasTourAccess = function(t) {
                if ((t && !t.is_locked) || (t && $rootScope.lockedByUser(t)))
                    return true;
                else
                    return false;
            };

            $rootScope.isLocked = function(t) {
                if (t.is_locked && t.user_id !== $rootScope.user.user_id)
                    return true;
                else
                    return false;
            };

            $rootScope.hideAddTour = function(c) {
                if (c && c.has_child)
                    return true;
                else
                    return false;
            };

            $rootScope.showUnlockBtn = function(t) {

                if ($rootScope.FT.creatorApp && t &&
                    t.is_locked && !t.is_published &&
                    (t.user_id === $rootScope.user.user_id ||
                        $rootScope.isOwnerOrAppAdmin())
                ) {
                    return true;
                } else
                    return false;
            };

            $rootScope.isOwnerOrAppAdmin = function() {
                if ($rootScope.isOwner() || $rootScope.isAppAdmin()) {
                    return true;
                } else {
                    return false;
                }
            };

            function filterAppsBasedOnAccess(applications) {
                var apps = [];
                if ($rootScope.isOwner()) {
                    return applications;
                }
                angular.forEach(GmCXt.user.app_access, function(appId) {
                    var app = applications.filter(function(app) {
                        return parseInt(app.application_id) === parseInt(appId);
                    });
                    if (app.length)
                        apps.push(app[0]);
                });

                return apps;
            }

            $rootScope.loadJsonPlayer = function() {

                GmCXt.redirect('#/loader');

                return new Promise(function(resolve, reject) {

                    var org = GmCXt.organization;
                    GmCXt.orgBucket = org.bucket;

                    GmCXt.log(21, "REFRESHING org JSON");

                    function next(_apps) {
                        $rootScope.updateCustomLabels(org.settings);

                        gotApps(_apps).then(function() {
                            resolve();
                        });

                    }

                    // user.app_access is list of applications, accessible to the user          
                    if (GmCXt.user.app_access.length > 0 || $rootScope.isOwner()) {

                        api.getOrgJson().then(function(response) {

                            storage.refreshTime.set(GmCXt.getCurrentTimeInSec());
                            storage.lastTimeStampSync.set(GmCXt.getCurrentTimeInSec());

                            if (!response) {
                                if (!$rootScope.$$phase) $rootScope.$apply();
                                return;
                            }

                            clearCache();

                            var org = filterRespData(response);

                            org = GmCXt.validateDataModel(org, GmCXt.model.organization);

                            var apps = GmCXt.createDeepCopy(GmCXt.validateModelArray(org.applications, GmCXt.model.applications._obj));

                            apps = filterAppsBasedOnAccess(apps);

                            var appsSize = GmCXt.getVarSize(apps);
                            GmCXt.log(21, "After app access filter Apps SIZE: " + appsSize);

                            $rootScope.saveApps(apps);

                            storage.storageSyncTime.set(Date.now());

                            delete org.applications;

                            $rootScope.saveOrganization(org);

                            if ($rootScope.guideSegmentation) {
                                $rootScope.getSegmentGroupList().then(function() {
                                    next(apps);
                                });
                            } else {

                                next(apps);
                            }

                        });
                    } else {
                        GmCXt.log(21, "NO ACCESS to any apps");
                        $rootScope.goToNoApp();
                    }
                });
            };

            $rootScope.syncAppId = function() {
                var msg = {
                    action: 'mgPlayerJSTest_action:init_app_id',
                    data: {
                        activeAppId: $rootScope.activeAppId
                    }
                };

                GmCXt.sendToParentWindow(msg);
            };

            function updateSettingOnAppSwitch() {
                $rootScope.updateCustomLabels(GmCXt.organization.settings);
                $rootScope.enableOrgFeatures(GmCXt.organization);
            }

            $rootScope.switchApp = function(app) {

                $rootScope.applicationDropdown = false;
                $rootScope.automationDropdown = false;

                $rootScope.contextTours = {};

                $rootScope.resetCreatorData(true);

                $rootScope.initAppDetails(app);

                $rootScope.selectedApp = app.title;

                if ($rootScope.FT.isPlayer) {
                    $rootScope.goToCurrentPage();
                } else if ($rootScope.currentView !== "team-guides") {
                    $rootScope.goToAllGuides();
                } else {
                    $rootScope.$emit('on_app_select', app);
                }

            };

            function updateAppList(a) {
                $rootScope.appList['app:' + a.application_id] = a;

                storage.appData.set($rootScope.appList);
            }

            $rootScope.initAppDetails = function(app, tlist) {
                GmCXt.log(21, "INIT APP:  [" + app.title + ", " + app.application_id + "]");

                storage.activeAppId.set(app.application_id);

                GmCXt.externalAppId = GmCXt.appList['app:' + GmCXt.activeAppId].external_id;

                updateSettingOnAppSwitch();

                var msg = {
                    action: "mgPlayerJSTest_action:app_info_to_background",
                    data: {
                        activeAppId: GmCXt.activeAppId,
                        externalAppId: app.external_id
                    }
                };
                GmCXt.sendMessageToBackgroundService(msg);

                $rootScope.appEnvs = [];

                if (GmCXt.isDefined(app.settings.app_env)) {
                    for (var env in app.settings.app_env) {

                        if (app.settings.app_env[env].checked) {
                            app.settings.app_env[env].key = env;
                            $rootScope.appEnvs.push(app.settings.app_env[env]);
                        }
                    }

                    $rootScope.appEnvs = $rootScope.appEnvs.sort(function(a, b) {
                        if (a.order < b.order) {
                            return -1;
                        }
                        if (a.order > b.order) {
                            return 1;
                        }
                        return 0;
                    }).map(function(env) {
                        return env.key;
                    });
                }

                $rootScope.highestEnv = $rootScope.appEnvs[$rootScope.appEnvs.length - 1];

                if (GmCXt.inPlayer || GmCXt.onPrem()) {
                    if (app.categories && app.categories.length) {
                        $rootScope.processAppDataActiveApp(app);
                    } else {
                        var app_id = app.application_id;

                        $rootScope.isAppJsonCalling = true;
                        api.getAppJson(app_id).then(function(res) {
                            $rootScope.isAppJsonCalling = false;
                            if (GmCXt.onPrem() || GmCXt.cdnPlayer) {
                                app.categories = res.data.categories;
                            } else {
                                app.categories = res.data.data.categories;
                            }
                            $rootScope.processAppDataActiveApp(app);
                        });
                    }
                }

                $rootScope.getLanguageList();

                if (app.settings.enable_application_language_settings && GmCXt.isDefined(app.settings.app_languages) &&
                    app.settings.app_languages.length > 0) {
                    $rootScope.getAppOrgLanguage(app.settings.app_languages);
                } else {
                    $rootScope.getAppOrgLanguage();
                }

                mg$('#mgPlayerJSTest_header-brand-logo').attr('src', GmCXt.brandLogo());
            };

            function filterRespData(r) {
                if (GmCXt.cdnPlayer)
                    return r.data;
                else
                    return r.data.data;
            }

            $rootScope.draftExists = function(tourId, categoryId, tours) {
                var list = $rootScope.allTourList['cat_' + categoryId];
                if (list) {
                    for (var tour in list) {
                        if (list[tour].parent_tour_id === tourId) {
                            return list[tour].tour_id;
                        }
                    }
                } else if (tours && tours.length) {
                    for (var i = 0; i < tours.length; i++) {
                        if (tours[i].parent_tour_id === tourId && tours[i].category_id === categoryId) {
                            return tours[i].tour_id;
                        }
                    }
                }

                return false;
            };

            $rootScope.filterGuideByEnv = function(tours) {

                if (!GmCXt.isFQDN()) {
                    GmCXt.log(1, "SKIP filtering guides to this domain", tours);
                    return tours;
                }

                var domainEnv = GmCXt.getAppEnvByDomain();

                var guidesByEnv = [];

                var domainEnvInApp = !$rootScope.appEnvs.length || $rootScope.appEnvs.indexOf(domainEnv) !== -1;

                if (domainEnvInApp && tours && tours.length > 0) {
                    tours.forEach(function(t) {
                        var pubEnvs = t.tour_settings.app_publish_env;

                        var tourPublishedInDomain = false;

                        if (pubEnvs) {
                            tourPublishedInDomain = pubEnvs.indexOf(domainEnv) !== -1;

                            if (!$rootScope.draftExists(t.tour_id, t.category_id, tours) && !tourPublishedInDomain) {

                                if (pubEnvs.length && pubEnvs[0].indexOf('env_') === 0) {
                                    var domIndex = $rootScope.appEnvs.indexOf(domainEnv);
                                    if (guidePublishedInHigherEnv(domIndex, pubEnvs)) {
                                        tourPublishedInDomain = true;
                                    }
                                }
                            }
                        }

                        if (t.is_published &&
                            (domainEnv === undefined ||
                                pubEnvs === undefined ||
                                pubEnvs.length === 0 ||
                                tourPublishedInDomain
                            )
                        ) {
                            guidesByEnv.push(t);
                        }
                    });
                }

                GmCXt.log(21, "FILTER GUIDES published to this domain env [" + domainEnv + "]. Filtered guides ", guidesByEnv);

                return guidesByEnv;
            };

            function guidePublishedInHigherEnv(index, pubEnvs) {
                return $rootScope.appEnvs.slice(index).some(function(e) {
                    return pubEnvs.indexOf(e) >= 0;
                });
            }

            function deleteCatinCatStore(id) {

                var allCats = angular.copy($rootScope.categoryStore);

                angular.forEach(allCats, function(cat, key) {
                    if (cat.category_id === id) {
                        $rootScope.categoryStore.splice(key, 1);
                    }
                });
            }

            function deleteFromSubCatinSubCatStore(id) {

                var removeFromSubCat = function(scat, key) {
                    if (scat.category_id === id) {
                        foundInSubcat = true;
                        $rootScope.subCategoryStore[parentCatId].splice(key, 1);
                    }
                };

                var subcats = angular.copy($rootScope.subCategoryStore);

                for (var parentCatId in subcats) {
                    var subcat = angular.copy($rootScope.subCategoryStore[parentCatId]);

                    subcat.forEach(removeFromSubCat);

                    if (GmCXt.isEmpty($rootScope.subCategoryStore[parentCatId])) {
                        delete $rootScope.subCategoryStore[parentCatId];

                        var pCatId = parentCatId.split('_')[1];

                        deleteCatinCatStore(pCatId);

                    }
                }
            }

            var foundInSubcat = false;

            function deleteEmpty(id) {

                foundInSubcat = false;

                delete $rootScope.allTourList[id];

                var catId = id.split('_')[1];

                deleteFromSubCatinSubCatStore(catId);

                if (!foundInSubcat) {
                    deleteCatinCatStore(catId);
                }
            }

            $rootScope.getAllPublishedTours = function(tlist) {

                var allTours = [];

                var pushToAllTours = function(t) {
                    allTours.push(t);
                };

                for (var id in tlist) {

                    var tours = tlist[id];

                    if (!tours.length) {
                        deleteEmpty(id);
                    }

                    angular.forEach(tours, pushToAllTours);
                }

                var pubTours = $rootScope.filterGuideByEnv(allTours);

                $rootScope.publishedTours = pubTours;

                if ($rootScope.getContextToursAfterLogin) {

                    GmCXt.sendToParentWindow({
                        action: "mgPlayerJSTest_action:get_context_guides",
                    });
                    $rootScope.getContextToursAfterLogin = false;
                }

                GmCXt.log(21, "ALL PUBLISHED guides", pubTours);
            };

            $rootScope.goToLogin = function() {
                GmCXt.redirect("#/signin");
            };

            $rootScope.setAccessibility = function(val) {
                storage.accessibility.set(val);
                $rootScope.accessibility = val;
            };

            $rootScope.goToCurrentPage = function(event) {

                if ($rootScope.maintenance) {
                    $rootScope.goToMaintenance();
                    return;
                }

                if (!GmCXt.activeAppId) {
                    autoSwitchApp($rootScope.goToCurrentPage);
                    return;
                }

                if (!$rootScope.maintenance) {
                    if ($rootScope.currentView === "home") {
                        $rootScope.refreshCurrentPage(event);
                    } else {
                        GmCXt.redirect('#/home/currentpage');
                    }
                }
            };

            $rootScope.isMgAdmin = function() {
                if ($rootScope.user.role === "mg_admin") {
                    return true;
                } else {
                    return false;
                }
            };

            $rootScope.isSuperAdmin = function() {
                if ($rootScope.user.role === "superadmin") {
                    return true;
                } else {
                    return false;
                }
            };

            $rootScope.isPartnerAdmin = function() {
                if ($rootScope.user.role === "partner_admin") {
                    return true;
                } else {
                    return false;
                }
            };

            $rootScope.isOwner = function() {
                if ($rootScope.user.role === "owner" || $rootScope.isSuperAdmin() || $rootScope.isMgAdmin() || $rootScope.isPartnerAdmin()) {
                    return true;
                } else {
                    return false;
                }
            };

            $rootScope.isCreator = function() {
                if ($rootScope.user.role === "creator") {
                    return true;
                } else {
                    return false;
                }
            };

            $rootScope.isUserRole = function() {
                if ($rootScope.user.role === "user") {
                    return true;
                } else {
                    return false;
                }
            };

            $rootScope.isAppAdmin = function() {
                if ($rootScope.user.role === "app_admin") {
                    return true;
                } else {
                    return false;
                }
            };

            $rootScope.hasCreatorAccess = function() {
                var role = $rootScope.user.role;

                if ($rootScope.FT.creatorApp &&
                    (role === "creator" || role === 'app_admin' || $rootScope.isOwner())
                ) {
                    return true;
                } else
                    return false;
            };

            $rootScope.validateAndMigrateTour = function(t) {
                var tour = GmCXt.validateDataModel(t, GmCXt.model.guide);
                return GmCXt.migrateTour(tour);
            };

            $rootScope.getTourWithSteps = function(id) {
                var tour = null;
                angular.forEach($rootScope.publishedTours, function(t) {
                    if (parseInt(t.tour_id) === parseInt(id) && t.steps && t.steps.length) {
                        tour = t;
                    }
                });
                return tour;
            };

            $rootScope.fetchToursForCategory = function(categoryId, cb, forceApi, appId) {
                var options = {
                    limit: 100,
                    offset: 0,
                    category_id: categoryId,
                    organization_id: $rootScope.organization.organization_id
                };

                if (forceApi) {
                    options.published_guides = "1";
                }

                api.getTourList(options, function(result) {
                    cb(result);
                }, appId);
            };

            $rootScope.changeAutomationGuideSelectCount = function() {
                $rootScope.automationGuideSelectCount = tourUtilService.searchForNestedTours($rootScope.categoryDataForAutomation, 0);
            };

            $rootScope.saveUser = function(user) {

                if (user.organization) {
                    delete user.organization;
                }

                storage.user.set(user);
                $rootScope.syncUser();
            };

            $rootScope.saveOrganization = function(org) {

                GmCXt.log(21, "SAVE organization");

                storage.organization.set(org);
                GmCXt.orgBucket = org.bucket;

                $rootScope.enableOrgFeatures(org);

                var message = {
                    action: "mgPlayerJSTest_action:save_org",
                    data: GmCXt.organization
                };
                GmCXt.sendToParentWindow(message);
                Message.send(message);
            };

            $rootScope.refreshCurrentPage = function(event) {

                var s = angular.element('#home-page-container').scope();

                if (s && ($rootScope.activeTab === $rootScope.labels.currentPage) && (!event || $rootScope.isSidePanelOpen)) {
                    // event check is for page load when $rootScope.readLocalCT($rootScope.pageUrl) will be undefined.

                    GmCXt.log(30, "REFRESH CURRENT PAGE guides list. Event: ", event);
                    s.refreshView(event);
                } else if (GmCXt.isDomainInActiveApp()) {

                    var gc = GmCXt.getAppSetting('guide_count_on_widget');
                    var hw = GmCXt.getAppSetting('hide_widget_if_noguide');

                    if ((gc && !$rootScope.isWestpac) || hw) {

                        GmCXt.log(30, "REFRESH CURRENT PAGE guide indicator. Event: " + event);

                        var res = $rootScope.readLocalCT($rootScope.pageUrl, GmCXt.pageTitle);
                        if (res && res.length) {
                            GmCXt.log(30, "FETCHED tours from CACHE");

                            processCPGuides(res);

                        } else {
                            var param = {
                                url: $rootScope.pageUrl
                            };

                            if (GmCXt.getLXPLang()) param.language = GmCXt.getLXPLang();

                            GmCXt.log(30, "NOT FOUND IN CACHE. FETCHING tours from API");

                            api.getContextualTour(param, function(r) {
                                GmCXt.log(30, "FETCHED tours from API");
                                res = $rootScope.processContextualGuide(r, param.url);
                                processCPGuides(res);
                            });
                        }
                    } else {
                        $rootScope.showWidget();
                    }
                }

                function processCPGuides(res) {
                    var guides = $rootScope.filterCurrentPageTourTypes(res);
                    $rootScope.getBotGuideCount(guides);
                    $rootScope.displayChatIcon();

                    if (GmCXt.isEmpty(guides)) {
                        GmCXt.log(30, 'NO GUIDES');
                        $rootScope.hideCurrentPageGuidesIndicator();

                    } else {
                        var cData = $rootScope.validateAllRulesExceptSelectEl(guides, true);

                        if (cData.hasURLMatch || cData.hasValidRule) { // skip validation, show currentPage indicator 

                            GmCXt.log(30, 'URLMATCH: ' + cData.hasURLMatch + ', ValidRule: ' + cData.hasValidRule);
                            show();
                        } else {
                            $rootScope.validateSelectElRules(cData.tours, event).then(function(val) {
                                if (val) {
                                    show();
                                } else {
                                    $rootScope.hideCurrentPageGuidesIndicator();
                                }
                            });
                        }
                    }

                }

                function show() {

                    var gc = GmCXt.getAppSetting('guide_count_on_widget');
                    var hw = GmCXt.getAppSetting('hide_widget_if_noguide');
                    $rootScope.showWidget();
                    if ((gc && !$rootScope.isWestpac) || hw) {
                        GmCXt.ruleEngine.clearJobs("currentPageIndicator");
                        $rootScope.showCurrentPageGuidesIndicator(true);
                    }
                }
            };

            $rootScope.refreshTaskList = function(event) {
                var s = angular.element('.mgPlayerJSTest_task-list-container').scope();
                if (s) {
                    s.refreshView();
                } else {
                    $rootScope.sendMessageToShowTaskListWidget();
                }
            };

            $rootScope.initializeApp = function() {

                GmCXt.log(21, "INITIALISE App");

                return new Promise(function(resolve, reject) {

                    function next() {
                        $rootScope.fetchApps().then(function() {
                            resolve(true);
                        });
                    }

                    if (GmCXt.inPlayer) {
                        $rootScope.loadJsonPlayer().then(function() {
                            $rootScope.goToView();
                            resolve();
                        });
                    } else {

                        var org = GmCXt.organization;

                        if (org && org.organization_id) {

                            $rootScope.saveOrgSettings(org.settings);

                            if ($rootScope.guideSegmentation) {
                                $rootScope.getSegmentGroupList().then(function() {
                                    next();
                                });
                            } else {
                                next();
                            }
                        } else {

                            GmCXt.redirect('#/noorg');
                            resolve();
                        }
                    }
                });
            };

            $rootScope.fetchApps = function() {

                return new Promise(function(resolve, reject) {

                    GmCXt.log(21, "FETCH apps");

                    var data = {
                        limit: 50,
                        offset: 0
                    };

                    api.getAllApps(data, function(apps) {
                        if (apps.length > 0) {

                            apps = apps.sort(function(a, b) {
                                return parseInt(a.application_id) - parseInt(b.application_id);
                            });

                            apps = filterAppsBasedOnAccess(apps);
                            $rootScope.saveApps(apps);

                            storage.storageSyncTime.set(Date.now());

                            $timeout(function() {
                                gotApps(apps).then(function() {
                                    resolve();
                                });
                            }, 0);

                        } else {
                            $rootScope.goToNoApp();
                        }
                    });

                });
            };

            $rootScope.removeCatFromApplist = function(apps) {
                var appList = JSON.parse(JSON.stringify(apps));
                if (!GmCXt.isEmpty(appList)) {
                    Object.keys(appList).forEach(function(key) {
                        delete appList[key].categories;
                    });
                }
                return appList;
            };

            $rootScope.syncApps = function(apps) {

                var _apps = $rootScope.removeCatFromApplist(apps);

                var m = {
                    action: "mgPlayerJSTest_action:sync_app_list",
                    data: {
                        appList: _apps || {}
                    }
                };
                GmCXt.sendToParentWindow(m);
            };

            $rootScope.saveApps = function(apps) {

                $rootScope.appList = {};

                apps.forEach(function(app) {
                    if (window.matchMedia("(max-width: 480px)").matches && !GmCXt.isMiniPlayer && app.type !== "guide") {
                        if (app.type === "mobile_web") {
                            $rootScope.appList["app:" + app.application_id] = app;
                        }
                    } else {
                        if (app.type === "guide" || app.type === "electron") {
                            $rootScope.appList["app:" + app.application_id] = app;
                        }
                    }
                });

                storage.appData.set($rootScope.appList);

                if (GmCXt.inPlayer) {
                    $rootScope.syncApps(GmCXt.createDeepCopy($rootScope.appList));
                }

                GmCXt.log(21, "CACHED app details", $rootScope.appList);
            };

            $rootScope.setCacheDataAfterRefresh = function() {
                if (!$rootScope.isRefresh) {
                    return;
                }

                $rootScope.isRefresh = false;

                var view = $rootScope.currentView;
                var scope = $rootScope.getPageScope();

                $rootScope.showSpinner = true;

                $rootScope.switchViewAfterRefresh(view, scope);
            };

            $rootScope.switchViewAfterRefresh = function(view, scope) {

                switch (view) {
                    case 'tour-view':
                        var cat_id = scope.tour.category_id;
                        storage.refreshCache.set({
                            category_id: cat_id,
                            allguides: true
                        });
                        $rootScope.getCategoryApi(cat_id, $rootScope.getCategoryCb);
                        break;

                    case 'tour-list':
                        var _cat = scope.category;
                        var parentId = _cat.parent_id;

                        storage.refreshCache.set({
                            category_id: _cat.category_id,
                            parent_id: parentId,
                            allguides: true
                        });

                        if (parentId !== "0") {
                            $rootScope.getCategoryCb(_cat, true);
                        } else {
                            $rootScope.renderCategoryList(_cat);
                        }
                        break;

                    case 'category-list':
                        var _cat = scope.category;
                        var parentId = _cat.parent_id;
                        storage.refreshCache.set({
                            category_id: 0,
                            parent_id: parentId,
                            allguides: true
                        });
                        if (parentId !== "0") {
                            $rootScope.getCategoryApi(parentId, $rootScope.getCategoryCb);
                        } else {
                            if (_cat && !$rootScope.getCategory(parentId)) {
                                $rootScope.addCategory(_cat);
                            }
                            $rootScope.isApiCallOn = false;
                            $rootScope.showSpinner = false;
                            if (!$rootScope.$$phase) $rootScope.$apply();
                        }
                        break;

                    case "task-status-list":
                        $rootScope.taskStatusBackRefresh(scope);
                        break;

                    default:
                        $rootScope.isApiCallOn = false;
                        if (!$rootScope.$$phase) $rootScope.$apply();
                        break;

                }
            };

            $rootScope.taskStatusBackRefresh = function(scope) {

                if (!GmCXt.isEmpty($rootScope.breadCrumbItems)) {
                    var lastview = $rootScope.breadCrumbItems[$rootScope.breadCrumbItems.length - 1];
                    if (lastview) {
                        if (lastview.type === "tour") {
                            scope.tour = {
                                tour_id: lastview.id,
                                category_id: lastview.categoryId
                            };
                            $rootScope.switchViewAfterRefresh("tour-view", scope);
                        } else if (lastview.type === "category" && !lastview.has_child) {
                            var parent_id = '0';
                            if ($rootScope.breadCrumbItems.length > 2) {
                                parent_id = $rootScope.breadCrumbItems[$rootScope.breadCrumbItems.length - 2].id;
                            }
                            scope.category = {
                                category_id: lastview.id,
                                parent_id: parent_id
                            };

                            $rootScope.switchViewAfterRefresh("tour-list", scope);
                        } else if (lastview.type === "category" && lastview.has_child) {
                            var parent_id = 0;
                            if ($rootScope.breadCrumbItems.length > 2) {
                                parent_id = $rootScope.breadCrumbItems[$rootScope.breadCrumbItems.length - 2].id;
                            }
                            scope.category = {
                                category_id: lastview.id,
                                parent_id: parent_id
                            };
                            if (parent_id !== 0) {
                                $rootScope.switchViewAfterRefresh("category-list", scope);
                            } else {
                                $rootScope.isApiCallOn = false;
                                if (!$rootScope.$$phase) $rootScope.$apply();
                            }
                        } else {
                            $rootScope.isApiCallOn = false;
                            if (!$rootScope.$$phase) $rootScope.$apply();
                        }
                    } else {
                        $rootScope.isApiCallOn = false;
                        if (!$rootScope.$$phase) $rootScope.$apply();
                    }

                } else {
                    $rootScope.isApiCallOn = false;
                    if (!$rootScope.$$phase) $rootScope.$apply();
                }
            };

            $rootScope.getCategoryCb = function(_cat, noTourList) {

                var catId = _cat.category_id;

                if (_cat.parent_id && _cat.parent_id !== "0") {
                    if (!(_cat.has_child && !(_cat.has_tour))) {
                        $rootScope.addCategory(_cat);
                    }
                    storage.refreshCache.set({
                        category_id: catId,
                        parent_id: _cat.parent_id,
                        allguides: true
                    });
                    $rootScope.getCategoryApi(_cat.parent_id, $rootScope.getCategoryCb);
                }

                if (!noTourList && _cat.has_tour) {
                    $rootScope.getTourListApi(_cat);
                }

                if (_cat.has_child && !(_cat.has_tour)) {
                    $rootScope.renderCategoryList(_cat);
                }

                if (_cat.parent_id === "0" && !_cat.has_tour && !_cat.has_child) {
                    $rootScope.isApiCallOn = false;
                    $rootScope.showSpinner = false;
                    if (!$rootScope.$$phase) $rootScope.$apply();
                }

            };

            $rootScope.renderCategoryList = function(_cat) {

                var _catid = _cat.category_id;

                var p = {
                    parent_id: _catid,
                    limit: 50,
                    offset: 0
                };

                function getCategoryListApiCb(_categories) {

                    $rootScope.addMultiCategory(_categories);

                    if (_cat.parent_id === "0") {
                        if (!GmCXt.isEmpty($rootScope.mgTabData)) {
                            $rootScope.goToLevel($rootScope.mgTabData);
                            $rootScope.mgTabData = {};
                        }
                        $rootScope.isApiCallOn = false;
                        $rootScope.showSpinner = false;
                        if (!$rootScope.$$phase) $rootScope.$apply();
                    }
                }

                $rootScope.getCategoryListApi(p, getCategoryListApiCb);
            };

            $rootScope.getCategoryListApi = function(params, cb) {

                if ($rootScope.language && !GmCXt.isFalse($rootScope.language))
                    params.language = $rootScope.language;

                if (GmCXt.getLXPLang())
                    params.language = GmCXt.getLXPLang();

                if ($rootScope.isUserLoggedIn() || GmCXt.onPrem()) {
                    api.getCategoryList(params, cb);
                }
            };

            $rootScope.getCategoryApi = function(_catid, cb, forceApi, appId) {

                if(!_catid){
                    return;
                }

                var params = {
                    category_id: _catid
                };

                if ($rootScope.language && !GmCXt.isFalse($rootScope.language)) params.language = $rootScope.language;

                if (GmCXt.getLXPLang()) params.language = GmCXt.getLXPLang();

                if ($rootScope.isUserLoggedIn() || GmCXt.onPrem()) {
                    api.getCategoryDetails(params, cb, forceApi, appId);
                }
            };

            $rootScope.getTourListApi = function(_cat) {

                function tourListApiCb(_tours) {
                    if (_cat && !$rootScope.getCategory(_cat.category_id)) {
                        $rootScope.addCategory(_cat);
                    }
                    if (_cat.parent_id === "0" && _cat.has_tour && !_cat.has_child) {

                        if (!GmCXt.isEmpty($rootScope.mgTabData)) {
                            $rootScope.goToLevel($rootScope.mgTabData);
                            $rootScope.mgTabData = {};
                        }

                        $rootScope.isApiCallOn = false;

                        $rootScope.showSpinner = false;
                        if (!$rootScope.$$phase) $rootScope.$apply();
                    }
                }

                var params = {
                    category_id: _cat.category_id,
                    limit: 50,
                    offset: 0
                };

                if ($rootScope.isUserLoggedIn()) {
                    api.getTourList(params, tourListApiCb);
                }

            };

            $rootScope.getPageScope = function() {

                var view = $rootScope.currentView;

                var scope = null;

                if (view === 'team-guides' || view === 'home')
                    scope = angular.element('#home-page-container').scope();
                else if (view === 'category-list')
                    scope = angular.element('#category-list-page-container').scope();
                else if (view === 'tour-list' || view === 'filter-list')
                    scope = angular.element('#tour-list-page-container').scope();
                else if (view === 'tour-view')
                    scope = angular.element('#tour-view-page-container').scope();
                else if (view === 'search-page')
                    scope = angular.element('#search-page-container').scope();
                else if (view === 'task-status-list')
                    scope = angular.element('.mgPlayerJSTest_export-task-container').scope();
                else if (view === "add-guide")
                    scope = angular.element('#add-tour-page-container').scope();
                else if (view === 'configure-automation')
                    scope = angular.element('#automation-config-page-container').scope();
                else if (view === 'manage-keywords')
                    scope = angular.element('#mgPlayerJSTest_manage-keywords-main-container').scope();

                return scope;
            };

            function getCurrentAppObj(apps) {
                return new Promise(function(resolve, reject) {

                    var app = {};

                    var processNext = function(appList) {
                        if (appList.length > 0) {
                            //For possible app switch in onprem
                            var r = GmCXt.checkDomainInApps(GmCXt.urlParts.fullUrl);

                            if (GmCXt.onPrem()) {
                                if (r.appId !== $rootScope.activeAppId) {

                                    storage.activeAppId.set(r.appId);
                                }
                            }

                            app = appList.filter(function(a) {
                                return parseInt(a.application_id) === parseInt($rootScope.activeAppId);
                            })[0] || {};

                            if (GmCXt.isEmpty(app)) {

                                if (GmCXt.isFQDN() || GmCXt.isPlayer()) {
                                    if (r.domainMatch) {
                                        GmCXt.log(21, 'GET APP by domain: ' + r.appName);

                                        app = appList.filter(function(a) {
                                            return parseInt(a.application_id) === parseInt(r.appId);
                                        })[0];
                                    } else if (GmCXt.FT.creatorApp) {
                                        app = appList[0];
                                    }
                                } else if (GmCXt.FT.creatorApp) {
                                    app = appList[0];
                                }
                            }
                        }

                        if (GmCXt.isEmpty(app)) {
                            $rootScope.goToNoApp();
                            resolve();
                        } else {
                            $rootScope.initAppDetails(app);
                            resolve(app);
                        }
                    };

                    if (!apps) {
                        $rootScope.checkAppList().then(function() {
                            var apps = [];
                            for (var key in $rootScope.appList) {
                                apps.push($rootScope.appList[key]);
                            }
                            processNext(apps);
                        });
                    } else {

                        processNext(apps);
                    }
                });

            }

            function gotApps(apps) {

                return new Promise(function(resolve, reject) {

                    GmCXt.log(21, "FETCHED apps.", apps);

                    getCurrentAppObj(apps).then(function(app) {

                        if (!GmCXt.isEmpty(app) && !GmCXt.isExcludeDomain()) {

                            if ($rootScope.FT.isPlayer) {
                                $rootScope.goToAssignedPage();
                            } else {

                                $rootScope.resetOffset = true;
                                $rootScope.refreshPageView();
                                $rootScope.setCacheDataAfterRefresh();

                            }
                        } else if (GmCXt.isExcludeDomain()) {
                            var cb = function(g) {
                                $rootScope.goToNoApp();
                            };

                            modal.open($rootScope.labels.badDomain, 'warning', cb);
                            reject();
                        }

                        resolve();
                    });
                });
            }

            $rootScope.getSegmentsList = function() {
                return new Promise(function(resolve, reject) {
                    api.getSegmentList().then(function(response) {
                        var data = response.data.data.segments;
                        var segmentData = {
                            list: data,
                            time: Date.now()
                        };
                        storage.segmentData.set(segmentData);
                        resolve(segmentData);
                    });
                });
            };

            $rootScope.clearSearchInput = function() {
                mg$('#search-text-input').val('');
                $rootScope.searchKeyword = '';
            };

            $rootScope.goToLevel = function(category, forceRefresh) {
                $rootScope.clearSearchInput();

                $rootScope.showSpinner = true;

                var url = '';
                var cat = $rootScope.getCategory(category.category_id);

                var redirect = function() {

                    if (!category.has_child && category.has_tour) {
                        url = '#/category/' + category.category_id + '/tour/list';
                    } else {
                        url = '#/category/' + category.category_id + '/list';
                    }

                    GmCXt.redirect(url);
                };

                if (!cat || forceRefresh) {
                    var params = {
                        category_id: category.category_id
                    };

                    $rootScope.getCategoryApi(category.category_id, function(c) {
                        redirect();
                    });

                } else {
                    redirect();
                }

            };

            $rootScope.goToEditTourPage = function(tour, $event) {
                $event.stopPropagation();
                GmCXt.reduceSidePanel();
                $rootScope.currentScrollVal = mg$('.category-list').scrollTop();
                $rootScope.hasUserEditedTour = true;
                storage.currentTour.set(tour);

                var redirect = function(t) {
                    if ($rootScope.isTooltip(t)) {
                        var url = '#/category/' + t.category_id + '/tour/' + t.tour_id + '/smartTip/edit';
                        GmCXt.redirect(url);
                    } else {
                        var url = '#/category/' + t.category_id + '/tour/' + t.tour_id + '/edit';
                        GmCXt.redirect(url);
                    }
                };

                redirect(tour);
            };

            $rootScope.previewNotification = function(tour, taskObj, step) {
                var tours = [];
                tours.push(tour);

                GmCXt.loadGuideNotifications(tours, true, taskObj, step);
            };

            $rootScope.goToAddTourPage = function(category, $event, tourType) {
                $rootScope.catAddPending = {
                    cat: category,
                    ttype: tourType
                };

                if (GmCXt.isDomainInActiveApp()) {

                    if ($event) $event.stopPropagation();

                    $rootScope.catAddPending = false;

                    storage.currentTour.set({
                        tour_type: tourType
                    });

                    var url = '#/category/' + category.category_id + '/tour/add';
                    GmCXt.redirect(url);

                } else {
                    $rootScope.handleDomainError();
                }
            };

            $rootScope.createSmartTipTour = function(category, $event) {
                $rootScope.catAddPending = {
                    cat: category,
                    ttype: 'smartTip'
                };
                if (GmCXt.isDomainInActiveApp()) {
                    if ($event) $event.stopPropagation();
                    $state.go('create-smartTip-tour', {
                        categoryId: category.category_id,
                        type: "smartTip"
                    });
                } else {
                    $rootScope.handleDomainError();
                }
            };

            $rootScope.handleDomainError = function() {

                var appType = $rootScope.appList["app:" + $rootScope.activeAppId].type;
                var otherAppDomain = GmCXt.checkDomainInApps(GmCXt.urlParts.fullUrl);

                if (otherAppDomain.domainMatch) {
                    var msg = $rootScope.labels.domainCheck1;
                    msg = msg.replace(/{APPNAME}/g, '<strong>' + otherAppDomain.appName + '</strong>');
                    msg = msg.replace(/{DOMAIN}/g, '<strong>' + GmCXt.urlParts.host + '</strong>');

                    $rootScope.showPopup(msg);
                } else {

                    if ($rootScope.isOwnerOrAppAdmin()) {
                        $rootScope.addDomainPopup();
                    } else {
                        modal.open($rootScope.labels.addDomainNoPermission);
                    }
                }
            };

            $rootScope.addDomainPopup = function() {

                $rootScope.checkAppList().then(function() {
                    var url = GmCXt.getURLWithPort();
                    var activeApp = $rootScope.appList['app:' + $rootScope.activeAppId];
                    var msg = $rootScope.labels.addDomain1;
                    msg = msg.replace(/{DOMAIN}/g, '<strong>' + url + '</strong>');
                    msg = msg.replace(/{APPNAME}/g, '<strong>' + activeApp.title + '</strong>');

                    modal.open(msg, 'domain', $rootScope.addCurrentDomain, $rootScope.addDomainCancel);
                });
            };

            $rootScope.saveAppSettings = function(postData, appData, cb) {

                postData.source = 'creator_extension';
                var newSettings = {
                    variables: postData.settings.variables,
                    domains: postData.settings.domains,
                    app_env: postData.settings.app_env
                };

                postData.settings = JSON.stringify(newSettings);
                $rootScope.showSpinner = true;

                function successCb() {

                    $rootScope.checkAppList().then(function() {
                        $rootScope.appList["app:" + appData.application_id] = appData;
                        storage.appData.set($rootScope.appList, true);

                        if (appData.application_id === GmCXt.activeAppId) {
                            $rootScope.initAppDetails(appData);
                        }

                        cb();
                        $rootScope.showWidget();
                    });
                }

                api.updateApp(postData, successCb);
            };

            $rootScope.addCurrentDomain = function(env) {

                $rootScope.checkAppList().then(function() {
                    var currApp = $rootScope.appList['app:' + $rootScope.activeAppId];
                    currApp.settings = currApp.settings || {};

                    var allAppDomain = currApp.settings.domains || [];
                    var url = GmCXt.getURLWithPort();
                    var newDomain = {
                        id: allAppDomain.length,
                        url: url
                    };

                    if (!!env.match('stage|qa|prod')) {
                        newDomain.env = env;
                    } else {
                        newDomain.app_env = env;
                        newDomain.env = env === 'env_1' ? 'stage' : env === 'env_2' ? 'qa' : 'prod';
                    }

                    if (allAppDomain.length === 0) {
                        newDomain.isDefault = true;
                    }

                    allAppDomain.push(newDomain);
                    currApp.settings.domains = allAppDomain;

                    var data = {
                        "application_id": currApp.application_id,
                        "title": currApp.title,
                        "image_id": currApp.image_id,
                        "description": currApp.description,
                        "settings": currApp.settings
                    };

                    function cb() {

                        if (currApp.application_id === GmCXt.activeAppId) {
                            $rootScope.initAppDetails(currApp);
                        }
                        $rootScope.showSpinner = false;

                        var catAddObj = $rootScope.catAddPending;
                        if (catAddObj) {
                            if (catAddObj.ttype === 'smartTip') {
                                $rootScope.createSmartTipTour(catAddObj.cat);
                            } else {
                                $rootScope.goToAddTourPage(catAddObj.cat, false, catAddObj.ttype);
                            }
                        }
                    }

                    $rootScope.saveAppSettings(data, currApp, cb);
                });

            };

            $rootScope.addDomainCancel = function() {
                $rootScope.catAddPending = false;
            };

            $rootScope.goToTourView = function(tour) {

                $rootScope.lastActiveView = $rootScope.currentView;

                if (!$rootScope.exportEnabled) {
                    var url = '#/category/' + tour.category_id + '/tour/' + tour.tour_id + '/view';
                }

                storage.currentTour.set(tour);

                GmCXt.redirect(url);

            };

            $rootScope.goToAddCategoryPage = function(categoryId, $event) {

                if ($event) $event.stopPropagation();

                var url = '#/category/' + categoryId + '/add';
                GmCXt.redirect(url);
            };

            $rootScope.updateAccessToken = function() {
                var message = {
                    action: "mgPlayerJSTest_action:update_access_token",
                    data: {
                        user: $rootScope.user
                    }
                };
                GmCXt.sendToParentWindow(message);
                Message.send(message);
            };

            $rootScope.updateCdnSignature = function() {

                function sendMessage(msg) {
                    msg.data.user = $rootScope.user;

                    GmCXt.sendToParentWindow(msg);
                    Message.send(msg);
                }

                var message = {
                    action: "mgPlayerJSTest_action:update_cdn_signature",
                    data: {}
                };
                sendMessage(message);
                GmCXt.reloadFailedImages();
            };

            $rootScope.copyOrgSettings = function(scope, list) {
                for (var i in list) {
                    if (GmCXt.organization.settings[list[i]] !== undefined &&
                        GmCXt.organization.settings[list[i]] !== null) {
                        scope.settings[list[i]] = GmCXt.createDeepCopy(GmCXt.organization.settings[list[i]]);
                    }
                }
            };

            $rootScope.setDefaultChatLabels = function() {
                $rootScope.chatLabels = {
                    greetingMessage: $rootScope.labels.defaultGreetingMessage,
                    botEndingMessage: $rootScope.labels.defaultBotEndingMessage,
                    errorMessage: $rootScope.labels.defaultErrorMessage
                };
            };

            $rootScope.getChatLabels = function(chatLabels) {
                for (var prop in chatLabels) {
                    var defaultProp = "default" + GmCXt.capitalizeFirstLetter(prop);
                    if (chatLabels[prop] !== "") {
                        $rootScope.chatLabels[prop] = chatLabels[prop];

                    } else {
                        $rootScope.chatLabels[prop] = $rootScope.labels[defaultProp];
                    }
                }
            };

            $rootScope.saveOrgSettings = function(os) {
                if (os) {

                    if (GmCXt.organization) {
                        GmCXt.organization.settings = os;
                        $rootScope.saveOrganization(GmCXt.organization);
                    }

                    mg$('.ege-logo-image').attr('src', GmCXt.brandLogo());

                    $rootScope.webUrl = os.web_url;

                    $rootScope.updateCustomLabels(os);
                    $rootScope.showWidget();
                }
            };

            $rootScope.updateWidgetIconSendMsg = function() {
                GmCXt.sendToParentWindow({
                    action: "mgPlayerJSTest_action:update_widget_icon"
                });
            };

            $rootScope.updateChatIconSendMsg = function() {
                GmCXt.sendToParentWindow({
                    action: "mgPlayerJSTest_action:update_chat_icon"
                });
            };

            function updateUserLabels(userLabels) {
                var enLabels = GmCXt.getEngLabels();

                for (var prop in userLabels) {
                    if ($rootScope.labels.hasOwnProperty(prop) && (userLabels[prop] !== enLabels[prop])) {
                        $rootScope.labels[prop] = userLabels[prop] || $rootScope.labels[prop];
                    }
                }
                return userLabels;
            }

            function updateChatLabels(chatLabels) {
                for (var prop in chatLabels) {
                    if ($rootScope.labels.hasOwnProperty(prop)) {
                        $rootScope.labels[prop] = chatLabels[prop] || $rootScope.labels[prop];
                    }
                }
                return chatLabels;
            }

            $rootScope.updateCustomLabels = function(settings) {

                var userLabels = settings.userLabels;

                var currentApp = $rootScope.appList['app:' + $rootScope.activeAppId];
                var chatLabels = [];
                if (currentApp && currentApp.settings) {
                    userLabels = currentApp.settings.userLabels;
                    chatLabels = currentApp.settings.chatLabels;
                    mg$.extend(userLabels, {
                        userNotFollowingGuideMessage: settings.userLabels.userNotFollowingGuideMessage,
                        maintenanceMessage: settings.userLabels.maintenanceMessage,
                        serviceErrorMessage: settings.userLabels.serviceErrorMessage,
                        resumeGuideMessage: settings.userLabels.resumeGuideMessage
                    });
                } else {
                    userLabels = GmCXt.organization.settings.userLabels;
                }

                userLabels = updateUserLabels(userLabels);
                chatLabels = updateChatLabels(chatLabels);
                GmCXt.label = $rootScope.labels;

                var message = {
                    data: {
                        userLabels: userLabels,
                        chatLabels: chatLabels
                    },
                    action: "mgPlayerJSTest_action:update_custom_labels"
                };
                GmCXt.sendToParentWindow(message);

            };

            $rootScope.getUserTourCount = function(url) {

                function cb(response) {
                    $rootScope.$apply(function() {
                        if (url)
                            GmCXt.redirect(url);
                        else
                            $rootScope.goToCurrentPage();
                    });
                }

                api.getTourCount(cb);
            };

            $rootScope.callBackExportTour = function(response) {
                var data = response.data;
                var label = ($rootScope.currentView === 'category-list' || $rootScope.currentView === 'team-guides') ? $rootScope.labels.catExportInProgress : $rootScope.labels.guideExportInProgress;
                if (data && data.data && data.data.download_url) {
                    $rootScope.exportGuide(data.data.download_url);
                } else {
                    modal.open(label, 'success');
                }
            };

            $rootScope.exportGuide = function(url) {
                $rootScope.checkCdnSignature().then(function() {
                    var zipName = url.split('/');

                    GmCXt.log(51, 'Export URL: ' + url);
                    GmCXt.log(51, 'Download: ' + zipName[zipName.length - 1]);

                    var download = document.createElement('a');
                    download.setAttribute('href', url + GmCXt.getCdnSign());
                    download.setAttribute('download', zipName[zipName.length - 1]);
                    download.setAttribute('target', "_top");
                    download.style.display = 'none';
                    document.body.appendChild(download);
                    download.click();
                    document.body.removeChild(download);
                });
            };

            $rootScope.updateAccessTokenCallBack = function(responseObj, cb) {
                if (responseObj) {
                    GmCXt.user.accesstoken = responseObj.accesstoken;
                    GmCXt.user.refreshtoken = responseObj.refreshtoken;

                    if (GmCXt.isDefined(responseObj.profile)) {
                        GmCXt.user.profile = responseObj.profile;
                    }

                    if (GmCXt.isDefined(responseObj.app_access)) {
                        GmCXt.user.app_access = responseObj.app_access;
                    }

                    $rootScope.saveUser(GmCXt.user);

                    authService.loginConfirmed({}, responseObj.accesstoken);

                    if (cb) cb(GmCXt.user.accesstoken);

                    $rootScope.updateAccessToken();

                    $rootScope.updateWidgetIconSendMsg();

                    $rootScope.updateLabels();
                } else {
                    GmCXt.log(1, "ERROR: failed to get a new accesstoken");
                }
            };

            // Function to fetch an accesstoken using refresh token and stored in localStorage
            // when any api is failed due to Invalid/Expired accesstoken
            $rootScope.getAccessTokenFromRefreshToken = function(cb) {

                function successCb(responseObj) {
                    $rootScope.updateAccessTokenCallBack(responseObj, cb);
                }
                api.getAccessToken(successCb);
            };

            //reject all pending request
            function cancelLogin() {
                authService.loginCancelled({}, 1);
                $rootScope.clearSession('Error refreshing access token');
            }

            function checkLogin() {
                if (AuthLogin.isSession()) {
                    $rootScope.goToCurrentPage();
                } else {
                    $rootScope.clearSession();
                }
            }

            function eventApiError(r) {

                $rootScope.showSpinner = false;
                var error = "";

                if (r && r.config && r.config.url &&
                    r.config.url.indexOf("thewestpacgroup.com.au/v3/user/signin") !== -1) {

                    error = $rootScope.labels.westPecErrorMessage;
                } else {
                    errorMsg = $rootScope.labels.serviceErrorMessage;
                    error = errorMsg.replace("support@csod.com", "<a href='mailto:support@csod.com' target='_top'>support@csod.com'</a>");
                }

                $rootScope.showPopup(error, checkLogin);
            }

            function eventRelogin() {
                $rootScope.showSpinner = false;
                $rootScope.clearSession('401: Error getting access token');
            }

            $rootScope.subscribeEvents = function() {

                angular.element('body').off('click').on('click', $rootScope.onBodyClick);

                $window.onkeyup = function(e) {
                    if (e && e.keyCode && e.keyCode === 27) {
                        if (GmCXt.playerI &&
                            GmCXt.playerI.mode === 'live' &&
                            GmCXt.playerI.linkGuidePlayMode &&
                            GmCXt.playerI.linkGuidePlayMode === "PDF") {
                            GmCXt.closeMediaPlayer();
                        } else {
                            $rootScope.closeAppPanel();
                            $rootScope.closeHistoryPopup();
                        }
                    }
                };

                $rootScope.$on('event:maintenance', function() {
                    $rootScope.goToMaintenance();
                });

                $rootScope.$on('event:auth-relogin', eventRelogin);

                $rootScope.$on('event:logout', function() {
                    $rootScope.showSpinner = false;
                    $rootScope.clearSession();
                });

                // This is to show error popup in case of api service failed (Status code not 200)
                $rootScope.$on('event:api-service-error', eventApiError);
            };

            $rootScope.hideActionDropdown = function() {
                mg$('.category-action-dropdown').slideUp(200);
            };

            $rootScope.hideSurveyDropdown = function() {
                mg$('.mgPlayerJSTest_questions-type-dropdown').slideUp(200);
            };

            $rootScope.hideTourActionDropdown = function() {
                var stepWrapper = mg$('.step-image-wrapper');
                mg$(stepWrapper).removeClass('active');
                mg$('.tour-action-dropdown').slideUp(200);
                mg$('.ege-header-action-dropdown').slideUp(200);
                mg$('.tour-action-dropdown-embed-menu').slideUp(100);
                mg$('.tour-action-dropdown-video-step-menu').slideUp(100);
                mg$('.tour-action-dropdown-image-step-menu').slideUp(100);
                mg$('.tour-action-menu-active').removeClass('tour-action-menu-active');
                mg$('.tour-item').removeClass('mgPlayerJSTest_z-index mgPlayerJSTest_z-index-max');
            };

            $rootScope.showPopup = function(label, callback, type, infoMsg) {
                if (!type) {
                    type = 'info';
                }
                $rootScope.showSpinner = false;
                modal.close();
                modal.open(label, type, callback, false, infoMsg);
            };

            $rootScope.stopVideoStep = function() {
                // Reset progress bar
                mg$('.mgPlayerJSTest_video-upload-progress-bar-wrapper').find('.mgPlayerJSTest_progress-bar-percentage').html('1%');
                mg$('.mgPlayerJSTest_video-upload-progress-bar-wrapper').find('.mgPlayerJSTest_progress-bar-percentage').css('width', '1%');
                $rootScope.videoUploadMessage = false;
                $rootScope.uploadProgressBar = false;
                $rootScope.tourVideoInProgressArr = [];
                storage.videosInProgress.set([]);
                $state.reload();

                $rootScope.uploadInProgress = false;

                if ($rootScope.isElectron) {
                    GmCXt.stopVideoStep_();
                } else {
                    Message.send({
                        action: "mgPlayerJSTest_action:stop_video_upload_in_background"
                    });
                }
            };

            $rootScope.stopInlineStep = function() {
                $rootScope.uploadStepProgressBar = false;
                $rootScope.showStepCreatedSuccessMsg = false;
            };

            $rootScope.hasVideoInProgress = function(tourId) {
                if (mg$.inArray(tourId, $rootScope.tourVideoInProgressArr) === -1) {
                    return false;
                } else {
                    return true;
                }
            };

            $rootScope.updateVideoInProgressList = function(action, tourId) {
                storage.videosInProgress.get().then(function(data) {
                    var videosInProgress = data;
                    switch (action) {
                        case 'add':
                            if (videosInProgress) {
                                videosInProgress.push(tourId);
                            } else {
                                videosInProgress = [tourId];
                            }
                            break;
                        case 'remove':
                            var index = videosInProgress.indexOf(tourId);
                            videosInProgress.splice(index, 1);
                    }
                    $rootScope.tourVideoInProgressArr = videosInProgress;
                    storage.videosInProgress.set(videosInProgress);
                });
            };

            $rootScope.showEmbedTourPopup = function(message, tour) {

                function copyCode(script) {
                    var elem = document.createElement("input");
                    elem.type = "text";
                    elem.value = script;
                    elem.className = "copy-client-script";
                    document.body.appendChild(elem);

                    var copyFrom = document.querySelector('.copy-client-script');
                    copyFrom.select();
                    document.execCommand('copy');
                    mg$('.copy-client-script').remove();
                }

                function close() {
                    mg$('.mgPlayerJSTest_overlay-container').remove();
                    mg$('.ege-embed-code-popup').remove();
                }

                var str = "<div class='mgPlayerJSTest_overlay-container'></div>" +
                    " <div class='ege-embed-code-popup'> " +
                    "<div class='mgPlayerJSTest_embed-code-popup-header'>" +
                    "Open page with live Guide" +
                    "<div class='mgPlayerJSTest_embed-code-popup-close ege-cancel-btn'>" +
                    '<svg version="1.1" id="Capa_1" x="0px" y="0px"' +
                    'viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve">' +
                    '<g>' +
                    '<g>' +
                    '<path d="M46,4C44.9,3,43.2,3,42.1,4L25,21.2L7.9,4C6.8,3,5.1,3,4,4S3,6.8,4,7.9L21.2,25L4,42.1C3,43.2,3,44.9,4,46' +
                    'c0.5,0.5,1.2,0.8,1.9,0.8s1.4-0.3,1.9-0.8L25,28.8L42.1,46c0.5,0.5,1.2,0.8,1.9,0.8c0.7,0,1.4-0.3,1.9-0.8c1.1-1.1,1.1-2.8,0-3.8' +
                    'L28.8,25L46,7.9C47,6.8,47,5.1,46,4z"/>' +
                    '</g>' +
                    '</g>' +
                    '</svg>' +
                    "   </div>" +
                    "</div>";

                str += " <div class='content-wrapper'>" +
                    "<div class='mgPlayerJSTest_embed-code-instruction'>" + message.textMessage + "</div>" +
                    "   <div class='code-wrapper' id='code-wrapper-url'>" +
                    String(message.embedScript).replace(/</gm, '&lt;').replace(/>/gm, '&gt;') +
                    "   </div>" +
                    " </div>" +
                    "   <div class='copy-btn-wrapper'>";

                str += "   <div class='mgPlayerJSTest_doitme-checkbox'><input type='checkbox' name='mgPlayerJSTest_add-doitme' class='mgPlayerJSTest_doitme-embed mgPlayerJSTest_input-checkbox-custom mgPlayerJSTest_inline-block-vm' id='mgPlayerJSTest_doitme-embed'>" +
                    "   <label class='mgPlayerJSTest_inline-block-vm' for='mgPlayerJSTest_add-link-newtab'>" + $rootScope.labels.doItForMe + "</label></div>";

                str += "  <div class='ok-btn-wrapper'>" +
                    "     <div class='ege-ok-btn ege-copy-script-2 mgPlayerJSTest_btn-default ege-inline-block-vt'>" + $rootScope.labels.copy + "</div>" +
                    " </div>" +
                    "</div>";

                mg$('.ege-panel').append(str);

                var windowHeight = mg$(window).height();
                var popupTop = (windowHeight - mg$('.ege-embed-code-popup').height()) / 2;
                mg$('.ege-embed-code-popup').css("top", popupTop);

                mg$('.mgPlayerJSTest_overlay-container').on('click', function(e) {
                    close();
                    e.stopPropagation();
                });

                mg$('.mgPlayerJSTest_doitme-embed').click(function() {

                    mg$('.ege-copy-script-2').html($rootScope.labels.copy);
                    var retValue = '';
                    if (mg$(this).is(':checked')) {
                        retValue = addParameter();
                        message.embedScript = retValue;
                    } else {
                        retValue = removeParameter();
                        message.embedScript = retValue;
                    }
                    mg$('#code-wrapper-url')[0].innerText = retValue;
                });

                mg$('.ege-copy-script-2').on('click', function() {
                    copyCode(message.embedScript);
                    mg$(this).html($rootScope.labels.copied);
                });

                function autoVar() {
                    return '&automation=true';
                }

                function addParameter() {
                    var urlVal = mg$('#code-wrapper-url')[0].innerText;
                    var url = urlVal.split('#');
                    var newUrl = url[0] + autoVar();

                    if (url[1]) newUrl = newUrl + '#' + url[1];

                    return newUrl;
                }

                function removeParameter() {
                    var u = mg$('#code-wrapper-url')[0].innerText;
                    return u.replace(autoVar(), '');
                }

                mg$('.ege-cancel-btn').on('click', function() {
                    close();
                });
            };

            $rootScope.closeAppPopup = function() {

                if ($rootScope.navBarVisible) return;

                if (mg$('.ege-panel-overlay') && mg$('.ege-panel-overlay').is(':visible')) {
                    $rootScope.guideViewFullScreen = false;
                    $rootScope.toggleGuideViewFullScreen();
                    mg$('.ege-panel-overlay').css({
                        'display': 'none'
                    });
                }
            };

            $rootScope.closeAppPanel = function() {

                $rootScope.closeAppPopup();
                $rootScope.applicationDropdown = false;
                $rootScope.automationDropdown = false;

                var m = {
                    action: "mgPlayerJSTest_action:close_app_panel"
                };
                GmCXt.sendToParentWindow(m);

                if ($rootScope.currentView === 'no-app') {
                    if ($rootScope.FT.isPlayer) {
                        $rootScope.hideWidget();
                    }
                }

                mg$('.ege-panel').removeAttr("style");
            };

            $rootScope.closeMngKeyword = function(lastUrl) {
                $rootScope.closeAppPopup();
                $rootScope.redirectWithRefresh(lastUrl);
            };

            $rootScope.goToNoApp = function() {
                if ($rootScope.FT.isPlayer) {
                    $rootScope.hideWidget();
                }
                $rootScope.showSpinner = false;
                GmCXt.redirect("#/noapp");
            };

            $rootScope.goToRoute = function() {

                if (!$rootScope.activeAppId) {
                    $rootScope.goToNoApp();
                    return;
                }

                if ($rootScope.activeView && $rootScope.activeView !== '/noapp') {
                    if ($rootScope.activeView === '/taskList' && !$rootScope.isTaskListVisible) {
                        $rootScope.goToView();
                        return;
                    }

                    GmCXt.redirect('#' + $rootScope.activeView);
                } else {
                    $rootScope.goToView();
                }
            };

            $rootScope.goToView = function() {
                if ($rootScope.FT.isPlayer) {
                    $rootScope.goToAssignedPage();
                } else {
                    $rootScope.goToAllGuides();
                }
            };

            $rootScope.refreshPageView = function() {
                var pageScope = $rootScope.getPageScope();

                $rootScope.refreshAllGuides = true;

                if (pageScope && $rootScope.currentView !== 'add-guide') {
                    pageScope.refreshView();
                } else {
                    $rootScope.goToAllGuides();
                }
            };

            $rootScope.setStepPendinCount = function(val) {
                if (val) {
                    $rootScope.incrementPendingStepCount();
                } else {
                    $rootScope.decrementPendingStepCount();
                }

                if (!$rootScope.$$phase) $rootScope.$apply(function() {});
            };

            $rootScope.executeRoute = function() {
                $rootScope.checkCdnSignature().then(function() {

                    if (GmCXt.user || $rootScope.noLogin()) {
                        execRoute();
                    } else {
                        $rootScope.clearSession();
                    }
                });
            };

            function execRoute() {

                GmCXt.log(21, 'EXECUTE route');

                if (angular.isDefined($rootScope.bypassRoute) && $rootScope.bypassRoute) {
                    $rootScope.bypassRoute = false;
                    GmCXt.log(21, 'BYPASS route');
                    return;
                }

                if ($rootScope.activeView) {

                    if (AuthLogin.isSession()) {

                        if ($rootScope.FT.isPlayer && !$rootScope.processedAppData) {

                            getCurrentAppObj().then(function(app) {
                                if (!GmCXt.isEmpty(app)) {
                                    $rootScope.goToRoute();
                                }
                            });
                        } else {
                            $rootScope.goToRoute();
                        }
                    } else if (GmCXt.isLXP()) {
                        GmCXt.redirect('#/emptypage');
                    } else if (GmCXt.onPrem()) {
                        $rootScope.goToRoute();
                    } else {
                        $rootScope.clearSession();
                    }
                } else {
                    $rootScope.goToView();
                }
            }

            $rootScope.scrollToStep = function(stepId, highlight) {

                $timeout(function() {
                    var step = mg$('#step-' + stepId);

                    if (step.length) {

                        if (step.offset()) {
                            var stepOffSetTop = step.offset().top;
                            var stepOffSetLeft = step.offset().left;
                        }

                        var stepHeight = step.height();
                        var stepWidth = step.width();

                        var catList = mg$('.category-list');

                        var currentScrollTop = catList.scrollTop();
                        var currentScrollLeft = catList.scrollLeft();
                        var header = mg$('.guide-view-header-panel-container').height();

                        catList.scrollTop(currentScrollTop + stepOffSetTop + header + 30 - stepHeight);
                        catList.scrollLeft(currentScrollLeft + stepOffSetLeft - stepWidth);

                        if (highlight) {

                            var defaultShadow = mg$(step).css('box-shadow');
                            var newShadow = "0px 0px 22px rgb(0 0 0 / 60%)";

                            var interval = setInterval(function() {
                                var boxShadow = mg$(step).css('box-shadow') === defaultShadow ? newShadow : defaultShadow;
                                mg$(step).css('box-shadow', boxShadow);

                            }, 500);

                            $timeout(function() {
                                clearInterval(interval);
                                mg$(step).css('box-shadow', defaultShadow);
                            }, 3000);
                        }
                    }
                }, 1000);

            };

            $rootScope.hideFiltersDropdown = function() {
                mg$('.mgPlayerJSTest_all-guides-search-filters-dropdown-user').slideUp(200);
                mg$('.mgPlayerJSTest_all-guides-search-filters-dropdown-published').slideUp(200);
                mg$('.mgPlayerJSTest_all-guides-search-filters-dropdown-assignee').slideUp(200);
                mg$('.mgPlayerJSTest_all-guides-search-filters-dropdown-sort').slideUp(200);
            };

            $rootScope.onBodyClick = function(e) {

                //hide failed step border
                if (GmCXt.failedStepId) {

                    var fStep = mg$('#step-' + GmCXt.failedStepId);

                    if (fStep && fStep.hasClass('step-highlight')) {

                        fStep.removeClass('step-highlight');

                        mg$('.step-not-found').remove();

                        mg$('.guide-not-followed').remove();

                        GmCXt.failedStepId = 0;
                    }
                }

                //Hide User Action dropdown from header bar on body click
                if (!mg$(e.target).hasClass('ege-user-image') && !mg$(e.target).hasClass('ege-user-image-wrapper')) {
                    var headerScope = angular.element('#ege-header').scope();
                    if (headerScope)
                        headerScope.hideUserImageDropDown();
                }

                //Hide Home page, Category list page and Tour list page Action dropdown on body click
                if (mg$('.category-action-dropdown').is(':visible')) {
                    if (!mg$(e.target).hasClass('category-action-dropdown') && !mg$(e.target).hasClass('category-pencil-icon')) {
                        $rootScope.hideActionDropdown();
                    }
                }

                //Hide Home page, Category list page and Tour list page Action dropdown on body click
                if (mg$('.tour-action-dropdown').is(':visible')) {
                    if (!mg$(e.target).hasClass('tour-action-dropdown') && !mg$(e.target).hasClass('tour-pencil-icon')) {
                        $rootScope.hideTourActionDropdown();
                    }
                }

                //Hide Export category, filter dropdown on body click
                if (mg$('.mgPlayerJSTest_checkbox-dropdown-wrapper').is(':visible')) {
                    if (!mg$(e.target).hasClass('mgPlayerJSTest_checkbox-dropdown-wrapper')) {
                        mg$('.mgPlayerJSTest_checkbox-dropdown-wrapper').slideUp(200);
                    }
                }

                // Hide dropdown of the survey question
                if (mg$('.mgPlayerJSTest_questions-type-dropdown').is(':visible')) mg$('.mgPlayerJSTest_questions-type-dropdown').slideUp(200);

                //Hide Language Action dropdown on body click
                if (mg$('.ege-header-action-dropdown').is(':visible')) {
                    if (!mg$(e.target).hasClass('ege-header-action-dropdown') && !mg$(e.target).hasClass('tour-pencil-icon')) {
                        $rootScope.hideTourActionDropdown();
                    }
                }

                // Hide Step action dropdown on tour view page on body Click
                if (mg$('.step-action-menu-options-dropdown').is(':visible')) {
                    if (!mg$(e.target).hasClass('step-action-menu-options-dropdown') &&
                        !mg$(e.target).hasClass('step-pencil-icon') &&
                        !mg$(e.target).parents('.step-pencil-icon').length) {
                        var tourViewScope = angular.element('#tour-view-page-container').scope();
                        if (tourViewScope)
                            tourViewScope.hideStepActionDropdown();
                    }
                }

                if (mg$('.detail-download-action-options-dropdown').is(':visible')) {
                    if (!mg$(e.target).hasClass('detail-download-action-options-dropdown') && !mg$(e.target).hasClass('header-detail-view-tour-download-wrapper')) {
                        var tourViewScope = angular.element('#ege-header').scope();
                        if (tourViewScope)
                            tourViewScope.hideStepDownloadActionDropdown();
                    }
                }

                if (mg$('.detail-view-action-options-dropdown').is(':visible')) {
                    if (!mg$(e.target).hasClass('detail-view-action-options-dropdown') && !mg$(e.target).hasClass('header-detail-view-tour-options-wrapper')) {
                        var tourViewScope = angular.element('#ege-header').scope();
                        if (tourViewScope)
                            tourViewScope.hideStepViewActionDropdown();
                    }
                }

                if (mg$('.download-list').length && mg$('.download-list').is(':visible')) {
                    mg$('.download-list').slideToggle();
                }

                if ($rootScope.hideFiltersDropdown &&
                    (!mg$(e.target).hasClass('mgPlayerJSTest_all-guides-search-filters-dropdown-user') ||
                        !mg$(e.target).hasClass('mgPlayerJSTest_all-guides-search-filters-dropdown-published') ||
                        !mg$(e.target).hasClass('mgPlayerJSTest_all-guides-search-filters-dropdown-assignee') ||
                        !mg$(e.target).hasClass('mgPlayerJSTest_all-guides-search-filters-dropdown-sort')) &&
                    !mg$(e.target).hasClass('mgPlayerJSTest_all-guides-search-filters')) {
                    $rootScope.hideFiltersDropdown();
                }

                //Hide LXP Filter dropdown on body click
                if (mg$('.filter-list').is(':visible')) {
                    if (!mg$(e.target).hasClass('filter-list') && !mg$(e.target).hasClass('filter-wrapper') && !mg$(e.target).hasClass('selected-filter')) {
                        $rootScope.hideFilterList();
                    }
                }

                //Hide Language dropdown on body click
                if (mg$('.mgPlayerJSTest_lang-dropdown-wrapper').is(':visible')) {
                    if (!mg$(e.target).hasClass('mgPlayerJSTest_selected-lang-wrapper') && !mg$(e.target).hasClass('mgPlayerJSTest_lang-dropdown-wrapper')) {
                        $rootScope.hideLanguDropdown(e);
                    }
                }

                //Hide User Preferences dropdown on body click
                if (mg$('.mgPlayerJSTest_setting-dropdown-userPref').is(':visible')) {
                    if (!mg$(e.target).hasClass('mgPlayerJSTest_user-pref-scope')) {
                        $rootScope.hideUserPrefDropdown(e);
                    }
                }

                //Hide Manage keywords filters dropdown on body click
                if (mg$('.mgPlayerJSTest_dropdown-list-wrapper').is(':visible')) {
                    if (!mg$(e.target).hasClass('mgPlayerJSTest_filter-dropdown-wrapper')) {
                        $rootScope.hideFiltersDropdownList();
                    }
                }

                //Hide Branch dropdown on body click
                if (mg$('.mgPlayerJSTest_branch-dropdown-list-wrapper').is(':visible')) {
                    if (!mg$(e.target).hasClass('mgPlayerJSTest_branch-dropdown-wrapper')) {
                        mg$('.mgPlayerJSTest_branch-dropdown-list-wrapper').slideUp(200);
                    }
                }
            };

            $rootScope.setDefaultDownloadOptions = function() {
                return {
                    video_file: true,
                    pdf_file: true,
                    pptx_file: true,
                    gif_file: true,
                    text_file: true,
                    word_file: true,
                    blog_file: true
                };
            };

            $rootScope.updateStatusProgressBar = function(request) {
                mg$('.mgPlayerJSTest_video-upload-progress-bar-wrapper').find('.mgPlayerJSTest_progress-bar-percentage').html(request.data.percentComplete + '%');
                mg$('.mgPlayerJSTest_video-upload-progress-bar-wrapper').find('.mgPlayerJSTest_progress-bar-percentage').css('width', request.data.percentComplete + '%');
            };

            $rootScope.updatedInProgressVariable = function(request) {
                var status = (request.data && request.data.status) ? true : false;
                $rootScope.uploadInProgress = status;

                if (status) {
                    $rootScope.uploadProgressBar = true;
                }
            };

            $rootScope.hideProgressBar = function() {
                $rootScope.uploadProgressBar = false;
                mg$('.mgPlayerJSTest_video-upload-progress-bar-wrapper').hide();
            };

            $rootScope.readLocalCT = function(url, title) {

                if ($rootScope.contextTours[url]) {
                    return $rootScope.contextTours[url][title];
                } else {
                    return false;
                }
            };

            $rootScope.checkLinkedGuideStep = function(steps, intervalCb) {

                var allSteps = steps;
                var count = 0;

                function getTourCb(_tour) {
                    var linkedSteps = _tour.steps;
                    count--;
                    allSteps = GmCXt.arrayMerge(allSteps, linkedSteps);
                }

                steps.forEach(function(step) {
                    if (step.step_settings.tour_id) {

                        allSteps = allSteps.filter(function(s) {
                            return (s.step_id !== step.step_id);
                        });

                        var param = {
                            tour_id: step.step_settings.tour_id
                        };

                        count++;
                        var forceJSONApi = false;
                        if (GmCXt.apiPlayer) forceJSONApi = true;

                        api.getTour(param, getTourCb, getTourCb, forceJSONApi);
                    }
                });

                var interval = setInterval(function() {
                    intervalCb(allSteps, count, interval);
                }, 500);

            };

            $rootScope.importTour = function(category, $event, scope, parentScope) {
                if ($rootScope.importInProgress) return;

                var executeImportTour = function() {

                    var categoryId = category.category_id;
                    $event.stopPropagation();
                    $rootScope.hideActionDropdown();

                    var fileStr = "<input style='display:none' id='import-tour-file-input' type='file' tabindex='-1' accept='.tour,.json' />";
                    var parent = mg$('#category-add-dropdown-' + category.category_id).find('.upload-tour-dropdown-item');
                    parent.append(fileStr);

                    mg$('#import-tour-file-input').on('click', function(e) {
                        e.stopPropagation();
                    });

                    var file = {};
                    mg$('#import-tour-file-input').off('change').on('change', function(e) {
                        file = e.currentTarget.files[0];

                        var params = {
                            file_type: 'json',
                            mime: ''
                        };

                        if (file.name.indexOf('.json') >= 0) {
                            params.mime = 'application/json';

                            var reader = new FileReader();
                            reader.onload = onReaderLoad;
                            reader.readAsText(file);

                        } else if (file.name.indexOf('.zip') >= 0) {
                            params.mime = 'application/zip';
                            processUpload();
                        } else {
                            modal.open($rootScope.labels.invalidFileType, 'warning');
                        }

                        function onReaderLoad(e) {
                            var res = JSON.parse(e.target.result);

                            var flag = true;

                            var mustHaveKeys = ['main_json', 'linked_json', 'storage_path', 'source_env'];
                            for (var i in mustHaveKeys) {
                                if (!res.hasOwnProperty(mustHaveKeys[i])) {
                                    flag = false;
                                    break;
                                }
                            }

                            if (flag) {
                                processUpload();
                            } else {
                                modal.open($rootScope.labels.invalidJsonFileError, 'warning');
                            }
                        }

                        function processUpload() {
                            // get upload url
                            api.fileUploadUrl(params).then(uploadFile);

                            $rootScope.uploadProgressBar = true;
                            $rootScope.importInProgress = true;

                            modal.open($rootScope.labels.importInProgress, 'success');
                        }
                    });

                    function uploadFile(result) {
                        $rootScope.uploadFileInChunk(result, file, onImport);
                    }

                    function onImport(data) {
                        //call import api  
                        var params = {
                            file_id: data.fileId,
                            category_id: categoryId,
                            application_id: parseInt($rootScope.activeAppId),
                            description: $rootScope.labels.importing + ": " + file.name
                        };

                        if (categoryId === 0) {
                            delete params.category_id;
                        }
                        var onSuccess = function(response) {

                            $rootScope.hideProgressBar();
                            $rootScope.importInProgress = false;

                            $rootScope.importUploadMessage = true;
                            if ($rootScope.importUploadMessage) {
                                setTimeout($rootScope.closeNotification, 5000);
                            }

                            if (category.category_id === 0) {
                                GmCXt.redirect('#/all_guides');
                                return false;
                            }

                            if (scope.isHomePage || scope.isCategoryListPage) {

                                $rootScope.updateCategory(category, 'has_child', true);

                                var url = '#/category/' + category.category_id + '/list';
                                GmCXt.redirect(url);
                            } else if (scope.isTourListPage) {
                                mg$('#import-tour-file-input').remove();

                                $rootScope.showSpinner = true;

                                $timeout(function() {
                                    parentScope.offset = 0;
                                    parentScope.getTourList();
                                }, 1000);
                            }
                        };

                        api.tourUpload(params, onSuccess);
                    }

                    $timeout(function() {
                        mg$('#import-tour-file-input').click();
                    }, 100);
                };

                executeImportTour();

            };

            $rootScope.isRefreshView = function() {
                var view = $rootScope.currentView;

                if (view === 'team-guides' ||
                    view === 'home' ||
                    view === 'search-page' ||
                    view === 'tour-list' ||
                    view === 'category-list' ||
                    view === 'tour-view' ||
                    view === 'task-status-list' ||
                    view === 'no-app' ||
                    view === 'filter-list' ||
                    $rootScope.isCdnMaintenance() ||
                    $rootScope.maintenance)
                    return true;
                else
                    return false;
            };

            $rootScope.removeVideoStepUploadedImage = function(scope) {
                scope.step.step_image = "0";
                scope.stepImageUrl = $rootScope.staticContentPath + "default_video.png";
                scope.libraryImage.imageString = undefined;
                scope.activeImage = undefined;
                return scope;
            };

            $rootScope.updateActiveTab = function(tabName) {
                storage.activeTab.set(tabName);
            };

            $rootScope.removeActiveTab = function() {
                storage.activeTab.remove();
            };

            $rootScope.showLogin = function() {
                $rootScope.removeActiveTab();
                $rootScope.clearSession();
            };

            $rootScope.goToAllGuides = function() {

                if ($rootScope.maintenance) {
                    $rootScope.goToMaintenance();
                    return;
                }

                if (!GmCXt.activeAppId) {
                    autoSwitchApp($rootScope.goToAllGuides);
                    return;
                }

                if ($rootScope.currentPageOnly) {
                    $rootScope.goToCurrentPage();
                    return;
                }

                if ($rootScope.currentView === 'team-guides') {
                    var pageScope = angular.element('#home-page-container').scope();
                    if (pageScope) {
                        pageScope.categories = [];
                        pageScope.limit = 50;
                        pageScope.offset = 0;
                        $rootScope.updateActiveTab($rootScope.labels.allGuides);
                        pageScope.refreshView();
                    } else {
                        GmCXt.redirect('#/all_guides');
                    }
                } else {
                    GmCXt.redirect('#/all_guides');
                }
            };

            $rootScope.getCdnSign = GmCXt.getCdnSign;

            $rootScope.setElementGrade = function(id, score) {

                $rootScope['elementGrade_' + id] = score;

                if ($rootScope['elementGrade_' + id] > 0) {
                    $rootScope['showElementGrade_' + id] = true;
                    $rootScope['showElementNotFound_' + id] = false;
                } else {
                    $rootScope['showElementGrade_' + id] = false;
                    $rootScope['showElementNotFound_' + id] = true;
                }

                if (!$rootScope.$$phase) $rootScope.$apply();
            };

            $rootScope.updateElementPrecision = function(data) {
                var rulesEngineScope = angular.element("#mgPlayerJSTest_rules-engine-container").scope();
                var branchPageScope = angular.element('.branching-popup-wrapper').scope();
                var appSettingScope = angular.element("#mgPlayerJSTest_app-setting-container").scope();
                var errorPageScope = angular.element("#mgPlayerJSTest_error-handler-popup-wrapper").scope();

                if (appSettingScope && appSettingScope.updateElementPrecisionForRules) {
                    appSettingScope.updateElementPrecisionForRules(data);
                } else if (rulesEngineScope && rulesEngineScope.updateElementPrecisionForRules) {
                    rulesEngineScope.updateElementPrecisionForRules(data);
                } else if (branchPageScope && branchPageScope.updateElementPrecisionForRules) {
                    branchPageScope.updateElementPrecisionForRules(data);
                } else if (errorPageScope && errorPageScope.updateElementPrecisionForRules) {
                    errorPageScope.updateElementPrecisionForRules(data);
                }
                $rootScope.setElementGrade(data.index, GmCXt.rulesElement.meta.score);
            };

            $rootScope.surveyQues = function() {
                return [{
                    'surveyTitle': '',
                    'questions': [],
                    'globalSurvey': false
                }];
            };

            $rootScope.segment = function() {
                return [{
                    'title': '',
                    'segments': [],
                    'rules': [],
                    'rule_check': false
                }];
            };

            $rootScope.addPanelOverlay = function() {
                mg$('.ege-panel-overlay').remove();
                mg$('.ege-panel').append("<div class='ege-panel-overlay'></div>");
            };

            $rootScope.showPanelOverlay = function() {
                mg$('.ege-panel-overlay').css({
                    'display': 'block'
                });
            };

            $rootScope.hidePanelOverlay = function() {
                if (mg$('.ege-panel-overlay') && mg$('.ege-panel-overlay').is(':visible')) {
                    mg$('.ege-panel-overlay').css({
                        'display': 'none'
                    });
                }
            };

            $rootScope.getCategory = function(cid) {
                var id = 'cat_' + cid;
                var cat = $rootScope.allCategories[id] || false;

                return cat;
            };

            $rootScope.removeCategory = function(cat) {
                delete $rootScope.allCategories['cat_' + cat.category_id];

                updateCatList(cat, parseInt(cat.parent_id), true);
                if (!GmCXt.inPlayer) {
                    storage.category.reset($rootScope.allCategories);
                }
            };

            $rootScope.addCategory = function(cat) {

                if (!cat.category_title) return;

                var id = 'cat_' + cat.category_id;

                $rootScope.allCategories[id] = cat;

                updateCatList(cat, parseInt(cat.parent_id));

                if (!GmCXt.inPlayer) {
                    storage.category.reset($rootScope.allCategories);
                }

            };

            $rootScope.addMultiCategory = function(catList) {

                angular.forEach(catList, function(cat) {

                    if (cat[0]) {
                        cat = cat[0];
                    }

                    var id = 'cat_' + cat.category_id;
                    $rootScope.allCategories[id] = cat;

                    if (!GmCXt.inPlayer) {
                        updateCatList(cat, parseInt(cat.parent_id));
                    }
                });

                if (!GmCXt.inPlayer) {
                    storage.category.reset($rootScope.allCategories);
                }

            };

            $rootScope.addSubCatToAll = function(clist) {
                for (var c in clist) {
                    $rootScope.addMultiCategory(clist[c]);
                }
            };

            $rootScope.updateCategory = function(cat, prop, val, updateTime) {
                var cid = 'cat_' + cat.category_id;
                var categories = $rootScope.allCategories;

                if (!GmCXt.isEmpty(categories) && categories[cid]) {
                    categories[cid][prop] = val;

                    if (updateTime) {
                        categories[cid].modification_date = GmCXt.getCurrentTimeInSec();
                    }

                    if (!GmCXt.inPlayer) {
                        storage.category.reset(categories);
                    }

                } else {
                    cat[prop] = val;
                    if (updateTime) {
                        cat.modification_date = GmCXt.getCurrentTimeInSec();
                    }
                    $rootScope.addCategory(cat);
                }

                updateCatList(cat, parseInt(cat.parent_id));
            };

            function updateCatList(cat, parent_id, remove) {

                var index;

                if (parent_id) {

                    if (!$rootScope.subCategoryStore['cat_' + parent_id]) {
                        $rootScope.subCategoryStore['cat_' + parent_id] = [];
                    }

                    $rootScope.subCategoryStore['cat_' + parent_id].forEach(function(c, key) {
                        if (c.category_id === cat.category_id) {
                            index = key;
                        }
                    });

                    if (index >= 0) {

                        if (remove) {
                            $rootScope.subCategoryStore['cat_' + parent_id].splice(index, 1);
                        } else {
                            $rootScope.subCategoryStore['cat_' + parent_id].splice(index, 1, cat);
                        }
                    } else if (!remove) {
                        $rootScope.subCategoryStore['cat_' + parent_id].push(cat);
                    }

                } else {

                    $rootScope.categoryStore.forEach(function(c, key) {
                        if (c.category_id === cat.category_id) {
                            index = key;
                        }
                    });

                    if (index >= 0) {

                        if (remove) {
                            $rootScope.categoryStore.splice(index, 1);
                        } else {
                            $rootScope.categoryStore.splice(index, 1, cat);
                        }
                    } else if (!remove) {
                        $rootScope.categoryStore.push(cat);
                    }
                }
            }

            $rootScope.processCategories = function() {

                for (var id in $rootScope.allCategories) {
                    var cat = $rootScope.allCategories[id];
                    updateCatList(cat, parseInt(cat.parent_id));
                }
            };

            $rootScope.showLogoutBtn = function() {
                if (!$rootScope.isUserLoggedIn() ||
                    GmCXt.conf.autologin ||
                    $rootScope.isLXP ||
                    $rootScope.appConfig.login.SSO)
                    return false;
                else
                    return true;
            };

            function checkIfCSV(tour) {
                return new Promise(function(resolve, reject) {

                    var steps = GmCXt.createDeepCopy(tour.steps);

                    var isCSV = function(allSteps, count, interval) {
                        if (count === 0) {

                            clearInterval(interval);

                            for (var i = 0; i < allSteps.length; i++) {
                                var auto = allSteps[i].step_settings.automation;

                                if (auto && auto.inputType === 'csv' && auto.csvParam) {
                                    GmCXt.log(33, 'CSV input expected');
                                    resolve(true);
                                }
                            }

                            resolve(false);
                        }
                    };

                    $rootScope.checkLinkedGuideStep(steps, isCSV);
                });
            }

            $rootScope.showToastMessage = function(message) {
                var m = {
                    data: message,
                    action: "mgPlayerJSTest_action:show_toast_message"
                };
                GmCXt.sendToParentWindow(m);
            };

            $rootScope.insertImage = function(spinner, scope) {
                var promise = new Promise(function(resolve, reject) {
                    mg$('#setting-tab-input-file').off("change").on("change", function(e) {
                        scope[spinner] = true;
                        scope.uploadInProgress = true;
                        var file = e.currentTarget.files[0];

                        if (file.type.length === 0 || mg$.inArray(file.type, $rootScope.allowedImageExtensions) === -1) {
                            scope[spinner] = false;
                            $rootScope.showToastMessage($rootScope.labels.imageExtensionMessage);
                            mg$(this).val('');
                            scope.uploadInProgress = false;
                            return;
                        }

                        var fileSize = file.size;

                        if (fileSize > 5240000) {
                            $rootScope.showToastMessage($rootScope.labels.imageGreaterThan5MbErrorMessage);
                            mg$(this).val('');
                            scope.uploadInProgress = false;
                            return;
                        }

                        var formData = new FormData();
                        formData.append("image", file);

                        var onSuccess = function(response) {
                            var data = response.data;
                            scope.uploadInProgress = false;
                            var uploadedImage = {};
                            uploadedImage.image_id = data.data.image_id;
                            uploadedImage.image_path = data.data.image_path;
                            resolve(uploadedImage);

                            $timeout(function() {
                                scope.uploadInProgress = false;
                            }, 500);
                        };
                        var onFail = function() {
                            scope.uploadInProgress = false;
                        };

                        api.uploadImageFile(formData, onSuccess, onFail);
                        mg$('#setting-tab-input-file').val('');
                    });
                    mg$('#setting-tab-input-file').click();
                });
                return promise;
            };

            function sortUserData(data) {
                var set = {};
                var alldata = [];
                var params = data[0];

                data.forEach(function(d) {
                    for (var i = 0; i < params.length; i++) {

                        var key = mg$('<span />').html(params[i]).text().trim();
                        set[key] = d[i];
                    }

                    alldata.push(set);
                    set = {};
                });
                return alldata;
            }

            $rootScope.importAtRootLevel = function(event) {

                $rootScope.importTour({
                    category_id: 0
                }, event);
            };

            $rootScope.startGuideAction = function(m, type, step, tour) {
                if (step && $rootScope.lastVideoStepCreated) {
                    var d = new Date();
                    var timeDiff = d.getTime() - $rootScope.lastVideoStepCreated.time;

                    if ($rootScope.lastVideoStepCreated.id === step.step_id && timeDiff < 60000) {
                        $rootScope.showPopup($rootScope.labels.processingVideo);
                        return;
                    }
                }

                if (tour.is_published) {

                    switch (type) {
                        case $rootScope.playVideoTour:
                            if (tour.media_files && tour.media_files[0].video === "0") {
                                $rootScope.showPopup($rootScope.labels.msgVideoNotFound);
                                return;
                            } else {
                                m.data.type = $rootScope.playVideoTour;
                                m.data.mode = m.data.type;
                            }
                            break;

                        case $rootScope.playGiphy:
                            if (tour.media_files[0].gify === "0") {
                                $rootScope.showPopup($rootScope.labels.msgGiphyNotFound);
                                return;
                            } else {
                                m.data.type = $rootScope.playGiphy;
                                m.data.mode = m.data.type;
                                break;
                            }
                    }
                }

                if (type === $rootScope.playSlideshow) {
                    m.data.type = $rootScope.playSlideshow;
                    m.data.mode = m.data.type;

                } else if (type === $rootScope.playVLab) {
                    m.data.type = $rootScope.playVLab;
                    m.data.mode = m.data.type;
                }

                var play = function(r) {

                    if (r) {
                        var data = sortUserData(r);

                        m.data.loops = data.length - 1;
                        m.data.currentLoop = 0;
                        m.data.csvData = data;
                    }

                    GmCXt.sendToParentWindow(m);
                };

                m.data.origin = $rootScope.activeTab;

                if (m.data.taskObj && m.data.taskObj.taskId) {
                    m.data.origin = "task_list";
                }

                m.data.guideOpened = ($rootScope.currentView === 'tour-view') ? true : false;

                if (type === $rootScope.playAuto) {

                    m.data.automate = true;
                    m.data.initiator = 'doitforme';

                    $rootScope.showSpinner = true;

                    checkIfCSV(tour).then(function(r) {

                        $rootScope.showSpinner = false;
                        if (!$rootScope.$$phase) $rootScope.$apply();

                        if (r) modal.openDoItPopup(play, "Upload CSV");
                        else play();
                    });
                } else
                    play();
            };

            $rootScope.getStepFromTour = function(step_id, tour) {
                if (step_id) {
                    for (var i = 0; i < tour.steps.length; i++) {
                        if (parseInt(tour.steps[i].step_id) === parseInt(step_id)) {
                            return tour.steps[i];
                        }
                    }
                } else {
                    return false;
                }
            };

            $rootScope.getPrevStepFromTour = function(step_id, tour) {
                var stepInd = 0;
                for (var i = 0; i < tour.steps.length; i++) {
                    if (tour.steps[i].step_id === step_id) {
                        stepInd = i;
                        break;
                    }
                }
                if (tour.steps[stepInd - 1]) {
                    return tour.steps[stepInd - 1];
                } else {
                    return false;
                }
            };

            function getNextStep(t) {
                var lastStepId = GmCXt.tourActivity['t:' + t.tour_id];
                var ps = t.tour_settings.play_structure ? t.tour_settings.play_structure : GmCXt.getGuidePlayStructure(t);
                var nextStepId = GmCXt.getTail(lastStepId, ps, null, t);

                return $rootScope.getStepFromTour(nextStepId, t);
            }

            function getLastPlayedStep(t) {
                var lastStepId = GmCXt.tourActivity['t:' + t.tour_id];
                return $rootScope.getStepFromTour(lastStepId, t);
            }

            function restartGuide() {
                GmCXt.log(33, "RESTART tour play" + GmCXt.tourLog($rootScope.contTour.tour));
                continuePlay("", null, $rootScope.contTour.tour, $rootScope.contTour.source);
            }

            function resumeGuide() {
                GmCXt.log(33, "RESUME tour play" + GmCXt.tourLog($rootScope.contTour.tour));
                continuePlay("", $rootScope.contTour.step, $rootScope.contTour.tour, $rootScope.contTour.source);
            }

            function listenTourPlay(event) {

                var message = GmCXt.parseMsg(event);

                if (!message) return;
                if (!message.action || message.action.indexOf('mgPlayerJSTest_action:') !== 0) return;
                message = GmCXt.convertMgdata(message);

                if (message.action === 'mgPlayerJSTest_action:next_step_found_app') {

                    $rootScope.stepFound = true;

                    var s = $rootScope.contTour.step;

                    GmCXt.log(33, "FOUND next step" + GmCXt.stepLog(s.step_id, s.tour_id));

                    resumeGuide();

                    window.removeEventListener('message', listenTourPlay);
                }

                if (message.action === 'mgPlayerJSTest_action:start_point_found_app') {
                    $rootScope.contTour.step = message.data.step;
                    resumeGuide();
                    window.removeEventListener('message', listenTourPlay);
                    delete $rootScope.startPoints;
                    delete $rootScope.searching_sp;
                }

                if (message.action === 'mgPlayerJSTest_action:start_point_not_found') {
                    if ($rootScope.searching_sp < $rootScope.startPoints.length - 1) {
                        $rootScope.searching_sp += 1;
                        GmCXt.sendToParentWindow({
                            action: 'mgPlayerJSTest_action:search_start_point',
                            data: {
                                tour_id: $rootScope.contTour.tour_id,
                                startPoint: $rootScope.startPoints[$rootScope.searching_sp]
                            }
                        });
                    } else {
                        //For playing first step incase startpoints are not found in startpoint guides 
                        continuePlay('', null, $rootScope.contTour.tour, $rootScope.contTour.source, $rootScope.contTour.tour.category_title);
                    }
                }
            }

            function checkGuideMeMode(type) {
                if (((type === 'Default' || type === "") && GmCXt.getAppSetting('defaultPlayAction') === $rootScope.playGuideMe) ||
                    type === $rootScope.playGuideMe) {
                    return true;
                } else {
                    return false;
                }
            }

            function tourCb(type, step, tour, source, catName, taskObj) {

                tour = GmCXt.checkAndCorrectPS(tour);

                if (type === GmCXt.TOUR_PLAYER_SLIDESHOW) {
                    if ($rootScope.isOnlySurveyGuide(tour) || $rootScope.isOnlyTransportGuide(tour)) {
                        return;
                    }
                    tour.steps = GmCXt.filterOutAutomationSteps(tour.steps);
                }

                if (type === "doitforme") {
                    if ($rootScope.checkStepsForDoItForMeMode(tour)) {
                        modal.open($rootScope.labels.doitForMeWarning, 'warning');
                        return;
                    }
                }

                tour.tour_settings.play_structure = GmCXt.getGuidePlayStructure(tour, type);

                //for guide play event
                tour.tour_settings.valid_segments = GmCXt.getTourSegments(tour);

                if (GmCXt.FT.isPlayer) {
                    tour = !$rootScope.isGuideInOriginalLang(tour) ?
                        $rootScope.getTranslatedTourAndSteps(tour, $rootScope.language) :
                        tour;
                }

                var as = $rootScope.appList["app:" + $rootScope.activeAppId].settings;

                if (as && as.domains) {
                    tour.allDomains = as.domains;
                } else {
                    tour.allDomains = false;
                }

                var currentUrlPath = GmCXt.urlParts.pathname.length > 1 ? GmCXt.urlParts.pathname.toLowerCase() : null;
                var rules = tour.tour_settings.rules;
                $rootScope.resumeFromStartPoint = false;
                var match = true;

                if (!GmCXt.isEmpty(tour.tour_settings.start_point_info)) {
                    if (rules.length > 0) {
                        match = GmCXt.ruleEngine.evaluateRules(rules);
                    }
                    if (match) {
                        $rootScope.resumeFromStartPoint = true;
                    }
                }
                if (!step && ($rootScope.isResumeGuide || $rootScope.resumeFromStartPoint)) {
                    if ($rootScope.isPlayer() &&
                        (source === "home" || source === "tour-list" || (source === 'tour-view' && $rootScope.resumeFromStartPoint)) &&
                        checkGuideMeMode(type)) {
                        var step;
                        if ($rootScope.resumeFromStartPoint && !$rootScope.isResumeGuide) {
                            for (var i = 0; i < tour.tour_settings.start_point_info.length; i++) {
                                step = GmCXt.getStartpointStepFromSteps(tour.tour_settings.start_point_info[i].step_id, tour.steps);
                                if (step) {
                                    break;
                                }
                            }
                        } else {
                            step = getLastPlayedStep(tour);
                        }

                        $rootScope.contTour = {
                            tour: tour,
                            step: step,
                            source: source
                        };

                        if (step) {
                            GmCXt.log(33, "Tour was Played " + GmCXt.stepLog(step.step_id, step.tour_id));

                            $rootScope.startPoints = [];
                            for (var i = tour.steps.length - 1; i > -1; i--) {
                                if (tour.steps[i].step_settings.startPoint) {
                                    $rootScope.resumeFromStartPoint = true;
                                    $rootScope.startPoints.push(tour.steps[i]);
                                }
                            }

                            if ($rootScope.startPoints.length && !$rootScope.isResumeGuide) {
                                if (tour.steps[0].step_type === 'inline') {
                                    $rootScope.startPoints.unshift(tour.steps[0]);
                                }
                                $rootScope.searching_sp = 0;

                                // This listener is only in Guide iframe
                                window.addEventListener('message', listenTourPlay);
                                GmCXt.sendToParentWindow({
                                    action: 'mgPlayerJSTest_action:search_start_point',
                                    data: {
                                        tour_id: tour.tour_id,
                                        startPoint: $rootScope.startPoints[0]
                                    }
                                });

                            } else if (step.step_type === 'inline') {

                                $rootScope.stepFound = false;

                                // This listener is only in Guide iframe
                                window.addEventListener('message', listenTourPlay);

                                GmCXt.sendToParentWindow({
                                    action: 'mgPlayerJSTest_action:search_next_step',
                                    data: {
                                        tour_id: tour.tour_id,
                                        requestId: step.step_id,
                                        settings: step.step_settings,
                                        windowHost: GmCXt.getPageDomain(),
                                        task: 'findStep',
                                        findOnly: true,
                                        noOutline: true,
                                        timeout: Date.now() + 1000,
                                        log_stepInfo: GmCXt.getStepInfoLog(step)
                                    }
                                });

                                GmCXt.timeout(function() {
                                    if (!$rootScope.stepFound) {
                                        var s = $rootScope.contTour.step;
                                        GmCXt.log(33, "NOT FOUND next step " + GmCXt.stepLog(s.step_id, s.tour_id));

                                        window.removeEventListener('message', listenTourPlay);
                                        restartGuide();
                                    }
                                }, 1000);

                            } else {
                                resumeGuide();
                            }
                            return;
                        }
                    }
                }

                GmCXt.log(33, "PLAYING " + GmCXt.tourLog(tour));

                continuePlay(type, step, tour, source, catName, taskObj);
            }

            function continuePlay(type, step, tour, source, catName, taskObj) {

                var firstStepId = '';

                if (!step) {
                    firstStepId = tour.tour_settings.play_structure[0].id;
                    step = $rootScope.getStepFromTour(firstStepId, tour);
                }

                var currentStepId = step.step_id;
                // Due to courrpt play structure, wrong currentStepId passing while playing guide 
                // from GuideMe icon.
                // Set currentStepId null, if user click on GuideMe option. currentStepId will 
                // update in tourPlayer function with updated play structure.
                if (firstStepId && !type) {
                    currentStepId = null;
                }

                GmCXt.log(33, "PLAY TOUR from " + GmCXt.stepLog(step.step_id, step.tour_id));

                // Video and blog options are available for published tours only.
                // Slideshow option is available irrespective of publish status.
                var message = {
                    data: {
                        tour: tour,
                        currentStepId: currentStepId,
                        language: $rootScope.getTourLangInfo(tour),
                        isDefaultLang: GmCXt.checkDefaultLangForTour(tour, $rootScope.language),
                        source: source,
                        automate: false,
                        taskObj: taskObj
                    },
                    action: "mgPlayerJSTest_action:play_tour"
                };

                if (catName) {
                    message.data.tour.category_name = catName;
                }

                $rootScope.startGuideAction(message, type, step, tour);
            }

            $rootScope.showDomainRedirect = function(tour) {
                var infoMsg = false;
                var msg = $rootScope.labels.guideNotExist;
                var ob = GmCXt.checkDomainInApps(tour.tour_url);

                if (ob.domainMatch) {
                    infoMsg = $rootScope.labels.belongToOtherApp;
                    infoMsg = infoMsg.replace(/{TOURURL}/g, '<strong>' + GmCXt.getHostnameFromUrl(tour.tour_url) + '</strong>');
                    infoMsg = infoMsg.replace(/{APPNAME}/g, '<strong>' + ob.appName + '</strong>');

                } else if (GmCXt.FT.creatorApp) {
                    infoMsg = $rootScope.labels.setDomain;
                    infoMsg = infoMsg.replace(/{TOURURL}/g, '<strong>' + GmCXt.getHostnameFromUrl(GmCXt.urlParts.host) + '</strong>');
                }

                $rootScope.showPopup(msg, null, 'warning', infoMsg);
            };

            $rootScope.guideAction = function(type, step, tour, source, catName, taskObj) {

                if ($rootScope.isTooltip(tour)) return true;

                taskObj = taskObj ? taskObj : false;

                if ($rootScope.isOnboarding(tour, taskObj)) {
                    $rootScope.previewNotification(tour, taskObj, step);
                    return true;
                }

                type = type;
                step = step;
                tour = tour;
                source = source;
                catName = catName;

                $rootScope.checkAppList().then(function() {
                    if (!GmCXt.isDomainInActiveApp() && type !== $rootScope.playSlideshow && !tour.tour_settings.redirectionUrl) {
                        $rootScope.showDomainRedirect(tour);
                        return true;
                    }

                    if (tour.step_count === '0' || !tour.step_count) {
                        $rootScope.showPopup("There are no steps to play");
                        return true;
                    }

                    var errorCb = function() {
                        $rootScope.showPopup($rootScope.labels.tourPlayError);
                    };

                    var param = {
                        tour_id: tour.tour_id,
                        category_id: tour.category_id
                    };

                    if (!GmCXt.checkDefaultLangForTour(tour, $rootScope.language)) {
                        param.language = $rootScope.language;
                    }

                    if (tour.steps.length) {
                        tourCb(type, step, tour, source, catName, taskObj);
                    } else {
                        $rootScope.showSpinner = true;
                        api.getTour(param, function(_tour) {
                            $rootScope.showSpinner = false;
                            if (!$rootScope.$$phase) $rootScope.$apply();
                            tourCb(type, step, _tour, source, catName, taskObj);
                        }, errorCb);
                    }
                });

            };

            $rootScope.trackSearchActivity = function(guideClick) {
                if ($rootScope.searchKeyword) {
                    $rootScope.trackSearchEvent(guideClick);
                }

                if ($rootScope.search) {
                    $rootScope.trackCurrentPageSearchEvent(guideClick);
                }
            };

            $rootScope.getDefaultPlayAction = function(tour) {
                var da = GmCXt.getAppSetting('defaultPlayAction');

                if (GmCXt.isFalse(da)) {
                    return da;
                }

                if (tour.tour_settings.defaultPlayAction !== 'Default') {
                    da = tour.tour_settings.defaultPlayAction;
                }

                if ($rootScope.organization && !$rootScope.getAppSetting(da)) {
                    da = GmCXt.model.organization.settings._obj.defaultPlayAction._default;
                }

                return da;
            };

            $rootScope.play = function(tour, resume) {
                $rootScope.trackSearchActivity(true);
                $rootScope.isResumeGuide = resume;

                GmCXt.log(33, "Play tour" + GmCXt.tourLog(tour));

                if (tour && tour.tour_type === "help_article") {
                    window.open(tour.tour_settings.articleUrl, '_blank');
                    return;
                }

                if ($rootScope.FT.creatorApp) {
                    $rootScope.goToTourView(tour);
                } else if ($rootScope.isWBMicroPlayer || $rootScope.isDesktopApp()) {
                    $rootScope.guideAction($rootScope.playSlideshow, null, tour);
                } else {
                    var defaultPlayAction = $rootScope.getDefaultPlayAction(tour);
                    if (defaultPlayAction === 'Default') {
                        defaultPlayAction = $rootScope.getAppSetting('defaultPlayAction');
                    }

                    $rootScope.guideAction(defaultPlayAction, null, tour, $rootScope.currentView);
                }
            };

            $rootScope.showPlayOption = function(type, tour) {

                if (!GmCXt.user) return;

                var showAction = false;
                var defaultPlayAction = $rootScope.getDefaultPlayAction(tour);

                if ($rootScope.isDesktopApp()) {
                    return showAction;
                }

                switch (type) {

                    case $rootScope.playGuideMe:
                        if (GmCXt.getAppSetting('guideMeSetting') && defaultPlayAction === $rootScope.playSlideshow && $rootScope.enableGuidemeMode && !$rootScope.isOnboarding(tour))
                            showAction = true;
                        break;

                    case $rootScope.playSlideshow:
                        if (GmCXt.getAppSetting('showMeSetting') && defaultPlayAction === $rootScope.playGuideMe && $rootScope.FT.showMe || $rootScope.isOnboarding(tour) || (defaultPlayAction === $rootScope.playVLab && GmCXt.branchStepExist(tour)))
                            showAction = true;
                        break;

                    case $rootScope.playTestMe:
                        if (GmCXt.getAppSetting('testMeSetting') && defaultPlayAction === $rootScope.playGuideMe && $rootScope.FT.testme && !$rootScope.isOnboarding(tour))
                            showAction = true;
                        break;

                    case $rootScope.playVLab:
                        if (GmCXt.getAppSetting('vLab') && defaultPlayAction === $rootScope.playGuideMe && $rootScope.enableMyteacher && !$rootScope.isOnboarding(tour))
                            showAction = true;
                        break;

                }

                return showAction;
            };

            $rootScope.trackSearchEvent = function(guideClick) {

                if ($rootScope.trackSearch && $rootScope.trackSearch.track) {

                    $rootScope.trackSearch.track = false;

                    var object = {
                        search_text: $rootScope.trackSearch.keyword,
                        results_returned: $rootScope.trackSearch.results_returned,
                        search_result_clicked: guideClick,
                        startTime: $rootScope.trackSearch.startTime
                    };

                    GmCXt.trackerV1.trackGuideSearch(object);

                    $rootScope.trackSearch = {};
                }
            };

            $rootScope.trackCurrentPageSearchEvent = function(guideClick) {

                if ($rootScope.trackCurrentPageSearch && $rootScope.trackCurrentPageSearch.track) {

                    $rootScope.trackCurrentPageSearch.track = false;

                    var object = {
                        search_text: $rootScope.trackCurrentPageSearch.keyword,
                        results_returned: $rootScope.trackCurrentPageSearch.results_returned,
                        search_result_clicked: guideClick,
                        startTime: $rootScope.trackCurrentPageSearch.startTime
                    };

                    GmCXt.trackerV1.trackGuideSearch(object, $rootScope.pageUrl);
                }
            };

            $rootScope.clearSession = function(s) {
                logoutService.clearSession(s);
            };

            $rootScope.handleSignIn = function() {
                $rootScope.clearSession('1003: Access token invalid');
                $rootScope.showSpinner = false;
            };

            $rootScope.showMPHeader = function() {

                var view = $rootScope.currentView;

                if ($rootScope.isMicroPlayer && view !== 'login-view') {
                    return true;
                } else {
                    return false;
                }
            };

            $rootScope.isCdnMaintenance = function() {
                if ($rootScope.currentView === 'maintenance' && ($rootScope.cdn404 || $rootScope.cdn403)) {
                    return true;
                } else {
                    return false;
                }
            };

            function updateNotificationTours(t) {
                Object.keys(t).forEach(function(key) {
                    if (parseInt(key)) {
                        $rootScope.notiTourIds.push(parseInt(key));
                    }
                });
            }

            $rootScope.setNotifTours = function() {
                storage.notifTours.get().then(function(st) {
                    $rootScope.notiTourIds = [];

                    var closedTour = GmCXt.parseJSON(st.toursClosed);
                    updateNotificationTours(closedTour);

                    var viewedGuide = {};
                    if (GmCXt.isAnonymousUser()) {
                        viewedGuide = st.tourIdArray || {};
                    } else {
                        viewedGuide = GmCXt.user.settings.viewed_guide_notifications || {};
                    }

                    if (!GmCXt.isEmpty(viewedGuide)) {
                        updateNotificationTours(viewedGuide);
                    }

                    $rootScope.processNotificationTours(viewedGuide);
                });
            };

            $rootScope.togglePlayerMode = function() {
                $rootScope.uploadStepProgressBar = false;
                $rootScope.showStepCreatedSuccessMsg = false;
                
                if ($rootScope.playerMode) {
                    storage.showPlayer.set($rootScope.showPlayer);
                }

                $rootScope.initPlayerMode();

                $rootScope.resetCreatorData();

                if ($rootScope.showPlayer) {

                    $rootScope.resetAppData();

                } else {
                    $rootScope.resetCreatorData();
                    $rootScope.removeChatIcon();
                }

                getCurrentAppObj().then(function(currentApp) {
                    if ($rootScope.showPlayer) {
                        $rootScope.processActiveRequests();
                    } else {

                        hidePlayerModeActions();
                        $rootScope.resetSortFilter();
                    }
                    $rootScope.goToView();
                });
            };

            function hidePlayerModeActions() {
                $rootScope.sortOrderCategory();
                var message = {};
                message.action = "mgPlayerJSTest_action:hide_player_mode_actions";
                GmCXt.sendToParentWindow(message);
            }

            function isMicroPlayerMode() {
                if (GmCXt.getAppSetting('isMiniPlayer')) {
                    return true;
                } else {
                    return false;
                }
            }

            function showCloseBtn() {
                var message = {
                    action: "mgPlayerJSTest_action:show-panel-close-btn"
                };
                GmCXt.sendToParentWindow(message);
            }

            function hideCloseBtn() {
                var message = {
                    action: "mgPlayerJSTest_action:hide-panel-close-btn"
                };
                GmCXt.sendToParentWindow(message);
            }

            function updateAppFeatures(doNotSyncOrg) {
                if ($rootScope.showPlayer) {
                    var flag = isMicroPlayerMode();
                    $rootScope.isMicroPlayer = flag;

                    if (window.matchMedia("(max-width: 480px)").matches) {
                        $rootScope.isMicroPlayer = false;
                    }

                    if (flag) {
                        hideCloseBtn();
                    }
                } else {
                    $rootScope.isMicroPlayer = false;
                    showCloseBtn();
                }

                GmCXt.initPlayerModeFeatures($rootScope.showPlayer, $rootScope.isMicroPlayer, $rootScope.playerMode);

                if (!doNotSyncOrg) {
                    $rootScope.enableOrgFeatures($rootScope.organization);
                }

                $rootScope.FT = GmCXt.FT;

                $rootScope.updateLabels();
            }

            $rootScope.initPlayerMode = function(doNotSyncOrg) {
                updateAppFeatures(doNotSyncOrg);
                $rootScope.getPlayedStepsInfo();

                var msg = {
                    action: "mgPlayerJSTest_action:update:player_mode",
                    data: {
                        showPlayer: $rootScope.showPlayer,
                        isMiniPlayer: $rootScope.isMicroPlayer,
                        playerMode: $rootScope.playerMode
                    }
                };

                sendMessage(msg);
            };

            function isUrlPageTitleChanged(d) {

                if ($rootScope.pageUrl !== d.url) {
                    return true;
                } else if (JSON.stringify($rootScope.urlParts) !== JSON.stringify(d.urlParts)) {
                    return true;
                } else if (JSON.stringify(GmCXt.urlParts) !== JSON.stringify(d.urlParts)) {
                    return true;
                } else if (GmCXt.pageTitle !== d.title) {
                    return true;
                } else if (GmCXt.elAppName !== d.elAppName) {
                    return true;
                }
                return false;
            }

            $rootScope.updatePageUrl = function(d) {
                if (isUrlPageTitleChanged(d)) {
                    GmCXt.isNotificationReqd = true;
                } else {
                    return;
                }

                $rootScope.pageUrl = d.url;
                $rootScope.urlParts = d.urlParts;
                GmCXt.urlParts = d.urlParts;
                GmCXt.pageTitle = d.title;
                GmCXt.elAppName = d.elAppName;

                GmCXt.log(1, 'Updated urls and page info in side panel', {
                    info: d
                });
            };

            $rootScope.goToMaintenance = function() {
                $rootScope.showSpinner = false;
                $rootScope.maintenance = true;
                $rootScope.chatBot = false;

                GmCXt.redirect("#/maintenance");
            };

            $rootScope.syncAccessibility = function(a) {
                m = {
                    action: 'mgPlayerJSTest_action:update_accessibility',
                    data: a
                };
                GmCXt.sendToParentWindow(m);
            };
            $rootScope.syncUser = function() {

                var m = {
                    action: "mgPlayerJSTest_action:sync_user",
                    data: {
                        user: GmCXt.user
                    }
                };
                GmCXt.sendMessageToBackgroundService(m);
            };

            $rootScope.setMode = function() {
                if (GmCXt.FT.isPlayer) {
                    $rootScope.showPlayer = true;
                } else {
                    $rootScope.playerMode = true;
                }
            };

            $rootScope.fetchOrgFromAPI = function() {
                var promise = new Promise(function(resolve, reject) {

                    function cb(_org) {
                        $rootScope.saveOrganization(_org);
                        $rootScope.showWidget();
                        resolve(true);
                    }

                    api.getOrganization(cb);
                });

                return promise;
            };

            $rootScope.checkShowPubBtn = function(tour) {
                var flag = false;
                var pubEnvs = tour.tour_settings.app_publish_env;
                var stepCount = parseInt(tour.step_count);
                var hasSteps = (stepCount > 0 || $rootScope.isHelpArticle(tour) || $rootScope.isBotGuide(tour));
                var showPublished = true;

                if (tour.is_published && $rootScope.appEnvs.length === 1 &&
                    ((pubEnvs && pubEnvs.indexOf($rootScope.appEnvs[0]) !== -1) ||
                        !pubEnvs)
                ) {
                    showPublished = false;
                }

                if ($rootScope.FT.publish && $rootScope.isOwnerOrAppAdmin() &&
                    hasSteps &&
                    (($rootScope.fqdn && showPublished) ||
                        (!tour.is_published && ($rootScope.appEnvs.length === 0 || !pubEnvs || !$rootScope.fqdn))
                    )
                ) {
                    flag = true;
                }

                return flag;
            };

            $rootScope.showPublishBtn = function(tour) {
                var flag = false;
                if ($rootScope.checkShowPubBtn(tour)) {
                    if (tour.tour_settings.visibilitySettings && !GmCXt.checkScheduleTime(tour)) {
                        flag = false;
                    } else {
                        flag = true;
                    }
                }
                return flag;
            };

            $rootScope.showSchedulePublish = function(tour) {
                var flag = false;

                if ($rootScope.appEnvs.length && $rootScope.checkShowPubBtn(tour)) {
                    if (tour.tour_settings.visibilitySettings && !GmCXt.checkScheduleTime(tour)) {
                        flag = true;
                    } else {
                        flag = false;
                    }
                } else if (tour.is_published) {
                    if (tour.tour_settings.visibilitySettings && !GmCXt.checkScheduleTime(tour)) {
                        flag = true;
                    } else {
                        flag = false;
                    }
                }
                return flag;
            };

            $rootScope.showUnpublish = function(tour) {
                var flag = true;
                if ($rootScope.appEnvs.length) {
                    flag = true;
                } else if (tour.is_published && tour.tour_settings.visibilitySettings) {
                    flag = false;
                }
                return flag;
            };

            $rootScope.showTourPubEnv = function(t) {
                var pubEnvs = t.tour_settings.app_publish_env || $rootScope.appEnvs;
                var msg = '';

                if (pubEnvs && pubEnvs.length && t.is_published) {

                    for (var i = 0; i < pubEnvs.length; i++) {

                        if ($rootScope.appEnvs.indexOf(pubEnvs[i]) !== -1) {
                            if (!msg) {
                                msg = $rootScope.labels.pubIn + $rootScope.updateEnvNames(pubEnvs[i]);
                            } else {
                                msg += ", " + $rootScope.updateEnvNames(pubEnvs[i]);
                            }
                        }
                    }
                }
                return msg;
            };

            $rootScope.showPublishPopup = function(tour, t) {
                if ($rootScope.publishStatus === 'publish') {
                    var popupMsg = '';

                    if ($rootScope.isTooltip(tour)) {
                        popupMsg = $rootScope.labels.tourpublishMsg2;
                    } else if ($rootScope.isOnboarding(tour)) {
                        popupMsg = $rootScope.labels.tutorialGuidePublishMsg;
                    } else if ($rootScope.isBotGuide(tour)) {
                        popupMsg = $rootScope.labels.botTourPublishMsg;
                    } else {
                        popupMsg = $rootScope.labels.tourpublishMsg1;
                    }

                    $rootScope.showSpinner = false;
                    modal.open(popupMsg, 'success', null, null, null, t);
                }
            };

            $rootScope.getInsightsHandsOffToken = function() {
                var promise = new Promise(function(resolve, reject) {
                    GmCXt.api.getHandOffToken().then(function(result) {
                        var handsOffToken = result.data['handoff-token'];
                        if (handsOffToken) {
                            resolve(handsOffToken);
                        } else {
                            resolve(false);
                        }
                    }).catch(function() {});
                });

                return promise;
            };

            $rootScope.getSentiments = function(isExit) {
                var promise = new Promise(function(resolve, reject) {
                    var options = {};
                    options.app_code = $rootScope.appList['app:' + $rootScope.activeAppId].external_id;
                    options.pageIndex = 1;
                    options.pageSize = 100;
                    options.user = $rootScope.user;
                    if (isExit) {
                        options.app_code = '';
                    }

                    $rootScope.sentiments = false;

                    GmCXt.api.getSentiments(options).then(function(res) {
                        var data = res.data;
                        if (data && data.sentiments) {
                            $rootScope.sentiments = data.sentiments;
                            resolve(data.sentiments);
                        } else {
                            resolve(false);
                        }
                    }).catch(function() {
                        resolve(false);
                    });
                });

                return promise;
            };

            $rootScope.getConversations = function(isExit) {
                var promise = new Promise(function(resolve, reject) {
                    var options = {};
                    options.app_code = $rootScope.appList['app:' + $rootScope.activeAppId].external_id;
                    options.pageIndex = 1;
                    options.pageSize = 100;
                    options.user = $rootScope.user;
                    if (isExit) {
                        options.app_code = '';
                    }

                    $rootScope.conversations = false;

                    GmCXt.api.getBotConvList(options).then(function(res) {
                        var data = res.data;
                        if (data && data.conversations) {
                            $rootScope.conversations = data.conversations;
                            resolve(data.conversations);
                        } else {
                            resolve(false);
                        }
                    }).catch(function() {
                        resolve(false);
                    });
                });

                return promise;
            };

            $rootScope.getSegmentGroupList = function() {
                var d = {
                    organization_id: GmCXt.organization.organization_id
                };

                var segmentData = {
                    list: [],
                    time: Date.now()
                };

                return new Promise(function(resolve, reject) {

                    var cb = function(g) {
                        segmentData.list = g;
                        storage.segmentGroupData.set(segmentData);
                        resolve(segmentData.list);
                    };

                    if (GmCXt.inPlayer) {

                        segmentData.list = GmCXt.organization.segment_groups;
                        storage.segmentGroupData.set(segmentData);
                        resolve(segmentData.list);

                    } else {
                        GmCXt.api.getSegmentGroupList(d).then(function(res) {

                            GmCXt.validateApiResp(cb,
                                'segment/group/list?organization_id=',
                                res.data.groups,
                                GmCXt.model.segmentGroups);

                        }).catch(function() {
                            resolve(segmentData.list);
                        });
                    }

                });
            };

            $rootScope.getAllSegments = function(isUpdate) {
                return new Promise(function(resolve, reject) {
                    if (isUpdate) {
                        $rootScope.getSegmentGroupList().then(function(data) {
                            resolve(data);
                        });
                    } else {
                        storage.segmentGroupData.get().then(function(segmentList) {
                            if (segmentList.length) {
                                resolve(segmentList);
                            } else {
                                $rootScope.getSegmentGroupList().then(function(data) {
                                    resolve(data);
                                });
                            }
                        });
                    }
                });
            };

            function getCatIndexInApp(app, id) {
                var catIndex = '';
                angular.forEach(app.categories, function(cat, index) {
                    if (parseInt(cat.category_id) === parseInt(id)) {
                        catIndex = index;
                    }
                });
                return catIndex;
            }

            function getGuideIndexInCat(cat, id) {
                var guideIndex = '';
                angular.forEach(cat.tours, function(tour, index) {
                    if (parseInt(tour.tour_id) === parseInt(id)) {
                        guideIndex = index;
                    }
                });
                return guideIndex;
            }

            function getStepIndexInGuide(guide, id) {
                var stepIndex = '';
                angular.forEach(guide.steps, function(step, index) {
                    if (parseInt(step.step_id) === parseInt(id)) {
                        stepIndex = index;
                    }
                });
                return stepIndex;
            }

            $rootScope.updateGuideInPublishedTour = function(guide, remove) {
                var found = false;
                angular.forEach($rootScope.publishedTours, function(tour, index) {
                    if (parseInt(tour.tour_id) === parseInt(guide.tour_id)) {

                        found = true;

                        if (remove) {
                            $rootScope.publishedTours.splice(index, 1);
                        } else {
                            $rootScope.publishedTours[index] = guide;
                        }

                    }
                });

                if (!found && !remove) {
                    $rootScope.publishedTours.push(guide);
                }
            };

            function updateGuideJson(updatedJson) {

                $rootScope.checkAppList().then(function() {
                    var guide = GmCXt.validateDataModel(updatedJson, GmCXt.model.guide);
                    var currApp = $rootScope.appList['app:' + $rootScope.activeAppId];
                    var catIndex = getCatIndexInApp(currApp, guide.category_id);
                    var guideIndex = getGuideIndexInCat(currApp.categories[catIndex], guide.tour_id);

                    currApp.categories[catIndex].tours[guideIndex] = updatedJson;
                    $rootScope.appList["app:" + $rootScope.activeAppId] = currApp;
                    storage.appData.set($rootScope.appList);

                    $rootScope.updateGuideInPublishedTour(guide);

                    var tourViewPage = angular.element('#tour-view-page-container').scope();
                    tourViewPage.refreshView();
                });

            }

            function updateStepJson(updatedJson, tour) {

                $rootScope.checkAppList().then(function() {
                    var step = GmCXt.validateDataModel(updatedJson, GmCXt.model.step);
                    var currApp = $rootScope.appList['app:' + $rootScope.activeAppId];
                    var catIndex = getCatIndexInApp(currApp, tour.category_id);
                    var guideIndex = getGuideIndexInCat(currApp.categories[catIndex], step.tour_id);
                    var stepIndex = getStepIndexInGuide(currApp.categories[catIndex].tours[guideIndex], step.step_id);

                    currApp.categories[catIndex].tours[guideIndex].steps[stepIndex] = updatedJson;
                    $rootScope.appList["app:" + $rootScope.activeAppId] = currApp;
                    storage.appData.set($rootScope.appList);

                    var tourViewPage = angular.element('#tour-view-page-container').scope();
                    tourViewPage.refreshView();
                });

            }

            $rootScope.editJson = function(json, type, tour) {
                var cb = function(r) {
                    var updatedJson = editor.get();
                    if (updatedJson) {
                        modal.close();
                        if (type === 'org') {
                            var o = GmCXt.validateDataModel(updatedJson, GmCXt.model.organization);
                            $rootScope.saveOrganization(o);
                        } else if (type === 'guide') {
                            updateGuideJson(updatedJson);
                        } else if (type === 'step') {
                            updateStepJson(updatedJson, tour);
                        }
                    } else {
                        GmCXt.toastMsg('Invalid JSON').show();
                    }
                };
                modal.openJsonEdit(json, type, cb);
                var editor = new JsonEditor('#mgPlayerJSTest_json-editor', json);
            };

            $rootScope.guideViewOnly = function(tour) {
                var show = false;

                if (!$rootScope.isUserRole() && (tour && (tour.is_published || $rootScope.isLocked(tour)))) {
                    show = true;
                }

                return show;
            };

            $rootScope.disableTourSettingEdit = function(tour) {
                var show = false;

                if (!$rootScope.isUserRole() && (tour && $rootScope.isLocked(tour))) {
                    show = true;
                }

                return show;
            };

            $rootScope.showCatInList = function(cat) {
                var showCat = false;
                if (GmCXt.inPlayer) {
                    if (cat && cat.tours) {
                        showCat = validateTourType(cat.tours);
                    } else if (cat && cat.sub_categories) {
                        showCat = $rootScope.showSubCatInList(cat.sub_categories);
                    }
                } else {
                    showCat = true;
                }
                return showCat;
            };

            $rootScope.showSubCatInList = function(subcategories) {

                var showSubCat = false;
                for (var i = 0; i < subcategories.length; i++) {

                    if (subcategories[i].sub_categories) {
                        showSubCat = $rootScope.showSubCatInList(subcategories[i].sub_categories);

                    } else if (subcategories[i].tours && subcategories[i].tours.length && validateTourType(subcategories[i].tours)) {
                        return true;
                    }
                    if (showSubCat) {
                        return true;
                    }
                }
                return showSubCat;
            };

            function validateTourType(tours) {
                for (var i = 0; i < tours.length; i++) {
                    var t = tours[i];
                    if (t.tour_type.indexOf('walkthrough_tour') > -1 ||
                        t.tour_type.indexOf('onboarding_tour') > -1 ||
                        t.tour_type.indexOf('help_article') > -1) {
                        return true;
                    }
                }
                return false;
            }

            $rootScope.logout = logoutService.logout;
        };

        GmCXt.storage().get(['screen_recorder_close']).then(function(r) {
            if (r.screen_recorder_close) {
                $rootScope.isScreenRecorderClose = r.screen_recorder_close;
                var m = {
                    action: "mgPlayerJSTest_action:show_recording_off",
                };
                GmCXt.sendMessageToBackgroundService(m);
            } else {
                $rootScope.isScreenRecorderClose = false;
            }
        });
        $rootScope.getSteps = function(options) {
            var promise = new Promise(function(resolve, reject) {
                api.getTour(options, function(_tour) {
                    if ($rootScope.notDefaultLang()) {
                        _tour = $rootScope.getTranslatedTourAndSteps(_tour, $rootScope.language);
                        resolve(_tour);
                    }
                    resolve(_tour);
                });
            });
            return promise;
        };

        $rootScope.isRawChromeBlob = function(file) {
            return file.indexOf('blob:') !== 0 ? false : true;
        };

        $rootScope.getLastAutomationStep = function(steps, step) {
            var automationSteps = $rootScope.getAutomationSteps(steps, step);
            if (automationSteps.length > 0) {
                step = automationSteps[automationSteps.length - 1];
            }
            return step;
        };

        $rootScope.setPreviousDataStep = function(step, tour, addStepType) {
            if (!$rootScope.prevStepData) {
                $rootScope.prevStepData = {};
            }

            if (addStepType === 'after') {
                step = $rootScope.getLastAutomationStep(tour.steps, step);
            }

            if (step) {
                if (addStepType === 'before') {
                    step = $rootScope.getPrevStepFromTour(step.step_id, tour);
                }
                $rootScope.prevStepData.step_id = angular.copy(step.step_id);
                $rootScope.prevStepData.step_type = angular.copy(step.step_type);
                $rootScope.prevStepData.step_settings = angular.copy(step.step_settings);
                $rootScope.prevStepData.type = addStepType;
                if (step.branch_index) {
                    $rootScope.prevStepData.branch_index = angular.copy(step.branch_index);
                }
            }
            $rootScope.prevStepData.tour = tour;
        };

        $rootScope.checkTourRules = function(tour) {

            return new Promise(function(resolve, reject) {

                var tourSettings = tour.tour_settings;
                var rules = tourSettings.rules;

                var rulesCallBack = function(result) {
                    if (result.valid)
                        resolve('valid');
                    else
                        resolve('invalid');
                };

                if (!rules.length) {
                    resolve('noRules');
                } else {
                    var data = {
                        rules: rules,
                        tour: tour,
                        timeoutVal: GmCXt.t.ruleTimeOut10s,
                        timeout: GmCXt.t.ruleTimeOut10s,
                        cb: rulesCallBack,
                        isTour: true,
                        initiator: "guide"
                    };

                    GmCXt.ruleEngine.queue(data);
                }
            });
        };

        $rootScope.sortTourSteps = function(sortedSteps, originalSteps) {
            var finalSteps = [];
            sortedSteps.forEach(function(sortedStep) {
                for (var i = 0; i < originalSteps.length; i++) {

                    if (sortedStep.step_id === originalSteps[i].step_id) {
                        originalSteps[i].step_order = sortedStep.step_order.toString();
                        finalSteps.push(originalSteps[i]);
                    }
                }
            });
            return finalSteps;
        };

        $rootScope.getAutomationStepsInBranching = function(step, scope, index) {
            var steps = [];
            step = $rootScope.getNextStepFromPlayStructure(step.step_id, scope, index);
            while (GmCXt.isAutomationStep(step)) {
                steps.push(step);
                step = $rootScope.getNextStepFromPlayStructure(step.step_id, scope);
            }
            return steps;
        };

        $rootScope.getPreviousStepFromPlayStructure = function(stepId, scope) {
            var nA = angular.copy($rootScope.getNodeFromTail(stepId, scope.tour.tour_settings.play_structure));
            if (nA) var previousStep = $rootScope.getStepFromTour(nA.id, scope.tour);
            return previousStep;
        };

        $rootScope.getNextStepFromPlayStructure = function(stepId, scope, branchIndex) {
            var cN = angular.copy($rootScope.getNode(stepId, scope.tour.tour_settings.play_structure)); //Current Node
            var nB;

            if (branchIndex !== null && branchIndex !== undefined && branchIndex !== "") {
                nB = angular.copy($rootScope.getNode(cN.branch[parseInt(branchIndex)].tail, scope.tour.tour_settings.play_structure)); //Node Below

            } else {
                nB = angular.copy($rootScope.getNode(cN.tail, scope.tour.tour_settings.play_structure)); //Node Below
            }
            if (nB) {
                var step = $rootScope.getStepFromTour(nB.id, scope.tour); //Step Below
            }
            return step;
        };

        $rootScope.getAutomationSteps = function(steps, currentStep) {
            var automationSteps = [];
            var i = 0;
            if (currentStep) {
                i = parseInt(currentStep.step_order);
            }

            // Check if next step exist. Note - StepOrder start from "1"
            if (steps[i]) {
                while (GmCXt.isAutomationStep(steps[i])) {
                    automationSteps.push(steps[i]);
                    i++;
                }
            }
            return automationSteps;
        };

        $rootScope.isOnlySurveyGuide = function(tour) {

            var isSurveyOnly = true;
            if (tour && tour.steps.length > 0) {
                for (var i = 0; i < tour.steps.length; i++) {
                    if (tour.steps[i] && tour.steps[i].step_type !== GmCXt.STEP_TYPE_SURVEY) {
                        isSurveyOnly = false;
                        break;
                    }
                }
            } else {
                isSurveyOnly = false;
            }

            return isSurveyOnly;
        };

        $rootScope.isOnlyTransportGuide = function(tour) {

            var isOnlyTransportGuide = true;
            if (tour && tour.steps.length > 0) {
                for (var i = 0; i < tour.steps.length; i++) {
                    if (tour.steps[i] && tour.steps[i].step_type !== GmCXt.STEP_TYPE_TRANSPORT) {
                        isOnlyTransportGuide = false;
                        break;
                    }
                }
            } else {
                isOnlyTransportGuide = false;
            }

            return isOnlyTransportGuide;
        };

        $rootScope.setTour = creatorUpdate.setTour;
        $rootScope.addTourList = creatorUpdate.addTourList;
        $rootScope.deleteCategoryServerUpdate = creatorUpdate.deleteCategoryServerUpdate;
        $rootScope.isUpdateNeeded = creatorUpdate.isUpdateNeeded;
        $rootScope.checkCurrentViewForUpdate = creatorUpdate.checkCurrentViewForUpdate;
        $rootScope.updateServerUpdateList = creatorUpdate.updateServerUpdateList;
        $rootScope.updateTourProperty = creatorUpdate.updateTourProperty;
        $rootScope.deleteTourServerUpdate = creatorUpdate.deleteTourServerUpdate;

        $rootScope.getTourFromId = function(tId, cId) {

            var currentTour = {};

            if (cId && $rootScope.allTourList['cat_' + cId]) {
                currentTour = $rootScope.allTourList['cat_' + cId]['tour_' + tId];
            } else {
                for (var cat in $rootScope.allTourList) {

                    if ($rootScope.allTourList[cat]['tour_' + tId]) {
                        currentTour = $rootScope.allTourList[cat]['tour_' + tId];
                        break;
                    }
                }
            }

            return currentTour;
        };

        $rootScope.sortOrderCategory = function() {
            if (!GmCXt.isPlayer()) {
                $rootScope.sortType = '';
                $rootScope.descOrder = false;
            }
        };

        $rootScope.filterPublished = function(data) {

            var publishedData = data.filter(function(d) {
                return d.is_published;
            });

            return publishedData;
        };

        $rootScope.filterUnpublished = function(data) {

            var publishedData = data.filter(function(d) {
                return !d.is_published;
            });

            return publishedData;
        };

        // Attach a function to the rootScope so it can be accessed by "orderBy"
        $rootScope.natural = function(field) {
            return function(item) {
                return naturalService.naturalValue(item[field]);
            };
        };

        $rootScope.validateAllRulesExceptSelectEl = function(allTours, returnOnAnyValid) {

            var d = {
                tours: [],
                hasURLMatch: false,
                hasValidRule: false
            };

            if (allTours) {

                var path = (GmCXt.urlParts.pathname === '/') ? '' : GmCXt.urlParts.pathname;
                if (path && path.indexOf('/') !== 0) {
                    path = '/' + path;
                }
                var currentUrl = GmCXt.getHostnameFromUrl(GmCXt.urlParts.fullUrl) + path;
                currentUrl = currentUrl.toLowerCase();

                var urlTours = [];
                var rulesTours = [];
                var startPointTours = [];

                for (var i = 0; i < allTours.length; i++) {

                    var tour = allTours[i];
                    var tourSettings = tour.tour_settings;

                    var hasRule = (tourSettings.rules.length && tourSettings.rules[0].condition);
                    var isValidRule = false;

                    if (tour.tour_url && !hasRule) {
                        var tourUrl = tour.tour_url.toLowerCase();
                        if (tourUrl.indexOf(currentUrl) >= 0 && tour.is_published) {
                            urlTours.push(tour);

                            d.hasURLMatch = true;

                            if (returnOnAnyValid) {
                                return d;
                            }
                        }
                    } else if (hasRule) {

                        if (GmCXt.ruleEngine.hasRuleType(tourSettings.rules, ['Select Element', 'Select Table', 'Get Validity', 'Variables'])) {
                            isValidRule = true;
                        } else {

                            var oldRegEx = false;
                            if (GmCXt.legacyWildChar(tourSettings.version)) {
                                oldRegEx = true;
                            }
                            isValidRule = GmCXt.ruleEngine.evaluateRules(tourSettings.rules, oldRegEx);

                            if (isValidRule) { //valid non el rule
                                d.hasValidRule = true;
                                tour.ruleValidated = true;

                                if (returnOnAnyValid) {
                                    return d;
                                }
                            }
                        }

                        if (isValidRule) {
                            rulesTours.push(tour);
                        }
                    }

                    var startPoints = tour.tour_settings.start_point_info;
                    if (tour.is_published && startPoints && startPoints.length) {
                        for (var j = 0; j < startPoints.length; j++) {
                            var startPoint = startPoints[j];
                            var stepUrl = startPoint.step_url.toLowerCase();
                            if (stepUrl.indexOf(currentUrl) >= 0) {
                                startPointTours.push(tour);
                                break;
                            }
                        }
                    }

                }

                d.tours = GmCXt.arrayMerge(startPointTours, GmCXt.arrayMerge(urlTours, rulesTours));
            }

            return d;
        };

        $rootScope.checkTourType = function(tour) {

            if ($rootScope.isTooltip(tour)) {
                return false;
            }

            if (!window.matchMedia("(max-width: 480px)").matches && !GmCXt.isMiniPlayer) {
                if ($rootScope.isCADGuide(tour)) {
                    return false;
                }

                if (!$rootScope.isDefaultGuide(tour) && !$rootScope.isDesktopGuide(tour)) {
                    return false;
                }
            }

            if ($rootScope.isBeacon(tour) && !$rootScope.currentPageBeacon) {
                return false;
            }

            if ($rootScope.isTrackingGuide(tour)) {
                return false;
            }

            return true;
        };

        $rootScope.filterDefaultGuides = function(tours) {

            tours = tours.filter(function(tour) {
                if (window.matchMedia("(max-width: 480px)").matches && !GmCXt.isMiniPlayer) {
                    if ($rootScope.isDesktopGuide(tour))
                        return tour;
                } else {
                    if ($rootScope.isDefaultGuide(tour) || $rootScope.isDesktopGuide(tour))
                        return tour;
                }
            });
            return tours;
        };

        $rootScope.filterCurrentPageTourTypes = function(tours) {

            tours = tours.filter(function(tour) {
                if ($rootScope.checkTourType(tour))
                    return tour;
            });
            GmCXt.log(30, "FILTERED current page tours", tours);
            return tours;
        };

        $rootScope.isBotTourPlayed = function(tour) {
            var isBotTourExist = false;

            for (var i = 0; i < $rootScope.botTourPlayList.length; i++) {
                if ($rootScope.botTourPlayList[i].tour_id === tour.tour_id) {
                    isBotTourExist = true;
                    break;
                }
            }
            return isBotTourExist;
        };

        $rootScope.filterBotGuides = function(tours) {
            var filteredTour = [];
            tours = tours.filter(function(tour) {
                if ($rootScope.isBotGuide(tour)) {
                    return tour;
                } else if ($rootScope.botTourPlayList && $rootScope.botTourPlayList.length) {
                    if (tour.tour_settings.enableBot && !$rootScope.isBotTourPlayed(tour)) {
                        return tour;
                    }
                } else {
                    if (tour.tour_settings.enableBot) return tour;
                }
            });
            return tours;
        };

        $rootScope.reEvalRules = function(t) {
            if (!$rootScope.ruleCheck) return true;
            var elRule = GmCXt.ruleEngine.hasRuleType(t.tour_settings.rules, ['Select Element']);
            if (!t.tour_settings.ruleCheckOnClick && !GmCXt.isEmpty($rootScope.cTours) &&
                $rootScope.cTours.indexOf(t.tour_id) >= 0 && !elRule) {
                return false;
            }

            return true;
        };

        $rootScope.queueRuleForCP = function(tour, index, cb, event, initiator) {
            var ts = tour.tour_settings;
            var rules = (ts.rules && ts.rules.length) ? ts.rules : [];

            if ((event === 'page_click' && !$rootScope.reEvalRules(tour)) || tour.ruleValidated) {

                GmCXt.log(30, "SKIP RULE CHECK " + initiator + ": " + GmCXt.tourLog(tour));

                cb({
                    tour: tour,
                    valid: true
                });
            } else {

                GmCXt.log(30, "RULE CHECK " + initiator + " :" + GmCXt.tourLog(tour));

                var obj = {
                    tour: tour,
                    rules: rules,
                    cb: cb,
                    index: index,
                    timeoutVal: GmCXt.t.ruleTimeOut15ms,
                    timeout: GmCXt.t.ruleTimeOut15ms,
                    isTour: true,
                    initiator: initiator
                };

                GmCXt.ruleEngine.queue(obj);
            }
        };

        $rootScope.validateSelectElRules = function(tours, event) {

            var promise = new Promise(function(resolve, reject) {

                $rootScope.msgSentCurrentPageCount = false;
                var toursValidated = 0;

                for (var i = 0; i < tours.length; i++) {

                    if ($rootScope.msgSentCurrentPageCount) break;

                    var tour = tours[i];

                    $rootScope.queueRuleForCP(tour, i, onContextualRuleMatch, event, 'currentPageIndicator');
                }

                function onContextualRuleMatch(result) {

                    if ($rootScope.msgSentCurrentPageCount) return;

                    toursValidated++;

                    if (result.valid) {
                        resolve(true);
                    } else if (toursValidated === tours.length) {
                        resolve(false);
                    }
                }
            });

            return promise;
        };

        $rootScope.loginFromConsole = function(data) {

            var Userdata = {
                email_id: data.email,
                password: data.password,
                keep_login: 1
            };

            var onFail = function() {
                $rootScope.clearSession();
            };
            var onSuccess = function(_user) {
                $rootScope.onUserSignin(_user, data.sso);
            };

            api.userSignIn(Userdata, onSuccess, onFail);
        };

        $rootScope.searchFilterDropdown = function($event) {
            $event.stopPropagation();
            if ($rootScope.searchFilterDropDownVisible) {
                $rootScope.hideSearchFilterDropdown($event);
            } else {
                $rootScope.searchFilterDropDownVisible = true;
                mg$('.mgPlayerJSTest_filter-sorting-dropdown-wrapper').slideDown(200);
                $rootScope.addPanelOverlay();
                $rootScope.showPanelOverlay();
                mg$('.mgPlayerJSTest_theme-mplayer-header').append("<div class='ege-panel-overlay'></div>");
                mg$('.mgPlayerJSTest_filter-sort-icon').addClass('mgPlayerJSTest_z-index mgPlayerJSTest_z-index-max');
                mg$('.mgPlayerJSTest_filter-sort-icon').addClass('mgPlayerJSTest_filter-active-state');
            }
        };

        $rootScope.hideSearchFilterDropdown = function($event) {
            $event.stopPropagation();
            $rootScope.searchFilterDropDownVisible = false;
            $rootScope.hidePanelOverlay();
            mg$('.mgPlayerJSTest_filter-sorting-dropdown-wrapper').slideUp(100);
            mg$('.mgPlayerJSTest_filter-sort-icon').removeClass('mgPlayerJSTest_z-index mgPlayerJSTest_z-index-max');
            mg$('.mgPlayerJSTest_filter-sort-icon').removeClass('mgPlayerJSTest_filter-active-state');
            if (!$rootScope.$$phase) $rootScope.$apply();
        };

        $rootScope.sortBy = function(descOrder, activeSfilter) {
            var obj = {};
            obj.activeSfilter = activeSfilter;
            obj.descOrder = descOrder;
            storage.activeSortFilter.set(obj);
        };

        $rootScope.markTaskGuideComplete = function(data) {
            var obj = {
                task_id: data.taskListId,
                guide_id: data.tourId
            };

            function markCompleteCB() {
                $rootScope.taskList = $rootScope.filterCompleatedTasks($rootScope.taskList);
                $rootScope.taskListGuidesCount($rootScope.taskList);
                $state.reload();
                $rootScope.showSpinner = false;
            }

            $rootScope.showSpinner = true;
            api.markTaskGuideComplete(obj, function() {
                var finalTL = $rootScope.taskList;
                var tIndex = $rootScope.getTaskListIndexById(data.taskListId);
                if (tIndex !== -1) {
                    if (!GmCXt.isEmpty(data.complete_count) && !GmCXt.isEmpty(data.total_count) && ((data.complete_count + 1) === data.total_count)) {
                        finalTL[tIndex].user_completed_guide_count = finalTL[tIndex].guide_count;
                        finalTL[tIndex].completed = true;
                    } else {
                        finalTL[tIndex].user_completed_guide_count = finalTL[tIndex].user_completed_guide_count + 1;
                    }
                    $rootScope.updateTaskList(finalTL).then(markCompleteCB);
                }

            });
        };

        $rootScope.updateTaskList = function(tl) {
            var promise = new Promise(function(resolve, reject) {
                storage.taskList.get().then(function(resp) {
                    if (!GmCXt.isEmpty(resp) && !GmCXt.isEmpty(resp.list)) {
                        var initTaskData = resp;
                        storage.taskList.remove();
                        resp.list = tl;
                        $rootScope.taskList = tl;
                        storage.taskList.set(tl, resp.time);
                        resolve();
                    }
                });
            });
            return promise;
        };

        $rootScope.markTaskGuideCompletePlayedOutside = function(data) {

            if ($rootScope.taskList && $rootScope.taskList.length > 0) {

                var filteredTask = $rootScope.taskList.filter(function(task) {
                    if (task.guides && task.guides.some(function(guide) {
                            return guide.tour_id.toString() === data.tourId;
                        })) {
                        return true;
                    } else if (task.folders) {
                        return task.folders.filter(function(folder) {
                            return folder.guides && folder.guides.some(function(guide) {
                                return guide.tour_id.toString() === data.tourId;
                            });
                        }).length > 0;
                    }
                    return false;
                });

                if (filteredTask.length > 0) {

                    filteredTask.forEach(function(task) {
                        var params = {
                            taskListId: task.task_list_id,
                            tourId: data.tourId,
                            complete_count: task.user_completed_guide_count,
                            total_count: task.guide_count
                        };
                        $rootScope.markTaskGuideComplete(params);
                    });

                }
            }

        };

        $rootScope.processTaskListByRules = function(list) {
            var filteredList = [];

            for (var i = 0; i < list.length; i++) {

                var l = list[i];

                if (l.task_list_setting) {
                    l.task_list_setting = GmCXt.parseJSON(l.task_list_setting);
                    var rules = l.task_list_setting.rules;

                    if (rules && rules.length > 0) {
                        if (GmCXt.ruleEngine.evaluateRules(rules)) {
                            filteredList.push(l);
                        }
                    } else {
                        filteredList.push(l);
                    }
                } else {
                    filteredList.push(l);
                }
            }

            $rootScope.taskListGuidesCount(filteredList);

            return filteredList;
        };

        $rootScope.getNode = function(id, playstructure) {
            var PS = playstructure;

            for (var i = 0; i < PS.length; i++) {
                if (PS[i].id === id) {
                    return PS[i];
                }
            }
        };

        $rootScope.getNodeFromTail = function(id, playstructure) {

            //This will return the node which has the id passed in its tail
            var stepToReturn;
            var PS = playstructure;

            for (var i = 0; i < PS.length; i++) {
                if (PS[i].tail === id) {
                    stepToReturn = PS[i];
                    break;
                } else if (PS[i].branch) {
                    for (var j = 0; j < PS[i].branch.length; j++) {
                        if (PS[i].branch[j].tail === id) {
                            stepToReturn = PS[i];
                            break;
                        }
                    }
                }
            }

            return stepToReturn;
        };

        $rootScope.filterCompleatedTasks = function(tl) {
            var filterCompTask = [];
            $rootScope.taskList.filter(function(t) {
                if (!t.completed) {
                    filterCompTask.push(t);
                }
            });
            return filterCompTask;
        };

        $rootScope.displayTaskListWidget = function(cb) {
            if (!GmCXt.isEmpty($rootScope.taskList)) {
                cb($rootScope.taskList);
                $rootScope.processTaskListByRules($rootScope.taskList);
            }
        };

        $rootScope.checkTaskSegmentation = function(taskList, cb) {
            var validTaskList = [];
            var segmentTaskList = [];

            function taskSegmentCB(t) {
                if (!GmCXt.isEmpty(t)) {
                    if (!validTaskList.includes(t.task)) validTaskList.push(t.task);
                    $rootScope.taskList = validTaskList;
                    $rootScope.displayTaskListWidget(cb);
                }
            }

            if (taskList.length > 0) {
                for (var i = 0; i < taskList.length; i++) {
                    if (!GmCXt.isEmpty(taskList[i].task_list_setting)) {
                        var ts = GmCXt.parseJSON(taskList[i].task_list_setting);
                        if (!GmCXt.isEmpty(ts.segment_groups)) {
                            var t = {
                                tour_id: taskList[i].task_list_id,
                                tour_title: taskList[i].task_list_title,
                                tour_settings: ts,
                                task: taskList[i]
                            };
                            segmentTaskList.push(t);
                        } else {
                            validTaskList.push(taskList[i]);
                        }
                    } else {
                        validTaskList.push(taskList[i]);
                    }
                }

                if (!GmCXt.isEmpty(segmentTaskList)) {
                    GmCXt.timeout(function() {
                        GmCXt.checkGuidesBasedOnSegment(segmentTaskList, taskSegmentCB, "taskListSeg");
                        $rootScope.taskList = validTaskList;
                        $rootScope.displayTaskListWidget(cb);
                    }, 0);
                } else {
                    $rootScope.displayTaskListWidget(cb);
                }
            } else {
                $rootScope.processTaskListByRules(taskList);
            }
        };

        $rootScope.getTaskListIndexById = function(taskId) {
            var i = -1;
            i = $rootScope.taskList.findIndex(function(task) {
                return task.task_list_id === taskId;
            });
            return i;
        };

        $rootScope.updateDetailInMainTaskList = function(taskDetailList) {
            var finalTaskList = $rootScope.taskList;
            if (!GmCXt.isEmpty(taskDetailList)) {
                for (var x = 0; x < taskDetailList.length; x++) {
                    var tIndex = $rootScope.getTaskListIndexById(taskDetailList[x].id);
                    if (tIndex !== -1) {
                        finalTaskList[tIndex].user_completed_guide_count = parseInt(taskDetailList[x].user_completed_guide_count);
                        finalTaskList[tIndex].guide_count = parseInt(taskDetailList[x].guide_count);
                        finalTaskList[tIndex].completed = taskDetailList[x].completed;
                    }
                }
            }
            $rootScope.taskList = finalTaskList;
        };

        $rootScope.getTaskListData = function(cb) {
            if ($rootScope.taskList) {
                $rootScope.taskList = $rootScope.filterCompleatedTasks($rootScope.taskList);
                if ($rootScope.guideSegmentation && GmCXt.inPlayer) {
                    $rootScope.checkTaskSegmentation($rootScope.taskList, cb);
                } else {
                    $rootScope.displayTaskListWidget(cb);
                }
            } else if (!GmCXt.onPrem()) {
                api.getTaskList().then(function(res) {
                    $rootScope.taskListApiCalled = false;
                    $rootScope.taskList = res.data.data.task_list;
                    if (!GmCXt.isEmpty($rootScope.taskList)) {
                        api.getTaskListDetails().then(function(resp) {
                            var taskDetail = resp.data.data.task_lists;
                            $rootScope.updateDetailInMainTaskList(taskDetail);
                            $rootScope.taskList = $rootScope.filterCompleatedTasks($rootScope.taskList);
                            storage.taskList.set($rootScope.taskList);

                            if ($rootScope.guideSegmentation && GmCXt.inPlayer) {
                                $rootScope.checkTaskSegmentation($rootScope.taskList, cb);
                            } else {
                                cb($rootScope.taskList);
                                $rootScope.processTaskListByRules($rootScope.taskList);
                            }
                        });
                    }
                }).catch(function() {});
            }
        };

        $rootScope.displyTaskList = function() {
            if ((GmCXt.isPlayer() && !GmCXt.inPlayer) || (GmCXt.inPlayer && GmCXt.activeAppId &&
                    !GmCXt.isEmpty(GmCXt.appList) && !GmCXt.isEmpty(GmCXt.appList['app:' + GmCXt.activeAppId]) &&
                    !GmCXt.isEmpty(GmCXt.appList['app:' + GmCXt.activeAppId].task_list_count) &&
                    parseInt(GmCXt.appList['app:' + GmCXt.activeAppId].task_list_count) > 0)) {
                return true;
            } else {
                return false;
            }
        };

        $rootScope.sendMessageToShowTaskListWidget = function() {
            if ($rootScope.displyTaskList()) {
                var taskListCb = function(taskList) {
                    $rootScope.processTaskListByRules(taskList);
                };

                if (!GmCXt.isEmpty(GmCXt.user) && GmCXt.isPlayer()) {
                    storage.taskList.get().then(function(resp) {
                        $rootScope.taskList = null;
                        if (!GmCXt.isEmpty(resp) && !GmCXt.isEmpty(resp.list)) {
                            $rootScope.taskList = resp.list;
                        }
                        $rootScope.getTaskListData(taskListCb);
                    });
                }
            }
        };

        $rootScope.openTaskList = function() {
            if ($rootScope.displyTaskList()) {
                if (mg$('.mgPlayerJSTest_push-notification-container').is(':visible')) {
                    mg$('.ege-panel').css({
                        'width': '500px',
                        'right': '-9550px'
                    });
                } else {
                    mg$('.ege-panel').css({
                        'width': '100%'
                    });
                    GmCXt.redirect("#/taskList");
                }
            }
        };

        $rootScope.cancelAutomationSelection = function() {
            $rootScope.automationSelectionMode = false;
            $rootScope.myGuidesFilter = true;
            $rootScope.categoryDataForAutomation = [];
        };

        $rootScope.guideHideForPlayer = function(ts) {
            var flag = false;
            if (ts.guideHideForP && $rootScope.FT.isPlayer) {
                flag = true;
            }
            return flag;
        };

        $rootScope.convertGmtToLocalTime = function(gmtDate) {
            var myDate = new Date(gmtDate + ' GMT');
            var month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
            var hours = myDate.getHours();
            var minutes = myDate.getMinutes();
            var ampm = hours >= 12 ? ' PM' : ' AM';
            minutes = minutes < 10 ? '0' + minutes : minutes;
            var strTime = hours + ':' + minutes + ampm;
            return myDate.getDate() + "/" + month[myDate.getMonth()] + "/" + myDate.getFullYear() + " " + strTime;
        };

        $rootScope.closeHistoryPopup = function() {
            $rootScope.showHistory = false;
            if (!$rootScope.$$phase) $rootScope.$apply();
            $rootScope.closeAppPopup();
        };

        $rootScope.resetSortFilter = function() {
            if (!$rootScope.FT.isPlayer) {
                $rootScope.activeSortFilter = '';
            }
        };

        $rootScope.onTourUpdateApiSuccess = function(t) {

            var pageScope = $rootScope.getPageScope();
            var view = $rootScope.currentView;

            var commonUpdate = new commonUpdateService($rootScope, storage, api, $state);

            $rootScope.setTour(t);

            if (pageScope) {
                if (view === "tour-view") {

                    t.steps = pageScope.tour.steps;
                    pageScope.gotTour(t);
                } else if (view === "tour-list") {
                    commonUpdate.updateTourInTourList(t.tour_id, t);
                }
            }
        };

        $rootScope.getApiLimit = function(length) {
            var l = Math.ceil(length / 50) || 1;
            return l * 50;
        };

        $rootScope.getBasePath = function(i) {
            var url = "";
            if (GmCXt.isExtension()) {
                url = GmCXt.getBrowserUrl(i);
            } else {
                if (GmCXt.isDefined(GmCXt.conf.baseUrl)) {
                    url = GmCXt.conf.baseUrl + i;
                } else {
                    url = GmCXt.conf.clientJsBaseUrl + i;
                }

            }

            return url;
        };

        $rootScope.getImageURL = function(url, imgStyle, ignoreCdn) {
            if (url) {
                if (ignoreCdn)
                    return url.split(".png")[0] + imgStyle;
                else {
                    return url.split(".png")[0] + imgStyle + $rootScope.getCdnSign();
                }
            }
        };

        $rootScope.reassignCatURls = function(urls, c) {
            for (var key in urls) {
                c[key] = urls[key];
            }
            return c;
        };

        $rootScope.assetExp = function(t) {
            t = t ? t : 0;

            var d = GmCXt.getCurrentTimeInMilSec() - t;
            return d > GmCXt.t.sync24;
        };

        $rootScope.syncTaskList = function(tlist) {
            var expiryTime = tlist.time + GmCXt.t_.hr24;

            if (Date.now() < expiryTime) {
                $rootScope.taskList = tlist.list;
                return tlist;
            } else {
                $rootScope.taskList = null;
                storage.taskList.remove();
                return null;
            }
        };

        $rootScope.syncSegmentData = function() {
            GmCXt.allSegments = $rootScope.allSegments;

            var m = {
                action: "mgPlayerJSTest_action:update_segment_group_data",
                data: {
                    allSegments: $rootScope.allSegments
                }
            };
            GmCXt.sendToParentWindow(m);
        };

        $rootScope.uploadImageLibrary = function(imageString) {
            var promise = new Promise(function(resolve, reject) {
                var formData = new FormData();
                formData.append('image_data', imageString.replace('data:image/jpeg;base64,', ''));

                $rootScope.showSpinner = true;
                var options = {
                    args: formData
                };
                GmCXt.api.uploadBase64Image(options).then(function(response) {
                    var data = response.data;
                    resolve(data);
                });
            });
            return promise;
        };

        $rootScope.getBreadcrumsCategories = function(t, d) {
            var data = [];
            data.tour = {
                tour_id: t.tour_id,
                category_id: t.category_id
            };
            $rootScope.mgTabData = d;
            $rootScope.isApiCallOn = true;
            $rootScope.showSpinner = true;
            $rootScope.switchViewAfterRefresh("tour-view", data);
        };

        function getSubCat(catList, catId) {

            var cat = catList.find(function(c) {
                return parseInt(c.category_id) === parseInt(catId);
            });

            if (!cat) {
                catList.forEach(function(c) {
                    if (c.sub_categories) {
                        cat = getSubCat(c.sub_categories, catId);
                    }
                });

            }

            return cat;
        }

        function updateContextualTourSteps(t) {

            if (GmCXt.isEmpty($rootScope.contextTours)) return;

            var tFound = false;

            var urls = Object.keys($rootScope.contextTours);

            urls.forEach(function(u) {

                if (tFound) return;

                var pageTitles = Object.keys($rootScope.contextTours[u]);

                pageTitles.forEach(function(pt) {

                    if (tFound) return;

                    var tours = $rootScope.contextTours[u][pt];

                    for (var i = 0; i < tours.length; i++) {
                        if (parseInt($rootScope.contextTours[u][pt][i].tour_id) === parseInt(t.tour_id)) {

                            tFound = true;
                            $rootScope.contextTours[u][pt][i] = t;
                            break;
                        }
                    }
                });
            });
        }

        $rootScope.updateTourToStorage = function(tour, remove, aId) {

            GmCXt.log(70, 'UPDATE TOUR: ' + GmCXt.tourLog(tour));

            if (!remove && !aId) {

                $rootScope.setTour(tour);
                GmCXt.log(70, 'UPDATE TOUR: Global updated' + GmCXt.tourLog(tour));
            }

            var appId = aId || $rootScope.activeAppId;
            var catId = tour.category_id;
            var tourId = tour.tour_id;

            var cat = false;

            //update contextTours with the steps
            updateContextualTourSteps(tour);

            if ($rootScope.appList["app:" + appId]) {

                if ($rootScope.appList["app:" + appId].categories) {
                    cat = $rootScope.appList["app:" + appId].categories.filter(function(c) {
                        return parseInt(c.category_id) === parseInt(catId);
                    })[0];
                }

                if (!cat && $rootScope.appList["app:" + appId].categories) {
                    var cats = $rootScope.appList["app:" + appId].categories;
                    for (var i = 0; i < cats.length; i++) {
                        if (cats[i].sub_categories) {
                            cat = getSubCat(cats[i].sub_categories, catId);
                        }
                        if (cat) break;
                    }

                }
            }

            if (!cat) {
                GmCXt.log(70, 'UPDATE TOUR: category not found' + GmCXt.tourLog(tour));
                return;
            }

            //find index of tour in cat
            var indexOfTour;

            if (cat.tours) {
                for (var i = 0; i < cat.tours.length; i++) {
                    if (parseInt(cat.tours[i].tour_id) === parseInt(tourId)) {
                        indexOfTour = i;
                        break;
                    }
                }
            }

            //replace updated tour in category
            if (indexOfTour >= 0) {

                if (remove) { // delete tour from cat list

                    cat.tours.splice(indexOfTour, 1);
                    GmCXt.log(70, 'UPDATE TOUR: tour REMOVED' + GmCXt.tourLog(tour));
                } else {

                    cat.tours.splice(indexOfTour, 1, tour);
                    GmCXt.log(70, 'UPDATE TOUR: tour UPDATED' + GmCXt.tourLog(tour));
                }

            } else if (!remove) {

                if (!cat.tours) {
                    cat.tours = [];
                }
                cat.tours.push(tour);
                GmCXt.log(70, 'UPDATE TOUR: tour ADDED' + GmCXt.tourLog(tour));
            }

            storage.appData.set($rootScope.appList);

            //update published Tours
            if (!aId) {
                $rootScope.updateGuideInPublishedTour(tour, remove);
            }

        };

        $rootScope.getDefaultSurveyStepIcon = function() {
            return GmCXt.conf.staticContentPath + 'survey_step.png';
        };

        $rootScope.getDefaultBotConvStepIcon = function() {
            return GmCXt.conf.staticContentPath + 'survey_step.png';
        };

        $rootScope.getDefaultTransportStepIcon = function() {
            return GmCXt.conf.staticContentPath + 'survey_step.png';
        };

        $rootScope.updateToursInCategoryStorage = function(catId, tours, remove, aId) {

            GmCXt.log(70, 'UPDATE TOURS in STORAGE: ', tours);

            if (!aId && !$rootScope.getCategory(catId)) {

                GmCXt.log(70, 'UPDATE TOURS in STORGAE: category not found. ' + catId);
                return;
            }

            var appId = aId || $rootScope.activeAppId;

            var cat = $rootScope.appList["app:" + appId].categories.filter(function(c) {
                return c.category_id === catId;
            })[0];

            if (!cat) {
                var cats = $rootScope.appList["app:" + appId].categories;
                for (var i = 0; i < cats.length; i++) {
                    if (cats[i].sub_categories) {
                        cat = getSubCat(cats[i].sub_categories, catId);
                    }
                    if (cat) {
                        GmCXt.log(70, 'UPDATE TOURS in STORGAE: sub category found. ' + catId);
                        break;
                    }
                }
            } else {
                GmCXt.log(70, 'UPDATE TOURS in STORGAE: category found. ' + catId);
            }

            if (remove) {

                GmCXt.log(70, 'UPDATE TOURS in STORGAE: REMOVED ' + catId);
                cat.tours = [];
            } else {

                GmCXt.log(70, 'UPDATE TOURS in STORGAE: UPDATED ' + catId);
                cat.tours = tours;

            }

            tours.forEach(function(t) {
                $rootScope.updateGuideInPublishedTour(t, remove);
            });

            storage.appData.set($rootScope.appList);

        };

        function getCatTrail(catList, catId) {
            var catTrail = [];

            var cat = catList.find(function(c) {
                return c.category_id === catId;
            });

            if (cat) {
                catTrail.push(cat.category_id);
            } else {
                catList.forEach(function(c) {
                    if (c.sub_categories) {
                        cat = getCatTrail(c.sub_categories, catId);
                    }
                });

            }

            return catTrail;
        }

        $rootScope.updateCategoryInStorgae = function(cat, remove, appId) {

            GmCXt.log(70, 'UPDATE CATEGORY IN STORAGE: ' + GmCXt.categoryLog(cat));

            appId = appId || $rootScope.activeAppId;

            if (!appId) return;

            var parentCats = $rootScope.appList["app:" + appId].categories;

            //find index of cat in app
            var indexOfCat;

            var catFound = false;

            if (parentCats.length && !parseInt(cat.parent_id)) {
                for (var i = 0; i < parentCats.length; i++) {
                    if (parentCats[i].category_id === cat.category_id) {
                        indexOfCat = i;
                        break;
                    }
                }
            } else if (!parentCats.length) {
                $rootScope.appList["app:" + appId].categories = [];
            }

            if (indexOfCat >= 0) { //category found in Parent categories

                GmCXt.log(70, 'UPDATE CATEGORY IN STORAGE: category FOUND' + GmCXt.categoryLog(cat));

                catFound = true;

                if (remove) {

                    $rootScope.appList["app:" + appId].categories.splice(indexOfCat, 1);
                    GmCXt.log(70, 'UPDATE CATEGORY IN STORAGE: category REMOVED' + GmCXt.categoryLog(cat));
                } else {

                    var catTours = $rootScope.appList["app:" + appId].categories[indexOfCat].tours;

                    if (catTours && (!cat.tours && cat.has_tour)) {

                        GmCXt.log(70, 'UPDATE CATEGORY IN STORAGE: keep category tours' + GmCXt.categoryLog(cat));
                        cat.tours = catTours;
                    } else {
                        var sc = $rootScope.appList["app:" + appId].categories[indexOfCat].categories;

                        if (sc && cat.has_child && !cat.categories) {
                            GmCXt.log(70, 'UPDATE CATEGORY IN STORAGE: keep category subcats' + GmCXt.categoryLog(cat));
                            cat.categories = sc;
                        }
                    }

                    $rootScope.appList["app:" + appId].categories.splice(indexOfCat, 1, cat);

                    GmCXt.log(70, 'UPDATE CATEGORY IN STORAGE: category UPDATED' + GmCXt.categoryLog(cat));
                }

            } else if (parseInt(cat.parent_id)) {

                var cats = $rootScope.appList["app:" + appId].categories;
                for (var i = 0; i < cats.length; i++) {

                    var subcat;

                    if (cats[i].sub_categories) {
                        subcat = getSubCat(cats[i].sub_categories, cat.category_id);
                    }

                    if (subcat) {
                        GmCXt.log(70, 'UPDATE TOURS in STORGAE: sub category found. ' + cat.category_id);
                        catFound = true;

                        if (remove) {
                            //delete subcat;
                        } else if (subcat.has_tour && subcat.tours) {
                            var st = GmCXt.createDeepCopy(subcat.tours);
                            cat.tours = st;

                            subcat = cat;

                        } else if (subcat.has_child && subcat.categories) {
                            var st = GmCXt.createDeepCopy(subcat.categories);
                            cat.categories = st;

                            subcat = cat;
                        }

                        break;
                    }
                }

            }

            if (!catFound && !remove && parseInt(cat.parent_id) === 0) {

                $rootScope.appList["app:" + appId].categories.push(cat);

                GmCXt.log(70, 'UPDATE CATEGORY IN STORAGE: category ADD' + GmCXt.categoryLog(cat));
            }

            storage.appData.set($rootScope.appList);
        };

        $rootScope.updateEnvNames = function(envName) {
            if (envName === "qa") {
                return $rootScope.labels.qa;
            } else if (envName === "stage") {
                return $rootScope.labels.stage;
            } else if (envName === "prod") {
                return $rootScope.labels.production;
            } else {
                var currentApp = $rootScope.appList['app:' + $rootScope.activeAppId];
                if (currentApp && currentApp.settings && currentApp.settings.app_env &&
                    currentApp.settings.app_env[envName]) {
                    return currentApp.settings.app_env[envName].name;
                }
            }
        };

        $rootScope.getUserList = function(cb) {
            var param = {
                limit: 100,
                offset: 0,
                owner_creator_filter: 1
            };

            function userListcb(response) {
                var userList = response.data.data.users;
                cb(userList);
            }
            api.getUserList(param, userListcb);

        };

        $rootScope.removeTour = function(catId, tourId, appId) {

            if (!appId) {
                if ($rootScope.allTourList['cat_' + catId]['tour_' + tourId]) {
                    delete $rootScope.allTourList['cat_' + catId]['tour_' + tourId];
                } else {
                    return;
                }
            }

            if (GmCXt.inPlayer) {

                $rootScope.updateTourToStorage({
                    tour_id: tourId,
                    category_id: catId,
                    application_id: appId
                }, true, appId);
            }

            if (appId) return;

            storage.allTourList.set($rootScope.allTourList);

            var cat = $rootScope.getCategory(catId);

            if (cat && GmCXt.FT.creatorApp) {
                var totalTours = parseInt(cat.total_unpublish_tour);
                totalTours--;
                totalTours = (totalTours >= 0) ? totalTours : 0;

                $rootScope.updateCategory(cat, "total_unpublish_tour", totalTours.toString());

                if (parseInt(cat.total_unpublish_tour) === 0 && parseInt(cat.total_publish_tour) === 0) {
                    $rootScope.updateCategory(cat, "has_tour", false);
                }
            }
        };

        $rootScope.checkKeywordLimit = function(tags, e) {
            if (tags.length > 24) {
                GmCXt.toastMsg($rootScope.labels.keywordLimit).show();
                e.preventDefault();
                return (tags.length === 0);
            }
        };

        $rootScope.uploadFileInChunk = function(result, file, cb) {
            var reader = new FileReader();
            var blobUri = '';
            var fileName = '';
            var signature = '';
            var fileId = 0;
            var callbackData = {};

            var maxBlockSize = 512 * 1024;
            var currentFilePointer = 0;
            var totalBytesRemaining = 0;
            var bytesUploaded = 0;
            var blockIds = [];
            var eTagsArr = [];

            function uploadFile() {
                var fileSize = file.size;
                if (fileSize < maxBlockSize) {
                    maxBlockSize = fileSize;
                }
                totalBytesRemaining = fileSize;

                var d = result.data.data.upload_url;

                blobUri = d.blob_uri;
                fileName = d.file_name;
                signature = (d.signature).split('?')[1];
                fileId = d.file_id;

                callbackData.fileId = fileId;
                callbackData.fileName = fileName;
                callbackData.blobUri = blobUri;

                uploadFileInBlocks();

            }

            function uploadFileInBlocks() {
                if (totalBytesRemaining > 0) {

                    var fileContent = file.slice(currentFilePointer, currentFilePointer + maxBlockSize);
                    var blockId = "block-" + pad(blockIds.length, 6);

                    blockIds.push(btoa(blockId));
                    reader.readAsArrayBuffer(fileContent);
                    currentFilePointer += maxBlockSize;
                    totalBytesRemaining -= maxBlockSize;
                    if (totalBytesRemaining < maxBlockSize) {
                        maxBlockSize = totalBytesRemaining;
                    }

                } else {
                    commitBlockList();
                }
            }

            function pad(number, length) {
                var str = '' + number;
                while (str.length < length) {
                    str = '0' + str;
                }
                return str;
            }

            function commitBlockList() {

                var uri = blobUri + '/' + fileName + '?comp=blocklist&' + signature;
                var requestBody = '<?xml version="1.0" encoding="utf-8"?><BlockList>';
                var svcType = "PUT";

                for (var i = 0; i < blockIds.length; i++) {
                    requestBody += '<Latest>' + blockIds[i] + '</Latest>';
                }
                requestBody += '</BlockList>';
                mg$.ajax({
                    url: uri,
                    type: svcType,
                    data: requestBody,
                    beforeSend: function(xhr) {
                        xhr.setRequestHeader('x-ms-blob-content-type', file.type);
                    },
                    success: function(data, status) {
                        cb(callbackData);
                    },
                    error: function(xhr, desc, err) {
                        console.dir(err);
                    }
                });
            }

            reader.onloadend = function(evt) {

                if (evt.target.readyState === FileReader.DONE) {

                    var uri = blobUri + '/' + fileName + '?comp=block&blockid=' + blockIds[blockIds.length - 1] + '&' + signature;
                    var requestData = new Uint8Array(evt.target.result);

                    mg$.ajax({
                        url: uri,
                        type: "PUT",
                        data: requestData,
                        processData: false,
                        beforeSend: function(xhr) {
                            xhr.setRequestHeader('x-ms-blob-type', 'BlockBlob');
                        },
                        success: function(data, status, request) {

                            bytesUploaded += requestData.length;
                            percentComplete = ((parseInt(bytesUploaded) / parseInt(file.size)) * 100).toFixed(0);

                            var req = {
                                data: {
                                    percentComplete: percentComplete
                                }
                            };

                            $rootScope.updateStatusProgressBar(req);
                            uploadFileInBlocks();
                        },
                        error: function(xhr, desc, err) {
                            $rootScope.hideProgressBar();
                            $rootScope.importInProgress = false;
                        }
                    });
                }
            };

            uploadFile();

        };

        $rootScope.isUploadTutorial = function(t) {
            if ($rootScope.isOnboarding(t) && t.tour_settings.tutorial_tour_type === 'upload') {
                return true;
            }
            return false;
        };

        $rootScope.setDefaultPlayAction = function(da, setting, isOrgView) {
            if (da === 'Default') return da;

            if (!da || (!$rootScope.getAppSetting(da) && !isOrgView)) {
                da = GmCXt.model.organization.settings._obj.defaultPlayAction._default;
            }

            return da;
        };

        $rootScope.isPlayedTour = function(tour_id) {
            if ($rootScope.isPlayer() && GmCXt.playedTour &&
                GmCXt.playedTour.indexOf(tour_id) !== -1) {
                return true;
            }

            return false;
        };

        $rootScope.branchGuideDownloadOpts = function(opts) {
            opts.video_file = false;
            opts.gif_file = false;
            opts.text_file = false;
            opts.word_file = false;
            opts.blog_file = false;
        };

        $rootScope.testMeClickEvent = function($event, tour) {
            $event.stopPropagation();
            $rootScope.$emit("showTestMeWidget", tour);
        };

        $rootScope.openAppAnalyticsPortal = function() {
            GmCXt.api.getHandOffToken().then(function(result) {
                var handsOffToken = result.data['handoff-token'];
                if (handsOffToken) {
                    var appCode = $rootScope.appList['app:' + $rootScope.activeAppId].external_id;
                    window.open($rootScope.analyticsPortalUrl + '#/guide-insights/guide-analytics?app_id=' +
                        $rootScope.activeAppId + '&app_code=' + appCode + '&handoff-token=' + handsOffToken, '_blank');
                }
            }).catch(function() {});
        };

        $rootScope.openAdminPortal = function() {
            GmCXt.api.getHandOffToken().then(function(result) {
                var handsOffToken = result.data['handoff-token'];
                if (handsOffToken) {
                    window.open(GmCXt.conf.webPortalUrl + "login/" +
                        '?handoff-token=' + handsOffToken, '_blank');
                }
            }).catch(function() {});
        };

        $rootScope.openCustCenter = function() {
            GmCXt.api.getHandOffToken().then(function(result) {
                var handsOffToken = result.data['handoff-token'];
                if (handsOffToken) {
                    window.open(GmCXt.conf.webPortalUrl + "organization/" + $rootScope.organization.organization_id + "/customization/" +
                        '?handoff-token=' + handsOffToken + '&navigate_to_path=' + window.btoa("organization/" + $rootScope.organization.organization_id + "/customization"), '_blank');
                }
            }).catch(function() {});
        };

        $rootScope.openSurveyAnalyticsPortal = function() {
            GmCXt.api.getHandOffToken().then(function(result) {
                var handsOffToken = result.data['handoff-token'];
                if (handsOffToken) {
                    var appCode = $rootScope.appList['app:' + $rootScope.activeAppId].external_id;
                    window.open($rootScope.analyticsPortalUrl + '#/survey/manage-survey/?app_id=' +
                        $rootScope.activeAppId + '&app_code=' + appCode + '&handoff-token=' + handsOffToken, '_blank');
                }
            }).catch(function() {});
        };

        $rootScope.openBotAnalyticsPortal = function() {
            GmCXt.api.getHandOffToken().then(function(result) {
                var handsOffToken = result.data['handoff-token'];
                if (handsOffToken) {
                    var appCode = $rootScope.appList['app:' + $rootScope.activeAppId].external_id;
                    window.open($rootScope.analyticsPortalUrl + '#/chatbot/manage/?app_id=' +
                        $rootScope.activeAppId + '&app_code=' + appCode + '&handoff-token=' + handsOffToken, '_blank');
                }
            }).catch(function() {});
        };

        $rootScope.openGuideDetailsAnalyticPortal = function(tour, $event) {
            $event.stopPropagation();
            GmCXt.api.getHandOffToken().then(function(result) {
                var handsOffToken = result.data['handoff-token'];
                var fdate = new Date();
                var tdate = new Date();
                fdate.setDate(fdate.getDate() - 7);
                fdate = fdate.toJSON().slice(0, 10);
                tdate.setDate(tdate.getDate() - 1);
                tdate = tdate.toJSON().slice(0, 10);
                var route = $rootScope.isOnboarding(tour) ? 'tutorial-guides-detail/' : 'guide-analytics-detail/';
                if (handsOffToken) {
                    var appCode = $rootScope.appList['app:' + $rootScope.activeAppId].external_id;
                    window.open($rootScope.analyticsPortalUrl + '#/guide-insights/' + route + tour.tour_id + '/?app_id=' +
                        $rootScope.activeAppId + '&app_code=' + appCode + '&fdate=' + fdate + '&tdate=' + tdate + '&handoff-token=' + handsOffToken, '_blank');
                }
            }).catch(function() {});
        };

        $rootScope.openManageKeywords = function() {
            GmCXt.api.getHandOffToken().then(function(result) {
                var handsOffToken = result.data['handoff-token'];
                if (handsOffToken) {
                    window.open(GmCXt.conf.webPortalUrl + "organization/" + $rootScope.organization.organization_id + "/manage_keywords/" +
                        '?handoff-token=' + handsOffToken + '&navigate_to_path=' + window.btoa("organization/" + $rootScope.organization.organization_id + "/manage_keywords"), '_blank');
                }
            }).catch(function() {});
        };

        $rootScope.openManageSegments = function() {
            GmCXt.api.getHandOffToken().then(function(result) {
                var handsOffToken = result.data['handoff-token'];
                if (handsOffToken) {
                    window.open(GmCXt.conf.webPortalUrl + "organization/" + $rootScope.organization.organization_id + "/manage_segments/" +
                        '?handoff-token=' + handsOffToken + '&navigate_to_path=' + window.btoa("organization/" + $rootScope.organization.organization_id + "/manage_segments"), '_blank');
                }
            }).catch(function() {});
        };

        $rootScope.updateStatusProgressBarInlineStep = function() {
            $rootScope.uploadStepProgressBar = true;
            if (!$rootScope.$$phase) $rootScope.$apply(function() {});
        };

        $rootScope.checkStepsForDoItForMeMode = function(tour) {
            var count = 0;
            var invalidTypes = [GmCXt.STEP_TYPE_SURVEY, GmCXt.STEP_TYPE_IMAGE, GmCXt.STEP_TYPE_VIDEO];
            var steps = mg$.extend({}, tour.steps);

            if (tour && steps.length > 0) {
                for (var i = 0; i < steps.length; i++) {
                    if (invalidTypes.includes(steps[i].step_type)) {
                        count++;
                    }
                }
            } else {
                return false;
            }

            return count === steps.length;
        };

        $rootScope.focusAccessibilityBtn = function() {
            GmCXt.timeout(function() {
                if ($rootScope.isSidePanelOpen) {
                    if (mg$(".mgPlayerJSTest_accessibility-btn-wrapper button.mgPlayerJSTest_custom-slider") &&
                        mg$(".mgPlayerJSTest_accessibility-btn-wrapper button.mgPlayerJSTest_custom-slider").length) {
                        mg$(".mgPlayerJSTest_accessibility-btn-wrapper button.mgPlayerJSTest_custom-slider")[0].focus();
                    }
                }
            }, 500);
        };

        $rootScope.getStepData = function(stepId) {
            var params = {
                step_id: stepId
            };
            return new Promise(function(resolve, reject) {
                try {
                    api.getStep(params, function(res) {
                        var step = GmCXt.validateDataModel(res.data.data.step, GmCXt.model.step);
                        resolve(step);
                    });
                } catch (e) {
                    reject(e);
                }
            });
        };

        $rootScope.getStepForReplaceEl = function(stepId) {
            $rootScope.getStepData(stepId).then(function(response) {
                var step = response;
                GmCXt.storage().set({
                    'replaceElReq': step
                });
                $timeout(function() {
                    window.open("https://" + step.step_url, '_blank');
                }, 0);
            });
        };

        $rootScope.showErrorStep = function(t) {

            if ($rootScope.isGuide(t) &&
                !$rootScope.isDesktopGuide(t) && !$rootScope.isMobileGuide(t)) {
                return true;
            } else {
                return false;
            }
        };

        $rootScope.goToAssignedPage = function() {
            if (GmCXt.getAppSetting('defaultGuideView') && !GmCXt.getAppSetting('all_guide')) {
                $rootScope.goToAllGuides();
            } else {
                $rootScope.goToCurrentPage();
            }
        };

        $rootScope.hideMirrorAppCtrl = function() {
            var hide = false;
            if (GmCXt.isMirrorApp() && !GmCXt.isEmpty($rootScope.appList) &&
                $rootScope.activeAppId) {
                var cApp = $rootScope.appList['app:' + $rootScope.activeAppId];
                if (cApp && cApp.base_app_id && parseInt(cApp.base_app_id) !== 0) {
                    hide = true;
                }

            }
            return hide;
        };

        $rootScope.setPlayedStepsInfo = function(step) {
            $rootScope.playedSteps = $rootScope.playedSteps ? $rootScope.playedSteps : [];

            if (GmCXt.isValueInArray($rootScope.playedSteps, "tId", step.tour_id)) {
                for (var i = 0; i < $rootScope.playedSteps.length; i++) {
                    if ($rootScope.playedSteps[i].tId === step.tour_id) {
                        $rootScope.playedSteps[i].lastStepid = step.step_id;
                        break;
                    }
                }
            } else {
                $rootScope.playedSteps.push({
                    tId: step.tour_id,
                    lastStepid: step.step_id
                });
            }

            storage.stepsPlayed.set($rootScope.playedSteps);

            var params = {
                playedSteps: $rootScope.playedSteps
            };

            if (GmCXt.user && GmCXt.user.settings) {
                GmCXt.user.settings.guide_view = params;
                $rootScope.saveUser(GmCXt.user);
            }

            if (!$rootScope.$$phase) $rootScope.$apply();

            GmCXt.apiUpdateUserGuidevView(params);
        };

        $rootScope.getPlayedStepsInfo = function() {
            storage.stepsPlayed.get().then(function(r) {
                if (GmCXt.isAnonymousUser()) {
                    $rootScope.playedSteps = r.stepsPlayed ? r.stepsPlayed : [];
                } else {
                    $rootScope.playedSteps = (GmCXt.user && GmCXt.user.settings.guide_view && GmCXt.user.settings.guide_view.playedSteps) ? GmCXt.user.settings.guide_view.playedSteps : [];
                }
            });

            if (!$rootScope.$$phase) $rootScope.$apply();
        };

        $rootScope.getPlayedStepCount = function(tour) {
            var lastStep = "";

            if ($rootScope.playedSteps) {
                for (var i = 0; i < $rootScope.playedSteps.length; i++) {
                    if ($rootScope.playedSteps[i].tId === tour.tour_id) {
                        lastStep = $rootScope.playedSteps[i].lastStepid;
                        break;
                    }
                }
            }

            return GmCXt.getStepPosFromPs(tour, lastStep);
        };

        $rootScope.getAppShortcutKeysList = function() {
            return new Promise(function(resolve, reject) {

                var params = {
                    application_id: $rootScope.activeAppId
                };

                api.getAppAllShortcuts(params, function(shortcuts) {
                    $rootScope.shortcutKeysList = shortcuts.data.data.shortcut_keys;
                });

            });
        };

        $rootScope.getBotGuideCount = function(tours) {
            var guides = $rootScope.filterBotGuides(tours);
            if (guides && guides.length) {
                $rootScope.botGuideCount = guides.length;
            } else {
                $rootScope.botGuideCount = 0;
            }
        };

        $rootScope.displayChatIcon = function() {
            if ($rootScope.botGuideCount === 0) {
                $rootScope.removeChatIcon();
            } else {
                $rootScope.showChatIcon();
            }
        };
    }

]);

app.config(['$compileProvider', function($compileProvider) {
    // ...
    $compileProvider.imgSrcSanitizationWhitelist(/^\s*((https?|ftp|file|blob|chrome-extension|moz-extension):|data:image\/)/);
}]);
var app = angular.module("guideme");

app.filter('unsafe', ['$sce', function($sce) {
	return function(text) {
		return $sce.trustAsHtml(text);
	};
}]);

app.filter('trustUrl', function($sce) {
	return function(url) {
		return $sce.trustAsResourceUrl(url);
	};
});

app.filter('htmlToPlaintext', ['$sce', function($sce) {
	return function(text) {
		text = text ? String(text).replace(/<[^>]+>/gm, '') : '';
		text = text.replace(/&lt;[^&gt;]+&gt;/gm, "");
		text = text.replace(/&#160;/gm, " "); // Convert non-breaking space
		text = text.replace(/&#8203;/gm, "");
		text = text.replace(/&nbsp;/gm, " ");
		text = text.replace(/&lt;/gm, "<");
		text = text.replace(/&gt;/gm, ">");
		text = text.replace(/&amp;/gm, "&");
		return text;
	};
}]);

app.filter('truncate', function() {
	return function(value, wordwise, max, tail) {
		if (!value) return '';

		max = parseInt(max, 10);
		if (!max) return value;
		if (value.length <= max) return value;

		value = value.substr(0, max);
		if (wordwise) {
			var lastspace = value.lastIndexOf(' ');
			if (lastspace !== -1) {
				//Also remove . and , so its gives a cleaner result.
				if (value.charAt(lastspace - 1) === '.' || value.charAt(lastspace - 1) === ',') {
					lastspace = lastspace - 1;
				}
				value = value.substr(0, lastspace);
			}
		}

		return value + "...";
	};
});

app.filter('textHighlighter', ['$sce', function($sce) {
    var textSearch = '';
    var textReplace = '';

    return function(element, searchInput) {
        if (searchInput) {
            textSearch = searchInput.split(',')[0];
            textReplace = searchInput.split(',')[1];

            var result = textReplace.length ? '$&'.replace('$&', textReplace) : '$&';

            element = element.replace(new RegExp(textSearch, 'gi'),
                '<span class="mgPlayerJSTest_text-highlighted">' + result + '</span>');
        }
        return $sce.trustAsHtml(element);
    };
}]);
var app = angular.module("guideme");
/* Directive to handle the image 404 error*/
app.directive('errSrc', function() {
	return {
		link: function(scope, element, attrs) {
			element.bind('error', function() {
				if (attrs.src !== attrs.errSrc) {
					attrs.$set('src', attrs.errSrc);
				}
			});
		}
	};
});

function commonApi(AuthLogin, storage, $http, $rootScope, mgError, $timeout) {

	var pub = {};

	pub.user = GmCXt.user;

	pub.orgId = function() {
		return GmCXt.user.organization_id;
	};

	pub.appId = function() {
		return $rootScope.activeAppId;
	};

	pub.getHeaders = function(params) {

		var host = "";

		if(!GmCXt.isEmpty(GmCXt.urlParts)){
			host = GmCXt.urlParts.host;
		}

		var headers = {
			'Content-Type': 'application/json',
			'x-mg-host': host,
			'x-mg-source': GmCXt.conf.appName,
			'x-mg-orgId': ''
		};

		var accessToken = '';
		var refreshToken = '';
		var user = GmCXt.user;

		if (user && user.accesstoken) accessToken = user.accesstoken;
		if (user && user.refreshtoken) refreshToken = user.refreshtoken;

		if (params.serviceName && ((params.serviceName.indexOf('user/signout') !== -1) || (params.serviceName.indexOf('user/token') !== -1)) ) {

			headers.RefreshToken = refreshToken;

		} else if (params.serviceName && params.serviceName.indexOf('user/sso/login') !== -1 ) {

			headers.Authorization = params.data.myGuideOrgKey;
			delete params.data.myGuideOrgKey;

		} else if (params.serviceName === 'user/sso/autologin') {

			headers.Authorization = params.data.myGuideOrgKey;
			delete params.data.myGuideOrgKey;

		} else if (params.serviceName === 'user/signin/edcast') {

			headers.EdcastToken = params.data.EdcastToken;
			delete params.data.EdcastToken;

		} else {
			headers.AccessToken = accessToken;
		}

		headers.appType = GmCXt.conf.appType;

		if (user) {
			headers.userId = user.user_id;
			headers.orgId = user.organization_id;
			headers['x-mg-orgId'] = user.organization_id;
		}

		return headers;
	};

	pub.xhrDesktopApp = function(param) {

		return new Promise(function(resolve, reject) {
			mg$.ajax({
				url: param.url,
				data: param.data,
				method: param.method,
				success: function(result) {
					if (result) resolve(result);
				},
				error: function(e) {
					reject(e);
				}
			});
		});
	};

	pub.get_ = function(params) {

		var ob = {
			url: GmCXt.conf.webServiceUrl + params.serviceName,
			method: params.method,
			headers: pub.getHeaders(params),
			params: params.data
		};

		function addParamsOnFailApi(d) {
			d.url = ob.url;
			d.params = ob.params;
			d.method_type = ob.method;
			return d;
		}

		function onFail(d) {
			if (!d) d = GmCXt.getDefaultError();
			d = addParamsOnFailApi(d);
			$rootScope.showSpinner = false;
			if (d.code !== 3033) mgError.on(d);
		}

		return new Promise(function(resolve, reject) {

			$http(ob).then(function success(result) {

				if (!$rootScope.isAppJsonCalling) {
					$rootScope.showSpinner = false;
				}

				var data = result.data;

				if (!data) return;

				if (data.error) {
					onFail(data);
					reject();
					return;
				}

				data = GmCXt.validateDataModel(data, GmCXt.model.api);

				resolve(result);

			}).catch(function(error) {
				if (error.stack) error.data = GmCXt.getCodeError();
				onFail(error.data);
			});
		});
	};

	pub.get = function(params) {

		if (params.data.isDeskReq) {

			delete params.data.isDeskReq;
			return pub.get_(params);
		} else {

			return $rootScope.checkCdnSignature().then(function() {
				return pub.get_(params);
			});
		}
	};

	pub.getCDN = function(url) {

		return $rootScope.checkCdnSignature().then(function() {

			if (!GmCXt.onPrem()) {
				url = addCdnUrl(url);
			}
			return $http.get(url);
		});
	};

	pub.post_ = function(params) {

		var httpObject = {
			url: GmCXt.conf.webServiceUrl + params.serviceName,
			method: params.method,
			headers: pub.getHeaders(params),
			data: params.data
		};

		function addParamsOnFailApi(d) {
			d.url = httpObject.url;
			d.params = httpObject.data;
			d.method_type = httpObject.method;
			return d;
		}

		function onFail(data) {
			if (!data) data = GmCXt.getDefaultError();

			data = addParamsOnFailApi(data);
			mgError.on(data);

			if (params.onFail) params.onFail(data);
		}

		$http(httpObject).then(function(result) {
			$rootScope.showSpinner = false;
			$rootScope.uploadInProgress = false;

			var data = result.data;
			if (!data.error) {
				if (params.onSuccess) {

					if (params.signIn === true) {
						if (result.data.data.token) {
							result = GmCXt.validateDataModel(result.data.data.token, GmCXt.model.token);
						} else if (result.data.data.orgs) {
							result = result.data.data;
						} else {
							result = GmCXt.validateDataModel(result.data.data.user, GmCXt.model.user);
						}
					}

					params.onSuccess(result);
				}
			} else {
				onFail(data);
			}
		}).catch(function(err) {
			if (err.stack) {
				err.data = GmCXt.getCodeError();
			}
			onFail(err.data);
		});
	};

	pub.post = function(params) {
		$rootScope.checkCdnSignature().then(function() {
			pub.post_(params);
		});
	};

	pub.userApiKeySignin = function(data, successCb, onFail) {
		var serviceName = 'user/sso/login?mg_source_name=' + GmCXt.conf.appConfig.customer;

		var params = {
			serviceName: serviceName,
			method: 'POST',
			data: data,
			onSuccess: successCb,
			onFail: onFail,
			signIn: true
		};

		pub.post(params);
	};

	pub.userOrgKeySignin = function(data, successCb, onFail) {
		var params = {
			serviceName: 'user/sso/autologin',
			method: 'POST',
			data: data,
			onSuccess: successCb,
			onFail: onFail,
			signIn: true
		};

		pub.post(params);
	};

	pub.userTranscation = function(data, successCb, onFail) {
		var params = {
			serviceName: 'user/transaction',
			method: 'POST',
			data: data,
			onSuccess: successCb,
			onFail: onFail
		};

		pub.post(params);
	};

	pub.userSignIn = function(data, successCb, onFail) {

		var params = {
			serviceName: 'user/signin',
			method: 'POST',
			data: data,
			onSuccess: successCb,
			onFail: onFail,
			signIn: true
		};

		pub.post(params);
	};

	pub.userSignOut = function(successCb) {
		var serviceName = 'user/signout?mg_source_name=' + GmCXt.conf.appConfig.customer;
		var params = {
			serviceName: serviceName,
			method: 'POST',
			serviceType: '',
			data: {},
			onSuccess: successCb
		};

		pub.post(params);
	};

	pub.verifyUser = function(data, successCb, onFail) {
		var params = {
			serviceName: 'user/verify',
			method: 'POST',
			data: data,
			onSuccess: successCb,
			onFail: onFail,
			signIn: true
		};

		pub.post(params);
	};

	pub.forgetPassword = function(data, successCb, onFail) {
		var params = {
			serviceName: 'user/password/reset',
			method: 'GET',
			data: data
		};

		pub.get(params).then(successCb);
	};

	pub.changePassword = function(data, successCb) {
		var params = {
			serviceName: 'user/password',
			method: 'PUT',
			data: data,
			onSuccess: successCb
		};

		pub.post(params);
	};

	pub.resetPassword = function(data, successCb) {
		var params = {
			serviceName: 'user/resetpassword',
			method: 'POST',
			data: data,
			onSuccess: successCb
		};

		pub.post(params);
	};

	pub.callGetCdnSignature = function(data, cb) {
		var params = {
			serviceName: 'organization/signature',
			method: 'GET',
			serviceType: "",
			data: data
		};

		pub.get_(params).then(cb);
	};

	pub.getAccessToken = function(successCb) {

		var params = {
			serviceName: 'user/token',
			method: 'GET',
			serviceType: "",
			data: {
				force_update: true,
				mg_source_name: GmCXt.conf.appConfig.customer
			}
		};

		pub.get_(params).then(function(r) {
			var result = GmCXt.validateDataModel(r.data.data, GmCXt.model.userToken);
			successCb(result);
		});
	};

	pub.getOrganization = function(cb, spinnerFlag) {
		var params = {
			serviceName: "organization",
			method: "GET",
			data: {
				organization_id: pub.orgId()
			},
			serviceType: ''
		};
		$rootScope.showSpinner = spinnerFlag;
		pub.get_(params).then(function(r) {
			GmCXt.validateApiResp(cb,
				params.serviceName,
				r.data.data.organization,
				GmCXt.model.organization);
		});
	};

	pub.getDomains = function(cb) {
		var params = {
			serviceName: "organization/domain",
			method: "GET",
			data: {
				organization_id: pub.orgId()
			},
			serviceType: ''
		};

		pub.get_(params).then(cb);
	};

	pub.sendMsgToMyBot = function(data) {

		var params = {
			url: 'http://localhost:11311/' + data.url,
			data: '',
			method: 'GET'
		};

		if (data.method) {
			params.method = data.method;
		}

		if (data.info) {
			params.data = {
				info: JSON.stringify(data.info)
			};
		}

		return pub.xhrDesktopApp(params).catch(function(e) {
			GmCXt.log(1, "ERROR: failed to connect Desktop app", e);
		});
	};

	pub.postUserProfile = function(data, cb) {
		data.organization_id = pub.orgId();
		var params = {
			serviceName: "user",
			method: "PUT",
			serviceType: "",
			data: data,
			onSuccess: cb
		};

		pub.post(params);
	};

	function addCdnUrl(json) {
		var u = GmCXt.conf.jsonStorageUrl + GmCXt.orgBucket + '/' + json;
		if (GmCXt.user) {
			return u + GmCXt.user.cdn_signature + '&v=' + Date();
		} else {
			return u;
		}
	}

	pub.getTour = function(data, cb, appId) {

		var params = {
			serviceName: "tour",
			method: "GET",
			serviceType: "",
			data: data
		};

		function gotTour(tour) {

			if (!appId) {
				tour = GmCXt.migrateTour(tour);
				$rootScope.updateTourToStorage(tour);
			}

			if (cb) {
				cb(tour);
			}
		}

		pub.get(params).then(function(r) {
			GmCXt.validateApiResp(gotTour,
				params.serviceName,
				r.data.data.tour,
				GmCXt.model.guide);
		}, function() {
			cb();
		});

	};

	pub.getTourCDN = function(tourId, cb, errorCb) {
		var url = 'tours/tour-' + tourId + '.json';

		pub.getCDN(url).then(function(response) {
			if (response.data) {
				tour = GmCXt.validateDataModel(response.data, GmCXt.model.guide);
				tour = GmCXt.migrateTour(tour);

				$rootScope.updateTourToStorage(tour);

				if (cb) cb(tour);
			}
		}).catch(function(e) {
			if (errorCb) errorCb();
		});
	};

	pub.getCategoryListStorage = function(params, cb) {
		new Promise(function(resolve, reject) {

			var resPromise = function(cats) {

				if (!GmCXt.inPlayer && params.is_publish) {
					cats = $rootScope.filterPublished(cats);
				}

				if (cats && cats.length) {
					cats = cats.sort(function(a, b) {
						return a.category_order - b.category_order;
					});
					cats = cats.slice(params.offset, params.limit + params.offset);
				}
				resolve(cats);
			};

			if (params.parent_id) {
				var categories = [];

				if (!GmCXt.isEmpty($rootScope.subCategoryStore)) {
					categories = $rootScope.subCategoryStore['cat_' + params.parent_id];
				}
				resPromise(categories);

			} else {
				resPromise($rootScope.categoryStore);
			}

		}).then(cb);
	};

	pub.getCategoryDetails = function(data, successCb, appId) {

		var params = {
			serviceName: 'category',
			method: 'GET',
			serviceType: "",
			data: data
		};

		var cb = function(cat) {
			if (!appId) {

				GmCXt.log(70, 'ADD CATEGORY TO GLOBLE: ' + GmCXt.categoryLog(cat));

				$rootScope.addCategory(cat);
				$rootScope.updateCategoryInStorgae(cat);
			}

			successCb(cat);

		};

		pub.get(params).then(function(r) {
			GmCXt.validateApiResp(cb,
				params.serviceName,
				r.data.data.category,
				GmCXt.model.category);
		});

	};

	/*
		forceApi: in case of json/cdn player when we need to get category updates using API
		appId: application_id of the app, when non active app data is being updated
	*/
	pub.getCategoryDetailsStorage = function(data, cb, forceApi, appId) {

		if (forceApi) {
			pub.getCategoryDetails(data, cb, appId);
		} else {
			new Promise(function(resolve, reject) {

				var processSubCat = function() {
					var category = [];
					angular.forEach($rootScope.subCategoryStore, function(subCat) {
						subCat.forEach(function(cat) {
							if (parseInt(cat.category_id) === parseInt(data.category_id)) {
								category.push(cat);
							}
						});
					});
					resolve(category[0]);
				};

				var category = $rootScope.categoryStore.filter(function(category) {
					return parseInt(category.category_id) === parseInt(data.category_id);
				});

				if (!category.length) {
					processSubCat();
				} else {
					resolve(category[0]);
				}

			}).then(cb);
		}

	};

	pub.getTourList = function(data, cb, appId) {

		data.application_id = appId || pub.appId();

		if (GmCXt.isMirrorApp()) {
			data.application_id = GmCXt.getBaseAppId();
		}

		data.organization_id = pub.orgId();

		if ($rootScope.notDefaultLang()) {
			data.language = $rootScope.language;
		}

		if (GmCXt.getLXPLang()) {
			data.language = GmCXt.getLXPLang();
		}

		var params = {
			serviceName: 'tour/list',
			method: 'GET',
			serviceType: "",
			data: data
		};

		function tourCb(tours, pin_tours) {

			if (!appId) {
				tours = $rootScope.filterGuideByEnv(tours);

				GmCXt.log(70, 'ADD TOURS TO VARIABLE: ', tours);

				$rootScope.addTourList(data.category_id, tours);

				$rootScope.updateToursInCategoryStorage(category_id, tours);
			}

			cb(tours, pin_tours);
		}

		pub.get(params).then(function(r) {
			GmCXt.validateApiResp(tourCb,
				params.serviceName,
				r.data.data.tours,
				GmCXt.model.guides,
				r.data.data.pin_tours);
		}).catch(function() {});

	};

	/*
		forceApi: in case of json/cdn player when we need to get category updates using API
		appId: application_id of the app, when non active app data is being updated
	*/
	pub.getTourListStorage = function(data, cb, forceApi, appId) {

		if (forceApi) {
			pub.getTourList(data, cb, appId);
		} else {
			new Promise(function(resolve, reject) {

				var resPromise = function(ts) {

					if (ts) {

						ts = ts.sort(function(a, b) {
							return a.tour_order - b.tour_order;
						});
						ts = ts.slice(data.offset, data.limit + data.offset);
					}

					resolve(ts);
				};

				var filterBySearchText = function(tours_) {
					if (GmCXt.inPlayer) {
						tours_ = $rootScope.filterGuideByEnv(tours_);
					} else if (data.published_guides === "1") {
						tours_ = $rootScope.filterPublished(tours_);
					} else if (data.published_guides === "0") {
						tours_ = $rootScope.filterUnpublished(tours_);
					}

					// Filter by search text, on search page
					if (data.search_text) {
						var searchText = data.search_text.toLowerCase();

						tours_ = $rootScope.publishedTours.filter(function(tour) {

							if (tour.application_id === data.app_id) {
								var title = tour.tour_title;
								var description = tour.tour_description;
								if (tour.language_data && tour.language_data[$rootScope.language] && $rootScope.notDefaultLang()) {
									title = tour.language_data[$rootScope.language].tour_title;
									description = tour.language_data[$rootScope.language].tour_description;
								}
								return ($rootScope.filterGuide(title, searchText, tour.tour_id, description));
							}
						});
						resPromise(tours_);
					} else {
						resPromise(tours_);
					}
				};

				var tours = [];

				// Filter by category, on tour list page. 
				if (data.category_id) {
					var t = $rootScope.allTourList['cat_' + data.category_id];
					for (var i in t) {
						tours.push(t[i]);
					}
				}

				filterBySearchText(tours);

			}).then(cb);
		}

	};

	pub.getContextualTourStorage = function(data, cb) {
		return new Promise(function(resolve, reject) {
			setTimeout(function() {
				resolve($rootScope.validateAllRulesExceptSelectEl($rootScope.publishedTours).tours);
			}, 1000);
		}).then(cb);
	};

	pub.getContextualTour = function(data, cb) {

		function tourCb(tours) {
			if ($rootScope.FT.isPlayer) {
				tours = $rootScope.filterGuideByEnv(tours);
			}

			$rootScope.addTourList(false, tours);
			GmCXt.contextualApiParams = {};
			cb(tours);
		}

		var onSuccess = function(r) {
			GmCXt.validateApiResp(tourCb,
				'tour/contextual',
				r.data.data.tours,
				GmCXt.model.guides);
		};

		if (GmCXt.getLXPLang()) {
			data.language = GmCXt.getLXPLang();
		} else if ($rootScope.language && $rootScope.language.indexOf('en-') === -1 && !GmCXt.isFalse($rootScope.language)) {
			data.language = $rootScope.language;
		}

		data.organization_id = pub.orgId();

		data.application_id = pub.appId();

		if (GmCXt.isMirrorApp()) {
			data.application_id = GmCXt.getBaseAppId();
		}

		pub.getContextualTourStorage(data, function(tours) {
			if (tours && tours.length) {
				cb(tours);
			} else {
				if (!GmCXt.inPlayer) {

					if (GmCXt.isEmpty(GmCXt.contextualApiParams) ||
						(Object.values(data).toString() !== Object.values(GmCXt.contextualApiParams).toString())
					) {
						var params = {
							serviceName: 'tour/contextual',
							method: 'POST',
							serviceType: "",
							data: data,
							onSuccess: onSuccess
						};

						pub.post_(params);

						GmCXt.contextualApiParams = data;
					}
				} else {
					cb(tours);
				}
			}
		});
	};

	pub.getJSONFromCDN = function(url) {
		return pub.getCDN(url).catch(function(e) {

			$rootScope.showSpinner = false;

			if (e.status === 404) {
				$rootScope.cdn404 = true;
				GmCXt.redirect('#/maintenance');

			} else if (e.status === 403) {
				$rootScope.cdn403 = true;
				GmCXt.redirect('#/maintenance');
			}
		});
	};

	pub.getOrgJson = function() {

		$rootScope.showSpinner = true;

		if (GmCXt.cdnPlayer) {

			var url = 'json/org_info.json';
			return pub.getJSONFromCDN(url);

		} else {

			var params = {
				serviceName: "organization/info/json",
				method: "GET",
				data: {
					organization_id: pub.orgId()
				},
				serviceType: ''
			};

			return pub.get_(params);
		}
	};

	pub.getAppJson = function(id) {

		$rootScope.showSpinner = true;

		if (GmCXt.cdnPlayer) {

			var url = 'json/app-' + id + '.json';
			return pub.getJSONFromCDN(url);

		} else {
			var params = {
				serviceName: "application/json",
				method: "GET",
				data: {
					application_id: id
				},
				serviceType: ''
			};

			return pub.get_(params);
		}
	};

	pub.resendOTP = function(data, successCb) {
		var params = {
			serviceName: "user/otp/resend",
			method: "POST",
			data: data,
			serviceType: '',
			onSuccess: successCb,
			signIn: true
		};

		return pub.post_(params);
	};

	pub.getTours = function(data, cb) {
		data.organization_id = pub.orgId();

		var params = {
			serviceName: "tours",
			method: "GET",
			serviceType: "",
			data: data
		};

		function tourCb(tours) {
			if ($rootScope.FT.isPlayer) {
				var tours = $rootScope.filterGuideByEnv(tours);
			}
			cb(tours);
		}

		function onSuccess(r) {
			GmCXt.validateApiResp(tourCb,
				params.serviceName,
				r.data.data.tours,
				GmCXt.model.guides
			);
		}

		pub.get(params).then(onSuccess);
	};

	pub.getTaskList = function() {

		$rootScope.taskListApiCalled = true;

		var data = {
			application_id: pub.appId(),
			organization_id: pub.orgId(),
			limit: 10,
			offset: 0,
			search: ''
		};

		var params = {
			serviceName: "task_list/json",
			method: "GET",
			data: data
		};

		return pub.get(params);
	};

	pub.getTaskDetails = function(id) {

		var data = {
			id: id
		};

		var params = {
			serviceName: "task_list/user/stats",
			method: "GET",
			data: data
		};

		return pub.get(params);
	};

	pub.getTaskListDetails = function() {

		var data = {
			application_id: pub.appId(),
			organization_id: pub.orgId()
		};

		var params = {
			serviceName: "task_list/user/stats/list",
			method: "GET",
			data: data
		};

		return pub.get(params);
	};

	pub.getTaskFolderDetails = function(id) {

		var data = {
			folder_id: id
		};

		var params = {
			serviceName: "task_list/content",
			method: "GET",
			data: data
		};

		return pub.get(params);
	};

	pub.getAppDetails = function(id, cb) {

		var data = {
			application_id: id
		};

		var params = {
			serviceName: "application",
			method: "GET",
			data: data
		};

		pub.get(params).then(function(r) {
			GmCXt.validateApiResp(cb,
				params.serviceName,
				r.data.data.application,
				GmCXt.model.application);
		});
	};

	pub.getSearchTourList = function(data, cb, doNotFilter) {

		new Promise(function(resolve, reject) {
				var searchText = data.search_text;
				var matchingTours = [];
				var category_id = data.category_id;
				for (var i = 0; i < $rootScope.publishedTours.length; i++) {
					var tour = $rootScope.publishedTours[i];
					if ((typeof category_id === 'undefined' || category_id === tour.category_id) && ((tour.tour_title && tour.tour_title.toLowerCase().includes(searchText.toLowerCase())) || (tour.keywords && tour.keywords.toLowerCase().indexOf(searchText.toLowerCase()) > -1))) {
						matchingTours.push(tour);
					}
				}
				matchingTours.sort(function(a, b) {
					return a.tour_title.localeCompare(b.tour_title);
				});
				resolve(matchingTours);
			}).then(cb)
			.catch(function() {
				$rootScope.goBack();
			});

	};

	pub.markTaskGuideComplete = function(obj, cb) {
		var data = {
			"task_list_id": obj.task_id,
			"user_id": GmCXt.user.user_id,
			"guide_id": obj.guide_id
		};

		var params = {
			serviceName: "task_list/task/complete",
			method: 'POST',
			serviceType: "",
			data: data,
			onSuccess: cb
		};
		return pub.post(params);
	};

	pub.getAllLanguages = function() {
		var url = GmCXt.conf.staticContentPath + "json/languages.json";
		return $http.get(url);
	};

	return pub;
}
var guideMeAPIProvider = function(AuthLogin, storage, $http, $rootScope, $timeout, mgError) {

	var xhr = new commonApi(AuthLogin, storage, $http, $rootScope, mgError);

	var cache = new creatorCache(AuthLogin, storage, $http, $rootScope, $timeout, mgError);

	this.get = xhr.get;

	this.upload_ = function(params) {
		var headers = xhr.getHeaders(params);
		headers['Content-Type'] = undefined;

		var httpObject = {
			url: GmCXt.conf.webServiceUrl + params.serviceName,
			method: params.method,
			headers: headers,
			data: params.data
		};

		function hideLoader() {
			$rootScope.showSpinner = false;
			$rootScope.showLogoSpinner = false;
			$rootScope.uploadInProgress = false;
		}

		function onFail(data) {
			if (!data) data = GmCXt.getDefaultError();

			hideLoader();

			data.url = httpObject.url;
			data.params = httpObject.data;
			data.method_type = httpObject.method;
			mgError.on(data);

			if (params.onFail) params.onFail();
		}

		$http(httpObject).then(function(result) {
			hideLoader();
			var data = result.data;
			if (!data.error) {
				if (params.onSuccess) params.onSuccess(result);
			} else {
				onFail(data);
			}
		}).catch(function(error) {
			if (error.stack) error.data = GmCXt.getCodeError();
			onFail(error.data);
		});
	};

	this.upload = function(params) {
		var self = this;
		$rootScope.checkCdnSignature().then(function() {
			self.upload_(params);
		});
	};

	this.getUserList = function(data, cb) {
		data.organization_id = xhr.orgId();
		var params = {
			serviceName: "user/list",
			method: "GET",
			data: data,
			serviceType: ''
		};

		$rootScope.showSpinner = true;
		xhr.get(params).then(cb);
	};

	this.getAllApps = function(data, cb) {
		data.organization_id = xhr.orgId();
		var params = {
			serviceName: 'application/list',
			method: 'GET',
			serviceType: "",
			data: data
		};

		xhr.get(params).then(function(r) {
			GmCXt.validateApiResp(cb,
				params.serviceName,
				r.data.data.applications,
				GmCXt.model.applications);
		});
	};

	// this.categorySwap = function(data, successCb) {
	// 	var params = {
	// 		serviceName: 'category/order',
	// 		method: 'POST',
	// 		serviceType: "",
	// 		data: data,
	// 		onSuccess: successCb
	// 	};

	// 	xhr.post(params);
	// };

	this.getCategoryList = function(data, cb) {

		var getCategoryListFromApi = function() {
			xhr.get(params).then(function(r) {
				GmCXt.validateApiResp(cb,
					params.serviceName,
					r.data.data.categories,
					GmCXt.model.categories);
			});
		};

		data.application_id = xhr.appId();

		if (GmCXt.isMirrorApp()) {
			data.application_id = GmCXt.getBaseAppId();
		}

		var params = {
			serviceName: 'category/list',
			method: 'GET',
			serviceType: "",
			data: data
		};

		var readFormStorage = cache.getCatList(data, cb);
		if (!readFormStorage) {
			getCategoryListFromApi();
		}

	};

	this.getGuideHistory = function(data, cb, type) {
		var params = {
			serviceName: type + "/history",
			method: "GET",
			serviceType: "",
			data: data
		};

		xhr.get(params).then(cb);
	};

	this.getCategoryDetails = function(data, successCb) {

		var params = {
			serviceName: 'category',
			method: 'GET',
			serviceType: "",
			data: data
		};

		var cb = function(cat) {
			$rootScope.addCategory(cat);
			$rootScope.updateServerUpdateList(cat.category_id, "category");
			successCb(cat);
		};

		var readFormStorage = cache.getCatDetails(data, successCb);
		if (!readFormStorage) {
			xhr.get(params).then(function(r) {
				GmCXt.validateApiResp(cb,
					params.serviceName,
					r.data.data.category,
					GmCXt.model.category);
			});
		}
	};

	this.categoryCreate = function(data, successCb) {
		data.application_id = xhr.appId();

		var cb = function(r) {
			categoryObj = GmCXt.validateDataModel(r.data.data.category, GmCXt.model.category);
			successCb(categoryObj);
		};

		var params = {
			serviceName: 'category',
			method: 'POST',
			serviceType: "",
			data: data,
			onSuccess: cb
		};

		xhr.post(params);
	};

	this.categoryUpdate = function(data, successCb) {
		data.application_id = xhr.appId();
		data.organization_id = xhr.orgId();

		var onFail = function(e) {
			if (cat) {
				$rootScope.addCategory(cat);
				$rootScope.refreshPageView();
			}
		};

		var cb = function(r) {
			categoryObj = GmCXt.validateDataModel(r.data.data.category, GmCXt.model.category);
			$rootScope.addCategory(categoryObj);
			successCb(categoryObj);
		};

		var params = {
			serviceName: 'category',
			method: 'PUT',
			serviceType: "adminwithparams",
			data: data
		};

		var cat = cache.updateCat(data, successCb);

		if (cat) {
			params.onFail = onFail;
		} else {
			params.onSuccess = cb;
		}

		xhr.post(params);
	};

	this.categoryLangUpdate = function(data, successCb) {

		data.application_id = xhr.appId();
		data.organization_id = xhr.orgId();

		var params = {
			serviceName: 'category/language/update',
			method: 'PUT',
			serviceType: "adminwithparams",
			data: data,
			onSuccess: function() {
				successCb();
			}
		};

		xhr.post(params);
	};

	this.categoryDelete = function(data, successCb) {
		var params = {
			serviceName: 'category',
			method: 'DELETE',
			serviceType: "",
			data: data
		};

		var cat = cache.deleteCat(data);

		var onFail = function(e) {
			if (cat) {
				$rootScope.addCategory(cat);
			}
		};

		params.onSuccess = successCb;
		params.onFail = onFail;


		xhr.post(params);
	};

	this.categoryPublish = function(data, successCb) {
		var params = {
			serviceName: 'category/publish',
			method: 'PUT',
			serviceType: "adminwithparams",
			data: data
		};

		var status = parseInt(data.publish) ? true : false;

		successCb(status);

		params.onFail = function() {
			successCb(!status);
		};

		xhr.post(params);
	};

	this.getAllCategoryList = function(data, cb) {
		var aId = xhr.appId();

		if (!data.application_id) data.application_id = aId;

		if (GmCXt.isMirrorApp()) {
			data.application_id = GmCXt.getBaseAppId();
		}

		var params = {
			serviceName: 'categories/by_tour_count',
			method: 'GET',
			serviceType: "",
			data: data
		};
		xhr.get(params).then(function(res) {
			var result = res.data.data.categories;
			cb(result);
		});
	};

	this.addKeywords = function(data, successCb, failCb) {
		data.organization_id = xhr.orgId();
		var params = {
			serviceName: 'tour/keywords',
			method: 'PUT',
			data: data,
			onFail: failCb,
			onSuccess: successCb
		};

		xhr.post(params);

	};

	this.deleteKeyword = function(data, successCb, failCb) {
		var params = {
			serviceName: 'tour/keywords',
			method: 'DELETE',
			data: data,
			onFail: failCb,
			onSuccess: successCb
		};
		xhr.post(params);
	};

	this.bgJobStatus = function(data, cb) {
		data.organization_id = xhr.orgId();
		var params = {
			serviceName: 'organization/tasks',
			method: 'GET',
			serviceType: "",
			data: data
		};
		xhr.get(params).then(function(res) {
			cb(res);
		});
	};

	this.getTourList = function(data, cb, appId) {
		data.application_id = appId ? appId : xhr.appId();

		if (GmCXt.isMirrorApp()) {
			data.application_id = GmCXt.getBaseAppId();
		}

		data.organization_id = xhr.orgId();

		if ($rootScope.notDefaultLang()) {
			data.language = $rootScope.language;
		}

		if (GmCXt.getLXPLang()) {
			data.language = GmCXt.getLXPLang();
		}

		var params = {
			serviceName: 'tour/list',
			method: 'GET',
			serviceType: "",
			data: data
		};

		if (GmCXt.isDefined(data.search_text) && !GmCXt.isEmpty(data.search_text)) {
			params.serviceName = 'tour/search';
			params.method = 'POST';
		}

		function tourCb(tours, pin_tours) {
			if ($rootScope.FT.isPlayer) {
				tours = $rootScope.filterGuideByEnv(tours);
			}

			if (data.category_id) {
				$rootScope.addTourList(data.category_id, tours);
			}

			cb(tours, pin_tours);
		}

		var onSuccessApi = function(r) {
			GmCXt.validateApiResp(tourCb,
				params.serviceName,
				r.data.data.tours,
				GmCXt.model.guides,
				r.data.data.pin_tours);
		};

		cache.getTourList(data).then(function(tlist) {
			storage.pinnedToursList.get().then(function(pinTourList) {
				cb(tlist, pinTourList);
			});
			
		}).catch(function() {
			delete params.data.reloadFlag;
			if (params.serviceName === 'tour/search') {
				params.onSuccess = onSuccessApi;
				xhr.post(params);
			} else {
				xhr.get(params).then(onSuccessApi).catch(function() {
					$rootScope.goBack();
				});
			}
		});

	};

	this.getTourListByElement = function(data, cb, appId) {
		data.application_id = appId ? appId : xhr.appId();
		data.organization_id = xhr.orgId();

		var params = {
			serviceName: 'element/search',
			method: 'GET',
			serviceType: "",
			data: data
		};

		function tourCb(res) {
			cb(res);
		}

		cache.getTourList(data).then(function(tlist) {
			cb(tlist);
		}).catch(function() {
			delete params.data.reloadFlag;
			xhr.get(params).then(function(r) {
					tourCb(r.data.data);
			}).catch(function() {
				$rootScope.goBack();
			});
		});
	};

	this.tourUpdateElement = function(data, successCb, errorCb, successApiCb) {
		var onFail = function(e) {
			if (tour) {
				$rootScope.setTour(tour);
			}

			if (errorCb) {
				errorCb();
			}
		};

		var onSuccessApi = function(r) {
			if(successCb) {
				successCb(r.data.data.tour);
			}
			GmCXt.validateApiResp(successApiCb,
				params.serviceName,
				r.data.data.tour,
				GmCXt.model.guide);
		};

		var params = {
			serviceName: 'tour/update',
			method: 'PUT',
			serviceType: "",
			data: data,
			onFail: onFail
		};

		var tour = cache.updateTour(data);

		if (!GmCXt.isEmpty(tour)) {
			params.onFail = onFail;
			params.onSuccess = onSuccessApi;
		} else {
			params.onSuccess = successCb;
		}

		params.data.tour_settings = JSON.stringify(params.data.tour_settings);

		xhr.post(params);
	};

	this.stepUpdateElement = function(data, successCb) {
		var params = {
			serviceName: 'step/update',
			method: 'PUT',
			serviceType: "adminwithparams",
			data: data,
			onSuccess: successCb
		};

		params.data.step_settings = JSON.stringify(params.data.step_settings);

		xhr.post(params);
	};

	this.getTour = function(data, cb, errorCb, forceApi) {
		var readFormStorage = false;
		var params = {
			serviceName: "tour",
			method: "GET",
			serviceType: "",
			data: data
		};

		function gotTour(tour) {
			tour = GmCXt.migrateTour(tour);

			if ($rootScope.lastActiveView !== 'home') {
				$rootScope.setTour(tour);
			}

			if (cb) cb(tour);
		}

		if(!forceApi){
			readFormStorage = cache.getTour(data, cb);
		}

		if (!readFormStorage || data.isDeskReq) {
			xhr.get(params).then(function(r) {
				if (r.data.data) {
					GmCXt.validateApiResp(gotTour,
						params.serviceName,
						r.data.data.tour,
						GmCXt.model.guide);
				} else {
					cb();
				}
			}, function() {
				cb();
			});
		}
	};

	this.tourDelete = function(data, successCb, successCbDelete, onError) {

		var self = this;

		var params = {
			serviceName: 'tour',
			method: 'DELETE',
			serviceType: "adminwithparams",
			data: data
		};

		var cb = function(r) {

			var onFail = function(e) {
				if (tour) {
					$rootScope.setTour(tour);
					onError();
				}
			};

			if (r && r.error) {
				onFail();
				return;
			}

			if (!GmCXt.isEmpty(tour)) {
				params.onFail = onFail;
				params.onSuccess = successCbDelete;

			} else {
				params.onSuccess = successCb;
			}

			xhr.post(params);
		};

		var tour = cache.deleteTour(data, successCb);

		if (data.is_locked) {

			var p = {
				category_id: data.category_id,
				tour_id: data.tour_id
			};

			this.tourUnlock(p, cb, true);
		} else {
			cb();
		}
	};

	this.pinUnpinTour = function(data, errorCb, successApiCb) {
		var params = {
			serviceName: 'tour/pin',
			method: 'POST',
			serviceType: "",
			data: data,
			onSuccess: successApiCb
		};

		xhr.post(params);

	};

	this.tourUpdate = function(data, successCb, errorCb, successApiCb) {

		var onFail = function(e) {
			if (tour) {
				$rootScope.setTour(tour);
			}

			if (errorCb) {
				errorCb();
			}
		};

		var onSuccessApi = function(r) {
			if(successCb) {
				successCb(r.data.data.tour);
			}
			GmCXt.validateApiResp(successApiCb,
				params.serviceName,
				r.data.data.tour,
				GmCXt.model.guide);
		};

		var params = {
			serviceName: 'tour',
			method: 'PUT',
			serviceType: "",
			data: data,
			onFail: onFail
		};

		var tour = cache.updateTour(data);

		if (!GmCXt.isEmpty(tour)) {
			params.onFail = onFail;
			params.onSuccess = onSuccessApi;
		} else {
			params.onSuccess = successCb;
		}

		params.data.tour_settings = JSON.stringify(params.data.tour_settings);

		xhr.post(params);
	};

	this.publishedTourUpdate = function(data, successCb, errorCb, successApiCb) {

		var onFail = function(e) {
			if (tour) {
				$rootScope.setTour(tour);
			}

			if (errorCb) {
				errorCb();
			}
		};

		var onSuccessApi = function(r) {
			if(successCb) {
				successCb(r.data.data.tour);
			}
			GmCXt.validateApiResp(successApiCb,
				params.serviceName,
				r.data.data.tour,
				GmCXt.model.guide);
		};

		var onSuccess = function(r) {
			GmCXt.validateApiResp(successCb,
				params.serviceName,
				r.data.data.tour,
				GmCXt.model.guide);
		};

		var paramsData = {
			tour_id: data.tour_id,
			new_settings: data.new_settings,
			keywords: data.keywords,
			tour_type: data.tour_type
		};

		var params = {
			serviceName: 'tour/quick/update',
			method: 'PUT',
			serviceType: "",
			data: paramsData,
			onFail: onFail
		};

		var tour = cache.updateTour(data);

		if (!GmCXt.isEmpty(tour)) {
			params.onFail = onFail;
			params.onSuccess = onSuccessApi;
		} else {
			params.onSuccess = onSuccess;
		}

		params.data.new_settings = JSON.stringify(params.data.new_settings);

		xhr.post(params);
	};

	this.tourLangUpdate = function(data, successCb) {
		var params = {
			serviceName: 'tour/language/update',
			method: 'PUT',
			serviceType: "",
			data: data,
			onSuccess: function(r) {
				GmCXt.validateApiResp(successCb,
					params.serviceName,
					r.data.data.tour,
					GmCXt.model.guide);
			}
		};

		params.data.tour_settings = JSON.stringify(params.data.tour_settings);

		xhr.post(params);
	};

	this.tourUnlock = function(data, successCb, fromDeleteTour) {

		var params = {
			serviceName: 'tour/unlock',
			method: 'POST',
			serviceType: "",
			data: data
		};

		var onFail = function(e) {
			if (tour) {
				tour.is_locked = true;
				$rootScope.setTour(tour);
				successCb(tour);
			}

			if (fromDeleteTour) {
				successCb(e);
			}
		};

		var tour = null;

		if (!fromDeleteTour) {
			tour = cache.unlockTour(data, successCb);
		}

		if (!GmCXt.isEmpty(tour) || fromDeleteTour) {
			params.onFail = onFail;
		}

		if (GmCXt.isEmpty(tour)) {
			params.onSuccess = successCb;
		}

		xhr.post(params);
	};

	this.tourCreate = function(data, successCb) {
		data.organization_id = xhr.orgId();

		var cb = function(_t) {
			$rootScope.setTour(_t);
			successCb(_t);
		};

		var params = {
			serviceName: 'tour',
			method: 'POST',
			serviceType: "",
			data: data,
			onSuccess: function(r) {
				GmCXt.validateApiResp(cb,
					params.serviceName,
					r.data.data.tour,
					GmCXt.model.guide);
			}
		};

		cache.createTour(data);

		xhr.post(params);
	};

	this.tourStatus = function(data, successCb) {
		var params = {
			serviceName: 'tour/publish',
			method: 'POST',
			serviceType: "",
			data: data
		};

		var onFail = function(e) {
			if (tour) {
				$rootScope.setTour(tour);
				$rootScope.refreshPageView();
			}
		};

		var tour = {};

		var gs = GmCXt.organization.admin_settings.guide_segmentation;

		if (gs || $rootScope.currentView === 'filter-list') {
			params.onSuccess = function() {

				if ($rootScope.allTourList['cat_' + data.category_id] &&
					$rootScope.allTourList['cat_' + data.category_id]['tour_' + data.tour_id]) {
					var t = $rootScope.allTourList['cat_' + data.category_id]['tour_' + data.tour_id];
					cache.tourStatus(t, data);
				}

				successCb();
			};
			params.onFail = onFail;
		} else {
			tour = cache.updateTourStatus(data);

			if (GmCXt.isEmpty(tour)) {
				params.onSuccess = successCb;
			} else {
				params.onFail = onFail;
			}
		}

		xhr.post(params);
	};

	this.pubUnpubTour = function(data, successCb) {
		var params = {
			serviceName: 'tour/status',
			method: 'POST',
			serviceType: "",
			data: data
		};

		var onFail = function(e) {
			if (!GmCXt.isEmpty(tour)) {

				data.env_name.forEach(function(e) {
					var i = tour.tour_settings.app_publish_env.indexOf(e);

					tour.tour_settings.app_publish_env = tour.tour_settings.app_publish_env.splice(i, 0);
				});

				$rootScope.setTour(tour);
				$rootScope.refreshPageView();
			}
		};

		var tour = {};

		var gs = GmCXt.organization.admin_settings.guide_segmentation;

		if (gs || $rootScope.currentView === 'filter-list') {
			params.onSuccess = function() {

				if ($rootScope.allTourList['cat_' + data.category_id] &&
					$rootScope.allTourList['cat_' + data.category_id]['tour_' + data.tour_id]) {
					var t = $rootScope.allTourList['cat_' + data.category_id]['tour_' + data.tour_id];
					cache.tourEnv(t, data);
				}

				successCb(t);
			};
			params.onFail = onFail;
		} else {
			tour = cache.updateTourEnv(data);

			params.onSuccess = function() {
				if(GmCXt.isEmpty(tour)) {
					successCb();
				} else {
					successCb(tour);
				}
			};

			if (!GmCXt.isEmpty(tour)) {
				params.onFail = onFail;
			} 
		}

		xhr.post(params);
	};

	this.getTourDownload = function(data, successCb) {
		data.organization_id = xhr.orgId();
		var params = {
			serviceName: 'tour/bulk/export',
			method: 'POST',
			serviceType: "",
			data: data,
			onSuccess: successCb
		};

		xhr.post(params);
	};

	this.copyGuides = function(data, successCb) {
		var params = {
			serviceName: 'tour/bulk/copy',
			method: 'POST',
			serviceType: "",
			data: data,
			onSuccess: successCb
		};

		xhr.post(params);
	};

	this.tourUpload = function(data, successCb) {
		var params = {
			serviceName: 'tour/bulk/import',
			method: 'POST',
			serviceType: "",
			data: data,
			onSuccess: successCb
		};

		xhr.post(params);
	};

	this.updateGuide = function(data, successCb) {
		var params = {
			serviceName: 'tour/draft',
			method: 'POST',
			serviceType: "",
			data: data,
			onSuccess: successCb
		};

		cache.clearTourList(data);

		xhr.post(params);
	};

	this.tourCopy = function(data, successCb) {
		var params = {
			serviceName: 'tour/copy',
			method: 'GET',
			serviceType: "",
			data: data
		};

		cache.clearTourList(data);

		xhr.get(params).then(successCb);
	};

	this.getTextToAudio = function(data, cb) {
		var params = {
			serviceName: 'file/audio',
			method: "PUT",
			serviceType: "",
			data: data,
			onSuccess: cb
		};

		xhr.post(params);

	};

	this.getTaskStatus = function(data, successCb) {
		data.organization_id = xhr.orgId();
		var params = {
			serviceName: 'organization/tasks',
			method: 'GET',
			data: data
		};

		xhr.get(params).then(successCb);
	};

	this.getUserProfile = function(cb) {
		var params = {
			serviceName: "user",
			method: "GET",
			data: {
				user_id: GmCXt.user.user_id
			},
			serviceType: ''
		};

		xhr.get(params).then(function(r) {
			GmCXt.validateApiResp(cb,
				params.serviceName,
				r.data.data.user,
				GmCXt.model.user);
		});
	};

	this.visitorVerify = function(data, successCb, errorCb) {
		var params = {
			serviceName: "visitor/verify",
			method: "POST",
			data: data,
			onSuccess: successCb,
			onFail: errorCb
		};

		xhr.post(params);
	};

	this.categoriesDrag = function(data, errorCb) {
		var params = {
			serviceName: "category/updateorder",
			method: "POST",
			data: data,
			onFail: errorCb
		};

		xhr.post(params);
	};

	this.toursDrag = function(data, errorCb) {
		var params = {
			serviceName: "tour/updateorder",
			method: "POST",
			data: data,
			onFail: errorCb
		};

		xhr.post(params);
	};

	this.stepsDrag = function(data, successCb, errorCb) {
		var params = {
			serviceName: "step/updateorder",
			method: "POST",
			data: data,
			onFail: errorCb,
			onSuccess: successCb
		};

		xhr.post(params);
	};

	this.getVisitorVerify = function(data, cb) {
		var params = {
			serviceName: "user/verify",
			method: "GET",
			data: data
		};

		xhr.get(params).then(cb);
	};

	this.getAccessToken = xhr.getAccessToken;

	this.getCdnSignature = xhr.callGetCdnSignature;

	this.postOrgSettings = function(data, cb) {
		data.organization_id = xhr.orgId();
		var params = {
			serviceName: "organization",
			method: "PUT",
			serviceType: "",
			data: data,
			onSuccess: cb
		};

		xhr.post(params);
	};

	this.stepSwap = function(data, successCb) {
		var params = {
			serviceName: 'step/order',
			method: 'POST',
			serviceType: "adminwithparams",
			data: data,
			onSuccess: successCb
		};

		xhr.post(params);
	};

	this.stepCreate = function(data, successCb) {
		var params = {
			serviceName: 'step',
			method: 'POST',
			serviceType: "adminwithparams",
			data: data,
			onSuccess: successCb,
			onFail: successCb
		};

		xhr.post(params);
	};

	this.stepUpdate = function(data, successCb) {
		var params = {
			serviceName: 'step',
			method: 'PUT',
			serviceType: "adminwithparams",
			data: data,
			onSuccess: successCb
		};

		xhr.post(params);
	};

	this.stepUpdateLang = function(data, successCb) {
		var params = {
			serviceName: 'step/language/update',
			method: 'PUT',
			serviceType: "adminwithparams",
			data: data,
			onSuccess: successCb
		};

		xhr.post(params);
	};

	this.stepDelete = function(data, successCb) {
		var params = {
			serviceName: 'step',
			method: 'DELETE',
			serviceType: "adminwithparams",
			data: data,
			onSuccess: successCb
		};

		xhr.post(params);
	};

	this.bulkStepDelete = function(data, successCb) {
		var params = {
			serviceName: 'step/bulk/delete',
			method: 'POST',
			serviceType: "",
			data: data,
			onSuccess: successCb
		};

		xhr.post(params);
	};

	this.stepCopy = function(data, successCb) {
		var params = {
			serviceName: 'step/copy',
			method: 'GET',
			serviceType: "",
			data: data
		};

		xhr.get(params).then(successCb);
	};

	this.bulkStepCopy = function(data, successCb) {
		var params = {
			serviceName: 'step/bulk/copy',
			method: 'POST',
			serviceType: "",
			data: data,
			onSuccess: successCb
		};

		xhr.post(params);
	};

	this.uploadBase64Image = function(data, successCb, errorCb) {
		var params = {
			serviceName: "file/base64image",
			method: "POST",
			serviceType: "adminwithparams",
			data: data,
			onSuccess: successCb,
			onFail: errorCb
		};

		this.upload(params);
	};

	this.uploadImageFile = function(data, successCb, errorCb) {
		data.append("organization_id", xhr.orgId());
		var params = {
			serviceName: "file/image",
			method: "POST",
			serviceType: "",
			data: data,
			fileInput: true,
			onSuccess: successCb,
			onFail: errorCb
		};

		this.upload(params);
	};

	this.uploadAudio = function(data, successCb, errorCb) {
		var params = {
			serviceName: "file/audio",
			method: "POST",
			requireToken: true,
			data: data,
			onSuccess: successCb,
			onFail: errorCb
		};

		this.upload(params);
	};

	this.userApiKeySignin = xhr.userApiKeySignin;

	this.userOrgKeySignin = xhr.userOrgKeySignin;

	this.userSignIn = xhr.userSignIn;

	this.userSignOut = xhr.userSignOut;

	this.verifyUser = xhr.verifyUser;

	this.forgetPassword = xhr.forgetPassword;

	this.changePassword = xhr.changePassword;

	this.resetPassword = xhr.resetPassword;

	this.getOrganization = xhr.getOrganization;

	this.getDomains = xhr.getDomains;

	this.sendMsgToMyBot = xhr.sendMsgToMyBot;

	this.postUserProfile = xhr.postUserProfile;

	this.userTranscation = xhr.userTranscation;

	this.getAllLanguages = xhr.getAllLanguages;

	this.fileUploadUrl = function(data) {
		data.organization_id = xhr.orgId();

		var sn = "file/upload/url";
		var params = {
			serviceName: sn,
			method: "GET",
			serviceType: "",
			data: data
		};

		return xhr.get(params);
	};

	this.analyticsCreate = function(data) {
		var params = {
			serviceName: "analytics/create",
			method: "POST",
			data: data
		};
		xhr.post(params);
	};

	this.updateApp = function(data, successCb) {
		var params = {
			serviceName: 'application',
			method: 'PUT',
			serviceType: "",
			data: data,
			onSuccess: successCb
		};

		xhr.post(params);
	};

	this.getSegmentList = function() {
		var data = {
			application_id: xhr.appId(),
			organization_id: xhr.orgId()
		};

		if (GmCXt.isMirrorApp()) {
			data.application_id = GmCXt.getBaseAppId();
		}
		
		var params = {
			serviceName: "segment/list",
			method: "GET",
			data: data
		};

		return xhr.get(params);
	};

	this.getStep = function(data, cb) {
		data.application_id = xhr.appId();
		if (GmCXt.isMirrorApp()) {
			data.application_id = GmCXt.getBaseAppId();
		}

		data.organization_id = xhr.orgId();

		var params = {
			serviceName: 'step',
			method: 'GET',
			serviceType: "",
			data: data
		};

		xhr.get(params).then(function(res) {
			cb(res);
		});
	};

	this.tourCopyTemplate = function(data, successCb) {
		var params = {
			serviceName: 'tour/copy/template',
			method: 'POST',
			serviceType: "",
			data: data,
			onSuccess: successCb
		};

		xhr.post(params);
	};

	this.getAppAllShortcuts = function(data, cb) {
        data.application_id = xhr.appId();
 
        var params = {
            serviceName: 'application/shortcut_keys',
            method: 'GET',
            data: data
        };
 
        xhr.get(params).then(function(r) {
            cb(r);
        });
	};

	this.getTourCDN = xhr.getTourCDN;

	this.getTourCdnUrl = xhr.getTourCdnUrl;

	this.getCategoryListStorage = xhr.getCategoryListStorage;

	this.getCategoryDetailsStorage = xhr.getCategoryDetailsStorage;

	this.getTourListStorage = xhr.getTourListStorage;

	this.getContextualTourStorage = xhr.getContextualTourStorage;

	this.getContextualTour = xhr.getContextualTour;

	this.getOrgJson = xhr.getOrgJson;

	this.getAppJson = xhr.getAppJson;

	this.resendOTP = xhr.resendOTP;

	this.getTours = xhr.getTours;

	this.getTaskList = xhr.getTaskList;

	this.getTaskDetails = xhr.getTaskDetails;

	this.getTaskFolderDetails = xhr.getTaskFolderDetails;

	this.getTaskListDetails = xhr.getTaskListDetails;

	this.markTaskGuideComplete = xhr.markTaskGuideComplete;

	this.getSearchTourList = xhr.getSearchTourList;


	
	this.generateKeywords = function(data,successCb,errorCb){
		var self = this; 
		var onSuccess= function(response) {
			var stringContent = response.data.choices[0].message.content;
			var startIndex = stringContent.indexOf('{');
			var endIndex = stringContent.indexOf('}', startIndex);

			if (startIndex !== -1 && endIndex !== -1) {
				stringContent = stringContent.substring(startIndex, endIndex + 1);
			} 

			var arrayContent = stringContent.replace(/["{}]/g, '').trim().split(', ');
			successCb(arrayContent);
    	};

   	 	var onError= function(error) {
			if(error && error.data && error.data.code ===50001){
				self.getNewGenAIToken()
                        .then(function(response) {
							storage.genAIToken.set(response);
							makeApiCall(); // Retry the original API call with the new token
                        })
                        .catch(function(tokenError) {
							console.error('Token fetch failed:', tokenError);
                        });
			}else{
				errorCb(error);
			}
   		};

    	var body={
			"model": "zephyr-7b-beta",
			"messages": [
				{
					"role": "user",
					"content": "Generate keywords for below text\\nTitle: Configure the My Learning Page\\nDescription: For Cornerstone CSX, each user will have a dedicated My Learning Page that acts like a dashboard of users, showing quick reference content. Each My Learning Page is also configurable by each user. In this learning guide, we walk you through the steps to configure your My Learning Page as a user."
				},
				{
					"role": "assistant",
					"content": "{\"learning page\", \"configure\"}"
				},
				{
					"role": "user",
					"content": "Generate keywords for below text\\nTitle: Access Assign Learning from the Manage Assignments Page\\nDescription: Admins of the LMS are able to assign learning content to employees so they can complete and report on their progress. This workflow guide follows the process for a user to access my assigned learning from the LXP Assignments page."
				},
				{
					"role": "assistant",
					"content": "{\"learning\", \"assignments\", \"my learning\"}"
				},
				{
					"role": "user",
					"content": "Generate keywords for below text\\nTitle: Merge User Accounts\\nDescription: In some case, duplicate user accounts could be created within the LXP. This walkthrough shows the process of merging user accounts through the LXP Admin Portal."
				},
				{
					"role": "assistant",
					"content": "{\"admin\", \"merge\", \"manage users\"}"
				},
				{
					"role": "user",
					"content": "Generate keywords for below text\\nTitle: Bulk Initiative Configuration\\nDescription: A workflow that shows how to change the configuration of initiatives using a bulk process. This can be done by uploading a CSV file with a list of changes to be made."
				},
				{
					"role": "assistant",
					"content": "{\"bulk change\", \"initiative\", \"configuration\"}"
				},
				{
					"role": "user",
					"content": "Generate keywords for below text\\nTitle: How to create your Goals in Galaxy\\nDescription: Each employee is required to create annual goals that they will then track throughout the year. This tutorial guide shows you how to create goals from Galaxy."
				},
				{
					"role": "assistant",
					"content": "{\"galaxy\", \"goals\"}"
				},
		
				  {
				  "role": "user",
				  "content": "Generate keywords for below text\\nTitle:\"" + data.tour_title + "\"\\nDescription: \"" + data.tour_description + "\""
				  }
		  
			],
			"temperature": 0.0
		};
    	
			
		
		var makeApiCall = function() {
			var headers = {
				'Authorization': 'Bearer ' + $rootScope.genAIToken, // Add bearer token to headers
				'Content-Type': 'application/json' // Set content type to JSON
			};
			// Construct the HTTP request object
			var httpObject = {
				url: 'https://itf-llm-internaldev.usw2.dev.bdp.int.us.csod.gcp/v2/chat/completions', // API endpoint URL
				method: 'POST', // HTTP method (e.g., 'GET', 'POST', etc.)
				headers: headers,
				data: body // Request body
			};
			// Make the API call using $http
			$http(httpObject)
			.then(function(response) {
				// Handle successful response
				if (onSuccess) onSuccess(response);
			})
			.catch(function(error) {
				// Handle error response
				console.error('API call failed:', error);
				if (onError) onError(error);
			});
		};

		makeApiCall();
	};


	this.getNewGenAIToken = function() {
		return new Promise(function(resolve, reject) {
			var tokenRequest = {
				url: 'https://itf-llm-internaldev.usw2.dev.bdp.int.us.csod.gcp/v2/get/token',
				method: 'GET'
			};
	
			$http(tokenRequest)
				.then(function(response) {
					resolve(response.data);
				})
				.catch(function(error) {
					console.error('Token fetch failed:', error);
					reject(error);
				});
		});
	};
	
};

if (GmCXt.conf.provider === 'GuideMe') {
	app.service('api', ['AuthLogin', 'storage', '$http', '$rootScope', '$timeout', 'mgError', guideMeAPIProvider]);
}
app.service('apiQueue', ['$rootScope', 'api', function($rootScope, api) {

	var tasks = [];

	var taskIndex;

	var firstTask = false;

	this.queue = function(apiCall, params, callback, errorCb, appId) {

		if (firstTask) {
			firstTask = false;
		} else {
			firstTask = true;
		}

		var task = {
			params: params,
			callback: callback,
			errorCb: errorCb,
			forceApi: true,
			appId: appId
		};

		switch (apiCall) {
			case "getTour":
				task.req = api.getTour;
				break;

			case "getCategoryDetails":
				task.req = api.getCategoryDetails;
				break;

		}

		tasks.push(task);

		taskIndex = tasks.length;
		tasks[taskIndex - 1].state = 0;

		if (firstTask) {
			queueReadyState(taskIndex - 1, task);
		}
	};

	function queueReadyState(index, t) {

		t.req(t.params, t.callback, t.errorCb, t.forceApi, t.appId).then(function() {

			//tasks[index - 1].state = 1;

			var nextJob = tasks[index + 1];

			if (nextJob)
				queueReadyState(index + 1, nextJob);
			else
				tasks = [];

		});

	}

	// function createQueue(tasks) {
	// 	var taskIndex = 0;

	// 	return new Promise(done => {
	// 		const handleResult = index => result => {
	// 			tasks[index] = result;
	// 			taskIndex++;
	// 			getNextTask();
	// 		};
	// 		const getNextTask = () => {
	// 			if (taskIndex < tasks.length) {
	// 				tasks[taskIndex]().then(handleResult(taskIndex)).catch(handleResult(taskIndex));
	// 			} else {
	// 				done(tasks);
	// 			}
	// 		};
	// 		getNextTask();
	// 	});
	// }

}]);
function commonUpdateService($rootScope, storage, api, $state) {

	var pub = {};

	pub.updateTour = function(t, currentAppId, updatedOrder) {
		var params = {
			tour_id: t.tour_id,
			category_id: t.category_id
		};

		var cb = function(_t) {

			if (GmCXt.inPlayer) {
				if (currentAppId) {
					$rootScope.updateTourToStorage(_t, false, currentAppId);
				} else {
					pub.updateScope(_t);
				}

				delete $rootScope.toursModifiedTime[t.tour_id];
				storage.toursModifiedTime.set($rootScope.toursModifiedTime);

			}

			if (GmCXt.FT.creatorApp) {
				pub.updateTourInTourList(_t.tour_id, _t);
			}

		};

		var ecb = function() {
			$rootScope.toursModifiedTime[t.tour_id] = t;
			storage.toursModifiedTime.set($rootScope.toursModifiedTime);

			$rootScope.removeTour(params.category_id, t.tour_id, currentAppId);
			pub.updateScope(t);
		};

		// If updateOrder -  directly call CB and return;
		if(updatedOrder){
			cb(updatedOrder);
			return;
		}

		var lang = GmCXt.getLXPLang() ? GmCXt.getLXPLang() : $rootScope.language;

		if (!GmCXt.checkDefaultLangForTour(t, lang)) {
			params.language = lang;
		}

		api.getTour(params, cb, ecb, true, currentAppId);
	};

	pub.updateScope = function(d) {
		var pageScope = $rootScope.getPageScope();

		if ($rootScope.currentView === 'tour-list' && pageScope.categoryId === d.category_id) {
			pageScope.tours = [];
			pageScope.isfirst = true;
			pageScope.refreshView();

		} else if ($rootScope.currentView === 'tour-view' && pageScope.tourId === d.tour_id) {
			pageScope.tour = {};
			pageScope.refreshView();

		} else if ($rootScope.currentView === 'team-guides' && parseInt(d.parent_id) === 0) {
			pageScope.categories = [];
			pageScope.refreshView();

		} else if ($rootScope.currentView === 'category-list' &&
			(pageScope.categoryId === d.category_id || parseInt(d.parent_id) === pageScope.categoryId)) {
			pageScope.sub_categories = [];
			pageScope.refreshView();
		} else if ($rootScope.currentView === 'home') {

			pageScope.tours = [];
			pageScope.forceRefresh = true;

			$rootScope.contextTours = {};
			pageScope.refreshView();

		} else {
			$rootScope.goToCurrentPage();
		}

	};

	pub.updateTourInTourList = function(tourId, value, property) {

		var pageScope = $rootScope.getPageScope();

		if (pageScope && pageScope.tours) {
			for (var key = 0; key < pageScope.tours.length; key++) {

				if (parseInt(pageScope.tours[key].tour_id) === parseInt(tourId)) {

					if (property) {
						pageScope.tours[key][property] = value;
					} else {
						pageScope.tours[key] = value;
					}

					break;
				}
			}

			pageScope.tours = GmCXt.removeDuplicates(pageScope.tours);

			if (!pageScope.$$phase) pageScope.$apply();
		}
	};

	pub.categoryUpdateCb = function(c, scope) {
		delete $rootScope.subCategoryStore['cat_' + c.category_id];

		delete $rootScope.allTourList['cat_' + c.category_id];

		if (!GmCXt.inPlayer) {
			scope.offset = 0;
		}

		if (c.has_child && !(c.has_tour)) {

			if ($rootScope.currentView === 'category-list') {
				scope.limit = $rootScope.getApiLimit(parseInt(c.total_sub_category));
				scope.getSubCategories();
			} else
			if ($rootScope.currentView === 'tour-list') { //redirect to category-list
				GmCXt.redirect('#/category/' + c.category_id + '/list');
			}
		} else {

			if ($rootScope.currentView === 'tour-list') {

				var totalTours = parseInt(c.total_unpublish_tour) + parseInt(c.total_publish_tour);

				scope.limit = $rootScope.getApiLimit(totalTours);
				scope.getTourList();
			} else if ($rootScope.currentView === 'category-list' && c.has_tour) { //redirect to tour-list
				GmCXt.redirect('#/category/' + c.category_id + '/tour/list');
			} else if ($rootScope.currentView === 'category-list' && !c.has_tour) { //redirect to tour-list
				GmCXt.redirect('#/category/' + c.category_id + '/list');
			}
		}
	};

	pub.updateCat = function(c, appId) {

		return new Promise(function(resolve, reject) {

			var cb = function(_c) {
				resolve(_c);
			};

			var forceApiCall = GmCXt.inPlayer ? true : false;

			$rootScope.getCategoryApi(c.category_id, cb, forceApiCall, appId);
		});

	};

	return pub;
}
function creatorCache(AuthLogin, storage, $http, $rootScope, $timeout, mgError) {

	var pub = {};

	var xhr = new commonApi(AuthLogin, storage, $http, $rootScope, mgError);

	function checkTourCatFound(catId) {

		var tourCatFound = false;

		if (catId && !GmCXt.isEmpty($rootScope.allTourList['cat_' + catId])) {
			tourCatFound = true;
		}

		return tourCatFound;
	}

	pub.getCatList = function(data, cb) {

		if (!GmCXt.isEmpty($rootScope.refreshCache) &&
			!($rootScope.getCategory(data.parent_id))) {
			return false;
		}

		if ($rootScope.refreshAllGuides && !data.parent_id) {
			return false;
		}

		if (!GmCXt.isEmpty($rootScope.categoryStore) && !data.parent_id) {

			var l = $rootScope.categoryStore.length;
			if (data.offset < l) {
				xhr.getCategoryListStorage(data, cb);
				return true;
			}

		}

		if (!GmCXt.isEmpty($rootScope.subCategoryStore) && data.parent_id) {
			var subCats = $rootScope.subCategoryStore['cat_' + data.parent_id];

			var parentCat = $rootScope.getCategory(data.parent_id);
			var totalSubCats = parseInt(parentCat.total_sub_category);

			/* Read from storage when:  
			 * AND  offset < sub-cat in storage
			 * AND  total sub-cat in category <= sub-cat in storage
			 */

			if (subCats && subCats.length &&
				totalSubCats <= subCats.length &&
				data.offset < subCats.length) {
				xhr.getCategoryListStorage(data, cb);
				return true;
			}
		}

		if (data.parent_id) {
			delete $rootScope.subCategoryStore['cat_' + data.parent_id];

		} else {
			$rootScope.categoryStore = [];
		}

		return false;

	};

	pub.getCatDetails = function(data, cb) {
		var cat = $rootScope.allCategories['cat_' + data.category_id];

		if ($rootScope.isUpdateNeeded(data.category_id, 'category')) {
			return false;
		} else if (cat &&
			(GmCXt.isEmpty($rootScope.refreshCache) ||
				$rootScope.refreshCache.category_id !== data.category_id ||
				$rootScope.refreshCache.parent_id !== data.category_id)
		) {
			cb(cat);
			return true;
		}
	};

	pub.updateCat = function(data, successCb) {

		var cat = GmCXt.createDeepCopy($rootScope.getCategory(data.category_id));

		if (cat) {

			var updatedCat = GmCXt.createDeepCopy($rootScope.getCategory(data.category_id));

			updatedCat.category_id = data.category_id;
			updatedCat.category_title = data.category_title;
			updatedCat.category_description = data.category_description;
			updatedCat.category_image = data.category_image;
			updatedCat.image_url = data.image_url;
			updatedCat.parent_id = data.parent_id;
			updatedCat.language = data.language;

			if (parseInt(updatedCat.category_image) === 0) {
				updatedCat.image_url = $rootScope.staticContentPath + "default_category.png";
			}

			updatedCat.modification_date = GmCXt.getCurrentTimeInSec();

			$rootScope.addCategory(updatedCat);

			successCb(updatedCat);
		}

		return cat;
	};

	pub.deleteCat = function(data) {

		var cat = $rootScope.getCategory(data.category_id);

		if (cat) {

			if (parseInt(cat.parent_id)) {

				var parentCat = $rootScope.getCategory(cat.parent_id);

				var totalSubCats = parseInt(parentCat.total_sub_category);
				totalSubCats--;

				totalSubCats = totalSubCats > 0 ? totalSubCats : 0;

				$rootScope.updateCategory(parentCat, "total_sub_category", totalSubCats.toString());
			}

			$rootScope.removeCategory(cat);
			return cat;
		} else {
			return cat;
		}
	};

	pub.getTourList = function(data, cb) {

		return new Promise(function(resolve, reject) {

			var totalToursInStr = Object.keys($rootScope.allTourList['cat_' + data.category_id]).length;

			if (!totalToursInStr && (GmCXt.isEmpty($rootScope.refreshCache) ||
					$rootScope.refreshCache.category_id !== data.category_id ||
					$rootScope.refreshCache.parent_id !== data.category_id)) {
				reject();
			} else if (totalToursInStr && !data.search_text) {

				// If refresh is clicked then request goes.
				if($rootScope.isRefreshClicked === true) {
					reject();
				}
				var totalToursInCat = 0;
				if (!GmCXt.isEmpty($rootScope.allCategories)) {
					totalToursInCat = parseInt($rootScope.allCategories['cat_' + data.category_id].total_publish_tour);

					if (!data.published_guides) {
						totalToursInCat += parseInt($rootScope.allCategories['cat_' + data.category_id].total_unpublish_tour);
					}
				}

				/* Read from storage when:  
				 * AND  offset < tours in storage
				 * AND  total tours in category <= tours in storage
				 */

				if (data.offset < totalToursInStr &&
					totalToursInCat <= totalToursInStr && !data.reloadFlag) {
					xhr.getTourListStorage(data, function(tl) {
						resolve(tl);
					});
				} else {
					reject();
				}

			} else {
				reject();
			}
		});

	};

	pub.getTour = function(data, cb) {
		var t;

		if (checkTourCatFound(data.category_id) && !$rootScope.isUpdateNeeded(data.tour_id, 'tour')) {
			t = $rootScope.allTourList['cat_' + data.category_id]['tour_' + data.tour_id];
		}

		if (t && t.steps.length && parseInt(t.step_count)) {
			cb(t);
			return true;
		} else {
			return false;
		}
	};

	pub.deleteTour = function(data, cb) {

		var tour;

		if (checkTourCatFound(data.category_id)) {

			tour = $rootScope.allTourList['cat_' + data.category_id]['tour_' + data.tour_id];
			$rootScope.removeTour(data.category_id, data.tour_id);
			cb();
			return tour;
		}

		return tour;
	};

	pub.updateTour = function(data, successCb) {
		var tour;

		if (checkTourCatFound(data.category_id)) {
			tour = GmCXt.createDeepCopy($rootScope.allTourList['cat_' + data.category_id]['tour_' + data.tour_id]);

			var updatedTour = GmCXt.createDeepCopy($rootScope.allTourList['cat_' + data.category_id]['tour_' + data.tour_id]);

			if (!GmCXt.isEmpty(updatedTour)) {
				updatedTour.tour_title = data.tour_title;
				updatedTour.tour_description = data.tour_description;
				updatedTour.tour_type = data.tour_type;
				updatedTour.tour_image = data.tour_image;
				updatedTour.tour_settings = data.tour_settings;
				updatedTour.is_locked = data.is_locked;

				if (parseInt(updatedTour.tour_image) === 0) {
					updatedTour.image_url = GmCXt.getDefaultGuideIcon();
				}

				$rootScope.setTour(updatedTour);
				//successCb(updatedTour);
			}
		}

		return tour;
	};

	pub.unlockTour = function(data, successCb, forceApi) {

		var tour;

		if (checkTourCatFound(data.category_id)) {
			tour = GmCXt.createDeepCopy($rootScope.allTourList['cat_' + data.category_id]['tour_' + data.tour_id]);

			if (forceApi) return tour;

			var updatedTour = GmCXt.createDeepCopy($rootScope.allTourList['cat_' + data.category_id]['tour_' + data.tour_id]);
			if (!GmCXt.isEmpty(updatedTour)) {
				updatedTour.is_locked = false;
				updatedTour.user_id = $rootScope.user.user_id;
				$rootScope.setTour(updatedTour);

				successCb(updatedTour);

			}
		}

		return tour;
	};

	function updateCatDetails(d) {
		var cat = $rootScope.allCategories['cat_' + d.category_id];

		if (!cat) return;
		if (d.action === "unpublish") {
			cat.total_unpublish_tour++;
			cat.total_publish_tour--;
			cat.total_publish_tour = cat.total_publish_tour > 0 ? cat.total_publish_tour : 0;
		} else {
			cat.total_publish_tour++;
			cat.total_unpublish_tour--;
			cat.total_unpublish_tour = cat.total_unpublish_tour > 0 ? cat.total_unpublish_tour : 0;
		}

		$rootScope.addCategory(cat);
	}

	pub.tourStatus = function(t, d) {
		t.is_published = !t.is_published;

		$rootScope.setTour(t);

		updateCatDetails(d);
	};

	pub.updateTourStatus = function(data, successCb) {

		var tour;

		if (checkTourCatFound(data.category_id)) {
			tour = GmCXt.createDeepCopy($rootScope.allTourList['cat_' + data.category_id]['tour_' + data.tour_id]);

			var updatedTour = GmCXt.createDeepCopy($rootScope.allTourList['cat_' + data.category_id]['tour_' + data.tour_id]);

			if (!GmCXt.isEmpty(updatedTour)) {
				pub.tourStatus(updatedTour, data);

				successCb(updatedTour);
			}
		}

		return tour;
	};

	pub.tourEnv = function(t, d) {

		if (d.action === "publish") {
			t.tour_settings.app_publish_env = d.env_name;
			if (t.parent_tour_id && d.env_name.indexOf($rootScope.highestEnv) !== -1) {
				$rootScope.removeTour(t.category_id, t.parent_tour_id);
				t.parent_tour_id = null;
			}
			t.is_published = true;
		} else {
			var pubEnv = [];

			if (!GmCXt.isEmpty(d.env_name) && !GmCXt.isEmpty(t.tour_settings.app_publish_env)) {
				pubEnv = $rootScope.appEnvs.filter(function(e) {
					return (d.env_name.indexOf(e) === -1);
				});
			}

			t.tour_settings.app_publish_env = pubEnv;
			var draftTourId = $rootScope.draftExists(t.tour_id, t.category_id);

			if (draftTourId) {
				$rootScope.removeTour(t.category_id, draftTourId);
			}
			t.is_published = pubEnv && pubEnv.length ? true : false;
		}

		updateCatDetails(d);

		$rootScope.setTour(t);
	};

	pub.updateTourEnv = function(data) {

		var tour;

		if (checkTourCatFound(data.category_id)) {
			tour = GmCXt.createDeepCopy($rootScope.allTourList['cat_' + data.category_id]['tour_' + data.tour_id]);

			var updatedTour = GmCXt.createDeepCopy($rootScope.allTourList['cat_' + data.category_id]['tour_' + data.tour_id]);

			if (!GmCXt.isEmpty(updatedTour)) {
				pub.tourEnv(updatedTour, data);
			}
		}

		return tour;
	};

	pub.clearTourList = function(data) {
		delete $rootScope.allTourList['cat_' + data.category_id];
	};

	pub.createTour = function(data) {

		var cat = $rootScope.allCategories['cat_' + data.category_id];
		if (cat) {
			var totalTours = parseInt(cat.total_unpublish_tour);
			totalTours++;
			totalTours = (totalTours > 0) ? totalTours : 0;
			$rootScope.updateCategory(cat, "total_unpublish_tour", totalTours.toString());
		}
	};

	return pub;
}
var app = angular.module('guideme');
app.service('creatorUpdateService', ['$rootScope', 'storage', 'api', '$state', function($rootScope, storage, api, $state) {

	var commonUpdate = new commonUpdateService($rootScope, storage, api, $state);

	this.addTourList = function(catId, tlist) {

		tlist.forEach(function(t) {

			var cid = catId ? catId : t.category_id;

			var cTag = 'cat_' + cid;

			if (!$rootScope.allTourList[cTag]) {
				$rootScope.allTourList[cTag] = {};
			}

			$rootScope.allTourList[cTag]['tour_' + t.tour_id] = t;
		});

		storage.allTourList.set($rootScope.allTourList);
	};

	this.setTour = function(tour, doNotupdate) {
		var catId = 'cat_' + tour.category_id;
		var tourId = 'tour_' + tour.tour_id;

		if (!$rootScope.allTourList[catId]) {
			$rootScope.allTourList[catId] = {};
		}

		if (GmCXt.FT.creatorApp) {
			tour.modification_date = GmCXt.getCurrentTimeInSec();

			if (!doNotupdate) {
				this.updateServerUpdateList(tour.tour_id, "tour");
			}
		}

		$rootScope.allTourList[catId][tourId] = tour;

		if (!GmCXt.inPlayer) {
			storage.allTourList.set($rootScope.allTourList);
		}
	};

	this.deleteTourServerUpdate = function(tid) {

		for (var cat in $rootScope.allTourList) {
			var category = $rootScope.allTourList[cat];
			for (var tour in category) {
				if ('tour_' + tid === tour) {

					var catId = cat.split('_')[1];

					$rootScope.removeTour(catId, tid);
				}
			}
		}
	};

	function getCatContent(cid, scope) {
		if ($rootScope.currentView === 'tour-list') {
			scope.getTourList();
		} else {
			scope.getSubCategories();
		}
	}

	function updatePageView(_c, isAllGuides, isParentCat) {
		var pageScope = $rootScope.getPageScope();

		if (isParentCat) {
			if (pageScope.category_id === _c.category_id) {
				pageScope.category = _c;
			}
		} else {
			var cats = isAllGuides ? pageScope.categories : pageScope.sub_categories;

			if (!GmCXt.isEmpty(cats)) {
				for (var key = 0; key < cats.length; key++) {
					var cat = cats[key];

					if (cat.category_id === _c.category_id) {
						cats[key] = _c;
						break;
					}
				}
			}
		}

		if (!pageScope.$$phase) pageScope.$apply();
	}

	function checkParentCat(scope, fromSyncApi, catFoundOnView) {

		if (scope.categoryId) {
			var isCatUpdateNeeded = $rootScope.isUpdateNeeded(scope.categoryId, 'category');

			if (isCatUpdateNeeded) {

				commonUpdate.updateCat({
					category_id: scope.categoryId
				}).then(function(c) {

					updatePageView(c, false, true);

					commonUpdate.categoryUpdateCb(c, scope);

				});
			} else if (fromSyncApi) {
				$rootScope.catUpdatePending = true;
			}

			var isCatDeleted = $rootScope.serverDeletes.categories.indexOf(scope.categoryId) !== -1 ? true : false;

			if (isCatDeleted) {
				$rootScope.goBack();
			}
		}
	}

	function checkCatDelete(categoryId) {
		var isCatDeleted = $rootScope.serverDeletes.categories.indexOf(categoryId) !== -1 ? true : false;

		if (isCatDeleted) {
			$rootScope.refreshAllGuides = true;
		}
	}

	function checkCatUpdates(catList, isAllGuides, catId) {

		var foundInView = false;

		catList.forEach(function(c) {
			var updateNeeded = $rootScope.isUpdateNeeded(c.category_id, 'category');

			if (updateNeeded) {
				foundInView = true;
				commonUpdate.updateCat(c).then(function(c) {
					updatePageView(c, true, false);
				});
			}

			if (isAllGuides) {
				checkCatDelete(catId);
			}
		});

		return foundInView;
	}

	function checkForNewCat() {

		var catFound = true;
		if (!GmCXt.isEmpty($rootScope.serverUpdates)) {
			for (var i in $rootScope.serverUpdates) {

				if (!catFound) break;

				if (i.indexOf('category_') !== -1) {

					var cid = i.split('_')[1];

					catFound = $rootScope.getCategory(cid) ? true : false;
				}
			}
		}

		var isNewCat = !catFound;
		return isNewCat;
	}

	function checkCatAdded(foundInView, fromApi, pageScope) {

		if ($rootScope.currentView === 'team-guides') {
			if ($rootScope.refreshAllGuides) {
				$rootScope.refreshPageView();
			} else if ((!foundInView && fromApi) || $rootScope.catUpdatePending) {

				var newCat = checkForNewCat();

				if (newCat) {
					$rootScope.refreshPageView();
				}
				$rootScope.catUpdatePending = false;
			}
		} else {
			checkParentCat(pageScope, fromApi);
		}
	}

	this.checkCurrentViewForUpdate = function(fromSyncApi) {

		if (GmCXt.isPlayer()) return;

		var scope = $rootScope.getPageScope();

		if (scope) {

			if ($rootScope.currentView === 'tour-list') {

				scope.tours.forEach(function(t) {
					var updateNeeded = $rootScope.isUpdateNeeded(t.tour_id, 'tour');

					if (updateNeeded) {
						commonUpdate.updateTour(t);
					}
				});

				checkParentCat(scope, fromSyncApi);

			} else if ($rootScope.currentView === 'team-guides') {
				var cats = scope.categories;

				var catFountInView = checkCatUpdates(cats, true, scope.categoryId);

				checkCatAdded(catFountInView, fromSyncApi, scope);

			} else if ($rootScope.currentView === 'category-list') {

				var cats = scope.sub_categories;

				$rootScope.catUpdatePending = true;

				var catFountInView = checkCatUpdates(cats, false, scope.categoryId);

				checkCatAdded(catFountInView, fromSyncApi, scope);

			} else if ($rootScope.currentView === "tour-view") {

				$rootScope.catUpdatePending = true;
				var updateNeeded = $rootScope.isUpdateNeeded(scope.tourId, 'tour');

				if (updateNeeded) {
					scope.refreshView();
				}

				var isTourDeleted = $rootScope.serverDeletes.tours.indexOf(scope.tourId) >= 0 ? true : false;

				if (isTourDeleted) {
					$rootScope.goBack();
				}
			}
		}
	};

	var getEntity = function(type, id) {

		var e = {};
		if (type === 'category') {
			e = $rootScope.getCategory(id);
		} else if (type === 'tour') {
			e = $rootScope.getTourFromId(id);
		}

		return e;
	};

	this.isUpdateNeeded = function(id, type) {

		// update not needed when no server updates have been received
		if (GmCXt.isEmpty($rootScope.serverUpdates)) return false;

		var e = getEntity(type, id);

		// updated not needed when entity not found in storage
		if (GmCXt.isEmpty(e)) return false;

		var creatorModifiedTime = parseInt(e.modification_date) || 0;
		var serverModifiedTime = $rootScope.serverUpdates[type + '_' + id] || 0;

		var updateNeeded = false;
		var diff = serverModifiedTime - creatorModifiedTime;

		if (diff > 2) {
			updateNeeded = true;
		}

		var msg = "isUpdateNeeded: " + type + '_' + id + " .....?" + updateNeeded + "...time difference..." + diff;
		GmCXt.log(61, msg);

		return updateNeeded;
	};

	function checkTourInView(tid, cid) {
		var scope = $rootScope.getPageScope();
		if (scope && scope.tourId === tid) {
			$rootScope.goBack();
		}
	}

	function checkCatInView(cid) {
		var scope = $rootScope.getPageScope();

		if (scope && scope.categoryId === cid) {
			$rootScope.goBack();
		} else if ($rootScope.currentView === 'team-guides') {
			$rootScope.refreshPageView();
		}
	}

	this.deleteCategoryServerUpdate = function(catId) {

		var parentCat = $rootScope.getCategory(catId).parent_id;

		$rootScope.removeCategory({
			category_id: catId
		});

		$rootScope.refreshAllGuides = false;

		if (parentCat === '0') {
			$rootScope.refreshAllGuides = true;
		}

		//checkCatInView(catId);
	};

	this.updateServerUpdateList = function(id, type) {
		delete $rootScope.serverUpdates[type + '_' + id];
		storage.serverUpdates.set($rootScope.serverUpdates);
	};

	this.updateTourProperty = function(tour, value, property) {
		if (GmCXt.isEmpty(tour)) return;

		if ($rootScope.allTourList['cat_' + tour.category_id] &&
			$rootScope.allTourList['cat_' + tour.category_id]['tour_' + tour.tour_id]) {

			$rootScope.allTourList['cat_' + tour.category_id]['tour_' + tour.tour_id][property] = value;

		}

		storage.allTourList.set($rootScope.allTourList);
	};
}]);
var errorService = function($rootScope, AuthLogin, authService) {

	this.try = function(fun, source) {

		try {
			return fun();
		} catch (e) {
			this.show(e, source);
		}
	};

	this.show = function(e, source) {
		if (isContextError(e)) {
			e = $rootScope.labels.extensionContextError;
		}
		var msg = e + (source ? ' (Error: ' + source + ') ' : '');
		$rootScope.showPopup(msg, '', 'alert');
	};

	function isContextError(err) {
		err = err.toString();
		if (err && err.indexOf("Extension context invalidated") !== -1) {
			return true;
		} else {
			return false;
		}
	}

	function showErrorMsg(msg, code) {
		$rootScope.showSpinner = false;
		$rootScope.settingsLoader = false;

		if (code) {
			msg = msg + ' (Error: ' + code + ')';
		}
		$rootScope.showPopup(msg, '', 'alert');
	}

	this.on = function(data) {
		$rootScope.isApiCallOn = false;
		if (data != null) {

			var c = parseInt(data.code);

			if (c === 2036 && (data.url.indexOf('user/signout') > 0 || data.url.indexOf('user/token') > 0)) {
				$rootScope.clearSession();
				$rootScope.showWidget();
				return false;
			}

			switch (true) {
				case (c === 3044):
					showErrorMsg($rootScope.labels.segmentationRequired, c);
					break;

				case (c === 1001):
					showErrorMsg($rootScope.labels.notAutorised, c);
					break;

				case (c === 1003):
					var errMsg = $rootScope.labels[1003] + '(Error:' + c + ')';
					$rootScope.showPopup(errMsg, function() {
						$rootScope.clearSession("1003: Access token invalid");
					}, 'alert');
					break;

				case (c === 1007):
					$rootScope.getAccessTokenFromRefreshToken();
					break;

				case (c === 1005):
					if (data.message[0] === "Organization not found") {
						showErrorMsg($rootScope.labels.orgError, c);
					} else {
						showErrorMsg($rootScope.labels[c], c);
					}
					break;

				case (c === 1009):
					showErrorMsg($rootScope.labels.signInVerifyYourEmail, c);
					break;

				case (c === 2001):
					$rootScope.loginInvalidCred = true;
					break;

				case (c === 3045):
					break;

				case (c === 3061):
					showErrorMsg($rootScope.labels[c]);
					break;

				case (c === 2004):
					var errMsg = $rootScope.labels[2004] + '(Error:' + c + ')';
					$rootScope.showPopup(errMsg, function() {
						$rootScope.clearSession("2004: Session Expired");
					}, 'alert');
					break;

				case (c === 3063):
					if (data && data.url.indexOf("task_list") === -1) {
						showErrorMsg($rootScope.labels.applicationJsonError, c);
					}  
					break;
				case (c === 2200):
				case (c === 405):
				case (c === 3008):
				case (c === 1019):
				case (c === 2044):
				case (c === 3068):
				case (c === 1017):
				case (c === 1018):
				case (c === 2000):
				case (c === 429):
				case (c >= 2002 && c <= 2099):
				case (c >= 3000 && c <= 3099):
				case (c >= 4000 && c <= 4099):

					showErrorMsg($rootScope.labels[c], c);
					break;

				case (c === 1014):
					GmCXt.redirect('#/maintenance');
					break;

				case (c === 403 && data.message[0] === GmCXt.unknownError):
					showErrorMsg($rootScope.labels.lostInternetConnection, c);
					break;

				default:
					$rootScope.showPopup($rootScope.labels.apiError, function() {
						if (GmCXt.user || GmCXt.onPrem()) {
							GmCXt.redirect('#/home/currentpage');
						}
					}, 'alert');
					break;
			}
		} else {
			showErrorMsg($rootScope.labels.lostInternetConnection, c);
		}
	};
};

app.service("mgError", ['$rootScope', 'AuthLogin', 'authService', errorService]);
var app = angular.module('guideme');

app.service('logoutService', ['$rootScope', 'api', 'modal', '$state', 'Message',
	'cStorage', 'storage',
	function($rootScope, api, modal, $state, Message, cStorage, storage) {

		var self = this;
		this.logout = function(source) {

			source = source || "user";

			GmCXt.log(1, "User logged out: " + source);

			$rootScope.videoUploadMessage = false;
			$rootScope.uploadProgressBar = false;

			$rootScope.uploadInProgress = false;

			$rootScope.closeAppPopup();

			if ($rootScope.isElectron) {
				GmCXt.stopVideoStep_();
			} else {
				Message.send({
					action: "mgPlayerJSTest_action:stop_video_upload_in_background"
				});
			}

			Message.send({
				action: 'mgPlayerJSTest_action:stop_screencast'
			});

			function onSuccess(response) {

				self.clearSession(source);
				$rootScope.showWidget();
				$rootScope.removeChatIcon();
				$rootScope.hideCurrentPageGuidesIndicator();
			}

			if(source === "logout_button_click"){
				api.userSignOut(onSuccess);
			} else{
				onSuccess();
			}

		};

		this.clearSession = function(s) {

			var restartLoginInterval = false;

			var hadUser = false;

			if (GmCXt.user) {

				hadUser = true;

				$rootScope.showPlayer = false;
				$rootScope.initPlayerMode(true);

				storage.clearIndexedDb(GmCXt.conf.appName + GmCXt.conf.env + 'DB');

				if (s !== "user"){
					restartLoginInterval = true;
				}
				
			}

			// Read dual auth token, before clearing storage
			storage.dual_auth_token.get().then(function(dualAuthToken) {

				storage.lastSsoRedirectTime.get().then(function(lastSsoTime) {

					storage.reset();

					if (dualAuthToken) {
						storage.dual_auth_token.set(dualAuthToken, $rootScope.thirtyDaysInSeconds);
					}

					if (lastSsoTime) {
						storage.lastSsoRedirectTime.set(lastSsoTime);
					}
				});
			});

			if ($rootScope.browserLang) {
				GmCXt.mgActiveLang = $rootScope.browserLang;
				storage.activeLang.remove();
				storage.activeLang.set($rootScope.browserLang);
			} else {
				GmCXt.mgActiveLang = false;
				storage.activeLang.remove();
			}
			storage.confirmLinkGuidePub.remove();
			storage.taskList.remove();
			storage.languageList.remove();
			$rootScope.updateLabels();

			$rootScope.copiedStep = false;
			$rootScope.copiedTour = false;
			$rootScope.edLogin = false;
			$rootScope.showSpinner = false;
			
			$rootScope.chatBot = false;
			$rootScope.chatBotMin = false;
			$rootScope.user = false;
			$rootScope.organization = false;
			$rootScope.enableTranslation = false;
			$rootScope.activeSortFilter = "";
			$rootScope.descOrder = false;
			$rootScope.contextTours = {};
			$rootScope.uploadStepProgressBar = false;
			$rootScope.pendingStepCount = -1;

			GmCXt.enableTranslation = false;
			$rootScope.publishedTours = [];

			$rootScope.resetCreatorData();

			GmCXt.edCandidates = null;

			$rootScope.uploadProgressBar = false;
			$rootScope.videoUploadMessage = false;

			GmCXt.user = false;
			GmCXt.organization = false;

			$rootScope.updateWidgetIconSendMsg();

			$rootScope.resetAppData();

			GmCXt.sendToParentWindow({
				action: "mgPlayerJSTest_action:user_logout",
				data: {
					startInterval: restartLoginInterval
				}
			});

			Message.send({
				action: "mgPlayerJSTest_action:stop_sync_interval",
				hadUser: hadUser
			});

			if (GmCXt.isExtension()) {
				GmCXt.storage().set({
					"login_state": false
				});
			}

			$rootScope.clearStorage().then(function() {
				GmCXt.redirect("#/signin");
			});

			if (restartLoginInterval && ($rootScope.appConfig.login.SSO || GmCXt.isMyGuide()) && GmCXt.isPlayer() && $rootScope.isAllowedDomain()) {
				if (GmCXt.urlParts) {
					$rootScope.signInWithSso();
				}
			}
		};
	}
]);
app.service('modal', ['$rootScope', 'api', 'storage', '$compile', '$timeout',
	function($rootScope, api, storage, $compile, $timeout) {

		this.addPublishActions = function(onOk) {

			var self = this;
			var envs = $rootScope.appEnvs;

			function updateMessage() {
				var msg = $rootScope.labels.guideWillPubIn;
				var showMsg = false;
				var envStr = "";

				mg$('.mgPlayerJSTest_active-progress').each(function() {
					showMsg = true;
					var en = mg$(this).text();
					if (!envStr) {
						envStr = en;
					} else {
						envStr = envStr + ", " + en;
					}
				});

				if(isPublishedOnTopEnv()){
					mg$('#publishMsg').text($rootScope.labels.guideIsPubIn + envStr);
				}
				else if (showMsg) {
					mg$('#publishMsg').text(msg + envStr);
				} else {
					mg$('#publishMsg').text('');
				}


			}

			function toggleActive() {
				var k = envs.indexOf(this.id);
				mg$("#mgPlayerJSTest_checkbox-tour-schedule-pub").prop('checked', false);
				mg$(".mgPlayerJSTest_pub-date-container").hide();

				if (mg$(this).hasClass('mgPlayerJSTest_active-progress')) {
					mg$(this).removeClass('mgPlayerJSTest_active-progress');
					mg$(".mgPlayerJSTest_pub-schedule-checkbox-container").hide();
					if (k === 0) {
						mg$('.ege-publish').addClass("mgPlayerJSTest_disabled");
					}else{
						mg$('.ege-publish').removeClass("mgPlayerJSTest_disabled");
					}
					var j = k + 1;
					while (j < envs.length) {
						mg$('#' + envs[j]).removeClass('mgPlayerJSTest_active-progress');
						j++;
					}

				} else {
					mg$(this).addClass('mgPlayerJSTest_active-progress');
					mg$('.ege-publish').removeClass("mgPlayerJSTest_disabled");
					if (k > 0) {
						var j = 0;
						while (j < k) {
							mg$('#' + envs[j]).addClass('mgPlayerJSTest_active-progress');
							j++;
						}
					}
					if (envs[k] === envs[envs.length - 1]) {
						mg$(".mgPlayerJSTest_pub-schedule-checkbox-container").show();
					}
				}

				if(isPublishedOnTopEnv()){
					mg$('.ege-publish').addClass("mgPlayerJSTest_disabled");
				}
				updateMessage();
			}

			for (var i = 0; i < envs.length; i++) {
				mg$('#' + envs[i]).on('click', toggleActive);
			}

			mg$('.ege-publish').off('click').on('click', function() {

				var env = [];
				mg$('.mgPlayerJSTest_active-progress').each(function() {
					env.push(mg$(this)[0].id);
				});
				var guideActiveEnv = getGuideActiveEnvs();

				if (!$rootScope.guideEnvs || env.length > guideActiveEnv.length) {

					if (!env.length && $rootScope.publishStatus === "publish") {
						return;
					}
					onOk(env, 'publish');

				} else {
					var lastEnv = env[env.length - 1];
					var lastEnvIdx = $rootScope.appEnvs.indexOf(lastEnv);

					if (lastEnvIdx >= 0) {

						var unpubList = $rootScope.appEnvs.slice(lastEnvIdx + 1);
						if (unpubList.length) {
							onOk(unpubList, 'unpublish');
						}
					}
				}

				self.close();
				localStorage.setItem(GmCXt.prevEnv, env);

			});

			mg$('.ege-cancel-btn').off('click').on('click', function() {
				self.close();
			});

			mg$('.mgPlayerJSTest_popup-close').off('click').on('click', function() {
				self.close();
			});
		};

		this.attachPopupActions = function(onOk, onCancel, onPreview) {
			var self = this;

			mg$('.mgPlayerJSTest_overlay-container').off('click').on('click', function(e) {
				self.close();
				if (onCancel) {
					onCancel();
				}
			});

			mg$('.ege-ok-btn').off('click').on('click', function() {
				var el = document.getElementById("mgPlayerJSTest_donot-show-cb");
				if (el) {
					storage.confirmLinkGuidePub.set(el.checked);
				}
				self.close();
				if (onOk) {
					onOk();
				}
			});

			mg$('.ege-ok-json-update').off('click').on('click', function() {
				onOk();
			});

			mg$('.ege-ok-btn-radio').off('click').on('click', function() {

				var envs = mg$('.env');

				var envVal = '';

				if (envs) {
					envVal = mg$('.env:checked').val();
				}

				if (envVal) {
					onOk(envVal);
					self.close();
				}
			});

			mg$('.ege-option-btn').off('click').on('click', function() {
				if (onPreview)
					onPreview();
				self.close();
			});

			mg$('.ege-cancel-btn').off('click').on('click', function() {
				if (onCancel)
					onCancel();
				self.close();
			});

			mg$('.ege-popup-close').off('click').on('click', function() {
				if (onCancel)
					onCancel();
				self.close();
			});

			mg$('#mgPlayerJSTest_resusme-guide-close-button').off('click').on('click', function() {
				self.close();
			});

			mg$('.ege-update-btn').off('click').on('click', function() {
				var audioText = mg$('#audio-text-area').val();
				audioText = audioText.trim();

				if (!audioText.length) {
					mg$('#audio-text-area').addClass('empty-textarea');
					return true;
				}

				if (onOk)
					onOk(audioText);
				self.close();
			});

			mg$('.ege-email-submit-btn').off('click').on('click', function() {
				var email_id = mg$('.ege-popup-email-input').val().trim();

				if (!email_id.length) {
					mg$('.ege-popup-error-msg').show();
					return true;
				}

				if (onOk)
					onOk(email_id);
				self.close();
			});

			mg$('.ege-otp-submit-btn').off('click').on('click', function() {
				var email_id = mg$('.ege-popup-email-input-confirm').val().trim();
				var otp = mg$('.ege-popup-confirm-otp').val().trim();

				if (!otp.length) {
					mg$('.ege-popup-error-msg').show();
					return true;
				}

				if (onOk)
					onOk(email_id, otp);
				self.close();
			});

			if (mg$('#audio-text-area').length) {
				mg$('#audio-text-area').on('focus', function() {
					mg$(this).removeClass('empty-textarea');
				});
			}

			if (mg$('#preview-link').length) {
				mg$('#preview-link').off('click').on('click', function() {
					var audioText = mg$('#audio-text-area').val();
					audioText = audioText.trim();
					if (onPreview && audioText.length)
						onPreview(audioText);
				});
			}

			mg$('.ege-link-guide').off('click').on('click', function() {

				var guideID = mg$('#ruleTypeGuide').val();
				guideID = guideID.trim();

				if (!guideID.length) {
					mg$('.ege-popup-error-msg').show();
					return true;
				}

				var tourViewPage = angular.element('#tour-view-page-container').scope();
				$rootScope.step.step_screen = mg$("#ruleTypeGuide option:selected").attr('data-image');
				$rootScope.step.step_description = mg$("#ruleTypeGuide option:selected").attr('data-description');
				if ($rootScope.step.step_screen) {} else {
					$rootScope.step.step_screen = "1";
				}
				if ($rootScope.step.step_description) {} else {
					$rootScope.step.step_description = " ";
				}

				$rootScope.step.step_title = mg$("#ruleTypeGuide option:selected").text();
				$rootScope.step.step_settings = "{'tour_id' :" + mg$('#ruleTypeGuide').val() + "}";

				var stepObj = {};
				stepObj.tour_id = mg$('#ruleTypeGuide').val();
				$rootScope.step.step_settings = JSON.stringify(stepObj);

				var viewStep = {};
				var data = {};
				data = Object.assign({}, $rootScope.step);

				data.step_screen = $rootScope.step.step_screen;
				viewStep.stepIndex = $rootScope.step.step_order - 1;
				viewStep.stepObj = data;
				tourViewPage.createStep(viewStep);
				self.createStep(tourViewPage, onOk);
			});

			mg$('.mgPlayerJSTest_modal-view-more').off('click').on('click', function() {
				mg$(".mgPlayerJSTest_info-msg").show();
				mg$('.mgPlayerJSTest_modal-view-more').hide();
			});

			mg$('.ege-csv-ok-btn').off('click').on('click', function() {

				var files = mg$('#mgPlayerJSTest_input-csv')[0].files;

				var parsedata = [];

				var getParseCsvData = function(data) {
					var newLinebrk = data.split("\n");

					for (var i = 0; i < newLinebrk.length; i++) {
						if (newLinebrk[i] !== '')
							parsedata.push(newLinebrk[i].split(","));
					}
				};

				if (files && files[0]) {
					var myFile = files[0];
					var reader = new FileReader();

					reader.onload = function(e) {

						var csvData = e.target.result;
						getParseCsvData(csvData); // calling function for parse csv data 

						onOk(parsedata);
					};

					reader.readAsBinaryString(myFile);
				} else {
					onOk();
				}

				self.close();

			});
		};

		this.createStep = function(tourViewPage, onOk) {
			var self = this;

			function onSuccess(response) {
				var data = response.data.data;
				self.close();
				$rootScope.showSpinner = false;
				var viewStep = {};
				viewStep.stepIndex = $rootScope.step.step_order - 1;
				viewStep.step = data.step;
				tourViewPage.createStepCompleted(viewStep);
				if (onOk) onOk(response.data.data);
			}
			api.stepCreate($rootScope.step, onSuccess);
		};

		function getGuideActiveEnvs() {
			var filteredEnvs = [];
			if ($rootScope.guideEnvs && $rootScope.guideEnvs.length) {
				for (var i = 0; i < $rootScope.guideEnvs.length; i++) {
					var env = $rootScope.guideEnvs[i];
					if ($rootScope.appEnvs && $rootScope.appEnvs.includes(env)) {
						filteredEnvs.push(env);
					}
				}
			}
			return filteredEnvs;
		}

		function reselectElem() {
			var msg = {
				action: 'mgPlayerJSTest_action:reselect_edit_step_element,task:edit_step'
			};
			GmCXt.sendToParentWindow(msg);
		}

		function reselectBeacon() {
			var msg = {
				action: 'mgPlayerJSTest_action:reselect_beacon_element'
			};
			GmCXt.sendToParentWindow(msg);
		}

		function editStep() {
			$rootScope.hideWidget();
			var msg = {
				action: 'mgPlayerJSTest_action:inline_edit,task:edit_step'
			};
			GmCXt.sendToParentWindow(msg);
		}

		this.editStepOptions = function(btn1) {
			label = $rootScope.labels.lblNotFoundInPage;
			var action = '';
			var btn = '';
			var okBtn = $rootScope.labels.ok;
			var popupType = 'mgPlayerJSTest_popup-warning';
			var popupHeaderIcon = $rootScope.svgs.popupWarning;
			var closeButton = "<div class='mgPlayerJSTest_popup-btn-close ege-cancel-btn'>" + $rootScope.svgs.popupClose + "</div>";

			if (btn1 === 'Reselect element') {
				label = $rootScope.labels.lblReselectElem;
				btn = "<div id='mgPlayerJSTest_btn-ok-edit-step-popup' class='ege-ok-btn mgPlayerJSTest_btn-default ege-inline-block-vt ege-redirect-btn'>" + btn1 + "</div>";
				action = reselectElem;
				okBtn = $rootScope.labels.btnCancel;
			} else if (btn1 === "Reselect beacon") {
				label = $rootScope.labels.lblReselectBeacon;
				btn = "<div id='mgPlayerJSTest_btn-ok-edit-step-popup' class='ege-ok-btn mgPlayerJSTest_btn-default ege-inline-block-vt ege-redirect-btn'>" + btn1 + "</div>";
				action = reselectBeacon;
				okBtn = $rootScope.labels.btnCancel;
			}

			var str = "<div class='mgPlayerJSTest_overlay-container'></div>" +
				" 	<div class='ege-popup " + popupType + "'> " +
				"       <div class='mgPlayerJSTest_popup-header-wrapper'>" +
				"	" + closeButton + "	" +
				"	       <div class='mgPlayerJSTest_popup-header-icon-wrapper'><div class='mgPlayerJSTest_popup-header-icon'>" + popupHeaderIcon + "</div></div>" +
				"       </div>" +
				"		<div style='display:none;' class='ege-popup-title-wrapper'>" +
				"		{{data.title}}</div>" +
				"		<div class='ege-popup-content-wrapper mgPlayerJSTest_font-size-17'>" + label + "</div>" +
				"		<div class='ege-popup-btn-wrapper'>" + btn +
				"			<div id='mgPlayerJSTest_btn-cancel-edit-step-popup' class='mgPlayerJSTest_btn-default mgPlayerJSTest_btn-large ege-ok-btn ege-inline-block-vt'>" + okBtn +
				"		</div>" +
				"	</div>" +
				" </div> ";

			mg$('.ege-panel').append(str);
			this.attachPopupActions(action, false);
		};

		this.open = function(label, type, onOk, onCancel, infoMsg, popupHideTime, modalTitle) {

			if (typeof label !== "string") {
				label = "Unknown error!";
			}

			var cancelBtn = "";
			var okBtn = $rootScope.labels.ok;
			var canBtn = $rootScope.labels.btnCancel;
			var popupType = '';
			var popupHeaderIcon = '';
			var infoMsgHTML = '';
			var radio = '';
			var closeButton = "<div class='mgPlayerJSTest_popup-btn-close ege-cancel-btn'>" + $rootScope.svgs.popupClose + "</div>";
			var checkBox = '';
			var modalTitleEle = '';

			if (infoMsg) {
				infoMsgHTML = "<span class='mgPlayerJSTest_info-msg-container'>" +
					"<span class='mgPlayerJSTest_modal-view-more'>" + $rootScope.labels.viewMore + "</span>" +
					"<br><label class='mgPlayerJSTest_info-msg'>" + infoMsg + "</label>" +
					"</span>";
			}

			if ($rootScope.labels.guidePublishWarning === label) {
				checkBox = "<div class= 'mgPlayerJSTest_donot-show-popup'>" + "<input id='mgPlayerJSTest_donot-show-cb' type= 'checkbox' class='mgPlayerJSTest_input-checkbox-custom' />" + "<label class='mgPlayerJSTest_info-msg-donot-show-popup'>" + "Do not show this pop up again" + "</label>" + "</div>";
			}

			if (type === 'yesno') {
				okBtn = "Yes";
				canBtn = "No";
			}

			if (type === 'tourPlay') {
				okBtn = $rootScope.labels.startOver;
				canBtn = $rootScope.labels.yesResume;
				closeButton = "<button id='mgPlayerJSTest_resusme-guide-close-button' class='mgPlayerJSTest_lbl-btn mgPlayerJSTest_popup-upload-close ege-popup-close mgPlayerJSTest_cursor mgPlayerJSTest_cursor-pointer mgPlayerJSTest_display-flex mgPlayerJSTest_justify-content-flex-end mgPlayerJSTest_padding-15' aria-label='Close' >" + $rootScope.svgs.popupClose + "</button>";
			}

			if (type === 'tourPlay' || type === 'info' || type === '') {
				popupType = 'mgPlayerJSTest_popup-info';
				popupHeaderIcon = $rootScope.svgs.popupInfo;
			}

			if (type === 'alert') {
				popupType = 'mgPlayerJSTest_popup-error';
				popupHeaderIcon = $rootScope.svgs.popupError;
			}

			if (type === 'success') {
				popupType = 'mgPlayerJSTest_popup-success';
				popupHeaderIcon = $rootScope.svgs.popupSuccess;
			}

			if (type === 'warning') {
				popupType = 'mgPlayerJSTest_popup-warning';
				popupHeaderIcon = $rootScope.svgs.popupWarning;
			}

			if (type === 'confirm' || type === 'copy' || type === 'yesno' || type === 'domain') {
				popupType = 'mgPlayerJSTest_popup-warning';
				popupHeaderIcon = $rootScope.svgs.popupWarning;
			}

			if (type === 'tourPlay') {
				cancelBtn = "<button id='mgPlayerJSTest_btn-cancel-tour-play-popup' class='ege-cancel-btn mgPlayerJSTest_btn-default ege-inline-block-vt' aria-label='" + canBtn + "' >" + canBtn + "</button>";
			}

			var okbutton = "<button id='mgPlayerJSTest_btn-ok-common-popup' class='ege-ok-btn mgPlayerJSTest_btn-default mgPlayerJSTest_btn-large ege-inline-block-vt' aria-label='" + okBtn + "' >" + okBtn + "</button>";

			if (type === 'domain') {

				var appEnvs = [];
				var app_envs = GmCXt.getActiveAppSetting().app_env || $rootScope.defaultAppEnv;
				for (var i in app_envs) {
					if (app_envs[i].checked) {
						appEnvs.push(i);
					}
				}

				if (appEnvs.length) {

					var arrOfEnv = [];
					var checked = '';

					for (var i = 0; i < appEnvs.length; i++) {
						checked = $rootScope.highestEnv === appEnvs[i] ? 'checked' : '';

						arrOfEnv.push('<div class="mgPlayerJSTest_display-flex mgPlayerJSTest_display-inline-flex mgPlayerJSTest_padding-5"><input type="radio" name="env" value=' + appEnvs[i] + ' class="env ege-popup-radio mgPlayerJSTest_inline-block-vt mgPlayerJSTest_input-radio-custom"' + checked + '/>' +
							'<span class="ege-popup-radio-text">' +
							$rootScope.updateEnvNames(appEnvs[i]) + '</span></div>');
					}

					radio = '<br><div class="ege-inline-block-vm mgPlayerJSTest_display-flex mgPlayerJSTest_justify-content-center mgPlayerJSTest_flex-wrap mgPlayerJSTest_padding-lr-15">' + arrOfEnv.join('') + ' </div><br>';

					okbutton = "<button class='ege-ok-btn-radio mgPlayerJSTest_btn-default ege-inline-block-vt' aria-label='" + okBtn + "' >" + okBtn + "</button>";

				}
			}

			if (type === 'copy') {
				okBtn = $rootScope.labels.copy;
			}

			var catUnPubMsg = "";
			if ($rootScope.categoryIsUnPublished) {

				var message = '';
				var rl = $rootScope.labels;

				if (label === rl.tourpublishMsg2) {
					message = rl.tooltipPublishWarningMessage;
				} else {
					message = rl.guidePublishWarningMessage;
				}

				catUnPubMsg = "<div class='mgPlayerJSTest_popup-content-info'>" + message + "</div>";

				$rootScope.categoryIsUnPublished = false;
			}

			if (GmCXt.isDefined(modalTitle)) {
				modalTitleEle = "<div class='ege-popup-title-wrapper'>" + modalTitle + "</div>";
			}

			var str = " <div class='mgPlayerJSTest_overlay-container'></div>" +
				" <div class='ege-popup " + popupType + "'> " +
				"   <div class='mgPlayerJSTest_popup-header-wrapper'>" +
				"	" + closeButton + "	" +
				"	   <div class='mgPlayerJSTest_popup-header-icon-wrapper'><div class='mgPlayerJSTest_popup-header-icon'>" + popupHeaderIcon + "</div></div>" +
				"   </div>" +
				modalTitleEle +
				"	<div class='ege-popup-content-wrapper mgPlayerJSTest_font-size-17'>" + label + infoMsgHTML + "</div>" +
				" " + catUnPubMsg + " " +
				radio +
				checkBox +
				"	<div class='ege-popup-btn-wrapper'>" +
				"" + okbutton + "" +
				"" + cancelBtn + "" +

				"	</div>" +

				" </div> ";

			if ($rootScope.isAutoConfigPanelOpen) {
				mg$('.ege-panel-auto').append(str);
			} else {
				mg$('.ege-panel').append(str);
			}

			this.attachPopupActions(onOk, onCancel, false);

			$timeout(function() {
				mg$("#mgPlayerJSTest_btn-ok-common-popup").focus();
			}, 500);

			if (popupHideTime) {
				$timeout(function() {
					mg$('.mgPlayerJSTest_overlay-container').remove();
					mg$('.ege-popup').remove();
				}, popupHideTime);
			}
		};

		this.openCategoryDelete = function(label, onOk, onCancel) {
			var okBtn = "OK";
			var cancelBtn = "Cancel";
			var popupType = 'mgPlayerJSTest_popup-warning';
			var popupHeaderIcon = $rootScope.svgs.popupWarning;
			var closeButton = "<div id='mgPlayerJSTest_btn-cancel-cat-del-popup' class='mgPlayerJSTest_popup-btn-close ege-cancel-btn'>" + $rootScope.svgs.popupClose + "</div>";

			var str = " <div class='mgPlayerJSTest_overlay-container'></div>" +
				" <div class='ege-popup " + popupType + "'> " +
				"   <div class='mgPlayerJSTest_popup-header-wrapper'>" +
				"	" + closeButton + "	" +
				"	   <div class='mgPlayerJSTest_popup-header-icon-wrapper'><div class='mgPlayerJSTest_popup-header-icon'>" + popupHeaderIcon + "</div></div>" +
				"   </div>" +
				"	<div class='ege-popup-content-wrapper mgPlayerJSTest_font-size-17'>" + $rootScope.labels.deleteFolder + ": <b>" + label.name + "</b></div>" +
				"   <div class='mgPlayerJSTest_popup-content-info'>" + label.msg + "</div>" +
				"	<div class='ege-popup-btn-wrapper'>" +
				"		<div id='mgPlayerJSTest_btn-ok-cat-del-popup' class='ege-ok-btn mgPlayerJSTest_btn-default mgPlayerJSTest_btn-large ege-inline-block-vt'>" + okBtn + "</div>" +
				"	</div>" +
				" </div> ";

			mg$('.ege-panel').append(str);

			this.attachPopupActions(onOk, onCancel, false);
		};

		this.openJsonEdit = function(data, type, onOk, onCancel) {
			var okBtn = "Save";
			var cancelBtn = "Cancel";
			var popupType = 'mgPlayerJSTest_popup-warning';

			var str = "<div class='ege-popup " + popupType + "'> " +
				"	<pre id='mgPlayerJSTest_json-editor'></pre>" +
				"	<div class='ege-popup-btn-wrapper'>" +
				"		<div id='mgPlayerJSTest_btn-ok-json-edit-popup' class='ege-ok-json-update mgPlayerJSTest_btn-default ege-inline-block-vt'>" + okBtn + "</div>" +
				"       <div id='mgPlayerJSTest_btn-cancel-json-edit-popup' class='ege-cancel-btn mgPlayerJSTest_btn-default ege-inline-block-vt'>" + cancelBtn + "</div>" +
				"	</div>" +
				" </div> ";

			mg$('.ege-panel').append(str);

			this.attachPopupActions(onOk, onCancel, false);
		};

		this.openGuideLink = function(label, type, onOk, onCancel) {
			$rootScope.step = {};
			var tourData = label.data;
			$rootScope.showSpinner = true;
			var data = {
				tour_id: tourData.tour.tour_id,
				step_title: '',
				step_description: '',
				step_type: 'guide',
				step_target_type: 'na',
				step_target_name: 'na',
				step_settings: 'na',
				step_image: "0",
				step_screen: "0",
				step_url: 'na',
				step_audio_text: 'na',
				step_video_id: "0",
				step_audio: "0",
				step_order: parseInt(tourData.order)
			};
			$rootScope.step = data;
			var self = this;
			var cancelBtn = "";

			$timeout(function() {
				$rootScope.showSpinner = false;
			}, 200);

			var params = {
				category_id: tourData.tour.category_id,
				limit: 100,
				offset: 0
			};

			var str = " <div class='mgPlayerJSTest_overlay-container'></div>";

			function cb(_tours) {

				var option = '';
				angular.forEach(_tours, function(value, key) {
					if (value.tour_id !== tourData.tour.tour_id &&
						parseInt(value.step_count) > 0 &&
						value.tour_type === tourData.tour_type) {

						option += '<option value="' + value.tour_id +
							'" data-category_id="' + value.category_id +
							'"  data-description="' + value.tour_description +
							'" data-image="' + value.tour_image +
							'" data-screenImage="' + value.tour_image + '">' +
							value.tour_title +
							'</option>';
					}
				});
				str += " <div class='ege-popup-link-guide'> " +
					"	<div class='ege-popup-header'>" + $rootScope.labels.guideLinkMessage + "</div>" +
					"	<div class='ege-popup-close'>" +
					'<svg version="1.1" id="Capa_1" x="0px" y="0px"' +
					'viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve">' +
					'<g>' +
					'<g>' +
					'<path d="M46,4C44.9,3,43.2,3,42.1,4L25,21.2L7.9,4C6.8,3,5.1,3,4,4S3,6.8,4,7.9L21.2,25L4,42.1C3,43.2,3,44.9,4,46' +
					'c0.5,0.5,1.2,0.8,1.9,0.8s1.4-0.3,1.9-0.8L25,28.8L42.1,46c0.5,0.5,1.2,0.8,1.9,0.8c0.7,0,1.4-0.3,1.9-0.8c1.1-1.1,1.1-2.8,0-3.8' +
					'L28.8,25L46,7.9C47,6.8,47,5.1,46,4z"/>' +
					'</g>' +
					'</g>' +
					'</svg>' +
					"	</div>" +
					"	<div class='selectbox-wrapper'>" +
					"      	<select class='create-step-selectbox-select' id='ruleTypeGuide'>" +
					"      		<option value=''>" + $rootScope.labels.select + "</option>" +
					"     		" + option + " " +
					"     	</select>" +
					"	</div>" +
					"	<div class='ege-popup-error-msg'>" + $rootScope.labels.selectGuideBeforeSubmit + "</div>" +
					"	<div class='ege-popup-btn-wrapper'>" +
					"       <div class='mgPlayerJSTest_btn-default ege-inline-block-vt'>" + $rootScope.labels.btnLink + "</div>" +
					"       <div class='mgPlayerJSTest_btn-default mgPlayerJSTest_btn-neutral ege-inline-block-vt'>" + $rootScope.labels.btnCancel + "</div>" +
					"	</div>" +
					" </div> ";
				mg$('.ege-panel').append(str);

				self.attachPopupActions(onOk, cancelBtn, onCancel);
			}

			api.getTourList(params, cb);
		};

		this.openDoItPopup = function(onOk, modalTitle) {

			var closeButton = "<div class='mgPlayerJSTest_popup-btn-close ege-cancel-btn'>" + $rootScope.svgs.popupClose + "</div>";
			var modalTitleEle = '';

			if (GmCXt.isDefined(modalTitle)) {
				modalTitleEle = "<div class='ege-popup-title-wrapper'>" + modalTitle + "</div>";
			}

			var str = " <div class='mgPlayerJSTest_overlay-container'></div>" +
				"	<div class='ege-popup mgPlayerJSTest_popup-info'> " +
				"   	<div class='mgPlayerJSTest_popup-header-wrapper'>" +
				"		" + closeButton + "	" +
				"	  	 	<div class='mgPlayerJSTest_popup-header-icon-wrapper'><div class='mgPlayerJSTest_popup-header-icon'>" + $rootScope.svgs.popupInfo + "</div></div>" +
				"   	</div>" +
				modalTitleEle +
				"		<div class='mgPlayerJSTest_image-file-input-wrapper'>" +
				"			<input id='mgPlayerJSTest_input-csv' title='Upload CSV' type='file' tabindex='-1' name='inputData' accept='.csv'>" +
				"		</div> " +
				"		<div class='ege-popup-btn-wrapper'>" +
				"			<div id='mgPlayerJSTest_btn-ok-doit-popup' class='ege-csv-ok-btn mgPlayerJSTest_btn-default mgPlayerJSTest_btn-large ege-inline-block-vt'>" + $rootScope.labels.ok + "</div>" +
				"		</div>" +
				" 	</div> ";

			mg$('.ege-panel').append(str);

			this.attachPopupActions(onOk);
		};

		function close() {
			mg$('.mgPlayerJSTest_overlay-container').remove();
			mg$('.ege-popup').remove();
			mg$('.ege-popup-link-guide').remove();
			mg$('.mgPlayerJSTest_category-delete-popup').remove();
		}

		this.close = function() {
			close();
		};

		function getDefaultScheduleOptions() {
			var obj = {};
			var currDate = new Date();
			var month = currDate.getMonth() + 1;
			if (month < 10) {
				month = '0' + month;
			}
			var day = currDate.getDate();
			var year = currDate.getFullYear();

			day = (currDate.getDate() > 9) ? currDate.getDate() : "0" + currDate.getDate();
			var hrs = (currDate.getHours() > 9) ? currDate.getHours() : "0" + currDate.getHours();
			var mins = (currDate.getMinutes() > 9) ? currDate.getMinutes() : "0" + currDate.getMinutes();

			var minDateRange = year + '-' + month + '-' + day; //new Date().toISOString().slice(0, 16); //new Date().toISOString().split('T')[0];
			var minTimeRange = hrs + ':' + mins;

			obj.default_date = minDateRange;
			obj.default_time = minTimeRange;


			return obj;
		}

		function getSchedulePubHTML() {
			var option = getDefaultScheduleOptions();
			var html = "";
			html = "<div class='mgPlayerJSTest_pub-schedule-checkbox-container mgPlayerJSTest_process-msg mgPlayerJSTest_width-100 mgPlayerJSTest_text-align-center mgPlayerJSTest_padding-lr-15'>" +
				"<input id='mgPlayerJSTest_checkbox-tour-schedule-pub' class='mgPlayerJSTest_inline-block-vm mgPlayerJSTest_input-checkbox-custom' type='checkbox' name='pub-schedule-enable'>" +
				"<label class='mgPlayerJSTest_inline-block-vm'>" + $rootScope.labels.schedulePublishCheckbox + "</label>" +
				"</div>" +
				"<div class='mgPlayerJSTest_pub-date-container'>" +
				"<div class='mgPlayerJSTest_pub-date-label'> " + $rootScope.labels.date +
				"</div>" +
				"<div>" +
				"<input min='" + option.default_date + "' type='date' id='mgPlayerJSTest_pub-schedule-date' name='mgPlayerJSTest_pub-schedule-date' value='" + option.default_date + "'  class='mgPlayerJSTest_input-text mgPlayerJSTest_input-type-text'>" +
				"</div>" +
				"<div class='mgPlayerJSTest_pub-date-label'> " + $rootScope.labels.timeLabel +
				"</div>" +
				"<div>" +
				"<input min='" + option.default_time + "' type='time' id='mgPlayerJSTest_pub-schedule-time' name='mgPlayerJSTest_pub-schedule-date' value='" + option.default_time + "'  class='mgPlayerJSTest_input-text mgPlayerJSTest_input-type-text'>" +
				"</div>" +
				"<div class='mgPlayerJSTest_invalid-pub-time error-input-wrapper'> " + $rootScope.labels.invalidTimeLabel + " </div>" +
				"</div>";

			return html;
		}

		function checkTimeValidity() {
			var selectedDate = mg$('#mgPlayerJSTest_pub-schedule-date').val() + "T" + mg$('#mgPlayerJSTest_pub-schedule-time').val();
			if (Date.parse(selectedDate) < Date.now()) {
				mg$(".mgPlayerJSTest_invalid-pub-time").show();
			} else {
				mg$(".mgPlayerJSTest_invalid-pub-time").hide();
			}
		}

		this.publishNoEnv = function(tour, onOk, modalTitle) {

			$rootScope.guideEnvs = tour.tour_settings.app_publish_env;

			var envNames = $rootScope.guideEnvs || [];

			if ($rootScope.guideEnvs === undefined && tour.is_published) {
				envNames = $rootScope.appEnvs;
			}

			if (!tour.is_published) {
				envNames = localStorage.getItem(GmCXt.prevEnv);
			}

			var envs = $rootScope.appEnvs;
			var arrOfEnv = [];

			var closeButton = "<div class='mgPlayerJSTest_popup-btn-close ege-cancel-btn'>" + $rootScope.svgs.popupClose + "</div>";

			var msg = '';
			var modalTitleEle = '';

			if (GmCXt.isDefined(modalTitle)) {
				modalTitleEle = "<div class='ege-popup-title-wrapper'>" + modalTitle + "</div>";
			}

			var str = " <div class='mgPlayerJSTest_overlay-container'></div>" +
				" <div class='ege-popup mgPlayerJSTest_popup-info'> " +
				"   <div class='mgPlayerJSTest_popup-header-wrapper'>" +
				"	" + closeButton + "	" +
				"	   <div class='mgPlayerJSTest_popup-header-icon-wrapper'><div class='mgPlayerJSTest_popup-header-icon'>" + $rootScope.svgs.popupInfo + "</div></div>" +
				"   </div>" +
				modalTitleEle +
				getSchedulePubHTML() +
				"<div class='ege-popup-btn-wrapper'>" +
				"<button id='mgPlayerJSTest_btn-ok-publish-popup' class='ege-publish mgPlayerJSTest_btn-default mgPlayerJSTest_btn-large ege-inline-block-vt'>" + $rootScope.labels.publish + "</button>" +
				"</div>" +
				"</div> ";

			mg$('.ege-panel').append(str);



			mg$(".mgPlayerJSTest_pub-schedule-checkbox-container").show();



			mg$('#mgPlayerJSTest_pub-schedule-date').change(function(e) {
				checkTimeValidity();
			});

			mg$('#mgPlayerJSTest_pub-schedule-time').change(function(e) {
				checkTimeValidity();
			});

			mg$('#mgPlayerJSTest_checkbox-tour-schedule-pub').off('click').on('click', function() {
				if (mg$("#mgPlayerJSTest_checkbox-tour-schedule-pub").is(":checked")) {
					mg$(".mgPlayerJSTest_pub-date-container").show();
				} else {
					mg$(".mgPlayerJSTest_pub-date-container").hide();
				}
			});


			mg$('#mgPlayerJSTest_btn-ok-publish-popup').off('click').on('click', function() {
				onOk();
				close();
			});


			mg$('.mgPlayerJSTest_popup-btn-close').off('click').on('click', function(e) {
				close();
			});


			$rootScope.showSpinner = false;

			var pageScope = $rootScope.getPageScope();
			if ($rootScope.currentView === 'tour-view') {
				if (!pageScope.$$phase) pageScope.$apply();
			}
		};

		this.publish = function(tour, onOk, modalTitle) {

			$rootScope.guideEnvs = tour.tour_settings.app_publish_env;

			var envNames = $rootScope.guideEnvs || [];

			if ($rootScope.guideEnvs === undefined && tour.is_published) {
				envNames = $rootScope.appEnvs;
			}

			if (!tour.is_published) {
				envNames = localStorage.getItem(GmCXt.prevEnv);
			}

			var envs = $rootScope.appEnvs;
			var arrOfEnv = [];

			var closeButton = "<div class='mgPlayerJSTest_popup-btn-close ege-cancel-btn'>" + $rootScope.svgs.popupClose + "</div>";

			arrOfEnv.push('<div class="mgPlayerJSTest_guide-progress-wrapper mgPlayerJSTest_display-flex mgPlayerJSTest_align-items-center mgPlayerJSTest_justify-content-flex-end">' +
				'<div id=' + envs[0] + ' class="mgPlayerJSTest_guide-progress-val">' +
				'<div class="mgPlayerJSTest_guide-progress-label mgPlayerJSTest_text-align-center mgPlayerJSTest_font-size-13">' +
				$rootScope.updateEnvNames(envs[0]) +
				'</div>' +
				'</div>' +
				'</div> ');

			for (i = 1; i < envs.length; i++) {
				arrOfEnv.push("<div class='mgPlayerJSTest_hr'></div>" + '<div class="mgPlayerJSTest_guide-progress-wrapper mgPlayerJSTest_display-flex mgPlayerJSTest_align-items-center mgPlayerJSTest_justify-content-flex-end mgPlayerJSTest_ele-width">' +
					'<div id=' + envs[i] + ' class="mgPlayerJSTest_guide-progress-val">' +
					'<div class="mgPlayerJSTest_guide-progress-label mgPlayerJSTest_text-align-center mgPlayerJSTest_font-size-13">' +
					$rootScope.updateEnvNames(envs[i]) +
					'</div>' +
					'</div>' +
					'</div> ');

			}

			var msg = '';
			var modalTitleEle = '';

			if (GmCXt.isDefined(modalTitle)) {
				modalTitleEle = "<div class='ege-popup-title-wrapper'>" + modalTitle + "</div>";
			}

			var str = " <div class='mgPlayerJSTest_overlay-container'></div>" +
				" <div class='ege-popup mgPlayerJSTest_popup-info'> " +
				"   <div class='mgPlayerJSTest_popup-header-wrapper'>" +
				"	" + closeButton + "	" +
				"	   <div class='mgPlayerJSTest_popup-header-icon-wrapper'><div class='mgPlayerJSTest_popup-header-icon'>" + $rootScope.svgs.popupInfo + "</div></div>" +
				"   </div>" +
				modalTitleEle +
				"<div class='mgPlayerJSTest_guide-progress-container mgPlayerJSTest_display-flex mgPlayerJSTest_align-items-start mgPlayerJSTest_justify-content-center'>" +
				arrOfEnv.join('') +
				"</div>" +
				"<div class='mgPlayerJSTest_process-msg mgPlayerJSTest_width-100 mgPlayerJSTest_text-align-center mgPlayerJSTest_padding-lr-15' id='publishMsg'>" + msg + "</div>" +
				getSchedulePubHTML() +
				"<div class='ege-popup-btn-wrapper'>" +
				"<button id='mgPlayerJSTest_btn-ok-publish-popup' class='ege-publish mgPlayerJSTest_btn-default mgPlayerJSTest_btn-large ege-inline-block-vt mgPlayerJSTest_disabled'>" + $rootScope.labels.publish + "</button>" +
				"</div>" +
				"</div> ";

			mg$('.ege-panel').append(str);



			for (var i = 0; i < envs.length; i++) {
				if (envNames.indexOf(envs[i]) !== -1) {
					mg$('.ege-publish').removeClass("mgPlayerJSTest_disabled");
					mg$('#' + envs[i]).addClass('mgPlayerJSTest_active-progress');
					for (var j = i - 1; j >= 0; j--) {
						mg$('.ege-publish').removeClass("mgPlayerJSTest_disabled");
						mg$('#' + envs[j]).addClass('mgPlayerJSTest_active-progress');
					}
				}
			}

			for (var i = 0; i < envNames.length; i++) {
				if ($rootScope.appEnvs.indexOf(envNames[i]) !== -1) {
					var en = $rootScope.updateEnvNames(envNames[i]);

					if (!msg) {
						msg = $rootScope.labels.guideIsPubIn + en;
					} else {
						msg += ", " + en;
					}
				}
			}

			if (msg) {
				mg$('#publishMsg').text(msg);
			}

			var activeEnv = envNames;

			if (typeof envNames === 'string') {
				activeEnv = envNames.split(',');
			}

			if (activeEnv.length === envs.length) {
				mg$(".mgPlayerJSTest_pub-schedule-checkbox-container").show();
			} else {
				mg$(".mgPlayerJSTest_pub-schedule-checkbox-container").hide();
			}

			mg$('#mgPlayerJSTest_pub-schedule-date').change(function(e) {
				checkTimeValidity();
			});

			mg$('#mgPlayerJSTest_pub-schedule-time').change(function(e) {
				checkTimeValidity();
			});

			mg$('#mgPlayerJSTest_checkbox-tour-schedule-pub').off('click').on('click', function() {
				if (mg$("#mgPlayerJSTest_checkbox-tour-schedule-pub").is(":checked")) {
					mg$(".mgPlayerJSTest_pub-date-container").show();
				} else {
					mg$(".mgPlayerJSTest_pub-date-container").hide();
				}
			});


			$rootScope.showSpinner = false;

			var pageScope = $rootScope.getPageScope();
			if ($rootScope.currentView === 'tour-view') {
				if (!pageScope.$$phase) pageScope.$apply();
			}

			if(isPublishedOnTopEnv()){
				mg$('.ege-publish').addClass("mgPlayerJSTest_disabled");
			}

			this.addPublishActions(onOk);
		};

		this.scheduled = function(tour, onOk, modalTitle) {

			$rootScope.guideEnvs = tour.tour_settings.app_publish_env;

			var envNames = $rootScope.guideEnvs || [];

			if ($rootScope.guideEnvs === undefined && tour.is_published) {
				envNames = $rootScope.appEnvs;
			}

			if (!tour.is_published) {
				envNames = localStorage.getItem(GmCXt.prevEnv);
			}

			var envs = $rootScope.appEnvs;

			var closeButton = "<div class='mgPlayerJSTest_popup-btn-close ege-cancel-btn'>" + $rootScope.svgs.popupClose + "</div>";

			var date = new Date(tour.tour_settings.visibilitytimestamp);

			var month = date.getMonth() + 1;
			if (month < 10) {
				month = '0' + month;
			}
			var day = date.getDate();
			var year = date.getFullYear();

			var hrs = (date.getHours() > 10) ? date.getHours() : "0" + date.getHours();
			var mins = (date.getMinutes() > 10) ? date.getMinutes() : "0" + date.getMinutes();

			var schDate = day + '/' + month + '/' + year; //new Date().toISOString().slice(0, 16); //new Date().toISOString().split('T')[0];
			var schTime = date.toLocaleString('en-US', {
				hour: 'numeric',
				minute: 'numeric',
				hour12: true
			});

			var modalTitleEle = '';

			if (GmCXt.isDefined(modalTitle)) {
				modalTitleEle = "<div class='ege-popup-title-wrapper'>" + modalTitle + "</div>";
			}



			var str = " <div class='mgPlayerJSTest_overlay-container'></div>" +
				"<div class='ege-popup mgPlayerJSTest_popup-info'> " +
				"<div class='mgPlayerJSTest_popup-header-wrapper'>" + closeButton +
				"<div class='mgPlayerJSTest_popup-header-icon-wrapper'><div class='mgPlayerJSTest_popup-header-icon'>" + $rootScope.svgs.popupInfo + "</div></div>" +
				"</div>" +
				modalTitleEle +
				"<div class='mgPlayerJSTest_schedule-popup-container'>" +
				"<div class='mgPlayerJSTest_schedule-popup-container-inner'>" +
				"<div class='mgPlayerJSTest_schedule-popup-header-title'>" + $rootScope.updateEnvNames(envs[envs.length - 1]) +
				"</div>" +
				"<div class='mgPlayerJSTest_padding-10'>" +
				"<div class='mgPlayerJSTest_padding-5 mgPlayerJSTest_display-inline-block'>" + $rootScope.labels.scheduleDateLabel +
				"</div>" +
				"<div class='mgPlayerJSTest_padding-5 mgPlayerJSTest_display-inline-block mgPlayerJSTest_float-right'>" + schDate +
				"</div>" +
				"</div>" +
				"<div class='mgPlayerJSTest_hr'></div>" +
				"<div class='mgPlayerJSTest_padding-10'>" +
				"<div class='mgPlayerJSTest_padding-5 mgPlayerJSTest_display-inline-block'>" + $rootScope.labels.scheduleTimeLabel +
				"</div>" +
				"<div class='mgPlayerJSTest_padding-5 mgPlayerJSTest_display-inline-block mgPlayerJSTest_float-right'>" + schTime +
				"</div>" +
				"</div>" +
				"<div class='mgPlayerJSTest_hr'></div>" +
				"<div class='mgPlayerJSTest_padding-10'>" +
				"<div class='mgPlayerJSTest_padding-5 mgPlayerJSTest_display-inline-block'>" + $rootScope.labels.status +
				"</div>" +
				"<div class='mgPlayerJSTest_padding-5 mgPlayerJSTest_display-inline-block mgPlayerJSTest_float-right'> " + $rootScope.labels.scheduleLabel +
				"</div>" +
				"</div>" +
				"<div class='mgPlayerJSTest_hr'></div>" +
				"<div class='mgPlayerJSTest_cancel-schedule'>" +
				"<button type='button' class='mgPlayerJSTest_cancel-schedule-btn mgPlayerJSTest_lbl-btn'>" + $rootScope.labels.cancelSchedule + "</button>" +
				"</div>" +
				"</div>" +
				"</div>" +
				"</div>";

			mg$('.ege-panel').append(str);


			mg$('.mgPlayerJSTest_cancel-schedule-btn').off('click').on('click', function(e) {
				$rootScope.changeStatus(tour, 'unpublish');
				close();
			});

			mg$('.mgPlayerJSTest_popup-btn-close').off('click').on('click', function(e) {
				close();
			});

			$rootScope.showSpinner = false;

			var pageScope = $rootScope.getPageScope();
			if ($rootScope.currentView === 'tour-view') {
				if (!pageScope.$$phase) pageScope.$apply();
			}
		};
		

		function isPublishedOnTopEnv(){
			if($rootScope.guideEnvs && mg$('.mgPlayerJSTest_active-progress').length === $rootScope.guideEnvs.length){
				return true;
			} 
			else {
				return false;
			} 
		}
	}
]);
var app = angular.module("guideme");
app.factory("naturalService", ["$locale", function($locale) {

	var natCache = {};
	// amount of extra zeros to padd for sorting
	var padding = function(value) {
		return '00000000000000000000'.slice(value.length);
	};

	// Fix numbers to be correctly padded
	var fixNumbers = function(value) {
		// First, look for anything in the form of d.d or d.d.d...
		return value && value.length > 1 ? value.replace(/(\d+)((\.\d+)+)?/g, function(val, integer, decimal, $3) {
			// If there's more than 2 sets of numbers...
			if (decimal !== $3) {
				// treat as a series of integers, like versioning,
				// rather than a decimal
				return val.replace(/(\d+)/g, function($d) {
					return padding($d) + $d;
				});
			} else {
				// add a decimal if necessary to ensure decimal sorting
				decimal = decimal || ".0";
				return padding(integer) + integer + decimal + padding(decimal);
			}
		}) : null;
	};

	// Finally, this function puts it all together.
	var natValue = function(value) {
		if (natCache[value]) {
			return natCache[value];
		}
		var newValue = fixNumbers(value);
		natCache[value] = newValue;
		return natCache[value];
	};

	// The actual object used by this service
	return {
		naturalValue: natValue
	};
}]);
var app = angular.module('guideme');
app.service('playerUpdateService', ['$rootScope', 'storage', 'api', '$state', function($rootScope, storage, api, $state) {

	var commonUpdate = new commonUpdateService($rootScope, storage, api, $state);

	function checkTourDelete(tours, allTours, appId) {
		/* check update for Each tour in Published tour. 
			*  if Published tour not found in tours, that means the tour has been unpublished. 
			*/

		var checkTourExisit = function(ptour) {
			var t = tours.filter(function(t) {
				return t.tour_id === parseInt(ptour.tour_id);
			});

			return t;
		};

		allTours = allTours || $rootScope.publishedTours;

		for (var i = 0; i < allTours.length; i++) {
			var ptour = allTours[i];

			var tourFound = ptour ? checkTourExisit(ptour) : false;

			if (GmCXt.isEmpty(tourFound)) { //i.e. tour deleted
				$rootScope.removeTour(ptour.category_id, ptour.tour_id, appId);
				commonUpdate.updateScope(ptour);
			}
		}
	}

	function checkIfValidTourSegment(t) {
		var isValid = false;
		if ($rootScope.guideSegmentation && t.tour_segment && t.tour_segment.length) {
			var segments = [];
			for (var k = 0; k < t.tour_segment.length; k++) {
				for (var l = 0; l < t.tour_segment[k].length; l++) {
					segments.push(t.tour_segment[k][l]);
				}
			}

			if (GmCXt.areUserSegmentsValid(segments)) {
				isValid = true;
			}
		} else {
			isValid = true;
		}
		return isValid;
	}

	function checkTourUpdates(toursUpdate) {
		for (var i = 0; i < toursUpdate.length; i++) {

			var t = toursUpdate[i];
			var guideInStore = $rootScope.allTourList['cat_' + t.category_id] ? $rootScope.allTourList['cat_' + t.category_id]['tour_' + t.tour_id] : false;

			if (!guideInStore) {
				guideInStore = $rootScope.toursModifiedTime[t.tour_id] ? $rootScope.toursModifiedTime[t.tour_id] : false;
			}

			if (checkIfValidTourSegment(t)) {
				if (guideInStore) {
					if (parseInt(t.modification_date) - parseInt(guideInStore.modification_date) > 0) {
						commonUpdate.updateTour(t);
					} else if (parseInt(t.tour_order) !== parseInt(guideInStore.tour_order)) {
						guideInStore.tour_order = t.tour_order;
						commonUpdate.updateTour(t, "", guideInStore); //update only tour order in local data (No API call)
					}

				} else {
					commonUpdate.updateTour(t);
				}
			}

		}

		checkTourDelete(toursUpdate);
	}

	function deleteAllCategories() {

		for (var i = 0; i < $rootScope.allCategories.length; i++) {
			$rootScope.removeCategory($rootScope.allCategories[i]);
			$rootScope.appList["app:" + appId].categories = [];
		}
	}

	function checkCatDelete(catUpdates, allCats, appId) {

		/* check update for Each cat in allCategories  . 
			*  if exisintg category not found in categories in timetamp.json, that means the cat has been removed. 
			*/

		GmCXt.log(70, 'CHECK CATEGORY DELETE');

		allCats = allCats || $rootScope.allCategories;

		Object.keys(allCats).forEach(function(catId) {

			var pCat = allCats[catId];

			var catFound = catUpdates.filter(function(c) {
				return parseInt(c.category_id) === parseInt(pCat.category_id);
			});

			if (GmCXt.isEmpty(catFound)) { //i.e. category removed

				GmCXt.log(70, 'Category update not found. Delete ' + GmCXt.categoryLog(pCat));
				if (!appId) {

					GmCXt.log(70, 'REMOVE CAT from GLOBLE' + GmCXt.categoryLog(pCat));
					$rootScope.removeCategory(pCat);
				}

				$rootScope.updateCategoryInStorgae(pCat, true, appId);

				commonUpdate.updateScope(pCat);
			}

		});
	}

	function checkCatUpdates(catUpdates) {

		GmCXt.log(70, 'CATEGORY UPDATES for CURRENT APP');

		var tourCb = function(c) {
			commonUpdate.updateScope(c);
		};

		var fetchTour = function(newCat) {

			if (newCat.has_tour) {
				GmCXt.log(70, 'FETCH TOURS FOR: ' + GmCXt.categoryLog(newCat));
				$rootScope.fetchToursForCategory(newCat.category_id, tourCb, true);
			}
		};

		var catCb = function(uc) {
			commonUpdate.updateScope(uc);
		};

		for (var i = 0; i < catUpdates.length; i++) {
			var c = catUpdates[i];

			var catFound = $rootScope.getCategory(c.category_id); // cat in current app

			if (catFound) { // exising category updated
				if (parseInt(c.modification_date) - parseInt(catFound.modification_date) > 0) {
					GmCXt.log(70, 'UPDATE: ' + GmCXt.categoryLog(catFound));
					commonUpdate.updateCat(c).then(catCb);
				} else if (parseInt(c.category_order) !== parseInt(catFound.category_order)) {
					catFound.category_order = c.category_order;
					catCb(catFound);
				}

			} else { //get new category
				GmCXt.log(70, 'ADD: ' + GmCXt.categoryLog(catFound));
				commonUpdate.updateCat(c).then(fetchTour);
			}
		}

		checkCatDelete(catUpdates);

	}

	function updateApp(a) {

		api.getAppDetails(a.application_id, function(app) {

			var categories = GmCXt.createDeepCopy($rootScope.appList["app:" + app.application_id].categories);

			app.categories = categories;

			$rootScope.appList["app:" + app.application_id] = app;

			storage.appData.set($rootScope.appList);

		});
	}

	//.........non active app update........./

	function updateNonActiveApp(app, appUpdates) {

		var appFound = false;
	}

	function updateNonActiveCategories(cats, catUpdates, currentAppId) {

		var fetchTour = function(newCat) {

			var updateTourInStore = function(tlist) {
				$rootScope.updateToursInCategoryStorage(newCat.category_id, tlist, remove, currentAppId);
			};

			$rootScope.updateCategoryInStorgae(newCat, false, currentAppId);

			if (newCat.has_tour) {
				$rootScope.fetchToursForCategory(newCat.category_id, updateTourInStore, true, currentAppId);
			}
		};

		var updateCatStore = function(c) {
			$rootScope.updateCategoryInStorgae(c, false, currentAppId);
		};

		catUpdates.forEach(function(uc) {
			var isCat = cats['cat_' + uc.category_id];

			if (isCat) {
				if (parseInt(uc.modification_date) - parseInt(isCat.modification_date) > 0) { //category found
					commonUpdate.updateCat(uc, currentAppId).then(updateCatStore);
				} else if (parseInt(uc.category_order) !== parseInt(isCat.category_order)) {
					isCat.category_order = uc.category_order;
					updateCatStore(isCat);
				}
			} else {
				commonUpdate.updateCat(uc, currentAppId).then(fetchTour);
			}
		});

		checkCatDelete(catUpdates, cats, currentAppId);
	}

	function updateNonActiveTours(appData, toursUpdate, currentAppId) {
		toursUpdate.forEach(function(ut) {
			var isTour = appData.tours['tour_' + ut.tour_id];

			if (checkIfValidTourSegment(ut)) {
				if (isTour) {
					if (parseInt(ut.modification_date) - parseInt(isTour.modification_date) > 0) {
						commonUpdate.updateTour(ut, currentAppId);
					} else if (parseInt(ut.tour_order) !== parseInt(isTour.tour_order)) {
						isTour.tour_order = ut.tour_order;
						commonUpdate.updateTour(ut, currentAppId, isTour); //update only tour order in local data (No API call)
					}
				} else {
					commonUpdate.updateTour(ut, currentAppId);
				}
			}
		});

		checkTourDelete(toursUpdate, appData.tours, currentAppId);
	}

	function processNonActiveAppData(d) {

		Object.keys($rootScope.appList).forEach(function(key) {
			var app = $rootScope.appList[key];

			if (parseInt(app.application_id) === parseInt($rootScope.activeAppId)) {
				return;
			}

			//checkAppUpdate is received
			var appFound = d.applications[app.application_id];

			if (app && app.categories && app.categories.length) {
				var appData = $rootScope.processAppData(app);

				//update cat data
				updateNonActiveCategories(appData.categories, appFound.categories, app.application_id);

				//update tour data
				updateNonActiveTours(appData, appFound.tours, app.application_id);
			}

		});
	}

	this.processUpdates = function(d) { // d is timestamp.json response 

		var orgRefresh = d.modification_date;

		if (parseInt(orgRefresh) - parseInt(GmCXt.organization.modification_date)) {
			GmCXt.log(70, 'GET ORG');

			api.getOrgJson(function(org) {
				storage.organization.set(org);
			}, false);
		}

		if (d.applications) {

			if (GmCXt.user && (GmCXt.user.app_access.length !== Object.keys($rootScope.appList).length)) { //  an application is added or deleted				

				updatingOrgJSON = true;
				$rootScope.refreshAllData();

				return;

			}

			var activeAppData;

			Object.keys(d.applications).forEach(function(a) {

				var appUpdate = d.applications[a];

				var app = $rootScope.appList['app:' + appUpdate.application_id];

				if (!app) {
					return;
				}

				if (appUpdate && parseInt(appUpdate.modification_date) - parseInt(app.modification_date) > 0) {
					updateApp(app);
				}

				if (app.application_id === $rootScope.activeAppId) {
					activeAppData = {
						categories: appUpdate.categories,
						tours: appUpdate.tours
					};
				}

			});

			if (activeAppData.categories) {
				checkCatUpdates(activeAppData.categories);

				if (activeAppData.tours.length) {
					checkTourUpdates(activeAppData.tours);
				}
			} else {
				deleteAllCategories();
			}

			processNonActiveAppData(d);

		} else {
			$rootScope.refreshAllData();
		}
	};

}]);
var app = angular.module('guideme');

app.service('uploadImageService', ['$rootScope', function($rootScope) {

	this.get = function() {
		var promise = new Promise(function(resolve, reject) {

			mg$("#mgPlayerJSTest_add-step-upload-file").click();

			mg$('#mgPlayerJSTest_add-step-upload-file').off("change").on("change", function(e) {

				if (e.target.files[0]) {
					var fileSize = e.target.files[0].size;
					var fileType = e.target.files[0].type;
					if (fileSize > 5240000) {
						$rootScope.showPopup($rootScope.labels.imageGreaterThan5MbErrorMessage);
						mg$('#mgPlayerJSTest_add-step-upload-file').val('');
						return;
					}
					if (mg$.inArray(fileType, $rootScope.allowedImageExtensions) === -1) {
						$rootScope.showPopup($rootScope.labels.imageExtensionMessage);
						mg$('#mgPlayerJSTest_add-step-upload-file').val('');
						return;
					}
				} else {
					return;
				}

				var reader = new FileReader();

				reader.onload = function(event) {
					mg$('#mgPlayerJSTest_add-step-upload-file').val('');
					resolve(event.target.result);
				};

				reader.readAsDataURL(e.target.files[0]);
			});
		});

		return promise;
	};

}]);

app.service('AuthLogin', ['storage', '$rootScope', function(storage, $rootScope) {
	this.isSession = function() {
		var user = GmCXt.user;
		if (user && user.accesstoken) return true;
		return false;
	};
}]);

app.service('JsonService', ['$rootScope', function($rootScope) {

	this.parse = function(jsonString) {

		try {
			var object = GmCXt.parseJSON(jsonString);

			if (object && typeof object === "object") {
				return object;
			}

		} catch (e) {

		}

		return false;
	};

}]);

app.service('TourService', ['$rootScope', 'api', function($rootScope, api) {

	this.getSteps = function(tour, isUserLoggedIn) {

		return new Promise(function(resolve, reject) {
			var activeTab = $rootScope.activeTab;
			if (activeTab) {
				if (tour.steps && tour.steps.length > 0) {
					resolve(tour.steps);
				} else {
					var params = {
						tour_id: tour.tour_id,
						category_id: tour.category_id
					};

					var cb = function(_tour) {
						resolve(_tour.steps);
					};

					api.getTour(params, cb);
				}
			} else {
				reject();
			}
		});
	};
}]);

app.service('languages', ['$rootScope', 'api', 'storage', function($rootScope, api, storage) {
	this.get = function() {

		return new Promise(function(resolve, reject) {
			try {
				var cb = function(response) {
					resolve(response.data);
					if (!GmCXt.isEmpty(response.data)) {
						storage.languageList.set(response.data);
					}
				};

				storage.languageList.get().then(function(llist) {
					if (GmCXt.isEmpty(llist)) {
						api.getAllLanguages().then(cb);
					} else {
						resolve(llist);
					}
				});

			} catch (e) {
				reject();
			}
		});
	};
}]);
GmCXt.storageService = function() {

	var getExpiry = function(exp) {
		var schedule;
		if (exp && angular.isDefined(exp) && angular.isNumber(exp)) {
			schedule = Date.now() + exp * 1000;
		} else {
			// Schedule for 24 hours, if expiration time is not set
			schedule = Date.now() + 864000000;
		}
		return schedule;
	};

	var getAppStorage = function(key) {
		var promise = new Promise(function(resolve, reject) {
			try {
				key = GmCXt.addStoragePrefix(key);
				var data = localStorage.getItem(key);
				var expiresIn = localStorage.getItem(key + "_time");

				//Check expiration time for stored item. If item is expired remove key and return false;
				if (expiresIn && expiresIn !== undefined) {
					var now = Date.now();
					if (expiresIn < now) {
						removeAppStorage(key);
						resolve(false);
					}
				} else resolve(false);

				if (data && data !== undefined) {
					data = GmCXt.parseJSON(data);
					if (angular.isDefined(data)) {
						resolve(data);
					}
				}

				resolve(false);

			} catch (e) {
				GmCXt.showCookieDisabledPopup();
				reject(false);
			}
		});

		return promise;
	};

	function clearLocalStorage() {
		var keys = Object.keys(localStorage);

		keys.forEach(function(k) {
			removeAppStorage(k);
		});
	}

	function saveUser(data) {
		var m = {
			action: "mgPlayerJSTest_action:save_user_info",
			data: data
		};
		GmCXt.sendToParentWindow(m);
		GmCXt.messageService(m);
	}

	function saveOrg(data) {
		var m = {
			action: "mgPlayerJSTest_action:save_org",
			data: data
		};
		GmCXt.sendToParentWindow(m);
		GmCXt.messageService(m);
	}

	var saveAppStorage = function(key, data, expires) {
		var promise = new Promise(function(resolve, reject) {

			if (key === 'user') {
				saveUser(data);
			} else if (key === 'organization') {
				saveOrg(data);
			}

			data = JSON.stringify(data);

			key = GmCXt.addStoragePrefix(key);
			localStorage.setItem(key, data);
			localStorage.setItem(key + "_time", getExpiry(expires));
			resolve(true);
		});

		return promise;
	};

	var removeAppStorage = function(key) {
		var promise = new Promise(function(resolve, reject) {

			if (key === 'user') {
				saveUser(false);
			} else if (key === 'organization') {
				saveOrg(false);
			}

			key = GmCXt.addStoragePrefix(key);
			localStorage.removeItem(key);

			if (localStorage.getItem(key + '_time')) {
				localStorage.removeItem(key + '_time');
			}

			resolve(true);
		});

		return promise;
	};

	var resetAppStorage = function() {

		var promise = new Promise(function(resolve, reject) {
			clearLocalStorage();
			saveUser(false);
			saveOrg(false);
			resolve(true);
		});

		return promise;
	};

	var getAppString = function(key) {
		var promise = new Promise(function(resolve, reject) {

			key = GmCXt.addStoragePrefix(key);
			var data = localStorage.getItem(key);

			if (data && data !== undefined) {
				resolve(data);
			} else {
				resolve(false);
			}
		});

		return promise;
	};

	var saveAppString = function(key, data) {
		var promise = new Promise(function(resolve, reject) {

			key = GmCXt.addStoragePrefix(key);
			localStorage.setItem(key, data);
			resolve(true);
		});

		return promise;
	};

	var getLxpString = function(key) {
		var promise = new Promise(function(resolve, reject) {
			var arr = [];
			arr.push(key);
			var mid = 'id' + Math.random();
			var d = {
				id: mid,
				key: arr
			};
			var message = {
				action: "mgPlayerJSTest_action:get_lxp_storage",
				data: d
			};

			var listen = function(event) {

				var res = GmCXt.parseMsg(event);
				res = GmCXt.convertMgdata(res);

				if (res.action === "mgPlayerJSTest_action:receive_lxp_storage" && res.data.id === mid) {
					window.removeEventListener('message', listen);
					var d = res.data.data[arr[0]];
					if (GmCXt.isEmpty(d)) {
						resolve(false);
					} else {
						resolve(d);
					}
				}
			};

			// This listener is only in Guide iframe
			window.addEventListener('message', listen);

			GmCXt.sendToParentWindow(message);
			GmCXt.messageService(message);
		});
		return promise;
	};

	var getLxpStorage = function(key) {
		var promise = new Promise(function(resolve, reject) {
			try {
				var arr = [];
				arr.push(key);
				var mid = 'id' + Math.random();
				var d = {
					id: mid,
					key: arr
				};
				var message = {
					action: "mgPlayerJSTest_action:get_lxp_storage",
					data: d
				};

				var listen = function(event) {

					var res = GmCXt.parseMsg(event);
					res = GmCXt.convertMgdata(res);

					if (res.action === "mgPlayerJSTest_action:receive_lxp_storage" && res.data.id === mid) {
						window.removeEventListener('message', listen);

						var resValue = false;

						if (GmCXt.isEmpty(res.data)) {
							resValue = false;
						} else {
							var d = res.data.data[arr[0]];
							if (d) {
								var expiresIn = d.expires;
								var value = d.val;

								//Check expiration time for stored item. If item is expired remove key and return false;
								if (expiresIn && expiresIn !== undefined) {
									var now = Date.now();
									if (expiresIn < now) {
										removeLxpStorage(key);
										resValue = false;
									}
								} else resolve(false);

								if (value && value !== undefined) {
									if (angular.isDefined(value)) {
										resValue = value;
									}
								}
							}
						}

						resolve(resValue);
					}
				};

				// This listener is only in Guide iframe
				window.addEventListener('message', listen);

				GmCXt.sendToParentWindow(message);
				GmCXt.messageService(message);

			} catch (e) {
				GmCXt.showCookieDisabledPopup();
				return;
			}
		});

		return promise;
	};

	var saveLxpStorage = function(key, data, expires) {

		return new Promise(function(resolve, reject) {

			var d = {};
			d.key = key;
			d.data = {};

			d.data.expires = getExpiry(expires);
			d.data.val = data;
			d.data = d.data;

			var message = {
				action: "mgPlayerJSTest_action:set_lxp_storage",
				data: d
			};

			GmCXt.sendToParentWindow(message);
			GmCXt.messageService(message);

			resolve();
		});
	};

	var removeLxpStorage = function(key) {

		return new Promise(function(resolve, reject) {

			var d = [];
			d.push(key);
			var message = {
				action: "mgPlayerJSTest_action:remove_lxp_storage",
				data: d
			};

			GmCXt.sendToParentWindow(message);
			GmCXt.messageService(message);

			resolve();
		});
	};

	var resetLxpStorage = function() {

		return new Promise(function(resolve, reject) {

			var message = {
				action: "mgPlayerJSTest_action:reset_lxp_storage",
				data: {}
			};

			GmCXt.sendToParentWindow(message);
			GmCXt.messageService(message);

			resolve();
		});
	};

	var saveLxpString = function(key, data) {
		return new Promise(function(resolve, reject) {

			var d = {};
			d.key = key;
			d.data = data;
			var message = {
				action: "mgPlayerJSTest_action:set_lxp_storage",
				data: d
			};

			GmCXt.sendToParentWindow(message);
			GmCXt.messageService(message);

			resolve();
		});
	};

	var pub = {};

	if (GmCXt.isLXP()) {
		pub.get = getLxpStorage;
		pub.save = saveLxpStorage;
		pub.remove = removeLxpStorage;
		pub.reset = resetLxpStorage;
		pub.getString = getLxpString;
		pub.saveString = saveLxpString;
	} else {
		pub.get = getAppStorage;
		pub.save = saveAppStorage;
		pub.remove = removeAppStorage;
		pub.reset = resetAppStorage;
		pub.getString = getAppString;
		pub.saveString = saveAppString;
	}

	return pub;
};

GmCXt.notifTours = {
	get: function() {
		return new Promise(function(resolve, reject) {
			GmCXt.storage().get(['toursClosed', 'tourIdArray']).then(function(res) {
				GmCXt.log(10, 'LOADED notifTours from storage', res);
				resolve(res);
			});
		});
	},
	set: function(val) {
		return new Promise(function(resolve, reject) {
			GmCXt.storage().set({
				'toursClosed': val.toursClosed,
				'tourIdArray': val.tourIdArray
			}).then(function() {
				resolve();
			});
		});
	}
};

GmCXt.stepsPlayed = {
	get: function() {
		return new Promise(function(resolve, reject) {
			GmCXt.storage().get(['stepsPlayed']).then(function(res) {
				resolve(res);
			});
		});
	},
	set: function(val) {
		return new Promise(function(resolve, reject) {
			GmCXt.storage().set({
				'stepsPlayed': val
			}).then(function() {
				resolve();
			});
		});
	}
};

app.service('storage', ['$rootScope', '$localForage', function($rootScope, localForage) {

	this.user = {};
	this.organization = {};
	this.genAIToken = {};
	this.activeView = {};
	this.activeTab = {};
	this.appData = {};
	this.activeAppId = {};
	this.category = {};
	this.videosInProgress = {};
	this.activeLang = {};
	this.activeOrgKeys = {};
	this.activeVoice = {};
	this.userPrefLang = {};
	this.dual_auth_token = {};
	this.storageSyncTime = {};
	this.trackerSecrets = {};
	this.tour = {};
	this.breadCrumbItems = {};
	this.activeTourId = {};
	this.edcastTermsAccepted = {};
	this.lastSsoRedirectTime = {};
	this.activeTaskTab = {};
	this.currentTour = {};
	this.testAuto = {};
	this.loginTime = {};
	this.notifTours = {};
	this.stepsPlayed = {};
	this.refreshTime = {};
	this.lastTimeStampSync = {};
	this.segmentData = {};
	this.segmentGroupData = {};
	this.edcastLogin = {};
	this.debugMode = {};
	this.allTourList = {};
	this.serverUpdates = {};
	this.activeSortFilter = {};
	this.refreshCache = {};
	this.currentStep = {};
	this.serverDeletes = {};
	this.taskList = {};
	this.pinnedToursList = {};
	this.toursModifiedTime = {};
	this.accessibility = {};
	this.otpCounter = {};
	this.confirmLinkGuidePub = {};
	this.languageList = {};
	var taskListStorage = [];

	var str = GmCXt.storageService();

	var dbName = GmCXt.conf.appName + GmCXt.conf.env + 'DB';
	var currentURL;

	if (GmCXt.isLXP() && document.referrer) {
		currentURL = GmCXt.filterUrlScheme(document.referrer).replaceAll(".", "");
		dbName += currentURL;
	}

	this.getIndexedDbInstance = function() {
		return localforage.createInstance({
			name: dbName,
			storeName: 'mgStore',
		});
	};

	this.clearIndexedDb = function(d) {

		try {
			dapStore.clear();
		} catch (e) {
			GmCXt.log(1, "ERROR: IndexedDb not cleared, " + d);
		}
	};

	var dapStore = this.getIndexedDbInstance();

	//remove db with old naming
	//this.clearIndexedDb("mgDB");

	this.reset = function() {
		dapStore.clear();
		str.reset();
	};

	function remove(key) {
		str.remove(key);
	}

	function set(key, value, expiry) {
		str.save(key, value, expiry);
	}

	function setString(key, value, expiry) {
		str.saveString(key, value, expiry);
	}

	if (GmCXt.FT.creatorApp) {

		this.showPlayer = {};

		this.showPlayer.set = function(val) {
			$rootScope.showPlayer = val;
			if (val) {
				GmCXt.FT.creatorApp = true;
				$rootScope.FT.creatorApp = true;
			}
			set('playerMode', val);
		};

		this.showPlayer.get = function() {
			return new Promise(function(resolve, reject) {
				str.get('playerMode').then(function(res) {
					if (res) {
						$rootScope.showPlayer = res;

						GmCXt.FT.creatorApp = true;
						$rootScope.FT.creatorApp = true;
					} else {
						$rootScope.showPlayer = false;
					}
				});

				resolve();
			});
		};
	}

	this.activeSortFilter.set = function(val) {
		$rootScope.descOrder = val.descOrder;
		$rootScope.activeSortFilter = val.activeSfilter;
		return set('activeSortFilter', val);
	};

	this.activeSortFilter.get = function() {
		return new Promise(function(resolve, reject) {
			str.get('activeSortFilter').then(function(res) {
				if (!GmCXt.isEmpty(res)) {
					$rootScope.descOrder = res.descOrder;
					$rootScope.activeSortFilter = res.activeSfilter;
				} else {
					$rootScope.descOrder = false;
					$rootScope.activeSortFilter = '';
				}
				resolve(res);
			});
		});
	};

	this.activeSortFilter.remove = function() {
		remove('activeSortFilter');
	};

	this.testAuto.set = function() {
		$rootScope.testAuto = true;
		setString('testAuto', true);
	};

	this.refreshCache.set = function(val) {
		$rootScope.refreshCache = val;
		return set('refreshCache', JSON.stringify(val));
	};

	this.refreshCache.get = function() {
		return new Promise(function(resolve, reject) {
			str.get('refreshCache').then(function(res) {
				if (res && !GmCXt.isEmpty(res)) {
					$rootScope.refreshCache = GmCXt.parseJSON(res);
				} else {
					$rootScope.refreshCache = {};
				}
				resolve(res);
			});
		});
	};

	this.refreshCache.remove = function() {
		$rootScope.refreshCache = {};
		remove('refreshCache');
	};

	this.testAuto.get = function() {
		return new Promise(function(resolve, reject) {
			str.getString('testAuto').then(function(res) {
				$rootScope.testAuto = res === "true";
			});

			resolve();
		});
	};

	this.testAuto.remove = function() {
		$rootScope.testAuto = null;
		remove('testAuto');
	};

	this.user.get = function() {
		return new Promise(function(resolve, reject) {
			str.get('user').then(function(u) {
				if (u) {
					GmCXt.updateGlobalUser(u);
					$rootScope.user = GmCXt.user;
					$rootScope.syncUser();
					resolve(true);
				} else {
					GmCXt.user = false;
					$rootScope.user = false;
					resolve(false);
				}

				if (u && u.organization) {
					$rootScope.saveOrganization(u.organization);
				}
			});
		});
	};

	this.user.set = function(val) {
		if (val) {
			GmCXt.updateGlobalUser(val);
			$rootScope.user = GmCXt.user;
			set('user', GmCXt.user);
		}
	};

	this.user.remove = function() {
		GmCXt.user = false;
		GmCXt.updateGlobalUser(false);
		remove('user');
	};

	this.accessibility.get = function() {
		return new Promise(function(resolve, reject) {
			str.get('accessibility').then(function(a) {
				if (a) {

					$rootScope.accessibility = a || false;
					GmCXt.accessibility = $rootScope.accessibility;

					$rootScope.syncAccessibility($rootScope.accessibility);
					resolve($rootScope.accessibility);
				} else {

					$rootScope.accessibility = false;
					GmCXt.accessibility = $rootScope.accessibility;
					$rootScope.syncAccessibility($rootScope.accessibility);
					resolve($rootScope.accessibility);
				}
			});
		});
	};

	this.accessibility.set = function(val) {
		$rootScope.accessibility = val;
		GmCXt.accessibility = $rootScope.accessibility;
		$rootScope.syncAccessibility($rootScope.accessibility);
		set('accessibility', val);
	};

	this.accessibility.remove = function() {
		$rootScope.accessibility = false;
		GmCXt.accessibility = false;
		$rootScope.syncAccessibility($rootScope.accessibility);
		remove('accessibility');
	};

	this.organization.get = function() {
		return new Promise(function(resolve, reject) {
			str.get('organization').then(function(o) {
				if (o) {
					GmCXt.updateGlobalOrg(o);
					$rootScope.organization = GmCXt.organization;
					resolve(true);
				} else if (GmCXt.user) {
					if (GmCXt.user.organization) {
						$rootScope.saveOrganization(GmCXt.user.organization);
						resolve(true);
					} else {
						$rootScope.fetchOrgFromAPI().then(function() {
							resolve(true);
						}).catch(function(err) {
							reject(err);
						});
					}

				} else {
					GmCXt.organization = false;
					$rootScope.organization = false;
					resolve(false);
				}
			});
		});
	};

	this.organization.set = function(val) {
		if (val) {
			GmCXt.updateGlobalOrg(val);
			$rootScope.organization = GmCXt.organization;
			set('organization', GmCXt.organization);
		}
	};

	this.organization.remove = function() {
		GmCXt.updateGlobalOrg(false);
		$rootScope.organization = GmCXt.organization;
		remove('organization');
	};

	this.genAIToken.set = function(val){
		if(val){
			$rootScope.genAIToken = val;
			set('genAIToken', val);
		}
	};

	this.genAIToken.get = function(){
		return new Promise(function(resolve, reject) {
			str.get('genAIToken').then(function(accessToken) {
				if (accessToken) {
					$rootScope.genAIToken = accessToken;
					resolve(true);
				}else{
					resolve(false);
				} 
					
			});
		});
	};

	this.genAIToken.remove = function() {
		$rootScope.genAIToken = false;
		remove('genAIToken');
	};

	this.activeView.set = function(path) {

		if ($rootScope.lastView === "all_guides") {
			$rootScope.refreshAllGuides = false;
			$rootScope.lastView = false;
		}

		if (path) {
			$rootScope.activeView = path;
			setString('activeView', path);
		}
	};

	this.activeView.get = function() {
		return new Promise(function(resolve, reject) {
			str.getString('activeView').then(function(res) {
				$rootScope.activeView = res;
				resolve(res);
			});
		});
	};

	this.activeView.remove = function() {
		$rootScope.activeView = null;
		remove('activeView');
	};

	this.activeTab.set = function(val) {
		if (val) {
			$rootScope.activeTab = val;
			setString('activeTab', val);
		}
	};

	this.activeTab.get = function() {
		return new Promise(function(resolve, reject) {
			str.getString('activeTab').then(function(res) {
				$rootScope.activeTab = res;
				resolve(res);
			});
		});
	};

	this.activeTab.remove = function() {
		$rootScope.activeTab = false;
		remove('activeTab');
	};

	if (GmCXt.inPlayer) {

		this.appData.set = function(apps, sync) {

			$rootScope.appList = apps;
			GmCXt.appList = apps;

			dapStore.setItem('appData', apps);
		};

		this.appData.get = function() {
			return new Promise(function(resolve, reject) {

				function setAppData(value) {
					$rootScope.appList = value || {};
					GmCXt.appList = value || {};

					resolve($rootScope.appList);

					$rootScope.syncApps($rootScope.appList);
				}

				dapStore.getItem('appData').then(function(value) {

					setAppData(value);
				}).catch(function(err) {
					console.dir(err);
					setAppData({});
				});
			});
		};

		this.appData.remove = function() {
			$rootScope.appList = {};
			GmCXt.appList = {};
			dapStore.removeItem('appData');
		};

	} else {

		this.appData.set = function(apps) {
			$rootScope.appList = apps;
			GmCXt.appList = apps;

			$rootScope.syncApps(apps);

			set('appData', apps);
		};

		this.appData.get = function() {
			return new Promise(function(resolve, reject) {
				str.get('appData').then(function(value) {
					$rootScope.appList = value || {};
					GmCXt.appList = value || {};
					$rootScope.syncApps(value);
					resolve($rootScope.appList);
				});
			});
		};

		this.appData.remove = function() {
			$rootScope.appList = {};
			GmCXt.appList = {};
			remove('appData');
		};
	}

	this.activeAppId.set = function(id) {

		if (id) {
			$rootScope.activeAppId = id;
			GmCXt.activeAppId = id;
			set('activeAppId', id);

			$rootScope.syncAppId();
		}
	};

	this.activeAppId.get = function() {
		return new Promise(function(resolve, reject) {
			str.get('activeAppId').then(function(res) {
				$rootScope.activeAppId = res || null;
				GmCXt.activeAppId = $rootScope.activeAppId;

				$rootScope.syncAppId();
				resolve(res);
			});
		});
	};

	this.activeAppId.remove = function() {
		$rootScope.activeAppId = false;
		GmCXt.activeAppId = false;
		remove('activeAppId');

		$rootScope.syncAppId();
	};


	if (!GmCXt.inPlayer) {

		this.category.get = function(id) {
			return new Promise(function(resolve, reject) {
				dapStore.getItem('categories').then(function(catList) {
					catList = catList ? catList : {};
					$rootScope.allCategories = catList;
					$rootScope.processCategories();
				});
				resolve();
			});
		};

		this.category.reset = function(categories) {
			$rootScope.allCategories = categories;
			return dapStore.setItem('categories', categories);
		};

		this.category.remove = function() {
			dapStore.removeItem('categories');
		};
	}

	this.videosInProgress.get = function() {
		return new Promise(function(resolve, reject) {
			str.get('videosInProgress').then(function(res) {
				if (res) {
					$rootScope.tourVideoInProgressArr = res;
				}
				resolve(res);
			});
		});
	};

	this.videosInProgress.set = function(val) {
		set('videosInProgress', val);
	};

	this.activeLang.set = function(val) {
		$rootScope.language = val;
		GmCXt.language = val;
		setString('activeLang', val);
	};

	this.activeLang.get = function() {
		return new Promise(function(resolve, reject) {
			str.getString('activeLang').then(function(res) {
				if (!GmCXt.isFalse(res)) {
					$rootScope.language = res;
					GmCXt.language = res;
				}
				resolve(res);
			});
		});
	};

	this.activeLang.remove = function() {
		$rootScope.language = false;
		GmCXt.language = false;
		remove('activeLang');
	};

	this.activeOrgKeys.set = function(val) {
		setString('activeOrgKeys', val);
	};

	this.activeOrgKeys.get = function() {
		return new Promise(function(resolve, reject) {
			str.getString('activeOrgKeys').then(function(res) {
				resolve(res);
			});
		});
	};

	this.activeOrgKeys.remove = function() {
		remove('activeOrgKeys');
	};

	this.activeVoice.set = function(val) {
		$rootScope.languageVoice = val;
		str.saveString('activeVoice', val);
	};

	this.activeVoice.get = function() {
		return new Promise(function(resolve, reject) {
			str.getString('activeVoice').then(function(res) {
				if (!GmCXt.isFalse(res)) {
					$rootScope.languageVoice = res;
				}
				resolve(res);
			});
		});
	};

	this.userPrefLang.set = function(val) {
		$rootScope.userPrefLang = val;
		str.saveString('userPrefLang', val);
	};

	this.userPrefLang.get = function() {
		return new Promise(function(resolve, reject) {
			str.getString('userPrefLang').then(function(res) {
				if (!GmCXt.isFalse(res)) {
					$rootScope.userPrefLang = res;
				}
				resolve(res);
			});
		});
	};

	this.activeVoice.remove = function() {
		$rootScope.languageVoice = false;
		remove('activeVoice');
	};

	this.dual_auth_token.set = function(val, expiry) {
		set('dual_auth_token', val, expiry);
	};

	this.dual_auth_token.get = function() {
		return new Promise(function(resolve, reject) {
			str.get('dual_auth_token').then(function(res) {
				resolve(res);
			});
		});
	};

	this.storageSyncTime.set = function(val) {
		set('storageSyncTime', val);
	};

	this.storageSyncTime.get = function() {
		return new Promise(function(resolve, reject) {
			str.get('storageSyncTime').then(function(res) {
				resolve(res);
			});
		});
	};

	this.storageSyncTime.remove = function() {
		remove('storageSyncTime');
	};

	this.trackerSecrets.set = function(val) {
		$rootScope.trackerSecrets = val;
		GmCXt.trackerUtil.secrets = val;
		set('trackerSecrets', val);

		var msg = {
			action: "mgPlayerJSTest_action:update_secrets",
			data: {
				secrets: GmCXt.trackerUtil.secrets
			}
		};

		if ($rootScope.isClientJs) {
			GmCXt.sendToParentWindow(msg);
		} else {
			GmCXt.sendMessageToBackgroundService(msg);
		}

	};

	this.trackerSecrets.get = function() {
		return new Promise(function(resolve, reject) {
			str.get('trackerSecrets').then(function(res) {
				$rootScope.trackerSecrets = res || {};
				GmCXt.trackerUtil.secrets = res || {};

				var msg = {
					action: "mgPlayerJSTest_action:update_secrets",
					data: {
						secrets: GmCXt.trackerUtil.secrets
					}
				};

				if ($rootScope.isClientJs) {
					GmCXt.sendToParentWindow(msg);
				} else {
					GmCXt.sendMessageToBackgroundService(msg);
				}

				resolve(res);
			});
		});
	};

	this.segmentData.set = function(val) {
		$rootScope.segmentData = val.list;
		set('segmentData', val);
	};

	this.segmentData.get = function() {
		return new Promise(function(resolve, reject) {
			str.get('segmentData').then(function(res) {

				if (res) {
					var expiryTime = res.time + GmCXt.t.syncSegment;
					if (Date.now() < expiryTime) {
						$rootScope.segmentData = res.list;
						resolve(res.list);
					} else {

						$rootScope.getSegmentsList().then(function() {
							resolve($rootScope.segmentData);
						});

					}
				} else {
					$rootScope.segmentData = [];
					resolve($rootScope.segmentData);
				}
			});
		});
	};

	this.segmentData.remove = function() {
		$rootScope.segmentData = [];
		remove('segmentData');
	};

	this.segmentGroupData.set = function(val) {

		$rootScope.allSegments = val.list;

		set('segmentGroupData', val);
		$rootScope.syncSegmentData();
	};

	this.segmentGroupData.get = function() {

		return new Promise(function(resolve, reject) {

			var resetSeg = function() {
				$rootScope.allSegments = [];
				resolve([]);
			};

			str.get('segmentGroupData').then(function(res) {

				if (res) {
					var expiryTime = res.time + GmCXt.t.syncSegment;
					if (Date.now() < expiryTime) {
						resolve(res.list);
						$rootScope.allSegments = res.list;
						$rootScope.syncSegmentData();
					} else {
						resetSeg();
					}
				} else {
					resetSeg();
				}

			});
		});
	};

	this.segmentGroupData.remove = function() {
		$rootScope.allSegments = [];

		$rootScope.syncSegmentData();
		remove('segmentGroupData');
	};

	this.breadCrumbItems.set = function(val) {
		$rootScope.breadCrumbItems = val;
		set('breadCrumbItems', val);
	};

	this.breadCrumbItems.get = function() {
		return new Promise(function(resolve, reject) {
			str.get('breadCrumbItems').then(function(res) {
				$rootScope.breadCrumbItems = res;
				resolve(res);
			});
		});
	};

	this.activeTourId.set = function(val) {
		$rootScope.activeTourId = val;
		set('activeTourId', val);
	};

	this.activeTourId.get = function() {
		return new Promise(function(resolve, reject) {
			str.get('activeTourId').then(function(res) {
				$rootScope.activeTourId = res;
				resolve(res);
			});
		});
	};

	this.activeTourId.remove = function() {
		$rootScope.activeTourId = 0;
		remove('activeTourId');
	};

	this.edcastTermsAccepted.set = function(val) {
		set('edcastTermsAccepted', val);
	};

	this.edcastTermsAccepted.get = function() {
		return new Promise(function(resolve, reject) {
			str.get('edcastTermsAccepted').then(function(res) {
				resolve(res);
			});
		});
	};

	this.lastSsoRedirectTime.set = function(val) {
		set('lastSsoRedirectTime', val);
	};

	this.lastSsoRedirectTime.get = function() {
		return new Promise(function(resolve, reject) {
			str.get('lastSsoRedirectTime').then(function(res) {
				resolve(res);
			});
		});
	};

	this.confirmLinkGuidePub.set = function(val) {
		set('confirmLinkGuidePub', val);
	};

	this.confirmLinkGuidePub.get = function() {
		return new Promise(function(resolve, reject) {
			str.get('confirmLinkGuidePub').then(function(res) {
				resolve(res);
			});
		});
	};

	this.confirmLinkGuidePub.remove = function() {
		remove('confirmLinkGuidePub');
	};

	this.activeTaskTab.set = function(val) {
		set('activeTaskTab', val);
	};

	this.activeTaskTab.get = function() {
		return new Promise(function(resolve, reject) {
			str.get('activeTaskTab').then(function(res) {
				resolve(res);
			});
		});
	};

	this.currentTour.set = function(val) {
		$rootScope.currentTour = val;

		dapStore.setItem('currentTour', val);
	};

	this.currentTour.get = function() {
		return new Promise(function(resolve, reject) {
			dapStore.getItem('currentTour').then(function(res) {
				$rootScope.currentTour = res || {};
				resolve(res);
			});
		});
	};

	this.currentTour.remove = function() {
		$rootScope.currentTour = {};
		dapStore.removeItem('currentTour');
	};

	this.currentStep.set = function(val) {
		$rootScope.currentStep = val;
		set('currentStep', val);
	};

	this.currentStep.get = function() {
		return new Promise(function(resolve, reject) {
			str.get('currentStep').then(function(res) {
				$rootScope.currentStep = res;
				resolve(res);
			});
		});
	};

	this.currentStep.remove = function() {
		$rootScope.currentStep = false;
		remove('currentStep');
	};

	this.loginTime.set = function(val) {
		$rootScope.loginTime = val;
		set('loginTime', val);
	};

	this.loginTime.get = function() {
		return new Promise(function(resolve, reject) {
			str.get('loginTime').then(function(res) {
				$rootScope.loginTime = res;
				resolve(res);
			});
		});
	};

	this.loginTime.remove = function() {
		$rootScope.loginTime = false;
		remove('loginTime');
	};

	this.refreshTime.set = function(val) {
		$rootScope.refreshTime = val;
		set('refreshTime', val);
	};

	this.refreshTime.get = function() {
		return new Promise(function(resolve, reject) {
			str.get('refreshTime').then(function(res) {
				$rootScope.refreshTime = res ? res : 0;
				resolve(res);
			});
		});
	};

	this.refreshTime.remove = function() {
		$rootScope.refreshTime = null;
		remove('refreshTime');
	};

	this.lastTimeStampSync.set = function(val) {
		$rootScope.lastTimeStampSync = val;
		set('lastTimeStampSync', val);
	};

	this.lastTimeStampSync.get = function() {
		return new Promise(function(resolve, reject) {
			str.get('lastTimeStampSync').then(function(res) {
				$rootScope.lastTimeStampSync = res ? res : 0;
				resolve(res);
			});
		});
	};

	this.lastTimeStampSync.remove = function() {
		$rootScope.lastTimeStampSync = null;
		remove('lastTimeStampSync');
	};

	this.edcastLogin.set = function(val) {
		$rootScope.edLogin = val;
		GmCXt.edcastLogin = val;
		set('edcastLogin', val);
	};

	this.edcastLogin.get = function() {
		return new Promise(function(resolve, reject) {
			str.get('edcastLogin').then(function(res) {
				$rootScope.edLogin = res;
				GmCXt.edcastLogin = $rootScope.edLogin;
				resolve($rootScope.edLogin);
			});
		});
	};

	this.edcastLogin.remove = function() {
		$rootScope.edLogin = null;
		remove('edcastLogin');
	};

	this.debugMode.set = function(val) {
		$rootScope.debugMode = val;
		GmCXt.debugMode = val;
		set(GmCXt.getDebugKey(), val);
	};

	this.debugMode.get = function() {
		return new Promise(function(resolve, reject) {
			str.get(GmCXt.getDebugKey()).then(function(res) {
				$rootScope.debugMode = res;
				GmCXt.debugMode = $rootScope.debugMode;
				resolve($rootScope.debugMode);
			});
		});
	};

	this.debugMode.remove = function() {
		$rootScope.debugMode = null;
		remove(GmCXt.getDebugKey());
	};

	this.toursModifiedTime.set = function(val) {
		$rootScope.toursModifiedTime = val;
		set('toursModifiedTime', val);
	};

	this.toursModifiedTime.get = function() {
		return new Promise(function(resolve, reject) {
			str.get('toursModifiedTime').then(function(res) {
				$rootScope.toursModifiedTime = res || {};
				resolve(res);
			});
		});
	};

	this.notifTours.get = GmCXt.notifTours.get;

	this.notifTours.set = GmCXt.notifTours.set;

	this.allTourList.get = function() {
		return new Promise(function(resolve, reject) {

			dapStore.getItem('allTourList').then(function(value) {
				$rootScope.allTourList = value || {};
				resolve($rootScope.allTourList);

				// if (GmCXt.inPlayer) {
				// 	$rootScope.updatePublishedGuides($rootScope.allTourList);
				// }
			}).catch(function(err) {
				console.dir(err);
			});
		});
	};

	this.allTourList.set = function(tourList) {
		return new Promise(function(resolve, reject) {
			$rootScope.allTourList = tourList || {};
			dapStore.setItem('allTourList', $rootScope.allTourList);
		});
	};

	this.allTourList.remove = function() {
		$rootScope.allTourList = {};
		dapStore.removeItem('allTourList');
	};

	this.languageList.get = function() {
		return new Promise(function(resolve, reject) {

			dapStore.getItem('languageList').then(function(value) {
				$rootScope.languageList = value || {};
				resolve($rootScope.languageList);
			}).catch(function(err) {
				console.dir(err);
			});
		});
	};

	this.languageList.set = function(lList) {
		return new Promise(function(resolve, reject) {
			$rootScope.languageList = lList || {};
			dapStore.setItem('languageList', $rootScope.languageList);
		});
	};

	this.languageList.remove = function() {
		$rootScope.languageList = {};
		dapStore.removeItem('languageList');
	};

	this.serverUpdates.set = function(d) {
		$rootScope.serverUpdates = d || {};
		dapStore.setItem('serverUpdates', d);
	};

	this.serverUpdates.get = function() {
		return new Promise(function(resolve, reject) {
			dapStore.getItem('serverUpdates').then(function(res) {
				$rootScope.serverUpdates = res || {};
				resolve();
			});
		});
	};

	this.serverUpdates.remove = function() {
		$rootScope.serverUpdates = {};
		dapStore.removeItem('serverUpdates');
	};

	this.serverDeletes.set = function(d) {
		$rootScope.serverDeletes = d;
		dapStore.setItem('serverDeletes', d);
	};

	this.serverDeletes.get = function() {
		return new Promise(function(resolve, reject) {
			dapStore.getItem('serverDeletes').then(function(res) {
				$rootScope.serverDeletes = res || {
					categories: [],
					tours: []
				};
			});

			resolve();
		});
	};

	this.serverDeletes.remove = function() {
		$rootScope.serverDeletes = {
			categories: [],
			tours: []
		};
		dapStore.removeItem('serverDeletes');
	};

	this.taskList.set = function(tList, tTime) {
		var appId = GmCXt.getBaseAppId();
		if (GmCXt.isEmpty(tTime)) tTime = Date.now();
		var taskListData = {
			list: tList,
			time: tTime,
		};
		$rootScope.taskList = tList;
		dapStore.setItem('taskList_' + appId, taskListData);
	};

	this.taskList.get = function() {
		return new Promise(function(resolve, reject) {
			var appId = GmCXt.getBaseAppId();
			dapStore.getItem('taskList_' + appId).then(function(res) {
				if (res) {
					if (GmCXt.isEmpty(res)) {
						$rootScope.taskList = null;
						resolve(null);
					} else {
						var syncRes = $rootScope.syncTaskList(res);
						$rootScope.taskList = syncRes.list;
						resolve(syncRes);
					}
				} else {
					$rootScope.taskList = null;
					resolve(null);
				}
			}).catch(function(err) {
				$rootScope.taskList = null;
				resolve(null);
			});
		});
	};

	this.taskList.remove = function() {
		$rootScope.taskList = [];
		dapStore.removeItem('taskList_' + GmCXt.getBaseAppId());
	};

	this.pinnedToursList.set = function(val) {
		$rootScope.pinnedToursList = val;

		dapStore.setItem('pinnedToursList', val);
	};

	this.pinnedToursList.get = function() {
		return new Promise(function(resolve, reject) {
			dapStore.getItem('pinnedToursList').then(function(res) {
				$rootScope.pinnedToursList = res || {};
				resolve(res);
			});
		});
	};

	this.pinnedToursList.remove = function() {
		$rootScope.pinnedToursList = {};
		dapStore.removeItem('pinnedToursList');
	};

	this.stepsPlayed.get = GmCXt.stepsPlayed.get;

	this.stepsPlayed.set = GmCXt.stepsPlayed.set;

}]);

app.service('cStorage', ['$rootScope', 'mgError', function($rootScope, mgError) {

	function onError(error) {
		console.dir(error);
	}

	var setChromeStorage = function(res, d) {
		chrome.storage.local.set(d, function() {
			res();
		});
	};

	var setFirefoxStorage = function(res, d) {
		browser.storage.local.set(d).then(function(items) {
			res();
		}).catch(onError);
	};

	var setSafariStorage = function(res, d) {
		for (var key in d) {
			localStorage.setItem(key, d[key]);
		}
		res();
	};

	var getChromeStorage = function(res, k) {
		chrome.storage.local.get(k, function(items) {

			var d = {};
			for (var i in items) {
				var key = GmCXt.removeStoragePrefix(i);
				d[key] = items[i];
			}
			res(d);
		});
	};

	var getFirefoxStorage = function(res, k) {
		browser.storage.local.get(k).then(function(items) {
			res(items);
		}).catch(onError);
	};

	var getSafariExtStorage = function(res, data) {
		for (var i = 0; i < k.length; i++) {
			var d = {};
			for (var key in data) {
				var k = GmCXt.removeStoragePrefix(key);
				d[k] = localStorage.getItem(key);
			}
			res(d);
		}
	};

	var setExtStorage = function(data) {
		var promise = new Promise(function(resolve, reject) {

			var keys = {};
			for (var d in data) {
				var key = GmCXt.addStoragePrefix(d);
				keys[key] = data[d];
			}

			mgError.try(function() {

				switch ($rootScope.browserApp) {
					case 'chrome':
						setChromeStorage(resolve, keys);
						break;

					case 'firefox':
						setFirefoxStorage(resolve, keys);
						break;

					case 'safari':
						setSafariStorage(resolve, keys);
						break;

					default:
						reject();
						break;
				}
			});
		}, 501);
		return promise;
	};

	var getExtStorage = function(keys) {
		var promise = new Promise(function(resolve, reject) {
			mgError.try(function() {

				for (var i = 0; i < keys.length; i++) {
					keys[i] = GmCXt.addStoragePrefix(keys[i]);
				}

				switch ($rootScope.browserApp) {
					case 'chrome':
						getChromeStorage(resolve, keys);
						break;

					case 'firefox':
						getFirefoxStorage(resolve, keys);
						break;

					case 'safari':
						getSafariExtStorage(res, keys);
						break;

					default:
						reject();
						break;
				}
			});
		}, 501);
		return promise;
	};

	this.get = function(keys) {
		if (GmCXt.isExtension()) {
			return getExtStorage(keys);
		}
	};

	this.set = function(data) {
		if (GmCXt.isExtension()) {
			return setExtStorage(data);
		}
	};

}]);
var app = angular.module('guideme');

app.service('tourUtilService', ['modal',
	function(modal) {

		var filterByPublishedTours = function(t) {
			return t.filter(function(tour) {
				return tour.is_published;
			});
		};

		var filterOutTutorialGuides = function(tours) {
			return tours.filter(function(tour) {
				return !tour.tour_type.includes("onboarding_tour");
			});
		};

		var searchForNestedTours = function(categories) {
			var toursCount = 0;
			if (!categories || categories.length < 1) {
				return toursCount;
			}
			angular.forEach(categories, function(category) {
				if (category.tours) {
					toursCount += category.tours.length;
				}
				if (category.sub_categories) {
					toursCount += searchForNestedTours(category.sub_categories);
				}
			});
			return toursCount;
		};

		var findCategoryIndex = function(list, category) {
			var index = -1;
			angular.forEach(list, function(c, i) {
				if (c.category_id === category.category_id) {
					index = i;
				}
			});
			return index;
		};

		var filterStepsFromTour = function(t, stepType) {
			if (stepType === GmCXt.STEP_TYPE_AUTOMATION) {
				t.steps = t.steps.filter(function(step) {
					return (GmCXt.isAutomationStep(step));
				});
			} else {
				t.steps = t.steps.filter(function(step) {
					return (step.step_type !== stepType);
				});
			}
			return t;
		};

		var deleteSubCategories = function(category) {
			if (category.sub_categories) {
				category.sub_categories = [];
			}
		};

		this.filterByPublishedTours = filterByPublishedTours;
		this.filterOutTutorialGuides = filterOutTutorialGuides;
		this.searchForNestedTours = searchForNestedTours;
		this.findCategoryIndex = findCategoryIndex;
		this.filterStepsFromTour = filterStepsFromTour;
		this.deleteSubCategories = deleteSubCategories;
	}
]);
var app = angular.module('guideme');

app.directive('automationButtonBar', ['$rootScope', 'storage',
	function($rootScope, storage) {

		function Controller($scope) {
			$scope.cancelAutomationSelection = function() {
				$scope.myGuides = false;
				$rootScope.cancelAutomationSelection();
			};

			$scope.arrangeSubCategoryInTree = function(automationCategories) {
				var parentCategories = [];
				var count = 0;
				var temp = [];
				var alreadyPresent = false;

				function getParent() {
					var parent = null;
					alreadyPresent = false;

					function findOtherSiblingsOfThisCat() {
						for (var cat = 0; cat < automationCategories.length; cat++) {
							if (category !== cat &&
								automationCategories[category].parent_id === automationCategories[cat].parent_id) {
								parent.sub_categories.push(automationCategories[cat]);
							}
						}
					}

					if (temp.indexOf(automationCategories[category].parent_id) === -1 && automationCategories[category].parent_id !== "0") {
						temp.push(automationCategories[category].parent_id);
						parent = $rootScope.getCategory(automationCategories[category].parent_id);
						if (!parent.sub_categories) {
							parent.sub_categories = [];
						} else {
							alreadyPresent = true;
						}
						parent.sub_categories.push(automationCategories[category]);
						findOtherSiblingsOfThisCat();
					} else if (automationCategories[category].parent_id === "0") {
						// This category has no parent
						parent = automationCategories[category];
						count = count + 1;
					}
					return parent;
				}

				for (var category = 0; category < automationCategories.length; category++) {
					var parent = getParent();
					if (parent && !alreadyPresent) {
						parentCategories.push(parent);
					}
				}
				if (count !== automationCategories.length) {
					// Recursively look higher up in the tree for parents of these categories
					parentCategories = $scope.arrangeSubCategoryInTree(parentCategories);
				}
				return parentCategories;
			};

			$scope.getReducedTour = function(tours) {
				var reducedTour = [];
				tours.forEach(function(t) {
					reducedTour.push({
						tour_id: t.tour_id,
						tour_type: t.tour_type,
						tour_title: t.tour_title,
						category_id: t.category_id
					});
				});
				return reducedTour;
			};

			$scope.getReducedCategories = function(catgories) {

				var reducedCategory = [];
				catgories.forEach(function(cat) {
					if (cat.tours) {
						reducedCategory.push({
							category_id: cat.category_id,
							category_title: cat.category_title,
							tours: $scope.getReducedTour(cat.tours)
						});
					} else {
						reducedCategory.push({
							category_id: cat.category_id,
							category_title: cat.category_title,
							sub_categories: $scope.getReducedCategories(cat.sub_categories)
						});
					}
				});
				return reducedCategory;
			};

			$scope.startTestAutomation = function() {
				$rootScope.automationSelectionMode = false;
				storage.testAuto.set();
				// Redirect to home page as select element on guideRule is dependent on that
				GmCXt.redirect('#/all_guides');

				$rootScope.checkAppList().then(function() {
					var app = $rootScope.appList['app:' + GmCXt.activeAppId];
					var activeApp = {
						application_id: app.application_id,
						categories: []
					};
					$rootScope.categoryDataForAutomation = $scope.arrangeSubCategoryInTree($rootScope.categoryDataForAutomation);
					activeApp.categories = $scope.getReducedCategories($rootScope.categoryDataForAutomation);

					var m = {
						action: "mgPlayerJSTest_action:start_test_automation",
						data: activeApp
					};
					GmCXt.sendToParentWindow(m);

					$rootScope.categoryDataForAutomation = [];
					GmCXt.trackerV1.startMyBotTracking();
					$rootScope.cancelAutomationSelection();
				});
			};
		}

		function link(scope, iElm, iAttrs, controller) {}

		return {
			restrict: 'E',
			replace: false,
			templateUrl: 'directives/automation/automation_button_bar.html',
			controller: ['$scope', Controller],
			link: link
		};
	}
]);
var app = angular.module('guideme');

app.directive('breadcrums', ['$rootScope', 'storage', '$state',
	function($rootScope, storage, $state) {

		function Controller($scope) {

			$scope.findParentCategory = function(cid) {

				var category = $rootScope.getCategory(cid);

				if (category) {
					if (category.parent_id && category.parent_id !== "0") {
						$scope.findParentCategory(category.parent_id);
					}
					category = $rootScope.prepSingCatLang(category, $rootScope.language);
					var obj = {
						'id': category.category_id,
						'title': category.category_title,
						'type': 'category',
						'has_child': category.has_child
					};
					$scope.breadCrumbItems.push(obj);
				}
			};

			$scope.findTour = function(tid) {
				var t = $rootScope.currentTour;

				if (t) {
					var obj = {
						'id': t.tour_id || t.entity_code,
						'title': t.tour_title || t.entity_title,
						'categoryId': t.category_id || t.category_code,
						'type': 'tour'
					};
					$scope.breadCrumbItems.push(obj);
				}
			};

			$scope.goToBreadCrum = function(type, breadcrum) {
				if (type === 'category') {
					if ($rootScope.currentView === 'tour-view' &&
						breadcrum.has_child === '0') {

						var url = '#/category/' + breadcrum.id + '/tour/list';
						GmCXt.redirect(url);

					} else {
						$rootScope.showSpinner = true;
						var url = '#/category/' + breadcrum.id + '/list';
						GmCXt.redirect(url);
					}
				} else if (type === 'start') {
					GmCXt.redirect(breadcrum.route);
				}
			};

			function resovleBreadCrum() {
				if (angular.isDefined($state.params.keyword)) {
					var keyword = $state.params.keyword;

					var obj = {
						type: 'search',
						title: 'Search',
						route: '#/search/' + keyword
					};
					$scope.breadCrumbItems.push(obj);

				}
				$scope.showBreadCrumb = false;
				if ($scope.breadCrumbItems.length > 1) $scope.showBreadCrumb = true;

				storage.breadCrumbItems.set($scope.breadCrumbItems);
			}

			$scope.updateBreadCrumView = function() {
				if (angular.isDefined($state.params.tourId)) {
					var tourId = $state.params.tourId;
					$scope.findTour(tourId);

				}
				resovleBreadCrum();
			};
		}

		function link(scope) {

			if (!$rootScope.activeTab) $rootScope.goToAllGuides();

			scope.breadCrumbItems = [];

			var at = "";

			if ($rootScope.activeTab === $rootScope.labels.allGuides)
				at = $rootScope.labels.allGuides;
			else if ($rootScope.activeTab === 'Workflow')
				at = 'Workflow';

			if ($rootScope.activeTab === $rootScope.labels.currentPage) {
				var obj = {
					type: 'start',
					title: at,
					route: '#/home/currentpage'
				};
				scope.breadCrumbItems.push(obj);
				scope.updateBreadCrumView();
			} else {
				var obj = {};

				if ($rootScope.activeTab === $rootScope.labels.allGuides) {
					obj = {
						type: 'start',
						title: at,
						route: '#/all_guides'
					};
				}

				scope.breadCrumbItems.push(obj);

				if (angular.isDefined($state.params.categoryId)) {
					var categoryId = $state.params.categoryId;
					scope.findParentCategory(categoryId);
				}
				scope.updateBreadCrumView();
			}

		}

		return {
			restrict: 'E',
			replace: true,
			templateUrl: 'directives/breadcrumbs/breadcrums.html',
			link: link,
			controller: ['$scope', Controller]
		};
	}
]);
var app = angular.module('guideme');

app.directive('captcha', ['$rootScope', 'storage', '$state', '$timeout',
	'Message', 'AuthLogin', 'api',
	function($rootScope, storage, $state, $timeout, Message, AuthLogin, api) {

		function Controller($scope) {
			$rootScope.captchaValid = false;
			$scope.generate = function() {

				$scope.captchaInput  = "";

				$rootScope.captchaValid = false;

				var uniquechar = "";

				var randomchar = "0123456789ABCDEFGHJKLMNOPQRSTUVWXYZabdfghijkmnopqrstuvwxyz";

				for (var i = 0; i < 6; i++) {
					uniquechar += randomchar.charAt(
						Math.random() * randomchar.length);
				}
				$rootScope.captchaText = uniquechar;
			};

			$scope.validateCaptcha = function() {
				$rootScope.captchaValid = false;
				if ($rootScope.captchaText === $scope.captchaInput) {
					$rootScope.captchaValid = true;
				}
			};

			$scope.generate();
		}

		return {
			restrict: 'E',
			replace: true,
			templateUrl: 'directives/captcha/captcha.html',
			controller: ['$scope', Controller]
		};

	}
]);
var app = angular.module('guideme');

app.directive('categoryRow', ['$rootScope', 'storage', '$state',
	function($rootScope, storage, $state) {

		function Controller($scope) {}

		function link(scope, iElm, iAttrs, controller) {}

		return {
			restrict: 'E',
			replace: true,
			scope: {
				category: "="
			},
			templateUrl: 'directives/category_row/category_row.html',
			link: link,
			controller: ['$scope', Controller]
		};
	}
]);
var app = angular.module('guideme');

app.directive('clientSideSearch', ['$rootScope', function($rootScope) {
	function link($scope, element, attrs) {
		mg$("#search-text-input").on("click", function() {
			mg$(this).select();
		});

		$scope.clearSearch = function() {
			$scope.searchText = "";
		};
	}

	return {
		restrict: 'E',
		scope: {
			searchText: '='
		},
		templateUrl: 'directives/client_side_search/client_side_search.html',
		replace: true,
		transclude: true,
		link: link
	};
}]);

var app = angular.module('guideme');

app.directive('conversation', ['$rootScope', 'modal', '$state', 'storage', function($rootScope, modal, $state, storage) {
	function Ctrl($scope) {

		$scope.guideviewOnly = false;
		if ($scope.tour) {
			$scope.guideviewOnly = $rootScope.guideViewOnly($scope.tour);
		}

		$scope.goToAddConversation = function() {
			if ($rootScope.currentView === 'bot-conv-step') {
				storage.currentStep.set($scope.step);
			}
			
			$rootScope.openBotAnalyticsPortal();

			$rootScope.defaultSurvey = $rootScope.surveyQues();
			$rootScope.creationmode = true;
			if ($scope.isexit) {
				$rootScope.defaultSurvey[0].globalSurvey = true;
			}
		};

		function initBotConv() {
			$rootScope.showSpinner = true;
			var isExit = false;
			if ($scope.isexit) {
				isExit = true;
			}
			
			$rootScope.getConversations(isExit).then(function(res) {
				if (res && res.length > 0) {
					$scope.botConvList = res;
				} else {
					$scope.botConvList = [];
				}
				if (!GmCXt.isDefined($scope.conversation)) {
					$scope.conversation = {};
				}
				$scope.showRefresh = false;
				$rootScope.showSpinner = false;
				$rootScope.creationmode = false;
				
				if (!$scope.$$phase) {
					$scope.$apply();
				}
			});
		}

		initBotConv();

		$scope.refreshConversationData = function() {
			$scope.showRefresh = true;
			initBotConv();
		};

	}

	function link(scope, iElm, iAttrs, controller) {}

	return {
		restrict: 'E',
		scope: {
			conversation: '=',
			enableconversation: '=',
			hidecheckbox: '=',
			tour: '=',
			isexit: '=',
			creationmode: '=',
			selectconversation: '=',
			defaultsurvey: '=',
			step: '=',
			tourtype : '='
		},
		replace: true,
		templateUrl: '../../side_panel/src/directives/conversation/conversation.html',
		link: link,
		controller: ['$scope', Ctrl]
	};
}]);

var app = angular.module('guideme');

app.directive('downloadMediaFile', ['$rootScope', 'storage', 'TourService', 'AuthLogin',
	'$state', 'api', '$sce',
	function($rootScope, storage, TourService, AuthLogin, $state, api, $sce) {

		function Controller($scope) {

			$scope.tour.downloadOpts = $scope.tour.tour_settings.downloadGuideFiles;

			if (!$scope.tour.uuid) {
				$scope.tour.uuid = GmCXt.getUUID();
			}
			$scope.hideDownload = function(tour) {
				return ($rootScope.FT.isPlayer && $rootScope.appConfig.customer === 'humana') ||
					GmCXt.isFalseObj(tour.downloadOpts);
			};

			$scope.showDownload = function(tour) {
				return ($rootScope.isGuide(tour) || ($rootScope.isTooltip(tour) && $rootScope.createTooltipMediaFile) || $rootScope.isCADGuide(tour) || ($rootScope.isOnboarding(tour) && tour.tour_settings.tutorial_tour_type === "tutorial")) &&
					!$scope.hideDownload(tour) && $rootScope.mediafileCreation && !($rootScope.accessibility && $rootScope.FT.isPlayer);
			};

			$scope.downloadFile = function(type, url, tour) {

				var cb = function(assetUrl) {

					if (assetUrl) url = assetUrl;

					$scope.downloadFileEvent(type, url);
				};

				tempUrl = GmCXt.getUrlWithLang(url);

				url = url + $rootScope.getCdnSign();

				if (tour && !tour.tour_settings.translationEnable) {
					GmCXt.checkAssetUrl(url, url, cb);
				} else {
					GmCXt.checkAssetUrl(tempUrl, url, cb);
				}
			};

			$scope.downloadFileEvent = function(type, url) {
				var element = document.createElement('a');
				element.setAttribute('href', url);
				element.setAttribute('target', '_blank');

				element.style.display = 'none';
				document.body.appendChild(element);
				var event;

				//This is true only for IE,firefox
				if (document.createEvent) {
					// To create a mouse event , first we need to create an event and then initialize it.
					event = document.createEvent("MouseEvent");
					event.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
				} else {
					event = new MouseEvent('click', {
						'view': window,
						'bubbles': true,
						'cancelable': true
					});
				}

				element.addEventListener('click', function(e) {
					e.stopPropagation();
					document.body.removeChild(element);
					$scope.trackEvent(type);
				}, false);

				element.dispatchEvent(event);
			};

			$scope.trackEvent = function(type) {
				switch (type) {
					case 'tour_video_download':
						GmCXt.trackerV1.trackGuideDownload($scope.tour, 'video');
						break;
					case 'tour_pdf_download':
						GmCXt.trackerV1.trackGuideDownload($scope.tour, 'pdf');
						break;
					case 'tour_ppt_download':
						GmCXt.trackerV1.trackGuideDownload($scope.tour, 'ppt');
						break;
					case 'tour_gif_download':
						GmCXt.trackerV1.trackGuideDownload($scope.tour, 'gif');
						break;
					case 'tour_word_download':
						GmCXt.trackerV1.trackGuideDownload($scope.tour, 'docx');
						break;
					case 'tour_blog_download':
						GmCXt.trackerV1.trackGuideDownload($scope.tour, 'html');
						break;
					default:
						GmCXt.trackerV1.trackGuideDownload($scope.tour, 'txt');
						break;
				}
			};

			$scope.showDownloadTourActionDropdown = function($event) {
				$event.stopPropagation();
				$rootScope.isMediaFileDropdown = false;
				mg$('.detail-view-action-options-dropdown').slideUp(200);
				mg$('.step-action-menu-options-dropdown').slideUp(200);
				$rootScope.hideTourActionDropdown();
				$scope.closeMediaDownloadDropdown();

				$rootScope.isMediaFileDropdown = mg$($event.target).children('.detail-download-action-options-dropdown').is(':visible');
				if ($rootScope.isMediaFileDropdown) {
					mg$($event.target).children('.detail-download-action-options-dropdown').slideUp(200);
					$rootScope.isMediaFileDropdown = false;
				} else {
					mg$($event.target).children('.detail-download-action-options-dropdown').slideDown(200);
					$rootScope.isMediaFileDropdown = true;
					mg$($event.target).addClass("mgPlayerJSTest_dropdown-active");
					mg$($event.target).parents(".tour-item").addClass("mgPlayerJSTest_z-index mgPlayerJSTest_z-index-10");
				}
			};

			$scope.closeMediaDownloadDropdown = function() {
				mg$('.detail-download-action-options-dropdown').slideUp(200);
				mg$(".tour-item").removeClass("mgPlayerJSTest_z-index mgPlayerJSTest_z-index-10");
				mg$(".header-detail-view-tour-download-wrapper").removeClass("mgPlayerJSTest_dropdown-active");
			};

			$scope.showMediafile = function(t) {
				if (!t) return false;
				var showMediafile = true;
				if (GmCXt.branchStepExist(t)) {
					showMediafile = false;
				}
				return showMediafile;
			};
		}

		function link(scope, iElm, iAttrs, controller) {}

		return {
			restrict: 'E',
			replace: true,
			scope: {
				tour: "="
			},
			templateUrl: 'directives/download_media_file/download_media_file.html',
			link: link,
			controller: ['$scope', Controller]
		};
	}
]);
var app = angular.module('guideme');

app.directive('filterSortBy', ['$rootScope', 'storage', 'TourService', 'AuthLogin',
	'$state', 'api', '$sce',
	function($rootScope, storage, TourService, AuthLogin, $state, api, $sce) {

		function Controller($scope) {
			if ($rootScope.activeSortFilter !== '' && $rootScope.activeSortFilter !== 'modification_date' && $rootScope.descOrder !== undefined) {
				$rootScope.sortBy($rootScope.descOrder, $rootScope.sortType);
			}
		}

		function link(scope, iElm, iAttrs, controller) {

		}

		return {
			restrict: 'E',
			replace: true,
			templateUrl: 'directives/filter_sort_by/filter_sort_by.html',
			link: link,
			controller: ['$scope', Controller]
		};
	}
]);
var app = angular.module('guideme');

app.directive('footerPanel', ['$rootScope', 'storage', '$state', '$timeout',
	'Message', 'AuthLogin', 'api',
	function($rootScope, storage, $state, $timeout, Message, AuthLogin, api) {

		function Controller($scope) {
			$scope.feedBackSetting = GmCXt.getBrandingSetting();
			if ($scope.feedBackSetting.feedback_url && $scope.feedBackSetting.feedback_url.indexOf("http") === -1) {
				$scope.feedback_url = "https://" + $scope.feedBackSetting.feedback_url;
			} else {
				$scope.feedback_url = $scope.feedBackSetting.feedback_url;
			}
			
			// $scope.feedBackEmailSub = "MyGuide Feedback";

			$scope.enableSendFeedback = function() {
				if(GmCXt.getAppSetting('enable_send_feedback')) {
					return true;
				} else {
					return false;
				}
			};

			$scope.onSendFeedbackClick = function() {
				var message = {
					action: "mgPlayerJSTest_action:send_feedback",
					data: {
						feedback_email: $scope.feedBackSetting.feedback_email
					}
				};
				GmCXt.sendToParentWindow(message);
			};
		}

		return {
			restrict: 'E',
			replace: true,
			templateUrl: 'directives/footer/footer.html',
			controller: ['$scope', Controller]
		};

	}
]);

var app = angular.module('guideme');

app.directive('guideRowAction', ['$rootScope', 'storage', 'TourService', 'AuthLogin',
	'$state', 'api', '$sce',
	function($rootScope, storage, TourService, AuthLogin, $state, api, $sce) {

		function Controller($scope) {
			$scope.showReplay = $rootScope.isPlayedTour($scope.tour.tour_id) && ($rootScope.getNextStep($scope.tour) === false);
			$scope.showResume = ($rootScope.getNextStep($scope.tour) !== false) && ($rootScope.getDefaultPlayAction($scope.tour) === $rootScope.playGuideMe);
			$scope.branchStepExist = GmCXt.branchStepExist;
		}

		function link(scope, iElm, iAttrs, controller) {}

		return {
			restrict: 'E',
			replace: true,
			scope: {
				tour: "=",
			},
			templateUrl: 'directives/guide_row/guide_row_action.html',
			link: link,
			controller: ['$scope', Controller]
		};
	}
]);
var app = angular.module('guideme');

app.directive('guideRow', ['$rootScope', 'storage', 'TourService', 'AuthLogin',
	'$state', 'api', '$sce',
	function($rootScope, storage, TourService, AuthLogin, $state, api, $sce) {

		function Controller($scope) {
			$scope.step_des = "";
			$scope.showGuideBeacon = $scope.tour.tour_type.indexOf('beacon_tour');
			$scope.guideDefaultImg = GmCXt.getDefaultGuideIcon();
			$scope.defaultPlayAction = $rootScope.getDefaultPlayAction($scope.tour);
			$scope.showDraftGuide = $rootScope.FT.creatorApp && !$rootScope.isUserRole() && !$rootScope.exportEnabled && $scope.tour.parent_tour_id;
			$scope.focusTourId = 0;
			$scope.branchStepExist = GmCXt.branchStepExist;
			$scope.getInclude = function() {
				if ($rootScope.isDesktopApp()) {
					return 'icons/desktopGuide.html';
				}

				return 'icons/guide.html';
			};

			$scope.onTabFocusIn = function(t) {
				mg$('.mgPlayerJSTest_guide-row-action-wrapper').removeAttr('style');
				mg$('#mgPlayerJSTest_guide-row-action-wrapper_' + t.tour_id).attr('style', 'display:inline-flex;');
			};
			$scope.playDefaultModeOnClick = function(isPlayer) {
				if ($rootScope.isOnlySurveyGuide($scope.tour) ||
					$rootScope.isBotGuide($scope.tour)) {
					return '';
				}

				if ($rootScope.currentView === 'manage-keywords' || ($rootScope.isFalse($rootScope.getAppSetting('defaultPlayAction')) && isPlayer)) {
					return '';
				} else {
					$rootScope.play($scope.tour, false);
				}
			};

            $scope.getCircle = function(t, n, a, r, o) {
            	n = parseInt(n);
                a = parseInt(a);
                r = parseInt(r);
                var circle = "",
                    e = { className: t, totalDashes: n, dashesToDraw: a, dashesToOffsetBy: r, stroke: o },
                    radius = 19,
                    i = 3,
                    u = radius * Math.PI * 2;
                if (u - 10 * n < 1) {
                    i = u / n / 1.2;
                }
                var s = (u - i * n) / n;
                var c = (function(e, t, n, a) {
                    return e + t * (n + a);
                })(u / 4 - i / 2, r, i, s);
                var d = 1 !== n ? function(e, t, n, a) {
                    return new Array(e).fill(void 0).map(function(r, o) {
                        return "".concat(t, " ").concat(o === e - 1 ? n - e * (a + t) + a : a);
                    }).join(" ");
                }(a, s, u, i) : void 0;

		        return '<circle class="'+ t +'" cx="20" cy="20" r="19" fill="#F8F8FB" stroke="#ACADC1" stroke-width="1.4" stroke-dashoffset="' + c + '" stroke-dasharray="' + d + '"></circle>';
            };

            $scope.createSvgElmnt = function() {
            	var cir = "";

				if ($rootScope.FT.isPlayer) {
					if (!GmCXt.branchStepExist($scope.tour)) {
		            	var tourStepCount = parseInt($scope.tour.step_count);
		            	$scope.playedStepCount = $rootScope.playedSteps ? $rootScope.getPlayedStepCount($scope.tour) : 0;

		            	if (tourStepCount && !$scope.playedStepCount) {
		            		cir = $scope.getCircle('mgPlayerJSTest_dashes-green', tourStepCount, tourStepCount, tourStepCount, 1.4);

		            		if (tourStepCount === 1) {
		            			cir = '<circle class="mgPlayerJSTest_dashes-green" cx="20" cy="20" r="19" fill="#F8F8FB" stroke="#ACADC1" stroke-width="1.4"></circle>';
			            	}
		            	}

		            	if (tourStepCount && $scope.playedStepCount) {
		            		if ($scope.playedStepCount === tourStepCount) {
		    			      	cir = $scope.getCircle('mgPlayerJSTest_dashes-gray', $scope.playedStepCount, $scope.playedStepCount, $scope.playedStepCount, 1.4);

		            			if ($scope.playedStepCount === 1) {
						            cir = '<circle class="mgPlayerJSTest_dashes-gray" cx="20" cy="20" r="19" fill="#F8F8FB" stroke="#ACADC1" stroke-width="1.4"></circle>';
						        }
					        }

					        if ($scope.playedStepCount !== tourStepCount) {
					        	cir += $scope.getCircle('mgPlayerJSTest_dashes-green', tourStepCount, tourStepCount - $scope.playedStepCount, tourStepCount - $scope.playedStepCount, 1.4);
					        	cir += $scope.getCircle('mgPlayerJSTest_dashes-gray', tourStepCount, $scope.playedStepCount, tourStepCount, 1.4);
					        }
		            	}
		            } else {
			        	cir += '<circle cx="20" cy="20" r="19" fill="#F8F8FB" stroke="#ACADC1" stroke-width="1.4"></circle>';
			        }

	            	if (($scope.defaultPlayAction === $rootScope.playSlideshow ||
						($scope.tour.tour_settings.defaultPlayAction === 'Default' && $rootScope.getAppSetting('defaultPlayAction') === $rootScope.playSlideshow)) || $rootScope.isDesktopApp()) {
			        	return cir += '<path d="M25.1375 15.9427H23.1482C22.5161 15.359 21.3251 15 19.9999 15C18.6747 15 17.4837 15.359 16.8516 15.9427H14.8623C12.1812 15.9427 10 18.1985 10 20.9713C10 23.7441 12.1812 26 14.8623 26C17.5434 26 19.7246 23.7441 19.7246 20.9713C19.7246 20.9346 19.7242 20.8979 19.7235 20.8611H20.2764C20.2756 20.8979 20.2753 20.9346 20.2753 20.9713C20.2753 23.7441 22.4566 26 25.1377 26C27.8188 26 30 23.7441 30 20.9713C29.9999 18.1985 27.8186 15.9427 25.1375 15.9427ZM14.8623 23.9552C13.2715 23.9552 11.9772 22.6166 11.9772 20.9713C11.9772 19.3261 13.2715 17.9875 14.8623 17.9875C16.4532 17.9875 17.7475 19.3261 17.7475 20.9713C17.7475 22.6166 16.4532 23.9552 14.8623 23.9552ZM21.3065 17.89H18.6926C18.3824 17.89 18.1303 17.6286 18.1303 17.3077C18.1303 16.9869 18.3824 16.7254 18.6926 16.7254H21.3065C21.6173 16.7254 21.8695 16.9869 21.8695 17.3077C21.8695 17.6285 21.6173 17.89 21.3065 17.89ZM25.1375 23.9552C23.5466 23.9552 22.2523 22.6166 22.2523 20.9713C22.2523 19.3261 23.5466 17.9875 25.1375 17.9875C26.7282 17.9875 28.0226 19.3261 28.0226 20.9713C28.0226 22.6166 26.7283 23.9552 25.1375 23.9552Z" fill="#ACADC1" stroke-width="0" />';
			        }

			        if ($scope.defaultPlayAction === $rootScope.playAuto ||
						($scope.tour.tour_settings.defaultPlayAction === 'Default' && $rootScope.getAppSetting('defaultPlayAction') === $rootScope.playAuto) && !$rootScope.isDesktopApp()) {
			        	return cir += '<path d="M15.8441 24.4972C14.4834 24.4972 13.3803 25.652 13.3803 27.0765V29H14.6452V27.6678C14.6452 26.5993 15.4726 25.7332 16.4931 25.7332H23.5081C24.5287 25.7332 25.356 26.5993 25.356 27.6678V29H26.6211V27.0765C26.6211 25.652 25.518 24.4972 24.1573 24.4972H15.8441Z" fill="#ACADC1" stroke-width="0" />' +
                            '<path d="M12 18.8136C12 18.1065 12.5475 17.5333 13.2229 17.5333H13.6867V20.0938H13.2229C12.5475 20.0938 12 19.5206 12 18.8136Z" fill="#ACADC1" stroke-width="0" />' +
                            '<path d="M28 18.8136C28 18.1065 27.4525 17.5333 26.7771 17.5333H26.3133V20.0938H26.7771C27.4525 20.0938 28 19.5206 28 18.8136Z" fill="#ACADC1" stroke-width="0" />' +
                            '<path d="M19.7887 18.8136C19.7887 19.5206 19.2412 20.0938 18.5659 20.0938C17.8905 20.0938 17.343 19.5206 17.343 18.8136C17.343 18.1065 17.8905 17.5333 18.5659 17.5333C19.2412 17.5333 19.7887 18.1065 19.7887 18.8136Z" fill="#ACADC1" stroke-width="0" />' +
                            '<path d="M22.7414 18.8136C22.7414 19.5206 22.1939 20.0938 21.5186 20.0938C20.8432 20.0938 20.2957 19.5206 20.2957 18.8136C20.2957 18.1065 20.8432 17.5333 21.5186 17.5333C22.1939 17.5333 22.7414 18.1065 22.7414 18.8136Z" fill="#ACADC1" stroke-width="0" />' +
                            '<path d="M19.494 13.1606C19.494 13.0894 19.5492 13.0317 19.6172 13.0317H20.7202C20.7882 13.0317 20.8434 13.0894 20.8434 13.1606V15.6804H19.494V13.1606Z" fill="#ACADC1" stroke-width="0" />' +
                            '<path d="M18.4948 14.6198H17.279C15.9182 14.6198 14.8151 15.7746 14.8151 17.1992V20.5163C14.8151 21.9409 15.9182 23.0957 17.279 23.0957H22.7247C24.0855 23.0957 25.1886 21.9409 25.1886 20.5163V17.1992C25.1886 15.7746 24.0855 14.6198 22.7247 14.6198H21.8448V15.592H22.2026C23.2232 15.592 24.0505 16.4581 24.0505 17.5265V20.191C24.0505 21.2594 23.2232 22.1255 22.2026 22.1255H17.802C16.7815 22.1255 15.9541 21.2594 15.9541 20.191V17.5265C15.9541 16.4581 16.7815 15.592 17.802 15.592H18.4948V14.6198Z" fill="#ACADC1" stroke-width="0" />' +
                            '<path d="M20.8434 11.7063C20.8434 12.0964 20.5413 12.4127 20.1687 12.4127C19.7961 12.4127 19.494 12.0964 19.494 11.7063C19.494 11.3162 19.7961 11 20.1687 11C20.5413 11 20.8434 11.3162 20.8434 11.7063Z" fill="#ACADC1" stroke-width="0" />';
                    }

			        if (!$scope.branchStepExist($scope.tour) && ($scope.defaultPlayAction === $rootScope.playVLab ||
						($scope.tour.tour_settings.defaultPlayAction === 'Default' && $rootScope.getAppSetting('defaultPlayAction') === $rootScope.playVLab) && !$rootScope.isDesktopApp())) {
			        	return cir += '<path d="M13 15C13 15.3956 13.1173 15.7822 13.3371 16.1111C13.5568 16.44 13.8692 16.6964 14.2346 16.8478C14.6001 16.9991 15.0022 17.0387 15.3902 16.9616C15.7781 16.8844 16.1345 16.6939 16.4142 16.4142C16.6939 16.1345 16.8844 15.7781 16.9616 15.3902C17.0387 15.0022 16.9991 14.6001 16.8478 14.2346C16.6964 13.8692 16.44 13.5568 16.1111 13.3371C15.7822 13.1173 15.3956 13 15 13C14.4697 13.0004 13.9613 13.2113 13.5863 13.5863C13.2113 13.9613 13.0005 14.4697 13 15ZM16.1554 15C16.1554 15.2285 16.0876 15.4519 15.9607 15.6419C15.8337 15.8319 15.6533 15.98 15.4422 16.0675C15.231 16.1549 14.9987 16.1778 14.7746 16.1332C14.5505 16.0886 14.3446 15.9786 14.183 15.817C14.0214 15.6554 13.9114 15.4495 13.8668 15.2254C13.8222 15.0013 13.8451 14.769 13.9325 14.5578C14.02 14.3467 14.1681 14.1663 14.3581 14.0393C14.5481 13.9124 14.7715 13.8446 15 13.8446C15.3063 13.845 15.5999 13.9669 15.8165 14.1835C16.0331 14.4001 16.155 14.6937 16.1554 15Z" fill="#ACADC1" stroke-width="0.2" />' +
                            '<path d="M13 15C13 15.3956 13.1173 15.7822 13.3371 16.1111C13.5568 16.44 13.8692 16.6964 14.2346 16.8478C14.6001 16.9991 15.0022 17.0387 15.3902 16.9616C15.7781 16.8844 16.1345 16.6939 16.4142 16.4142C16.6939 16.1345 16.8844 15.7781 16.9616 15.3902C17.0387 15.0022 16.9991 14.6001 16.8478 14.2346C16.6964 13.8692 16.44 13.5568 16.1111 13.3371C15.7822 13.1173 15.3956 13 15 13C14.4697 13.0004 13.9613 13.2113 13.5863 13.5863C13.2113 13.9613 13.0005 14.4697 13 15ZM16.1554 15C16.1554 15.2285 16.0876 15.4519 15.9607 15.6419C15.8337 15.8319 15.6533 15.98 15.4422 16.0675C15.231 16.1549 14.9987 16.1778 14.7746 16.1332C14.5505 16.0886 14.3446 15.9786 14.183 15.817C14.0214 15.6554 13.9114 15.4495 13.8668 15.2254C13.8222 15.0013 13.8451 14.769 13.9325 14.5578C14.02 14.3467 14.1681 14.1663 14.3581 14.0393C14.5481 13.9124 14.7715 13.8446 15 13.8446C15.3063 13.845 15.5999 13.9669 15.8165 14.1835C16.0331 14.4001 16.155 14.6937 16.1554 15Z" stroke="#ACADC1" stroke-width="0.2" />' +
                            '<path d="M12.3543 21.6855C12.3779 21.9178 12.452 22.1407 12.5706 22.3356C12.6891 22.5306 12.8486 22.692 13.036 22.8066L13.5899 27.214C13.6125 27.4302 13.7076 27.6298 13.8568 27.7748C14.0061 27.9197 14.1992 27.9999 14.3994 28H15.3197C15.52 27.9998 15.7133 27.9195 15.8626 27.7742C16.012 27.6289 16.1069 27.4289 16.1292 27.2124L16.4019 24.5115L16.9444 20.0023L17.5522 20.5474C17.7246 20.7022 17.9405 20.7881 18.164 20.7909C18.3875 20.7937 18.6051 20.7132 18.7807 20.5628L20.6128 18.9923C20.805 18.8312 20.9364 18.5992 20.9821 18.3401C21.0279 18.081 20.985 17.8126 20.8613 17.5855C20.7892 17.4573 20.6929 17.3471 20.5788 17.2622C20.4648 17.1774 20.3354 17.1198 20.1993 17.0932C20.0633 17.0667 19.9236 17.0718 19.7895 17.1082C19.6553 17.1446 19.5298 17.2115 19.4212 17.3044L18.1885 18.3607L16.9444 17.2442C16.7693 17.087 16.5494 17.0007 16.3223 17.0002H15.7543C15.6912 16.9981 15.6285 17.0116 15.5709 17.0397C15.5133 17.0677 15.4624 17.1097 15.4219 17.1624L14.8538 17.9252L14.3 17.1701C14.2614 17.1169 14.2122 17.074 14.1561 17.0446C14.1 17.0151 14.0384 17 13.9762 17.0002H13.5402C13.3226 17.0003 13.1076 17.0505 12.9092 17.1475C12.7108 17.2444 12.5336 17.386 12.3891 17.5628C12.2446 17.7396 12.1362 17.9476 12.0709 18.1733C12.0057 18.3989 11.9851 18.637 12.0106 18.8719L12.3543 21.6855ZM12.9224 18.075C12.9994 17.9782 13.0947 17.9004 13.2018 17.8471C13.3088 17.7938 13.4252 17.7662 13.543 17.7662H13.8356L14.4718 18.6294C14.5185 18.6931 14.5778 18.7446 14.6453 18.7799C14.7128 18.8153 14.7867 18.8337 14.8617 18.8337C14.9366 18.8337 15.0105 18.8153 15.078 18.7799C15.1455 18.7446 15.2048 18.6931 15.2515 18.6294L15.8892 17.7646H16.3238C16.386 17.7642 16.4463 17.7878 16.4942 17.831L17.9641 19.1545C18.0273 19.2099 18.1059 19.2401 18.1871 19.2401C18.2682 19.2401 18.3469 19.2099 18.41 19.1545L19.8686 17.9052C19.9159 17.8647 19.9745 17.8429 20.0347 17.8434C20.081 17.8434 20.1264 17.8564 20.1667 17.881C20.207 17.9056 20.2408 17.941 20.2648 17.9839C20.2975 18.0499 20.307 18.1265 20.2916 18.1995C20.2762 18.2725 20.2369 18.3369 20.181 18.3808L18.3404 19.9559C18.2924 19.9966 18.2331 20.0187 18.1722 20.0187C18.1112 20.0187 18.052 19.9966 18.0038 19.9559L16.9018 18.9661C16.8529 18.9222 16.7941 18.8933 16.7315 18.8825C16.6689 18.8717 16.6048 18.8792 16.5458 18.9045C16.4869 18.9297 16.4352 18.9716 16.3961 19.0259C16.3571 19.0802 16.3321 19.1448 16.3238 19.2132L15.6918 24.4204L15.4248 27.1275C15.422 27.1553 15.4099 27.1811 15.3908 27.1999C15.3717 27.2187 15.3469 27.2292 15.3211 27.2294H14.3994C14.3724 27.2287 14.3467 27.2171 14.3273 27.1968C14.3078 27.1765 14.296 27.149 14.2943 27.1198L13.7134 22.4947C13.7046 22.4256 13.6786 22.3603 13.6383 22.3059C13.5981 22.2515 13.545 22.21 13.4848 22.1859C13.3697 22.1404 13.2687 22.0608 13.1934 21.9559C13.118 21.851 13.0714 21.7252 13.0587 21.5929L12.7093 18.7777C12.6962 18.6506 12.7083 18.5221 12.7448 18.4006C12.7813 18.2791 12.8414 18.1675 12.9209 18.0735L12.9224 18.075Z" fill="#ACADC1" stroke-width="0.2" />' +
                            '<path d="M12.3543 21.6855C12.3779 21.9178 12.452 22.1407 12.5706 22.3356C12.6891 22.5306 12.8486 22.692 13.036 22.8066L13.5899 27.214C13.6125 27.4302 13.7076 27.6298 13.8568 27.7748C14.0061 27.9197 14.1992 27.9999 14.3994 28H15.3197C15.52 27.9998 15.7133 27.9195 15.8626 27.7742C16.012 27.6289 16.1069 27.4289 16.1292 27.2124L16.4019 24.5115L16.9444 20.0023L17.5522 20.5474C17.7246 20.7022 17.9405 20.7881 18.164 20.7909C18.3875 20.7937 18.6051 20.7132 18.7807 20.5628L20.6128 18.9923C20.805 18.8312 20.9364 18.5992 20.9821 18.3401C21.0279 18.081 20.985 17.8126 20.8613 17.5855C20.7892 17.4573 20.6929 17.3471 20.5788 17.2622C20.4648 17.1774 20.3354 17.1198 20.1993 17.0932C20.0633 17.0667 19.9236 17.0718 19.7895 17.1082C19.6553 17.1446 19.5298 17.2115 19.4212 17.3044L18.1885 18.3607L16.9444 17.2442C16.7693 17.087 16.5494 17.0007 16.3223 17.0002H15.7543C15.6912 16.9981 15.6285 17.0116 15.5709 17.0397C15.5133 17.0677 15.4624 17.1097 15.4219 17.1624L14.8538 17.9252L14.3 17.1701C14.2614 17.1169 14.2122 17.074 14.1561 17.0446C14.1 17.0151 14.0384 17 13.9762 17.0002H13.5402C13.3226 17.0003 13.1076 17.0505 12.9092 17.1475C12.7108 17.2444 12.5336 17.386 12.3891 17.5628C12.2446 17.7396 12.1362 17.9476 12.0709 18.1733C12.0057 18.3989 11.9851 18.637 12.0106 18.8719L12.3543 21.6855ZM12.9224 18.075C12.9994 17.9782 13.0947 17.9004 13.2018 17.8471C13.3088 17.7938 13.4252 17.7662 13.543 17.7662H13.8356L14.4718 18.6294C14.5185 18.6931 14.5778 18.7446 14.6453 18.7799C14.7128 18.8153 14.7867 18.8337 14.8617 18.8337C14.9366 18.8337 15.0105 18.8153 15.078 18.7799C15.1455 18.7446 15.2048 18.6931 15.2515 18.6294L15.8892 17.7646H16.3238C16.386 17.7642 16.4463 17.7878 16.4942 17.831L17.9641 19.1545C18.0273 19.2099 18.1059 19.2401 18.1871 19.2401C18.2682 19.2401 18.3469 19.2099 18.41 19.1545L19.8686 17.9052C19.9159 17.8647 19.9745 17.8429 20.0347 17.8434C20.081 17.8434 20.1264 17.8564 20.1667 17.881C20.207 17.9056 20.2408 17.941 20.2648 17.9839C20.2975 18.0499 20.307 18.1265 20.2916 18.1995C20.2762 18.2725 20.2369 18.3369 20.181 18.3808L18.3404 19.9559C18.2924 19.9966 18.2331 20.0187 18.1722 20.0187C18.1112 20.0187 18.052 19.9966 18.0038 19.9559L16.9018 18.9661C16.8529 18.9222 16.7941 18.8933 16.7315 18.8825C16.6689 18.8717 16.6048 18.8792 16.5458 18.9045C16.4869 18.9297 16.4352 18.9716 16.3961 19.0259C16.3571 19.0802 16.3321 19.1448 16.3238 19.2132L15.6918 24.4204L15.4248 27.1275C15.422 27.1553 15.4099 27.1811 15.3908 27.1999C15.3717 27.2187 15.3469 27.2292 15.3211 27.2294H14.3994C14.3724 27.2287 14.3467 27.2171 14.3273 27.1968C14.3078 27.1765 14.296 27.149 14.2943 27.1198L13.7134 22.4947C13.7046 22.4256 13.6786 22.3603 13.6383 22.3059C13.5981 22.2515 13.545 22.21 13.4848 22.1859C13.3697 22.1404 13.2687 22.0608 13.1934 21.9559C13.118 21.851 13.0714 21.7252 13.0587 21.5929L12.7093 18.7777C12.6962 18.6506 12.7083 18.5221 12.7448 18.4006C12.7813 18.2791 12.8414 18.1675 12.9209 18.0735L12.9224 18.075Z" stroke="#ACADC1" stroke-width="0.2" />' +
                            '<path d="M18 14.3542V16.9043C18 16.9982 18.0395 17.0883 18.1098 17.1547C18.18 17.2212 18.2754 17.2585 18.3747 17.2585C18.4741 17.2585 18.5695 17.2212 18.6397 17.1547C18.71 17.0883 18.7495 16.9982 18.7495 16.9043V14.707H26.2565V21.6617H18.3747C18.2754 21.6617 18.18 21.699 18.1098 21.7654C18.0395 21.8319 18 21.9219 18 22.0159C18 22.1098 18.0395 22.1999 18.1098 22.2663C18.18 22.3328 18.2754 22.3701 18.3747 22.3701H22.1223V24.7275H19.7808C19.6812 24.7275 19.5834 24.7532 19.4981 24.8019C19.4127 24.8506 19.343 24.9204 19.2966 25.0038L18.4617 26.48C18.4387 26.5211 18.4244 26.5661 18.4198 26.6124C18.4152 26.6587 18.4202 26.7055 18.4347 26.7499C18.4492 26.7944 18.4728 26.8357 18.5042 26.8716C18.5355 26.9074 18.5741 26.9371 18.6176 26.9589C18.6611 26.9806 18.7087 26.9941 18.7577 26.9984C18.8067 27.0028 18.8562 26.998 18.9032 26.9844C18.9503 26.9707 18.994 26.9484 19.0319 26.9187C19.0698 26.889 19.1012 26.8526 19.1243 26.8115L19.8947 25.4373H25.1038L25.8742 26.8115C25.8973 26.8526 25.9287 26.889 25.9666 26.9187C26.0045 26.9484 26.0482 26.9707 26.0953 26.9844C26.1423 26.998 26.1918 27.0028 26.2408 26.9984C26.2898 26.9941 26.3374 26.9806 26.3809 26.9589C26.4244 26.9371 26.463 26.9074 26.4943 26.8716C26.5257 26.8357 26.5493 26.7944 26.5638 26.7499C26.5783 26.7055 26.5833 26.6587 26.5787 26.6124C26.5741 26.5661 26.5598 26.5211 26.5368 26.48L25.7094 25.0038C25.6629 24.9204 25.5933 24.8506 25.508 24.8019C25.4227 24.7532 25.3248 24.7275 25.2252 24.7275H22.8777V22.3701H26.6252C26.7246 22.3701 26.82 22.3328 26.8902 22.2663C26.9605 22.1999 27 22.1098 27 22.0159V14.3542C27 14.2602 26.9605 14.1702 26.8902 14.1037C26.82 14.0373 26.7246 14 26.6252 14H18.3747C18.2754 14 18.18 14.0373 18.1098 14.1037C18.0395 14.1702 18 14.2602 18 14.3542Z" fill="#ACADC1" stroke-width="0.2" />' +
                            '<path d="M18 14.3542V16.9043C18 16.9982 18.0395 17.0883 18.1098 17.1547C18.18 17.2212 18.2754 17.2585 18.3747 17.2585C18.4741 17.2585 18.5695 17.2212 18.6397 17.1547C18.71 17.0883 18.7495 16.9982 18.7495 16.9043V14.707H26.2565V21.6617H18.3747C18.2754 21.6617 18.18 21.699 18.1098 21.7654C18.0395 21.8319 18 21.9219 18 22.0159C18 22.1098 18.0395 22.1999 18.1098 22.2663C18.18 22.3328 18.2754 22.3701 18.3747 22.3701H22.1223V24.7275H19.7808C19.6812 24.7275 19.5834 24.7532 19.4981 24.8019C19.4127 24.8506 19.343 24.9204 19.2966 25.0038L18.4617 26.48C18.4387 26.5211 18.4244 26.5661 18.4198 26.6124C18.4152 26.6587 18.4202 26.7055 18.4347 26.7499C18.4492 26.7944 18.4728 26.8357 18.5042 26.8716C18.5355 26.9074 18.5741 26.9371 18.6176 26.9589C18.6611 26.9806 18.7087 26.9941 18.7577 26.9984C18.8067 27.0028 18.8562 26.998 18.9032 26.9844C18.9503 26.9707 18.994 26.9484 19.0319 26.9187C19.0698 26.889 19.1012 26.8526 19.1243 26.8115L19.8947 25.4373H25.1038L25.8742 26.8115C25.8973 26.8526 25.9287 26.889 25.9666 26.9187C26.0045 26.9484 26.0482 26.9707 26.0953 26.9844C26.1423 26.998 26.1918 27.0028 26.2408 26.9984C26.2898 26.9941 26.3374 26.9806 26.3809 26.9589C26.4244 26.9371 26.463 26.9074 26.4943 26.8716C26.5257 26.8357 26.5493 26.7944 26.5638 26.7499C26.5783 26.7055 26.5833 26.6587 26.5787 26.6124C26.5741 26.5661 26.5598 26.5211 26.5368 26.48L25.7094 25.0038C25.6629 24.9204 25.5933 24.8506 25.508 24.8019C25.4227 24.7532 25.3248 24.7275 25.2252 24.7275H22.8777V22.3701H26.6252C26.7246 22.3701 26.82 22.3328 26.8902 22.2663C26.9605 22.1999 27 22.1098 27 22.0159V14.3542C27 14.2602 26.9605 14.1702 26.8902 14.1037C26.82 14.0373 26.7246 14 26.6252 14H18.3747C18.2754 14 18.18 14.0373 18.1098 14.1037C18.0395 14.1702 18 14.2602 18 14.3542Z" stroke="#ACADC1" stroke-width="0.2" />';
                    }
		        } else {
		        	cir += '<circle cx="20" cy="20" r="19" fill="#F8F8FB" stroke="#ACADC1" stroke-width="1.4"></circle>';
		        }
        
		        cir += '<path d="M12 27.555C12 27.555 20.838 24.372 22.606 22.606C24.374 20.838 27.555 12 27.555 12C27.555 12 18.717 15.183 16.95 16.95C15.183 18.717 12 27.555 12 27.555ZM18.364 18.364L21.192 21.192C21.899 21.899 14.829 24.727 14.829 24.727C14.829 24.727 17.657 17.657 18.364 18.364Z" fill="#ACADC1" stroke="#ACADC1" stroke-width="0" />';
		        
		        return cir;
            };
		}

		function link(scope, iElm, iAttrs, controller) {
			scope.guideClick = function(originalTour) {
				var tour = JSON.parse(JSON.stringify(originalTour));
				if (tour.tour_type !== 'bot') {
					if ($rootScope.automationSelectionMode) {
						return;
					}

					if (tour.tour_type === "help_article") {
						window.open(tour.tour_settings.articleUrl, '_blank');
					} else {
						if ($rootScope.isMicroPlayer || $rootScope.isWBMicroPlayer) {
							$rootScope.play(tour);
						} else {
							$rootScope.trackSearchActivity(true);
							$rootScope.clearSearchInput();
							$rootScope.goToTourView(tour);
						}
					}
				}
			};

		}

		return {
			restrict: 'E',
			replace: true,
			scope: {
				tour: "=",
				category: "=",
				searchWord: "@",
				cView: "@"
			},
			templateUrl: 'directives/guide_row/guide_row.html',
			link: link,
			controller: ['$scope', Controller]
		};
	}
]);
var app = angular.module("guideme");

app.directive('appHeader', ['$rootScope', '$state', 'storage', 'AuthLogin', 'api',
	'modal', 'Message', 'logoutService', '$timeout',
	function($rootScope, $state, storage, AuthLogin, api, modal,
		Message, logoutService, $timeout) {

		function Controller($scope) {
			$scope.hasApps = true;
			$rootScope.selectedApp = '';
			$rootScope.analyticsPortalUrl = GmCXt.conf.analyticsPortalUrl;
			$rootScope.navBarVisible = false;
			$rootScope.lanDropDownVisible = false;
			$scope.appSetting = false;
			$rootScope.userPrefDropDownVisible = false;
			$rootScope.automationDropdown = false;
			$scope.envNotSelected = false;
			$scope.disableDomainFlag = false;

			setTimeout(function() {
				if (!GmCXt.isLXP())
					mg$("#mgPlayerJSTest_header-widget-icon").attr("src", $rootScope.getBasePath('common/img/logo-admin.png'));
			}, 100);

			$scope.setNavBarHeight = function() {
				if ($rootScope.navBarVisible) {
					mg$('.mgPlayerJSTest_player-nav-menu').css({
						'height': (window.innerHeight - mg$('.mgPlayerJSTest_manage-user-profile-wrapper').innerHeight() - mg$('.mgPlayerJSTest_logout-wrapper').innerHeight() - mg$('.mgPlayerJSTest_footer-wrapper').innerHeight() - 30)
					});
				}
			};

			mg$(window).on('resize', $scope.setNavBarHeight);

			$scope.watchAgain = function(tour_id, index) {
				$rootScope.notifications.snoozeTour.splice(index, 1);
				var m = {
					action: "mgPlayerJSTest_action:update_noti_watch_later",
					data: {
						tour_id: tour_id
					}
				};
				GmCXt.sendToParentWindow(m);

				if (!$rootScope.$$phase) $rootScope.$apply();
			};

			$scope.showAgain = function(tour_id, index) {

				storage.notifTours.get().then(function(st) {

					var viewGuideNot = {};
					if (GmCXt.isAnonymousUser()) {
						viewGuideNot = st.tourIdArray || {};
					} else {
						var user = GmCXt.createDeepCopy(GmCXt.user);
						viewGuideNot = user.settings.viewed_guide_notifications || {};
					}

					function onSuccess(response) {
						$rootScope.saveUser(GmCXt.user);
					}

					if (viewGuideNot[tour_id]) {

						if (!GmCXt.isAnonymousUser()) {
							delete viewGuideNot[tour_id];
							GmCXt.user.settings.viewed_guide_notifications = viewGuideNot;

							if (GmCXt.user.signin_user_email) {
								var data = {
									email_id: GmCXt.user.signin_user_email,
									settings: JSON.stringify(user.settings),
									organization_id: GmCXt.user.organization_id
								};

								GmCXt.setAnonymousUserPrefrence(data).then(onSuccess);
							} else {
								user.settings = JSON.stringify(user.settings);
								api.postUserProfile(user, onSuccess);
							} 
							
						} else {
							var m = {
								action: "mgPlayerJSTest_action:update_noti_do_not_show",
								data: {
									tour_id: tour_id
								}
							};
							GmCXt.sendToParentWindow(m);
						}
						$rootScope.notifications.doNotShowTour.splice(index, 1);

						if (!$rootScope.$$phase) $rootScope.$apply();
					}
				});
			};

			mg$('.ege-panel').append("<div class='ege-panel-overlay'></div>");

			$scope.pushNotificationDropdown = false;

			if (GmCXt.inPlayer) $scope.tourData = $scope.tour;

			$scope.showApplicationDropdown = function() {
				$scope.appSetting = false;

				$rootScope.applicationDropdown = !$rootScope.applicationDropdown;
				$rootScope.automationDropdown = false;

				mg$('.category-list').append('<div class="mgPlayerJSTest_category-list-overlay"></div>');
				mg$('.cards-container').append('<div class="mgPlayerJSTest_category-list-overlay"></div>');
				if ($rootScope.applicationDropdown !== true) {
					mg$('.mgPlayerJSTest_category-list-overlay').remove();
				}
			};

			$scope.showAutomationDropdown = function() {
				$rootScope.automationDropdown = !$rootScope.automationDropdown;
				$rootScope.applicationDropdown = false;
			};

			$scope.closeApplicationDropdown = function() {
				$rootScope.applicationDropdown = false;
				$rootScope.automationDropdown = false;
			};

			$scope.showDropDown = function() {
				$scope.closeApplicationDropdown();
				angular.element('.ege-login-logout-wrapper').slideToggle(200);
				if (angular.element('.ege-user-image-wrapper').hasClass('active')) {
					angular.element('.ege-user-image-wrapper').removeClass('active');
				} else {
					angular.element('.ege-user-image-wrapper').addClass('active');
				}
			};

			$scope.hideUserImageDropDown = function() {
				angular.element('.ege-login-logout-wrapper').slideUp(200);
				angular.element('.ege-user-image-wrapper').removeClass('active');
			};

			function menuActionLogin() {
				if (AuthLogin.isSession()) {
					$rootScope.goToCurrentPage();
				} else {

					// Show login page, if user is on OTP verify page
					if ($state.current && $state.current.name && ($state.current.name === 'signin') &&
						$scope.showOtpForm) {
						$scope.setLoginForm();
					} else {
						$rootScope.clearSession();
					}
				}
			}

			function getApp(apps, id) {
				for (var i = 0, j = apps.length; i < j; i++) {
					if (apps[i].application_id === id) {
						return apps[i];
					}
				}
				return null;
			}

			function startSelectionForAutomation() {
				$rootScope.automationSelectionMode = true;
				$rootScope.automationGuideSelectCount = 0;

				$rootScope.automationDropdown = false;

				// Reset to MyGuides page to show categories
				$scope.myGuides = false;
				$rootScope.myGuidesFilter = true;
				$scope.changeTab($rootScope.labels.allGuides);

			}

			$scope.performAction = function(action, step) {
				$scope.closeApplicationDropdown();
				$rootScope.guideViewFullScreen = false;
				$rootScope.toggleGuideViewFullScreen();
				switch (action) {
					case 'login':
						menuActionLogin();
						break;
					case 'startAuto':
						startSelectionForAutomation();
						break;
					case 'logout':
						$rootScope.logout('logout_button_click');
						break;
					case 'manageSurvey':
						$rootScope.openSurveyAnalyticsPortal();
						break;
					case 'DownloadAll':
						$scope.downloadTourAll();
						break;
					case 'browse':
						$scope.goToWeb();
						break;
					case 'taskStatus':
						$state.go('task-status');
						break;
					case 'changePassword':
						GmCXt.redirect('#/changepassword');
						break;
					case 'premiseConfig':
						GmCXt.redirect('#/premise');
						break;
					case 'analyticsPortal':
						$rootScope.openAppAnalyticsPortal();
						break;
					case 'adminPortal':
						$rootScope.openAdminPortal();
						break;
					case 'customizationCenter':
						$rootScope.openCustCenter();
						break;
					case 'insightsTracker':
						GmCXt.redirect('#/insights-tag/view');
						break;
					case 'findNReplace':
						$scope.goToFindNreplace(step);
						break;
				}
				$scope.hideUserImageDropDown();
			};

			$scope.hideStepActionDropdown = function() {
				mg$('.step-action-menu-options-dropdown').slideUp(200);
			};

			$scope.toggleCurrentPage = function() {
				if ($rootScope.currentView === 'home') {
					$scope.changeTab($rootScope.labels.allGuides);
				} else {
					$scope.changeTab($rootScope.labels.currentPage);
				}
			};

			function changeTabCurrentPage() {

				if (AuthLogin.isSession() || GmCXt.onPrem()) {
					$rootScope.clickedOnCurrentPageTab = true;
					$rootScope.goToCurrentPage();

				} else {
					$rootScope.clearSession();
				}
			}

			function changeTabAllGuides() {

				if (AuthLogin.isSession() || GmCXt.onPrem()) {
					$rootScope.showSpinner = true;
					$rootScope.goToAllGuides();
				} else {
					$rootScope.clearSession();
				}
			}

			$scope.changeTab = function(tabName) {
				$rootScope.applicationDropdown = false;
				$rootScope.updateActiveTab(tabName);

				if ((tabName === $rootScope.labels.currentPage) ||
					($rootScope.currentPageOnly &&
						tabName === $rootScope.labels.allGuides)) {

					changeTabCurrentPage();

				} else if (tabName === $rootScope.labels.allGuides) {
					changeTabAllGuides();
				}
			};

			$scope.changeSettingsTab = function(tabName) {

				if (tabName === 'video') {
					GmCXt.redirect('#/video_settings');
				} else if (tabName === 'stepIcon') {

					var m = {
						action: "mgPlayerJSTest_action:increase_side_panel_width"
					};
					GmCXt.sendToParentWindow(m);

					mg$('.ege-panel').css({
						'width': '500px',
						'transition': 'width 0s'
					});

					GmCXt.redirect('#/step_icon_settings');
				} else if (tabName === 'widgetIcon') {
					GmCXt.redirect('#/widget_icon_settings');
				} else if (tabName === 'labels') {
					GmCXt.redirect('#/labels_settings');
				}
				$rootScope.activeSettingTab = tabName;
			};

			$scope.hideStepDownloadActionDropdown = function() {
				mg$('.detail-download-action-options-dropdown').slideUp(200);
				$rootScope.isMediaFileDropdown = false;
				mg$(".tour-item").removeClass("mgPlayerJSTest_z-index mgPlayerJSTest_z-index-10");
				mg$(".header-detail-view-tour-download-wrapper").removeClass("mgPlayerJSTest_dropdown-active");
				if (!$rootScope.$$phase) $rootScope.$apply();
			};

			$scope.hideStepViewActionDropdown = function() {
				mg$('.detail-view-action-options-dropdown').slideUp(200);
			};

			$scope.showDetailViewActionDropdown = function($event) {
				$event.stopPropagation();
				$scope.hideStepDownloadActionDropdown();
				$scope.hideStepActionDropdown();
				$scope.hideUserImageDropDown();
				$rootScope.hideTourActionDropdown();

				var isDropdownVisible = mg$('#detail-view-options').is(':visible');
				mg$('.detail-view-action-options-dropdown').slideUp(200);
				if (!isDropdownVisible)
					mg$('#detail-view-options').slideDown(200);
			};

			$scope.changeLang = function(lang) {

				$rootScope.contextTours = {};

				if (!GmCXt.inPlayer) {
					$rootScope.resetCreatorData(true);
				}

				if (!lang) {
					lang = $rootScope.defaultLang;
					$rootScope.languages.filter(function(item) {
						if (item.language === $rootScope.browserLang) {
							lang = item;
						}
					});
					storage.userPrefLang.set(false);
				} else {
					storage.userPrefLang.set(lang.language);
				}

				storage.activeLang.set(lang.language);
				storage.activeVoice.set(lang.voice);
				$rootScope.selectedLanguage = lang.name;

				$rootScope.updateLabels();

				$rootScope.resetNotificationData();
				$rootScope.setNotifTours();

				$scope.refreshHeader();

				if (!$rootScope.$$phase) $rootScope.$apply();

				$rootScope.goToAllGuides();
			};

			$scope.stopScreenCast = function() {

				GmCXt.sendToParentWindow({
					action: 'mgPlayerJSTest_action:stop_screencast'
				});
			};

			$scope.goToWeb = function() {
				window.open($rootScope.webUrl, '_blank');
			};

			$scope.downloadTourAll = function() {

				var params = {
					user_id: $rootScope.appSettings.user_id
				};

				function cb(response) {
					$scope.$apply(function() {
						$rootScope.showPopup($rootScope.labels.downloadStartedMsg);
					});
				}
				api.getDownloadGuides(params, cb);
			};

			function updateBrandLogoInSettings() {

				if (GmCXt.appList) {
					var activeApp = GmCXt.appList['app:' + GmCXt.activeAppId];
				}

				if (activeApp && activeApp.settings) {
					GmCXt.appList['app:' + GmCXt.activeAppId].settings.logo = $scope.currBrandLogo;
					storage.appData.set(GmCXt.appList, true);
				}
			}

			$scope.refreshHeader = function(argument) {
				if (AuthLogin.isSession()) {

					$rootScope.checkAppList().then(function() {
						if (!GmCXt.isEmpty($rootScope.appList) && $rootScope.activeAppId) {
							$rootScope.selectedApp = $rootScope.appList['app:' + $rootScope.activeAppId].title;
						}
					});

					$scope.currBrandLogo = GmCXt.brandLogo();
					$scope.currBrandLogo = $rootScope.currBrandLogo ? $rootScope.currBrandLogo : $scope.currBrandLogo;
				}
			};

			$scope.hasApps = function() {
				return !GmCXt.isEmpty($rootScope.appList);
			};

			$scope.refreshHeader();

			var refreshEvent = function() {
				$scope.refreshHeader();
			};

			$rootScope.clearRefreshEvent = $rootScope.$on("refresh_header", refreshEvent);

			$scope.$on('$destroy', function() {
				if ($rootScope.clearRefreshEvent) $rootScope.clearRefreshEvent();
			});

			$rootScope.toggleNavBar = function($event) {
				if ($event) $event.stopPropagation();
				$rootScope.hideTourActionDropdown();
				$rootScope.hideActionDropdown();
				$rootScope.hideFiltersDropdown();
				$scope.hideStepDownloadActionDropdown();
				$scope.hideStepActionDropdown();
				$rootScope.closePushNotifDropdown();
				$rootScope.hideSurveyDropdown();
				$rootScope.addPanelOverlay();
				$rootScope.resetMenuDropdowns();
				$rootScope.navBarVisible = mg$('#mgPlayerJSTest_side-navbar-container').is(':visible');
				$scope.closeApplicationDropdown();

				if ($rootScope.navBarVisible) {
					$rootScope.navBarVisible = false;
					$rootScope.hidePanelOverlay();
				} else {
					$rootScope.navBarVisible = true;

					$rootScope.showPanelOverlay();
					GmCXt.timeout(function() {
						$scope.setNavBarHeight();
					}, 500);
				}
			};

			$rootScope.langDropdown = function($event) {
				$event.stopPropagation();
				if ($rootScope.lanDropDownVisible) {
					$rootScope.hideLanguDropdown($event);
				} else {
					$rootScope.lanDropDownVisible = true;
					mg$('.mgPlayerJSTest_lang-dropdown-wrapper').slideDown(200);
				}
				$rootScope.hideUserPrefDropdown($event);
				if (!$rootScope.$$phase) $rootScope.$apply();
			};

			$scope.resetEnvDropdownArrow = function() {
				$scope.prod = true;
				$scope.stage = true;
				$scope.qa = true;
			};

			$scope.resetEnvDropdownArrow();

			$rootScope.appEnvDropdown = function($event, type) {
				$event.stopPropagation();
				$scope[type] = false;

				if (!mg$('#mgPlayerJSTest_app-domain-list-view-' + type).is(':visible')) {
					mg$('#mgPlayerJSTest_app-domain-list-view-' + type).slideDown(200);
					$scope[type] = true;
				} else {
					mg$('#mgPlayerJSTest_app-domain-list-view-' + type).slideUp(200);
				}
			};

			$rootScope.hideLanguDropdown = function($event) {
				$event.stopPropagation();
				$rootScope.lanDropDownVisible = false;
				mg$('.mgPlayerJSTest_lang-dropdown-wrapper').slideUp(100);
				if (!$rootScope.$$phase) $rootScope.$apply();
			};

			$rootScope.resetMenuDropdowns = function() {
				$rootScope.userPrefDropDownVisible = false;
				$rootScope.lanDropDownVisible = false;
			};

			$rootScope.openChatBot = function() {
				location.replace('#/chatbot');
			};

			if ($rootScope.isUserLoggedIn()) {
				var activeView = $rootScope.activeView;
				if (activeView === "/chatbot") {
					$rootScope.toggleChaticon(0);
				} else {
					$rootScope.toggleChaticon(1);
					$rootScope.onMinMaxChaticon();
				}
			}

			if (!GmCXt.onPrem()) {
				$scope.userSetting = (GmCXt.user && GmCXt.user.settings) || {};
			}

			if (GmCXt.isAnonymousUser()) {
				storage.edcastTermsAccepted.get().then(function(res) {
					$scope.userSetting.edcastTermsAccepted = res;
				});
			}

			$scope.closePopup = function() {
				$scope.userSetting.edcastTermsAccepted = true;
				GmCXt.user.settings.edcastTermsAccepted = true;

				var user = GmCXt.createDeepCopy(GmCXt.user);
				user.settings = JSON.stringify($scope.userSetting);

				function onSuccess(response) {
					$rootScope.saveUser(GmCXt.user);
				}

				if (GmCXt.isAnonymousUser()) {
					storage.edcastTermsAccepted.set(true);
				} else {
					if (GmCXt.user.signin_user_email) {
						var data = {
							email_id: GmCXt.user.signin_user_email,
							settings: user.settings,
							organization_id: GmCXt.user.organization_id
						};

						GmCXt.setAnonymousUserPrefrence(data).then(onSuccess);
					} else {
						api.postUserProfile(user, onSuccess);
					}	
				}
			};

			$scope.showPushNotifDropdown = function() {
				var appIconPos = mg$('.mgPlayerJSTest_bell-btn-wrapper').position().left;
				var appIconWidth = mg$('.mgPlayerJSTest_bell-btn-wrapper').innerWidth();

				if ($scope.pushNotificationDropdown) {
					mg$('.mgPlayerJSTest_bell-btn-wrapper').removeClass('mgPlayerJSTest_z-index mgPlayerJSTest_z-index-max');
				} else {
					mg$('.mgPlayerJSTest_bell-btn-wrapper').addClass('mgPlayerJSTest_z-index mgPlayerJSTest_z-index-max');
				}
				$scope.pushNotificationDropdown = !$scope.pushNotificationDropdown;

				mg$('.mgPlayerJSTest_push-notification-info-wrapper').css('left', -(appIconPos - (appIconWidth / 2)));
				mg$('.mgPlayerJSTest_push-dropdown-pointer').css('left', (appIconPos - (appIconWidth / 4)));

				if (window.matchMedia("(max-width: 480px)").matches && !GmCXt.isMiniPlayer) {
					mg$('.mgPlayerJSTest_push-notification-info-wrapper').css('left', '-175px');
					mg$('.mgPlayerJSTest_push-dropdown-pointer').css('left', '181px');
				}
			};

			$rootScope.closePushNotifDropdown = function() {
				$scope.pushNotificationDropdown = false;
				mg$('.mgPlayerJSTest_bell-btn-wrapper').removeClass('mgPlayerJSTest_z-index mgPlayerJSTest_z-index-max');
			};

			$scope.openAppSettings = function(ev, applicationId, settingView) {
				ev.stopPropagation();
				var params = {
					appId: applicationId,
					settView: settingView
				};
				$scope.closeApplicationDropdown();
				$state.go('app-settings', params);
			};

			$scope.backToApps = function() {
				$scope.appSetting = false;
			};

			$rootScope.hideUserPrefDropdown = function($event) {
				$event.stopPropagation();
				$rootScope.userPrefDropDownVisible = false;
				mg$('.mgPlayerJSTest_setting-dropdown-userPref').slideUp(100);
				if (!$rootScope.$$phase) $rootScope.$apply();
			};

			$scope.setAccessibility = function() {
				$rootScope.setAccessibility($rootScope.accessibility);
			};

			$scope.setDefaultPushList = function() {
				$scope.dShowAgain = false;
				$scope.wLater = false;
			};

			$scope.notificationList = function(tabName) {
				$scope.setDefaultPushList();
				$scope[tabName] = true;
			};

			$scope.getAppImage = function(app) {
				var imgUrl = app.image_url + $rootScope.getCdnSign();

				return imgUrl;
			};

			$scope.showLangTransDD = function() {
				if ($rootScope.enableTranslation && $rootScope.languages.length > 1) {
					return true;
				} else {
					return false;
				}
			};

			$scope.notificationList('wLater');

			function checkIfEnvSelected() {

				var selected = false;
				for (var key in $scope.appEnv) {
					if ($scope.appEnv[key].checked) {
						selected = true;
					}
				}

				$scope.envNotSelected = !selected;
			}

			$scope.toggleDomain = function(env) {

				var envDomains = $scope.getAppDomains(env);
				if ($scope.appEnv[env].checked) {

					if (!envDomains.length) {
						$scope.addNewDomain(env);
					}

				} else if (envDomains.length === 1 && !envDomains[0].url) {
					$scope.removeDomain(envDomains[0]);
				}

				checkIfEnvSelected();
			};

			$scope.openTaskList = function() {
				GmCXt.redirect("#/taskList");
			};

			$scope.showAddCatDropDown = function(categoryId, type, $event) {
				$event.stopPropagation();
				$scope.hideUserImageDropDown();
				$rootScope.hideTourActionDropdown();

				mg$('.category-action-menu-active').removeClass('category-action-menu-active');
				if (type === 'allGuide') {
					var isDropdownVisible = mg$('#category-add-dropdown-' + categoryId).is(':visible');
					mg$('.category-action-dropdown').slideUp(200);
					if (!isDropdownVisible) {
						mg$($event.target).parents('.category-list-item').addClass('category-action-menu-active');
						mg$('#category-add-dropdown-' + categoryId).slideDown(200);
					}
				} else if (type === 'add') {
					var isDropdownVisible = mg$('#category-add-dropdown-' + categoryId).is(':visible');
					mg$('.category-action-dropdown').slideUp(200);
					if (!isDropdownVisible) {
						mg$($event.target).parents('.category-list-item').addClass('category-action-menu-active');
						mg$('#category-add-dropdown-' + categoryId).slideDown(200);
					}

					$timeout(function() {
						if (!mg$('#category-add-icon-' + categoryId).length)
							return;

						var editIconPosition = mg$('#category-add-icon-' + categoryId)[0].getBoundingClientRect();
						var dropdownPosition = mg$('#category-add-dropdown-' + categoryId)[0].getBoundingClientRect();

						var footerHeight = (mg$('#footer').length) ? mg$('#footer').innerHeight() : 0;
						var listPageHeaderHeight = (mg$('.list-page-header').length) ? mg$('.list-page-header').innerHeight() : 0;
						var headerHeight = (mg$('#ege-header').length) ? mg$('#ege-header').innerHeight() : 0;

						var newScrollTop = editIconPosition.top - footerHeight - listPageHeaderHeight - headerHeight - 20 + mg$('.category-list').scrollTop();
						var dropdownoffset = dropdownPosition.top + dropdownPosition.height - footerHeight - listPageHeaderHeight - headerHeight - 15;

						if (dropdownoffset > mg$('.category-list').height()) {
							mg$('.category-list').animate({
								scrollTop: newScrollTop
							}, 10);
						}
					}, 300);
				} else {
					var isDropdownVisible = mg$('#category-edit-dropdown-' + categoryId).is(':visible');
					mg$('.category-action-dropdown').slideUp(200);
					if (!isDropdownVisible) {
						mg$($event.target).parents('.category-list-item').addClass('category-action-menu-active');
						mg$('#category-edit-dropdown-' + categoryId).slideDown(200);
					}

					$timeout(function() {
						if (!mg$('#category-pencil-icon-' + categoryId).length)
							return;

						var editIconPosition = mg$('#category-pencil-icon-' + categoryId)[0].getBoundingClientRect();
						var dropdownPosition = mg$('#category-edit-dropdown-' + categoryId)[0].getBoundingClientRect();

						var footerHeight = (mg$('#footer').length) ? mg$('#footer').innerHeight() : 0;
						var listPageHeaderHeight = (mg$('.list-page-header').length) ? mg$('.list-page-header').innerHeight() : 0;
						var headerHeight = (mg$('#ege-header').length) ? mg$('#ege-header').innerHeight() : 0;

						var newScrollTop = editIconPosition.top - footerHeight - listPageHeaderHeight - headerHeight - 20 + mg$('.category-list').scrollTop();
						var dropdownoffset = dropdownPosition.top + dropdownPosition.height - footerHeight - listPageHeaderHeight - headerHeight - 15;

						if (dropdownoffset > mg$('.category-list').height()) {
							mg$('.category-list').animate({
								scrollTop: newScrollTop
							}, 10);
						}
					}, 300);
				}
			};

			$rootScope.resetSortFilter();

			$scope.goToFindNreplace = function(step) {
				var state = $state.go('findNReplace');

				if (step && step.step_settings && step.step_settings.element) {
					state = $state.go('findNReplace', {
						auto_jquery: step.step_settings.element.criteria.auto_jquery,
						jquery_selector: step.step_settings.element.criteria.jquery_selector
					});
				}

                return state;
            };

            $scope.getHelpCenterUrl = function() {
            	var url = GmCXt.addHttpIfMissing(GmCXt.getOrgSettings().helpUrl);
            	return url ? url : GmCXt.model.organization.settings._obj.helpUrl._default;
            };
		}

		function link(scope, element, attrs, Controller) {}

		return {
			restrict: 'E',
			replace: true,
			templateUrl: "directives/header/header.html",
			link: link,
			controller: ['$scope', Controller]
		};
	}
]);

var app = angular.module('guideme');

app.directive('matchingAlgorithm', ['$rootScope', '$timeout', GmCXt.matchingAlgorithmCtrl ]);

var app = angular.module('guideme');

app.directive('searchBox', ['$rootScope', '$timeout', function($rootScope, $timeout) {

	function link($scope, iElm, iAttrs, controller) {

		var timer = null;
		$rootScope.backBtn = false;
		$rootScope.search = "";
		$rootScope.searchKeyword = "";
		$scope.searchPlaceholder = $rootScope.labels.inputPlaceHolderSearch;
		if ($rootScope.activeView.indexOf("category") !== -1 && $rootScope.activeView.indexOf("tour") !== -1) {
			$scope.searchPlaceholder = $rootScope.labels.searchInFolder;
		}


		mg$('#search-text-input').keyup(function(e) {
			$timeout.cancel(timer);
			if (!$rootScope.showSpinner) {
				var searchVal = mg$('#search-text-input').val().trim();
				if (searchVal.length > 1) {
					timer = $timeout(function() {
						$rootScope.searchKeyword = mg$('#search-text-input').val().trim();
						var searchUrl = '#/search/';
						GmCXt.redirect(searchUrl);
					}, 500);
				} else {
					var pageScope = angular.element('#search-inner-wrapper').scope();
					if (pageScope) {
						pageScope.clearSearch();
					}
				}
			} else {
				mg$('#search-text-input').val('');
			}
		});

		var isBackBtn = mg$('.mgPlayerJSTest_back-btn-wrapper').is(':visible');

		if (isBackBtn && $rootScope.FT.isPlayer) {
			$rootScope.backBtn = true;
		} else {
			$rootScope.backBtn = false;
		}

	}

	return {
		restrict: 'E',
		templateUrl: 'directives/search_box/search_box.html',
		replace: true,
		link: link
	};
}]);
var app = angular.module('guideme');

app.directive('sentiment', ['$rootScope', 'modal', '$state', 'storage', function($rootScope, modal, $state, storage) {
	function Ctrl($scope) {

		$scope.guideviewOnly = false;
		if ($scope.tour) {
			$scope.guideviewOnly = $rootScope.disableTourSettingEdit($scope.tour);
		}

		$scope.goToAddSentiment = function() {
			if ($rootScope.currentView === 'survey-step') {
				storage.currentStep.set($scope.step);
			}
			
			$rootScope.openSurveyAnalyticsPortal();

			$rootScope.defaultSurvey = $rootScope.surveyQues();
			$rootScope.creationmode = true;
			if ($scope.isexit) {
				$rootScope.defaultSurvey[0].globalSurvey = true;
			}
		};

		function initSentiment() {
			$rootScope.showSpinner = true;
			var isExit = false;
			if ($scope.isexit) {
				isExit = true;
			}
			if (GmCXt.isMany($rootScope.allSurvey) && GmCXt.isFalse($scope.showRefresh) &&
				$rootScope.currentView === 'survey-settings') {
				$scope.sentimentList = $rootScope.allSurvey;
				if ($scope.isexit) {
					$scope.sentimentList = $rootScope.allSurvey.filter(function(d) {
						return d.isGlobal;
					});
				}
				$rootScope.showSpinner = false;
				return false;
			}
			$rootScope.getSentiments(isExit).then(function(res) {
				if (res && res.length > 0) {
					$scope.sentimentList = res;
				} else {
					$scope.sentimentList = [];
				}
				if (!GmCXt.isDefined($scope.sentiment)) {
					$scope.sentiment = {};
				}
				$scope.showRefresh = false;
				$rootScope.showSpinner = false;
				$rootScope.creationmode = false;
				if ($rootScope.currentView === 'survey-settings') {
					$rootScope.defaultSurvey = $rootScope.surveyQues();
				}
				if (!$scope.$$phase) {
					$scope.$apply();
				}
			});
		}

		initSentiment();

		$scope.refreshSentimentData = function() {
			$scope.showRefresh = true;
			initSentiment();
		};

	}

	function link(scope, iElm, iAttrs, controller) {}

	return {
		restrict: 'E',
		scope: {
			sentiment: '=',
			enablesentiment: '=',
			hidecheckbox: '=',
			tour: '=',
			isexit: '=',
			creationmode: '=',
			selectsentiment: '=',
			defaultsurvey: '=',
			step: '=',
			tourtype : '='
		},
		replace: true,
		templateUrl: '../../side_panel/src/directives/sentiments/sentiment.html',
		link: link,
		controller: ['$scope', Ctrl]
	};
}]);

var app = angular.module('guideme');

app.directive('testmeWidget', ['$rootScope', 'storage', 'TourService',
	'AuthLogin', '$state', '$timeout',
	function($rootScope, storage, TourService, AuthLogin, $state, $timeout) {

		function Controller($scope) {
			var appSetting = GmCXt.appList['app:' + GmCXt.activeAppId].settings;

			if (appSetting && appSetting.userLabels && appSetting.userLabels.testMe) {
				$scope.testMe = appSetting.userLabels.testMe;
			} else {
				$scope.testMe = $rootScope.labels.testMe;
			}

			$scope.errorSrc = GmCXt.conf.staticContentPath + "technology.jpg";
			$scope.showWidget = false;

			var showTestMeWidgetFun = function(event, tour) {

				$timeout(function() {
					mg$(".popup-test-me-close").focus();
				}, 500);

				TourService.getSteps(tour, $rootScope.isUserLoggedIn()).then(function(steps) {

					if (steps.length) {

						tour.steps = steps;

						var newSteps = steps.filter(function(el) {
							return el.step_type === "inline";
						});

						if (newSteps.length) {
							$scope.$apply(function() {
								$scope.showWidget = true;
								$scope.tourData = newSteps;
								$scope.tour_title = tour.tour_title;
								$scope.stepCount = newSteps.length;
								$scope.data = {};
								$scope.data.tour = tour;
								$scope.tourData[0].step_title = mg$('<span />').html($scope.tourData[0].step_title).text();
								$scope.tourData[$scope.stepCount - 1].step_title = mg$('<span />').html($scope.tourData[$scope.stepCount - 1].step_title).text();
							});

							var m1 = {
								action: "mgPlayerJSTest_action:increase_side_panel_width"
							};

							GmCXt.sendToParentWindow(m1);

							var m2 = {
								action: "mgPlayerJSTest_action:close_notification_popup"
							};
							GmCXt.sendToParentWindow(m2);

							mg$('.ege-panel').css({
								'width': '500px',
								'transition': 'width 0s'
							});

							if (GmCXt.isMicroPlayer()) {
								mg$('.ege-panel').css({
									'right': '-9550px'
								});

							} else {
								mg$('.ege-panel').css({
									'right': '0px'
								});

								mg$('.ege-panel-overlay').css({
									'display': 'block'
								});
							}

						} else {
							$rootScope.showPopup($rootScope.labels.noInappStepInGuide);
						}
					}
				});
			};

			var destroyShowTestMeWidgetFun = $rootScope.$on("showTestMeWidget", showTestMeWidgetFun);

			$scope.$on('$destroy', destroyShowTestMeWidgetFun);

			$scope.resetMplayerPos = function() {
				if (GmCXt.isMicroPlayer()) {
					mg$('.ege-panel').removeAttr("style");

					var msg = {
						action: "mgPlayerJSTest_action:reset_micro_player_position"
					};

					GmCXt.sendToParentWindow(msg);
				}
			};

			$scope.closeTestMe = function() {
				$rootScope.closeAppPopup();
				$scope.showWidget = false;
				$scope.resetMplayerPos();
			};

			$scope.startTest = function(tourData) {
				$rootScope.closeAppPopup();
				$scope.showWidget = false;
				$scope.resetMplayerPos();

				var m = {
					action: "mgPlayerJSTest_action:start_tool;testMe",
					data: tourData
				};
				GmCXt.sendToParentWindow(m);
			};
		}

		function link(scope, iElm, iAttrs, controller) {}

		return {
			restrict: 'E',
			replace: true,
			link: link,
			templateUrl: 'directives/testme_widget/testme_widget.html',
			controller: ['$scope', Controller]
		};
	}
]);
var app = angular.module('guideme');

app.directive('tourFilter', ['$rootScope', 'storage', 'api', function($rootScope, storage, api) {

	function link($scope, iElm, iAttrs, controller) {
		$scope.currentView = $rootScope.currentView;
		$scope.activeFilter = "";
		$scope.sortByProperty = $rootScope.labels.latest;
	
		if ($scope.currentView === 'filter-list') {
			$scope.myGuides = !$scope.myGuides ? true : false;
			$rootScope.myGuidesFilter = !$scope.myGuides ? false : true;
		}

		if ($scope.currentView !== 'search-page') {
			$scope.myGuides = $rootScope.myGuidesFilter ? true : false;
		}

		$scope.toggleMyGuides = function() {
			$scope.myGuides = !$scope.myGuides ? true : false;
			$rootScope.myGuidesFilter = !$scope.myGuides ? false : true;
			$scope.applyFilter();
		};

		$scope.applyFilter = function() {
			if ($rootScope.myGuidesFilter) {

				if ($rootScope.currentView === 'filter-list') {
					$rootScope.showSpinner = true;
					var pageScope = angular.element('#tour-list-page-container').scope();
					if (pageScope) {
						pageScope.refreshView(0);
					}
				} else {
					$rootScope.showSpinner = true;
					storage.activeView.set("/tour/list");
					var url = '#/tour/list';
					GmCXt.redirect(url);
				}
			} else if ($rootScope.searchKeyword) {
				GmCXt.redirect('#/search/' + $rootScope.searchKeyword);
			} else {
				$rootScope.goToAllGuides();
			}
		};

		$scope.resetActiveFilter = function() {
			$scope.activeFilter = "";
		};

		$scope.showGuidesFiltersDropdown = function(filter, $event) {
			$scope.activeFilter = filter;
			$rootScope.hideFiltersDropdown();
			$scope.resetActiveFilter();

			var dropdownEl = mg$('.mgPlayerJSTest_all-guides-search-filters-dropdown-' + filter);

			if (dropdownEl && !dropdownEl.is(':visible')) {
				dropdownEl.slideDown(200);
			}
		};

		/* new filter*/
		if ($scope.currentView === 'search-page' && !$rootScope.isUserRole() && GmCXt.FT.quickFilters) {
			$scope.limit = 100;
			$scope.offset = 0;

			if ($rootScope.myGuidesFilter) $scope.currentUser = angular.copy($rootScope.user);
			else if ($rootScope.currentUserFilter) $scope.currentUser = $rootScope.currentUserFilter;
			else $scope.currentUser = $scope.allUser;

			if ($rootScope.filterByPublishedGuides) $scope.filterByPublishedGuides = $rootScope.filterByPublishedGuides;
			else $scope.filterByPublishedGuides = $rootScope.labels.all;

			if ($rootScope.currentAssigneeFilter) $scope.currentAssignee = $rootScope.currentAssigneeFilter;
			else $scope.currentAssignee = $scope.allUser;

			$scope.allUser = {
				user_id: 0,
				first_name: $rootScope.labels.all
			};

			if (!$scope.$$phase) {
				$scope.$apply();
			}
			$scope.getUserList = function() {
				function cb(userList) {
					//var userList = response.data.data.users;
					if (userList.length > 0) {
						$scope.userList = userList;

						if (!$rootScope.currentUserFilter) $scope.$apply(function() {
							$scope.currentUser = $scope.allUser;
						});

						if (!$rootScope.currentAssigneeFilter) $scope.$apply(function() {
							$scope.currentAssignee = $scope.allUser;
						});
					}
				}
				$rootScope.getUserList(cb);
			};
			$scope.getUserList();
		}

		$scope.filterByUser = function(user) {
			$scope.currentUser = user;
			$rootScope.currentUserFilter = user;
			$scope.applyFilterAdvanced();
		};

		$scope.filterByAssignee = function(user) {
			$scope.currentAssignee = user;
			$rootScope.currentAssigneeFilter = user;
			$scope.applyFilterAdvanced();
		};

		$scope.publishedGuidesAdvance = function() {
			$scope.filterByPublishedGuides = $rootScope.labels.published;
			$rootScope.filterByPublishedGuides = $rootScope.labels.published;
			$scope.applyFilterAdvanced();
		};

		$scope.unpublishedGuides = function() {
			$rootScope.filterByPublishedGuides = $rootScope.labels.unpublished;
			$scope.filterByPublishedGuides = $rootScope.labels.unpublished;
			$scope.applyFilterAdvanced();
		};

		$scope.allstatus = function() {
			$rootScope.filterByPublishedGuides = $rootScope.labels.all;
			$scope.filterByPublishedGuides = $rootScope.labels.all;
			$scope.applyFilterAdvanced();
		};

		$scope.sortByLatest = function() {
			$scope.sortByProperty = $rootScope.labels.latest;
			$rootScope.sortByProperty = $rootScope.labels.latest;
			$scope.applyFilterAdvanced();
		};

		$scope.sortByName = function() {
			$scope.sortByProperty = $rootScope.labels.name;
			$rootScope.sortByProperty = $rootScope.labels.name;
			$scope.applyFilterAdvanced();
		};

		$scope.applyFilterAdvanced = function() {
			if ($rootScope.currentUserFilter || $rootScope.filterByPublishedGuides || $rootScope.currentAssigneeFilter || $rootScope.sortByProperty) {

				if ($rootScope.currentView === 'filter-list') {

					var pageScope = angular.element('#tour-list-page-container').scope();
					if (pageScope) {
						pageScope.refreshView(0);
					}

				} else if ($rootScope.currentView === 'search-page') {

					var pageScope = angular.element('#search-page-container').scope();
					if (pageScope) {

						$rootScope.trackSearch.filters = true; //flag to check if search is updates by filters
						pageScope.search();
					}

				} else {

					var url = '#/tour/list';
					GmCXt.redirect(url);

				}
			}
		};

		$rootScope.clearFilters = function() {
			$rootScope.currentUserFilter = "";
			$rootScope.filterByPublishedGuides = "";
			$rootScope.currentAssigneeFilter = "";
			$rootScope.sortByProperty = "";
		};
	}
	return {
		restrict: 'E',
		templateUrl: 'directives/tour_filter/filter.html',
		replace: true,
		link: link
	};
}]);
var app = angular.module('guideme');

app.controller('AllGuidesCtrl', ['$scope', '$rootScope', 'api',
	'storage', 'modal', '$location', '$state', '$timeout', 'mgError', 'tourUtilService', '$state',
	function($scope, $rootScope, api, storage, modal,
		$location, $state, $timeout, mgError, tourUtilService, $state) {

		$rootScope.showSpinner = true;
		$rootScope.currentView = 'team-guides';
		$rootScope.sortType = 'category_title';
		$rootScope.lastView = 'all_guides';

		$scope.limit = 50;
		$scope.offset = 0;
		$scope.categoriesFetchedInLastApiCall = 0;
		storage.breadCrumbItems.set([]);

		if (!GmCXt.user && !GmCXt.onPrem()) {
			$rootScope.clearSession();
			return;
		}

		$rootScope.updateActiveTab($rootScope.labels.allGuides);

		if ($rootScope.organization) {
			$scope.userRole = $rootScope.organization.role;
			$scope.organizationId = $rootScope.organization.organization_id;
		}

		$scope.relatedTours = [];
		$scope.currentUrlTours = [];
		$scope.categories = [];
		$scope.noTours = false;

		var isPreviousEventComplete = true;

		$rootScope.myGuidesFilter = false;
		$rootScope.currentUserFilter = false;
		$rootScope.filterByPublishedGuides = "";

		storage.activeView.set($location.path());

		$scope.$watch("keyword", function(keyword) {
			if (keyword && keyword.length > 0 && keyword.indexOf('/') === -1) {
				if ($rootScope.searchKeyword !== keyword) {
					$rootScope.searchKeyword = keyword;
					$timeout(function() {
						$scope.search(keyword);
					}, 200);
				}
			}
		});

		$scope.getDomain = function() {

			if (GmCXt._location() && GmCXt._location().search) {

				var str = GmCXt._location().search;
				str = str.replace("?", "");
				arr = str.split("&");

				if (GmCXt.isExtension()) {
					$rootScope.domainName = arr[0].split("=")[1];
				} else {
					$rootScope.domainName = arr[1].split("=")[1];
				}
			}
		};

		$scope.dragCategory = function(categories, $index) {
			mgError.try(function() {
				var sortedCategories = [];

				categories.splice($index, 1);

				categories.filter(function(el, index) {
					sortedCategories.push({
						"category_id": el.category_id,
						"category_order": index + 1
					});

					el.category_order = index + 1;
					$rootScope.updateCategory(el, "category_order", parseInt(index + 1));
				});

				sortedCategories = GmCXt.removeDuplicates(sortedCategories);

				var data = {
					organization_id: $scope.organizationId,
					json: sortedCategories
				};

				function onFail(data) {
					$rootScope.showPopup(data.message);
				}

				api.categoriesDrag(data, onFail);
			}, 803);
		};

		function filterDuplicateCategories(categories) {
			var uniqueNames = [];
			var uniqueData = [];

			mg$.each(categories, function(i, el) {
				if (mg$.inArray(el.category_id, uniqueNames) === -1) {
					uniqueNames.push(el.category_id);
					uniqueData.push(el);
				}
			});
			return uniqueData;
		}

		function allGuideCb(_categories, append, lang) {

			$rootScope.refreshAllGuides = false;

			if (GmCXt.isEmpty(_categories) && GmCXt.isEmpty($scope.categories)) {
				$scope.noTours = true;

			} else {
				$scope.noTours = false;

				if (_categories) {
					$scope.categoriesFetchedInLastApiCall = _categories.length;

					angular.forEach(_categories, function(category, key) {
						if (category.category_image === 1) category.category_image = 0;
						category.automationTours = 0;
						angular.forEach($rootScope.categoryDataForAutomation, function(cat) {
							if (cat.category_id === category.category_id) {
								category.automationTours = cat.tours.length;
							}
						});

						category.category_order = parseInt(category.category_order);
					});
				}

				if (append) {
					$scope.categories = mg$.merge($scope.categories, _categories);

				} else {
					$scope.categories = _categories;
				}

				$scope.categories = filterDuplicateCategories($scope.categories);

				isPreviousEventComplete = true;

				if (GmCXt.isEmpty($rootScope.categoryStore) || !GmCXt.isEmpty($rootScope.refreshCache)) {

					if (GmCXt.isEmpty($rootScope.refreshCache)) {
						$rootScope.categoryStore = [];
					}

					$rootScope.addMultiCategory($scope.categories);
				}

				if (GmCXt.inPlayer) {
					$scope.categories = $rootScope.prepCatLangJson($scope.categories, lang);
				}

				$rootScope.focusAccessibilityBtn();

				$timeout(function() {
					$scope.setHeight();
				}, 500);
			}

			$rootScope.checkCurrentViewForUpdate();

			if (!GmCXt.isPlayer()) {
				storage.refreshCache.remove();
			}

			$rootScope.isApiCallOn = false;

			if (!$rootScope.isAppJsonCalling) {
				$rootScope.showSpinner = false;
			}
			if (!$scope.$$phase) $scope.$apply();

		}

		$scope.refreshView = function(append) {

			if ($rootScope.resetOffset) {
				$scope.offset = 0;
				$rootScope.resetOffset = false;
			}
			var len = $scope.limit;
			if ($rootScope.categoryStore) {
				var clength = Object.keys($rootScope.categoryStore).length;
				len = $rootScope.getApiLimit(clength);
			}

			mgError.try(function() {

				var params = {
					parent_id: 0,
					limit: $rootScope.refreshAllGuides ? len : $scope.limit,
					offset: append ? $scope.offset : 0
				};

				if (GmCXt.getLXPLang()) {
					params.language = GmCXt.getLXPLang();
				} else if ($rootScope.language && $rootScope.language.indexOf('en-') === -1 && !GmCXt.isFalse($rootScope.language)) {
					params.language = $rootScope.language;
				}

				if ($rootScope.FT.publishedCat) {
					params.is_publish = '1';
				}

				$rootScope.showSpinner = true;
				if ($state.params.reloadFlag) {
					$rootScope.refreshAllGuides = true;
				}
				api.getCategoryList(params, function(c) {
					allGuideCb(c, append, params.language);
				});

			}, 804);
		};

		$scope.refreshView(0);

		var onAppSelect = function(event, args) {

			$rootScope.myGuidesFilter = false;
			$rootScope.currentUserFilter = false;
			$rootScope.filterByPublishedGuides = "";
			$scope.categories = [];
			$scope.refreshView(0);
		};

		$rootScope.clearAppEvent = $rootScope.$on("on_app_select", onAppSelect);

		$scope.$on('$destroy', function() {
			if ($rootScope.clearAppEvent) $rootScope.clearAppEvent();
		});

		$scope.setHeight = function() {
			var listPageHeaderHeight = mg$('.list-page-header').innerHeight() ? mg$('.list-page-header').innerHeight() : 0;
			var egeHeaderHeight = mg$('#ege-header').innerHeight() ? mg$('#ege-header').innerHeight() : 0;
			var footerHeight = mg$('#footer').innerHeight() ? mg$('#footer').innerHeight() : 0;
			mg$('.category-list').css({
				'height': (window.innerHeight - footerHeight - listPageHeaderHeight - egeHeaderHeight)
			});
		};

		//Scroll Logic to fetch categories on scroll
		mg$('.category-list').off('scroll').on('scroll', function() {

			if (!isPreviousEventComplete) {
				return true;
			}

			if (((mg$(this).scrollTop() + mg$(this).innerHeight()) >= mg$(this)[0].scrollHeight - 20) &&
				(mg$(this)[0].scrollHeight + 20 > mg$(this).innerHeight())) {

				isPreviousEventComplete = false;

				if ($scope.categoriesFetchedInLastApiCall === $scope.limit) {
					$rootScope.showSpinner = true;
					$scope.offset = $scope.offset + $scope.limit;
					$scope.refreshView(1);
				}
			}
		});

		/* set the list hight on window resize */
		mg$(window).off('resize').on('resize', $scope.setHeight);

	}
]);
var playerJSONProvider = function(AuthLogin, storage, $http, $rootScope, mgError) {

	var xhr = new commonApi(AuthLogin, storage, $http, $rootScope, mgError);

	this.userSignIn = xhr.userSignIn;

	this.userApiKeySignin = xhr.userApiKeySignin;

	this.userOrgKeySignin = xhr.userOrgKeySignin;

	this.userSignOut = xhr.userSignOut;

	this.verifyUser = xhr.verifyUser;

	this.forgetPassword = xhr.forgetPassword;

	this.changePassword = xhr.changePassword;

	this.resetPassword = xhr.resetPassword;

	this.getCdnSignature = xhr.callGetCdnSignature;

	this.getAccessToken = xhr.getAccessToken;

	this.getOrganization = xhr.getOrganization;

	this.getDomains = xhr.getDomains;

	this.sendMsgToMyBot = xhr.sendMsgToMyBot;

	this.postUserProfile = xhr.postUserProfile;

	this.getCategoryList = xhr.getCategoryListStorage;

	this.getCategoryDetails = xhr.getCategoryDetailsStorage;

	this.getTourList = xhr.getTourListStorage;

	this.searchTours = xhr.getSearchTourList;

	this.getContextualTour = xhr.getContextualTour;

	this.getOrgJson = xhr.getOrgJson;
	this.getAppJson = xhr.getAppJson;

	this.resendOTP = xhr.resendOTP;

	this.getTours = xhr.getTours;

	this.getTaskList = xhr.getTaskList;

	this.getTaskDetails = xhr.getTaskDetails;

	this.getTaskFolderDetails = xhr.getTaskFolderDetails;

	this.getTaskListDetails = xhr.getTaskListDetails;

	this.markTaskGuideComplete = xhr.markTaskGuideComplete;
	this.getAppDetails = xhr.getAppDetails;
	this.getAllLanguages = xhr.getAllLanguages;

	this.getTourJson = function(tourId, cb, ecb) {

		var params = {
			serviceName: "tour/json",
			method: "GET",
			data: {
				tour_id: tourId
			},
			serviceType: ''
		};

		$rootScope.showSpinner = true;
		xhr.get_(params).then(function(r) {
			if (r.data && r.data.data) {
				var tour = $rootScope.validateAndMigrateTour(r.data.data);
				$rootScope.updateTourToStorage(tour);
				cb(tour);
			} else if (ecb) {
				ecb();
			}
		}).catch(function() {
			GmCXt.log(1, "Tour not found" + tourId);
		});
	};

	/*
		forceApi: in case of json/cdn player when we need to get category updates using API
		currentAppId: application_id of the app, when non active app data is being updated
	*/
	this.getTour = function(o, cb, ecb, forceJSONPlayer, currentAppId) {
		var self = this;

		var tour = $rootScope.getTourFromId(o.tour_id, o.category_id);

		if (tour && !GmCXt.isEmpty(tour.steps)) {
			cb(tour);

		} else if (GmCXt.cdnPlayer || GmCXt.apiPlayer) {
			self.getTourFromCDNorJSON(o, cb, ecb);
		}
	};

	this.getTourFromCDNorJSON = function(o, cb, ecb){
		var self = this;
		xhr.getTourCDN(o.tour_id, function(t) {
			if (!GmCXt.isEmpty(t)) {
				cb(t);
			} else {
				self.getTourJson(o.tour_id, cb, ecb);
			}
		}, function() {
			self.getTourJson(o.tour_id, cb, ecb);
		});
	};

	this.getAllApps = function(data, cb) {

		new Promise(function(resolve, reject) {

			var appList = $rootScope.appList;
			var apps = [];

			angular.forEach(appList, function(app) {
				apps.push(app);
			});
			resolve(apps);

		}).then(cb);
	};
};

var boxAPIProvider = function(AuthLogin, storage, $http, $rootScope, mgError) {

	var xhr = new commonApi(AuthLogin, storage, $http, $rootScope, mgError);

	this.getOrganization = function() {};

	this.getDomains = function() {};

	this.getCategoryList = xhr.getCategoryListStorage;

	this.getCategoryDetails = xhr.getCategoryDetailsStorage;

	this.getTourList = xhr.getTourListStorage;

	this.getContextualTour = function() {};

	this.getContextualTourStorage = xhr.getContextualTourStorage;

	this.getOrgJson = function() {
		$rootScope.showSpinner = true;
		var url = GmCXt.getOnPremJsonURL() + 'json/org_info.json';
		return $http.get(url);
	};

	this.getAppJson = function(id) {
		$rootScope.showSpinner = true;
		var url =GmCXt.getOnPremJsonURL() + 'json/app-'+ id +'.json';
		return $http.get(url);
	};

	this.getTour = function(o, cb) {
		var tour = $rootScope.getTourWithSteps(o.tour_id);

		if (tour && !GmCXt.isEmpty(tour.steps)) {
			cb(tour);
		} else {
			var url = GmCXt.conf.webServiceUrl + 'tours/tour-' + o.tour_id + '.json';

			return $http.get(url).then(function(r) {
				var tour = $rootScope.validateAndMigrateTour(r.data);
				$rootScope.updateTourToStorage(tour);
				cb(tour);
			});
		}
	};

	this.getAllApps = function(data, cb) {

		new Promise(function(resolve, reject) {

			var appList = $rootScope.appList;
			var apps = [];

			angular.forEach(appList, function(app) {
				apps.push(app);
			});
			resolve(apps);

		}).then(cb);
	};

	this.searchTours = xhr.getSearchTourList;

};

if (GmCXt.inPlayer) {
	app.service('api', ['AuthLogin', 'storage', '$http', '$rootScope', 'mgError', playerJSONProvider]);
} else if (GmCXt.onPrem()) {
	app.service('api', ['AuthLogin', 'storage', '$http', '$rootScope', 'mgError', boxAPIProvider]);
}
var app = angular.module('guideme');

app.controller('CategoryListCtrl', ['$rootScope', '$scope', '$state', 'storage', 'api',
	'AuthLogin', 'modal', '$location', '$timeout', 'tourUtilService',
	function($rootScope, $scope, $state, storage, api, AuthLogin, modal, $location,
		$timeout, tourUtilService) {

		$scope.categoryId = $state.params.categoryId;
		$scope.appId = $rootScope.activeAppId;

		$rootScope.currentView = 'category-list';
		$rootScope.sortType = 'category_title';

		$scope.limit = 50;
		$scope.offset = 0;
		$scope.categoriesFetchedInLastApiCall = 0;
		$scope.sub_categories = [];
		$scope.noTours = false;

		storage.activeView.set($location.path());

		$scope.getCategory = function() {

			var cb = function(_cat) {
				$timeout(function() {
					$scope.setHeight();
				}, 500);

				$rootScope.focusAccessibilityBtn();

				$rootScope.showSpinner = false;

				$scope.category = _cat;

				if (GmCXt.inPlayer) {
					$scope.category = $rootScope.prepSingCatLang($scope.category, $rootScope.language);
				}

				if (angular.isDefined($rootScope.showAddDropdown) && $rootScope.showAddDropdown) {
					$rootScope.showAddDropdown = false;
					$timeout(function() {
						mg$('#category-add-icon-' + $scope.category.category_id).trigger('click');
					}, 100);
				}

				$rootScope.showSpinner = false;

				if ($rootScope.refreshCache && $rootScope.refreshCache.category_id === $scope.category.category_id) {
					delete $rootScope.refreshCache.category_id;
				} else if ($rootScope.refreshCache && $rootScope.refreshCache.parent_id === $scope.category.category_id) {
					delete $rootScope.refreshCache.parent_id;
				}

				if (!$scope.$$phase) $scope.$apply();
			};

			$rootScope.showSpinner = true;

			$rootScope.getCategoryApi($scope.categoryId, cb);
		};

		$scope.getSubCategories = function(append) {

			$rootScope.showSpinner = true;

			var params = {
				parent_id: $scope.categoryId,
				limit: $scope.limit,
				offset: $scope.offset
			};

			function cb(_categories) {
				$scope.processSubCategoriesResponse(_categories, append);
				$rootScope.showSpinner = false;
				$rootScope.isApiCallOn = false;
			}

			if ($rootScope.FT.publishedCat) {
				params.is_publish = '1';
			}

			$rootScope.getCategoryListApi(params, cb);

		};

		$scope.processSubCategoriesResponse = function(_categories, append) {

			if (_categories && _categories.length > 0) {

				var categoryList = [];

				$scope.categoriesFetchedInLastApiCall = _categories.length;

				angular.forEach(_categories, function(subCat, key) {
					categoryList.push(subCat);
					subCat.automationTours = 0;
					angular.forEach($rootScope.categoryDataForAutomation, function(cat) {
						if (cat.category_id === subCat.category_id) {
							subCat.automationTours = cat.tours.length;
						}
					});
				});

				if (GmCXt.isEmpty($rootScope.subCategoryStore['cat_' + $scope.categoryId])) {
					$rootScope.addMultiCategory(categoryList, $scope.categoryId);
				}

				if (append) {
					$scope.sub_categories = mg$.merge($scope.sub_categories, categoryList);
				} else {
					$scope.sub_categories = _categories;
				}

				$scope.sub_categories = GmCXt.removeDuplicateCategories($scope.sub_categories);

				if (GmCXt.inPlayer) {
					$scope.sub_categories = $rootScope.prepCatLangJson($scope.sub_categories, $rootScope.language);
				}

				if (!$scope.sub_categories.length) $scope.noTours = true;

			} else if (!$scope.sub_categories.length) {
				$scope.noTours = true;
			}

			$rootScope.checkCurrentViewForUpdate();

			//Set height to category-list element to properly apply slider
			$timeout(function() {
				$scope.setHeight();
			}, 500);

			$rootScope.showSpinner = false;
			if (!$scope.$$phase) $scope.$apply();

		};

		//Scroll Logic to fetch categories on scroll
		mg$('.category-list').off('scroll').on('scroll', function() {

			if (((mg$(this).scrollTop() + mg$(this).innerHeight()) >= mg$(this)[0].scrollHeight - 20) && (mg$(this)[0].scrollHeight + 20 > mg$(this).innerHeight())) {
				if ($scope.categoriesFetchedInLastApiCall === $scope.limit) {
					$scope.offset = $scope.offset + $scope.limit;
					$scope.getSubCategories(1);
				}
			}
		});

		$scope.goToHome = function() {
			$rootScope.goToCurrentPage();
		};

		$scope.showActionDropdown = function(categoryId, type, $event) {
			$event.stopPropagation();
			$scope.hideUserImageDropDown();

			mg$('.category-action-menu-active').removeClass('category-action-menu-active');
			if (type === 'add') {
				var isDropdownVisible = mg$('#category-add-dropdown-' + categoryId).is(':visible');
				mg$('.category-action-dropdown').slideUp(200);
				if (!isDropdownVisible) {
					mg$($event.target).parents('.category-list-item').addClass('category-action-menu-active');
					mg$('#category-add-dropdown-' + categoryId).slideDown(200);
				}

				$timeout(function() {
					if (!mg$('#category-add-icon-' + categoryId).length)
						return;

					var editIconPosition = mg$('#category-add-icon-' + categoryId)[0].getBoundingClientRect();
					var dropdownPosition = mg$('#category-add-dropdown-' + categoryId)[0].getBoundingClientRect();

					var footerHeight = (mg$('#footer').length) ? mg$('#footer').innerHeight() : 0;
					var listPageHeaderHeight = (mg$('.list-page-header').length) ? mg$('.list-page-header').innerHeight() : 0;
					var headerHeight = (mg$('#ege-header').length) ? mg$('#ege-header').innerHeight() : 0;

					var newScrollTop = editIconPosition.top - footerHeight - listPageHeaderHeight - headerHeight - 20 + mg$('.category-list').scrollTop();
					var dropdownoffset = dropdownPosition.top + dropdownPosition.height - footerHeight - listPageHeaderHeight - headerHeight - 15;

					if (dropdownoffset > mg$('.category-list').height()) {
						mg$('.category-list').animate({
							scrollTop: newScrollTop
						}, 10);
					}
				}, 300);
			} else {
				var isDropdownVisible = mg$('#category-edit-dropdown-' + categoryId).is(':visible');
				mg$('.category-action-dropdown').slideUp(200);
				if (!isDropdownVisible) {
					mg$($event.target).parents('.category-list-item').addClass('category-action-menu-active');
					mg$('#category-edit-dropdown-' + categoryId).slideDown(200);
				}

				$timeout(function() {
					if (!mg$('#category-pencil-icon-' + categoryId).length)
						return;

					var editIconPosition = mg$('#category-pencil-icon-' + categoryId)[0].getBoundingClientRect();
					var dropdownPosition = mg$('#category-edit-dropdown-' + categoryId)[0].getBoundingClientRect();

					var footerHeight = (mg$('#footer').length) ? mg$('#footer').innerHeight() : 0;
					var listPageHeaderHeight = (mg$('.list-page-header').length) ? mg$('.list-page-header').innerHeight() : 0;
					var headerHeight = (mg$('#ege-header').length) ? mg$('#ege-header').innerHeight() : 0;

					var newScrollTop = editIconPosition.top - footerHeight - listPageHeaderHeight - headerHeight - 20 + mg$('.category-list').scrollTop();
					var dropdownoffset = dropdownPosition.top + dropdownPosition.height - footerHeight - listPageHeaderHeight - headerHeight - 15;

					if (dropdownoffset > mg$('.category-list').height()) {
						mg$('.category-list').animate({
							scrollTop: newScrollTop
						}, 10);
					}
				}, 300);
			}
		};

		$scope.dragSubCategory = function(sub_categories, $index) {

			var sorted_sub_categories = [];

			sub_categories.splice($index, 1);

			sub_categories.filter(function(el, index) {
				sorted_sub_categories.push({
					"category_id": el.category_id,
					"category_order": index + 1
				});

				el.category_order = index + 1;
				$rootScope.updateCategory(el, "category_order", index + 1);
			});

			sorted_sub_categories = GmCXt.removeDuplicates(sorted_sub_categories);

			var data = {
				organization_id: GmCXt.organization.organization_id,
				json: sorted_sub_categories
			};

			function onFail(data) {
				$rootScope.showPopup(data.message);
			}

			api.categoriesDrag(data, onFail);

			if (!$scope.$$phase) $scope.$apply();
		};

		$scope.setHeight = function() {
			var listPageHeaderHeight = mg$('.list-page-header').innerHeight() ? mg$('.list-page-header').innerHeight() : 0;
			var egeHeaderHeight = mg$('#ege-header').innerHeight() ? mg$('#ege-header').innerHeight() : 0;
			var egePanelHeaderSubMenuUrlsHeight = mg$('.ege-panel-header-sub-menu-urls').innerHeight() ? mg$('.ege-panel-header-sub-menu-urls').innerHeight() : 0;
			var footerHeight = mg$('#footer').innerHeight() ? mg$('#footer').innerHeight() : 0;
			mg$('.category-list').css({
				'height': (window.innerHeight - footerHeight - egePanelHeaderSubMenuUrlsHeight - listPageHeaderHeight - egeHeaderHeight)
			});
		};

		$scope.refreshView = function() {

			if ($rootScope.resetOffset) {
				$scope.offset = 0;
				$rootScope.resetOffset = false;
			}

			$scope.getCategory();
			if ($scope.category && $scope.category.has_tour) {
				var url = '#/category/' + $scope.category.category_id + '/tour/list';
				GmCXt.redirect(url);
			} else {
				$scope.getSubCategories(0);
			}

		};

		$scope.refreshView();

		/* set the list hight on window resize */
		mg$(window).off('resize').on('resize', $scope.setHeight);
	}
]);
var app = angular.module('guideme');

app.service('Message', [function() {
	this.send = GmCXt.messageService;
}]);

app.service('comm_player', ['$rootScope', 'api', 'modal', '$state',
	'storage', 'AuthLogin', 'cStorage', '$timeout', 'playerUpdateService', 'Message',
	function($rootScope, api, modal, $state, storage, AuthLogin,
		cStorage, $timeout, pService, Message) {

		function updateUser(data) {

			if (data.accesstoken) {
				if (GmCXt.user) {
					GmCXt.user.accesstoken = data.accesstoken;
					GmCXt.user.refreshtoken = data.refreshtoken;

					if (GmCXt.isDefined(data.app_access)) {
						GmCXt.user.app_access = data.app_access;
					}

					if (GmCXt.isDefined(data.profile)) {
						GmCXt.user.profile = data.profile;
					}

					$rootScope.saveUser(GmCXt.user);
				}
			}
		}

		function msgAction(message) {

			switch (message.action) {

				case 'mgPlayerJSTest_action:toggle_json_editor':
					$rootScope.jsonEditor = !$rootScope.jsonEditor;
					if (!$rootScope.$$phase) $rootScope.$apply();
					break;

				case 'mgPlayerJSTest_action:update_debug_mode':
					storage.debugMode.set(message.data.debugMode);
					break;

				case 'mgPlayerJSTest_action:user_signed_in':
					if ((!GmCXt.user || GmCXt.isEmpty(GmCXt.user)) && !message.data.forceLogin) {
						$rootScope.onUserSignin(message.data.data.user, false);
					} else if (message.data.forceLogin) {
						$rootScope.onUserSignin(message.data.data.user, true);
					}
					break;

				case 'mgPlayerJSTest_action:snow_sign_in':
					snowLogin(message);
					break;

				case 'mgPlayerJSTest_action:maintenance':
					$rootScope.$broadcast('event:maintenance');
					break;

				case 'mgPlayerJSTest_action:update_access_token':
					updateUser(message.data);
					break;

				case 'mgPlayerJSTest_action:close_video':

					$rootScope.closeAppPopup();

					var tourViewPage = angular.element('#tour-view-page-container').scope();
					if (tourViewPage)
						tourViewPage.closeVideo(message.data);
					break;

				case 'mgPlayerJSTest_action:open_side_panel':
					$rootScope.isSidePanelOpen = true;

					$rootScope.focusAccessibilityBtn();

					if (message.data && message.data.action === "currentPage") {
						$rootScope.goToCurrentPage();
					} else if (message.data && message.data.action === "chatbot") {
						GmCXt.redirect('#/chatbot');
					} else if ($rootScope.currentView === 'home') {
						$rootScope.refreshCurrentPage('open_panel');
					} else if ($rootScope.activeView === '/chatbot') {
						$rootScope.goToView();
					} else {
						$rootScope.executeRoute();
						if ($rootScope.currentView === 'login-view') {
							if (mg$("#mgPlayerJSTest_input-otp").is(":visible")) {
								mg$("#mgPlayerJSTest_input-otp").focus();
							} else {
								mg$("#mgPlayerJSTest_input-login-email").focus();
							}
						}
					}

					break;

				case 'mgPlayerJSTest_action:set_video_iframe_height':
					mg$('.video-iframe').css('height', message.data.pageHeight + 13);
					break;

				case 'mgPlayerJSTest_action:clear_current_page':
					var s = angular.element('#home-page-container').scope();
					if (s && $rootScope.activeTab === $rootScope.labels.currentPage) {
						s.clearChunkTimer();
					}
					GmCXt.ruleEngine.clearJobs();
					break;

				case 'mgPlayerJSTest_action:refresh_current_page':
					var eventType = message.data.eventType || '';
					$rootScope.refreshCurrentPage(eventType);
					$rootScope.refreshTaskList();

					if (eventType !== 'page_click') {
						if (!($rootScope.activeView && $rootScope.activeView.indexOf("view") !== -1)) {
							GmCXt.validatedSegments = {};
						}
					}
					break;

				case 'mgPlayerJSTest_action:page_url':
					if (message.data) {
						$rootScope.updatePageUrl(message.data);
					}
					break;

				case 'mgPlayerJSTest_action:init_side_panel_app':
					d = message.data;
					if (d) {
						GmCXt.log(21, "LOADING side panel, message from content script", d);
						$rootScope.updatePageUrl(d);
						GmCXt.pageTitle = d.pageTitle;
						GmCXt.conf.baseUrl = d.baseUrl;

						if (GmCXt.isPlayer()) {
							$rootScope.orgSecrret = d.orgSecKey || GmCXt.conf.orgSecrret;
							$rootScope.myGuideOrgKey = d.myGuideOrgKey;
						}

						if (d.isDesktopReq) {
							if (d.deskReq) {
								GmCXt.sendMessageToStepFrame('mgPlayerJSTest_action:connected_from_app_step', {
									data: d.deskReq
								});
							}
							$rootScope.showWidget();
							$rootScope.processActiveRequests();
						} else {
							$rootScope.initApp();
						}
					}
					break;

				case 'mgPlayerJSTest_action:page_title':
					if (GmCXt.pageTitle !== message.data.title) {
						GmCXt.isNotificationReqd = true;
					}
					GmCXt.pageTitle = message.data.title;
					break;

				case 'mgPlayerJSTest_action:set_local_storage':
					if (message.data) {
						var msgId = message.data.msgId;
						delete message.data.msgId;

						mg$.each(message.data, function(key, value) {
							key = GmCXt.addStoragePrefix(key);
							localStorage.setItem(key, JSON.stringify(value));
						});

						var m = {
							
							action: "mgPlayerJSTest_action:set_local_storage_response",
							data: {
								msgId: msgId,
							}
						};
						GmCXt.sendToParentWindow(m);
					}
					break;

				case 'mgPlayerJSTest_action:get_local_storage':
					var keys = message.data.keys;

					var items = {};

					for (var i = 0; i < keys.length; i++) {

						var key = GmCXt.addStoragePrefix(keys[i]);
						var data = localStorage.getItem(key);

						if (data && data !== 'undefined') {
							data = GmCXt.parseJSON(data);
							items[keys[i]] = data;
						}
					}

					if (items) {
						var m = {
							action: "mgPlayerJSTest_action:get_local_storage_response",
							data: {
								msgId: message.data.msgId,
								items: items
							}
						};
						GmCXt.sendToParentWindow(m);
					}
					break;

				case 'mgPlayerJSTest_action:call_api':
					callApi(message);
					break;

				case 'mgPlayerJSTest_action:remove_local_storage':
					var msgId = message.data.msgId;
					delete message.data.msgId;
					var keys = message.data;

					for (var i = 0; i < keys.length; i++) {
						keys[i] = GmCXt.addStoragePrefix(keys[i]);
						localStorage.removeItem(keys[i]);
					}

					var m = {
						action: "mgPlayerJSTest_action:remove_local_storage_response",
						data: {
							msgId: msgId
						}
					};
					GmCXt.sendToParentWindow(m);

					break;

				case 'mgPlayerJSTest_action:to_signin_page':
					$rootScope.handleSignIn();
					break;

				case 'mgPlayerJSTest_action:get_cdn_signature_from_app':
					$rootScope.getNewCdnSignature();
					break;

				case 'mgPlayerJSTest_action:completed;task:select_dom_element_for_rules':

					var initiator = message.data.initiator;

					var cv = $rootScope.currentView;

					if (cv === 'team-guides' ||
						cv === 'home' ||
						cv === 'tour-list' ||
						cv === 'tour-view' ||
						initiator === 'currentPageIndicator' ||
						initiator === 'notif' ||
						initiator === 'taskListSeg') {
						GmCXt.ruleEngine.onSuccessDOMRuleMatch(message.data);
					}

					break;

				case 'mgPlayerJSTest_action:lms_video_assignment_complete':
					var lmsLessonsListViewScope = angular.element('#mgPlayerJSTest_my-guide-page-container').scope();
					lmsLessonsListViewScope.updateVideoStatus();
					break;

				case 'mgPlayerJSTest_action:set_lang_side_panel':
					$rootScope.updateAppLang(message.data.lang);
					break;

				case 'mgPlayerJSTest_action:refresh_player':
					refreshPlayer(message.data);
					break;

				case 'mgPlayerJSTest_action:update_timestamp_sync_time':
					$rootScope.lastTimeStampSync = GmCXt.getCurrentTimeInSec();
					storage.lastTimeStampSync.set(GmCXt.getCurrentTimeInSec());
					break;

				case 'mgPlayerJSTest_action:update_user_data':
					if (message.data && message.data.user) {
						GmCXt.user = message.data.user;

						if (GmCXt.user.signin_user_email) {
							var data = {
								email_id: GmCXt.user.signin_user_email,
								settings: JSON.stringify(GmCXt.user.settings),
								organization_id: GmCXt.user.organization_id
							};

							GmCXt.setAnonymousUserPrefrence(data);
						} else {
							GmCXt.apiUpdateUserProfile(GmCXt.user);
						}

						$rootScope.saveUser(GmCXt.user);
					}
					break;
				case 'mgPlayerJSTest_action:update_organization_data':
					if (message.data && message.data.organization) {
						GmCXt.organization = message.data.organization;
						$rootScope.saveOrganization(GmCXt.organization);
					}
					break;

				case 'mgPlayerJSTest_action:update_notification_info':
					storage.notifTours.set(message.data).then(function(st) {
						$rootScope.setNotifTours();
					});
					break;

				case 'mgPlayerJSTest_action:update_tour_activity':
					GmCXt.tourActivity = message.data.tourActivity;
					break;

				case 'mgPlayerJSTest_action:update_played_tour':
					if (message.data.length !== GmCXt.playedTour) {
						GmCXt.playedTour = message.data.playedTour;
						var tourListPage = angular.element('.tour-list-page-container').scope();

						if (tourListPage) {
							tourListPage.updateTours();
						}
					}
					break;

				case 'mgPlayerJSTest_action:update_played_step':
					$rootScope.setPlayedStepsInfo(message.data.playedStep);
					break;

				case 'mgPlayerJSTest_action:get_survey_detail':
					GmCXt.requestHandler.handleGetSurveyDetail(message.data);
					break;

				case 'mgPlayerJSTest_action:get_survey_detail_tooltip':
					GmCXt.api.getSentiment({
						app_code: GmCXt.appList['app:' + GmCXt.activeAppId].external_id,
						sentiment_code: message.data.sentiment_code,
						user: GmCXt.user
					}).then(function(r) {
						r.tourId = message.data.tourId;
						r.type = 'tooltip';
						r.stepId = message.data.stepId;
						var m = {
							action: "mgPlayerJSTest_action:survey_start;task:show_survey",
							data: r
						};
						GmCXt.sendToParentWindow(m);
					});
					break;

				case 'mgPlayerJSTest_action:clear_user_data':
					storage.user.remove();
					break;

				case 'mgPlayerJSTest_action:user_signed_failed':
					var d = message.data;
					if (d.paramsData) {
						d.params = d.paramsData;
						d.method_type = d.method;
						d.errMessage = d.message;
						$rootScope.triggerError(message.data);
					}
					$rootScope.logout();
					break;

				case 'mgPlayerJSTest_action:mybot_results':

					var m = {
						action: "mgPlayerJSTest_action:mybot_results",
						data: {
							p: message.data
						}
					};

					GmCXt.sendMessageToBackgroundService(m);

					$rootScope.categoryDataForAutomation = [];
					break;

				case 'mgPlayerJSTest_action:clean_tour_player':
					GmCXt.cleanPlayerI();
					break;

				case 'mgPlayerJSTest_action:reset_panel_right':
					mg$('.ege-panel').css({
						'right': 'initial'
					});
					break;

				case 'mgPlayerJSTest_action:logout_user':
					$rootScope.logout();
					break;

				case 'mgPlayerJSTest_action:show_notifications':
					if ((!GmCXt.stopNotification(false) || message.data.isAutomationRunning)) {
						GmCXt.loadGuideNotifications(message.data.notifications, false, false, false, GmCXt.isNotificationReqd, message.data.isPageClicked);
						GmCXt.isNotificationReqd = false;
					}
					break;

				case 'mgPlayerJSTest_action:close_notification_popup':
					GmCXt.closeNotificationPopupSidePanel(message.data.isSidePanelOpen);
					break;

				case 'mgPlayerJSTest_action:signin_from_console':
					$rootScope.loginFromConsole(message.data);
					break;

				case 'mgPlayerJSTest_action:mark_task_guide_complete':
					$rootScope.markTaskGuideComplete(message.data);
					break;

				case 'mgPlayerJSTest_action:mark_task_guide_complete_played_outside':
					$rootScope.markTaskGuideCompletePlayedOutside(message.data);
					break;

				case 'mgPlayerJSTest_action:connected_from_app':
					GmCXt.deskReq = message.data.data;
					GmCXt.storage().set({
						'desktopReq': GmCXt.deskReq
					});
					break;

				case 'mgPlayerJSTest_action:go_to_route':
					$rootScope.goToRoute();
					break;

				case 'mgPlayerJSTest_action:close_power_form':
					if (mg$('.mgPlayerJSTest_form-injector-wrapper').length > 0) {
						GmCXt.closePowerForm();
					}
					break;

				case 'mgPlayerJSTest_action:app_panel_closed':
					$rootScope.isSidePanelOpen = false;
					$rootScope.displayChatIcon();
					break;

				case 'mgPlayerJSTest_action:update_registration_secret':
					$rootScope.trackerSecrets = {};
					$rootScope.registerClientInsights();
					break;
			}

			return true;
		}

		function snowLogin(message) {

			GmCXt.snowApp = true;
			$rootScope.snowLogin = true;
			$rootScope.orgSecrret = message.data;
			var matchKey = $rootScope.orgSecrret.substring(0, 5);

			if (!GmCXt.user || GmCXt.isEmpty(GmCXt.user)) {
				storage.activeOrgKeys.set(matchKey);

				var loginPageScope = angular.element('.mgPlayerJSTest_signin-page-container').scope();
				if (loginPageScope) {
					loginPageScope.autoLoginUser();
				} else {
					$rootScope.clearSession();
				}

			} else {
				snowRelogin(message, matchKey);
			}
		}

		function snowRelogin(message, matchKey) {

			storage.activeOrgKeys.get().then(function(res) {
				if (res && res !== matchKey) {
					$rootScope.clearSession();
					snowLogin(message);
				}
			});
		}

		function appListener(request, sender, sendResponse) {

			request = GmCXt.parseJSON(request);
			request = GmCXt.convertMgdata(request);

			switch (request.action) {

				case 'mgPlayerJSTest_action:to_signin_page':
					$rootScope.handleSignIn();
					break;

				case 'mgPlayerJSTest_action:update_access_token':
					updateUser(request.data);
					break;

				case 'mgPlayerJSTest_action:call_api':
					callApi(request);
					break;

				case 'mgPlayerJSTest_action:refresh_player':
					refreshPlayer(request.data);
					break;

				case 'mgPlayerJSTest_action:update_timestamp_sync_time':
					$rootScope.lastTimeStampSync = GmCXt.getCurrentTimeInSec();
					storage.lastTimeStampSync.set(GmCXt.getCurrentTimeInSec());
					break;

				case 'mgPlayerJSTest_action:get_cdn_signature_from_app':
					$rootScope.getNewCdnSignature();
					break;

				case 'mgPlayerJSTest_action:fetch_user':
					if (GmCXt.user) {
						$rootScope.syncUser();
					} else {
						$rootScope.clearSession();
					}

					break;

				case 'mgPlayerJSTest_action:update_registration_secret':
					$rootScope.trackerSecrets = {};
					$rootScope.registerClientInsights();
					break;

				case 'mgPlayerJSTest_action:user_logged_out':
					$rootScope.logout("fromOtherTab");
					break;

				case 'mgPlayerJSTest_action:logout_user':
					$rootScope.logout();
					break;

				case 'mgPlayerJSTest_action:get_data_from_panel':
					var m = {
						action: "mgPlayerJSTest_action:get_data_from_panel_response",
						data: {
							user: GmCXt.user,
							organization: GmCXt.organization
						}
					};
					GmCXt.sendMessageToBackgroundService(m);

					break;

				default:
					break;
			}

			return true;
		}

		function callApi(message) {
			var messageId = message.data.msgId;
			switch (message.data.api) {

				case 'tour':

					var options = message.data.option;

					if ($rootScope.notDefaultLang()) {
						options.language = $rootScope.language;
					}

					if (GmCXt.getLXPLang()) {
						options.language = GmCXt.getLXPLang();
					}

					api.getTour(options, getTourCb, getTourCb, options.forceJSONApi);
					break;

				case 'tour/contextual':

					var cachedTours = $rootScope.readLocalCT(message.data.option.url, message.data.option.pageTitle);

					if (cachedTours) {
						GmCXt.log(10, "FETCHING tours from CACHE");
						var filteredCTour = filterCTour(cachedTours);
						sendResponse(filteredCTour);
						break;
					}

					contextualTours(message);
					break;

				case 'user/token':
					//4830: TODO
					api.getAccessToken(function(r) {
						$rootScope.updateAccessTokenCallBack(r);
						sendResponse(r);
					});
					break;

				case 'connectMgDesktop':
					api.sendMsgToMyBot(message.data.option);
					break;

				case 'URL':
					mg$.get(message.data.option.url).then(function(data) {
						sendResponse(data);
					});
					break;

			}

			function filterCTour(tours) {
				var fTours = [];
				tours.filter(function(t) {
					if ((t.tour_type.indexOf('beacon_tour') > -1) ||
						(t.tour_type.indexOf('overlay_tour') > -1) ||
						(t.tour_type.indexOf('smartTip') > -1) ||
						(t.tour_type.indexOf('insights') > -1)
					) {
						fTours.push(t);
					}
				});

				return fTours;
			}

			function contextualTours(message) {

				if (GmCXt.getLXPLang())
					message.data.option.language = GmCXt.getLXPLang();
				else if ($rootScope.language && $rootScope.language.indexOf('en-') === -1 && !GmCXt.isFalse($rootScope.language))
					message.data.option.language = $rootScope.language;

				var cb = function(r) {
					var _tours = $rootScope.processContextualGuide(r, message.data.option.url);

					var filteredCTour = filterCTour(_tours);
					sendResponse(filteredCTour);
				};

				if (GmCXt.onPrem() && !GmCXt.user) {
					api.getContextualTourStorage(message.data.option, cb);
				} else {
					api.getContextualTour(message.data.option, cb);
				}
			}

			function sendResponse(result) {
				var m = {
					action: "mgPlayerJSTest_action:call_api_response",
					data: {
						msgId: messageId,
						items: result
					}
				};

				GmCXt.sendMessageToBackgroundService(m);
				GmCXt.sendToParentWindow(m);
			}

			function getTourCb(_tour) {
				if (GmCXt.inPlayer && $rootScope.notDefaultLang() && _tour) {
					_tour = $rootScope.getTranslatedTourAndSteps(_tour, $rootScope.language);
				}
				sendResponse(_tour);
			}
		}

		function winListener(event) {
	
			var m = GmCXt.parseMsg(event);

			if (!m) return;

			if (!m.action || m.action.indexOf('mgPlayerJSTest_action:') !== 0) {
				return;
			}
			m = GmCXt.convertMgdata(m);

			if (m.data && m.data.config) {
				GmCXt.conf = m.data.config;
			}

			msgAction(m);
		}

		this.set = function() {

			// This listener is only in Guide iframe
			window.addEventListener('message', winListener);

			if (GmCXt.isExtension()) {
				if ($rootScope.browserApp === 'chrome') {
					chrome.runtime.onMessage.addListener(appListener);
				} else {
					browser.runtime.onMessage.addListener(appListener);
				}
			}
		};

		function refreshPlayer(d) {
			$rootScope.maintenance = d.maintenance_mode;

			storage.refreshTime.set(d.last_updated_time);
			storage.lastTimeStampSync.set(GmCXt.getCurrentTimeInSec());

			if (d.maintenance_mode) {
				$rootScope.goToMaintenance();
			} else {
				pService.processUpdates(d);
			}

			if (GmCXt.inPlayer || GmCXt.onPrem()) {

				var msg = {
					action: "mgPlayerJSTest_action:update_player_sync_time",
					data: {
						refreshTime: d.last_updated_time,
						lastTimeStampSync: GmCXt.getCurrentTimeInSec()
					}
				};

				if (GmCXt.isClientJs()) {
					GmCXt.sendToParentWindow(msg);
				} else {
					GmCXt.sendMessageToBackgroundService(msg);
				}
			}
		}

		GmCXt.requestHandler.handleGetSurveyDetail = function(data) {
			var sendResponse = function(r) {
				r.msgId = data.msgId;
				var m = {
					action: "mgPlayerJSTest_action:got_survey_detail",
					data: r
				};
				GmCXt.sendToParentWindow(m);
			};

			var obj = {};
			obj.sentiment_code = data.sentiment.sentimentCode;
			obj.user = GmCXt.user;
			if (data.isExit) {
				obj.app_code = '';
			} else {
				obj.app_code = GmCXt.appList['app:' + GmCXt.activeAppId].external_id;
			}

			GmCXt.api.getSentiment(obj)
				.then(sendResponse)
				.catch(function(result) {
					sendResponse(false);
				});

		};

		GmCXt.requestHandler.handleGetBotConvDetail = function(data, cb) {
			var sendResponse = function(r) {
				if (cb) {
					cb(r);
				}
			};

			var objToSend = {};
			objToSend.conversation_code = data.conversation.conversationCode;
			objToSend.user = GmCXt.user;
			if (data.isExit) {
				objToSend.app_code = '';
			} else {
				objToSend.app_code = GmCXt.appList['app:' + GmCXt.activeAppId].external_id;
			}

			GmCXt.api.getGetBotConv(objToSend)
				.then(sendResponse)
				.catch(function(result) {
					sendResponse(false);
				});

		};
	}
]);
var app = angular.module("guideme");

app.controller('HomeCtrl', ['$rootScope', '$scope', '$state', 'api', 'AuthLogin', 'storage',
	'modal', '$location', '$timeout', 'mgError',
	function($rootScope, $scope, $state, api, AuthLogin, storage, modal, $location,
		$timeout, mgError) {

		$rootScope.showSpinner = true;
		$rootScope.isApiCallOn = false;
		$rootScope.search = "";
		$rootScope.currentView = 'home';
		$scope.limit = 50;
		$scope.offset = 0;
		$scope.categories = [];
		$scope.tours = [];
		$scope.filterTours = [];
		$rootScope.myGuidesFilter = false;
		$scope.showNoToursOnce = false;
		$rootScope.sortType = 'tour_title';

		$scope.msgForGuideCountSent = false;

		$rootScope.cTours = [];

		$scope.forceRefresh = false;

		var numberOfToursReturned = 0;

		var filteredTours = [];
		var currentTours = [];
		var timeout;

		var isPreviousEventComplete = true;

		$scope.iscurrentpage = true;

		storage.activeView.set($location.path());
		$rootScope.updateActiveTab($rootScope.labels.currentPage);

		$scope.apiResponseReceived = false;

		$scope.closeTooltip = function() {
			mg$('.guideme-ttip').hide();
		};

		$scope.showTours = function(tours) {
			tours = GmCXt.removeDuplicateGuides(tours);
			$scope.apiResponseReceived = true;

			if (tours.length) {

				tours = $rootScope.getTranslatedTours(tours);

				$scope.tours = tours;

				$scope.filterTours = tours;

				$scope.setHeight();

				if (!$scope.msgForGuideCountSent) {
					$rootScope.showCurrentPageGuidesIndicator(true);
					$scope.msgForGuideCountSent = true;
				}
				$rootScope.getBotGuideCount($scope.tours);
				$rootScope.displayChatIcon();

			} else {
				if (!$scope.showNoToursOnce) {
					$scope.showNoToursOnce = true;
					showNoTourOnCurrentPage();
				}
			}

			$rootScope.showSpinner = false;

			if ($rootScope.search && $rootScope.search.length > 0) {
				$scope.filterCurrentPage();
			}

			if (!$scope.$$phase) $scope.$evalAsync();
			
		};

		$scope.updateTours = function() {
			if (!$scope.$$phase) $scope.$apply();
		};

		function segmentCb(t) {

			if (!GmCXt.isEmpty(t)) {
				$scope.tours.push(t);
				$rootScope.cTours.push(t.tour_id);
			}

			$scope.showTours($scope.tours);
		}

		var onRuleMatchStatus = function(result) {

			var valTour = result.tour;

			if (timestamp !== valTour.timestamp) {
				GmCXt.log(30, "REJECT, having old timestamp");
				return;
			}

			if ($scope.hideSpinTimer) $timeout.cancel($scope.hideSpinTimer);

			if (result.valid) {
				filteredTours.push(valTour);
			}

			if (timeout) $timeout.cancel(timeout);

			if ($rootScope.guideSegmentation && $rootScope.FT.isPlayer) {

				if (result.valid) {
					GmCXt.checkGuidesBasedOnSegment([valTour], segmentCb, "currPageSeg");
				} else {
					segmentCb();
				}

			} else {
				timeout = $timeout(function() {
					$scope.showTours(filteredTours);
				}, 0);
			}

		};

		var timestamp;

		function updatePageUrl() {

			// This listener is only in Guide iframe
			window.addEventListener('message', listen);

			var msg = {
				action: 'mgPlayerJSTest_action:get_page_url'
			};
			GmCXt.sendToParentWindow(msg);
		}

		function listen(event) {

			var message = GmCXt.parseMsg(event);

			if (!message) return;
			if (!message.action || message.action.indexOf('mgPlayerJSTest_action:') !== 0) return;
			message = GmCXt.convertMgdata(message);

			if (message.action === 'mgPlayerJSTest_action:get_page_url_response') {
				$rootScope.updatePageUrl(message.data);
				getCurrentPage();
				window.removeEventListener('message', listen);
			}

			return true;
		}

		function showBoxPlayerGuides() {

			GmCXt.log(30, "SHOWING Box Player guides");

			var t = 0;

			if (!$rootScope.publishedTours) t = 1000;

			$timeout(function() {

				var guides = $rootScope.filterCurrentPageTourTypes($rootScope.publishedTours);

				if(GmCXt.isPlayer()) guides = GmCXt.filterScheduleTours(guides);

				guides = $rootScope.validateAllRulesExceptSelectEl(guides).tours;

				gotCurrentPageGuides(guides);
			}, t);

		}

		$scope.refreshView = function(event) {

			if (event === "page_click") {

				$scope.pageEvent = "page_click";

				// if (!$rootScope.ruleCheck)
				// 	return;

			} else {
				$scope.pageEvent = '';

				$rootScope.cTours = [];

			}

			currentTours = [];

			$rootScope.showSpinner = true;

			$scope.showNoToursOnce = false;

			$scope.msgForGuideCountSent = false;

			if (!GmCXt.user && $rootScope.noLogin()) {
				showBoxPlayerGuides();
			} else {
				event = event || null;
				GmCXt.log(30, "REFRESH current page. Event: " + event);

				updatePageUrl();
				$scope.setHeight();
			}

			if (event !== "page_click") $rootScope.focusAccessibilityBtn();

		};

		function getCurrentPage() {
			mgError.try(function() {
				var param = {
					url: $rootScope.pageUrl
				};

				if (GmCXt.getLXPLang()) param.language = GmCXt.getLXPLang();

				currentTours = [];

				if (GmCXt.isDomainInActiveApp()) {

					var res = $rootScope.readLocalCT(param.url, GmCXt.pageTitle);

					if (res && res.length && !$scope.forceRefresh) {
						GmCXt.log(30, "FETCHED tours from CACHE");
						gotCurrentPageGuides($rootScope.filterCurrentPageTourTypes(res));
						return;
					}

					api.getContextualTour(param, function(r) {

						$scope.forceRefresh = false;

						if (!$scope.$$phase) $scope.$apply();

						var _tours = $rootScope.processContextualGuide(r, param.url);

						gotCurrentPageGuides($rootScope.filterCurrentPageTourTypes(_tours));
					});
				} else {
					GmCXt.log(30, "INVALID domain, NOT present in Org");
					gotCurrentPageGuides([]);
				}
			}, 801);
		}

		var tourIndex = 0;

		function showNoTourOnCurrentPage() {

			GmCXt.log(30, "NO GUIDES on this page");

			$rootScope.hideCurrentPageGuidesIndicator();

			$scope.tours = [];
			$scope.filterTours = [];
			
			if (!$rootScope.isAppJsonCalling) {
				$rootScope.showSpinner = false;
			}

			$rootScope.getBotGuideCount($scope.tours);
			$rootScope.displayChatIcon();
			
			if (!$scope.$$phase) $scope.$apply();
		}

		function gotCurrentPageGuides(tours) {

			GmCXt.log(30, "FETCHED tours", tours);
			timestamp = Date.now();
			$scope.tours = [];
			filteredTours = [];

			numberOfToursReturned = tours.length;

			if (GmCXt.inPlayer && !GmCXt.isWestpac()) {
				tours = GmCXt.sortToursByModifcationDate(tours);
			}

			if (!tours.length) {
				$scope.apiResponseReceived = true;
				showNoTourOnCurrentPage();
			} else {

				for (var i = 0; i < tours.length; i++) {
					tours[i].tour_sequence = i;
					tours[i].timestamp = timestamp;
				}

				currentTours = angular.copy(tours);

				tourIndex = 0;
				processRuleInChunk();
			}

		}

		$scope.chunkTimer = null;

		function processRuleInChunk() {

			mgError.try(function() {
				var c = currentTours.length;

				if ($rootScope.browserApp === 'ie') {
					c = 5;

					//for last chunk of tour
					if (currentTours.length - tourIndex <= c) {
						waitForRulesMatch();
					}
				} else {
					waitForRulesMatch();
				}

				for (var i = 0; i < c; i++) {

					var tour = currentTours[tourIndex];
					tourIndex++;

					if (currentTours.length >= tourIndex) {
						$rootScope.queueRuleForCP(tour, tourIndex, onRuleMatchStatus, $scope.pageEvent, 'currentPage');
					}
				}

				if ($rootScope.browserApp === 'ie') {
					if (currentTours.length > tourIndex) {
						$scope.chunkTimer = $timeout(function() {
							processRuleInChunk();
						}, 1000);
					}
				}

			}, 802);
		}

		$scope.clearChunkTimer = function() {
			if ($rootScope.browserApp === 'ie') {
				GmCXt.log(1, "CURRENT PAGE processing cleared");
				$timeout.cancel($scope.chunkTimer);
			}
		};

		function checkValueExist(t) {
			return (t && t.toLowerCase().indexOf($rootScope.search.toLowerCase()) > -1);
		}

		function trackCurrentPageSearch(results) {

			$scope.currentSearchTime = new Date().getTime();


			if ($scope.lastSearchTime && ($scope.currentSearchTime - $scope.lastSearchTime) >= 5000) {
				$rootScope.trackCurrentPageSearchEvent(false);
			}
		

			$scope.lastSearchTime = $scope.currentSearchTime;

			$rootScope.trackCurrentPageSearch = {
				keyword: $rootScope.search.toLowerCase(),
				results_returned: results.length,
				track: true,
				startTime: new Date().getTime()
			};
		}

		$scope.clearSearchText = function() {

			$rootScope.trackCurrentPageSearchEvent(false);

			$rootScope.search = "";

			$rootScope.showSpinner = true;

			$timeout(function() {
				$scope.filterTours = $scope.tours;
				$rootScope.showSpinner = false;
				$scope.setHeight();
				$scope.$apply();
			}, 500);
		};

		$scope.setHeight = function() {
			$timeout(function() {
				var egeHeaderHeight = mg$('#ege-header').innerHeight() || 0;
				var footerHeight = mg$('#footer').innerHeight() || 0;
				var searchboxHeight = mg$('.list-page-header').innerHeight() || 0;
				var height = window.innerHeight - footerHeight - egeHeaderHeight - searchboxHeight + 5;
				mg$('.category-list').css({
					'height': height
				});
			}, 500);
		};

		$scope.sortOrder = function() {
			if (GmCXt.isElectron()) {
				return $rootScope.activeSortFilter ? $rootScope.activeSortFilter : 'tour_title';
			} else {
				return $rootScope.activeSortFilter ? $rootScope.activeSortFilter : GmCXt.isWestpac() ? ['1*category_order', 'subCategory_order', 'category_id', '1*tour_order'] : 'modification_date';
			}
		};

		$scope.setOrder = function() {
			if (GmCXt.isElectron() || GmCXt.isWestpac()) {
				return !$rootScope.activeSortFilter ? false : $rootScope.descOrder;
			} else {
				return !$rootScope.activeSortFilter ? true : $rootScope.descOrder;
			}
		};

		$scope.refreshView();

		//Scroll Logic to fetch categories on scroll
		mg$('.category-list').off('scroll').on('scroll', function() {

			if (!isPreviousEventComplete)
				return true;

			if (((mg$(this).scrollTop() + mg$(this).innerHeight()) >= mg$(this)[0].scrollHeight - 20) &&
				(mg$(this)[0].scrollHeight + 20 > mg$(this).innerHeight())) {

				isPreviousEventComplete = false;

				if (numberOfToursReturned === $scope.limit) {
					$scope.refreshView();
				}
			}
		});

		function waitForRulesMatch() {

			$scope.hideSpinTimer = $timeout(function() {

				if (GmCXt.isEmpty($scope.tours)) {
					GmCXt.log(30, 'NO GUIDE rules matched');
					$scope.showTours([]);
				}

			}, GmCXt.t.currentPageSpinner + 1000);
		}

		//track event if scope of search is changed 
		$scope.$on('$destroy', function() {
			$rootScope.trackCurrentPageSearchEvent(false);
		});

		mg$(document).on('keyup', '#mgPlayerJSTest_input-search-current-page', function(e) {
			var excludeKey = [27, 20, 16, 17, 18, 91, 93, 37, 38, 39, 40, 45, 46];
			if (excludeKey.indexOf(e.keyCode) !== -1) {
				return;
			} else {

				if ($rootScope.search.length > 1) {
					$scope.filterCurrentPage();
				} else if ($rootScope.search.length === 0) {
					$scope.clearSearchText();
				}
			}
		});

		$scope.filterCurrentPage = function() {

			var arr = [];
			$scope.tours.filter(function(t) {
				if (
					checkValueExist(t.tour_title) ||
					(t.tour_id === $rootScope.search) ||
					checkValueExist(t.keywords) ||
					checkValueExist(t.tour_description)) {
					arr.push(t);
				}
			});

			$scope.filterTours = arr;

			trackCurrentPageSearch(arr);

			if (arr.length) {
				$scope.setHeight();
			}
		};

		mg$(window).off('resize').on('resize', $scope.setHeight);
	}
]);
var app = angular.module('guideme');

app.controller('maintenance', ['$rootScope', '$scope', 'storage', 'logoutService', '$location',
	function($rootScope, $scope, storage, logoutService, $location) {

		$rootScope.currentView = "maintenance";
		$scope.maintenanceMsg = $rootScope.labels.maintenanceMessage;
		$scope.maintenanceMsg.replace("support@csod.com", "<a href='mailto:support@csod.com' target='_top'>support@csod.com'</a>");
		storage.activeView.set($location.path());
		$rootScope.showSpinner = false;

		$scope.isLoginPage = false;
	}
]);
GmCXt.updateNotificationContentScript = function(toursClosedByUser, tourIdArray) {
	var data = {
		toursClosedByUser: toursClosedByUser,
		tourIdArray: tourIdArray
	};
	GmCXt.formatAndSendToParentWindowNoti('mgPlayerJSTest_action:update_notification_data_content_script', data);
};

GmCXt.closeNotificationPopupSidePanel = function(increaseSidePanel) {
	mg$('.mgPlayerJSTest_micro-player-resize').removeClass('mgPlayerJSTest_micro-player-resize');
	if (mg$(".mgPlayerJSTest_overlay-tours-popup").length) {
		GmCXt.removeNotif();
		GmCXt.formatAndSendToParentWindowNoti('mgPlayerJSTest_action:show_beacon_smarttip', {});
		if (increaseSidePanel) {
			GmCXt.openSidePanelNotificaton();
		} else {
			GmCXt.openSidePanelNotificaton();
			GmCXt.formatAndSendToParentWindowNoti('mgPlayerJSTest_action:close_app_panel', {});
		}
	}
};

GmCXt.openSidePanelNotificaton = function() {
	GmCXt.reduceSidePanel();
	mg$('.ege-panel').css({
		'width': '100%',
		'transition': 'width 0s',
		'right': '0px'
	});
	var s = angular.element('.mgPlayerJSTest_task-list-container').scope();
	if (s) {
		s.closeTaskList();
	}
};

GmCXt.showNotificationHtml = function(isPageClicked, hideSidePandel) {
	GmCXt.increaseSidePanel();
	mg$('.mgPlayerJSTest_micro-player-container').addClass("mgPlayerJSTest_micro-player-resize");
	if (!(GmCXt.getAppSetting('keep_player_panel_open') && !isPageClicked) || hideSidePandel || GmCXt.FT.creatorApp) {
		mg$('.ege-panel').css({
			'width': '500px',
			'right': '-9550px'
		});
	}
};

GmCXt.getOverlayToursHtml = function(tour, index, isPreview) {
	var tourStr = '';
	var playClass = 'mgPlayerJSTest_push-notification-guide-info-overlay mgPlayerJSTest_single-guide-play-icon';
	var tooltipHTML = '';
	if (isPreview) {
		playClass += ' mgPlayerJSTest_forbidden';
		tooltipHTML = "<div class='mgPlayerJSTest_push-preview-tooltip'>" + GmCXt.label.notifGuidePlayWarning + "</div>";
	}
	if (tour) {
		var tourTitle = tour.title || tour.tour_title;
		if (tourTitle.length > 200) {
			tourTitle = tourTitle.substr(0, 200) + " ...";
		}

		var thumbUrl = "";

		if (tour.thumbnail_url) {
			if (tour.thumbnail_url.indexOf('default_icon') >= 0) {
				thumbUrl = GmCXt.getDefaultGuideIcon();
			} else if (tour.thumbnail_url.indexOf('default') < 0) {
				thumbUrl = tour.thumbnail_url + GmCXt.getCdnSign();
			}
		}

		var ts = tour.tour_settings;
		mode = ts.defaultPlayAction;

		if (mode === 'Default') {
			mode = GmCXt.getAppSetting('defaultPlayAction');
		}

		var playlabel = GmCXt.label.guideMe;

		if (mode === 'doitforme') {
			playlabel = GmCXt.label.doItForMe;
		} else if (mode === 'slideshow') {
			playlabel = GmCXt.label.showMe;
		} else if (mode === 'vLab') {
			playlabel = GmCXt.label.vLab;
		}

		if (GmCXt.isWB()) {
			tourStr = "";
			tourStr += '<div class="mgPlayerJSTest_overlay-guide-box">';
			tourStr += '<div class="mgPlayerJSTest_overlay-guide-title">' + GmCXt.escapeHtml(tourTitle) + '</div>';
			tourStr += '<div class="mgPlayerJSTest_overlay-single-guide-play-icon">' +
				'<div id="mgPlayerJSTest_single-guide-play-icon-svg" tourIndex="' + index + '" class="mgPlayerJSTest_single-guide-play-icon">' +
				'</div></div></div>';
		} else {
			tourStr = "";
			tourStr += "<div class='mgPlayerJSTest_push-notification-guide-info-wrapper'>" +
				"<button class='" + playClass + " mgPlayerJSTest_lbl-btn' tourIndex='" + index + "'>" +
				tooltipHTML +
				"<div class='mgPlayerJSTest_push-play-icon mgPlayerJSTest_position-center mgPlayerJSTest_display-flex mgPlayerJSTest_align-items-center mgPlayerJSTest_justify-content-center mgPlayerJSTest_font-size-16'>" +
				playlabel +
				"<div id='mgPlayerJSTest_push-not-play-icon-svg' class='mgPlayerJSTest_display-flex mgPlayerJSTest_align-items-center mgPlayerJSTest_margin-lr-10'> </div>" +
				" </div>" +
				"</button>" +
				"<div class='mgPlayerJSTest_push-notification-guide-title'>" + GmCXt.escapeHtml(tourTitle) + "</div>" +
				"</div>";
		}
	}

	return tourStr;
};

GmCXt.loadGuideNotifications = function(tours, isPreview, taskObj, step, resetMatchedTours, isPageClicked) {
	GmCXt.log(37, "LOAD NOTIFICATIONS", {
		tours: tours
	});
	if (!GmCXt.user) return;
	if (resetMatchedTours) GmCXt.alreadyLoadedNotif = [];
	var matchedTours = [];
	var toursClosedByUser = {};
	var tourIdArray = {};

	var isAutolaunchTriggered = false;
	GmCXt.filterDontShowSnoozeTour = [];
	var guideAutomationInProgress = false;

	if (isPreview) {
		matchedTours = tours;

		if (GmCXt.isOnboarding(tours[0])) {
			playOnboardingTour(0, tours[0], step, taskObj);
		} else {
			showNotification();
		}
	} else {
		GmCXt.storage()
			.get(['toursClosed', 'tourIdArray', 'testAuto'])
			.then(function(st) {
				tourIdArray = st.tourIdArray;
				toursClosedByUser = GmCXt.parseJSON(st.toursClosed);
				if (st.testAuto) {
					guideAutomationInProgress = st.testAuto.automationInProgress;
				}
				GmCXt.log(37, 'STORAGE NOTIFICATIONS DATA', st);

				GmCXt.getDoNotShowTours(false).then(function(tour) {
					GmCXt.doNotShowTours = tour;
					process(tours);
				});

				GmCXt.displayFrequencyGuides = GmCXt.user.settings.display_frequency_guides ? GmCXt.user.settings.display_frequency_guides : {};
			});
	}

	function isAlreadyShown(tour) {
		var retVal = false;
		for (var i = 0; i < GmCXt.alreadyLoadedNotif.length; i++) {
			if (parseInt(GmCXt.alreadyLoadedNotif[i].tour_id) === parseInt(tour.tour_id)) {
				retVal = true;
				break;
			}
		}

		return retVal;
	}

	function filterMatchedTours(tours) {
		GmCXt.log(10, "ALREADY SHOWN TOURS ", GmCXt.alreadyLoadedNotif);
		if (GmCXt.alreadyLoadedNotif.length > 0) {
			tours = tours.filter(function(t) {
				if (!isAlreadyShown(t)) {
					return t;
				}
			});
		}
		return tours;
	}

	function process(tours) {
		if (!tours || tours.length < 1) {
			return;
		}

		filterdoNotShowTours();

		GmCXt.log(10, "DO NOT SHOW filter: " + tours.length, tours);

		tours = filterSnoozedTours();
		GmCXt.log(10, "SNOOZED TOURS ", tours);

		tours = filterMatchedTours(tours);
		GmCXt.log(10, "AFTER FILTERING ALREADY SHOWN TOURS ", tours);

		if (guideAutomationInProgress) {
			GmCXt.formatAndSendToParentWindowNoti('mgPlayerJSTest_action:track_notification_for_automation', {
				tours: toursClosedByUser,
				doNotShowTours: GmCXt.doNotShowTours,
				isVisible: false
			});
		}

		updateFilterNotification();

		if (GmCXt.inPlayer) {
			tours = GmCXt.sortToursByModifcationDate(tours);
		}

		tours = sortToursByAutoLaunch(tours);

		GmCXt.log(10, "SORTING BY auto launch first", tours);

		GmCXt.log(10, "SNOOZE filter: " + tours.length, tours);

		if (tours.length) {
			validateRules(tours);
		}
	}

	function updateFilterNotification() {
		GmCXt.updateNotificationContentScript(toursClosedByUser, tourIdArray);
	}

	function validateGuideRules(tours) {
		GmCXt.log(10, "VALIDATING GUIDE RULES");

		function queueRule(data, ruleDelayTime) {
			GmCXt.timeout(function() {
				GmCXt.ruleEngine.queue(data);
			}, ruleDelayTime);
		}

		function validRule(t, ruleDelayTime) {
			GmCXt.timeout(function() {
				onRulesProcessed({
					tour: t,
					valid: true
				});
			}, ruleDelayTime);
		}

		for (var i = 0, len = tours.length; i < len; i++) {

			var tour = tours[i];
			var s = tour.tour_settings;
			var rules = (s && s.rules && s.rules.length) ? s.rules : [];

			var waitTime = s.ruleDelayTime || 0;
			var timeout = GmCXt.t.ruleTimeOut25ms;
			if (GmCXt.checkTourCreatedBefore(s, 2021013001)) {
				timeout = GmCXt.t.ruleTimeOut10s;
			}

			if (tour.ruleValidated) { // useful in json player when the tours are returned after validation 
				validRule(tour, waitTime);
			} else {
				var obj = {
					tour: tour,
					rules: rules,
					timeoutVal: timeout,
					timeout: timeout,
					cb: onRulesProcessed,
					isTour: true,
					initiator: 'notif'
				};
				GmCXt.log(37, "QUEUED", obj);

				queueRule(obj, waitTime);
			}
		}
	}

	function segmentCb(t) {
		if (!GmCXt.isEmpty(t)) {
			validateGuideRules([t]);
		}
	}

	function validateRules(tours) {

		if (GmCXt.organization.admin_settings.guide_segmentation) {

			GmCXt.log(10, "VALIDATING GUIDE SEGMENTATION RULES");

			GmCXt.checkGuidesBasedOnSegment(tours, segmentCb, "notiSeg");

		} else {
			validateGuideRules(tours);
		}
	}

	function isDispFreqLimitReached(tour) {
		var retVal = false;
		if (!GmCXt.isEmpty(GmCXt.displayFrequencyGuides)) {
			var countObj = GmCXt.displayFrequencyGuides[parseInt(tour.tour_id)];
			if (GmCXt.isDefined(countObj)) {
				if (parseInt(countObj.version) === parseInt(tour.version)) {
					if (countObj.playedCount >= tour.tour_settings.displayFrequencyTimes) {
						return true;
					}
				}
			}
		}

		return retVal;
	}

	function sortToursByAutoLaunch(tours) {
		var autoArr = [];
		var otherArr = [];
		for (var i = 0; i < tours.length; i++) {
			var ts = tours[i].tour_settings;
			if (ts.isAutolaunch) {
				autoArr.push(tours[i]);
			} else {
				otherArr.push(tours[i]);
			}
		}

		return autoArr.concat(otherArr);
	}

	function filterSnoozedTours() {

		return tours.filter(function(tour) {

			if (toursClosedByUser[tour.tour_id]) {

				var tourCloseTime;
				var version = 1;
				var checkVersion = toursClosedByUser[tour.tour_id].toString().split(":");
				if (GmCXt.isDefined(checkVersion[1])) {
					tourCloseTime = parseInt(checkVersion[0]);
					version = parseInt(checkVersion[1]);
				} else {
					tourCloseTime = parseInt(toursClosedByUser[tour.tour_id]);
				}
				var currentTime = new Date().getTime();
				var customExpirytime = GmCXt.t.notifExp24;
				var nt = GmCXt.getAppSetting('notificationsTime');

				if (nt) {

					if (nt === '.5') nt = '0.5';

					var snoozeTime = parseFloat(nt);

					if (typeof nt !== 'number' && nt.includes("week")) {
						snoozeTime = GmCXt.convertWeeksToHours(snoozeTime);
					}

					customExpirytime = snoozeTime * GmCXt.t.snoozeNotif;
				}

				var expiryTime = tourCloseTime + customExpirytime;

				if (expiryTime - currentTime <= 0 || parseInt(tour.version) > version) {
					delete toursClosedByUser[tour.tour_id];
					return tour;
				} else {
					GmCXt.filterDontShowSnoozeTour.push(parseInt(tour.tour_id));
				}
			} else {
				return tour;
			}
		});
	}

	function filterdoNotShowTours() {
		tours = tours.filter(function(t) {
			if (GmCXt.doNotShowTours[t.tour_id]) {

				var oldGuideVer = GmCXt.doNotShowTours[t.tour_id];

				if (parseInt(t.version) > oldGuideVer) {
					if (!t.tour_settings.oneTimeNotification) {
						return t;
					}
				}
			} else return t;

		});
	}

	function updateNotifTracking() {
		GmCXt.formatAndSendToParentWindowNoti("mgPlayerJSTest_action:update_notification_count_content_script", {
			count: matchedTours.length
		});
	}

	function displayNoneElement(elem) {
		mg$(elem).css({
			'display': 'none'
		});
	}

	function displayBlockElement(elem) {
		mg$(elem).css({
			'display': 'block'
		});
	}

	function updateMatchedTours(t) {

		delete t.ruleValidated;

		matchedTours.push(t);
		GmCXt.alreadyLoadedNotif.push(t);
		showNotification();
		GmCXt.trackerV1.trackPushNotification(t, 'display');
	}

	function getStepIndexFromTour(tour, step) {
		var stepIndex = 0;
		for (var i = 0; i < tour.steps.length; i++) {
			if (tour.steps[i].step_id === step.step_id) {
				stepIndex = i;
				break;
			}
		}

		return stepIndex;
	}

	function playOnboardingTour(index, tour, step, taskObj) {
		if (tour.tour_settings.tutorial_tour_type === 'tutorial') {
			GmCXt.storage().set({
				'tutorial_steps': []
			});
		}

		var stepIndex = 0;
		if (tour.steps.length === 0) {
			var d = {
				tour_id: tour.tour_id,
				category_id: tour.category_id,
				isPublic: tour.isPublic
			};
			var scope = angular.element(mg$("#main-container")).scope();
			scope.getSteps(d).then(function(tour) {
				GmCXt.log(39, "visible OnBoarding guide details ", tour.steps);
				tours[0].steps = tour.steps;
				if (step) {
					stepIndex = getStepIndexFromTour(tour, step);
				}
				showTutorialHtml(index, stepIndex, taskObj);
			});
		} else {
			GmCXt.isLastStepPlayedOnCreateTutGuide = false;
			GmCXt.pdfPlayedOnUploadTut = false;
			GmCXt.fullPdfPlayedOnUploadTutGuide = false;
			GmCXt.pdfPlayedOnUploadTutNewTab = false;

			if (step) {
				stepIndex = getStepIndexFromTour(tour, step);
			}
			showTutorialHtml(index, stepIndex, taskObj);
		}

	}

	function onRulesProcessed(r) {

		if (r.valid) {
			updateMatchedTours(r.tour);
		}
	}

	function showNotification() {
		// gss - notification - panel
		showPopup(0);
		if (matchedTours.length === 1) {
			displayNoneElement('.mgPlayerJSTest_btn-next');
			displayNoneElement('.mgPlayerJSTest_btn-prev');
		}

		if (matchedTours.length > 1) {
			displayBlockElement('.mgPlayerJSTest_btn-next');
			displayBlockElement('.mgPlayerJSTest_btn-prev');
			disableArrow('.mgPlayerJSTest_btn-prev');
		}
	}

	function showPopup(index) {

		GmCXt.log(10, "SHOWING notifications", matchedTours);

		var tour = matchedTours[index];

		var tourStr = GmCXt.getOverlayToursHtml(tour, index, isPreview);
		var autoPlayTour = false;
		var singleTour = false;

		if (matchedTours.length === 1) {
			singleTour = true;
			var tourSetting = matchedTours[0].tour_settings;
			if (!guideAutomationInProgress) {
				autoPlayTour = tourSetting.isAutolaunch;
			}

			GmCXt.log(10, "IS AUTO LAUNCH? " + autoPlayTour);
		}

		if (!isAutolaunchTriggered) {
			localStorage.setItem(GmCXt.storagePrefix + 'autoLaunchTour', 0);

			if (autoPlayTour) {
				playAutoLaunch();
			} else {
				showNotifHtml(tourStr, index, 0);
				if (guideAutomationInProgress) {
					GmCXt.formatAndSendToParentWindowNoti('mgPlayerJSTest_action:track_notification_for_automation', {
						tours: matchedTours,
						isVisible: true
					});
				}
			}
		}
	}

	function showNotifHtml(tourStr, index, stepIndex) {
		var ts = GmCXt.parseJSON(matchedTours[index].tour_settings);

		if ((ts.videoNotification && matchedTours[index].video_url) ||
			(matchedTours[index].videoNotification && isPreview)) {

			var videoUrl = matchedTours[index].video_url;

			var orgVideoUrl = videoUrl + GmCXt.getCdnSign();

			videoUrl = GmCXt.getUrlWithLang(videoUrl);

			GmCXt.checkAssetUrl(videoUrl, orgVideoUrl, function(url) {
				displayNotifHtml(tourStr, index, stepIndex, url);
			});
		} else {
			displayNotifHtml(tourStr, index, stepIndex);
		}

		GmCXt.timeout(function() {
			mg$("#mgPlayerJSTest_btn-single-notif-dont-show-again").focus();
		}, 500);

	}

	function displayNotifHtml(tourStr, index, stepIndex, videoUrl) {
		GmCXt.showNotificationHtml(isPageClicked);
		var html = getNotifHtml(tourStr, index, stepIndex, videoUrl);

		// Let the Notifications render when automation is running
		if (GmCXt.stopNotification(isPreview) && !guideAutomationInProgress) {
			return;
		}

		GmCXt.removeNotif();
		mg$("body").append(html);

		bindThemeColor();

		addEvents();
		mg$("#mgPlayerJSTest_single-guide-play-icon-svg").html(GmCXt.svgs.notification_guide_play);
		mg$("#mgPlayerJSTest_push-not-play-icon-svg").html(GmCXt.svgs.push_not_single_play);
		mg$(".mgPlayerJSTest_btn-prev").html(GmCXt.svgs.push_prev);
		mg$(".mgPlayerJSTest_btn-next").html(GmCXt.svgs.push_prev);
		mg$("#mgPlayerJSTest_push-not-overlay-close").html(GmCXt.svgs.overlay_tour_popup_close);

		addStepPrevNext(index, stepIndex);

		GmCXt.timeout(function() {
			mg$('.mgPlayerJSTest_btn-next').focus();
			if (GmCXt.accessibility) {
				mg$(".mgPlayerJSTest_push-notification-btn-wrapper").addClass("mgPlayerJSTest_accessibility-theme");
				mg$(".mgPlayerJSTest_single-guide-play-icon").addClass("mgPlayerJSTest_accessibility-theme");
				mg$(".mgPlayerJSTest_push-play-icon").addClass("mgPlayerJSTest_ass-default-btn");
			}
		}, 500);
	}

	function downloadFile(url) {
		window.open(url, '_blank');
	}

	function showTutorialHtml(index, stepIndex, taskObj) {
		var tour = matchedTours[index];
		var stepSett = matchedTours[index].steps[stepIndex].step_settings;

		if (GmCXt.stopNotification(isPreview)) {
			return;
		}

		if (tour.tour_settings.tutorial_tour_type === 'upload') {
			if (stepSett.tutorialUploadMode === 'new_tab' || GmCXt.getURLMediaType(stepSett.tutorialUploadUrl) !== "pdf") {
				var tutUrl = stepSett.tutorialUploadUrl;
				if (tutUrl.indexOf(GmCXt.conf.cdnStorage) !== -1) {
					tutUrl = stepSett.tutorialUploadUrl + GmCXt.getCdnSign();
				}
				downloadFile(tutUrl);
				GmCXt.showSurveyForTutorial(tour);
				GmCXt.closeNotificationPopupSidePanel();
				checkTaskListComplete(taskObj);
				var source = "push_notification";
				if (taskObj && taskObj.taskId) {
					GmCXt.formatAndSendToParentWindowNoti('mgPlayerJSTest_action:close_app_panel', {});
					source = "task_list";
				}
				GmCXt.pdfPlayedOnUploadTutNewTab = true;
				GmCXt.trackerV1.trackTutGuide(tour, "upload_tutorial_guide_new_tab", source, taskObj.taskId);

			} else {
				GmCXt.pdfPlayedOnUploadTut = true;
				GmCXt.injectPDFJS().then(function() {
					GmCXt.openPdf(stepSett.tutorialUploadUrl + GmCXt.getCdnSign(), tour, taskObj);
				});

				mg$('.mgPlayerJSTest_media-player-panel').attr('style', 'width: ' + stepSett.tutorialWidth + '% !important; height: ' + stepSett.tutorialHeight + '% !important;');
				if (taskObj && taskObj.taskId) {
					mg$('.mgPlayerJSTest_media-player-panel').addClass("mgPlayerJSTest_play-from-task-player");
				}
			}
			markTaskListGuideComplete(taskObj);
		} else {
			GmCXt.showNotificationHtml(isPageClicked, true);

			var html = getTutorialNotifTemplateMG(index, stepIndex);

			GmCXt.removeNotif();

			mg$("body").append(html);

			var stepSett = matchedTours[index].steps[stepIndex].step_settings;

			if (stepSett.tutorialHeight && stepSett.tutorialWidth) {
				mg$('.mgPlayerJSTest_overlay-tours-popup').attr('style', 'width: ' + stepSett.tutorialWidth + '% !important; height: ' + stepSett.tutorialHeight + '% !important;');
			}

			mg$('.mgPlayerJSTest_push-notif-tg-bg').css('background', GmCXt.getAppSetting('tutorialBgColor'));

			var tutorialTheme = GmCXt.getAppSetting('tutorial_guide');

			if (tutorialTheme) {
				mg$('.mgPlayerJSTest_overlay-tours-popup.mgPlayerJSTest_push-notification-tg-container').css({
					'background': GmCXt.getAppSetting('tutorialBgColor'),
					'border-color': tutorialTheme.outerBox.border_color,
					'border-radius': tutorialTheme.outerBox.border_radius + 'px ',
					'border-width': tutorialTheme.outerBox.border_width + 'px '
				});

				if (tutorialTheme.outerBox.shadow.inset) {
					mg$('.mgPlayerJSTest_push-notif-tg-bg').css({
						'box-shadow': tutorialTheme.outerBox.shadow.color + ' ' + tutorialTheme.outerBox.shadow.horizontal + 'px ' + tutorialTheme.outerBox.shadow.vertical + 'px ' + tutorialTheme.outerBox.shadow.blur + 'px ' + tutorialTheme.outerBox.shadow.spreadRadius + 'px' + (tutorialTheme.outerBox.shadow.inset ? ' inset' : '')
					});
				} else {
					mg$('.mgPlayerJSTest_overlay-tours-popup.mgPlayerJSTest_push-notification-tg-container').css({
						'box-shadow': tutorialTheme.outerBox.shadow.color + ' ' + tutorialTheme.outerBox.shadow.horizontal + 'px ' + tutorialTheme.outerBox.shadow.vertical + 'px ' + tutorialTheme.outerBox.shadow.blur + 'px ' + tutorialTheme.outerBox.shadow.spreadRadius + 'px'
					});
				}

				mg$('.mgPlayerJSTest_push-notification-header').attr('style',
					'background:' + tutorialTheme.titleBgColor + ' !important;' +
					'border-top-right-radius:' + tutorialTheme.outerBox.border_radius + 'px !important;' +
					'border-top-left-radius:' + tutorialTheme.outerBox.border_radius + 'px !important;'
				);

				mg$('.mgPlayerJSTest_push-notif-tg-btn-wrapper').attr('style',
					'border-bottom-right-radius:' + tutorialTheme.outerBox.border_radius + 'px !important;' +
					'border-bottom-left-radius:' + tutorialTheme.outerBox.border_radius + 'px !important;'
				);

				mg$('.mgPlayerJSTest_btn-next-step').attr('style',
					'background:' + tutorialTheme.nextBtn.bgColor + ' !important;' +
					'border-color:' + tutorialTheme.nextBtn.border_color + ' !important;' +
					'border-radius:' + tutorialTheme.nextBtn.border_radius + 'px !important;' +
					'border-width:' + tutorialTheme.nextBtn.border_width + 'px !important;' +
					'color:' + tutorialTheme.nextBtn.color + ' !important;' +
					'font-size:' + tutorialTheme.nextBtn.font_size + ' !important;' +
					'padding-bottom:' + tutorialTheme.nextBtn.padding.bottom + 'px !important;' +
					'padding-left:' + tutorialTheme.nextBtn.padding.left + 'px !important;' +
					'padding-right:' + tutorialTheme.nextBtn.padding.right + 'px !important;' +
					'padding-top:' + tutorialTheme.nextBtn.padding.top + 'px !important;'
				);

				mg$('.mgPlayerJSTest_btn-prev-step').attr('style',
					'background:' + tutorialTheme.prevBtn.bgColor + ' !important;' +
					'border-color:' + tutorialTheme.prevBtn.border_color + ' !important;' +
					'border-radius:' + tutorialTheme.prevBtn.border_radius + 'px !important;' +
					'border-width:' + tutorialTheme.prevBtn.border_width + 'px !important;' +
					'color:' + tutorialTheme.prevBtn.color + ' !important;' +
					'font-size:' + tutorialTheme.prevBtn.font_size + ' !important;' +
					'padding-bottom:' + tutorialTheme.prevBtn.padding.bottom + 'px !important;' +
					'padding-left:' + tutorialTheme.prevBtn.padding.left + 'px !important;' +
					'padding-right:' + tutorialTheme.prevBtn.padding.right + 'px !important;' +
					'padding-top:' + tutorialTheme.prevBtn.padding.top + 'px !important;'
				);
			}

			mg$(".mgPlayerJSTest_tg-close-btn").html(GmCXt.svgs.overlay_tour_popup_close);
			mg$(".mgPlayerJSTest_push-notification-tutorial").html(GmCXt.svgs.tutorial);

			addEvents(taskObj);
			addStepPrevNext(index, stepIndex);

			GmCXt.timeout(function() {
				mg$(".mgPlayerJSTest_tg-close-btn").focus();
			}, 500);
		}

	}

	function addStepPrevNext(index, stepIndex) {
		var tour = matchedTours[index];
		if (GmCXt.isOnboarding(tour)) {
			var stepsLength = tour.steps.length;
			if (stepsLength === 1) {
				displayNoneElement('.mgPlayerJSTest_btn-prev-step');
				displayBlockElement('.mgPlayerJSTest_btn-next-step');
			}

			if (stepsLength > 1) {
				displayBlockElement('.mgPlayerJSTest_btn-next-step');
				displayBlockElement('.mgPlayerJSTest_btn-prev-step');
				disableButton('.mgPlayerJSTest_btn-prev-step');
			}
			if (stepIndex > 0) {
				enableButton('.mgPlayerJSTest_btn-prev-step');
			}
			if (stepsLength === stepIndex + 1) {
				GmCXt.isLastStepPlayedOnCreateTutGuide = true;
				mg$('.mgPlayerJSTest_btn-next-step').text(GmCXt.label.close);
			}
		}
	}

	function getNotifHtml(tStr, index, stepIndex, videoUrl) {
		var html = '';
		var ts = GmCXt.parseJSON(matchedTours[index].tour_settings);

		if (GmCXt.isWB()) {
			html = getDesignForWB(tStr, videoUrl);

		} else if ((ts.videoNotification && matchedTours[index].video_url) ||
			(matchedTours[index].videoNotification && isPreview)) {

			html = getSingleVideoNotifTemplateMG(index, videoUrl);
		} else {
			html = getSingleNotifTemplateMG(tStr, index);
		}

		return html;
	}

	function playAutoLaunch() {
		GmCXt.log(10, "AUTO LAUNCH guide");
		localStorage.setItem(GmCXt.storagePrefix + 'autoLaunchTour', matchedTours[0].tour_id);
		isAutolaunchTriggered = true;
		playGuide(null, 0);
	}

	function hidePopup() {
		mg$(".mgPlayerJSTest_overlay-tours-popup").hide();
		mg$(".mgPlayerJSTest_overlay-container").hide();
	}

	function getSingleVideoNotifTemplate(tourStr) {
		var html =
			"<div class='mgPlayerJSTest_overlay-container'></div>" +
			"<div class='mgPlayerJSTest_overlay-tours-popup mgPlayerJSTest_overlay-single-tour-popup'>" +
			"<div class='mgPlayerJSTest_close-button mgPlayerJSTest_icons-hover-effect mgPlayerJSTest_inline-block-vm'>" +
			"<button id='mgPlayerJSTest_push-not-overlay-close' class='mgPlayerJSTest_lbl-btn' aria-label='push notification overlay close' ></button>" +
			"<div class='mgPlayerJSTest_title-tooltip-wrapper mgPlayerJSTest_position-bottom-left'>" +
			"<div class='mgPlayerJSTest_tooltip-title'>" + GmCXt.label.close + "</div>" +
			"</div>" +
			'</div>' +
			"<div class='mgPlayerJSTest_overlay-single-guide-content-wrapper'>" +
			"<div class='mgPlayerJSTest_overlay-thumbnails-wrapper mgPlayerJSTest_overlay-single-thumbnail-wrapper'>" +
			"<div class='mgPlayerJSTest_overlay-container-logo'>" + GmCXt.getPopupLogo() + "</div>" +
			"</div>" +
			"<div class='mgPlayerJSTest_overlay-guide-content-wrapper'>" +
			"<div class='mgPlayerJSTest_overlay-guide-box'>" +
			"<div class='mgPlayerJSTest_overlay-guide-title'>" + GmCXt.escapeHtml(matchedTours[0].tour_title) + "</div>" +
			"</div>" +
			"<div class='mgPlayerJSTest_guide-video-wrapper'>" +
			"<video controls autoplay controlsList='nodownload' disablePictureInPicture>" +
			"<source src='" + matchedTours[0].video_url + GmCXt.user.cdn_signature + "' type='video/mp4'>" +
			"</video>" +
			"</div>" +
			"</div>" +
			"<div class='mgPlayerJSTest_popup-button-wrapper'>" +
			"<button class='mgPlayerJSTest_never-show-again-button mgPlayerJSTest_lbl-btn' aria-label='push notification never show again' >" + GmCXt.label.dontShowAgain + "</button>" +
			"</div>" +
			"</div>" +
			"</div>";
		return html;
	}

	function getSingleNotifTemplate(tourStr) {
		var html =
			"<div class='mgPlayerJSTest_overlay-container'></div>" +
			"<div class='mgPlayerJSTest_overlay-tours-popup mgPlayerJSTest_overlay-single-tour-popup'>" +
			"<div class='mgPlayerJSTest_close-button mgPlayerJSTest_icons-hover-effect mgPlayerJSTest_inline-block-vm'>" +
			"<button id='mgPlayerJSTest_push-not-overlay-close' class='mgPlayerJSTest_lbl-btn' aria-label='push notification overlay close'></button>" +
			"<div class='mgPlayerJSTest_title-tooltip-wrapper mgPlayerJSTest_position-bottom-left'>" +
			"<div class='mgPlayerJSTest_tooltip-title'>" + GmCXt.label.close + "</div>" +
			"</div>" +
			'</div>' +
			"<div class='mgPlayerJSTest_overlay-single-guide-content-wrapper'>" +
			"<div class='mgPlayerJSTest_overlay-thumbnails-wrapper mgPlayerJSTest_overlay-single-thumbnail-wrapper'>" +
			"<div class='mgPlayerJSTest_overlay-container-logo'>" + GmCXt.getPopupLogo() + "</div>" +
			"</div>" +
			"<div class='mgPlayerJSTest_overlay-guide-content-wrapper'>" +
			tourStr +
			"</div>" +
			"<div class='mgPlayerJSTest_popup-button-wrapper'>" +
			"<button class='mgPlayerJSTest_lbl-btn mgPlayerJSTest_never-show-again-button' aria-label='push notification never show again'>" + GmCXt.label.dontShowAgain + "</button>" +
			"</div>" +
			"</div>" +
			"</div>";
		return html;
	}

	function getSingleNotifTemplateMG(tourStr, index) {
		var previewClass = '';
		var previewBtn = '';
		if (isPreview) {
			previewClass = ' mgPlayerJSTest_forbidden';
			previewBtn = "<button id='mgPlayerJSTest_push-not-overlay-close' class='mgPlayerJSTest_lbl-btn mgPlayerJSTest_notification-common-btn mgPlayerJSTest_close-preview-btn' aria-label='push notification overlay close'></button>";
		}

		var html =
			"<div class='mgPlayerJSTest_overlay-container'></div>" +
			"<div class='mgPlayerJSTest_overlay-tours-popup mgPlayerJSTest_push-notification-container mgPlayerJSTest_push-notification-multi-guides'>" +
			previewBtn +
			"<button id='mgPlayerJSTest_btn-single-notif-prev' class='mgPlayerJSTest_lbl-btn mgPlayerJSTest_btn-prev' aria-label='push notification previous button' ></button>" +
			"<button id='mgPlayerJSTest_btn-single-notif-next' class='mgPlayerJSTest_lbl-btn mgPlayerJSTest_btn-next' aria-label='push notification next button'></button>" +
			"<div class='mgPlayerJSTest_push-notification-header'>" +
			"<h3 class='mgPlayerJSTest_push-notification-title mgPlayerJSTest_no-margin mgPlayerJSTest_font-weight-normal'>" + GmCXt.label.notificationHeader + "</h3>" +
			"<div class='mgPlayerJSTest_push-notification-brand-logo'>" + GmCXt.getPopupLogo() + "</div>" +
			"</div>" +
			"<div class='mgPlayerJSTest_push-notification-content-wrapper mgPlayerJSTest_position-relative mgPlayerJSTest_position-center'>" +
			tourStr +
			"<div class='mgPlayerJSTest_multi-push-carousels-wrapper'></div>" +
			"</div>" +
			"<div class='mgPlayerJSTest_push-notification-btn-wrapper'>";

		var ts = matchedTours[index].tour_settings;
		if (ts.displayFrequency && !isPreview) {
			html += "<button id='mgPlayerJSTest_btn-single-close' class='mgPlayerJSTest_lbl-btn mgPlayerJSTest_notification-common-btn mgPlayerJSTest_btn-watch-close' tourIndex='" + index + "' aria-label='push notification close button'>" +
				GmCXt.label.close + "</button>" +
				"</div>";

		} else {
			html += "<button id='mgPlayerJSTest_btn-single-notif-dont-show-again' class='mgPlayerJSTest_lbl-btn mgPlayerJSTest_notification-common-btn mgPlayerJSTest_btn-dont-show-again mgPlayerJSTest_never-show-again-button" + previewClass + "' aria-label='" + GmCXt.label.dontShowAgain + "'>" + GmCXt.label.dontShowAgain + "</button>" +
				"<button id='mgPlayerJSTest_btn-single-notif-watch-later' class='mgPlayerJSTest_lbl-btn mgPlayerJSTest_notification-common-btn mgPlayerJSTest_btn-watch-later" + previewClass + "' aria-label='" + GmCXt.label.watchLater + "'>" + GmCXt.label.watchLater + "</button>" +
				"</div>";
		}
		html += "</div>";

		return html;
	}

	function getSingleVideoNotifTemplateMG(index, videoUrl) {
		var previewClass = '';
		var previewBtn = '';
		var poster_url = '';
		var src = '';
		if (isPreview) {
			previewClass = ' mgPlayerJSTest_forbidden';
			previewBtn = "<button id='mgPlayerJSTest_push-not-overlay-close' class='mgPlayerJSTest_lbl-btn mgPlayerJSTest_close-preview-btn' aria-label='push notification overlay close'></button>";
			poster_url = GmCXt.getDefaultGuideIcon();
		}

		if (videoUrl) src = videoUrl;

		var html =
			"<div class='mgPlayerJSTest_overlay-container'></div>" +
			"<div class='mgPlayerJSTest_overlay-tours-popup mgPlayerJSTest_push-notification-container mgPlayerJSTest_push-notification-video-container'>" +
			previewBtn +
			"<button id='mgPlayerJSTest_btn-single-vid-notif-prev' class='mgPlayerJSTest_lbl-btn mgPlayerJSTest_btn-prev' aria-label='push notification previous button'></button>" +
			"<button id='mgPlayerJSTest_btn-single-vid-notif-next' class='mgPlayerJSTest_lbl-btn mgPlayerJSTest_btn-next' aria-label='push notification next button'></button>" +
			"<div class='mgPlayerJSTest_push-notification-header'>" +
			"<h3 class='mgPlayerJSTest_push-notification-title mgPlayerJSTest_no-margin mgPlayerJSTest_font-weight-normal'>" + GmCXt.label.notificationHeader + "</h3>" +
			"<div class='mgPlayerJSTest_push-notification-brand-logo mgPlayerJSTest_push-notification-guide-info-overlay' ' tourIndex='" + index + "'>" + GmCXt.getPopupLogo() + "</div>" +
			"</div>" +
			"<div class='mgPlayerJSTest_push-notification-content-wrapper mgPlayerJSTest_position-relative mgPlayerJSTest_video-content-wrapper mgPlayerJSTest_position-center'>" +
			"<div class='mgPlayerJSTest_push-notification-guide-info-wrapper mgPlayerJSTest_video-info-wrapper'>" +
			"<video controls autoplay controlsList='nodownload' disablePictureInPicture poster=" + poster_url + ">" +
			"<source src='" + src + "' type='video/mp4'>" +
			"</video>" +
			"</div>" +
			"<div class='mgPlayerJSTest_push-notification-video-title mgPlayerJSTest_inline-block-vm'>" + GmCXt.escapeHtml(matchedTours[index].tour_title) + "</div>" +
			"</div>" +
			"<div class='mgPlayerJSTest_push-notification-btn-wrapper'>";

		var ts = matchedTours[index].tour_settings;
		if (ts.displayFrequency && !isPreview) {
			html += "<button id='mgPlayerJSTest_btn-close' class='mgPlayerJSTest_lbl-btn mgPlayerJSTest_notification-common-btn mgPlayerJSTest_btn-watch-close' aria-label='push notification close button' tourIndex='" + index + "'>" + GmCXt.label.close + "</button>" +
				"</div>";

		} else {
			html += "<button id='mgPlayerJSTest_btn-single-vid-notif-dont-show-again' class='mgPlayerJSTest_lbl-btn mgPlayerJSTest_notification-common-btn mgPlayerJSTest_btn-dont-show-again mgPlayerJSTest_never-show-again-button" + previewClass + "' aria-label='" + GmCXt.label.dontShowAgain + "'>" + GmCXt.label.dontShowAgain + "</button>" +
				"<button id='mgPlayerJSTest_btn-single-vid-notif-watch-later' class='mgPlayerJSTest_lbl-btn mgPlayerJSTest_notification-common-btn mgPlayerJSTest_btn-watch-later" + previewClass + "' aria-label='" + GmCXt.label.watchLater + "'>" + GmCXt.label.watchLater + "</button>" +
				"</div>";
		}

		html += "</div>";

		return html;
	}

	function getTutorialStepBanner(step, poster_url) {
		var brandHtml = '';
		if (step.step_video > 0 && step && step.step_video_url) {
			brandHtml = "<div class='mgPlayerJSTest_push-notification-guide-info-wrapper mgPlayerJSTest_video-info-wrapper'>" +
				"<video controls autoplay controlsList='nodownload' disablePictureInPicture poster=" + poster_url + ">" +
				"<source src='" + step.step_video_url + GmCXt.getCdnSign() + "' type='video/mp4'>" +
				"</video></div>";

		} else if (step.image_url.indexOf('default') < 0) {
			brandHtml = "<div class='mgPlayerJSTest_push-notification-guide-info-wrapper mgPlayerJSTest_img-info-wrapper'>" +
				"<img class='mgPlayerJSTest_push-notif-tg-image' alt='" + step.step_title + "' src='" + step.image_url + GmCXt.getCdnSign() + "' /></div>";
		}
		return brandHtml;
	}

	function getTutorialNotifTemplateMG(index, stepIndex) {
		var poster_url = '';
		var tempClass = '';

		var tour = matchedTours[index];
		var step = tour.steps[stepIndex];
		var dynamicHtml = getTutorialStepBanner(step, poster_url);
		var stepText = GmCXt.replaceVariableWithValue(GmCXt.updateOrgAndAddSignature(step.step_description));

		if (dynamicHtml) {
			tempClass = 'mgPlayerJSTest_min-content-wrapper';
		}

		if (!GmCXt.isEmpty(step.step_title)) {
			stepText = step.step_title + step.step_description;
		}

		var tourTitle = tour.tour_title;
		if (tourTitle.length > 45) {
			tourTitle = tourTitle.substr(0, 45) + " ...";
		}
		var html =
			"<div class='mgPlayerJSTest_overlay-container'></div>" +
			"<div class='mgPlayerJSTest_overlay-tours-popup mgPlayerJSTest_push-notification-container mgPlayerJSTest_push-notification-video-container mgPlayerJSTest_push-notification-tg-container'>" +
			"<div class='mgPlayerJSTest_push-notification-header'>" +
			"<div class='mgPlayerJSTest_push-notification-title mgPlayerJSTest_push-notification-guide-info-overlay' ' tourIndex='" + index + "' ' stepIndex='" + stepIndex + "'>" +
			"<span id='mgPlayerJSTest_push-notification-tutorial' ></span>" + GmCXt.escapeHtml(tourTitle) +
			"</div>" +
			"<button class='mgPlayerJSTest_tg-close-btn mgPlayerJSTest_lbl-btn' aria-label='tutorial guide close button'></button>" +
			"</div>" +
			"<div class='mgPlayerJSTest_push-notification-content-wrapper mgPlayerJSTest_position-relative mgPlayerJSTest_video-content-wrapper mgPlayerJSTest_height-auto mgPlayerJSTest_push-notif-tg-bg'>" +
			dynamicHtml +
			"<div class='mgPlayerJSTest_push-notif-tg-content-wrapper mgPlayerJSTest_inline-block-vm " + tempClass + "'>" + stepText + "</div>" +
			"</div>" +
			"<div class='mgPlayerJSTest_push-notif-tg-btn-wrapper mgPlayerJSTest_display-flex mgPlayerJSTest_align-items-center mgPlayerJSTest_justify-content-space-between mgPlayerJSTest_push-notif-tg-bg'>" +
			"<div class='mgPlayerJSTest_step-count-wrapper'>" +
			"" + parseInt(stepIndex + 1) + "/" + tour.steps.length + "" +
			"</div>" +
			"<div class='mgPlayerJSTest_common-btn-wrapper mgPlayerJSTest_display-flex'>" +
			"<button class='mgPlayerJSTest_btn-prev-step' aria-label='tutorial guide previous button'>" + GmCXt.label.btnPrev + "</button>" +
			"<button class='mgPlayerJSTest_btn-next-step' aria-label='tutorial guide next button'>" + GmCXt.label.next + "</button>" +
			"</div>" +
			"</div>" +
			"</div>";

		return html;
	}

	function getSingleVideoNotifTemplateWB(tourStr, videoUrl) {
		var src = '';
		if (videoUrl) src = videoUrl;

		var html =
			"<div class='mgPlayerJSTest_overlay-container'></div>" +
			"<div class='mgPlayerJSTest_overlay-tours-popup mgPlayerJSTest_overlay-single-tour-popup'>" +
			"<div class='mgPlayerJSTest_close-button mgPlayerJSTest_icons-hover-effect mgPlayerJSTest_inline-block-vm'>" +
			"<button id='mgPlayerJSTest_push-not-overlay-close' class='mgPlayerJSTest_lbl-btn' aria-label='push notification overlay close'></button>" +
			"<div class='mgPlayerJSTest_title-tooltip-wrapper mgPlayerJSTest_position-bottom-left'>" +
			"<button class='mgPlayerJSTest_tooltip-title mgPlayerJSTest_lbl-btn'>" + GmCXt.label.close + "</button>" +
			"</div>" +
			'</div>' +
			"<div class='mgPlayerJSTest_overlay-single-guide-content-wrapper'>" +
			"<div class='mgPlayerJSTest_overlay-thumbnails-wrapper mgPlayerJSTest_wb-overlay-single-thumbnail-wrapper'>" +
			"<button class='mgPlayerJSTest_wb-never-show-again mgPlayerJSTest_never-show-again-button mgPlayerJSTest_wb-theme-text-color mgPlayerJSTest_lbl-btn' aria-label='" + GmCXt.label.dontShowAgain + "'>" + GmCXt.label.dontShowAgain + "</button>" +
			"</div>" +
			"</div>" +
			"<div class='mgPlayerJSTest_overlay-guide-content-wrapper'>" +
			"<div class='mgPlayerJSTest_overlay-guide-box'>" +
			"<div class='mgPlayerJSTest_overlay-guide-title'>" + GmCXt.escapeHtml(matchedTours[0].tour_title) + "</div>" +
			"</div>" +
			"<div class='mgPlayerJSTest_guide-video-wrapper mgPlayerJSTest_no-padding'>" +
			"<video width='450' controls controlsList='nodownload' disablePictureInPicture autoplay >" +
			"<source src='" + src + "' type='video/mp4' />" +
			"</video>" +
			"</div>" +
			"<div class='mgPlayerJSTest_wb-footer-wrapper mgPlayerJSTest_inline-block-vm'>" +
			"<div class='mgPlayerJSTest_wb-overlay-container-logo mgPlayerJSTest_inline-block-vm'>" +
			"<img class='mgPlayerJSTest_custom-image' alt='brand logo' src='" + GmCXt.brandLogo() + "' />" +
			"</div>" +
			"<div class='mgPlayerJSTest_clear'></div>" +
			"</div>" +
			"</div>" +
			"</div>" +
			"</div>";
		return html;
	}

	function getDesignForWB(tourStr, videoUrl) {
		var html;
		var ts = GmCXt.parseJSON(matchedTours[0].tour_settings);
		if (GmCXt.isWB() && ts.videoNotification && matchedTours[0].video_url) {
			html = getSingleVideoNotifTemplateWB(tourStr, videoUrl);
		} else {
			html = getSingleNotifTemplate(tourStr);
		}

		return html;
	}

	function addEvents(taskObj) {

		mg$(".mgPlayerJSTest_never-show-again-button").on("click", onDontShowAgainOneGuide);

		mg$(".mgPlayerJSTest_overlay-tour-box").on("click", playGuide);

		mg$(".mgPlayerJSTest_overlay-tour-box-small-thumbnails").on("click", playGuide);

		mg$(".mgPlayerJSTest_single-guide-play-icon").on("click", playGuide);

		mg$(".mgPlayerJSTest_overlay-tours-popup .mgPlayerJSTest_close-button").on("click", onClose);

		mg$(".mgPlayerJSTest_btn-watch-later").on("click", onClose);

		mg$(".mgPlayerJSTest_btn-prev").on('click', pushPrev);

		mg$(".mgPlayerJSTest_btn-next").on('click', pushNext);

		mg$(".mgPlayerJSTest_btn-prev-step").on('click', function(e) {
			pushPrevStep(e, taskObj);
		});

		mg$(".mgPlayerJSTest_btn-next-step").on('click', function(e) {
			pushNextStep(e, taskObj);
		});

		mg$(".mgPlayerJSTest_tg-close-btn").on("click", function(e) {
			closePreviewNotif(taskObj);
		});

		var tutorialContent = mg$(".mgPlayerJSTest_push-notif-tg-content-wrapper").html();

		if (tutorialContent && tutorialContent.indexOf("<a ") !== -1) {
			mg$('.mgPlayerJSTest_push-notif-tg-content-wrapper a').each(function() {
				mg$('.mgPlayerJSTest_push-notif-tg-content-wrapper a').on("click", function(e) {
					if (e.currentTarget.target && e.currentTarget.target !== '_blank') {
						e.preventDefault();
						e.stopPropagation();
						hidePopup();
						GmCXt.isTutorialLink = true;
						GmCXt.injectPDFJS().then(function() {
							GmCXt.openPdf(e.currentTarget.href);
						});

					}
				});
			});
		}


		if (isPreview) {
			mg$(".mgPlayerJSTest_close-preview-btn").on('click', closePreviewNotif);
		}

		mg$(".mgPlayerJSTest_btn-watch-close").on("click", closeDisplayFrequencyNotif);
	}

	function playGuide(e, index) {
		if (guideAutomationInProgress) {
			GmCXt.formatAndSendToParentWindowNoti('mgPlayerJSTest_action:stop_automation');
			return;
		}
		if (isPreview) {
			return;
		}

		if (index !== 0) {
			e.stopPropagation();
			index = this.attributes.tourIndex.value;
		}

		if (index < matchedTours.length) {

			var tour = matchedTours[index];

			if (tour.tour_settings.displayFrequency) {
				markDisplayFrequency(tour);
			}

			if (!GmCXt.isOnboarding(tour)) {
				GmCXt.trackerV1.trackPushNotification(tour, 'click');
			}

			var d = {
				tour_id: tour.tour_id,
				category_id: tour.category_id
			};

			var scope = angular.element(mg$("#main-container")).scope();
			scope.getSteps(d).then(function(_tour) {
				hidePopup();

				if (GmCXt.stopNotification(isPreview)) {
					return;
				}
				if (!isAutolaunchTriggered && !tour.tour_settings.displayFrequency) {
					markAsDoNotShow(tour);
				}
				if (GmCXt.isOnboarding(_tour)) {
					matchedTours[index].steps = _tour.steps;
					playOnboardingTour(index, _tour);
				} else {
					GmCXt.formatAndSendToParentWindowNoti('mgPlayerJSTest_action:play_guide_from_notification', {
						tour: _tour,
						isAutolaunchTriggered: isAutolaunchTriggered
					});
				}
			});
		}
	}

	function disableArrow(selector) {
		mg$(selector).css({
			"pointer-events": "none",
			"opacity": ".5"
		});
	}

	function enableArrow(selector) {
		mg$(selector).css({
			"pointer-events": "",
			"opacity": "1"
		});
	}

	function disableButton(selector) {
		mg$(selector).css({
			"pointer-events": "none",
			"opacity": ".5",
		});
	}

	function enableButton(selector) {
		mg$(selector).css({
			"pointer-events": "",
			"opacity": "1"
		});
	}

	function updateNotification(index, stepIndex) {
		var tour = matchedTours[index];
		var tourStr = GmCXt.getOverlayToursHtml(tour, index, isPreview);
		showNotifHtml(tourStr, index, stepIndex);

	}

	function pushNext(e) {
		var index = getCurrentindex() + 1;
		updateNotification(index, 0);
		updateArrowOnNext(index);
		mg$('.mgPlayerJSTest_btn-next').focus();
	}

	function updateArrowOnNext(index) {
		if (matchedTours.length === index + 1) {
			disableArrow('.mgPlayerJSTest_btn-next');
			mg$('.mgPlayerJSTest_btn-prev').focus();
		}
		enableArrow('.mgPlayerJSTest_btn-prev');
	}

	function pushPrev(e) {
		var index = getCurrentindex() - 1;
		updateNotification(index, 0);
		updateArrowOnPrev(index);
	}

	function updateArrowOnPrev(index) {
		if (index === 0) {
			disableArrow('.mgPlayerJSTest_btn-prev');
			if (matchedTours.length > 1) {
				enableArrow('.mgPlayerJSTest_btn-next');
			}
		}
	}

	function pushNextStep(e, taskObj) {
		var tIndex = getCurrentindex();
		var stepIndex = getStepCurrentindex() + 1;
		var tour = matchedTours[tIndex];

		if (tour) {
			if (tour.steps.length === stepIndex) {
				markTaskListGuideComplete(taskObj);
				GmCXt.closeNotificationPopupSidePanel();
				if (GmCXt.isPlayer() && tour.tour_type.indexOf('onboarding_tour') !== -1 && tour.tour_settings.sentiment && tour.tour_settings.sentiment.sentimentCode) {
					var data = {
						tour: tour,
						guideNotCompleted: false
					};
					GmCXt.formatAndSendToParentWindowNoti("mgPlayerJSTest_action:close_app_panel", {});
					GmCXt.formatAndSendToParentWindowNoti('mgPlayerJSTest_action:getSurveyScreen', data);
				}

				var source = "push_notification";
				if (taskObj && taskObj.taskId) {
					source = "task_list";
				}

				recordEvent(tour.steps[tour.steps.length - 1]).then(function() {
					GmCXt.trackerV1.trackTutGuide(tour, "create_tutorial_guide", source, taskObj.taskId);
				});
			} else {
				showTutorialHtml(tIndex, stepIndex, taskObj);
				recordEvent(tour.steps[stepIndex - 1]).then(function() {});
			}
		}

	}

	function recordEvent(step) {
		return new Promise(function(resolve, reject) {
			GmCXt.storage().get(['tutorial_steps']).then(function(st) {
				st.tutorial_steps.push(step);
				GmCXt.storage().set({
					'tutorial_steps': st.tutorial_steps
				});
				resolve();
			});
		});
	}

	function pushPrevStep(e, taskObj) {
		var tIndex = getCurrentindex();
		var stepIndex = getStepCurrentindex() - 1;
		showTutorialHtml(tIndex, stepIndex, taskObj);
	}

	function updateMatchedTour(index) {
		matchedTours.splice(index, 1);
		if (matchedTours.length === 0) {
			GmCXt.closeNotificationPopupSidePanel(true);
		} else {
			showNotification();
		}
	}

	function onDontShowAgainOneGuide() {
		if (guideAutomationInProgress) {
			GmCXt.formatAndSendToParentWindowNoti('mgPlayerJSTest_action:stop_automation');
			return;
		}
		if (!isPreview) {
			var tIndex = getCurrentindex();

			if (matchedTours[tIndex].tour_settings.displayFrequency) {
				markDisplayFrequency(matchedTours[tIndex]);
			} else {
				markAsDoNotShow(matchedTours[tIndex]);
			}
			updateMatchedTour(tIndex);
		}
	}

	function markDisplayFrequency(tour) {

		if (tour) {
			if (GmCXt.displayFrequencyGuides[tour.tour_id] && parseInt(tour.version) === parseInt(GmCXt.displayFrequencyGuides[tour.tour_id].version)) {
				GmCXt.displayFrequencyGuides[tour.tour_id].playedCount++;
			} else {
				GmCXt.displayFrequencyGuides[tour.tour_id] = {};
				GmCXt.displayFrequencyGuides[tour.tour_id].version = parseInt(tour.version);
				GmCXt.displayFrequencyGuides[tour.tour_id].playedCount = 1;
			}

			var data = {
				tours: GmCXt.displayFrequencyGuides
			};
			GmCXt.formatAndSendToParentWindowNoti('mgPlayerJSTest_action:update_notification_data_content_script_display_frequency', data);

			if (isDispFreqLimitReached(tour)) {
				markAsDoNotShow(tour);
			}
		}

	}

	function markAsDoNotShow(tour) {
		if (tour) {
			GmCXt.doNotShowTours[tour.tour_id] = parseInt(tour.version);
			var data = {
				tours: GmCXt.doNotShowTours
			};
			GmCXt.formatAndSendToParentWindowNoti('mgPlayerJSTest_action:update_notification_data_content_script_donot_show', data);
		}
	}

	function onDontShowAgain() {
		onDontShowAgainOneGuide();
	}

	function getCurrentindex() {
		return parseInt(mg$('.mgPlayerJSTest_push-notification-guide-info-overlay').attr('tourIndex')) || 0;
	}

	function getStepCurrentindex() {
		return parseInt(mg$('.mgPlayerJSTest_push-notification-guide-info-overlay').attr('stepIndex')) || 0;
	}

	function onClose() {
		if (guideAutomationInProgress) {
			GmCXt.formatAndSendToParentWindowNoti('mgPlayerJSTest_action:stop_automation');
			return;
		}

		if (!isPreview) {
			var index = getCurrentindex();
			var tour = matchedTours[index];
			if (tour.tour_settings.oneTimeNotification) {
				onDontShowAgainOneGuide();
			} else {

				if (tour.tour_settings.displayFrequency) {
					markDisplayFrequency(tour);

				} else {

					var msg = GmCXt.label.pushSnoozeMsg + ' ';
					var data = {
						tour: tour,
						msg: msg
					};
					GmCXt.formatAndSendToParentWindowNoti('mgPlayerJSTest_action:update_notification_data_content_script_snooze_tours', data);

				}
				updateMatchedTour(index);
			}
		}
	}

	function closePreviewNotif(taskObj) {
		var tIndex = getCurrentindex();
		var stepIndex = getStepCurrentindex() + 1;
		var tour = matchedTours[tIndex];
		checkTaskListComplete(taskObj);
		GmCXt.removeNotif();
		GmCXt.openSidePanelNotificaton();
		var source = "push_notification";
		if (taskObj && taskObj.taskId) {
			source = "task_list";
		}
		recordEvent(tour.steps[stepIndex - 1]).then(function() {
			GmCXt.trackerV1.trackTutGuide(tour, "create_tutorial_guide", source, taskObj.taskId);
		});
		var os = GmCXt.getOrgSettings();
		if (GmCXt.isPlayer() && stepIndex < tour.steps.length) {
			if (os && os.exitSentiment) {
				var data = {
					tour: tour,
					guideNotCompleted: true
				};
				GmCXt.formatAndSendToParentWindowNoti("mgPlayerJSTest_action:close_app_panel", {});
				GmCXt.formatAndSendToParentWindowNoti('mgPlayerJSTest_action:showSurveyScreen', data);
			}
		} else if (GmCXt.isPlayer() && stepIndex === tour.steps.length) {
			if (tour.tour_type.indexOf('onboarding_tour') !== -1 && tour.tour_settings.sentiment && tour.tour_settings.sentiment.sentimentCode) {
				var data = {
					tour: tour,
					guideNotCompleted: false
				};
				GmCXt.formatAndSendToParentWindowNoti("mgPlayerJSTest_action:close_app_panel", {});
				GmCXt.formatAndSendToParentWindowNoti('mgPlayerJSTest_action:getSurveyScreen', data);
			}
		}
	}

	function checkTaskListComplete(taskObj) {
		if (taskObj && taskObj.isComplete === '0') {
			var tIndex = getCurrentindex();
			var stepIndex = getStepCurrentindex() + 1;
			var tour = matchedTours[tIndex];
			if (tour.steps.length === stepIndex) {
				markTaskListGuideComplete(taskObj);
			}
		}
	}

	function markTaskListGuideComplete(taskObj) {
		if (taskObj && !taskObj.isComplete) {
			var index = getCurrentindex();
			var tour = matchedTours[index];
			var data = {
				taskListId: taskObj.taskId,
				tourId: tour.tour_id,
				complete_count: taskObj.complete_count,
				total_count: taskObj.total_count
			};

			var rScope = angular.element(mg$("#main-container")).scope();
			if (rScope) {
				rScope.markTaskGuideComplete(data);
			}
			taskObj = false;
		}
	}

	function bindThemeColor() {
		var nTheme = GmCXt.getAppSetting('notificationTheme');

		if (nTheme) {
			if (isPreview) {
				GmCXt.timeout(function() {
					mg$(".mgPlayerJSTest_push-notification-container .mgPlayerJSTest_close-preview-btn svg polygon").each(function() {
						if (nTheme.body.fill) this.style.setProperty('fill', nTheme.body.fill, 'important');
					});
				}, 100);
			}

			mg$(".mgPlayerJSTest_push-notification-container").each(function() {
				if (nTheme.width) this.style.setProperty('width', nTheme.width + 'px', 'important');
				if (nTheme.height) this.style.setProperty('height', nTheme.height + 'px', 'important');
			});

			mg$(".mgPlayerJSTest_push-notification-container .mgPlayerJSTest_push-notification-header").each(function() {
				if (nTheme.header.background) this.style.setProperty('background', nTheme.header.background, 'important');
			});

			mg$(".mgPlayerJSTest_push-notification-container .mgPlayerJSTest_push-notification-header .mgPlayerJSTest_push-notification-title").each(function() {
				if (nTheme.header.color) this.style.setProperty('color', nTheme.header.color, 'important');
				if (nTheme.header.font) this.style.setProperty('font-family', nTheme.header.font, 'important');
			});

			mg$(".mgPlayerJSTest_push-notification-container .mgPlayerJSTest_push-notification-content-wrapper").each(function() {
				if (nTheme.body.padding_top) this.style.setProperty('padding-top', nTheme.body.padding_top + 'px', 'important');
				if (nTheme.body.padding_right) this.style.setProperty('padding-right', nTheme.body.padding_right + 'px', 'important');
				if (nTheme.body.padding_bottom) this.style.setProperty('padding-bottom', nTheme.body.padding_bottom + 'px', 'important');
				if (nTheme.body.padding_left) this.style.setProperty('padding-left', nTheme.body.padding_left + 'px', 'important');
				if (nTheme.body.background_color) this.style.setProperty('background', nTheme.body.background_color, 'important');
			});

			mg$(".mgPlayerJSTest_push-notification-container .mgPlayerJSTest_push-notification-content-wrapper .mgPlayerJSTest_push-notification-guide-info-wrapper .mgPlayerJSTest_push-notification-guide-title").each(function() {
				if (nTheme.body.title_color) this.style.setProperty('color', nTheme.body.title_color, 'important');
				if (nTheme.body.title_font_family) this.style.setProperty('font-family', nTheme.body.title_font_family, 'important');
				if (nTheme.body.title_font_size) this.style.setProperty('font-size', nTheme.body.title_font_size, 'important');
			});

			mg$(".mgPlayerJSTest_push-notification-container .mgPlayerJSTest_push-notification-content-wrapper .mgPlayerJSTest_push-notification-video-title").each(function() {
				if (nTheme.body.title_color) this.style.setProperty('color', nTheme.body.title_color, 'important');
				if (nTheme.body.title_font_family) this.style.setProperty('font-family', nTheme.body.title_font_family, 'important');
				if (nTheme.body.title_font_size) this.style.setProperty('font-size', nTheme.body.title_font_size, 'important');
			});

			mg$(".mgPlayerJSTest_push-notification-container .mgPlayerJSTest_push-notification-content-wrapper .mgPlayerJSTest_push-notification-guide-info-wrapper .mgPlayerJSTest_single-guide-play-icon .mgPlayerJSTest_push-play-icon").each(function() {
				if (nTheme.body.fill) this.style.setProperty('background', nTheme.body.fill, 'important');
			});

			mg$(".mgPlayerJSTest_push-notification-container .mgPlayerJSTest_push-notification-btn-wrapper .mgPlayerJSTest_btn-dont-show-again").each(function() {
				if (nTheme.footer.primaryBtnBackground) this.style.setProperty('background', nTheme.footer.primaryBtnBackground, 'important');
				if (nTheme.footer.primaryBtnBorderColor) this.style.setProperty('border', '2px outset ' + nTheme.footer.primaryBtnBorderColor, 'important');
				if (nTheme.footer.primaryBtnFont) this.style.setProperty('font-family', nTheme.footer.primaryBtnFont, 'important');
				if (nTheme.footer.primaryBtnTextColor) this.style.setProperty('color', nTheme.footer.primaryBtnTextColor, 'important');
				if (nTheme.footer.primaryBtnTextSize) this.style.setProperty('font-size', nTheme.footer.primaryBtnTextSize, 'important');
			});

			mg$(".mgPlayerJSTest_push-notification-container .mgPlayerJSTest_push-notification-btn-wrapper .mgPlayerJSTest_btn-watch-later").each(function() {
				if (nTheme.footer.secondaryBtnBackground) this.style.setProperty('background', nTheme.footer.secondaryBtnBackground, 'important');
				if (nTheme.footer.secondaryBtnBorderColor) this.style.setProperty('border', '2px outset ' + nTheme.footer.secondaryBtnBorderColor, 'important');
				if (nTheme.footer.secondaryBtnFont) this.style.setProperty('font-family', nTheme.footer.secondaryBtnFont, 'important');
				if (nTheme.footer.secondaryBtnTextColor) this.style.setProperty('color', nTheme.footer.secondaryBtnTextColor, 'important');
				if (nTheme.footer.secondaryBtnTextSize) this.style.setProperty('font-size', nTheme.footer.secondaryBtnTextSize, 'important');
			});

			mg$(".mgPlayerJSTest_push-notification-container .mgPlayerJSTest_push-notification-btn-wrapper .mgPlayerJSTest_btn-watch-close").each(function() {
				if (nTheme.footer.primaryBtnBackground) this.style.setProperty('background', nTheme.footer.primaryBtnBackground, 'important');
				if (nTheme.footer.primaryBtnBorderColor) this.style.setProperty('border', '2px outset ' + nTheme.footer.primaryBtnBorderColor, 'important');
				if (nTheme.footer.primaryBtnFont) this.style.setProperty('font-family', nTheme.footer.primaryBtnFont, 'important');
				if (nTheme.footer.primaryBtnTextColor) this.style.setProperty('color', nTheme.footer.primaryBtnTextColor, 'important');
				if (nTheme.footer.primaryBtnTextSize) this.style.setProperty('font-size', nTheme.footer.primaryBtnTextSize, 'important');
			});

			GmCXt.timeout(function() {
				mg$(".mgPlayerJSTest_push-notification-container .mgPlayerJSTest_btn-next path.st0").each(function() {
					if (nTheme.body.fill) this.style.setProperty('fill', nTheme.body.fill, 'important');
				});

				mg$(".mgPlayerJSTest_push-notification-container .mgPlayerJSTest_btn-prev path.st0").each(function() {
					if (nTheme.body.fill) this.style.setProperty('fill', nTheme.body.fill, 'important');
				});
			}, 100);
		}
	}

	function closeDisplayFrequencyNotif(e) {
		e.stopPropagation();
		var index = this.attributes.tourIndex.value;
		var tour = matchedTours[index];
		if (tour.tour_settings.displayFrequency) {
			markDisplayFrequency(tour);
		}
		updateMatchedTour(index);
	}
};

GmCXt.formatAndSendToParentWindowNoti = function(action, data) {
	var obj = {};
	obj.action = action;
	obj.data = data || {};
	GmCXt.sendToParentWindow(obj);
};
var app = angular.module("guideme");

app.config(['$stateProvider', '$urlRouterProvider', '$sceDelegateProvider',
	function($stateProvider, $urlRouterProvider, $sceDelegateProvider) {

		$stateProvider
			.state("emptypage", {
				url: "/emptypage",
				templateUrl: "app/player/home/emptypage.html",
				controller: ('EmptyPageCtrl', ['$rootScope', function($rootScope) {

					if (GmCXt.isClientJs()) {
						$rootScope.showSpinner = true;
					} else $rootScope.showSpinner = false;

				}])
			})
			.state("current-page", {
				url: "/home/currentpage",
				templateUrl: "app/player/home/currentPage.html",
				controller: "HomeCtrl"
			})
			.state("allGuides", {
				url: "/all_guides",
				templateUrl: "app/player/all_guides/all_guides.html",
				controller: "AllGuidesCtrl",
				params: {
					reloadFlag: false
				}
			})
			.state("tour-list", {
				url: "/category/:categoryId/tour/list",
				templateUrl: "app/player/tour/list.html",
				params: {
					reloadFlag: false
				},
				controller: "TourListCtrl"
			})
			.state("search", {
				url: "/search/:keyword",
				templateUrl: "app/player/search/search.html",
				controller: "SearchCtrl"
			})
			.state("filter-tour-list", {
				url: "/tour/list",
				templateUrl: "app/creator/tour/filter_list.html",
				controller: "FilterTourListCtrl"
			})
			.state("tour-view", {
				url: "/category/:categoryId/tour/:tourId/view",
				templateUrl: "app/player/tour/view.html",
				controller: "TourViewCtrl"
			})
			.state("signin", {
				url: "/signin",
				templateUrl: "app/player/user/signin.html",
				controller: "SignInCtrl"
			})
			.state("forgotpassword", {
				url: "/forgotpassword",
				templateUrl: "app/player/user/forgotpassword.html",
				controller: "ForgotPasswordCtrl"
			})
			.state("changepassword", {
				url: "/changepassword",
				templateUrl: "app/player/user/changepassword.html",
				controller: "ChangePasswordCtrl"
			})
			.state("noapp", {
				url: "/noapp",
				templateUrl: "app/player/user/noapp.html",
				controller: 'NoAppCtrl'
			})
			.state("noorg", {
				url: "/noorg",
				templateUrl: "app/player/user/noorg.html",
				controller: 'NoOrgCtrl'
			})
			.state("maintenance", {
				url: "/maintenance",
				templateUrl: "app/player/maintenance/maintenance.html",
				controller: "maintenance"
			})
			.state("chatbot", {
				url: "/chatbot",
				templateUrl: "app/chatbot/bot.html",
				controller: "BotCtrl"
			})
			.state("cookie", {
				url: "/cookie",
				templateUrl: "app/player/user/cookie.html",
				controller: "cookieAppCtrl"
			})
			.state("category-list", {
				url: "/category/:categoryId/list",
				templateUrl: "app/player/category/list.html",
				controller: "CategoryListCtrl"
			})
			.state("loader", {
				url: "/loader",
				templateUrl: "app/player/loader.html",
				controller: ('loaderPageCtrl', ['$rootScope', function($rootScope) {
					$rootScope.currentView = 'loader';
					$rootScope.showSpinner = false;
				}])
			})
			
			.state("taskList", {
				url: "/taskList",
				templateUrl: "app/player/task_list/taskList_home.html",
				controller: "taskListHomeCtrl"
			});
	}
]);

app.config(['$stateProvider', '$urlRouterProvider', '$sceDelegateProvider',
	'$compileProvider', 'SVGS',
	function($stateProvider, $urlRouterProvider, $sceDelegateProvider,
		$compileProvider, SVGS) {

		$urlRouterProvider.otherwise('/emptypage');

		if (GmCXt.onPrem()) {
			$compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|chrome-extension|ms-browser-extension):/);
			$compileProvider.imgSrcSanitizationWhitelist(/^\s*(https?|ftp|mailto|chrome-extension|ms-browser-extension):/);
		}

		$sceDelegateProvider.resourceUrlWhitelist([
			'self',
			'https://stagecdn.guideme.io/**',
			'https://guidemeprod.blob.core.windows.net/**',
			'https://guidemevideoprod.blob.core.windows.net/**',
			'https://gsscontentstage.wagmob.com/**',
			'https://gsscontent.wagmob.com/**',
			'https://api-v2.guideme.io/**',
			'https://cdn.guideme.io/**'
		]);

	}
]);

var app = angular.module('guideme');

app.controller('SearchCtrl', ['$scope', '$rootScope', '$state', 'api', '$timeout',
	'storage', 'AuthLogin', 'modal', '$location', 'Message',
	function($scope, $rootScope, $state, api, $timeout, storage, AuthLogin,
		modal, $location, Message) {

		$rootScope.currentView = "search-page";
		$rootScope.sortType = 'tour_title';

		$scope.noTours = false;

		var isPreviousEventComplete = true;
		$scope.tours = [];
		$scope.limit = 50;
		$scope.offset = 0;
		$scope.toursFetchedInLastApiCall = 0;
		$rootScope.showSpinner = false;

		$scope.allUser = {
			user_id: 0,
			first_name: $rootScope.labels.all
		};

		if ($rootScope.searchKeyword) $scope.keyword = $rootScope.searchKeyword;

		if ($rootScope.sortByProperty) $scope.sortByProperty = $rootScope.sortByProperty;

		$rootScope.showSpinner = false;

		if (angular.isDefined($state.params.keyword) && $state.params.keyword.length > 0) $scope.keyword = $state.params.keyword;

		$rootScope.searchKeyword = $scope.keyword;

		$scope.clearSearch = function() {
			$rootScope.searchKeyword = "";

			var lastUrl = $rootScope.activeView;

			if ($rootScope.myGuidesFilter) {
				GmCXt.redirect("#/tour/list");
				$rootScope.clearFilters();
			} else if (lastUrl && lastUrl.length) {
				GmCXt.redirect('#' + lastUrl);
			} else {
				$rootScope.goToCurrentPage();
			}

		};

		$scope.isfirst = true;

		function segmentCb(t) {

			if ($scope.isfirst) {
				$scope.isfirst = false;

				$scope.tours = [];
			}

			if (!GmCXt.isEmpty(t)) {
				$scope.tours.push(t);
			}

			$scope.tours = GmCXt.removeDuplicateGuides($scope.tours);

			if (!$scope.tours.length) {
				$scope.noTours = true;
			}

			$rootScope.showSpinner = false;
			if (!$scope.$$phase) $scope.$apply();
		}

		function searchCb(_tours, keyword) {

			isPreviousEventComplete = true;
			$scope.currentSearchTime = new Date().getTime();

			$scope.toursFetchedInLastApiCall = _tours.length;

			if ($scope.toursFetchedInLastApiCall) {

				$scope.tours = mg$.merge($scope.tours, _tours);
				$scope.tours = GmCXt.removeDuplicateGuides($scope.tours);
				if (GmCXt.inPlayer && $rootScope.notDefaultLang()) {
					$scope.tours = $rootScope.getTranslatedTours($scope.tours);
				}
				$scope.noTours = false;

				if ($rootScope.FT.isPlayer) {
					$scope.tours = $scope.tours.filter(function(_t) {
						if ($rootScope.isGuide(_t) || $rootScope.isOnboarding(_t)) {
							return _t;
						}
					});
					if ($scope.tours.length === 0) $scope.noTours = true;
				}

				//Set height to search-list element to properly apply slider
				$scope.setHeight();

				//check time diffrence between the last and current search
				if ($scope.lastSearchTime &&
					!$rootScope.trackSearch.filters &&
					($scope.currentSearchTime - $scope.lastSearchTime) >= 5000) {

					$rootScope.trackSearchEvent(false);
				}

			}

			$rootScope.trackSearch = {
				keyword: keyword,
				results_returned: $scope.toursFetchedInLastApiCall,
				track: true,
				startTime: new Date().getTime()
			};

			if (!$scope.tours.length && !$scope.toursFetchedInLastApiCall) {
				$scope.noTours = true;
				$rootScope.trackSearchEvent(false);
			}

			if (!$rootScope.trackSearch.filters) $scope.lastSearchTime = $scope.currentSearchTime;

			if ($rootScope.guideSegmentation && $rootScope.FT.isPlayer) {
				$rootScope.showSpinner = true;
				GmCXt.checkGuidesBasedOnSegment($scope.tours, segmentCb, "searchSeg");
			} else {
				$rootScope.showSpinner = false;
				if (!$scope.$$phase) $scope.$apply();
			}

		}

		$scope.search = function(track) {
			var searchCatId = "";
			if ($rootScope.activeView.indexOf("category") !== -1 && $rootScope.activeView.indexOf("tour") !== -1) {
				var catArr = $rootScope.activeView.split("/");
				var i = 0;
				for (i; i < catArr.length; i++) {
					if (catArr[i] === "category") {
						searchCatId = catArr[i + 1];
					}
				}

			}

			$rootScope.showSpinner = true;

			if (!$scope.pageScroll) {
				$scope.tours = [];
				$scope.pageScroll = false;
			}

			if ($rootScope.currentUserFilter) {
				$scope.currentUser = $rootScope.currentUserFilter;
			} else {
				$scope.currentUser = $scope.allUser;
			}

			if ($rootScope.filterByPublishedGuides) {
				$scope.filterByPublishedGuides = $rootScope.filterByPublishedGuides;
			}

			if ($rootScope.currentAssigneeFilter) {
				$scope.currentAssignee = $rootScope.currentAssigneeFilter;
			} else {
				$scope.currentAssignee = $scope.allUser;
			}

			var keyword = $scope.keyword.trim();
			if (!keyword.length) {
				$scope.tours = [];
				$scope.clearSearch();
				return;
			}

			$rootScope.searchKeyword = keyword;

			mg$('#search-text-input').focus();

			var sortBy = 'tour_id';

			if ($scope.sortByProperty === $rootScope.labels.name) sortBy = 'tour_title';

			var param = {
				limit: $scope.limit,
				offset: $scope.offset,
				search_text: keyword,
				sort_by: sortBy
			};

			if ($rootScope.myGuidesFilter) param.my_guides = $rootScope.user.user_id;

			if ($rootScope.currentUserFilter && $rootScope.currentUserFilter.user_id !== 0) {
				param.creator_id = $rootScope.currentUserFilter.user_id;
			}

			if ($rootScope.filterByPublishedGuides === $rootScope.labels.published) {
				param.is_published = '1';
			} else if ($rootScope.filterByPublishedGuides === $rootScope.labels.unpublished) {
				param.is_published = '0';
			}

			if ($rootScope.currentAssigneeFilter && $rootScope.currentAssigneeFilter.user_id !== 0)
				param.locked_user_id = $rootScope.currentAssigneeFilter.user_id;

			if ($rootScope.FT.publishedGuides) {
				param.is_published = '1';
			}

			if (searchCatId) {
				param.category_id = searchCatId;
			}

			$scope.noTours = false;

			if (GmCXt.inPlayer || GmCXt.onPrem()) {
				api.searchTours(param, function(l) {
					searchCb(l, keyword);
				});
			} else {
				api.getTourList(param, function(l) {
					searchCb(l, keyword);
				});
			}

		};

		$scope.refreshView = function(e) {
			$scope.tours = [];
			$scope.offset = 0;
			$scope.search(true);
		};

		function debounce(fn, delay) {
			var timer = null;
			return function() {
				var context = this,
					args = arguments;
				$timeout.cancel(timer);
				timer = $timeout(function() {
					fn.apply(context, args);
				}, delay);
			};
		}

		mg$('#search-text-input').keyup(debounce(function(e) {
			var excludeKey = [27, 20, 16, 17, 18, 91, 93, 37, 38, 39, 40, 45, 46];
			if (excludeKey.indexOf(e.keyCode) !== -1) {
				return;
			} else {
				var searchVal = mg$('#search-text-input').val().trim();

				if (searchVal.length > 1) {
					$scope.$apply(function() {

						$rootScope.trackSearchEvent(false);
						$scope.refreshView();
					});
				} else if (searchVal.length === 0) {
					$scope.clearSearch();
				}
			}
		}, 500));

		mg$("#search-text-input").blur(function() {
			var searchVal = mg$('#search-text-input').val().trim();
			if (searchVal.length === 0) {
				$scope.clearSearch();
			}
		});

		var e = mg$.Event("keyup", {
			keyCode: 13
		});
		mg$('#search-text-input').trigger(e);

		//Scroll Logic to fetch categories on scroll
		mg$('.search-list').off('scroll').on('scroll', function() {

			if (!isPreviousEventComplete)
				return true;

			if (((mg$(this).scrollTop() + mg$(this).innerHeight()) >= mg$(this)[0].scrollHeight - 20) && (mg$(this)[0].scrollHeight + 20 > mg$(this).innerHeight())) {
				isPreviousEventComplete = false;

				if ($scope.toursFetchedInLastApiCall === $scope.limit) {
					$scope.offset = $scope.offset + $scope.limit;
					$scope.pageScroll = true;
					$scope.search();
				}
			}

		});

		$scope.$on('refreshStep', function(event, data) {
			if (angular.isDefined(data) && angular.isDefined(data.step)) {
				var step = data.step;
				var tourObj = false;

				for (var i = 0; i < $scope.tours.length; i++) {
					if (step.tour_id === $scope.tours[i].tour_id) {
						tourObj = $scope.tours[i];
						tourObj.step_count = parseInt(tourObj.step_count) + 1;

						if (tourObj.is_locked) $scope.isLocked = true;

						$scope.tours[i] = tourObj;
						break;
					}
				}
			}
		});

		//track event if nothing happens for 30 seconds 
		$timeout(function() {
			$rootScope.trackSearchActivity(false);
		}, 30000);

		$scope.setHeight = function() {
			//Set height to search-list element to properly apply slider
			var guideViewHeaderPanelContainerHeight = mg$('.guide-view-header-panel-container').innerHeight() ? mg$('.guide-view-header-panel-container').innerHeight() : 0;
			var listPageHeaderHeight = mg$('.list-page-header').innerHeight() ? mg$('.list-page-header').innerHeight() : 0;
			var egeHeaderHeight = mg$('#ege-header').innerHeight() ? mg$('#ege-header').innerHeight() : 0;
			var egePanelHeaderSubMenuUrlsHeight = mg$('.ege-panel-header-sub-menu-urls').innerHeight() ? mg$('.ege-panel-header-sub-menu-urls').innerHeight() : 0;
			var footerHeight = mg$('#footer').innerHeight() ? mg$('#footer').innerHeight() : 0;
			mg$('.search-list').css({
				'height': (window.innerHeight - guideViewHeaderPanelContainerHeight - footerHeight - egePanelHeaderSubMenuUrlsHeight - listPageHeaderHeight - egeHeaderHeight)
			});
		};

		$timeout(function() {
 			$scope.setHeight();
  		}, 100);

		/* set the list hight on window resize */
		mg$(window).off('resize').on('resize', $scope.setHeight);

		//track event if scope of search is changed 
		$scope.$on('$destroy', function() {
			$rootScope.trackSearchEvent(false);
		});

	}
]);

var showMe = {
	ready: true,
	autoPlayNextStep: true,
	slideshowAutoplay: false,
	settings: getShowMeSettings()
};

GmCXt.injectPDFJS = function() {
	return new Promise(function(resolve, reject) {
		var pdfScript1 = document.createElement('script');
		pdfScript1.id = "pdfScript1";
		pdfScript1.src = "app/pdfJsLib/pdf.worker.js";
		document.body.appendChild(pdfScript1);

		var pdfScript2 = document.createElement('script');
		pdfScript2.id = "pdfScript2";
		pdfScript2.src = "app/pdfJsLib/print.js";
		document.body.appendChild(pdfScript2);


		var pdfScript = document.createElement('script');
		pdfScript.id = "pdfScript3";
		pdfScript.src = "app/pdfJsLib/pdf.js";
		document.body.appendChild(pdfScript);

		pdfScript.onload = function() {
			// remote script has loaded
			console.log("pdf script loaded");
			resolve();
		};

	});
};

GmCXt.removeInjectedPDFJS = function() {
	mg$("#pdfScript3").remove();
	mg$("#pdfScript2").remove();
	mg$("#pdfScript1").remove(); 
};

function updateShowMeSettings() {
	showMe.settings = getShowMeSettings();
}

function getShowMeSettings() {
	return {
		showMeSetting: GmCXt.getAppSetting('showMeSetting'),
		giphy: GmCXt.getAppSetting('giphy'),
		video: GmCXt.getAppSetting('video')
	};
}

var isSlideshowStep = false;

GmCXt.imgThumLength = 5;

var invalidSegmentGuide = [];

function showControl(selector) {
	mg$(selector).show();
}

function hideControl(selector) {
	mg$(selector).hide();
}

function show(selector) {
	mg$(selector).css("display", "block");
}

function hide(selector) {
	mg$(selector).css("display", "none");
}

function showIn(selector) {
	mg$(selector).css("display", "inline-block");
}

function showFlex(selector) {
	mg$(selector).css("display", "flex");
}

function showInlineFlex(selector) {
	mg$(selector).css("display", "inline-flex");
}

function visible(selector) {
	mg$(selector).css("visibility", "visible");
}

function invisible(selector) {
	mg$(selector).css("visibility", "hidden");
}

function disable(selector) {
	mg$(selector).css({
		"opacity": ".5",
		"pointer-events": "none"
	});
}

function reset(selector) {
	mg$(selector).css({
		"opacity": "",
		"pointer-events": ""
	});
}

function activate(selector) {
	mg$(selector).addClass('mgPlayerJSTest_showMe-player-active-mode');
}

function inactivate(selector) {
	mg$(selector).removeClass('mgPlayerJSTest_showMe-player-active-mode');
}

function removeStyle(selector) {
	mg$(selector).removeAttr("style");
}

function disableSlideshowAutoplay() {
	if (showMe.slideshowAutoplay === true) {

		showMe.slideshowAutoplay = false;
		showMe.autoPlayNextStep = false;

		hideControl(".mgPlayerJSTest_btn-autoplay-on");
		showControl(".mgPlayerJSTest_btn-autoplay-off");
	}
}

function playModeView(selector) {
	if (!GmCXt.FT.audio) {
		hideControl(".mgPlayerJSTest_showMe-play-ctrl-audio");
	}

	if (selector === 'slideshow') {
		mg$('.mgPlayerJSTest_slideshow-main').css({
			"height": "calc(100% - 192px)"
		});

		if (window.matchMedia("(max-width: 480px)").matches && !GmCXt.isMiniPlayer) {
			mg$('.mgPlayerJSTest_slideshow-main').css({
				"height": "calc(100% - 17%)"
			});
		}

		mg$('.mgPlayerJSTest_iframe-wrapper-div').css({
			"height": "89%"
		});
	} else if (selector === 'video' || selector === 'gif' || selector === 'giphy') {
		mg$('.mgPlayerJSTest_slideshow-main').css({
			"height": "86%"
		});

		if (window.matchMedia("(max-width: 480px)").matches && !GmCXt.isMiniPlayer) {
			mg$('.mgPlayerJSTest_slideshow-main').css({
				"height": "calc(100% - 12%)"
			});
		}

		mg$('.mgPlayerJSTest_iframe-wrapper-div').css({
			"height": "92%"
		});
		disableSlideshowAutoplay();
		if (GmCXt.isWBC()) {
			mg$('.mgPlayerJSTest_slideshow-main').css({
				"height": "92%"
			});
		}
	}
}

if (GmCXt.isWB()) {
	hide('.mgPlayerJSTest_showMe-play-mode-manual');
}

// This listener is only in Guide iframe
window.addEventListener('message', function(event) {

	var message = GmCXt.parseMsg(event);

	if (!message) return;
	if (!message.action || message.action.indexOf('mgPlayerJSTest_action:') !== 0) return;
	message = GmCXt.convertMgdata(message);

	if (message.data) {

		if (message.data.config) {
			GmCXt.conf = message.data.config;
		}

		if (message.data.user && !GmCXt.isEmpty(message.data.user)) {
			GmCXt.updateGlobalUser(message.data.user);
		}

		showMe.tour = (message.data.tour) ? message.data.tour : {};
		showMe.type = (message.data.type) ? message.data.type : '';
		showMe.stepIndex = (message.data.stepIndex) ? message.data.stepIndex : -1;

		if (GmCXt.syncPlayerInst(message.action)) {

			if (message.data.playerInstance) {
				GmCXt.playerI = message.data.playerInstance;
			}
		}


		var as = GmCXt.getAppSetting();
		if (GmCXt.organization && as) {
			var s = GmCXt.organization.settings;
			if (GmCXt.isDefined(as.playAudio)) {
				GmCXt.FT.audio = as.playAudio;
			} else if (GmCXt.isDefined(s.playAudio)) {
				GmCXt.FT.audio = s.playAudio;
			} else {
				GmCXt.FT.audio = true;
			}
		}
	}

	switch (message.action) {

		case 'mgPlayerJSTest_action:play_slideshow':
			mg$(window).focus();
			showSlideShowPlayer();
			GmCXt.stopAudio();
			mg$("mgPlayerJSTest_slideshow_drag").focus();
			GmCXt.requestHandler.playSlideshow(message);
			break;

		case 'mgPlayerJSTest_action:open_pdf':
			mg$(window).focus();
			GmCXt.injectPDFJS().then(function() {
				GmCXt.openPdf(message.data);
			});
			break;

		case 'mgPlayerJSTest_action:open_pdf_link_step':
			mg$(window).focus();
			GmCXt.injectPDFJS().then(function() {
				GmCXt.openPdfLinkStep(message.data.data);
			});
			break;

		case 'mgPlayerJSTest_action:open_video_player':
			mg$(window).focus();
			GmCXt.openVideoPlayer(message.data);
			break;

		case 'mgPlayerJSTest_action:close_media_player':
			GmCXt.closeMediaPlayer(message.data);
			break;

		case 'mgPlayerJSTest_action:play_image_step':
			GmCXt.playStepInMyShowShell(false, message.data);
			break;

		case 'mgPlayerJSTest_action:play_video_step':
			GmCXt.playStepInMyShowShell(true, message.data);
			break;

		case 'mgPlayerJSTest_action:play_video':
			mg$(window).focus();

			showSlideShowPlayer();

			mg$(".mgPlayerJSTest_slideshow-panel").css({
				"display": "block",
				"left": "50%"
			});
			GmCXt.stopAudio();
			GmCXt.requestHandler.playVideo(message);
			break;

		case 'mgPlayerJSTest_action:play_audio':
			GmCXt.requestHandler.playAudioTrack(message);
			break;

		case 'mgPlayerJSTest_action:stop_audio':
			GmCXt.requestHandler.stopAudioTrack(message);
			break;

		case 'mgPlayerJSTest_action:reload_images':
			GmCXt.reloadFailedImages();
			break;

		case 'mgPlayerJSTest_action:remove_power_form':
			if (message.data) {
				if (mg$('.mgPlayerJSTest_form-injector-wrapper_' + message.data.step_id).length) {
					mg$('.mgPlayerJSTest_form-injector-wrapper_' + message.data.step_id).remove();
					GmCXt.closePowerForm();
				}
			}
			break;

		case 'mgPlayerJSTest_action:stop_slideshow':
			stopSlideshow();
			break;

		case 'mgPlayerJSTest_action:show_power_form':
			showSlideShowPlayer();
			resizeSlideshowWindow('full', true, true);
			hideSlideShowPlayer();
			openPowerForm(message.data);
			break;

		case 'mgPlayerJSTest_action:remove_video_player':
			mg$(".mgPlayerJSTest_overlay-container").remove();
			mg$(".mgPlayerJSTest_video-panel").remove();
			GmCXt.openSidePanelNotificaton();
			break;
	}

});

window.addEventListener('error', function(event) {
	if (event && event.target) {
		GmCXt.onImageLoadError(mg$(event.target));
	}
}, true);

if (GmCXt.requestHandler === undefined) {
	GmCXt.requestHandler = {};
}

function hideSlideShowPlayer() {
	mg$('.mgPlayerJSTest_tour-player-panel').hide();
	hide('.mgPlayerJSTest_showMe-player-ctrl-container');
}

function showSlideShowPlayer() {
	updateShowMeSettings();

	GmCXt.increaseSidePanel();
	mg$('.ege-panel').css({
		'width': '500px',
		'right': '-9550px',
		'transition': 'width 0s'
	});

	mg$(".mgPlayerJSTest_slideshow-panel").css({
		"display": "block",
		"left": "50%"
	});
	mg$('.mgPlayerJSTest_tour-player-panel').show();
	show('.mgPlayerJSTest_showMe-player-ctrl-container');
	mg$('.mgPlayerJSTest_thumbnail-preview-wrapper').empty();
}

function getBulCount(el) {
	var length = mg$(el).find('li').length;
	mg$(el).find('li').each(function(i) {
		var braketValue = mg$(this).text().replace(/.*\{|\}/g, '');
		if (braketValue.indexOf(';') !== -1) {
			var o = braketValue.split(';')[1];
			if (o && o.trim() === 'optional') {
				length--;
			}
		}
	});
	return length;
}

function updateDropdown(li) {
	var val = mg$(li).find('select').val();
	mg$(li).find('select').remove();
	mg$(li).html(mg$(li).html() + val);

}

function updateTextarea(li) {
	var input = mg$(li).find('textarea');
	var val = mg$(input).val().trim();
	var optional = mg$(input).attr('optional');
	if (!val && optional === 'true') {
		mg$(li).remove();
		return;
	}

	if (val[val.length - 1] === '.') {
		val = val.substring(0, (val.length - 1));
	}

	mg$(li).find('textarea').remove();
	mg$(li).html(mg$(li).html() + val);
}

function updatePowerFormHtml() {

	mg$('.mgPlayerJSTest_form-injector-form').find('li').each(function() {
		var li = mg$(this).html();
		if (li.indexOf('<select') !== -1) {
			updateDropdown(this);
		} else if (li.indexOf('<textarea') !== -1) {
			updateTextarea(this);
		}
	});

	mg$('.mgPlayerJSTest_power-form-error').remove();
	mg$('.mgPlayerJSTest_form-injector-form-title').remove();

	var bulLength = mg$('.mgPlayerJSTest_form-injector-form').find('li').length;
	var text = mg$('.mgPlayerJSTest_form-injector-form').text().trim();
	if (bulLength === 1 && (text.toLowerCase() === 'yes' || text.toLowerCase() === 'no')) {
		mg$('.mgPlayerJSTest_form-injector-form').html(mg$('.mgPlayerJSTest_form-injector-form').text());
	}
}

function validate(input) {

	var max = mg$(input).attr('maxlength');
	max = parseInt(max);
	var val = mg$(input).val().length;
	if (val >= max) {
		mg$(input).next('.mgPlayerJSTest_power-form-error').show();
		if (val > max) return true;
	} else {
		mg$(input).next('.mgPlayerJSTest_power-form-error').hide();
		return false;
	}
}

function validateTextarea() {
	validate(this);
}

function validatePowerForm() {
	var valid = true;
	mg$('.mgPlayerJSTest_form-injector-form').find('li').each(function() {
		var li = mg$(this).html();
		if (li.indexOf('<textarea') !== -1) {
			var input = mg$(this).find('textarea');
			var val = mg$(input).val().trim();
			var optional = mg$(input).attr('optional');
			if ((!val && optional !== 'true') || validate(input)) {
				mg$(this).find('.mgPlayerJSTest_power-form-error').show();
				valid = false;
			}
		}
	});
	return valid;
}

function getOldVal(l) {
	var val = '';
	if (l && mg$(l).text().indexOf(':') !== -1) {
		val = mg$(l).text().substring(mg$(l).text().indexOf(':') + 1);
	} else {
		val = mg$(l).text();
	}

	return val;
}

function getDropDownHtml(r, l) {
	var oldValue = getOldVal(l);
	var dd = r.split('|');
	var html = "<select>";
	var selected = '';

	for (var i = 0; i < dd.length; i++) {
		if (oldValue && oldValue.replace(/\s/g, "").toLowerCase() === dd[i].replace(/\s/g, "").toLowerCase()) {
			selected = 'selected';
		} else {
			selected = '';
		}

		if (dd[i].length > 25) {
			var cliptxt = dd[i].slice(0, 25) + "...";
		} else {
			var cliptxt = dd[i];
		}
		html = html + "<option " + selected + " title ='" + dd[i] + "' value = '" + dd[i] + "' >" +
			cliptxt + "</option>";
	}

	return html + "</select>";
}

function getTextareaHtml(r, l) {
	var oldValue = getOldVal(l);
	var charCount = parseInt(r.split('char')[0]);
	var type = r.split(';')[1];
	var optional = false;
	if (type && type.trim() === 'optional') {
		optional = true;
	}
	var html = "<textarea optional='" + optional + "' maxlength='" + charCount + "'  value='" + oldValue + "' >" + oldValue + "</textarea>" +
		"<div class='mgPlayerJSTest_power-form-error'>" + GmCXt.label.powerFormMandatory + " " + charCount + " </div>";

	return html;
}

function checkPreFilledData(he, v) {
	var oldBulLength = getBulCount(he);
	var newBulLength = getBulCount(v);
	var preFilled = false;

	if (oldBulLength >= newBulLength) {
		preFilled = true;
	}

	return preFilled;
}

function getFormHtml(he, v) {
	v = v.replace(/&nbsp;/gm, "");
	var oldText = mg$(he).text().trim().toLowerCase();
	var newBulLength = getBulCount(v);
	var preFilled = checkPreFilledData(he, v);
	var formHtml = '';
	mg$(v).find('li').each(function(i) {
		var label = mg$(this).text().replace(/{(.*?)}/g, '');
		var braketValue = mg$(this).text().replace(/.*\{|\}/g, '');
		var innerHtml = '';
		var oldLi = '';

		if (preFilled) {
			var breakLoop = false;
			mg$(he).find('li').each(function(j) {
				if (!breakLoop) {
					var oldLabel = (mg$(this).text().indexOf(':') !== -1) ? mg$(this).text().split(':')[0] : '';
					oldLabel = oldLabel.replace(/\s/g, "");

					if (oldLabel && label.replace(/\s/g, "").indexOf(oldLabel) === 0) {
						oldLi = mg$(he).find('li')[j];
						breakLoop = true;
					} else if (!oldLabel && !label) {
						oldLi = mg$(he).find('li')[i];
						breakLoop = true;
					}
				}
			});
		}

		if (newBulLength === 1 && (oldText === 'yes' || oldText === 'no')) {
			oldLi = mg$(he);
		}

		if (braketValue.indexOf('|') !== -1) {
			innerHtml = getDropDownHtml(braketValue, oldLi);

		} else if (braketValue.indexOf('char') !== -1) {
			innerHtml = getTextareaHtml(braketValue, oldLi);
		}
		formHtml = formHtml + "<li>" + label + innerHtml + "</li>";
	});

	return formHtml;
}

function expandPowerForm() {
	if (mg$('.mgPlayerJSTest_form-injector-old-value-wrapper').css('display') === 'none') {
		mg$('.mgPlayerJSTest_form-injector-old-value-wrapper').css({
			"display": "inline-block"
		});
		mg$('.mgPlayerJSTest_form-injector-form').css({
			"width": "56%",
			"border-left": "1px solid #bdbdbd"
		});
		mg$('.mgPlayerJSTest_power-form-expand-icon').css({
			"transform": "rotate(180deg)"
		});
	} else {
		mg$('.mgPlayerJSTest_form-injector-old-value-wrapper').css({
			"display": "none"
		});
		mg$('.mgPlayerJSTest_form-injector-form').css({
			"width": "100%",
			"border-left": "none"
		});
		mg$('.mgPlayerJSTest_power-form-expand-icon').css({
			"transform": "rotate(0deg)"
		});
	}
}

function openPowerForm(data) {
	var he = data.he;
	var tag = data.tag;
	var value = data.value;
	var jobId = data.jobId;
	var step = data.step;
	var isPreview = data.isPreview;

	var powerFormLabel = GmCXt.label.powerFormNewData;
	if (!checkPreFilledData(he, value)) {
		powerFormLabel = powerFormLabel + "<br/><p style='font-size:11px'> " + GmCXt.label.powerFormNewDataMore + "</p>";
	}

	var html = "<div class='mgPlayerJSTest_form-injector-wrapper mgPlayerJSTest_form-injector-wrapper" + jobId + "'>" +
		"   <div class='mgPlayerJSTest_form-injector-wrapper-inner'>" +
		"   <div class='mgPlayerJSTest_form-injector-header'>" +
		"       <div class='mgPlayerJSTest_form-injector-title'>" + GmCXt.label.powerFormTitle + "</div>" +
		"       <div class='mgPlayerJSTest_form-injector-brand-logo'>" + GmCXt.getPopupLogo() + "</div>" +
		"   </div>" +
		"       <div class='mgPlayerJSTest_form-injector-form-container'>" +
		"           <div class='mgPlayerJSTest_form-injector-old-value-wrapper'>" +
		"               <div class='mgPlayerJSTest_form-injector-old-value-title'>" + GmCXt.label.powerFormOldData + "</div>" +
		"               <div class='mgPlayerJSTest_form-injector-old-value'>" + he + "</div>" +
		"           </div>" +
		"           <div class='mgPlayerJSTest_form-injector-form' style=''>" +
		"               <div class='mgPlayerJSTest_form-injector-form-title'>" + powerFormLabel + "</div>" +
		"               <ul>" + getFormHtml(he, value) + "</ul>" +
		"           </div>" +
		"       </div>" +
		"       <div class='mgPlayerJSTest_form-injector-btns'>" +
		"           <div class='mgPlayerJSTest_power-form-expand-icon'></div>" +
		"           <div class='mgPlayerJSTest_form-injector-cancel mgPlayerJSTest_btn-default mgPlayerJSTest_btn-neutral'>" + GmCXt.label.btnCancel + " </div>" +
		"           <div class='mgPlayerJSTest_form-injector-submit mgPlayerJSTest_btn-default'> " + GmCXt.label.btnSubmit + "</div>" +
		"       </div>" +
		"   </div>" +
		" </div>";

	mg$('.mgPlayerJSTest_form-injector-wrapper').remove();
	mg$("body").append(html);

	var logo = GmCXt.getBrandLogo();
	if (!logo) {
		mg$(".mgPlayerJSTest_form-injector-brand-logo").html(GmCXt.svgs.white_myguide_logo);
	}

	mg$(".mgPlayerJSTest_power-form-expand-icon").html(GmCXt.svgs.expand_power_form);

	mg$('.mgPlayerJSTest_form-injector-form li textarea').off('change keyup paste').on('change keyup paste', validateTextarea);
	mg$('.mgPlayerJSTest_power-form-expand-icon').off('click').on('click', expandPowerForm);
	mg$('.mgPlayerJSTest_form-injector-submit').off('click').on('click', function() {

		if (!validatePowerForm()) return;

		if (!isPreview && step) {
			GmCXt.updateTooltipActionInfo(step.tour_id, step.step_id, step.step_settings.smarttip, "submit");
		}

		updatePowerFormHtml();
		var formHtml = mg$('.mgPlayerJSTest_form-injector-form').html();
		var data = {
			he: he,
			tag: tag,
			formHtml: formHtml,
			forceInsert: true,
			jobId: jobId
		};
		formatAndSendToParentWindow('mgPlayerJSTest_action:insert_power_html_i', data);
		GmCXt.closePowerForm();
	});

	mg$('.mgPlayerJSTest_form-injector-cancel').off('click').on('click', function() {
		if (!isPreview && step) {
			GmCXt.updateTooltipActionInfo(step.tour_id, step.step_id, step.step_settings.smarttip, "cancel");
		}
		GmCXt.closePowerForm();
	});
}

function getCustomImgName() {
	var name = 'mgPlayerJSTest_custom-image';
	return name;
}

function updatePlayStructure(tour) {

	var playStructure = GmCXt.getGuidePlayStructure(tour);

	GmCXt.playerI.playStructure = GmCXt.playerI.playStructure.concat(playStructure);
	formatAndSendToParentWindow("mgPlayerJSTest_action:update_player_instance");
}

function getVideoHTML(videoURL, isNative) {
	var html = "";

	if (isNative) {
		html = "<video id='video-container' width='100%' disablePictureInPicture controls autoplay ";
		html += " class='mgPlayerJSTest_play-video-iframe' " + playAudio() + "> ";
		html += " <source src='" + videoURL + "' ";
		html += " type='video/mp4'  autostart='true'></video> ";
	} else {
		html = "<iframe class='mgPlayerJSTest_play-video-iframe' src='" + videoURL + "' ";
		html += " width='100%' title='Guideme video iframe'  height='100%' frameborder='0' allowfullscreen ></iframe> ";
	}

	return html;
}

function setVideoControls() {

	hide('.mgPlayerJSTest_showMe-player-ctrl-container');

	hide('.mgPlayerJSTest_slideshow-next-button');
	hide('.mgPlayerJSTest_slideshow-prev-button');

	mg$('.mgPlayerJSTest_slideshow-tour-title').text(GmCXt.playerI.title);
	mg$('.mgPlayerJSTest_slideshow-logo').attr('src', GmCXt.brandLogo());

	var html = getVideoHTML(GmCXt.playerI.video_url, true);

	mg$('.mgPlayerJSTest_iframe-wrapper-div').html(html);
}

GmCXt.requestHandler.playVideo = function(message) {

	setVideoControls();

	var video = document.getElementById('video-container');
	video.onended = function() {
		resizeSlideshowWindow('small', false);
		closeStep();
		formatAndSendToParentWindow('mgPlayerJSTest_action:lms_video_assignment_played', {
			assignment_id: GmCXt.playerI.assignment_id
		});
	};
};

function addSlidePlayerThumbnail(stepId, sList) {
	var steps, stepsLength;
	if (!stepId && sList) {
		if (GmCXt.branchStepExistInPS()) {
			steps = GmCXt.getStepSortedByPS(GmCXt.playerI.playStructure, GmCXt.playerI.currentStepId);
			stepId = GmCXt.playerI.currentStepId;
		} else {
			steps = sList;
		}
	} else {

		if (GmCXt.branchStepExistInPS() && stepId) {
			steps = GmCXt.getStepSortedByPS(GmCXt.playerI.playStructure, stepId);
		} else {
			steps = GmCXt.playerI.tour.steps;
		}
	}

	stepsLength = steps.length;

	if (stepsLength > 5) {
		if (findIndex() >= GmCXt.imgThumLength) {
			stepsLength = findIndex() + 1;
		} else {
			stepsLength = GmCXt.imgThumLength;
		}
	}

	createThumbnail(stepId, stepsLength, steps);
}

function hideSlideShowControls() {

	hideControl('.mgPlayerJSTest_showMe-play-mode-autoplay-wrapper');
	hideControl('.mgPlayerJSTest_showMe-play-mode-autoplay');
	hideControl('.mgPlayerJSTest_player-audio-controls');
	hideControl('.mgPlayerJSTest_step-thumbnail-container');
	hideControl('.mgPlayerJSTest_mode-video');
	hideControl('.mgPlayerJSTest_mode-giphy');
	hideControl('.mgPlayerJSTest_mode-slideshow');
	hideControl('.mgPlayerJSTest_resize-slideshow');
}

function showSlideShowControls() {


	showControl('.mgPlayerJSTest_player-audio-controls');
	showControl('.mgPlayerJSTest_step-thumbnail-container');
	showControl('.mgPlayerJSTest_mode-slideshow');
	showControl('.mgPlayerJSTest_mode-giphy');
	showControl('.mgPlayerJSTest_mode-video');
	showControl('.mgPlayerJSTest_showMe-play-mode-autoplay-wrapper');
	showControl('.mgPlayerJSTest_showMe-play-mode-autoplay');
	if (GmCXt.containBranchStep(GmCXt.playerI.tour)) {
		hideControl('.mgPlayerJSTest_mode-video');
		hideControl('.mgPlayerJSTest_mode-giphy');
		hideControl('.mgPlayerJSTest_showMe-play-mode-autoplay-wrapper');
		hideControl('.mgPlayerJSTest_showMe-play-mode-autoplay');
		disableSlideshowAutoplay();
	}

	setShowMeOptions();
	showControl('.mgPlayerJSTest_resize-slideshow');
}

function hideShowControls() {
	if (!GmCXt.isWBMicroPlayer()) {

		showSlideShowControls();

		var mFiles = GmCXt.playerI.tour.media_files;
		if (!mFiles || mFiles[0] === undefined) {

			disable('.mgPlayerJSTest_mode-video');
			disable('.mgPlayerJSTest_mode-giphy');

		} else {

			if (mFiles[0].video && GmCXt.playerI.tour.tour_settings.enableVideoDefaultShowme && showMe.settings.video)
				GmCXt.playerI.type = GmCXt.TOUR_PLAYER_VIDEO;

			if (mFiles[0].video && showMe.settings.video) reset('.mgPlayerJSTest_mode-video');
			else disable('.mgPlayerJSTest_mode-video');

			if (mFiles[0].gify && showMe.settings.giphy) reset('.mgPlayerJSTest_mode-giphy');
			else disable('.mgPlayerJSTest_mode-giphy');
		}
		if (GmCXt.isWBC()) {
			mg$('.mgPlayerJSTest_slideshow-next-button').remove();
			mg$('.mgPlayerJSTest_slideshow-prev-button').remove();
			hide('.mgPlayerJSTest_showMe-player-ctrl-container');
		}
	}
}

function attachThumbEvent() {

	mg$(document).off('click').on('click', '.slideshow-thumbnail-img', function(e) {

		GmCXt.playerI.currentStepId = mg$(this).attr('stepId');

		closeStep();
		playSlideshowStep();
		mg$('.slideshow-thumbnail').removeClass('mgPlayerJSTest_active-thumbnail');
		mg$(this).children().addClass('mgPlayerJSTest_active-thumbnail');
	});
}

GmCXt.requestHandler.playSlideshow = function(message) {
	loadSlideshowConstant();
	var data = message.data;
	if (data.playerInstance)
		GmCXt.playerI = GmCXt.createDeepCopy(data.playerInstance);
	else {
		GmCXt.playerI = GmCXt.createDeepCopy(data);
	}
	isSlideshowStep = false;

	if (mg$(".mgPlayerJSTest_resize-slideshow-minimize").is(":visible")) {
		resizeSlideshowWindow('full', true);
	} else {
		resizeSlideshowWindow('small', true);
	}

	mg$("#mgPlayerJSTest_player-audio-controls-header").addClass('mgPlayerJSTest_display-none-imp');

	if (!data.mode) {
		isSlideshowStep = true;
	}

	if (GmCXt.isWBMicroPlayer()) {
		hide('.mgPlayerJSTest_mode-slideshow');
		hide('.mgPlayerJSTest_mode-giphy');
		mg$(".mgPlayerJSTest_slideshow-tour-title").addClass('mgPlayerJSTest_wb-micro-font-family');
	} else {
		if (!GmCXt.playerI.playStructure || GmCXt.playerI.playStructure.length === 0) {
			GmCXt.playerI.playStructure = [];
			updatePlayStructure(GmCXt.playerI.tour);
		}

		hideShowControls();

		var sId = null;
		if (GmCXt.playerI.currentStepId)
			sId = GmCXt.playerI.currentStepId;


		if (sId) {
			s = GmCXt.getStepFromPlayerI(sId);
			if (s.step_type !== GmCXt.STEP_TYPE_GUIDE) {
				addSlidePlayerThumbnail(sId);
			}
		}

		attachThumbEvent();

		mg$(".mgPlayerJSTest_slideshow-tour-title").removeClass('mgPlayerJSTest_wb-micro-font-family');
	}

	if (showMe.slideshowAutoplay === true)
		showMe.autoPlayNextStep = true;
	else
		showMe.autoPlayNextStep = false;

	initSlideshowControls();

	GmCXt.tourPlayStarted = false;
	GmCXt.tourPlayCompleted = false;

	if (GmCXt.playerI.isAutolaunch) {
		GmCXt.setAutoTour(GmCXt.playerI.tour.tour_id);
	} else {
		GmCXt.setAutoTour(0);
	}

	GmCXt.isLastStepPlayedOnShowme = false;
	GmCXt.isVideoEndedOnShowme = false;
	GmCXt.isGiphyPlayedOnShowme = false;
	GmCXt.isVideoPlayedOnShowMe = false;

	switch (GmCXt.playerI.type) {
		case GmCXt.TOUR_PLAYER_SLIDESHOW:
			playSlideshowStep();
			break;

		case GmCXt.TOUR_PLAYER_VIDEO:
			playVideoStep();
			break;

		case GmCXt.TOUR_PLAYER_GIPHY:
			playGuideGiphy();
			break;
	}

	mg$(document).off('keydown').on('keydown', keydownEventListener);
	activeSlideshowThumbnail();

	if (!GmCXt.isWBMicroPlayer()) {
		var step = GmCXt.getStepFromPlayerI(GmCXt.playerI.currentStepId);
		var currentThumPos = findIndex() + 1;
		mg$('.mgPlayerJSTest_thumbnail-preview-wrapper').scrollLeft(112 * (currentThumPos));
	}
};

function initSlideshowControls() {

	GmCXt.playerI.totalStepCount = parseInt(GmCXt.playerI.tour.step_count);

	if (GmCXt.playerI.totalStepCount > 4) {
		reset('.mgPlayerJSTest_control-thumbnail-prev');
		reset('.mgPlayerJSTest_control-thumbnail-next');
	} else {
		disable('.mgPlayerJSTest_control-thumbnail-prev');
		disable('.mgPlayerJSTest_control-thumbnail-next');
	}

	showIn('.mgPlayerJSTest_slideshow-main');
	showIn('.mgPlayerJSTest_slideshow-next-button');
	showIn('.mgPlayerJSTest_slideshow-prev-button');

	show(".mgPlayerJSTest_tour-player-panel");

	mg$('.mgPlayerJSTest_slideshow-tour-title').text(GmCXt.playerI.tour.tour_title);
	mg$(".mgPlayerJSTest_slideshow-logo").attr('src', GmCXt.brandLogo());

	removeStyle('#mgPlayerJSTest_svg-prev-bg');
	removeStyle('#mgPlayerJSTest_svg-next-bg');
	removeStyle('#mgPlayerJSTest_svg-next-arrow');
	removeStyle('#mgPlayerJSTest_svg-prev-arrow');

}

function keydownEventListener(e) {

	if (e.which === 37) {
		playPreviousStep();

	} else if (e.which === 39) {
		playNextStep();

	} else if (e.which === 27) {
		// escape key pressed
		closeSlideshow(e);
	}
}

function loadSlideshowConstant() {

	mg$('.mgPlayerJSTest_slideshow-redirect-link').text(GmCXt.label.redirectLivetour);
	mg$(".mgPlayerJSTest_slideshow-image-spinner img").attr('src', GmCXt.loader());

	showIn('.mgPlayerJSTest_slideshow-main');
	showIn('.mgPlayerJSTest_slideshow-next-button');
	showIn('.mgPlayerJSTest_slideshow-prev-button');

	attachDOMEvents();
	attachStringConstant();
	attachSvgConstant();

}

function attachStringConstant() {
	mg$('.mgPlayerJSTest_popup-content-wrapper').html(GmCXt.label.guideNotAvailable);
	mg$('.mgPlayerJSTest_redirect-to-link-ok-btn').html(GmCXt.label.ok);

	mg$('.mgPlayerJSTest_label-in-app').html(GmCXt.label.inApp);
	mg$('.mgPlayerJSTest_label-video').html(GmCXt.label.video);
	mg$('.mgPlayerJSTest_label-giphy').html(GmCXt.label.giphy);
	mg$('.mgPlayerJSTest_label-slideshow').html(GmCXt.label.slideshow);
	mg$('.mgPlayerJSTest_label-live').html(GmCXt.label.live);
	mg$('#mgPlayerJSTest_btn-autoplay').html(GmCXt.label.autoplay);
	mg$('#mgPlayerJSTest_btn-autoplay-on').html(GmCXt.label.on);
	mg$('#mgPlayerJSTest_btn-autoplay-off').html(GmCXt.label.off);

}

function attachSvgConstant() {
	mg$(".mgPlayerJSTest_resize-slideshow-maximize").html(GmCXt.svgs.slideshow_maximize);
	mg$("#mgPlayerJSTest_slideshow_drag").html(GmCXt.svgs.slideshow_drag);
	mg$(".mgPlayerJSTest_resize-slideshow-minimize").html(GmCXt.svgs.slideshow_minimize);
	mg$(".mgPlayerJSTest_icon-close-slideshow").html(GmCXt.svgs.close_slideshow);
	mg$(".mgPlayerJSTest_icon-close-oops-msg").html(GmCXt.svgs.close_slideshow);
	mg$(".mgPlayerJSTest_icon-slideshow-prev-button").html(GmCXt.svgs.slideshow_prev_button);
	mg$(".mgPlayerJSTest_icon-slideshow-next-button").html(GmCXt.svgs.slideshow_next_button);
	mg$(".mgPlayerJSTest_control-icon-prev").html(GmCXt.svgs.slideshow_prev_button);
	mg$(".mgPlayerJSTest_control-icon-next").html(GmCXt.svgs.slideshow_next_button);
	mg$(".mgPlayerJSTest_playerbar-icon-slideshow-prev").html(GmCXt.svgs.playerbar_prev_button);
	mg$(".mgPlayerJSTest_playerbar-icon-slideshow-next").html(GmCXt.svgs.playerbar_next_button);
	mg$(".mgPlayerJSTest_btn-audio-mute").html(GmCXt.svgs.slideshow_mute);
	mg$(".mgPlayerJSTest_btn-audio-unmute").html(GmCXt.svgs.slideshow_unmute);
	mg$(".mgPlayerJSTest_icon-mode-video").html(GmCXt.svgs.slideshow_video_mode);
	mg$(".mgPlayerJSTest_icon-mode-giphy").html(GmCXt.svgs.slideshow_giphy_mode);
	mg$(".mgPlayerJSTest_icon-mode-slideshow").html(GmCXt.svgs.slideshow_mode);
	mg$(".mgPlayerJSTest_icon-player-close").html(GmCXt.svgs.playerbar_close);
}

function attachDOMEvents() {

	mg$(".mgPlayerJSTest_slideshow-close").off('click').on("click", closeSlideshow);
	mg$(".mgPlayerJSTest_player-close").off('click').on("click", closeSlideshow);

	mg$(".mgPlayerJSTest_player-audio-controls").off('click').on("click", slideshowAudioIconClickEvent);

	mg$(".mgPlayerJSTest_mode-video").off('click').on("click", playVideoStep);
	mg$(".mgPlayerJSTest_mode-giphy").off('click').on("click", playGuideGiphy);
	mg$(".mgPlayerJSTest_mode-slideshow").off('click').on("click", playSlideshowStep);

	mg$(".mgPlayerJSTest_showMe-play-mode-autoplay").off('click').on("click", function(e) {

		if (showMe.slideshowAutoplay === true) {

			pauseVideoStep();
			pauseAudio();

			showMe.slideshowAutoplay = false;
			showMe.autoPlayNextStep = false;

			hideControl(".mgPlayerJSTest_btn-autoplay-on");
			showControl(".mgPlayerJSTest_btn-autoplay-off");
		} else {

			if (showMe.videoPaused) {
				resumeVideoStep();
			} else {
				playSlideshowStep();
			}

			showMe.slideshowAutoplay = true;
			showMe.autoPlayNextStep = true;

			showControl(".mgPlayerJSTest_btn-autoplay-on");
			hideControl(".mgPlayerJSTest_btn-autoplay-off");
		}
	});

	mg$(".mgPlayerJSTest_slideshow-next-button").off('click').on("click", function(e) {
		playNextStep(e);
	});

	mg$(".mgPlayerJSTest_slideshow-prev-button").off('click').on("click", function(e) {
		playPreviousStep(e);
	});

	mg$(".mgPlayerJSTest_control-thumbnail-next").off('click').on("click", function() {
		playNextStep();
	});

	mg$(".mgPlayerJSTest_control-thumbnail-prev").off('click').on("click", function() {
		playPreviousStep();
	});

	mg$(".mgPlayerJSTest_resize-slideshow-maximize").off('click').on("click", function(e) {
		resizeSlideshowWindow('full', true);
	});

	mg$(".mgPlayerJSTest_resize-slideshow-minimize").off('click').on("click", function(e) {
		resizeSlideshowWindow('small', true);
	});

	GmCXt.addDragSlideshowFunction();

}

function pauseAudio() {
	if (GmCXt.audioObject) {
		GmCXt.audioObject.pause();
	}
}

function pauseVideoStep() {
	if (GmCXt.playerI) {
		var step = GmCXt.getStepFromPlayerI(GmCXt.playerI.currentStepId);

		if (step.step_type === GmCXt.STEP_TYPE_VIDEO) {
			showMe.videoPaused = true;
			var vid = document.getElementById("video-container");
			if (vid) {
				vid.pause();
			}
		}
	}
}

function resumeVideoStep() {
	var step = GmCXt.getStepFromPlayerI(GmCXt.playerI.currentStepId);

	if (step.step_type === GmCXt.STEP_TYPE_VIDEO) {
		var vid = document.getElementById("video-container");
		vid.play();
	}
}

function removeVideo() {
	mg$('.mgPlayerJSTest_iframe-wrapper-div').find('iframe').remove();

	if (mg$('.mgPlayerJSTest_iframe-wrapper-div').find('video').length)
		mg$('.mgPlayerJSTest_iframe-wrapper-div').find('video').remove();
}

function closeSlideshowActivities() {
	if (GmCXt.playerI) {
		var TS = GmCXt.playerI.tour.tour_settings;
		if (TS && TS.play_structure && TS.play_structure.length) {
			if (GmCXt.playerI.tour && GmCXt.playerI.tour.steps && GmCXt.playerI.tour.steps.length && GmCXt.playerI.tour.steps[0].step_id === TS.play_structure[0].id &&
				GmCXt.isLastStep(GmCXt.playerI.currentStepId, TS.play_structure)) {
				GmCXt.playerI.completeEventTracked = true;
			}
		}
	}

	trackSlideshowEvents(GmCXt.playerI.currentStepId);

	showMe.autoPlayNextStep = false;

	GmCXt.stopAudio();

	pauseVideoStep();
	pauseAudio();
	stopSlideshow();

	GmCXt.imgThumLength = 5;
	mg$('.ege-panel').css({
		'width': '500px',
		'max-width': '500px',
		'transition': 'width 0s',
		'right': 'initial'
	});
}

function showExitSurveyShowMe() {
	var os = GmCXt.getOrgSettings();
	if (os && os.exitSentiment) {
		var data = {
			tour: GmCXt.playerI.tour,
			guideNotCompleted: true
		};
		GmCXt.formatAndSendToParentWindowNoti('mgPlayerJSTest_action:showSurveyScreen', data);
	}
}

function closeSlideshow(e) {

	closeSlideshowActivities();

	formatAndSendToParentWindow('mgPlayerJSTest_action:close_guide', {
		fromShowme: true
	});

	if (GmCXt.playerI && GmCXt.isPlayer() && !GmCXt.playerI.giphyPlayed) {
		var nextStepinPS;
		var isLastStep = false;

		if (!GmCXt.isLastStep(GmCXt.playerI.currentStepId, GmCXt.playerI.playStructure)) {
			nextStepinPS = GmCXt.getTail(GmCXt.playerI.currentStepId, GmCXt.playerI.playStructure);
			isLastStep = GmCXt.isLastStep(nextStepinPS.step_id, GmCXt.playerI.playStructure);
		}

		if ((!GmCXt.isVideoEndedOnShowme && GmCXt.playerI.type === GmCXt.TOUR_PLAYER_VIDEO) ||
			(nextStepinPS && GmCXt.playerI.type !== GmCXt.TOUR_PLAYER_VIDEO &&
				!isLastStep && nextStepinPS.step_type !== GmCXt.STEP_TYPE_SURVEY &&
				nextStepinPS.step_type !== GmCXt.STEP_TYPE_TRANSPORT && nextStepinPS.step_type !== GmCXt.STEP_TYPE_ERROR_HANDLER) ||
			(!isLastStep && nextStepinPS && invalidSegmentGuide.indexOf(nextStepinPS.step_id) !== -1)) {
			showExitSurveyShowMe();
		}
		invalidSegmentGuide = [];
	}

	if (GmCXt.FT.isPlayer) {
		formatAndSendToParentWindow("mgPlayerJSTest_action:update_played_slideshow_step", {
			playedStep: GmCXt.getStepFromPlayerI(GmCXt.playerI.currentStepId)
		});
	}

	formatAndSendToParentWindow('mgPlayerJSTest_action:click; on:mgPlayerJSTest_slideshow-close', {});
}

function stopSlideshow() {
	closeStep();
	resizeSlideshowWindow('small', false);
	GmCXt.reduceSidePanel();
	mg$(".mgPlayerJSTest_slideshow-panel").css("display", "none");
}

function closePlayerPreview(e) {
	hide('.mgPlayerJSTest_slideshow-main');
	hide('.mgPlayerJSTest_slideshow-next-button');
	hide('.mgPlayerJSTest_slideshow-prev-button');
}

function enableTab() {

	hide('.mgPlayerJSTest_slideshow-next-button');
	hide('.mgPlayerJSTest_slideshow-prev-button');

	if (!GmCXt.isWBMicroPlayer()) showSlideShowControls();

	switch (GmCXt.playerI.type) {

		case GmCXt.TOUR_PLAYER_SLIDESHOW:
			enableSlideshow();
			break;

		case GmCXt.TOUR_PLAYER_VIDEO:
			enableVideo();
			break;

		case GmCXt.TOUR_PLAYER_GIPHY:
			enableGiphy();
			break;
	}

}

function showIframe() {

	removeVideo();

	mg$('.mgPlayerJSTest_iframe-wrapper-div').empty();

	show('.mgPlayerJSTest_iframe-wrapper-div');
}

function enableGiphy() {

	showIframe();

	disable('.mgPlayerJSTest_player-audio-controls');

	hide('.mgPlayerJSTest_slideshow-step-img-div');

	inactivate('.mgPlayerJSTest_mode-slideshow');
	inactivate('.mgPlayerJSTest_mode-video');

	activate('.mgPlayerJSTest_mode-giphy');

	hide('.mgPlayerJSTest_step-thumbnail-container');
	show('.mgPlayerJSTest_showMe-play-bar');

	hideControl('.mgPlayerJSTest_showMe-play-mode-autoplay-wrapper');

	playModeView('gif');
}

function enableVideo() {

	showIframe();

	disable('.mgPlayerJSTest_player-audio-controls');

	hide('.mgPlayerJSTest_slideshow-step-img-div');

	inactivate('.mgPlayerJSTest_mode-slideshow');
	inactivate('.mgPlayerJSTest_mode-giphy');

	activate('.mgPlayerJSTest_mode-video');

	hide('.mgPlayerJSTest_step-thumbnail-container');
	show('.mgPlayerJSTest_showMe-play-bar');

	hideControl('.mgPlayerJSTest_showMe-play-mode-autoplay-wrapper');

	playModeView('video');
}

function enableSlideshow() {
	removeVideo();

	activate('.mgPlayerJSTest_mode-slideshow');

	inactivate('.mgPlayerJSTest_mode-video');
	inactivate('.mgPlayerJSTest_mode-giphy');

	show('.mgPlayerJSTest_slideshow-next-button');
	show('.mgPlayerJSTest_slideshow-prev-button');

	reset('.mgPlayerJSTest_showMe-play-mode-autoplay');
	reset('.mgPlayerJSTest_player-audio-controls');

	showFlex('.mgPlayerJSTest_step-thumbnail-container');
	hide('.mgPlayerJSTest_showMe-play-bar');

	playModeView('slideshow');

	if (mg$(".mgPlayerJSTest_resize-slideshow-minimize").is(":visible")) {
		resizeSlideshowWindow('full', true);
	}

	var step = GmCXt.getStepFromPlayerI(GmCXt.playerI.currentStepId);

	if (step !== undefined) {

		switch (step.step_type) {

			case GmCXt.STEP_TYPE_VIDEO:

				show('.mgPlayerJSTest_iframe-wrapper-div');
				hide('.mgPlayerJSTest_slideshow-step-img-div');

				disable('.mgPlayerJSTest_player-audio-controls');

				inactivate('.mgPlayerJSTest_mode-video');
				activate('.mgPlayerJSTest_mode-slideshow');
				inactivate('.mgPlayerJSTest_mode-giphy');

				mg$(".mgPlayerJSTest_iframe-wrapper-div").css({
					height: '98%'
				});
				break;

			default:

				hide('.mgPlayerJSTest_iframe-wrapper-div');
				show('.mgPlayerJSTest_slideshow-step-img-div');
				showIn('.mgPlayerJSTest_player-audio-controls');
				break;
		}
	}

	mg$('.mgPlayerJSTest_slideshow-step-img').attr('src', '').attr('alt', '');
}

function playVideoStep() {
	GmCXt.stopAudio();
	GmCXt.playerI.type = GmCXt.TOUR_PLAYER_VIDEO;

	if (GmCXt.isWBMicroPlayer()) {
		var info = {
			'video': GmCXt.playerI.tour.video_url
		};
	} else {
		var info = GmCXt.playerI.tour.media_files[0];
	}

	if (info) {
		var videoUrl = "";
		var nativeVideo = false;

		if (info.video && info.video !== "0") {
			nativeVideo = true;
			videoUrl = info.video;
		}

		var orgVideoUrl = videoUrl + GmCXt.getCdnSign();

		videoUrl = GmCXt.getUrlWithLang(videoUrl);

		enableTab();

		GmCXt.checkAssetUrl(videoUrl, orgVideoUrl, function(url) {

			if (url) videoUrl = url;

			var html = getVideoHTML(videoUrl, nativeVideo);

			mg$('.mgPlayerJSTest_iframe-wrapper-div').html(html);

			if (!GmCXt.playerI.videoPlayed) {
				GmCXt.playerI.videoPlayed = true;
			}

			var videoId = document.getElementById('video-container');
			GmCXt.isVideoPlayedOnShowMe = true;
			GmCXt.isVideoEndedOnShowme = false;
			videoId.onended = function() {
				GmCXt.isVideoEndedOnShowme = true;
			};

		});
	}
}

GmCXt.getUrlWithLang = function(url) {

	var urlextstr = url.split(".");
	var urlExt = "." + urlextstr[urlextstr.length - 1];
	var urlFilename = url.replace(urlExt, "");
	var urlLang = "";
	var tempUrl = "";

	if (GmCXt.enableTranslation && GmCXt.language) {
		if (GmCXt.defaultLang) {
			urlFilename = urlFilename.replace("_" + GmCXt.defaultLang.language, "");
		}
		urlLang = "_" + GmCXt.language;
	}

	tempUrl = urlFilename + urlLang + urlExt + GmCXt.getCdnSign();

	return tempUrl;
};

function playGuideGiphy() {
	GmCXt.stopAudio();
	GmCXt.playerI.type = GmCXt.TOUR_PLAYER_GIPHY;

	enableTab();

	var showGif = function(src) {

		if (src) {
			infoSrc = src;
		}
		if (!GmCXt.onPrem()) {
			infoSrc += '&d="' + Date.now() + '"';
		}
		var html = "<img class='gif-item " + getCustomImgName() + "' src='" + infoSrc + "' alt='" + GmCXt.playerI.tour.tour_title + "' />";

		mg$('.mgPlayerJSTest_iframe-wrapper-div').empty().html(html);

		if (!GmCXt.playerI.giphyPlayed) {
			GmCXt.playerI.giphyPlayed = true;
		}

		GmCXt.isGiphyPlayedOnShowme = true;
	};

	if (GmCXt.playerI.tour.media_files[0]) {
		var infoSrc = GmCXt.playerI.tour.media_files[0].gify;

		var orgGifUrl = infoSrc + GmCXt.getCdnSign();

		infoSrc = GmCXt.getUrlWithLang(infoSrc);

		GmCXt.checkAssetUrl(infoSrc, orgGifUrl, showGif);
	}
}

function activeSlideshowThumbnail() {
	mg$('.slideshow-thumbnail').removeClass('mgPlayerJSTest_active-thumbnail');
	mg$('.slideshow-thumbnail.img-thumbnail-' + GmCXt.playerI.currentStepId).addClass('mgPlayerJSTest_active-thumbnail');
}

function playNextStep() {
	stepPlay("next");
}

function playLiveStep() {
	formatAndSendToParentWindow("mgPlayerJSTest_action:play_tour", {});
}

function playPreviousStep() {
	stepPlay("previous");
}

function isCurrStepShowMe() {
	var step = GmCXt.getCurrentStep(GmCXt.playerI.currentStepId);
	if (step.step_settings.displayPreview !== true) {
		return true;
	} else if (GmCXt.playerI.linkGuidePlayMode && GmCXt.playerI.linkGuidePlayMode === "Show Me" &&
		GmCXt.playerI.linkedGuides && GmCXt.playerI.linkedGuides.includes(step.tour_id)) {
		return true;
	} else {
		return false;
	}
}

function stepPlay(stepDir) {
	var stepID = null;
	var steps = GmCXt.playerI.tour.steps;

	var currentThumPos = findThumbIndex() + 1;
	if (showMe.ready === true && GmCXt.playerI) {

		if (stepDir === 'previous') {
			var prevStepsList = GmCXt.getPreviousStepsList(parseInt(GmCXt.playerI.currentStepId));
			if (prevStepsList && prevStepsList.length > 1) {
				for (var i = 0; i < prevStepsList.length; i++) {
					if (mg$("#mgPlayerJSTest_slideshow-thumb-" + prevStepsList[i] + "") &&
						mg$("#mgPlayerJSTest_slideshow-thumb-" + prevStepsList[i] + "").length) {
						stepID = prevStepsList[i];
						break;
					}

				}
			} else {
				stepID = GmCXt.getPreviousStepId(parseInt(GmCXt.playerI.currentStepId), 'slideshow');
			}
		} else {
			stepID = GmCXt.getTail(GmCXt.playerI.currentStepId, GmCXt.playerI.playStructure);
			formatAndSendToParentWindow("mgPlayerJSTest_action:mark_auto_tour_donotshow", {
				tour: GmCXt.playerI.tour
			});
		}

		if (stepID) {
			showMe.ready = false;
			closeStep();

			GmCXt.playerI.currentStepId = stepID;
			var step = GmCXt.getStepFromPlayerI(stepID);
			if (GmCXt.isAutomationStep(step) || step.step_type === undefined) {
				showMe.ready = true;
				stepPlay(stepDir);
				return;
			}

			if (!isCurrStepShowMe() && GmCXt.playerI.mode === 'live') {

				closeSlideshowActivities();
				GmCXt.playerI.type = "live";
				playLiveStep();
				return;
			} else {
				var step = GmCXt.getStepFromPlayerI(stepID);
				if (step.step_type === GmCXt.STEP_TYPE_SURVEY || step.step_type === GmCXt.STEP_TYPE_TRANSPORT ||
					step.step_type === GmCXt.STEP_TYPE_ERROR_HANDLER) {
					showMe.ready = true;
					if (GmCXt.isLastStep(step.step_id, GmCXt.playerI.playStructure)) {
						setPrevNextButtons(step);
					} else {
						stepPlay(stepDir);
					}
					return;
				} else if (step.step_type === GmCXt.STEP_TYPE_GUIDE) {
					showMe.ready = true;
					var d = {
						tour_id: step.step_settings.tour_id
					};
					mg$('#mgPlayerJSTest_spinner').addClass('show');
					disable('.mgPlayerJSTest_slideshow-prev-button');
					disable('.mgPlayerJSTest_control-thumbnail-prev');
					disable('.mgPlayerJSTest_slideshow-next-button');
					disable('.mgPlayerJSTest_control-thumbnail-next');
					GmCXt.checkIfInvalidSegment(d).then(function(valid) {
						if (valid) {
							invalidSegmentGuide = invalidSegmentGuide.splice(invalidSegmentGuide.indexOf(step.step_id), 1);
							playSlideshowStep();
						} else {
							removeSlideThum(step.step_id);
							invalidSegmentGuide.push(step.step_id);
							if (GmCXt.isLastStep(step.step_id, GmCXt.playerI.playStructure)) {
								setPrevNextButtons(step);
							} else {
								stepPlay(stepDir);
							}
							mg$('#mgPlayerJSTest_spinner').removeClass('show');
							return;
						}
					});

				} else {
					playSlideshowStep();
				}
			}

			var t_ind = findIndex();
			if ((GmCXt.imgThumLength !== parseInt(GmCXt.playerI.tour.step_count) &&
					currentThumPos === GmCXt.imgThumLength && stepDir === 'next' &&
					steps[t_ind] && steps[t_ind].step_type !== GmCXt.STEP_TYPE_SURVEY &&
					steps[t_ind].step_type !== GmCXt.STEP_TYPE_TRANSPORT &&
					steps[t_ind].step_type !== GmCXt.STEP_TYPE_ERROR_HANDLER) ||
				(GmCXt.imgThumLength !== parseInt(GmCXt.playerI.tour.step_count) &&
					currentThumPos === 0 && stepDir === 'next' &&
					steps[t_ind] && GmCXt.getPreviousStepId(parseInt(steps[t_ind].step_id)) === GmCXt.playerI.mergingFromId &&
					steps[t_ind].step_type !== GmCXt.STEP_TYPE_SURVEY &&
					steps[t_ind].step_type !== GmCXt.STEP_TYPE_TRANSPORT &&
					steps[t_ind].step_type !== GmCXt.STEP_TYPE_ERROR_HANDLER)) {
				if (steps[t_ind]) {
					createSlideThum(steps[t_ind]);
					GmCXt.imgThumLength = GmCXt.imgThumLength + 1;
				}
			}

			activeSlideshowThumbnail();

			if (stepDir === 'previous' && step.step_type !== GmCXt.STEP_TYPE_BRANCH)
				mg$('.mgPlayerJSTest_thumbnail-preview-wrapper').scrollLeft(mg$('.mgPlayerJSTest_thumbnail-preview-wrapper').scrollLeft() - mg$('.mgPlayerJSTest_thumbnail-preview').outerWidth(true));
			else if (stepDir === 'next')
				mg$('.mgPlayerJSTest_thumbnail-preview-wrapper').scrollLeft(mg$('.mgPlayerJSTest_thumbnail-preview-wrapper').scrollLeft() + mg$('.mgPlayerJSTest_thumbnail-preview').outerWidth(true));

			if (mg$(".mgPlayerJSTest_resize-slideshow-minimize").is(":visible"))
				resizeSlideshowWindow('full', true);
		} else {
			closeSlideshow();
		}
	}
}

function resizeSlideshowWindow(size, sendMsg, isPowerform) {
	if (sendMsg) {

		GmCXt.makeSlideshowFullScreen({
			size: size,
			isPowerform: isPowerform
		});
	}
	if (size === 'full') {
		hideControl(".mgPlayerJSTest_resize-slideshow-maximize");
		showControl(".mgPlayerJSTest_resize-slideshow-minimize");

		mg$(".slideshow-spinner-outer").css({
			'top': '50%'
		});

		mg$(".mgPlayerJSTest_play-video-iframe").css({
			width: '100%',
			height: '98%',
			margin: '0'
		});

		mg$(".mgPlayerJSTest_slideshow-main").css({
			width: '100%',
			height: '100%',
		});

		hide('.mgPlayerJSTest_showMe-player-ctrl-container');

		mg$(".mgPlayerJSTest_slideshow-step-img").css({
			'top': ' 50%',
			'transform': 'translate(-50%,-50%)'
		});

		mg$(".mgPlayerJSTest_iframe-wrapper-div").css({
			width: '100%',
			height: '94%',
			margin: '0'
		});

		mg$(".mgPlayerJSTest_slideshow-prev-button").css({
			'top': ' 50%'
		});
		mg$(".mgPlayerJSTest_slideshow-next-button").css({
			'top': ' 50%'
		});
		mg$(".mgPlayerJSTest_slideshow-header").css({
			'border-radius': '0'
		});
		mg$(".mgPlayerJSTest_slideshow-step-img-div").removeClass('mgPlayerJSTest_position-center');
		hide('.mgPlayerJSTest_step-thumbnail-container');

		if (GmCXt.playerI && GmCXt.playerI.type !== 'slideshow') {
			mg$("#mgPlayerJSTest_player-audio-controls-header").addClass('mgPlayerJSTest_display-none-imp');
			mg$("#mgPlayerJSTest_player-audio-controls-header").removeClass('mgPlayerJSTest_display-inline-block-imp');
		} else {
			mg$("#mgPlayerJSTest_player-audio-controls-header").addClass('mgPlayerJSTest_display-inline-block-imp');
			mg$("#mgPlayerJSTest_player-audio-controls-header").removeClass('mgPlayerJSTest_display-none-imp');
		}
	} else {
		showControl(".mgPlayerJSTest_resize-slideshow-maximize");
		hideControl(".mgPlayerJSTest_resize-slideshow-minimize");

		mg$(".slideshow-spinner-outer").css({
			'top': '50%'
		});

		mg$(".mgPlayerJSTest_play-video-iframe").css({
			width: '100%',
			height: '100%',
			margin: '0 5px'
		});
		mg$(".mgPlayerJSTest_slideshow-main").css({
			width: '100%',
			height: 'calc(100% - 192px)',
		});

		if (GmCXt.playerI && GmCXt.playerI.tour)
			show('.mgPlayerJSTest_showMe-player-ctrl-container');

		mg$(".mgPlayerJSTest_slideshow-step-img").css({
			'top': '50%',
			'transform': 'translate(-50%,-50%)'
		});
		mg$(".mgPlayerJSTest_iframe-wrapper-div").css({
			width: '96%',
			height: '89%',
			margin: '0 15px'
		});
		mg$(".mgPlayerJSTest_slideshow-prev-button").css({
			'top': ' 50%'
		});
		mg$(".mgPlayerJSTest_slideshow-next-button").css({
			'top': ' 50%'
		});
		mg$(".mgPlayerJSTest_slideshow-header").css({
			'border-radius': '4px 4px 0px 0px'
		});
		mg$(".mgPlayerJSTest_slideshow-step-img-div").addClass('mgPlayerJSTest_position-center');
		showFlex('.mgPlayerJSTest_step-thumbnail-container');

		mg$("#mgPlayerJSTest_player-audio-controls-header").addClass('mgPlayerJSTest_display-none-imp');
		mg$("#mgPlayerJSTest_player-audio-controls-header").removeClass('mgPlayerJSTest_display-inline-block-imp');

		if (GmCXt.playerI && GmCXt.playerI.type !== 'slideshow') {
			hide('.mgPlayerJSTest_step-thumbnail-container');
			playModeView(GmCXt.playerI.type);
		}
	}
}

function playSlideshowStep() {
	GmCXt.playerI.type = GmCXt.TOUR_PLAYER_SLIDESHOW;
	enableTab();

	var steps = GmCXt.playerI.tour.steps;

	function cb(newSteps) {

		if (!newSteps.length) {
			removeSlideThum(GmCXt.playerI.currentStepId);
			showMe.ready = true;
			playNextStep();
			return;
		}
		if (GmCXt.branchStepExistInPS()) {
			var id = '#mgPlayerJSTest_slideshow-thumb-' + GmCXt.playerI.currentStepId;
			mg$(id).nextAll('.slideshow-thumbnail-img').remove();
			removeSlideThum(GmCXt.playerI.currentStepId);
		}


		GmCXt.concatLinkGuideSteps(newSteps);

		GmCXt.playerI.currentStepId = GmCXt.playerI.linkGuideFS;

		var stepCount = GmCXt.playerI.tour.step_count;

		var steps = GmCXt.playerI.tour.steps;

		if (GmCXt.containBranchStep(GmCXt.playerI.tour)) {
			GmCXt.playerI.tour.tour_settings.play_structure = GmCXt.playerI.playStructure;
		}

		if (GmCXt.branchStepExist(GmCXt.playerI.tour)) {
			steps = GmCXt.getStepSortedByPS(GmCXt.playerI.playStructure, GmCXt.playerI.currentStepId);
		} else {
			steps = GmCXt.playerI.tour.steps;
		}

		addSlidePlayerThumbnail(undefined, steps);

		activeSlideshowThumbnail();

		playSlideStep();
	}

	function segmentCheckCB(steps, mainStepId) {
		if (GmCXt.isEmpty(steps)) {
			removeSlideThum(mainStepId);
			invalidSegmentGuide.push(step.step_id);
		}
		cb(steps);
		mg$('.mgPlayerJSTest_thumbnail-preview-wrapper').scrollLeft(mg$('.mgPlayerJSTest_thumbnail-preview-wrapper').scrollLeft() + mg$('.mgPlayerJSTest_thumbnail-preview').outerWidth(true));
		if (mg$(".mgPlayerJSTest_resize-slideshow-minimize").is(":visible"))
			resizeSlideshowWindow('full', true);
	}

	var step = GmCXt.getStepFromPlayerI(GmCXt.playerI.currentStepId);

	if (parseInt(step.step_order) === steps.length) {
		GmCXt.isLastStepPlayedOnShowme = true;
	}
	if (step.step_type === 'guide') {

		var d = {
			tour_id: step.step_settings.tour_id
		};

		if (GmCXt.apiPlayer) {
			d.forceJSONApi = true;
		}

		var scope = angular.element(mg$("#main-container")).scope();
		scope.getSteps(d).then(function(_tour) {
			if (!_tour) {
				segmentCheckCB([], step.step_id);
			} else {
				GmCXt.checkGuidesBasedOnSegment([_tour], function(_t) {

					if (!GmCXt.isEmpty(_t)) {
						_tour.steps = GmCXt.filterOutAutomationSteps(_tour.steps);
						GmCXt.updatePlayStructureLinkGuide(_tour);
					} else {
						_tour.steps = [];
					}

					segmentCheckCB(_tour.steps, step.step_id);

				});
			}
		});

	} else {
		playSlideStep();
	}
}

function findArrayItemIndex(array, attr, value) {

	for (var i = 0; i < array.length; i += 1) {
		if (array[i][attr] === value) {
			return i;
		}
	}
	return -1;
}

function playSlideVideo(step) {
	var videoUrl = step.step_video_url + GmCXt.getCdnSign();

	var playVid = function(url) {

		if (url) videoUrl = url;

		var html = getVideoHTML(videoUrl, true);

		mg$('.mgPlayerJSTest_iframe-wrapper-div').html(html);

		var vid = document.getElementById('video-container');

		vid.addEventListener('error', function(event) {
			GmCXt.toastMsg(GmCXt.label.unprocessedVideo).show();
			vid.controls = false;
			vid.removeEventListener('error', null, true);
		}, true);

		vid.onended = function() {

			if (GmCXt.isLastStep(step.step_id, GmCXt.playerI.playStructure)) {
				closeSlideshow();
			} else {
				GmCXt.timeout(function() {
					if (showMe.autoPlayNextStep) {
						playNextStep();
					}
				}, 2000);
			}
		};
	};

	GmCXt.checkAssetUrl(videoUrl, videoUrl, playVid);
}

function playSlideBranch(step) {

	mg$('.mgPlayerJSTest_slideshow-thumb-' + step.step_id).nextAll('.slideshow-thumbnail-img').remove();
	mg$('#mgPlayerJSTest_spinner').removeClass('show');

	hideControl('.mgPlayerJSTest_slideshow-next-button');
	showControl(".mgPlayerJSTest_slideshow-branch-content");

	var branchButtons = '';
	var ss = step.step_settings;
	var branch = ss.branch;
	var PS = GmCXt.playerI.playStructure;
	var node = getNode(PS, step.step_id);
	var stepTitle = GmCXt.removeHtmlFromText(step.step_title);
	var stepDesc = GmCXt.removeHtmlFromText(step.step_description);

	mg$(".mgPlayerJSTest_slideshow-branch-heading-label").text(stepTitle);
	mg$(".mgPlayerJSTest_slideshow-branch-step-desc").text(stepDesc);

	for (var i = 0; i < branch.length; i++) {
		var branchName = branch[i].branchName;
		var tail = node.branch[i].tail;
		branchButtons = branchButtons +
			"<div class='mgPlayerJSTest_slideshow-branch-btn mgPlayerJSTest_btn-default' tail=" + tail + ">" +
			"<div class='mgPlayerJSTest_slideshow-branch-icon'>" +
			"</div>" +
			"<label class='mgPlayerJSTest_slideshow-branch-label mgPlayerJSTest_line-clamp mgPlayerJSTest_line-clamp-1'>" + branchName + "</label>" +
			"</div>";
	}

	mg$('.mgPlayerJSTest_slideshow-button-container').append(branchButtons);

	if (branch.length <= 1) {
		mg$('.mgPlayerJSTest_slideshow-button-container').addClass('mgPlayerJSTest_text-align-center');
	} else {
		mg$('.mgPlayerJSTest_slideshow-button-container').removeClass('mgPlayerJSTest_text-align-center');
	}

	disable('.mgPlayerJSTest_control-thumbnail-next');
	mg$(".mgPlayerJSTest_slideshow-branch-icon").html(GmCXt.svgs.branch_slideshow);
	addBranchButtonsListener();
}

function playSlideImage(step) {

	mg$('#mgPlayerJSTest_spinner').addClass('show');

	mg$('.mgPlayerJSTest_slideshow-step-img').off('load').on('load', function() {
		mg$('#mgPlayerJSTest_spinner').removeClass('show');
	});

	var cropFlag = false;

	var slideImgURL = getImgURL(step, cropFlag);

	mg$('.mgPlayerJSTest_slideshow-step-img').addClass(getCustomImgName());

	mg$('.mgPlayerJSTest_slideshow-step-img').attr('src', slideImgURL).attr('alt', GmCXt.concatHTMLStringWithSpace(step.step_title));

}

function setPrevNextButtons(step) {

	reset('.mgPlayerJSTest_slideshow-prev-button');
	reset('.mgPlayerJSTest_slideshow-next-button');
	reset('.mgPlayerJSTest_control-thumbnail-prev');
	reset('.mgPlayerJSTest_control-thumbnail-next');

	if (step.step_type === GmCXt.STEP_TYPE_BRANCH) {
		disable('.mgPlayerJSTest_control-thumbnail-next');
	}

	var prevStepId = GmCXt.getPreviousStepId(parseInt(GmCXt.playerI.currentStepId));
	var prevStep = GmCXt.getStepFromPlayerI(prevStepId);

	if (GmCXt.isFirstNonAutomationStep() || (prevStep && (prevStep.step_type === GmCXt.STEP_TYPE_SURVEY ||
		prevStep.step_type === GmCXt.STEP_TYPE_TRANSPORT || prevStep.step_type === GmCXt.STEP_TYPE_ERROR_HANDLER)) &&
		GmCXt.isFirstNonAutomationStep(prevStep.step_id)) {
		disable('.mgPlayerJSTest_slideshow-prev-button');
		disable('.mgPlayerJSTest_control-thumbnail-prev');
	}

	var nxtStepID = GmCXt.getTail(step.step_id, GmCXt.playerI.playStructure);
	var nxtStep = GmCXt.getStepFromPlayerI(nxtStepID);

	if (GmCXt.isLastStep(step.step_id, GmCXt.playerI.playStructure) ||
		(nxtStep && nxtStep.step_type === GmCXt.STEP_TYPE_SURVEY && nxtStep.step_type === GmCXt.STEP_TYPE_TRANSPORT &&
			nxtStep.step_type === GmCXt.STEP_TYPE_ERROR_HANDLER &&
			GmCXt.isLastStep(nxtStep.step_id, GmCXt.playerI.playStructure))) {

		disable('.mgPlayerJSTest_slideshow-next-button');
		disable('.mgPlayerJSTest_control-thumbnail-next');

		if (GmCXt.isFirstNonAutomationStep()) {
			disable('.mgPlayerJSTest_slideshow-prev-button');
			disable('.mgPlayerJSTest_control-thumbnail-prev');
		}
	}
}

function playStep(stepId) {
	GmCXt.timeout(function() {
		if (showMe.autoPlayNextStep === true && GmCXt.playerI.currentStepId !== stepId) {
			playNextStep();
		}
	}, 5000);
}

function playAudioAndPlayNext(step, PI) {

	GmCXt.storage().get(['stepAudioRunningStatus']).then(function(items) {

		if (GmCXt.audioObject) GmCXt.audioObject.pause();
		if (PI) GmCXt.playerI = PI;

		var nextStepId = GmCXt.getTail(GmCXt.playerI.currentStepId, GmCXt.playerI.playStructure);

		// Play step audio by default or if user has switched on step audio 
		// by clicking on the step audio icon.
		var audioT = "";

		var playSSAudio = function(url) {

			if (url) {
				audioT = url;
			}

			GmCXt.audioObject = new Audio(audioT);

			GmCXt.audioObject.onended = function() {

				if (!GmCXt.isLastStep(step.step_id, GmCXt.playerI.playStructure)) {
					playStep(nextStepId);
				}
			};

			playAudioObject();

			GmCXt.stepAudioRunningStatus = true;

			showControl('.mgPlayerJSTest_btn-audio-unmute');
			hideControl('.mgPlayerJSTest_btn-audio-mute');
			mg$('.mgPlayerJSTest_player-audio-controls').addClass('playing-audio');
		};

		if (GmCXt.isDefined(step.step_audio) &&
			GmCXt.getAudioPreference(items.stepAudioRunningStatus)) {

			var message = {
				audioTrack: step.step_audio,
				step: step
			};
			audioT = message.audioTrack;

			if (audioT && audioT.indexOf('?st=') === -1) {
				audioT = audioT + GmCXt.getCdnSign();
			}

			GmCXt.checkAssetUrl(audioT, audioT, playSSAudio);

		} else {

			playStep(nextStepId);

			GmCXt.stepAudioRunningStatus = false;

			hideControl('.mgPlayerJSTest_btn-audio-unmute');
			showControl('.mgPlayerJSTest_btn-audio-mute');
			mg$('.mgPlayerJSTest_player-audio-controls').removeClass('playing-audio');

		}
	});
}

function trackSlideshowEvents(step) {

	var validSegments = [];

	if (GmCXt.playerI && GmCXt.playerI.tour.tour_settings.segment_groups) {
		validSegments = GmCXt.getTourSegmentDetail(GmCXt.playerI.tour);
	}

	var taskId = null;

	if (GmCXt.playerI && GmCXt.playerI.taskObj && GmCXt.playerI.taskObj.taskId) {
		taskId = GmCXt.playerI.taskObj.taskId;
	}

	if (GmCXt.isVideoPlayedOnShowMe) {
		var isAudio = !mg$('#video-container').prop('muted');
		GmCXt.trackerV1.trackGuideShowMe(GmCXt.playerI.tour, 'video', GmCXt.playerI.origin, isAudio, validSegments, taskId);

	}
	if (GmCXt.isGiphyPlayedOnShowme) {
		GmCXt.trackerV1.trackGuideShowMe(GmCXt.playerI.tour, 'gif', GmCXt.playerI.origin, false, validSegments, taskId);

	}

	if ((!GmCXt.playerI.originalMode || GmCXt.playerI.origin) &&
		GmCXt.playerI.mode === 'slideshow') {
		GmCXt.trackerV1.trackGuideShowMe(GmCXt.playerI.tour, 'ppt', GmCXt.playerI.origin, GmCXt.stepAudioRunningStatus, validSegments, taskId);
	}
}

function playSlideStep() {

	hideControl(".mgPlayerJSTest_slideshow-branch-content");
	mg$('.mgPlayerJSTest_slideshow-button-container').empty();
	enableTab();

	var step = GmCXt.getStepFromPlayerI(GmCXt.playerI.currentStepId);

	var nextStepId = GmCXt.getTail(GmCXt.playerI.currentStepId, GmCXt.playerI.playStructure);

	if (step === undefined) return;

	var stepType = step.step_type;

	if (stepType === GmCXt.STEP_TYPE_VIDEO)
		playSlideVideo(step);
	else if (stepType === GmCXt.STEP_TYPE_BRANCH || GmCXt.isTrue(step.step_settings.inlineBranch))
		playSlideBranch(step);
	else if (stepType === GmCXt.STEP_TYPE_SURVEY || stepType === GmCXt.STEP_TYPE_TRANSPORT || 
		stepType === GmCXt.STEP_TYPE_ERROR_HANDLER) {
		if (nextStepId) {
			GmCXt.playerI.currentStepId = nextStepId;
			formatAndSendToParentWindow("mgPlayerJSTest_action:update_player_instance");
			playSlideStep();
		}
		return;
	} else {
		playSlideImage(step);
	}

	mg$('.mgPlayerJSTest_slideshow-step-title').text(step.step_title);

	step.step_description = GmCXt.updateOrgAndAddSignature(step.step_description);

	mg$('.mgPlayerJSTest_slideshow-step-desc').html(step.step_description);

	activeSlideshowThumbnail();

	if (stepType !== GmCXt.STEP_TYPE_VIDEO) {
		playAudioAndPlayNext(step, GmCXt.playerI);
	}

	setPrevNextButtons(step);

	GmCXt.playerI.lastStepStatus = 'success';
	showMe.ready = true;
}

function getImgURL(step, isCropped, type) {

	if (type === GmCXt.STEP_TYPE_BRANCH) {
		return GmCXt.conf.staticContentPath + "default_branch.png";
	}

	var imgURL = "";

	switch (type) {
		case GmCXt.STEP_TYPE_VIDEO:
			screenurl = step.image_url;
			break;

		default:

			if (step.screen_url) {
				screenurl = step.screen_url;
			} else if (step.step_screen_temp) {
				imgURL = step.step_screen_temp;
			}
			break;

	}

	if (!imgURL) {
		var filename = screenurl.substring(screenurl.lastIndexOf('/') + 1);
		var signext = filename.split('.');
		var ext = "";

		if (signext.length > 1) ext = signext[1].split('?');

		if (isCropped && (filename.indexOf('default_icon') === -1)) {
			var cropedfilename = signext[0] + "_cropped." + ext[0];
			imgURL = screenurl.replace(filename, cropedfilename);
		} else {
			var imgfilename = signext[0] + "." + ext[0];
			imgURL = screenurl.replace(filename, imgfilename);
		}

		imgURL += GmCXt.getCdnSign();
	}

	return imgURL;
}

function slideshowAudioIconClickEvent(e) {
	GmCXt.stopAudio();

	var step = GmCXt.getStepFromPlayerI(GmCXt.playerI.currentStepId);

	GmCXt.audioObject = new Audio(step.step_audio + GmCXt.getCdnSign());

	// mg$('.mgPlayerJSTest_slideshow-audio img').attr('src', "");

	if (mg$('.mgPlayerJSTest_player-audio-controls').hasClass("playing-audio")) {
		GmCXt.audioObject.pause();
		mg$('.mgPlayerJSTest_player-audio-controls').removeClass('playing-audio');
		GmCXt.storage().set({
			'stepAudioRunningStatus': false
		});

		GmCXt.stepAudioRunningStatus = false;

		hideControl('.mgPlayerJSTest_btn-audio-unmute');
		showControl('.mgPlayerJSTest_btn-audio-mute');

	} else {

		playAudioObject();

		mg$('.mgPlayerJSTest_player-audio-controls').addClass('playing-audio');
		GmCXt.storage().set({
			'stepAudioRunningStatus': true
		});

		GmCXt.stepAudioRunningStatus = true;

		showControl('.mgPlayerJSTest_btn-audio-unmute');
		hideControl('.mgPlayerJSTest_btn-audio-mute');
	}
}

function closeStep() {

	GmCXt.stopAudio();
	// Close video
	removeVideo();
}

function playAudio() {
	if (!GmCXt.getGlobalAudioPrference() && !GmCXt.FT.audio) {
		return 'muted';
	}
	return '';
}

function setShowMeOptions() {

	if (showMe.settings.showMeSetting &&
		!GmCXt.containBranchStep(GmCXt.playerI.tour)
	) {
		showInlineFlex('.mgPlayerJSTest_mode-video');
		if (!showMe.settings.giphy) {
			hide('.mgPlayerJSTest_mode-giphy');
		}
		if (!showMe.settings.video) {
			hide('.mgPlayerJSTest_mode-video');
		}
	} else {
		hide('.mgPlayerJSTest_mode-giphy');
		hide('.mgPlayerJSTest_mode-video');
	}
}

function playAudioObject() {
	var promise = GmCXt.audioObject.play();
	if (promise !== undefined) {
		promise.then(function() {
			// Autoplay started!
		}).catch(function() {
			// Autoplay was prevented.
		});
	}
}

function addBranchButtonsListener() {

	mg$(".mgPlayerJSTest_slideshow-branch-btn").on("click", function(e) {
		var nextStepId = e.currentTarget.getAttribute("tail");

		if (GmCXt.convertType(nextStepId)) {
			GmCXt.playerI.currentStepId = nextStepId;
			var steps = GmCXt.playerI.tour.steps;
			nStep = GmCXt.getStepFromPlayerI(GmCXt.playerI.currentStepId);
			if (GmCXt.isLastStep(nStep.step_id, GmCXt.playerI.playStructure) && (nStep.step_type === GmCXt.STEP_TYPE_SURVEY ||
				nStep.step_type === GmCXt.STEP_TYPE_TRANSPORT)) {
				e.preventDefault();
				return;
			}

			mg$('.mgPlayerJSTest_slideshow-button-container').empty();
			hideControl(".mgPlayerJSTest_slideshow-branch-content");
			mg$(".mgPlayerJSTest_slideshow-branch-btn").off("click");

			showMe.ready = false;
			closeStep();

			if (nStep.step_type !== GmCXt.STEP_TYPE_GUIDE) {
				var stepInd = findIndex();
				addSlidePlayerThumbnail(nextStepId);
				mg$('.mgPlayerJSTest_thumbnail-preview-wrapper').scrollLeft(mg$('.mgPlayerJSTest_thumbnail-preview-wrapper').scrollLeft() + mg$('.mgPlayerJSTest_thumbnail-preview').outerWidth(true));
			}
			if (GmCXt.playerI.mode === 'live') {
				playLiveStep();
			} else {
				playSlideshowStep();
			}
		}

	});
}

function getNode(PS, stepID) {

	for (var i = 0; i < PS.length; i++) {
		if (PS[i].id === stepID)
			return PS[i];
	}
}

function createSlideThum(step) {

	sid = "#mgPlayerJSTest_slideshow-thumb-" + step.step_id;
	if (step.step_type !== GmCXt.STEP_TYPE_SURVEY && step.step_type !== GmCXt.STEP_TYPE_TRANSPORT && mg$(sid).length === 0 && 
		step.step_type !== GmCXt.STEP_TYPE_ERROR_HANDLER && !(mg$("#mgPlayerJSTest_slideshow-thumb-" + step.step_id + "") &&
		mg$("#mgPlayerJSTest_slideshow-thumb-" + step.step_id + "").length)) {

		var slideImgURL = getImgURL(step, step.is_screen_url_processed, step.step_type);

		var thumbnail = "<button id='mgPlayerJSTest_slideshow-thumb-" + step.step_id + "' class='mgPlayerJSTest_thumbnail-preview mgPlayerJSTest_inline-block-vm mgPlayerJSTest_cursor-pointer slideshow-thumbnail-img mgPlayerJSTest_position-relative mgPlayerJSTest_slideshow-thumb-" + step.step_id + " mgPlayerJSTest_lbl-btn'" +
			" stepId='" + step.step_id + "'>" +
			// "<div class='mgPlayerJSTest_thumbnail-step-count mgPlayerJSTest_position-center'>Step 1</div>" +
			"<img class='" + getCustomImgName() + " slideshow-thumbnail img-thumbnail-" + step.step_id +
			"' src=" + slideImgURL + " err-src='" + GmCXt.conf.staticContentPath + "technology.jpg'></button>";

		mg$('.mgPlayerJSTest_thumbnail-preview-wrapper').append(thumbnail);
	}
}

function removeSlideThum(id) {

	id = '#mgPlayerJSTest_slideshow-thumb-' + id;

	mg$(id).remove();

}

function createThumbnail(stepId, stepLength, steps) {
	if (stepId === undefined) mg$('.mgPlayerJSTest_thumbnail-preview-wrapper').empty();

	var currentStepCount = findIndex() + 1;
	var stepCountView = "<div class='mgPlayerJSTest_step-count-wrapper'><div class='mgPlayerJSTest_step-count'>Step " + currentStepCount + " of " + parseInt(GmCXt.playerI.tour.step_count) + "</div></div>";
	mg$('.mgPlayerJSTest_thumbnail-preview-wrapper').append(stepCountView);

	for (var i = 0; i < stepLength; i++) {
		if (steps[i] && invalidSegmentGuide.indexOf(steps[i].step_id) === -1) {
			createSlideThum(steps[i]);
		}
		if ((steps[i].step_type === GmCXt.STEP_TYPE_SURVEY || steps[i].step_type === GmCXt.STEP_TYPE_TRANSPORT || 
			steps[i].step_type === GmCXt.STEP_TYPE_ERROR_HANDLER) && stepLength < steps.length) {
			stepLength = stepLength + 1;
		}
	}
}

function findIndex() {
	var index = -1;
	GmCXt.playerI.tour.steps.forEach(function(el, i) {
		if (el.step_id === GmCXt.playerI.currentStepId) {
			index = i;
		}
	});
	return index;
}

function findThumbIndex() {
	var index = -1;
	var thumbs = mg$('.mgPlayerJSTest_thumbnail-preview');
	for (var i = 0; i < thumbs.length; i++) {
		if (thumbs[i].id === "mgPlayerJSTest_slideshow-thumb-" + GmCXt.playerI.currentStepId) {
			index = i;
		}
	}
	return index;
}

GmCXt.removeDuplicateGuides = function(tours) {
	var tId = [];
	tours = tours.filter(function(t) {
		if (tId.indexOf(t.tour_id) === -1) {
			tId.push(t.tour_id);
			return t;
		}
	});
	return tours;
};

GmCXt.removeDuplicateCategories = function(cats) {
	var cId = [];
	cats = cats.filter(function(c) {
		if (cId.indexOf(c.category_id) === -1) {
			cId.push(c.category_id);
			return c;
		}
	});
	return cats;
};

GmCXt.migrateTour = function(t) {

	if (t) {
		var s = t.tour_settings;

		// For versions < 1.2.5
		// smartTip property is removed in v1.2.5
		if (s.smartTip) {

			s.tour_url = s.smartTip.url;

			var e = 'matchUrl';
			if (s.smartTip.matchDomain) {
				e = 'matchDomain';
			}
			s.smartTipTriggerEvent = e;

			delete s.smartTip;
		}

		t.tour_settings = s;
	}

	return t;
};

GmCXt.checkDefaultLangForTour = function(t, l) {
	var retVal = false;
	if (GmCXt.isFalse(l) || l.indexOf('en-') !== -1)
		retVal = true;
	else if (t && t.languages && t.languages.length) {
		var dl = t.languages[t.languages.length - 1];
		if (dl && dl.language === l) {
			retVal = true;
		}
	}

	return retVal;
};

function linkedGuidePSCheck(playStructure) {
	if (playStructure.length) {
		var ps = playStructure.filter(function(node) {
			return node.tail === null;
		});

		if (ps.length > 1) {
			return true;
		}
	}
	return false;
}

GmCXt.checkAndCorrectPS = function(tour) {

	if (!GmCXt.containBranchStep(tour)) {

		var tourSettings = tour.tour_settings;
		var playStructure = tourSettings.play_structure;

		if (!playStructure ||
			(Array.isArray(playStructure) &&
				(!playStructure.length || playStructure.length < tour.steps.length)) ||
			linkedGuidePSCheck(playStructure)
		) {
			tourSettings.play_structure = GmCXt.buildGuidePlayStructure(tour);
			tour.tour_settings = tourSettings;
		}
	}

	return tour;
};

GmCXt.increaseSidePanel = function() {
	var m = {
		action: "mgPlayerJSTest_action:increase_side_panel_width"
	};
	GmCXt.sendToParentWindow(m);
};

GmCXt.reduceSidePanel = function() {
	var m = {
		action: "mgPlayerJSTest_action:reduce_side_panel_width"
	};
	GmCXt.sendToParentWindow(m);
};

GmCXt.makeSlideshowFullScreen = function(data) {
	var playerType = ["slideshow", "video", "giphy"];
	if ((GmCXt.playerI && GmCXt.inArrayString(GmCXt.playerI.type, playerType)) || data.isPowerform) {
		if (data.size === 'full') {
			mg$('#mgPlayerJSTest_slideshow_drag').hide();
			mg$(".mgPlayerJSTest_slideshow-panel").css({
				width: '100%',
				height: '100%',
				top: '0px',
				transform: 'translate(0,0)'
			});
			mg$(".mgPlayerJSTest_slideshow-panel").addClass('mgPlayerJSTest_slideshow-panel-left');
			mg$(".mgPlayerJSTest_slideshow-step-img").css({
				'top': '50%',
				'transform': 'translate(-50%,-50%)'
			});
		} else {
			mg$('#mgPlayerJSTest_slideshow_drag').show();
			mg$(".mgPlayerJSTest_slideshow-panel").css({
				width: '59%',
				height: '81%',
				top: '50%',
				left: '50%',
				transform: 'translate(-50%,-50%)'
			});

			mg$(".mgPlayerJSTest_slideshow-panel").removeClass('mgPlayerJSTest_slideshow-panel-left');
			mg$(".mgPlayerJSTest_slideshow-step-img").css({
				'top': '50%',
				'transform': 'translate(-50%,-50%)'
			});
		}
	}
};

GmCXt.addDragSlideshowFunction = function() {
	var elmnt = document.getElementsByClassName('mgPlayerJSTest_slideshow-panel')[0];
	var dragEl = document.getElementById('mgPlayerJSTest_slideshow_drag');

	GmCXt.attachDragEvents(elmnt, dragEl);
};

GmCXt.getPopUpHTML = function(url, isNative, title, desc, isVideoStep) {
	function htmlToPlaintext(text) {
		return text ? String(text).replace(/<[^>]+>/gm, '') : '';
	}

	var html = "<div class='mgPlayerJSTest_overlay-container'></div>" +
		"<div class='mgPlayerJSTest_video-panel' >" +
		"<div class='mgPlayerJSTest_video-panel-header'>" +
		"<div class='mgPlayerJSTest_video-panel-header-labels'>" +
		"<div class='mgPlayerJSTest_video-panel-header-title'>" +
		htmlToPlaintext(title) +
		"<div class='mgPlayerJSTest_title-tooltip-wrapper mgPlayerJSTest_position-right mgPlayerJSTest_overflow mgPlayerJSTest_overflow-y'>" +
		"<div class='mgPlayerJSTest_tooltip-title'>" + htmlToPlaintext(title) + "</div>" +
		"</div>" +
		"</div>" +
		"<div class='mgPlayerJSTest_video-panel-header-desc'>" +
		htmlToPlaintext(desc) +
		"<div class='mgPlayerJSTest_title-tooltip-wrapper mgPlayerJSTest_position-right mgPlayerJSTest_overflow mgPlayerJSTest_overflow-y'>" +
		"<div class='mgPlayerJSTest_tooltip-title'>" + htmlToPlaintext(desc) + "</div>" +
		"</div>" +
		"</div>" +
		"</div>" +
		"<div class='mgPlayerJSTest_video-panel-controls'>";

	if (!isVideoStep) {
		html += "<div class='mgPlayerJSTest_video-panel-header-maximize'>" +
			"<button class='mgPlayerJSTest_lbl-btn mgPlayerJSTest_audio-button-image mgPlayerJSTest_icons-hover-effect mgPlayerJSTest_inline-block-vm' aria-label='maximize image' >" +
			"<span>" +
			"</span>" +
			"</button>" +
			"</div>";

		html += "<div class='mgPlayerJSTest_video-panel-header-maximize'>" +
			"<button class='mgPlayerJSTest_lbl-btn mgPlayerJSTest_max-button-image mgPlayerJSTest_icons-hover-effect mgPlayerJSTest_inline-block-vm' aria-label='maximize image' >" +
			"<span>" +
			"</span>" +
			"</button>" +
			"</div>";
	}

	html += "<div class='mgPlayerJSTest_video-panel-header-close'>" +
		"<button class='mgPlayerJSTest_lbl-btn mgPlayerJSTest_close-button-video mgPlayerJSTest_icons-hover-effect mgPlayerJSTest_inline-block-vm' aria-label='close video player' >" +
		"<span>" +
		"</span>" +
		"</button>" +
		"</div>" +
		"</div>" +
		"</div>";
	if (isVideoStep)
		html += GmCXt.getVideoPopUpIFrameHTML(url, isNative);
	else
		html += GmCXt.getImagePopUpIFrameHTML(url, isNative);

	html += GmCXt.getPopUpFooterHTML() + " </div>";

	return html;
};

function addVideoPanelEvents(step, isVideoStep, data) {
	var os = GmCXt.getStepSettings();
	var popupDesign = os.popupDesign;
	var fullScreen = false;

	if (popupDesign) {
		if (popupDesign.type === 'default') {
			mg$('#mgPlayerJSTest_play_step_prev').removeClass('popup-classic-design-navigation-prev');
			mg$('#mgPlayerJSTest_play_step_prev').addClass('mgPlayerJSTest_play-step-prev');
			mg$('#mgPlayerJSTest_play_step_next').removeClass('mgPlayerJSTest_popup-classic-navigation-next');
			mg$('#mgPlayerJSTest_play_step_next').addClass('mgPlayerJSTest_play-step-next');
		} else if (popupDesign.type === 'classic') {
			mg$('#mgPlayerJSTest_play_step_prev').removeClass('mgPlayerJSTest_play-step-prev');
			mg$('#mgPlayerJSTest_play_step_prev').addClass('popup-classic-design-navigation-prev');
			mg$('#mgPlayerJSTest_play_step_next').removeClass('mgPlayerJSTest_play-step-next');
			mg$('#mgPlayerJSTest_play_step_next').addClass('mgPlayerJSTest_popup-classic-navigation-next');
		}
	}

	mg$('#mgPlayerJSTest_play_step_prev').css({
		"background-color": popupDesign.current.prevBtnBackground,
		"color": popupDesign.current.prevBtnColor,
		"border-color": popupDesign.current.prevBtnColor
	});

	mg$('#mgPlayerJSTest_play_step_prev svg path').css({
		"fill": popupDesign.current.prevBtnColor
	});

	mg$('#mgPlayerJSTest_play_step_next').css({
		"background-color": popupDesign.current.nextBtnBackground,
		"color": popupDesign.current.nextBtnColor,
		"border-color": popupDesign.current.nextBtnColor
	});

	mg$('#mgPlayerJSTest_play_step_next svg path').css({
		"fill": popupDesign.current.nextBtnColor
	});

	mg$(".mgPlayerJSTest_close-button-video").off("click").on("click", videoStepCloseEvent);
	mg$("#mgPlayerJSTest_play_step_prev").hide();

	if (isVideoStep) {

		var vid = document.getElementById('mgPlayerJSTest_step-video-container');

		vid.onpause = function() {
			mg$(".mgPlayerJSTest_video-iframe-overlay").html(GmCXt.svgs.icon_play_step);
		};

		vid.onplay = function() {
			mg$(".mgPlayerJSTest_video-iframe-overlay").html(GmCXt.svgs.icon_pause_step);
		};

		vid.onended = function() {
			if (GmCXt.isLastStep(step.step_id, GmCXt.playerI.playStructure)) {
				formatAndSendToParentWindow("mgPlayerJSTest_action:close_guide");
			}
		};

		var videoEle = mg$('video#mgPlayerJSTest_step-video-container');

		if (step.step_settings.showFullScreen) {
			mg$(".mgPlayerJSTest_video-panel").css({
				"height": "100%",
				"width": "100%",
				"justify-content": "center"
			});
			mg$(".mgPlayerJSTest_video-panel-iframe-wrapper").css({
				"height": "100%",
				"width": "100%",
				"margin-left": "0"
			});

		}

		videoEle.bind('webkitfullscreenchange mozfullscreenchange fullscreenchange', function(e) {
			var fullScreen = document.fullScreen || document.mozFullScreen || document.webkitIsFullScreen;

			if (fullScreen) {
				videoEle.css({
					"opacity": "1",
					"border-width": "0px"
				});
			} else {
				videoEle.css({
					"opacity": "",
					"border-width": "1px"
				});
			}
		});
	} else {
		var message = {
			data: {
				audioTrack: step.step_audio,
				step: step,
				playerInstance: GmCXt.playerI
			}
		};
		if (GmCXt.playerI.playAudio && GmCXt.FT.audio) {
			GmCXt.requestHandler.playAudioTrack(message);
		}

		mg$(".mgPlayerJSTest_max-button-image").off("click").on("click", function() {
			if (fullScreen) {
				mg$(".mgPlayerJSTest_video-panel").css({
					"height": "650px",
					"width": "850px"
				});
				mg$(".mgPlayerJSTest_play-video-iframe").css({
					'height': '100%',
					'width': '99%',
				});
				mg$(".mgPlayerJSTest_video-panel-iframe-wrapper").css({
					'height': '70%',
					'width': '92%',
					'margin-left': '4%',
				});
				mg$(".mgPlayerJSTest_play-video-iframe").removeClass('mgPlayerJSTest_position-center');
				mg$(".mgPlayerJSTest_max-button-image span").html(GmCXt.svgs.fullscreen);
			} else {
				mg$(".mgPlayerJSTest_video-panel").css({
					"height": "100%",
					"width": "100%"
				});
				mg$(".mgPlayerJSTest_play-video-iframe").css({
					'height': 'auto',
					'width': 'auto',
				});
				mg$(".mgPlayerJSTest_video-panel-iframe-wrapper").css({
					'height': '100%',
					'width': '100%',
					'margin-left': '0',
				});
				mg$(".mgPlayerJSTest_play-video-iframe").addClass('mgPlayerJSTest_position-center');
				mg$(".mgPlayerJSTest_max-button-image span").html(GmCXt.svgs.smallscreen);
			}
			fullScreen = !fullScreen;
		});
		mg$(".mgPlayerJSTest_audio-button-image").off("click").on("click", function() {
			if (GmCXt.playerI.playAudio) {
				mg$(".mgPlayerJSTest_audio-button-image span").html(GmCXt.svgs.play_step_audio_off);
				GmCXt.requestHandler.stopAudioTrack(message);
			} else {
				mg$(".mgPlayerJSTest_audio-button-image span").html(GmCXt.svgs.play_step_audio_on);
				GmCXt.requestHandler.playAudioTrack(message);
			}
			GmCXt.playerI.playAudio = !GmCXt.playerI.playAudio;
		});

	}

	var prevStep = GmCXt.getPreviousStepId(parseInt(GmCXt.playerI.currentStepId));

	if (prevStep !== null && data.prev_btn) {
		mg$("#mgPlayerJSTest_play_step_prev").show();
		mg$("#mgPlayerJSTest_play_step_prev").off("click").on("click", playPrevVideoStep);
	}

	if (GmCXt.isLastStep(step.step_id, GmCXt.playerI.playStructure)) {
		mg$("#mgPlayerJSTest_play_step_next").html(GmCXt.label.close);
		mg$("#mgPlayerJSTest_play_step_next").off("click").on("click", videoStepCloseEvent);
	} else {
		mg$("#mgPlayerJSTest_play_step_next").off("click").on("click", playNextVideoStep);
	}
}

function addVideoPanelSvgs() {
	mg$(".mgPlayerJSTest_close-button-video span").html(GmCXt.svgs.popup_close);
	mg$(".mgPlayerJSTest_video-iframe-overlay").html(GmCXt.svgs.icon_play_step);
	mg$(".mgPlayerJSTest_max-button-image span").html(GmCXt.svgs.fullscreen);
	if (GmCXt.playerI.playAudio)
		mg$(".mgPlayerJSTest_audio-button-image span").html(GmCXt.svgs.play_step_audio_on);
	else
		mg$(".mgPlayerJSTest_audio-button-image span").html(GmCXt.svgs.play_step_audio_off);
}

function playPrevVideoStep() {
	formatAndSendToParentWindow("mgPlayerJSTest_action:play_prev_step");
	GmCXt.increaseSidePanel();
}

function playNextVideoStep() {
	formatAndSendToParentWindow("mgPlayerJSTest_action:play_next_step");
	GmCXt.increaseSidePanel();
}

function videoStepCloseEvent(e) {
	var vid = document.getElementById('mgPlayerJSTest_step-video-container');
	if (vid)
		vid.pause();
	formatAndSendToParentWindow("mgPlayerJSTest_action:close_video_step");
	//mg$(".mgPlayerJSTest_overlay-container").renove();
	//mg$(".mgPlayerJSTest_video-panel").remove();
}

GmCXt.getVideoPopUpIFrameHTML = function(videoURL) {
	var html = "<div class='mgPlayerJSTest_video-panel-iframe-wrapper'>";
	html += "<div class='mgPlayerJSTest_video-iframe-overlay'></div>";
	html += "<video id='mgPlayerJSTest_step-video-container' width='100%' disablePictureInPicture controls autoplay controlsList='nodownload'" +
		" class='mgPlayerJSTest_play-video-iframe' > " +
		" <source src='" + videoURL + "' " +
		" type='video/mp4'  autostart='true'></video> ";
	html += "</div>";

	return html;
};

GmCXt.getImagePopUpIFrameHTML = function(imageURL) {
	var html = "<div class='mgPlayerJSTest_video-panel-iframe-wrapper'>";
	html += "<img id='mgPlayerJSTest_step-image-container' width='100%' " +
		" class='mgPlayerJSTest_play-video-iframe' " +
		" src='" + imageURL + "'></img> ";
	html += "</div>";

	return html;
};

GmCXt.getPopUpFooterHTML = function() {
	var os = GmCXt.getStepSettings();
	var popupDesign = os.popupDesign;
	var labelBtnPrev = ((popupDesign.type === 'classic' &&
		GmCXt.getAppSetting("userLabels").btnPrev === GmCXt.engLbls.defaultBtnPrev) ? GmCXt.label.btnPrevious : GmCXt.label.btnPrev);
	var iconBtnPrev = (popupDesign.type === 'classic' ? GmCXt.svgs.iconClassicNavPrev : "");
	var iconBtnNext = (popupDesign.type === 'classic' ? GmCXt.svgs.iconClassicNavNext : "");

	var as = GmCXt.getAppSetting();

	var html = "<div class='mgPlayerJSTest_video-step-popup-footer mgPlayerJSTest_display-flex mgPlayerJSTest_align-items-center mgPlayerJSTest_justify-content-flex-end'>" +
		"<div class='mgPlayerJSTest_play-video-step-navigation mgPlayerJSTest_display-flex mgPlayerJSTest_align-items-center mgPlayerJSTest_justify-content-flex-end'>";

	if (GmCXt.playerI && GmCXt.playerI.tour && !GmCXt.playerI.tour.tour_settings.step_settings.hidePrevBtn) {
		html += "<button class='mgPlayerJSTest_lbl-btn mgPlayerJSTest_play-step-prev mgPlayerJSTest_display-flex mgPlayerJSTest_align-items-center mgPlayerJSTest_justify-content-center' id='mgPlayerJSTest_play_step_prev' aria-label='" + labelBtnPrev + "' >" +
			"<div class='mgPlayerJSTest_display-flex mgPlayerJSTest_align-items-center mgPlayerJSTest_justify-content-center'>" + iconBtnPrev + "</div>" +
			labelBtnPrev +
			"</button>";
	}

	html += "<button class='mgPlayerJSTest_lbl-btn mgPlayerJSTest_play-step-next mgPlayerJSTest_display-flex mgPlayerJSTest_align-items-center mgPlayerJSTest_justify-content-center' id='mgPlayerJSTest_play_step_next' aria-label='" + GmCXt.label.next + "' >" +
		GmCXt.label.next +
		"<div class='mgPlayerJSTest_display-flex mgPlayerJSTest_align-items-center mgPlayerJSTest_justify-content-center'>" + iconBtnNext + "</div>" +
		"</button>" +
		"</div>" +
		"</div>";

	return html;
};

GmCXt.playStepInMyShowShell = function(isVideoStep, data) {
	mg$(window).focus();

	if (GmCXt.isEmpty(GmCXt.playerI)) return;
	var step = GmCXt.getCurrentStep(GmCXt.playerI.currentStepId);
	if (isVideoStep)
		var contentUrl = step.step_video_url + GmCXt.getCdnSign();
	else
		var contentUrl = step.screen_url;

	function play(url) {
		if (GmCXt.isEmpty(GmCXt.playerI)) return;
		if (url) contentUrl = url;
		var html = GmCXt.getPopUpHTML(contentUrl, true, step.step_title, step.step_description, isVideoStep);
		mg$("body").append(html);

		addVideoPanelSvgs();
		addVideoPanelEvents(step, isVideoStep, data);

		GmCXt.showNotificationHtml(false, true);

		GmCXt.timeout(function() {
			mg$(".mgPlayerJSTest_close-button-video").focus();
			if (GmCXt.accessibility) {
				mg$(".mgPlayerJSTest_play-video-step-navigation").addClass("mgPlayerJSTest_accessibility-theme");
				mg$("#mgPlayerJSTest_play_step_prev").addClass("mgPlayerJSTest_ass-default-btn");
				mg$("#mgPlayerJSTest_play_step_next").addClass("mgPlayerJSTest_ass-default-btn");
			}
		}, 500);
	}
	GmCXt.checkAssetUrl(contentUrl, contentUrl, play);
};

GmCXt.getPDFMediaPlayerIcons = function() {
	mg$(".mgPlayerJSTest_icon-popout-media-player").html(GmCXt.svgs.external_link_white);
	mg$(".mgPlayerJSTest_icon-close-media-player").html(GmCXt.svgs.close_media_popup);
	mg$(".mgPlayerJSTest_icon-print-media-player").html(GmCXt.svgs.print_icon);
	mg$(".mgPlayerJSTest_icon-min-media-player").html(GmCXt.svgs.min_pdf_icon);
	mg$(".mgPlayerJSTest_icon-max-media-player").html(GmCXt.svgs.max_pdf_icon);
	mg$(".mgPlayerJSTest_icon-page-down-media-player").html(GmCXt.svgs.page_down_icon);
	mg$(".mgPlayerJSTest_icon-page-up-media-player").html(GmCXt.svgs.page_up_icon);
	mg$(".mgPlayerJSTest_icon-pdf-download").html(GmCXt.svgs.pdf_download_icon);
};

GmCXt.showSurveyForTutorial = function(tour) {
	if (GmCXt.isPlayer() && tour && tour.tour_type.indexOf('onboarding_tour') !== -1 && tour.tour_settings.sentiment && !GmCXt.isEmpty(tour.tour_settings.sentiment.sentimentCode)) {
		var data = {
			tour: tour,
			guideNotCompleted: false
		};

		GmCXt.formatAndSendToParentWindowNoti("mgPlayerJSTest_action:close_app_panel", {});
		GmCXt.formatAndSendToParentWindowNoti('mgPlayerJSTest_action:getSurveyScreen', data);
	}
};

GmCXt.closeMediaPlayer = function(d, tour, taskObj) {
	var isTaskList = mg$('.mgPlayerJSTest_play-from-task-player').length > 0 ? true : false;

	var html = mg$('.mgPlayerJSTest_media-player-panel').html();
	mg$('.mgPlayerJSTest_media-player-panel').html('');
	mg$('.mgPlayerJSTest_media-player-panel').html(html);

	if (GmCXt.isDefined(GmCXt.trackerEnable)) GmCXt.trackerUtil = GmCXt.trackerEnable;

	var triggerSrc = "showme";
	var taskListId = null;
	if (isTaskList) {
		mg$('.mgPlayerJSTest_media-player-panel').removeClass('mgPlayerJSTest_play-from-task-player');
		triggerSrc = "task_list";
		if (taskObj && taskObj.taskId) {
			taskListId = taskObj.taskId;
		}
	}

	mg$('.mgPlayerJSTest_media-player-panel').hide();
	mg$('#mgPlayerJSTest_media-iframe').remove();
	mg$('#mgPlayerJSTest_media-video').remove();
	formatAndSendToParentWindow('mgPlayerJSTest_action:media_player_on', {
		mediaPlayerStatus: false
	});
	formatAndSendToParentWindow('mgPlayerJSTest_action:show_step_popup');

	if (!(d && d.terminate) && !GmCXt.isEmpty(GmCXt.playerI) && GmCXt.playerI.linkGuidePlayMode === "PDF") {
		showMe.ready = true;
		delete GmCXt.playerI.linkGuidePlayMode;
		playNextStep();
	} else {

		GmCXt.showSurveyForTutorial(tour);

		if (GmCXt.isTutorialLink) {
			mg$(".mgPlayerJSTest_overlay-tours-popup").show();
			mg$(".mgPlayerJSTest_overlay-container").show();
		} else {
			GmCXt.reduceSidePanel();
			mg$('.ege-panel').css({
				'width': '500px',
				'right': '0px',
				'max-width': '500px',
				'transition': '0s'
			});
		}

		if (GmCXt.pdfPlayedOnUploadTut) {
			GmCXt.trackerV1.trackTutGuide(tour, "upload_tutorial_guide_same_tab", triggerSrc, taskListId);
		}
	}

	if (isTaskList) {
		GmCXt.formatAndSendToParentWindowNoti('mgPlayerJSTest_action:close_app_panel', {});
	}
	GmCXt.isTutorialLink = false;

	GmCXt.removeInjectedPDFJS();
};

GmCXt.addMediaPlayerEvent = function() {
	mg$("#mgPlayerJSTest_media-player-close").off('click').on("click", GmCXt.closeMediaPlayer);
};

GmCXt.hidePdfControls = function() {
	mg$('.mgPlayerJSTest_options-left').hide();
	mg$('#mgPlayerJSTest_pdf-canvas').hide();
	mg$('#mgPlayerJSTest_media-player-print').hide();
	mg$('#mgPlayerJSTest_media-player-popout').hide();
	mg$('#mgPlayerJSTest_icon-pdf-download').hide();
};
GmCXt.showPdfControls = function() {
	mg$('.mgPlayerJSTest_options-left').show();
	mg$('#mgPlayerJSTest_pdf-canvas').hide();
	mg$('#mgPlayerJSTest_media-player-print').show();
	mg$('#mgPlayerJSTest_media-player-popout').show();
	mg$('#mgPlayerJSTest_icon-pdf-download').show();
};

GmCXt.openPdfLinkStep = function(pdf_url) {
	var cb = function(assetUrl) {

		if (assetUrl) pdf_url = assetUrl;

		GmCXt.openPdf(pdf_url);
	};

	tempUrl = GmCXt.getUrlWithLang(pdf_url);

	pdf_url = pdf_url + GmCXt.getCdnSign();

	GmCXt.checkAssetUrl(tempUrl, pdf_url, cb);
};

GmCXt.openPdf = function(pdf_url, tour, taskObj) {
	GmCXt.trackerEnable = GmCXt.trackerUtil;
	formatAndSendToParentWindow('mgPlayerJSTest_action:hide_step_popup');
	formatAndSendToParentWindow('mgPlayerJSTest_action:media_player_on', {
		mediaPlayerStatus: true
	});
	GmCXt.increaseSidePanel();
	mg$('.ege-panel').css({
		'width': '500px',
		'right': '-9550px',
		'transition': '0s'
	});
	mg$('.mgPlayerJSTest_media-player-panel').show();
	mg$('#mgPlayerJSTest_media-iframe').remove();
	mg$('#mgPlayerJSTest_media-video').remove();
	mg$('#mgPlayerJSTest_pdf-container').css({
		'background': '#FFFFFF'
	});

	mg$(".mgPlayerJSTest_pdf-image-spinner").show();
	mg$(".mgPlayerJSTest_pdf-image-spinner img").attr('src', GmCXt.loader());
	GmCXt.hidePdfControls();

	var pageNum = 1;
	var pdfScale = 1; // make pdfScale a global variable
	var shownPdf; // another global we'll use for the buttons
	var url = pdf_url; // PDF to load: change this to a file that exists;

	function handelTutorialPDFControls() {
		var t = tour;

		if (!t) {
			if (GmCXt.playerI && GmCXt.playerI.tour) {
				t = GmCXt.playerI.tour;
			}
		}

		if (t) {
			var admin_settings = GmCXt.organization.admin_settings;
			var downloadBtn = document.getElementById("mgPlayerJSTest_icon-pdf-download");
			var printbutton = document.getElementById("mgPlayerJSTest_media-player-print");

			if (admin_settings && admin_settings.mediafile_creation) {
				if (t.tour_settings && t.tour_settings.downloadGuideFiles &&
					!t.tour_settings.downloadGuideFiles.pdf_file) {
					downloadBtn.style.display = "none";
					printbutton.style.display = "none";
				}
			} else {
				downloadBtn.style.display = "none";
				printbutton.style.display = "none";
			}
		}
	}

	function renderPage(page) {
		var scale = pdfScale; // render with global pdfScale variable
		var viewport = page.getViewport(scale);
		var canvas = document.getElementById('mgPlayerJSTest_pdf-canvas');
		var context = canvas.getContext('2d');
		canvas.height = viewport.height;
		canvas.width = viewport.width;
		var renderContext = {
			canvasContext: context,
			viewport: viewport
		};
		page.render(renderContext);

		mg$(".mgPlayerJSTest_pdf-image-spinner").attr('style', "display: none;");
		GmCXt.showPdfControls();
		canvas.style.display = "block";
		mg$(".mgPlayerJSTest_media-player-page-cnt-text")[0].innerHTML = page.pageNumber;
		handelTutorialPDFControls();
	}

	function loadPdfDoc() {
		var pdfDoc = PDFJS.getDocument(url).then(function getPdf(pdf) {
			mg$(".mgPlayerJSTest_media-player-page-cnt-text-total")[0].innerHTML = "of " + pdf.numPages;
			mg$('.mgPlayerJSTest_media-player-zoom-text')[0].innerText = "100%";
			if (this.pdf) {
				this.pdf.destroy();
			}
			this.pdf = pdf;
			this.total_pages = this.pdf.numPages;
			displayPage(pdf, 1);
			shownPdf = pdf;

		}).catch(function(e) {
			GmCXt.toastMsg(GmCXt.label.mediaFileNotFound).show();
			GmCXt.timeout(function() {
				GmCXt.closeMediaPlayer();
			}, 1000);
		});
	}

	function displayPage(pdf, num) {

		if (parseInt(num) === parseInt(pdf.numPages)) {
			GmCXt.fullPdfPlayedOnUploadTutGuide = true;
		}

		try {
			pdf.getPage(num).then(function getPage(page) {
				renderPage(page);
			});
		} catch (e) {
			pageNum = 1;
			loadPdfDoc();
		}

	}

	loadPdfDoc();

	var nextbutton = document.getElementById("mgPlayerJSTest_media-player-pd");
	nextbutton.onclick = function() {

		if (pageNum >= shownPdf.numPages) {
			return;
		}
		pageNum++;
		displayPage(shownPdf, pageNum);
	};

	var prevbutton = document.getElementById("mgPlayerJSTest_media-player-pu");
	prevbutton.onclick = function() {
		if (pageNum <= 1) {
			return;
		}
		pageNum--;
		displayPage(shownPdf, pageNum);
	};

	var zoominbutton = document.getElementById("mgPlayerJSTest_max-media-player");
	zoominbutton.onclick = function() {
		pdfScale = pdfScale + 0.25;
		mg$('.mgPlayerJSTest_media-player-zoom-text')[0].innerText = (parseFloat(pdfScale) * 100) + "%";
		displayPage(shownPdf, pageNum);
	};

	var zoomoutbutton = document.getElementById("mgPlayerJSTest_min-media-player");
	zoomoutbutton.onclick = function() {
		if (pdfScale <= 0.25) {
			return;
		}
		pdfScale = pdfScale - 0.25;
		mg$('.mgPlayerJSTest_media-player-zoom-text')[0].innerText = (parseFloat(pdfScale) * 100) + "%";
		displayPage(shownPdf, pageNum);
	};

	function SaveToDisk(fileURL, fileName) {
		// for non-IE
		if (!window.ActiveXObject) {
			var save = document.createElement('a');
			save.href = fileURL;
			save.target = '_blank';
			save.download = fileName || 'unknown';

			var evt = new MouseEvent('click', {
				'view': window,
				'bubbles': true,
				'cancelable': false
			});
			save.dispatchEvent(evt);

			(window.URL || window.webkitURL).revokeObjectURL(save.href);
		}

		// for IE
		else if (!!window.ActiveXObject && document.execCommand) {
			var _window = window.open(fileURL, '_blank');
			_window.document.close();
			_window.document.execCommand('SaveAs', true, fileName || fileURL);
			_window.close();
		}
	}

	var downloadBtn = document.getElementById("mgPlayerJSTest_icon-pdf-download");
	downloadBtn.onclick = function() {
		SaveToDisk(pdf_url, "myPdf.pdf");
	};

	var printbutton = document.getElementById("mgPlayerJSTest_media-player-print");
	printbutton.onclick = function() {
		printJS(pdf_url);
	};

	var popOutBtn = document.getElementById("mgPlayerJSTest_media-player-popout");
	popOutBtn.onclick = function() {
		var a = document.createElement('a');
		a.href = pdf_url;
		a.target = '_blank';
		a.click();
		a.remove();
	};

	GmCXt.getPDFMediaPlayerIcons();

	mg$("#mgPlayerJSTest_media-player-close").off('click').one("click", function() {
		GmCXt.closeMediaPlayer(undefined, tour, taskObj);
	});
	mg$(document).keyup(function(e) {
		if (e.key === "Escape") {
			GmCXt.closeMediaPlayer(undefined, tour, taskObj);
		}
	});
};

function getMPVideoHTML() {
	var html = "";

	html = "<video id='mgPlayerJSTest_media-video' width='99%' height='99%' frameborder='0' disablePictureInPicture controls autoplay > ";
	html += "</video> ";

	return html;
}

GmCXt.openVideoPlayer = function(video_url) {
	formatAndSendToParentWindow('mgPlayerJSTest_action:hide_step_popup');
	formatAndSendToParentWindow('mgPlayerJSTest_action:media_player_on', {
		mediaPlayerStatus: true
	});

	GmCXt.increaseSidePanel();
	mg$('.ege-panel').css({
		'width': '500px',
		'right': '-9550px',
		'transition': '0s'
	});

	mg$("#mgPlayerJSTest_pdf-container").removeAttr("style");
	mg$('.mgPlayerJSTest_media-player-panel').show();
	mg$(".mgPlayerJSTest_icon-close-media-player").html(GmCXt.svgs.close_media_popup);
	mg$("#mgPlayerJSTest_media-player-close").off('click').on("click", GmCXt.closeMediaPlayer);
	mg$(".mgPlayerJSTest_pdf-image-spinner").show();
	mg$(".mgPlayerJSTest_pdf-image-spinner img").attr('src', GmCXt.loader());

	GmCXt.hidePdfControls();

	mg$('#mgPlayerJSTest_media-iframe').remove();
	mg$('#mgPlayerJSTest_media-video').remove();

	var url = new URL(video_url);

	var videoHtml = getMPVideoHTML();
	mg$("#mgPlayerJSTest_pdf-container").append(videoHtml);

	mg$('#mgPlayerJSTest_media-video')[0].addEventListener('error', function() {
		GmCXt.toastMsg(GmCXt.label.mediaFileNotFound).show();
		GmCXt.timeout(function() {
			GmCXt.closeMediaPlayer();
		}, 1000);
	});
	mg$('#mgPlayerJSTest_media-video').attr('src', video_url);
	mg$('#mgPlayerJSTest_media-video')[0].load();

	GmCXt.timeout(function() {
		mg$(".mgPlayerJSTest_pdf-image-spinner").hide();
	}, 1000);
};

GmCXt.closePowerForm = function() {
	mg$('.mgPlayerJSTest_form-injector-wrapper').remove();
	resizeSlideshowWindow('small', true, true);
	stopSlideshow();
	mg$('.ege-panel').css({
		'width': '500px',
		'max-width': '500px',
		'transition': 'width 0s'
	});
	GmCXt.sendToParentWindow({
		action: "mgPlayerJSTest_action:close_app_panel",
		data: {
			resetPanel: true
		}
	});
};
var app = angular.module('guideme');

/* Labels Used in Extension */
app.constant('SVGS', {
	iconBack: '<svg class="mgPlayerJSTest_position-center" width="8" height="14" viewBox="0 0 8 14" fill="none">' +
			'<path fill-rule="evenodd" clip-rule="evenodd" d="M0.233044 7.05301C0.233044 7.03801 0.236044 7.02501 0.237044 7.01001C0.245778 6.81309 0.327814 6.62654 0.467044 6.48701L0.469044 6.48401L6.11604 0.837007C6.19033 0.762217 6.27864 0.702806 6.37591 0.662173C6.47318 0.62154 6.57751 0.600484 6.68292 0.600205C6.78834 0.599927 6.89277 0.620432 6.99026 0.66055C7.08774 0.700668 7.17636 0.75961 7.25104 0.834006L7.53304 1.11701C7.68312 1.26767 7.76722 1.47177 7.76684 1.68442C7.76647 1.89708 7.68165 2.10088 7.53104 2.25101L2.72904 7.05201L7.52904 11.853C7.6039 11.9272 7.66339 12.0155 7.70411 12.1127C7.74482 12.21 7.76598 12.3143 7.76635 12.4197C7.76672 12.5251 7.7463 12.6295 7.70627 12.7271C7.66624 12.8246 7.60737 12.9133 7.53304 12.988L7.25004 13.271C7.09912 13.4208 6.89487 13.5046 6.68222 13.5038C6.46956 13.5031 6.26591 13.4179 6.11604 13.267L0.749043 7.90101L0.466043 7.61801C0.316043 7.46801 0.240044 7.27301 0.235044 7.07501L0.233044 7.05301Z" fill="#555555"/>' +
			'</svg>',

	iconSearch: '<svg version="1.1" id="Layer_1" x="0px" y="0px"' +
		'viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve">' +
		'<g>' +
		'<g>' +
		'<g>' +
		'<path d="M35.9,6.7c-3.9-3.9-9.1-6-14.6-6s-10.7,2.1-14.6,6c-3.9,3.9-6,9.1-6,14.6c0,5.5,2.1,10.7,6,14.6c3.9,3.9,9.1,6,14.6,6' +
		's10.7-2.1,14.6-6c3.9-3.9,6-9.1,6-14.6C41.9,15.8,39.7,10.6,35.9,6.7z M21.3,38c-9.2,0-16.7-7.5-16.7-16.7S12.1,4.6,21.3,4.6' +
		'S38,12.1,38,21.3S30.5,38,21.3,38z"/>' +
		'</g>' +
		'</g>' +
		'<g>' +
		'<g>' +
		'<path d="M48.8,46L35.8,33.1c-0.8-0.8-2-0.8-2.8,0c-0.8,0.8-0.8,2,0,2.8L46,48.8c0.4,0.4,0.9,0.6,1.4,0.6c0.5,0,1-0.2,1.4-0.6' +
		'C49.5,48,49.5,46.8,48.8,46z"/>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',

	iconLang: '<svg version="1.1" id="Layer_1" x="0px" y="0px"' +
		'viewBox="0 0 24 24" style="enable-background:new 0 0 24 24;" xml:space="preserve">' +
		'<g>' +
		'<g id="Page-1">' +
		'<g id="mgPlayerJSTest_testme-and-Showme-04-Copy" fill="#757575" transform="translate(-1372.000000, -209.000000)">' +
		'<g id="Group-16" transform="translate(937.000000, 191.000000)">' +
		'<g id="translate" transform="translate(435.000000, 18.000000)">' +
		'<path class="shape" class="st0" d="M10.2,13.8c-1.7,0-3.3,0-4.9,0c-0.9,0-1.9,0-2.8,0c-1.3,0-2.3-0.9-2.3-2.2c0-3,0-6,0-9' +
		'c0-1.3,1-2.3,2.3-2.3c3,0,5.9,0,8.9,0c1.3,0,2.3,1,2.3,2.3c0,2.3,0,4.6,0,6.9c0,0.2,0,0.5,0,0.7c0.2,0,0.5,0,0.7,0' +
		'c2.3,0,4.5,0,6.8,0c1.6,0,2.5,0.9,2.5,2.5c0,2.8,0,5.7,0,8.5c0,1.6-0.9,2.5-2.5,2.5c-2.9,0-5.7,0-8.6,0c-1.5,0-2.4-0.9-2.4-2.4' +
		'c0-2.3,0-4.5,0-6.8C10.2,14.3,10.2,14.1,10.2,13.8z M11.3,17L11.3,17c0,0.7,0,1.4,0,2.1c0,0.7,0,1.5,0,2.2' +
		'c0,0.9,0.5,1.4,1.4,1.4c2.9,0,5.8,0,8.6,0c0.9,0,1.4-0.5,1.4-1.4c0-2.9,0-5.8,0-8.6c0-0.9-0.5-1.4-1.4-1.4c-2.9,0-5.8,0-8.7,0' +
		'c-0.9,0-1.4,0.4-1.4,1.4C11.3,14.1,11.3,15.5,11.3,17z M10.5,11.3c-1.1,0.1-2.2-0.2-3.1-0.8c-0.2-0.2-0.4-0.2-0.6,0' +
		'c-0.9,0.5-1.8,0.8-2.9,0.8c-0.3,0-0.5-0.2-0.5-0.5c0-0.3,0.2-0.5,0.5-0.5c0.1,0,0.2,0,0.4,0c0.7-0.1,1.4-0.3,2-0.7' +
		'c-0.9-1-1.4-2.1-1.5-3.4c-0.3,0-0.6,0-0.8,0C3.6,6.2,3.3,6,3.3,5.7c0-0.3,0.2-0.5,0.5-0.5c0.3,0,0.6,0,0.9,0c0.6,0,1.2,0,1.9,0' +
		'c0-0.6,0-1.2,0-1.7c0-0.3,0.1-0.6,0.5-0.6c0.4,0,0.5,0.3,0.5,0.7c0,0.5,0,1.1,0,1.7c0.2,0,0.3,0,0.5,0c0.7,0,1.4,0,2.1,0' +
		'c0.3,0,0.6,0.1,0.6,0.5c0,0.4-0.2,0.5-0.6,0.5c-0.1,0-0.2,0-0.4,0c-0.3,0-0.4,0.1-0.4,0.4c-0.1,0.5-0.2,1-0.5,1.5' +
		'c-0.3,0.5-0.6,1-1,1.5c0.6,0.4,1.3,0.6,2,0.6c0.5,0,0.8,0.1,0.8,0.8c0.6-0.6,1.2-0.8,2-0.8c0-0.2,0-0.3,0-0.5' +
		'c0-2.4,0-4.7,0-7.1c0-0.9-0.5-1.4-1.4-1.4c-2.9,0-5.8,0-8.6,0c-0.9,0-1.4,0.5-1.4,1.4c0,2.9,0,5.8,0,8.7c0,0.9,0.5,1.3,1.4,1.3' +
		'c2.3,0,4.7,0,7,0c0.2,0,0.3,0,0.4,0C10.3,12.2,10.4,11.7,10.5,11.3z M5.8,6.2c0,0.9,0.5,2.1,1.3,2.7c0.7-0.8,1.2-1.6,1.3-2.7' +
		'C7.5,6.2,6.6,6.2,5.8,6.2z"/>' +
		'<path id="Shape_1_" class="st0" d="M22.7,7.6c-0.2-3.5-2.9-6.1-6.3-6.3c-0.1,0-0.1,0-0.2,0c-0.4,0-0.7-0.1-0.6-0.5' +
		'c0-0.4,0.3-0.5,0.7-0.5c3.7,0,7,3.1,7.4,6.8c0,0.3,0.1,0.6,0.1,0.9c0,0.5-0.2,0.6-0.6,0.7c-0.7,0-1.3,0-2,0' +
		'c-0.3,0-0.6-0.2-0.6-0.5c0-0.4,0.2-0.5,0.6-0.5C21.6,7.6,22.1,7.6,22.7,7.6z"/>' +
		'<path id="Shape_2_" class="st0" d="M1.4,16.4c0.2,3.5,2.9,6.1,6.3,6.3c0.1,0,0.2,0,0.3,0c0.3,0,0.5,0.2,0.5,0.5' +
		'c0,0.3-0.2,0.5-0.5,0.5c-0.8-0.1-1.6-0.2-2.3-0.4c-3.2-1-5.3-3.9-5.3-7.2c0-0.5,0.2-0.7,0.6-0.7c0.6,0,1.3,0,1.9,0' +
		'c0.3,0,0.6,0.1,0.6,0.5c0,0.4-0.3,0.5-0.6,0.5C2.4,16.4,1.9,16.4,1.4,16.4z"/>' +
		'<path id="Shape_3_" class="st0" d="M17,18.9c-0.5,0-1-0.2-1.3,0c-0.3,0.2-0.4,0.8-0.5,1.2c0,0.1-0.1,0.2-0.1,0.3' +
		'c-0.1,0.3-0.4,0.4-0.7,0.3c-0.3-0.1-0.4-0.4-0.3-0.7c0.4-1,0.7-2,1.1-3c0.4-1.1,0.8-2.2,1.2-3.3c0.1-0.2,0.3-0.5,0.5-0.5' +
		'c0.3-0.1,0.5,0.2,0.6,0.5c0.8,2.1,1.6,4.2,2.4,6.3c0.2,0.5,0,0.8-0.3,0.8c-0.3,0-0.5-0.1-0.6-0.4c-0.2-0.4-0.3-0.8-0.5-1.2' +
		'c-0.1-0.2-0.2-0.3-0.4-0.3C17.7,18.9,17.3,18.9,17,18.9C17,18.9,17,18.9,17,18.9z M18,17.8c-0.3-0.9-0.6-1.8-1-2.6' +
		'c0,0-0.1,0-0.1,0c-0.3,0.9-0.6,1.7-0.9,2.6C16.6,17.8,17.3,17.8,18,17.8z"/>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',

	iconSearchClose: '<svg version="1.1" id="Capa_1" x="0px" y="0px"' +
		'viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve">' +
		'<g>' +
		'<g>' +
		'<path d="M46,4C44.9,3,43.2,3,42.1,4L25,21.2L7.9,4C6.8,3,5.1,3,4,4S3,6.8,4,7.9L21.2,25L4,42.1C3,43.2,3,44.9,4,46' +
		'c0.5,0.5,1.2,0.8,1.9,0.8s1.4-0.3,1.9-0.8L25,28.8L42.1,46c0.5,0.5,1.2,0.8,1.9,0.8c0.7,0,1.4-0.3,1.9-0.8c1.1-1.1,1.1-2.8,0-3.8' +
		'L28.8,25L46,7.9C47,6.8,47,5.1,46,4z"/>' +
		'</g>' +
		'</g>' +
		'</svg>',

	iconTourPlay: '<svg version="1.1" id="Layer_1" x="0px" y="0px"' +
		'viewBox="0 0 24 24" style="enable-background:new 0 0 24 24;" xml:space="preserve">' +
		'<g id="Page-1">' +
		'<g id="mgPlayerJSTest_testme-and-Showme-05-Copy-2" transform="translate(-966.000000, -208.000000)">' +
		'<g id="Group-16" transform="translate(937.000000, 191.000000)">' +
		'<g id="Group-22" transform="translate(22.000000, 9.000000)">' +
		'<g id="Group-3" transform="translate(0.000000, 1.000000)">' +
		'<g id="Group-8" transform="translate(7.000000, 6.000000)">' +
		'<g id="Icon-24px">' +
		'<path class="shape" class="st0" d="M12,1.2C5.5,1.2,0.2,6.5,0.2,13S5.5,24.8,12,24.8S23.8,19.5,23.8,13S18.5,1.2,12,1.2L12,1.2z"/>' +
		'<g id="Path">' +
		'<g class="st1">' +
		'<polygon id="path-1_2_" points="9.6,18.3 16.7,13 9.6,7.7"/>' +
		'</g>' +
		'<g>' +
		'<polygon id="path-1_1_" fill="#fff" class="st2" points="9.6,18.3 16.7,13 9.6,7.7"/>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',

	iconEmail: '<svg width="13px" height="9px"' +
		'viewBox="0 0 13 9" version="1.1"  >' +
		'<defs></defs>' +
		'<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g id="New-Namvigation-bar-sample1_003" transform="translate(-1096.000000, -296.000000)" fill-rule="nonzero" fill="#757575">' +
		'<g id="Group-9" transform="translate(1035.000000, 186.000000)">' +
		'<g id="guideme-login" transform="translate(52.000000, 98.000000)">' +
		'<g id="Group-14" transform="translate(1.000000, 0.000000)">' +
		'<path d="M21,19.4999588 C21,19.763028 20.9198369,20.0069056 20.7914206,20.2214763 L16.6867878,15.9822455 L20.7469184,12.7032409 C20.9048599,12.9346044 21,13.2063791 21,13.500066 L21,19.4999588 Z M14.5000134,16.7519648 L20.1495535,12.1889983 C19.9177183,12.0718451 19.6566525,12 19.3750368,12 L9.62498995,12 C9.34302602,12 9.08187984,12.0718451 8.85098236,12.1889983 L14.5000134,16.7519648 Z M16.0750622,16.4759115 L14.7673486,17.5327885 C14.6908561,17.5942958 14.5956089,17.6250124 14.5000134,17.6250124 C14.4043643,17.6250124 14.3091171,17.5942958 14.2326246,17.5327885 L12.9246163,16.475862 L8.76805967,20.7692796 C9.01720283,20.9135633 9.30918714,21 9.62496316,21 L19.3750368,21 C19.6907593,21 19.9828776,20.9135633 20.2319403,20.7692796 L16.0750622,16.4759115 Z M8.25313523,12.7032162 C8.09522043,12.9345796 8,13.2063544 8,13.500066 L8,19.4999835 C8,19.7630527 8.07978797,20.0069303 8.20868653,20.221501 L12.3128371,15.9815283 L8.25313523,12.7032162 Z" class="shape"></path>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',

	iconPassword: '<svg width="13px" height="12px" viewBox="0 0 13 13" version="1.1"  >' +
		'<defs></defs>' +
		'<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g id="New-Namvigation-bar-sample1_003" transform="translate(-1097.000000, -335.000000)" fill-rule="nonzero" fill="#757575">' +
		'<g id="Group-9" transform="translate(1035.000000, 186.000000)">' +
		'<g id="guideme-login" transform="translate(52.000000, 98.000000)">' +
		'<g id="password" transform="translate(1.000000, 42.000000)">' +
		'<g id="key" transform="translate(9.000000, 9.000000)">' +
		'<path d="M6.58125,5.6875 C6.41875,5.60625 6.25625,5.525 6.09375,5.44375 L12.1875,0 L10.5625,0 L4.875,4.95625 C4.63125,4.875 4.3875,4.875 4.0625,4.875 C1.7875,4.875 0,6.6625 0,8.9375 C0,11.2125 1.86875,13 4.0625,13 C6.25625,13 8.125,11.2125 8.125,8.9375 C8.125,8.45 8.04375,7.9625 7.88125,7.55625 L8.9375,6.5 L8.9375,4.875 L10.5625,4.875 L10.5625,3.25 L12.1875,3.25 L13,2.4375 L13,0 L6.58125,5.6875 Z M3.25,10.725 C2.68125,10.725 2.275,10.2375 2.275,9.75 C2.275,9.2625 2.7625,8.775 3.25,8.775 C3.7375,8.775 4.225,9.2625 4.225,9.75 C4.225,10.2375 3.81875,10.725 3.25,10.725 Z" class="shape"></path>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',

	iconUser: '<svg width="10px" height="12px" viewBox="0 0 10 13" version="1.1"  >' +
		'<defs></defs>' +
		'<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g id="Sign-Up-GuideMe" transform="translate(-1115.000000, -305.000000)" fill-rule="nonzero" fill="#757575">' +
		'<g id="Group-9" transform="translate(1051.000000, 198.000000)">' +
		'<g id="guideme-login" transform="translate(52.000000, 98.000000)">' +
		'<g id="Group-14" transform="translate(1.000000, 0.000000)">' +
		'<g id="user-(1)" transform="translate(11.000000, 9.000000)">' +
		'<path d="M8.79411765,3.82352941 C8.79411765,2.76747059 8.36588235,1.81158824 7.67458824,1.12029412 C6.98252941,0.428235294 6.02664706,0 4.97058824,0 C3.91452941,0 2.95864706,0.428235294 2.26658824,1.12029412 C1.57529412,1.81158824 1.14705882,2.76747059 1.14705882,3.82352941 C1.14705882,4.87958824 1.57529412,5.83547059 2.26658824,6.52676471 C2.95864706,7.21882353 3.91452941,7.64705882 4.97058824,7.64705882 C6.02664706,7.64705882 6.98252941,7.21882353 7.67458824,6.52676471 C8.36588235,5.83547059 8.79411765,4.87958824 8.79411765,3.82352941 Z" class="shape"></path>' +
		'<path d="M0.382352941,11.4705882 C0.382352941,12.2352941 2.10294118,13 4.97058824,13 C7.66082353,13 9.55882353,12.2352941 9.55882353,11.4705882 C9.55882353,9.94117647 7.75870588,8.41176471 4.97058824,8.41176471 C2.10294118,8.41176471 0.382352941,9.94117647 0.382352941,11.4705882 Z" class="shape"></path>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',

	iconShowMe: '<svg version="1.1" id="Layer_1" x="0px" y="0px"' +
		'viewBox="0 0 24 12.8" style="enable-background:new 0 0 24 12.8;" xml:space="preserve">' +
		'<g>' +
		'<g id="Page-1">' +
		'<g id="mgPlayerJSTest_testme-and-Showme-05-Copy-2" transform="translate(-996.000000, -208.000000)">' +
		'<g id="Group-16" transform="translate(937.000000, 191.000000)">' +
		'<g id="Group-22" transform="translate(22.000000, 9.000000)">' +
		'<g id="Group-3" transform="translate(0.000000, 1.000000)">' +
		'<g id="Group-9" transform="translate(36.000000, 7.000000)">' +
		'<g id="binoculars" transform="translate(1.000000, 0.000000)">' +
		'<path class="shape" class="st0" d="M16.5,2c-0.5-0.1-1.6-0.3-1.6-0.3S13.3,0.4,12,0.4c-1.3,0-2.9,1.2-2.9,1.2S8,1.9,7.5,2' +
		'c2.1,0.8,3.6,2.8,3.6,5.1c0,1-0.3,1.9-0.7,2.7H12h0h1.6c-0.4-0.8-0.7-1.7-0.7-2.7C12.9,4.7,14.4,2.7,16.5,2z"/>' +
		'<g class="Group" transform="translate(0.000000, 1.120265)">' +
		'<path id="Shape_1_" class="st0" d="M5.4,1.1c-2.8,0-5.1,2.3-5.1,5.1s2.3,5.1,5.1,5.1s5.1-2.3,5.1-5.1' +
		'C10.5,3.4,8.2,1.1,5.4,1.1z M5.4,9.4C3.6,9.4,2.2,8,2.2,6.2S3.6,3,5.4,3c1.8,0,3.2,1.4,3.2,3.2C8.6,8,7.1,9.4,5.4,9.4z"/>' +
		'<path id="Shape_2_" class="st0" d="M3.3,4.6c-0.7,0.9-0.6,2.1,0.1,3C3.1,6.7,3.3,5.7,3.9,5c0.6-0.8,1.5-1.1,2.4-1.1' +
		'C5.2,3.4,4,3.7,3.3,4.6z"/>' +
		'<path id="Shape_3_" class="st0" d="M18.6,1.1c-2.8,0-5.1,2.3-5.1,5.1s2.3,5.1,5.1,5.1s5.1-2.3,5.1-5.1' +
		'C23.7,3.4,21.4,1.1,18.6,1.1z M18.6,9.4c-1.8,0-3.2-1.4-3.2-3.2S16.9,3,18.6,3s3.2,1.4,3.2,3.2C21.8,8,20.4,9.4,18.6,9.4z"/>' +
		'<path id="Shape_4_" class="st0" d="M17.8,3.9c0.9,0,1.8,0.3,2.4,1.1c0.6,0.8,0.7,1.7,0.5,2.6c0.7-0.8,0.8-2.1,0.1-3' +
		'C20,3.7,18.8,3.4,17.8,3.9z"/>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',

	iconTestMe: '<svg width="24px" height="30px" viewBox="0 0 24 30" version="1.1"  >' +
		'<defs></defs>' +
		'<g id="Page-1" stroke="none" stroke-width="1" fill-rule="evenodd">' +
		'<g id="clipboard" fill-rule="nonzero">' +
		'<path d="M21.0913898,3.4972619 L18.2461695,3.4972619 L18.2461695,2.99767857 C18.2461695,2.44809524 17.7340339,1.99845238 17.1080678,1.99845238 L15.4009492,1.99845238 L15.4009492,1.49880952 C15.4009492,0.699404762 14.6612203,0 13.6938305,0 L10.2795254,0 C9.31213559,0 8.57240678,0.649464286 8.57240678,1.49880952 L8.57240678,1.99839286 L6.86528814,1.99839286 C6.23932203,1.99839286 5.72718644,2.44803571 5.72718644,2.99761905 L5.72718644,3.49720238 L2.8819661,3.49720238 C1.28861017,3.49720238 0.0367457627,4.59636905 0.0367457627,5.9952381 L0.0367457627,27.4784524 C0.0367457627,28.877381 1.28867797,29.9764881 2.8819661,29.9764881 L21.0914576,29.9764881 C22.6848136,29.9764881 23.936678,28.8773214 23.936678,27.4784524 L23.936678,5.99529762 C23.936678,4.64636905 22.6847458,3.4972619 21.0913898,3.4972619 Z M6.86522034,3.99690476 L6.86522034,2.99767857 L9.14142373,2.99767857 C9.48284746,2.99767857 9.71044068,2.79785714 9.71044068,2.49809524 L9.71044068,1.49880952 C9.71044068,1.19904762 9.9380339,0.99922619 10.2794576,0.99922619 L13.6937627,0.99922619 C14.0351864,0.99922619 14.2627797,1.19904762 14.2627797,1.49880952 L14.2627797,2.49803571 C14.2627797,2.79779762 14.4903729,2.99761905 14.8317966,2.99761905 L17.108,2.99761905 L17.108,6.49488095 L6.86522034,6.49488095 L6.86522034,3.99690476 Z M18.2461695,25.480119 L5.72711864,25.480119 C5.38569492,25.480119 5.15810169,25.2802976 5.15810169,24.9805357 C5.15810169,24.6807738 5.38569492,24.4809524 5.72711864,24.4809524 L18.2461695,24.4809524 C18.5875932,24.4809524 18.8151864,24.6807738 18.8151864,24.9805357 C18.8151864,25.2802976 18.5875932,25.480119 18.2461695,25.480119 Z M18.2461695,20.983631 L5.72711864,20.983631 C5.38569492,20.983631 5.15810169,20.7838095 5.15810169,20.4840476 C5.15810169,20.1842857 5.38569492,19.9844643 5.72711864,19.9844643 L18.2461695,19.9844643 C18.5875932,19.9844643 18.8151864,20.1842857 18.8151864,20.4840476 C18.8152542,20.78375 18.5875932,20.983631 18.2461695,20.983631 Z M18.2461695,16.4871429 L5.72711864,16.4871429 C5.38569492,16.4871429 5.15810169,16.2873214 5.15810169,15.9875595 C5.15810169,15.6877976 5.38569492,15.4879762 5.72711864,15.4879762 L18.2461695,15.4879762 C18.5875932,15.4879762 18.8151864,15.6877976 18.8151864,15.9875595 C18.8151864,16.2873214 18.5875932,16.4871429 18.2461695,16.4871429 Z M18.2461695,11.9906548 L5.72711864,11.9906548 C5.38569492,11.9906548 5.15810169,11.7908333 5.15810169,11.4910714 C5.15810169,11.1913095 5.38569492,10.9914881 5.72711864,10.9914881 L18.2461695,10.9914881 C18.5875932,10.9914881 18.8151864,11.1913095 18.8151864,11.4910714 C18.8151864,11.7908333 18.5875932,11.9906548 18.2461695,11.9906548 Z" class="shape"></path>' +
		'</g>' +
		'</g>' +
		'</svg>',

	iconVLab: '<svg version="1.1" id="Layer_1" x="0px" y="0px" viewBox="0 0 20 20" style="enable-background:new 0 0 20 20;" xml:space="preserve"> ' +
		'<g>' +
		'<path class="st0" d="M14.5,9.3v4.5c0,0,2.3,0,4.5-1.1V8.3C19,8.3,16.8,9.3,14.5,9.3z"/>' +
		'<path class="st0" d="M1,12.8c2.3,1.1,4.5,1.1,4.5,1.1V9.3C3.2,9.3,1,8.3,1,8.3V12.8z"/>' +
		'<path class="st0" d="M18.8,7.9c-1-1.3-4.5-2.3-8.8-2.3s-7.8,1-8.8,2.3c0.4,0.2,2.3,1,4.3,1H6v0.5v1.8c1.2-0.2,2.6-0.3,4-0.3 c1.5,0,2.8,0.1,4,0.3V9.3V8.9h0.5C16.4,8.9,18.4,8,18.8,7.9z M7.5,10l2.2-2.7l0.5,2.2l1.1-1.1l1.1,1.6H7.5z"/>' +
		'<polygon class="st0" points="7,13.9 6.5,12.2 6,12.2 6.6,14.4 7.2,14.4 7.9,12.2 7.4,12.2 	"/>' +
		'<polygon class="st0" points="8.8,11.5 8.3,11.5 8.3,14.4 9.7,14.4 9.7,13.9 8.8,13.9 	"/>' +
		'<path class="st0" d="M11.6,13.9v-0.8c0-0.3-0.1-0.6-0.2-0.7c-0.1-0.1-0.3-0.2-0.6-0.2c-0.1,0-0.2,0-0.3,0c-0.1,0-0.2,0.1-0.3,0.1 l0,0.4c0.1-0.1,0.2-0.1,0.3-0.2c0.1,0,0.2-0.1,0.3-0.1c0.1,0,0.2,0,0.3,0.1c0.1,0.1,0.1,0.2,0.1,0.3V13c0,0-0.1,0-0.1,0 c0,0-0.1,0-0.1,0c-0.3,0-0.6,0.1-0.7,0.2c-0.2,0.1-0.3,0.3-0.3,0.5c0,0.2,0.1,0.4,0.2,0.5c0.1,0.1,0.3,0.2,0.5,0.2 c0.1,0,0.2,0,0.3-0.1c0.1-0.1,0.2-0.1,0.3-0.2l0,0.3h0.5c0-0.1,0-0.1,0-0.2C11.6,14.1,11.6,14,11.6,13.9z M11.1,13.5 c0,0.2,0,0.3-0.1,0.4c-0.1,0.1-0.2,0.1-0.3,0.1c-0.1,0-0.2,0-0.2-0.1c-0.1-0.1-0.1-0.1-0.1-0.2c0-0.1,0-0.2,0.1-0.3 c0.1-0.1,0.2-0.1,0.4-0.1c0,0,0.1,0,0.1,0c0,0,0,0,0,0V13.5z"/>' +
		'<path class="st0" d="M13.2,12.2c-0.1,0-0.2,0-0.3,0.1c-0.1,0.1-0.2,0.1-0.2,0.3v-1.3h-0.5v3.1h0.5c0-0.1,0-0.1,0-0.2 c0,0,0-0.1,0-0.1c0.1,0.1,0.1,0.2,0.2,0.3c0.1,0.1,0.2,0.1,0.3,0.1c0.2,0,0.4-0.1,0.6-0.3c0.1-0.2,0.2-0.5,0.2-0.8 c0-0.4-0.1-0.6-0.2-0.8C13.6,12.3,13.4,12.2,13.2,12.2z M13.3,13.8C13.3,14,13.2,14,13,14c-0.1,0-0.2-0.1-0.3-0.2 c-0.1-0.1-0.1-0.3-0.1-0.5v-0.2c0-0.2,0-0.3,0.1-0.5c0.1-0.1,0.2-0.2,0.3-0.2c0.1,0,0.2,0.1,0.3,0.2c0.1,0.1,0.1,0.3,0.1,0.5 S13.4,13.7,13.3,13.8z"/>' +
		'</g>' +
		'</svg>',

	no_guides_image: '<svg viewBox="0 0 101 124" fill="none">' +
		'<path d="M98.809 22.612L78.174 1.824C77.024 0.664999 75.428 0 73.795 0H6.57C3.169 0 0.401001 2.768 0.401001 6.169V117.83C0.401001 121.232 3.169 124 6.57 124H94.429C97.831 124 100.599 121.232 100.599 117.83V26.958C100.599 25.319 99.963 23.776 98.809 22.612ZM76.754 3.232L97.389 24.02C97.928 24.563 98.286 25.233 98.464 25.958H77.727C76.618 25.958 75.574 25.527 74.787 24.744C73.995 23.955 73.558 22.905 73.558 21.788V2H73.795C74.915 2 75.966 2.438 76.754 3.232ZM94.429 122H6.57C4.271 122 2.401 120.129 2.401 117.83V6.169C2.401 3.87 4.271 2 6.57 2H71.558V21.788C71.558 23.441 72.204 24.995 73.375 26.161C74.54 27.32 76.084 27.958 77.722 27.958H98.599V117.83C98.599 120.129 96.728 122 94.429 122Z" fill="#8D8D8D"/>' +
		'</svg>',

	folder: '<svg  width="40" height="40" viewBox="0 0 40 40" fill="none">' +
		'<rect x="0.7" y="0.7" width="38.6" height="38.6" rx="19.3" fill="#f8f8fb" stroke="#acadc1" stroke-width="1.4"/>' +
		'<path d="M28.2 15.6733V18.4667H11.8V13.0067C11.8 12.9091 11.8669 12.8667 11.906 12.8667H18.5C18.539 12.8667 18.606 12.9092 18.606 13.0067V15.3333V15.5333H18.806H28.094C28.1331 15.5333 28.2 15.5758 28.2 15.6733ZM28.094 14.4667H19.606V13.0067C19.606 12.3616 19.1296 11.8 18.5 11.8H11.906C11.2764 11.8 10.8 12.3612 10.8 13.0067V18.6667V19.3333V27.66C10.8 28.3051 11.2764 28.8667 11.906 28.8667H28.094C28.7232 28.8667 29.2 28.3055 29.2 27.66V19.3333V18.6667V15.6733C29.2 15.0279 28.7236 14.4667 28.094 14.4667ZM28.2 27.66C28.2 27.7576 28.1331 27.8 28.094 27.8H11.906C11.8669 27.8 11.8 27.7576 11.8 27.66V19.5333H28.2V27.66Z" fill="#acadc1" stroke="#acadc1" stroke-width="0.4"/>' +
		'</svg>',

	guide_category_title: '<svg width="28" height="22" viewBox="0 0 28 22" fill="none" >' +
		'<path d="M0.305981 9.84855L2.80027 19.8175C2.81263 20.5627 3.36591 21.2 4.08726 21.2H23.5129C24.2341 21.2 24.788 20.5626 24.7999 19.8165L27.1945 9.84671L27.2373 9.66829L27.0632 9.61026L24.8001 8.85585V5.408C24.8001 4.65149 24.2424 4 23.5129 4H13.2873V2.208C13.2873 1.45193 12.7296 0.8 12.0001 0.8H4.08726C3.35774 0.8 2.80006 1.45149 2.80006 2.208V8.85401L0.439046 9.60952L0.260472 9.66666L0.305981 9.84855ZM3.91408 19.7435L1.47621 10H26.0263L23.6856 19.7453L23.6801 19.7683V19.792C23.6801 19.9271 23.5858 20 23.5129 20H4.08726C4.01434 20 3.92006 19.9271 3.92006 19.792V19.7674L3.91408 19.7435ZM23.6801 5.408V8.8H3.92006V2.208C3.92006 2.07291 4.01434 2 4.08726 2H12.0001C12.0727 2 12.1673 2.07305 12.1673 2.208V5V5.2H12.3673H23.5129C23.5858 5.2 23.6801 5.27291 23.6801 5.408Z" fill="#b2b2b2" stroke="#b2b2b2" stroke-width="0.6" />' +
		'</svg>',

	// SVGS for outside creator and player directives start
	iconSmartTipTourPlay: '<svg version="1.1" id="Capa_1" x="0px" y="0px"' +
		'viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve">' +
		'<g>' +
		'<g>' +
		'<path d="M41.6,8.4C37.2,4,31.3,1.5,25,1.5S12.8,4,8.4,8.4S1.5,18.7,1.5,25S4,37.2,8.4,41.6s10.3,6.9,16.6,6.9s12.2-2.4,16.6-6.9' +
		's6.9-10.3,6.9-16.6S46,12.8,41.6,8.4z M39.7,39.7c-3.9,3.9-9.2,6.1-14.7,6.1s-10.8-2.2-14.7-6.1c-8.1-8.1-8.1-21.3,0-29.4' +
		'c3.9-3.9,9.2-6.1,14.7-6.1s10.8,2.2,14.7,6.1C47.8,18.4,47.8,31.6,39.7,39.7z"/>' +
		'</g>' +
		'</g>' +
		'<g>' +
		'<path d="M22.5,30.8v-1c0-1.4,0.2-2.5,0.6-3.4c0.4-0.9,1.2-1.9,2.4-2.9c1.6-1.4,2.6-2.4,3.1-3.1c0.4-0.7,0.6-1.5,0.6-2.5' +
		'c0-1.2-0.4-2.2-1.2-2.8c-0.8-0.7-1.9-1-3.4-1c-0.9,0-1.9,0.1-2.8,0.3s-1.9,0.6-3.1,1.2l-1.1-2.4c2.3-1.2,4.6-1.8,7.1-1.8' +
		'c2.3,0,4,0.6,5.3,1.7c1.3,1.1,1.9,2.7,1.9,4.7c0,0.9-0.1,1.6-0.3,2.3c-0.2,0.7-0.6,1.3-1,1.9s-1.4,1.5-2.9,2.9' +
		'c-1.2,1-2,1.9-2.4,2.6s-0.6,1.6-0.6,2.7v0.6H22.5z M21.7,36.1c0-1.6,0.7-2.4,2.1-2.4c0.7,0,1.2,0.2,1.6,0.6c0.4,0.4,0.6,1,0.6,1.8' +
		'c0,0.8-0.2,1.4-0.6,1.8c-0.4,0.4-0.9,0.6-1.6,0.6c-0.6,0-1.1-0.2-1.5-0.6C21.9,37.6,21.7,37,21.7,36.1z"/>' +
		'</g>' +
		'</svg>',

	iconBreadcrumArrow: '<svg width="6px" height="14px" viewBox="0 0 6 14" version="1.1"  >' +
		'<defs></defs>' +
		'<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" fill-opacity="0.555338542">' +
		'<g id="01--Breadcrumb-GuideMe" transform="translate(-1139.000000, -186.000000)" fill-rule="nonzero" fill="#757575">' +
		'<g id="right-arrow-copy-2" transform="translate(1139.000000, 186.000000)">' +
		'<polygon class="shape" points="0.257105882 0 0.0240470588 0.313588202 4.68407059 6.58823529 0.0240470588 12.8628824 0.257105882 13.1764706 5.15002353 6.58823529"></polygon>' +
		'<polygon id="Shape-Copy" points="0.257105882 0 0.0240470588 0.313588202 4.68407059 6.58823529 0.0240470588 12.8628824 0.257105882 13.1764706 5.15002353 6.58823529"></polygon>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',

	iconSettings: '<svg version="1.1" id="Capa_1" x="0px" y="0px"' +
		'viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve">' +
		'<g>' +
		'<g>' +
		'<path d="M44.9,20.3l-3.1-0.5c-0.3-1-0.7-2.1-1.3-3l1.8-2.6c0.8-1.1,0.7-2.6-0.3-3.5l-2.8-2.8c-0.5-0.5-1.2-0.8-1.9-0.8' +
		'c-0.6,0-1.1,0.2-1.6,0.5l-2.6,1.8c-1-0.5-2-1-3.1-1.3l-0.5-3.1c-0.2-1.3-1.4-2.3-2.7-2.3H23c-1.3,0-2.5,1-2.7,2.3l-0.5,3.2' +
		'c-1,0.3-2,0.8-3,1.3l-2.5-1.8c-0.5-0.3-1-0.5-1.6-0.5c-0.7,0-1.4,0.3-1.9,0.8l-2.8,2.8c-0.9,0.9-1.1,2.4-0.3,3.5l1.9,2.6' +
		'c-0.5,1-0.9,2-1.2,3l-3.1,0.5c-1.3,0.2-2.3,1.4-2.3,2.7V27c0,1.3,1,2.5,2.3,2.7l3.2,0.5c0.3,1,0.8,2,1.3,3l-1.8,2.5' +
		'C6.9,36.9,7,38.4,8,39.4l2.8,2.8c0.5,0.5,1.2,0.8,1.9,0.8c0.6,0,1.1-0.2,1.6-0.5l2.6-1.9c0.9,0.5,1.9,0.9,2.9,1.2l0.5,3.1' +
		'c0.2,1.3,1.4,2.3,2.7,2.3H27c1.3,0,2.5-1,2.7-2.3l0.5-3.1c1-0.3,2.1-0.7,3-1.3l2.6,1.8c0.5,0.3,1,0.5,1.6,0.5l0,0' +
		'c0.7,0,1.4-0.3,1.9-0.8l2.8-2.8c0.9-0.9,1.1-2.4,0.3-3.5l-1.8-2.6c0.5-1,0.9-2,1.3-3l3.1-0.5c1.3-0.2,2.3-1.4,2.3-2.7V23' +
		'C47.2,21.7,46.2,20.6,44.9,20.3z M44.7,27c0,0.1-0.1,0.2-0.2,0.2l-3.9,0.6c-0.5,0.1-0.9,0.4-1,0.9c-0.4,1.4-0.9,2.7-1.6,3.9' +
		'c-0.3,0.4-0.2,1,0.1,1.4l2.3,3.2c0.1,0.1,0.1,0.2,0,0.3l-2.8,2.8c-0.1,0.1-0.1,0.1-0.2,0.1c-0.1,0-0.1,0-0.1,0L34,38' +
		'c-0.4-0.3-0.9-0.3-1.4-0.1c-1.2,0.7-2.5,1.3-3.9,1.6c-0.5,0.1-0.8,0.5-0.9,1l-0.7,3.9c0,0.1-0.1,0.2-0.2,0.2H23' +
		'c-0.1,0-0.2-0.1-0.2-0.2l-0.6-3.9c-0.1-0.5-0.4-0.9-0.9-1c-1.3-0.3-2.6-0.9-3.8-1.6c-0.2-0.1-0.4-0.2-0.6-0.2' +
		'c-0.3,0-0.5,0.1-0.7,0.2l-3.2,2.3c0,0-0.1,0-0.1,0c0,0-0.1,0-0.2-0.1l-2.8-2.8c-0.1-0.1-0.1-0.2,0-0.3l2.3-3.2' +
		'c0.3-0.4,0.3-0.9,0.1-1.4c-0.7-1.2-1.3-2.5-1.6-3.9c-0.1-0.5-0.5-0.8-1-0.9l-3.9-0.7c-0.1,0-0.2-0.1-0.2-0.2v-3.9' +
		'c0-0.1,0.1-0.2,0.2-0.2l3.9-0.6c0.5-0.1,0.9-0.4,1-0.9c0.3-1.4,0.9-2.7,1.6-3.9c0.3-0.4,0.2-1-0.1-1.4l-2.3-3.2' +
		'c-0.1-0.1-0.1-0.2,0-0.3l2.8-2.8c0.1-0.1,0.1-0.1,0.2-0.1c0.1,0,0.1,0,0.1,0l3.2,2.3c0.4,0.3,0.9,0.3,1.4,0.1' +
		'c1.2-0.7,2.5-1.3,3.9-1.6c0.5-0.1,0.8-0.5,0.9-1l0.7-3.9c0-0.1,0.1-0.2,0.2-0.2h3.9c0.1,0,0.2,0.1,0.2,0.2l0.6,3.9' +
		'c0.1,0.5,0.4,0.9,0.9,1c1.4,0.4,2.7,0.9,4,1.6c0.4,0.3,1,0.2,1.4-0.1l3.2-2.3c0,0,0.1,0,0.1,0c0,0,0.1,0,0.2,0.1l2.8,2.8' +
		'c0.1,0.1,0.1,0.2,0,0.3L38.1,16c-0.3,0.4-0.3,0.9-0.1,1.4c0.7,1.2,1.3,2.5,1.6,3.9c0.1,0.5,0.5,0.8,1,0.9l3.9,0.7' +
		'c0.1,0,0.2,0.1,0.2,0.2L44.7,27L44.7,27z"/>' +
		'<path d="M25,15.4c-5.3,0-9.6,4.3-9.6,9.6s4.3,9.6,9.6,9.6s9.6-4.3,9.6-9.6S30.3,15.4,25,15.4z M25,32.1c-3.9,0-7.1-3.2-7.1-7.1' +
		's3.2-7.1,7.1-7.1s7.1,3.2,7.1,7.1S28.9,32.1,25,32.1z"/>' +
		'</g>' +
		'</g>' +
		'</svg>',

	iconMyGuide: '<svg id="Layer_1" data-name="Layer 1"  viewBox="0 0 25 25">' +
		'<path class="cls-1" d="M12.5.78A11.72,11.72,0,1,0,24.22,12.5,11.72,11.72,0,0,0,12.5.78Zm0,21.74a10,10,0,1,1,10-10A10,10,0,0,1,12.5,22.52Z"/>' +
		'<path class="cls-1" d="M6.83,6.83l3.54,7.8,7.8,3.54-3.54-7.79Zm4.25,7.09L8.25,8.25l5.67,2.83Z"/>' +
		'</svg>',
	iconMyShow: '<svg id="Layer_1" data-name="Layer 1"  viewBox="0 0 25 25">' +
		'<path class="cls-1" d="M5.29,8.57a4.88,4.88,0,1,0,4.88,4.88A4.89,4.89,0,0,0,5.29,8.57Zm0,8.48a3.61,3.61,0,1,1,3.61-3.6A3.6,3.6,0,0,1,5.29,17.05Z"/>' +
		'<path class="cls-1" d="M19.71,8.57a4.88,4.88,0,1,0,4.88,4.88A4.89,4.89,0,0,0,19.71,8.57Zm0,8.48a3.61,3.61,0,1,1,3.6-3.6A3.61,3.61,0,0,1,19.71,17.05Z"/>' +
		'<circle class="cls-1" cx="12.5" cy="9.42" r="1.06"/>' +
		'<path class="cls-1" d="M16.84,9H15.22A2.75,2.75,0,0,0,9.78,9H8.16a5.31,5.31,0,0,1,2.43,4.44,5.21,5.21,0,0,1-.35,1.9,2.75,2.75,0,0,1,4.52,0,5.21,5.21,0,0,1-.35-1.9A5.31,5.31,0,0,1,16.84,9ZM12.5,10.9A1.48,1.48,0,0,1,11,9.42V9.3s0-.07,0-.1h0s0-.07,0-.1h0l0-.1a1.48,1.48,0,0,1,2.84,0l0,.1h0s0,.07,0,.1h0s0,.06,0,.1v.12A1.48,1.48,0,0,1,12.5,10.9Z"/>' +
		'</svg>',
	iconMyTest: '<svg id="Layer_1" data-name="Layer 1"  viewBox="0 0 25 25">' +
		'<path class="cls-1" d="M17.44,16.36A3.68,3.68,0,1,0,21.11,20,3.68,3.68,0,0,0,17.44,16.36Zm1.95,2.18-2,3.34a.33.33,0,0,1-.25.16h0a.33.33,0,0,1-.23-.1l-1.34-1.34a.33.33,0,0,1,.47-.47l1,1,1.79-3a.34.34,0,0,1,.46-.12A.33.33,0,0,1,19.39,18.54Z"/>' +
		'<path class="cls-1" d="M5.4,22.2V7H7.62v.85a.76.76,0,0,0,.75.75h7.49a.76.76,0,0,0,.76-.75V7h2.21v6.26l0,2.24h1.55l0-1.66V6.26a.76.76,0,0,0-.76-.75h-3V4.66a.76.76,0,0,0-.76-.76H15a2.94,2.94,0,0,0-5.84,0H8.37a.76.76,0,0,0-.75.76v.85h-3a.76.76,0,0,0-.76.75V23a.76.76,0,0,0,.76.76h8.61V22.17l-2.67,0ZM12.12,2.8a1.44,1.44,0,0,1,1.39,1.1H10.73A1.44,1.44,0,0,1,12.12,2.8Zm-3,2.62h6V7.11h-6Z"/>' +
		'</svg>',
	iconDoItForMe: '<svg id="Layer_1" data-name="Layer 1"  viewBox="0 0 25 25">' +
		'<defs><style>.cls-1{fill:#757575;}</style></defs><title>MyBot</title>' +
		'<path class="cls-1" d="M14.51,5.67a1.88,1.88,0,1,0-3.76,0A1.9,1.9,0,0,0,12,7.44V9.18h1.18V7.47A1.87,1.87,0,0,0,14.51,5.67Z"/><circle class="cls-1" cx="9.6" cy="14.4" r="1"/><circle class="cls-1" cx="15.28" cy="14.4" r="1"/>' +
		'<path class="cls-1" d="M13.55,17.64a1.12,1.12,0,0,1-2.24,0v-.28a.45.45,0,0,1,.45-.45H13.1a.45.45,0,0,1,.45.45Z"/>' +
		'<path class="cls-1" d="M20.16,13H20v-1a3.45,3.45,0,0,0-3.45-3.45H8.72a3.45,3.45,0,0,0-3.45,3.45v1H4.84A1.64,1.64,0,0,0,3.2,14.61v1.14a1.64,1.64,0,0,0,1.64,1.64h.43v.37s0,0,0,.07h0a3.44,3.44,0,0,0,3.44,3.38h7.86A3.45,3.45,0,0,0,20,17.76v-.37h.13a1.64,1.64,0,0,0,1.64-1.64V14.61A1.64,1.64,0,0,0,20.16,13ZM16.58,20H8.72a2.26,2.26,0,0,1-2.26-2.2V12.89h0v-1A2.27,2.27,0,0,1,8.72,9.67h7.86a2.27,2.27,0,0,1,2.27,2.27v1h0v4.94h0A2.27,2.27,0,0,1,16.58,20Z"/>' +
		'</svg>',

	popupInfo: '<svg width="44" height="44" viewBox="0 0 44 44" fill="none">' +
		'<path d="M22 43.3333C16.342 43.3333 10.9158 41.0857 6.91502 37.085C2.91424 33.0842 0.666626 27.658 0.666626 22C0.666626 16.3421 2.91424 10.9158 6.91502 6.91506C10.9158 2.91428 16.342 0.666672 22 0.666672C27.6579 0.666672 33.0841 2.91428 37.0849 6.91506C41.0857 10.9158 43.3333 16.3421 43.3333 22C43.3333 27.658 41.0857 33.0842 37.0849 37.085C33.0841 41.0857 27.6579 43.3333 22 43.3333ZM22 11.3333C21.4342 11.3333 20.8915 11.5581 20.4915 11.9582C20.0914 12.3583 19.8666 12.9009 19.8666 13.4667C19.8666 14.0325 20.0914 14.5751 20.4915 14.9752C20.8915 15.3752 21.4342 15.6 22 15.6C22.5658 15.6 23.1084 15.3752 23.5085 14.9752C23.9085 14.5751 24.1333 14.0325 24.1333 13.4667C24.1333 12.9009 23.9085 12.3583 23.5085 11.9582C23.1084 11.5581 22.5658 11.3333 22 11.3333ZM24.1333 19.8667C24.1333 19.3009 23.9085 18.7583 23.5085 18.3582C23.1084 17.9581 22.5658 17.7333 22 17.7333C21.4342 17.7333 20.8915 17.9581 20.4915 18.3582C20.0914 18.7583 19.8666 19.3009 19.8666 19.8667V30.5333C19.8666 31.0991 20.0914 31.6418 20.4915 32.0418C20.8915 32.4419 21.4342 32.6667 22 32.6667C22.5658 32.6667 23.1084 32.4419 23.5085 32.0418C23.9085 31.6418 24.1333 31.0991 24.1333 30.5333V19.8667Z" fill="#005BF0"/>' +
		'</svg>',

	popupClose: '<svg  width="14" height="14" viewBox="0 0 14 14" fill="none">' +
		'<path opacity="0.7" d="M13.8586 1.41L8.33929 6.92929L8.26858 7L8.33929 7.07071L13.8586 12.59L12.59 13.8586L7.07071 8.33929L7 8.26858L6.92929 8.33929L1.41 13.8586L0.141422 12.59L5.66071 7.07071L5.73142 7L5.66071 6.92929L0.141421 1.41L1.41 0.141421L6.92929 5.66071L7 5.73142L7.07071 5.66071L12.59 0.141422L13.8586 1.41Z" fill="black" stroke="black" stroke-width="0.2"/>' +
		'</svg>',

	popupWarning: '<svg width="44" height="40" viewBox="0 0 44 40" fill="none">' +
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M37.9337 38.9261L5.9348 39.0691C1.22227 39.0904 -0.681735 35.8019 1.682 31.7251L17.8431 3.85201C20.2068 -0.224788 24.0244 -0.216255 26.3711 3.87121L42.2196 31.4872C44.5652 35.5747 42.6463 38.9048 37.9337 38.9261ZM21.9071 28.4408C20.7284 28.4408 19.7737 29.3965 19.7737 30.5741C19.7737 31.7517 20.7295 32.7075 21.9071 32.7075C23.0847 32.7075 24.0404 31.7517 24.0404 30.5741C24.0404 29.3965 23.0847 28.4408 21.9071 28.4408ZM21.9071 26.3075C23.0847 26.3075 24.0404 25.3517 24.0404 24.1741V15.6408C24.0404 14.4632 23.0847 13.5075 21.9071 13.5075C20.7295 13.5075 19.7737 14.4632 19.7737 15.6408V24.1741C19.7737 25.3528 20.7295 26.3075 21.9071 26.3075Z" fill="#FFAB00"/>' +
		'</svg>',

	popupError: '<svg width="44" height="40" viewBox="0 0 44 40" fill="none">' +
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M37.9337 38.9261L5.93477 39.0691C1.22223 39.0904 -0.681765 35.8019 1.68197 31.7251L17.843 3.85201C20.2068 -0.224788 24.0244 -0.216255 26.371 3.87121L42.2196 31.4872C44.5652 35.5747 42.6462 38.9048 37.9337 38.9261ZM21.907 28.4408C20.7284 28.4408 19.7737 29.3965 19.7737 30.5741C19.7737 31.7517 20.7294 32.7075 21.907 32.7075C23.0846 32.7075 24.0404 31.7517 24.0404 30.5741C24.0404 29.3965 23.0846 28.4408 21.907 28.4408ZM21.907 26.3075C23.0846 26.3075 24.0404 25.3517 24.0404 24.1741V15.6408C24.0404 14.4632 23.0846 13.5075 21.907 13.5075C20.7294 13.5075 19.7737 14.4632 19.7737 15.6408V24.1741C19.7737 25.3528 20.7294 26.3075 21.907 26.3075Z" fill="#DE350B"/>' +
		'</svg>',

	popupSuccess: '<svg width="44" height="43" viewBox="0 0 44 43" fill="none">' +
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M22.3387 42.68C19.5162 42.7116 16.7155 42.1829 14.0987 41.1246C11.482 40.0663 9.10113 38.4995 7.09409 36.5147C5.08704 34.53 3.49365 32.1668 2.40619 29.562C1.31872 26.9573 0.758774 24.1627 0.758774 21.34C0.758774 18.5173 1.31872 15.7227 2.40619 13.118C3.49365 10.5132 5.08704 8.15003 7.09409 6.1653C9.10113 4.18056 11.482 2.61369 14.0987 1.55541C16.7155 0.497126 19.5162 -0.0315459 22.3387 5.92438e-06C27.9571 0.0628127 33.324 2.33878 37.2748 6.33398C41.2256 10.3292 43.4414 15.7213 43.4414 21.34C43.4414 26.9588 41.2256 32.3508 37.2748 36.346C33.324 40.3412 27.9571 42.6172 22.3387 42.68ZM19.2027 26.4267L13.6347 21.552L11 24.5653L19.6533 32.1333L34.2987 14.56L31.224 12L19.2027 26.4267Z" fill="#14B872"/>' +
		'</svg>',

	refresh: '<svg class="mgPlayerJSTest_position-center mgPlayerJSTest_width-height-100" viewBox="0 0 31 25" fill="none" >' +
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M15.4902 22.7C21.1235 22.7 25.6902 18.1333 25.6902 12.5C25.6902 12.1626 25.6739 11.829 25.6418 11.5H27.9508C27.9769 11.8299 27.9902 12.1634 27.9902 12.5C27.9902 19.4036 22.3938 25 15.4902 25C12.548 25 9.84315 23.9835 7.70781 22.2824L9.34699 20.6432C11.0557 21.9343 13.1836 22.7 15.4902 22.7ZM5.33863 13.5C5.30662 13.171 5.29023 12.8374 5.29023 12.5C5.29023 6.8667 9.85693 2.3 15.4902 2.3C17.9291 2.3 20.1681 3.15598 21.9231 4.5839L21.9902 4.5L23.5474 2.94285C21.3716 1.10668 18.5602 0 15.4902 0C8.58668 0 2.99023 5.59644 2.99023 12.5C2.99023 12.8366 3.00354 13.1701 3.02965 13.5H5.33863Z" fill="#454560" />' +
		'<path d="M26.8099 7.97679L23.1062 11.9319C23.0671 11.9829 23.0637 12.0485 23.0965 12.1021C23.1298 12.1559 23.1941 12.189 23.2641 12.1881L30.7904 12.0969C30.8604 12.096 30.9241 12.0613 30.956 12.0068C30.97 11.9826 30.9768 11.9561 30.9765 11.93C30.9761 11.8972 30.9644 11.8648 30.9421 11.8369L27.1196 7.97303C27.0838 7.92885 27.0258 7.90305 26.9639 7.9038C26.902 7.90455 26.8445 7.93192 26.8099 7.97679Z" fill="#454560" />' +
		'<path d="M4.16431 17.1151L7.8721 13.1638C7.91124 13.1128 7.91465 13.0472 7.88187 12.9936C7.84872 12.9398 7.78437 12.9066 7.71438 12.9074L0.188057 12.9909C0.118062 12.9917 0.0542772 13.0263 0.0223269 13.0808C0.00829369 13.105 0.00143566 13.1314 0.00172616 13.1576C0.00208975 13.1904 0.0137412 13.2228 0.0360681 13.2507L3.8546 17.1185C3.89028 17.1627 3.94834 17.1886 4.01025 17.1879C4.07215 17.1872 4.12962 17.1599 4.16431 17.1151Z" fill="#454560" />' +
		'</svg>',

	close_panel: '<svg class="mgPlayerJSTest_position-center mgPlayerJSTest_width-height-100" viewBox="0 0 18 18" fill="none">' +
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M10.7133 8.54133L17.3653 15.1933C17.5729 15.4009 17.6895 15.6824 17.6895 15.976C17.6895 16.2696 17.5729 16.5511 17.3653 16.7587C17.1577 16.9662 16.8762 17.0829 16.5826 17.0829C16.2891 17.0829 16.0076 16.9662 15.8 16.7587L9.14798 10.1053L2.49731 16.7573C2.39453 16.8601 2.27251 16.9416 2.13822 16.9973C2.00393 17.0529 1.86 17.0815 1.71465 17.0815C1.56929 17.0815 1.42536 17.0529 1.29107 16.9973C1.15678 16.9416 1.03476 16.8601 0.931979 16.7573C0.829198 16.6546 0.747667 16.5325 0.692043 16.3982C0.636418 16.2639 0.607788 16.12 0.607788 15.9747C0.607788 15.8293 0.636418 15.6854 0.692043 15.5511C0.747667 15.4168 0.829198 15.2948 0.931979 15.192L7.58265 8.54133L0.931979 1.88933C0.724403 1.68176 0.607788 1.40022 0.607788 1.10667C0.607788 0.81311 0.724403 0.531577 0.931979 0.324001C1.13956 0.116425 1.42109 -0.000190733 1.71465 -0.000190735C2.0082 -0.000190737 2.28974 0.116425 2.49731 0.324001L9.14798 6.97733L15.8 0.324001C16.0076 0.116425 16.2891 -0.000190735 16.5826 -0.000190735C16.8762 -0.000190735 17.1577 0.116425 17.3653 0.324001C17.5729 0.531577 17.6895 0.81311 17.6895 1.10667C17.6895 1.40022 17.5729 1.68176 17.3653 1.88933L10.7133 8.54133Z" fill="#555555"/>' +
		'</svg>',

	subfolder: '<svg  width="40" height="40" viewBox="0 0 40 40" fill="none">' +
		'<rect x="0.7" y="0.7" width="38.6" height="38.6" rx="19.3" fill="#F8F8FB" stroke="#ACADC1" stroke-width="1.4"/>' +
		'<path d="M28.2 15.6733V18.4667H11.8V13.0067C11.8 12.9091 11.8669 12.8667 11.906 12.8667H18.5C18.539 12.8667 18.606 12.9092 18.606 13.0067V15.3333V15.5333H18.806H28.094C28.1331 15.5333 28.2 15.5758 28.2 15.6733ZM28.094 14.4667H19.606V13.0067C19.606 12.3616 19.1296 11.8 18.5 11.8H11.906C11.2764 11.8 10.8 12.3612 10.8 13.0067V18.6667V19.3333V27.66C10.8 28.3051 11.2764 28.8667 11.906 28.8667H28.094C28.7232 28.8667 29.2 28.3055 29.2 27.66V19.3333V18.6667V15.6733C29.2 15.0279 28.7236 14.4667 28.094 14.4667ZM28.2 27.66C28.2 27.7576 28.1331 27.8 28.094 27.8H11.906C11.8669 27.8 11.8 27.7576 11.8 27.66V19.5333H28.2V27.66Z" fill="#ACADC1" stroke="#ACADC1" stroke-width="0.4"/>' +
		'<path d="M19.5667 24.36V24.2H30.433C30.4332 24.2011 30.4333 24.2025 30.4333 24.204V24.36H19.5667ZM30.4463 23.4H24.337V22.604C24.337 22.1773 24.0153 21.8 23.5833 21.8H19.5537C19.1218 21.8 18.8 22.1771 18.8 22.604V26V26.4V31.396C18.8 31.8227 19.1217 32.2 19.5537 32.2H30.4463C30.878 32.2 31.2 31.823 31.2 31.396V26.4V26V24.204C31.2 23.7771 30.8783 23.4 30.4463 23.4Z" fill="#ACADC1" stroke="#ACADC1" stroke-width="0.4"/>' +
		'</svg>',

	select_application: '<svg width="20" height="20" viewBox="0 0 20 20" fill="none" class="ng-scope"><g filter="url(#filter0_d)"><path d="M3.07775 4.15381C4.22479 4.15381 5.15465 3.22395 5.15465 2.07691C5.15465 0.929863 4.22479 0 3.07775 0C1.9307 0 1.00084 0.929863 1.00084 2.07691C1.00084 3.22395 1.9307 4.15381 3.07775 4.15381Z" fill="#ACADC1"></path><path d="M10.0008 4.15381C11.1479 4.15381 12.0777 3.22395 12.0777 2.07691C12.0777 0.929863 11.1479 0 10.0008 0C8.8538 0 7.92393 0.929863 7.92393 2.07691C7.92393 3.22395 8.8538 4.15381 10.0008 4.15381Z" fill="#ACADC1"></path><path d="M16.923 4.15381C18.0701 4.15381 18.9999 3.22395 18.9999 2.07691C18.9999 0.929863 18.0701 0 16.923 0C15.776 0 14.8461 0.929863 14.8461 2.07691C14.8461 3.22395 15.776 4.15381 16.923 4.15381Z" fill="#ACADC1"></path><path d="M3.07691 11.0769C4.22395 11.0769 5.15381 10.147 5.15381 9C5.15381 7.85296 4.22395 6.9231 3.07691 6.9231C1.92986 6.9231 1 7.85296 1 9C1 10.147 1.92986 11.0769 3.07691 11.0769Z" fill="#005BF0"></path><path d="M10.0008 11.0769C11.1479 11.0769 12.0777 10.147 12.0777 9C12.0777 7.85296 11.1479 6.9231 10.0008 6.9231C8.8538 6.9231 7.92393 7.85296 7.92393 9C7.92393 10.147 8.8538 11.0769 10.0008 11.0769Z" fill="#005BF0"></path><path d="M16.923 11.0769C18.0701 11.0769 18.9999 10.147 18.9999 9C18.9999 7.85296 18.0701 6.9231 16.923 6.9231C15.776 6.9231 14.8461 7.85296 14.8461 9C14.8461 10.147 15.776 11.0769 16.923 11.0769Z" fill="#F8F8FB"></path><path d="M3.07691 17.9996C4.22395 17.9996 5.15381 17.0698 5.15381 15.9227C5.15381 14.7757 4.22395 13.8458 3.07691 13.8458C1.92986 13.8458 1 14.7757 1 15.9227C1 17.0698 1.92986 17.9996 3.07691 17.9996Z" fill="#005BF0"></path><path d="M10.0008 17.9996C11.1479 17.9996 12.0777 17.0698 12.0777 15.9227C12.0777 14.7757 11.1479 13.8458 10.0008 13.8458C8.8538 13.8458 7.92393 14.7757 7.92393 15.9227C7.92393 17.0698 8.8538 17.9996 10.0008 17.9996Z" fill="#F8F8FB"></path><path d="M16.923 17.9996C18.0701 17.9996 18.9999 17.0698 18.9999 15.9227C18.9999 14.7757 18.0701 13.8458 16.923 13.8458C15.776 13.8458 14.8461 14.7757 14.8461 15.9227C14.8461 17.0698 15.776 17.9996 16.923 17.9996Z" fill="#F8F8FB"></path></g><defs><filter id="filter0_d" x="0" y="0" width="19.9999" height="19.9996" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB"><feFlood flood-opacity="0" result="BackgroundImageFix"></feFlood><feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"></feColorMatrix><feOffset dy="1"></feOffset><feGaussianBlur stdDeviation="0.5"></feGaussianBlur><feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.187664 0"></feColorMatrix><feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow"></feBlend><feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow" result="shape"></feBlend></filter></defs></svg>',

	app_selected: '<svg class="mgPlayerJSTest_position-center mgPlayerJSTest_width-height-100"  viewBox="0 0 24 24" fill="none">' +
		'<circle cx="12" cy="12" r="12" fill="#005BF0" />' +
		'<path d="M18.68 7.33624C19.1067 7.78479 19.1067 8.51188 18.68 8.9602L11.3527 16.6638C10.9261 17.1121 10.2347 17.1121 9.80806 16.6638L6.31999 12.9964C5.89334 12.5481 5.89334 11.821 6.31999 11.3727C6.74642 10.9242 7.43802 10.9242 7.86446 11.3727L10.5803 14.2279L17.1353 7.33624C17.562 6.88792 18.2536 6.88792 18.68 7.33624Z" fill="white" />' +
		'</svg>',

	more_keyword: '<svg version="1.2" overflow="visible" preserveAspectRatio="none" viewBox="0 0 24 24" width="32" height="32">' +
		'<g>' +
		'<path xmlns:default="http://www.w3.org/2000/svg" d="M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z" style="#005BF0" vector-effect="non-scaling-stroke" />' +
		'</g>' +
		'</svg>',

	filter_close_icon: '<svg  width="9" height="9" viewBox="0 0 7 7" fill="none">' +
		'<path d="M4.655 3.50022L6.82055 1.33468C7.05982 1.09541 7.05982 0.707492 6.82055 0.468596L6.53185 0.179901C6.29251 -0.0594437 5.90459 -0.0594437 5.66569 0.179901L3.50022 2.34537L1.33468 0.179453C1.09541 -0.0598176 0.707492 -0.0598176 0.468596 0.179453L0.179453 0.468147C-0.0598176 0.707492 -0.0598176 1.09541 0.179453 1.33431L2.34537 3.50022L0.179901 5.66569C-0.0594437 5.90504 -0.0594437 6.29296 0.179901 6.53185L0.468596 6.82055C0.707866 7.05982 1.09578 7.05982 1.33468 6.82055L3.50022 4.655L5.66569 6.82055C5.90504 7.05982 6.29296 7.05982 6.53185 6.82055L6.82055 6.53185C7.05982 6.29251 7.05982 5.90459 6.82055 5.66569L4.655 3.50022Z" fill="white"/>' +
		'</svg>',

	search: '<svg class="mgPlayerJSTest_position-center mgPlayerJSTest_width-height-100" viewBox="0 0 18 19" fill="none" >' +
		'<path d="M12.8812 11.6585L12.5653 12.0625H13.0781H13.6512C13.8108 12.0625 13.9614 12.1247 14.072 12.2354L17.5762 15.7395C17.5763 15.7397 17.5765 15.7398 17.5767 15.74C17.8066 15.9729 17.8064 16.3494 17.5736 16.5822L16.5787 17.5771L16.5777 17.5781C16.3492 17.8091 15.9738 17.8105 15.7404 17.5771L12.2354 14.0721C12.1247 13.9614 12.0625 13.8108 12.0625 13.6512V13.0781V12.5653L11.6585 12.8812C10.46 13.8182 8.95292 14.375 7.3125 14.375C3.41112 14.375 0.25 11.2139 0.25 7.3125C0.25 3.41112 3.41112 0.25 7.3125 0.25C11.2139 0.25 14.375 3.41112 14.375 7.3125C14.375 8.95292 13.8182 10.46 12.8812 11.6585ZM2.5625 7.3125C2.5625 9.93976 4.68901 12.0625 7.3125 12.0625C9.93976 12.0625 12.0625 9.93599 12.0625 7.3125C12.0625 4.68524 9.93599 2.5625 7.3125 2.5625C4.68524 2.5625 2.5625 4.68901 2.5625 7.3125Z" fill="#6f708b" stroke="#acadc1" stroke-width="0.5"/>' +
		'</svg>',

	search_close: '<svg class="mgPlayerJSTest_position-center mgPlayerJSTest_width-height-100" viewBox="0 0 14 14" fill="none" >' +
		'<path d="M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z" fill="black" fill-opacity="0.7" />' +
		'<path d="M8.37464 7.03536L13.9293 12.59L12.59 13.9293L7.03536 8.37464L7 8.33929L6.96464 8.37464L1.41 13.9293L0.0707109 12.59L5.62536 7.03536L5.66071 7L5.62536 6.96464L0.0707107 1.41L1.41 0.0707107L6.96464 5.62536L7 5.66071L7.03536 5.62536L12.59 0.0707109L13.9293 1.41L8.37464 6.96464L8.33929 7L8.37464 7.03536Z" stroke="black" stroke-opacity="0.7" stroke-width="0.1" />' +
		'</svg>',

	add_category: '<svg class="mgPlayerJSTest_position-center mgPlayerJSTest_width-height-100" viewBox="0 0 16 16" fill="none" >' +
		'<path d="M15.15 8.84528V8.99528H15H8.93557V15V15.15H8.78557H7.08818H6.93818V15V8.99528H1H0.85V8.84528V7.36604V7.21604H1H6.93818V1V0.85H7.08818H8.78557H8.93557V1V7.21604H15H15.15V7.36604V8.84528Z" fill="#ffffff" stroke="#ffffff" stroke-width="0.3"></path>' +
		'</svg>',

	unpublish: '<svg width="18" height="18" viewBox="0 0 18 18" fill="none" >' +
		'<rect x="1" y="4" width="16" height="1.5" fill="#FFFFFF"/>' +
		'<path d="M13.0699 13.1582L13.143 13.0868L13.0699 13.0153L12.3342 12.2955L12.2643 12.2271L12.1944 12.2955L9.62021 14.8139V8V7.9H9.52021L8.47979 7.9H8.37979V8V14.8139L5.80564 12.2955L5.73571 12.2271L5.66577 12.2955L4.93007 13.0153L4.857 13.0868L4.93007 13.1582L8.93007 17.0715L9 17.1399L9.06993 17.0715L13.0699 13.1582Z" fill="#FFFFFF" stroke="#FFFFFF" stroke-width="0.2"/>' +
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M2 1.5H16C16.2761 1.5 16.5 1.72386 16.5 2V14C16.5 14.2761 16.2761 14.5 16 14.5H14V16H16C17.1046 16 18 15.1046 18 14V2C18 0.895431 17.1046 0 16 0H2C0.895431 0 0 0.895431 0 2V14C0 15.1046 0.89543 16 2 16H4V14.5H2C1.72386 14.5 1.5 14.2761 1.5 14V2C1.5 1.72386 1.72386 1.5 2 1.5Z" fill="#FFFFFF"/>' +
		'</svg>',

	publish: '<svg width="18" height="18" viewBox="0 0 18 18" fill="none" >' +
		'<path d="M4.93007 11.8418L4.857 11.9132L4.93007 11.9847L5.66577 12.7045L5.73571 12.7729L5.80564 12.7045L8.37979 10.1861V17V17.1H8.47979H9.52021H9.62021V17V10.1861L12.1944 12.7045L12.2643 12.7729L12.3342 12.7045L13.0699 11.9847L13.143 11.9132L13.0699 11.8418L9.06993 7.92852L9 7.8601L8.93007 7.92852L4.93007 11.8418Z" fill="#FFFFFF" stroke="#FFFFFF" stroke-width="0.2"/>' +
		'<rect x="1" y="4" width="16" height="1.5" fill="#FFFFFF"/>' +
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M2 1.5H16C16.2761 1.5 16.5 1.72386 16.5 2V14C16.5 14.2761 16.2761 14.5 16 14.5H14V16H16C17.1046 16 18 15.1046 18 14V2C18 0.895431 17.1046 0 16 0H2C0.895431 0 0 0.895431 0 2V14C0 15.1046 0.89543 16 2 16H4V14.5H2C1.72386 14.5 1.5 14.2761 1.5 14V2C1.5 1.72386 1.72386 1.5 2 1.5Z" fill="#FFFFFF"/>' +
		'</svg>',

	help_center: '<svg class="mgPlayerJSTest_position-center mgPlayerJSTest_width-height-100" overflow="visible" preserveAspectRatio="none" viewBox="0 0 514 514">' +
		'<g transform="translate(1, 1)">' +
		'<path d="M256 340c-15.464 0-28 12.536-28 28s12.536 28 28 28 28-12.536 28-28-12.536-28-28-28zm7.67-24h-16c-6.627 0-12-5.373-12-12v-.381c0-70.343 77.44-63.619 77.44-107.408 0-20.016-17.761-40.211-57.44-40.211-29.144 0-44.265 9.649-59.211 28.692-3.908 4.98-11.054 5.995-16.248 2.376l-13.134-9.15c-5.625-3.919-6.86-11.771-2.645-17.177C185.658 133.514 210.842 116 255.67 116c52.32 0 97.44 29.751 97.44 80.211 0 67.414-77.44 63.849-77.44 107.408V304c0 6.627-5.373 12-12 12zM256 40c118.621 0 216 96.075 216 216 0 119.291-96.61 216-216 216-119.244 0-216-96.562-216-216 0-119.203 96.602-216 216-216m0-32C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8z" vector-effect="non-scaling-stroke" fill="#454560" />' +
		'</g>' +
		'</svg>',

	navbar: '<svg class="mgPlayerJSTest_position-center mgPlayerJSTest_width-height-100"  width="23" height="17" viewBox="0 0 23 17" fill="none">' +
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M1.25 2.5C0.559644 2.5 0 1.94036 0 1.25C0 0.559644 0.559645 0 1.25 0H21.25C21.9404 0 22.5 0.559644 22.5 1.25C22.5 1.94036 21.9404 2.5 21.25 2.5H1.25ZM0 8.5C0 9.19036 0.559645 9.75 1.25 9.75H21.25C21.9404 9.75 22.5 9.19036 22.5 8.5C22.5 7.80964 21.9404 7.25 21.25 7.25H1.25C0.559644 7.25 0 7.80964 0 8.5ZM0 15.75C0 16.4404 0.559645 17 1.25 17H21.25C21.9404 17 22.5 16.4404 22.5 15.75C22.5 15.0596 21.9404 14.5 21.25 14.5H1.25C0.559644 14.5 0 15.0596 0 15.75Z" fill="#454560"></path>' +
		'</svg>',

	iconImport: '<svg width="28px" height="28px" viewBox="0 0 28 28" version="1.1"  >' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="Icon-Set" transform="translate(-258.000000, -933.000000)" fill="#757575">' +
		'<path d="M269,944 C269.001,943.445 268.555,942.999 268,943 C267.445,943.001 267.001,943.445 267,944 L267,951 C267,951.555 267.445,952.001 268,952 L275,952 C275.555,951.999 275.999,951.556 276,951 C276.001,950.444 275.555,949.999 275,950 L270.509,950 L285.293,935.217 C285.684,934.826 285.684,934.192 285.293,933.802 C284.902,933.412 284.269,933.412 283.879,933.802 L269,948.681 L269,944 L269,944 Z M284,946 L284,957 C284,958.087 283.086,959 282,959 L261.935,959.033 C260.848,959.033 259.967,958.152 259.967,957.065 L260,937 C260,935.913 260.914,935 262,935 L273,935 L273,933 L262,933 C259.827,933 258,935.221 258,937.394 L258,957.065 C258,959.238 259.762,961 261.935,961 L281.606,961 C283.779,961 286,959.173 286,957 L286,946 L284,946 L284,946 Z" class="Fill-59"></path>' +
		'</g>' +
		'</g>' +
		'</svg>',
	
	filter_mplayer: '<svg class="mgPlayerJSTest_position-center mgPlayerJSTest_width-height-100" width="32" height="32" viewBox="0 0 32 32" fill="none">' +
		'<rect class="mgPlayerJSTest_icon-bg" width="32" height="32" rx="4" />' +
		'<path d="M6.57328 10.28H7.99995C8.20163 10.8289 8.61116 11.2764 9.14005 11.5259C9.66895 11.7753 10.2748 11.8068 10.8266 11.6133C11.1338 11.5038 11.4128 11.3273 11.6434 11.0967C11.874 10.8661 12.0504 10.5871 12.1599 10.28H25.3733C25.5726 10.28 25.7639 10.2018 25.906 10.0621C26.0482 9.92244 26.1298 9.73254 26.1333 9.53329C26.1299 9.3328 26.0487 9.14148 25.9069 8.99968C25.7651 8.85789 25.5738 8.77672 25.3733 8.77329H12.2266C12.131 8.48997 11.9796 8.22867 11.7813 8.0048C11.5831 7.78092 11.3421 7.599 11.0724 7.46976C10.8027 7.34053 10.5099 7.26659 10.2112 7.25231C9.91256 7.23803 9.61404 7.2837 9.33328 7.38663C9.02836 7.50015 8.75146 7.678 8.52139 7.90807C8.29132 8.13814 8.11347 8.41504 7.99995 8.71996H6.57328C6.37404 8.72346 6.18414 8.80507 6.04448 8.94722C5.90482 9.08937 5.82658 9.28068 5.82661 9.47996C5.81928 9.58241 5.83316 9.68526 5.86738 9.7821C5.9016 9.87894 5.95544 9.96768 6.02552 10.0428C6.0956 10.1178 6.18042 10.1777 6.27467 10.2185C6.36892 10.2593 6.47057 10.2802 6.57328 10.28ZM10.1066 8.77329C10.3071 8.77672 10.4984 8.85789 10.6402 8.99968C10.782 9.14148 10.8632 9.3328 10.8666 9.53329C10.8631 9.73254 10.7815 9.92244 10.6394 10.0621C10.4972 10.2018 10.3059 10.28 10.1066 10.28C10.0063 10.2835 9.90637 10.2669 9.81268 10.231C9.71899 10.195 9.6335 10.1406 9.56132 10.0709C9.48913 10.0012 9.43174 9.9177 9.39256 9.82533C9.35338 9.73295 9.33322 9.63363 9.33328 9.53329C9.33327 9.43236 9.35336 9.33243 9.39238 9.23934C9.43141 9.14625 9.48858 9.06187 9.56057 8.99112C9.63256 8.92037 9.71793 8.86467 9.81168 8.82727C9.90543 8.78987 10.0057 8.77152 10.1066 8.77329ZM25.4266 15.2533H23.9999C23.8012 14.7022 23.392 14.2524 22.8622 14.0025C22.3323 13.7525 21.725 13.7229 21.1733 13.92C20.8652 14.0278 20.5853 14.2037 20.3545 14.4345C20.1237 14.6653 19.9478 14.9452 19.8399 15.2533H6.57328C6.37525 15.2533 6.18534 15.332 6.04531 15.472C5.90528 15.612 5.82661 15.8019 5.82661 16C5.82661 16.198 5.90528 16.3879 6.04531 16.5279C6.18534 16.668 6.37525 16.7466 6.57328 16.7466H19.7866C19.937 17.1859 20.2209 17.5672 20.5986 17.8371C20.9763 18.1071 21.429 18.2522 21.8933 18.2522C22.3576 18.2522 22.8102 18.1071 23.188 17.8371C23.5657 17.5672 23.8496 17.1859 23.9999 16.7466H25.4266C25.6246 16.7466 25.8146 16.668 25.9546 16.5279C26.0946 16.3879 26.1733 16.198 26.1733 16C26.1733 15.8019 26.0946 15.612 25.9546 15.472C25.8146 15.332 25.6246 15.2533 25.4266 15.2533ZM21.8933 16.7466C21.6953 16.7466 21.5053 16.668 21.3653 16.5279C21.2253 16.3879 21.1466 16.198 21.1466 16C21.1466 15.8019 21.2253 15.612 21.3653 15.472C21.5053 15.332 21.6953 15.2533 21.8933 15.2533C22.0913 15.2533 22.2812 15.332 22.4213 15.472C22.5613 15.612 22.6399 15.8019 22.6399 16C22.6399 16.198 22.5613 16.3879 22.4213 16.5279C22.2812 16.668 22.0913 16.7466 21.8933 16.7466ZM25.4266 21.72H15.2266C15.0728 21.2822 14.7869 20.9031 14.4083 20.6348C14.0298 20.3666 13.5772 20.2225 13.1133 20.2225C12.6493 20.2225 12.1968 20.3666 11.8182 20.6348C11.4397 20.9031 11.1538 21.2822 10.9999 21.72H6.57328C6.37525 21.72 6.18534 21.7986 6.04531 21.9387C5.90528 22.0787 5.82661 22.2686 5.82661 22.4666C5.82661 22.6647 5.90528 22.8546 6.04531 22.9946C6.18534 23.1346 6.37525 23.2133 6.57328 23.2133H10.9999C11.1436 23.6591 11.4249 24.0478 11.8035 24.3235C12.182 24.5992 12.6383 24.7478 13.1066 24.7478C13.5749 24.7478 14.0312 24.5992 14.4098 24.3235C14.7883 24.0478 15.0696 23.6591 15.2133 23.2133H25.4266C25.6246 23.2133 25.8146 23.1346 25.9546 22.9946C26.0946 22.8546 26.1733 22.6647 26.1733 22.4666C26.1733 22.2686 26.0946 22.0787 25.9546 21.9387C25.8146 21.7986 25.6246 21.72 25.4266 21.72ZM13.1066 23.2133C12.9086 23.2133 12.7187 23.1346 12.5786 22.9946C12.4386 22.8546 12.3599 22.6647 12.3599 22.4666C12.3599 22.2686 12.4386 22.0787 12.5786 21.9387C12.7187 21.7986 12.9086 21.72 13.1066 21.72C13.3059 21.7199 13.4972 21.7982 13.6394 21.9378C13.7815 22.0775 13.8631 22.2674 13.8666 22.4666C13.8631 22.6659 13.7815 22.8558 13.6394 22.9954C13.4972 23.1351 13.3059 23.2133 13.1066 23.2133Z" fill="#555555"/>' +
		'</svg>',	

	replay_guide: '<svg class="mgPlayerJSTest_position-center mgPlayerJSTest_width-height-100" viewBox="0 0 423.73 390">' +
		'<g id="Layer_2" data-name="Layer 2">' +
		'<g id="transport">' +
		'<path d="M228.73,0C126.33,0,42.11,79.35,34.32,179.79H8.4a8.38,8.38,0,0,0-7,13l37.91,56.86a8.38,8.38,0,0,0,14,0l37.91-56.86a8.38,8.38,0,0,0-7-13H54.4C62.14,90.39,137.37,20,228.73,20c96.5,0,175,78.5,175,175s-78.5,175-175,175a174.75,174.75,0,0,1-133.9-62.32,10,10,0,1,0-15.3,12.88A194.71,194.71,0,0,0,228.73,390c107.53,0,195-87.48,195-195S336.26,0,228.73,0Z" />' +
		'<path d="M205.82,259.06,292,201.58a8.38,8.38,0,0,0,0-14l-86.22-57.48a8.38,8.38,0,0,0-13,7v115A8.38,8.38,0,0,0,205.82,259.06Z" />' +
		'</g>' +
		'</g>' +
		'</svg>',
	
	resume_guide: '<svg class="mgPlayerJSTest_position-center mgPlayerJSTest_width-height-100" overflow="visible" preserveAspectRatio="none" viewBox="0 0 9.890675 10.000010000000001" width="9.890675" height="10.000010000000001">' +
		'<g transform="translate(0, 0)">' +
		'<g transform="translate(0, 0) rotate(0)">' +
		'<path d="M0.81549,0c-0.45038,0 -0.81549,0.36511 -0.81549,0.81549v8.36903c0,0.45038 0.36511,0.81549 0.81549,0.81549v0c0.45038,0 0.81549,-0.36511 0.81549,-0.81549v-8.36903c0,-0.45038 -0.36511,-0.81549 -0.81549,-0.81549zM4.82496,1.06482c-0.86323,-0.58808 -1.56302,-0.21807 -1.56302,0.82644v6.21747c0,1.04452 0.69979,1.41453 1.56302,0.82644l4.56323,-3.10874c0.66998,-0.45643 0.66998,-1.19645 0,-1.65289z" vector-effect="non-scaling-stroke" />' +
		'</g>' +
		'<defs>' +
		'<path id="path-1665396819818175" d="M0.81549,0c-0.45038,0 -0.81549,0.36511 -0.81549,0.81549v8.36903c0,0.45038 0.36511,0.81549 0.81549,0.81549v0c0.45038,0 0.81549,-0.36511 0.81549,-0.81549v-8.36903c0,-0.45038 -0.36511,-0.81549 -0.81549,-0.81549zM4.82496,1.06482c-0.86323,-0.58808 -1.56302,-0.21807 -1.56302,0.82644v6.21747c0,1.04452 0.69979,1.41453 1.56302,0.82644l4.56323,-3.10874c0.66998,-0.45643 0.66998,-1.19645 0,-1.65289z" vector-effect="non-scaling-stroke" />' +
		'</defs>' +
		'</g>' +
		'</svg>',
		
	guide_bot_icon: '<svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">' +
		'<rect x="0.7" y="0.7" width="38.6" height="38.6" rx="19.3" fill="#F8F8FB" stroke="#ACADC1" stroke-width="1.4"></rect>' +
		'<path d="M18.034 24.483H17.9981L17.9704 24.5059L16.2745 25.9068V24.583V24.483H16.1745H14.234C13.3191 24.483 12.5553 23.7192 12.5553 22.8043V14.234C12.5553 13.3133 13.3247 12.4745 14.234 12.4745H22.7234C23.6355 12.4745 24.4021 13.2353 24.4021 14.234V15.8511V15.9511H24.5021H25.8766H25.9766V15.8511V14.234C25.9766 12.4001 24.4765 10.9 22.6426 10.9H14.234C12.4001 10.9 10.9 12.4001 10.9 14.234V22.7234C10.9 24.5557 12.399 26.0588 14.2363 25.9766H14.7V28.8681V29.0733L14.8616 28.9468L16.7212 27.4915L18.5536 26.0574H19.2468H19.3945L19.3397 25.9203C19.1823 25.5269 19.1043 25.1353 19.1043 24.7447V24.583V24.483H19.0043H18.9234H18.034Z" fill="#ACADC1" stroke="#ACADC1" stroke-width="0.2"/>' +
		'<path d="M27.8168 16.7404H21.9955C20.7827 16.7404 19.8125 17.7106 19.8125 18.9234V24.7447C19.8125 25.9574 20.7827 26.9277 21.9955 26.9277H24.9061L26.1189 27.8979L27.4125 28.9489V26.9277H27.8168C29.0295 26.9277 29.9997 25.9574 29.9997 24.7447V18.9234C29.9189 17.7106 28.9487 16.7404 27.8168 16.7404Z" fill="#ACADC1"/>' +
		'</svg>',

	guide_onboarding: '<svg width="40" height="40" viewBox="0 0 40 40" fill="none">' +
		'<rect x="0.7" y="0.7" width="38.6" height="38.6" rx="19.3" fill="#F8F8FB" stroke="#ACADC1" stroke-width="1.4" />' +
		'<path d="M28.1938 12.9166C27.8336 12.7648 26.0037 11.9831 24.0812 12.0003C21.9125 12.0453 20.4312 12.8737 20 13.1451C19.5688 12.8737 18.0875 12.0453 15.9187 12.0024C14.0544 11.9684 12.1531 12.7723 11.8063 12.9187C11.325 13.1237 11 13.6593 11 14.2592V25.9072C11 26.6535 11.6312 27.2241 12.2887 26.9942C13.3156 26.6306 14.2787 26.4916 15.1519 26.4916C17.9612 26.4916 19.8331 27.9306 19.8575 27.9492C19.9461 28.0177 20.0557 28.0162 20.1417 27.9492C20.1662 27.9301 22.0379 26.4916 24.8473 26.4916C25.7204 26.4916 26.6836 26.6306 27.7104 26.9942C28.3188 27.2284 29 26.6499 29 25.9072V14.2592C29 13.6593 28.675 13.1237 28.1938 12.9166ZM19.5 26.4428C18.5981 25.9605 17.0963 25.348 15.1525 25.348C14.0938 25.348 13.0306 25.5343 12 25.9063V14.2592C12 14.1386 12.0629 14.0281 12.1538 13.9899C13.4688 13.4379 14.75 13.1451 15.9062 13.1451C17.825 13.1808 19.1313 13.9021 19.5 14.1378V26.4428ZM28 25.9072C26.9694 25.5352 25.9069 25.3489 24.8475 25.3489C22.9031 25.3489 21.4012 25.9613 20.5 26.4437V14.1378C20.8687 13.9021 22.175 13.1808 24.0938 13.1451C25.2463 13.1451 26.5325 13.4375 27.8444 13.9907C27.8813 14.0306 28 14.1378 28 14.2592V25.9072Z" fill="#ACADC1" stroke-width="0.2" />' +
		'</svg>',

	guide_beacon: '<svg width="12px" height="12px" viewBox="0 0 12 12" version="1.1"  >' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="02-Guide-list-along-with-beacon_sample-2" transform="translate(-407.000000, -242.000000)">' +
		'<g class="Group" transform="translate(408.000000, 243.000000)">' +
		'<circle class="combined-shape" fill="#9476c9" cx="5" cy="5" r="4.375"></circle>' +
		'<circle class="Oval" stroke="#FFFFFF" stroke-width="2" cx="5" cy="5" r="5"></circle>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',

	play_teachme: '<svg class="mgPlayerJSTest_position-center mgPlayerJSTest_width-height-100" viewBox="0 0 17 17" version="1.1">' +
		'<g fill="#005BF0">' +
		'<path d="M2 3C2 3.39556 2.1173 3.78224 2.33706 4.11114C2.55683 4.44004 2.86918 4.69638 3.23463 4.84776C3.60009 4.99914 4.00222 5.03874 4.39018 4.96157C4.77814 4.8844 5.13451 4.69392 5.41421 4.41421C5.69392 4.13451 5.8844 3.77814 5.96157 3.39018C6.03874 3.00222 5.99914 2.60009 5.84776 2.23463C5.69638 1.86918 5.44004 1.55683 5.11114 1.33706C4.78225 1.1173 4.39556 1 4 1C3.46971 1.00045 2.96126 1.2113 2.58628 1.58628C2.21131 1.96125 2.00045 2.46971 2 3ZM5.15541 3C5.15541 3.22852 5.08764 3.4519 4.96069 3.64191C4.83373 3.83191 4.65328 3.98001 4.44216 4.06746C4.23103 4.15491 3.99872 4.17778 3.77459 4.13321C3.55046 4.08863 3.34459 3.97858 3.18301 3.817C3.02142 3.65541 2.91138 3.44954 2.8668 3.22541C2.82222 3.00128 2.8451 2.76897 2.93255 2.55785C3.02 2.34672 3.16809 2.16627 3.35809 2.03931C3.5481 1.91236 3.77148 1.84459 4 1.84459C4.30629 1.84504 4.59992 1.96692 4.8165 2.1835C5.03308 2.40008 5.15496 2.69371 5.15541 3Z" fill="#005BF0" />' +
		'<path d="M2 3C2 3.39556 2.1173 3.78224 2.33706 4.11114C2.55683 4.44004 2.86918 4.69638 3.23463 4.84776C3.60009 4.99914 4.00222 5.03874 4.39018 4.96157C4.77814 4.8844 5.13451 4.69392 5.41421 4.41421C5.69392 4.13451 5.8844 3.77814 5.96157 3.39018C6.03874 3.00222 5.99914 2.60009 5.84776 2.23463C5.69638 1.86918 5.44004 1.55683 5.11114 1.33706C4.78225 1.1173 4.39556 1 4 1C3.46971 1.00045 2.96126 1.2113 2.58628 1.58628C2.21131 1.96125 2.00045 2.46971 2 3ZM5.15541 3C5.15541 3.22852 5.08764 3.4519 4.96069 3.64191C4.83373 3.83191 4.65328 3.98001 4.44216 4.06746C4.23103 4.15491 3.99872 4.17778 3.77459 4.13321C3.55046 4.08863 3.34459 3.97858 3.18301 3.817C3.02142 3.65541 2.91138 3.44954 2.8668 3.22541C2.82222 3.00128 2.8451 2.76897 2.93255 2.55785C3.02 2.34672 3.16809 2.16627 3.35809 2.03931C3.5481 1.91236 3.77148 1.84459 4 1.84459C4.30629 1.84504 4.59992 1.96692 4.8165 2.1835C5.03308 2.40008 5.15496 2.69371 5.15541 3Z" stroke="#005BF0" stroke-width="0.2" />' +
		'<path d="M1.35428 9.68552C1.37787 9.91784 1.45201 10.1407 1.57056 10.3356C1.6891 10.5306 1.84865 10.692 2.03598 10.8066L2.58986 15.214C2.61253 15.4302 2.70756 15.6298 2.85684 15.7748C3.00613 15.9197 3.19924 15.9999 3.39938 16H4.31968C4.52004 15.9998 4.71333 15.9195 4.86265 15.7742C5.01196 15.6289 5.10686 15.4289 5.12919 15.2124L5.40187 12.5115L5.94439 8.00227L6.55222 8.5474C6.72459 8.70216 6.94046 8.78807 7.16396 8.79087C7.38746 8.79368 7.60512 8.7132 7.7807 8.56284L9.61277 6.99232C9.80497 6.83121 9.93637 6.59922 9.98213 6.3401C10.0279 6.08096 9.98497 5.81257 9.8613 5.5855C9.78924 5.45726 9.69293 5.34708 9.57884 5.26224C9.46475 5.17739 9.33541 5.11979 9.19933 5.09324C9.06331 5.06668 8.9236 5.07178 8.78947 5.10818C8.65534 5.14458 8.52983 5.21147 8.42121 5.30444L7.18847 6.36072L5.94439 5.24421C5.7693 5.08697 5.54943 5.00072 5.32234 5.00022H4.75426C4.69118 4.99808 4.62849 5.01156 4.57091 5.03966C4.51334 5.06775 4.46239 5.10971 4.42193 5.16237L3.85385 5.92523L3.29997 5.17009C3.26139 5.11692 3.21218 5.07399 3.15608 5.04455C3.09998 5.01512 3.03845 4.99996 2.97616 5.00022H2.54016C2.32264 5.00034 2.10761 5.05053 1.90922 5.14749C1.71082 5.24445 1.53355 5.38598 1.38907 5.56278C1.24458 5.73958 1.13616 5.94763 1.07093 6.17326C1.00569 6.39889 0.985132 6.63697 1.01059 6.87187L1.35428 9.68552ZM1.92237 6.07503C1.99938 5.97815 2.09467 5.90043 2.20176 5.84714C2.30885 5.79385 2.42523 5.76623 2.543 5.76617H2.83556L3.47181 6.62942C3.5185 6.69314 3.5778 6.74456 3.64529 6.7799C3.71279 6.81531 3.78674 6.83367 3.86166 6.83367C3.93658 6.83367 4.01053 6.81531 4.07803 6.7799C4.14552 6.74456 4.20481 6.69314 4.25151 6.62942L4.88918 5.76463H5.32376C5.38599 5.76425 5.44635 5.78777 5.49419 5.83103L6.96408 7.15447C7.02725 7.20989 7.10594 7.24009 7.18705 7.24009C7.26822 7.24009 7.34691 7.20989 7.41003 7.15447L8.86858 5.90516C8.91592 5.86468 8.97452 5.8429 9.03474 5.84339C9.08098 5.84343 9.12637 5.85638 9.16667 5.88099C9.20696 5.90559 9.24078 5.94103 9.26482 5.98392C9.29753 6.04987 9.307 6.12649 9.29159 6.19949C9.27618 6.27251 9.23689 6.33694 9.18103 6.38079L7.34044 7.95594C7.29236 7.99661 7.23313 8.01874 7.17217 8.01874C7.1112 8.01874 7.05198 7.99661 7.00385 7.95594L5.90179 6.96607C5.85291 6.9222 5.79413 6.89332 5.73154 6.88251C5.66895 6.8717 5.60483 6.87925 5.54585 6.90447C5.48686 6.9297 5.43516 6.97162 5.39611 7.0259C5.35705 7.08018 5.33207 7.14481 5.32376 7.21315L4.69177 12.4204L4.42477 15.1275C4.42198 15.1553 4.40989 15.1811 4.39077 15.1999C4.37166 15.2187 4.34686 15.2292 4.3211 15.2294H3.39938C3.37244 15.2287 3.34671 15.2171 3.32726 15.1968C3.30782 15.1765 3.29605 15.149 3.29429 15.1198L2.71342 10.4947C2.70455 10.4256 2.67861 10.3603 2.63835 10.3059C2.59808 10.2515 2.545 10.21 2.48477 10.1859C2.36972 10.1404 2.26874 10.0608 2.19339 9.95593C2.11804 9.85104 2.07137 9.72521 2.05871 9.59286L1.70934 6.77767C1.69619 6.65064 1.70827 6.52206 1.74478 6.40057C1.78129 6.27909 1.84136 6.16755 1.92095 6.07348L1.92237 6.07503Z" fill="#005BF0" />' +
		'<path d="M1.35428 9.68552C1.37787 9.91784 1.45201 10.1407 1.57056 10.3356C1.6891 10.5306 1.84865 10.692 2.03598 10.8066L2.58986 15.214C2.61253 15.4302 2.70756 15.6298 2.85684 15.7748C3.00613 15.9197 3.19924 15.9999 3.39938 16H4.31968C4.52004 15.9998 4.71333 15.9195 4.86265 15.7742C5.01196 15.6289 5.10686 15.4289 5.12919 15.2124L5.40187 12.5115L5.94439 8.00227L6.55222 8.5474C6.72459 8.70216 6.94046 8.78807 7.16396 8.79087C7.38746 8.79368 7.60512 8.7132 7.7807 8.56284L9.61277 6.99232C9.80497 6.83121 9.93637 6.59922 9.98213 6.3401C10.0279 6.08096 9.98497 5.81257 9.8613 5.5855C9.78924 5.45726 9.69293 5.34708 9.57884 5.26224C9.46475 5.17739 9.33541 5.11979 9.19933 5.09324C9.06331 5.06668 8.9236 5.07178 8.78947 5.10818C8.65534 5.14458 8.52983 5.21147 8.42121 5.30444L7.18847 6.36072L5.94439 5.24421C5.7693 5.08697 5.54943 5.00072 5.32234 5.00022H4.75426C4.69118 4.99808 4.62849 5.01156 4.57091 5.03966C4.51334 5.06775 4.46239 5.10971 4.42193 5.16237L3.85385 5.92523L3.29997 5.17009C3.26139 5.11692 3.21218 5.07399 3.15608 5.04455C3.09998 5.01512 3.03845 4.99996 2.97616 5.00022H2.54016C2.32264 5.00034 2.10761 5.05053 1.90922 5.14749C1.71082 5.24445 1.53355 5.38598 1.38907 5.56278C1.24458 5.73958 1.13616 5.94763 1.07093 6.17326C1.00569 6.39889 0.985132 6.63697 1.01059 6.87187L1.35428 9.68552ZM1.92237 6.07503C1.99938 5.97815 2.09467 5.90043 2.20176 5.84714C2.30885 5.79385 2.42523 5.76623 2.543 5.76617H2.83556L3.47181 6.62942C3.5185 6.69314 3.5778 6.74456 3.64529 6.7799C3.71279 6.81531 3.78674 6.83367 3.86166 6.83367C3.93658 6.83367 4.01053 6.81531 4.07803 6.7799C4.14552 6.74456 4.20481 6.69314 4.25151 6.62942L4.88918 5.76463H5.32376C5.38599 5.76425 5.44635 5.78777 5.49419 5.83103L6.96408 7.15447C7.02725 7.20989 7.10594 7.24009 7.18705 7.24009C7.26822 7.24009 7.34691 7.20989 7.41003 7.15447L8.86858 5.90516C8.91592 5.86468 8.97452 5.8429 9.03474 5.84339C9.08098 5.84343 9.12637 5.85638 9.16667 5.88099C9.20696 5.90559 9.24078 5.94103 9.26482 5.98392C9.29753 6.04987 9.307 6.12649 9.29159 6.19949C9.27618 6.27251 9.23689 6.33694 9.18103 6.38079L7.34044 7.95594C7.29236 7.99661 7.23313 8.01874 7.17217 8.01874C7.1112 8.01874 7.05198 7.99661 7.00385 7.95594L5.90179 6.96607C5.85291 6.9222 5.79413 6.89332 5.73154 6.88251C5.66895 6.8717 5.60483 6.87925 5.54585 6.90447C5.48686 6.9297 5.43516 6.97162 5.39611 7.0259C5.35705 7.08018 5.33207 7.14481 5.32376 7.21315L4.69177 12.4204L4.42477 15.1275C4.42198 15.1553 4.40989 15.1811 4.39077 15.1999C4.37166 15.2187 4.34686 15.2292 4.3211 15.2294H3.39938C3.37244 15.2287 3.34671 15.2171 3.32726 15.1968C3.30782 15.1765 3.29605 15.149 3.29429 15.1198L2.71342 10.4947C2.70455 10.4256 2.67861 10.3603 2.63835 10.3059C2.59808 10.2515 2.545 10.21 2.48477 10.1859C2.36972 10.1404 2.26874 10.0608 2.19339 9.95593C2.11804 9.85104 2.07137 9.72521 2.05871 9.59286L1.70934 6.77767C1.69619 6.65064 1.70827 6.52206 1.74478 6.40057C1.78129 6.27909 1.84136 6.16755 1.92095 6.07348L1.92237 6.07503Z" stroke="#005BF0" stroke-width="0.2" />' +
		'<path d="M7 2.35418V4.9043C7 4.99823 7.03947 5.08832 7.10976 5.15474C7.18005 5.22116 7.27537 5.25848 7.37475 5.25848C7.47413 5.25848 7.56945 5.22116 7.63974 5.15474C7.71003 5.08832 7.7495 4.99823 7.7495 4.9043V2.70695H15.2565V9.6617H7.37475C7.27537 9.6617 7.18005 9.699 7.10976 9.76543C7.03947 9.83186 7 9.9219 7 10.0159C7 10.1098 7.03947 10.1999 7.10976 10.2663C7.18005 10.3328 7.27537 10.3701 7.37475 10.3701H11.1223V12.7275H8.78081C8.68116 12.7275 8.58339 12.7532 8.49806 12.8019C8.41272 12.8506 8.34305 12.9204 8.29664 13.0038L7.46169 14.48C7.43865 14.5211 7.42444 14.5661 7.41978 14.6124C7.41517 14.6587 7.42022 14.7055 7.43471 14.7499C7.4492 14.7944 7.4728 14.8357 7.50416 14.8716C7.53553 14.9074 7.57412 14.9371 7.61759 14.9589C7.66111 14.9806 7.70869 14.9941 7.75772 14.9984C7.80674 15.0028 7.85615 14.998 7.90323 14.9844C7.95026 14.9707 7.994 14.9484 8.03192 14.9187C8.06984 14.889 8.10121 14.8526 8.12425 14.8115L8.89474 13.4373H14.1038L14.8742 14.8115C14.8973 14.8526 14.9287 14.889 14.9666 14.9187C15.0045 14.9484 15.0482 14.9707 15.0953 14.9844C15.1423 14.998 15.1918 15.0028 15.2408 14.9984C15.2898 14.9941 15.3374 14.9806 15.3809 14.9589C15.4244 14.9371 15.463 14.9074 15.4943 14.8716C15.5257 14.8357 15.5493 14.7944 15.5638 14.7499C15.5783 14.7055 15.5833 14.6587 15.5787 14.6124C15.5741 14.5661 15.5598 14.5211 15.5368 14.48L14.7094 13.0038C14.6629 12.9204 14.5933 12.8506 14.508 12.8019C14.4227 12.7532 14.3248 12.7275 14.2252 12.7275H11.8777V10.3701H15.6252C15.7246 10.3701 15.82 10.3328 15.8902 10.2663C15.9605 10.1999 16 10.1098 16 10.0159V2.35418C16 2.26025 15.9605 2.17016 15.8902 2.10374C15.82 2.03732 15.7246 2 15.6252 2H7.37475C7.27537 2 7.18005 2.03732 7.10976 2.10374C7.03947 2.17016 7 2.26025 7 2.35418Z" fill="#005BF0" />' +
		'<path d="M7 2.35418V4.9043C7 4.99823 7.03947 5.08832 7.10976 5.15474C7.18005 5.22116 7.27537 5.25848 7.37475 5.25848C7.47413 5.25848 7.56945 5.22116 7.63974 5.15474C7.71003 5.08832 7.7495 4.99823 7.7495 4.9043V2.70695H15.2565V9.6617H7.37475C7.27537 9.6617 7.18005 9.699 7.10976 9.76543C7.03947 9.83186 7 9.9219 7 10.0159C7 10.1098 7.03947 10.1999 7.10976 10.2663C7.18005 10.3328 7.27537 10.3701 7.37475 10.3701H11.1223V12.7275H8.78081C8.68116 12.7275 8.58339 12.7532 8.49806 12.8019C8.41272 12.8506 8.34305 12.9204 8.29664 13.0038L7.46169 14.48C7.43865 14.5211 7.42444 14.5661 7.41978 14.6124C7.41517 14.6587 7.42022 14.7055 7.43471 14.7499C7.4492 14.7944 7.4728 14.8357 7.50416 14.8716C7.53553 14.9074 7.57412 14.9371 7.61759 14.9589C7.66111 14.9806 7.70869 14.9941 7.75772 14.9984C7.80674 15.0028 7.85615 14.998 7.90323 14.9844C7.95026 14.9707 7.994 14.9484 8.03192 14.9187C8.06984 14.889 8.10121 14.8526 8.12425 14.8115L8.89474 13.4373H14.1038L14.8742 14.8115C14.8973 14.8526 14.9287 14.889 14.9666 14.9187C15.0045 14.9484 15.0482 14.9707 15.0953 14.9844C15.1423 14.998 15.1918 15.0028 15.2408 14.9984C15.2898 14.9941 15.3374 14.9806 15.3809 14.9589C15.4244 14.9371 15.463 14.9074 15.4943 14.8716C15.5257 14.8357 15.5493 14.7944 15.5638 14.7499C15.5783 14.7055 15.5833 14.6587 15.5787 14.6124C15.5741 14.5661 15.5598 14.5211 15.5368 14.48L14.7094 13.0038C14.6629 12.9204 14.5933 12.8506 14.508 12.8019C14.4227 12.7532 14.3248 12.7275 14.2252 12.7275H11.8777V10.3701H15.6252C15.7246 10.3701 15.82 10.3328 15.8902 10.2663C15.9605 10.1999 16 10.1098 16 10.0159V2.35418C16 2.26025 15.9605 2.17016 15.8902 2.10374C15.82 2.03732 15.7246 2 15.6252 2H7.37475C7.27537 2 7.18005 2.03732 7.10976 2.10374C7.03947 2.17016 7 2.26025 7 2.35418Z" stroke="#005BF0" stroke-width="0.2" />' +
		'</g>' +
		'</svg>',

	play_testme: '<svg class="mgPlayerJSTest_position-center mgPlayerJSTest_width-height-100" viewBox="0 0 20 26" fill="none">' +
		'<path d="M1.54651 21.1221V5.72034H3.75581V6.61319C3.75581 7.05962 4.08721 7.39444 4.52907 7.39444H12.0407C12.4826 7.39444 12.814 7.05962 12.814 6.61319V5.72034H15.0233V12.0819V14.3141H16.5698V12.64V5.05069C16.5698 4.60426 16.2384 4.26944 15.7965 4.26944H12.814V3.37659C12.814 2.93016 12.4826 2.59534 12.0407 2.59534H11.157C10.936 0.921228 9.5 -0.194843 7.84302 0.0283712C6.51744 0.139978 5.52326 1.25605 5.30232 2.59534H4.52907C4.08721 2.59534 3.75581 2.93016 3.75581 3.37659V4.26944H0.773256C0.331395 4.26944 0 4.60426 0 5.05069V21.9034C0 22.3498 0.331395 22.6846 0.773256 22.6846H9.38953V21.1221H6.73837H1.54651ZM8.28488 1.47926C8.94767 1.47926 9.5 1.92569 9.72093 2.59534H6.84884C6.9593 1.92569 7.62209 1.47926 8.28488 1.47926ZM5.19186 4.15784H11.2674V5.83194H5.19186V4.15784Z" fill="#005BF0" />' +
		'<circle cx="12.5" cy="18.5" r="6.7" fill="white" stroke="#005BF0" stroke-width="1.6" />' +
		'<path d="M11.6804 20.9037C11.6136 20.9655 11.5224 21 11.4277 21C11.333 21 11.2419 20.9655 11.1751 20.9037L9.15707 19.047C8.94764 18.8544 8.94764 18.542 9.15707 18.3497L9.40975 18.1172C9.61924 17.9246 9.95844 17.9246 10.1679 18.1172L11.4277 19.2762L14.8321 16.1445C15.0416 15.9518 15.3812 15.9518 15.5902 16.1445L15.8429 16.377C16.0524 16.5696 16.0524 16.882 15.8429 17.0743L11.6804 20.9037Z" fill="#005BF0" />' +
		'</svg>',

	play_showme: '<svg class="mgPlayerJSTest_position-center mgPlayerJSTest_width-height-100"  viewBox="0 0 20 20">' +
		'<path class="mgPlayerJSTest_showme-path" fill="#005BF0" fill-rule="nonzero" d="M4.305 7.133a3.81 3.81 0 1 1 .095 7.619 3.81 3.81 0 0 1-.095-7.619zm0 6.667v.029a2.857 2.857 0 0 0 2.857-2.886A2.857 2.857 0 1 0 4.305 13.8zm11.39-6.667a3.857 3.857 0 0 1 3.81 3.81 3.81 3.81 0 1 1-3.81-3.81zm0 6.667v.029a2.857 2.857 0 0 0 2.857-2.886 2.857 2.857 0 1 0-2.857 2.857zM10 8.638a.838.838 0 1 1 0-1.676.838.838 0 0 1 0 1.676zm3.429-1.152A4.162 4.162 0 0 0 11.505 11c0 .512.098 1.02.285 1.495a2.181 2.181 0 0 0-3.58 0 4.143 4.143 0 0 0-1.639-5.01h1.277a2.181 2.181 0 0 1 4.304 0h1.277zM10 8.97c.61-.05 1.078-.56 1.076-1.171v-.095a.162.162 0 0 1 0-.067v-.076-.076a1.171 1.171 0 0 0-2.247 0v.152a.162.162 0 0 1 0 .067V7.8c0 .647.524 1.171 1.171 1.171z"/>' +
		'</svg>',

	default_guide: '<svg width="40" height="40" viewBox="0 0 40 40" fill="none">' +
		'<rect x="0.7" y="0.7" width="38.6" height="38.6" rx="19.3" fill="#F8F8FB" stroke="#ACADC1" stroke-width="1.4"></rect>' +
		'<path d="M12 27.555C12 27.555 20.838 24.372 22.606 22.606C24.374 20.838 27.555 12 27.555 12C27.555 12 18.717 15.183 16.95 16.95C15.183 18.717 12 27.555 12 27.555ZM18.364 18.364L21.192 21.192C21.899 21.899 14.829 24.727 14.829 24.727C14.829 24.727 17.657 17.657 18.364 18.364Z" fill="#ACADC1" stroke="#ACADC1" stroke-width="0" />' +
		'</svg>',

	bell: '<svg class="mgPlayerJSTest_position-center mgPlayerJSTest_width-height-100" width="18" height="21" viewBox="0 0 18 21" fill="none">' +
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M14.868 17.08H3.34796V8.44001C3.34796 6.91236 3.95481 5.44728 5.03502 4.36707C6.11523 3.28686 7.58031 2.68001 9.10796 2.68001C10.6356 2.68001 12.1007 3.28686 13.1809 4.36707C14.2611 5.44728 14.868 6.91236 14.868 8.44001V17.08ZM16.788 17.08V8.44001C16.788 6.40315 15.9788 4.44971 14.5385 3.00943C13.0983 1.56915 11.1448 0.76001 9.10796 0.76001C7.07109 0.76001 5.11766 1.56915 3.67738 3.00943C2.2371 4.44971 1.42796 6.40315 1.42796 8.44001V17.08C1.17335 17.08 0.929169 17.1812 0.749134 17.3612C0.569099 17.5412 0.467957 17.7854 0.467957 18.04C0.467957 18.2946 0.569099 18.5388 0.749134 18.7188C0.929169 18.8989 1.17335 19 1.42796 19H7.18796C7.18796 19.2521 7.23762 19.5018 7.33411 19.7348C7.4306 19.9677 7.57202 20.1794 7.75031 20.3577C7.9286 20.5359 8.14026 20.6774 8.3732 20.7739C8.60615 20.8703 8.85582 20.92 9.10796 20.92C9.3601 20.92 9.60976 20.8703 9.84271 20.7739C10.0757 20.6774 10.2873 20.5359 10.4656 20.3577C10.6439 20.1794 10.7853 19.9677 10.8818 19.7348C10.9783 19.5018 11.028 19.2521 11.028 19H16.788C17.0426 19 17.2867 18.8989 17.4668 18.7188C17.6468 18.5388 17.748 18.2946 17.748 18.04C17.748 17.7854 17.6468 17.5412 17.4668 17.3612C17.2867 17.1812 17.0426 17.08 16.788 17.08Z" fill="#555555"/>' +
		'</svg>',

	close_push: '<svg class="mgPlayerJSTest_position-center mgPlayerJSTest_width-height-100"  viewBox="0 0 15 15" fill="none">' +
		'<path d="M15 1.51071L13.4893 0L7.5 5.98929L1.51071 0L0 1.51071L5.98929 7.5L0 13.4893L1.51071 15L7.5 9.01071L13.4893 15L15 13.4893L9.01071 7.5L15 1.51071Z" fill="#757575" />' +
		'</svg>',

	oops: '<svg  width="35" height="48" viewBox="0 0 35 48" fill="none">' +
		'<path d="M17.0179 0C12.4536 0.0642491 8.10087 1.91699 4.9118 5.15292C1.72273 8.38885 -0.0430337 12.7445 0.00079691 17.2671C0.00079691 29.1103 15.2342 46.4688 15.88 47.2001C16.0195 47.3629 16.1931 47.4936 16.3887 47.5832C16.5843 47.6729 16.7972 47.7193 17.0127 47.7193C17.2283 47.7193 17.4412 47.6729 17.6368 47.5832C17.8324 47.4936 18.006 47.3629 18.1455 47.2001C18.7913 46.4688 34.0247 29.1103 34.0247 17.2773C34.0794 12.7523 32.3189 8.3909 29.13 5.15129C25.9411 1.91169 21.5847 0.0588995 17.0179 0V0Z" fill="#454560" />' +
		'<g clip-path="url(#clip0)">' +
		'<path d="M17.1345 5.96484C10.9851 5.96484 6 10.9499 6 17.0993C6 23.2488 10.9851 28.2339 17.1345 28.2339C23.2839 28.2339 28.269 23.2488 28.269 17.0993C28.269 10.9499 23.2839 5.96484 17.1345 5.96484ZM17.1345 26.842C11.7538 26.842 7.39181 22.4801 7.39181 17.0993C7.39181 11.7186 11.7538 7.35666 17.1345 7.35666C22.5153 7.35666 26.8772 11.7186 26.8772 17.0993C26.8772 22.4801 22.5153 26.842 17.1345 26.842Z" fill="#005BF0" />' +
		'<path d="M13.6545 15.0121C14.4232 15.0121 15.0463 14.389 15.0463 13.6203C15.0463 12.8517 14.4232 12.2285 13.6545 12.2285C12.8858 12.2285 12.2627 12.8517 12.2627 13.6203C12.2627 14.389 12.8858 15.0121 13.6545 15.0121Z" fill="#005BF0" />' +
		'<path d="M20.6145 15.0121C21.3831 15.0121 22.0063 14.389 22.0063 13.6203C22.0063 12.8517 21.3831 12.2285 20.6145 12.2285C19.8458 12.2285 19.2227 12.8517 19.2227 13.6203C19.2227 14.389 19.8458 15.0121 20.6145 15.0121Z" fill="#005BF0" />' +
		'<path d="M17.1343 16.4043C13.6752 16.4043 10.8711 19.2084 10.8711 22.6675H12.2629C12.2629 19.9771 14.4439 17.7961 17.1343 17.7961C19.8246 17.7961 22.0056 19.9771 22.0056 22.6675H23.3974C23.3974 19.2084 20.5933 16.4043 17.1343 16.4043Z" fill="#005BF0" />' +
		'</g>' +
		'<defs>' +
		'<clipPath class="clip0">' +
		'<rect x="6" y="5.96484" width="22.269" height="22.269" fill="white" />' +
		'</clipPath>' +
		'</defs>' +
		'</svg>',

	guideShowMe: '<svg width="40" height="40" viewBox="0 0 40 40" fill="none">' +
		'<rect x="0.7" y="0.7" width="38.6" height="38.6" rx="19.3" fill="#F8F8FB" stroke="#ACADC1" stroke-width="1.4"></rect>' +
		'<path d="M25.1375 15.9427H23.1482C22.5161 15.359 21.3251 15 19.9999 15C18.6747 15 17.4837 15.359 16.8516 15.9427H14.8623C12.1812 15.9427 10 18.1985 10 20.9713C10 23.7441 12.1812 26 14.8623 26C17.5434 26 19.7246 23.7441 19.7246 20.9713C19.7246 20.9346 19.7242 20.8979 19.7235 20.8611H20.2764C20.2756 20.8979 20.2753 20.9346 20.2753 20.9713C20.2753 23.7441 22.4566 26 25.1377 26C27.8188 26 30 23.7441 30 20.9713C29.9999 18.1985 27.8186 15.9427 25.1375 15.9427ZM14.8623 23.9552C13.2715 23.9552 11.9772 22.6166 11.9772 20.9713C11.9772 19.3261 13.2715 17.9875 14.8623 17.9875C16.4532 17.9875 17.7475 19.3261 17.7475 20.9713C17.7475 22.6166 16.4532 23.9552 14.8623 23.9552ZM21.3065 17.89H18.6926C18.3824 17.89 18.1303 17.6286 18.1303 17.3077C18.1303 16.9869 18.3824 16.7254 18.6926 16.7254H21.3065C21.6173 16.7254 21.8695 16.9869 21.8695 17.3077C21.8695 17.6285 21.6173 17.89 21.3065 17.89ZM25.1375 23.9552C23.5466 23.9552 22.2523 22.6166 22.2523 20.9713C22.2523 19.3261 23.5466 17.9875 25.1375 17.9875C26.7282 17.9875 28.0226 19.3261 28.0226 20.9713C28.0226 22.6166 26.7283 23.9552 25.1375 23.9552Z" fill="#ACADC1" stroke-width="0" />' +
		'</svg>',

	guideDoItForMe: '<svg width="40" height="40" viewBox="0 0 40 40" fill="none">' +
		'<rect x="0.7" y="0.7" width="38.6" height="38.6" rx="19.3" fill="#F8F8FB" stroke="#ACADC1" stroke-width="1.4"></rect>' +
		'<path d="M15.8441 24.4972C14.4834 24.4972 13.3803 25.652 13.3803 27.0765V29H14.6452V27.6678C14.6452 26.5993 15.4726 25.7332 16.4931 25.7332H23.5081C24.5287 25.7332 25.356 26.5993 25.356 27.6678V29H26.6211V27.0765C26.6211 25.652 25.518 24.4972 24.1573 24.4972H15.8441Z" fill="#ACADC1" stroke-width="0" />' +
		'<path d="M12 18.8136C12 18.1065 12.5475 17.5333 13.2229 17.5333H13.6867V20.0938H13.2229C12.5475 20.0938 12 19.5206 12 18.8136Z" fill="#ACADC1" stroke-width="0" />' +
		'<path d="M28 18.8136C28 18.1065 27.4525 17.5333 26.7771 17.5333H26.3133V20.0938H26.7771C27.4525 20.0938 28 19.5206 28 18.8136Z" fill="#ACADC1" stroke-width="0" />' +
		'<path d="M19.7887 18.8136C19.7887 19.5206 19.2412 20.0938 18.5659 20.0938C17.8905 20.0938 17.343 19.5206 17.343 18.8136C17.343 18.1065 17.8905 17.5333 18.5659 17.5333C19.2412 17.5333 19.7887 18.1065 19.7887 18.8136Z" fill="#ACADC1" stroke-width="0" />' +
		'<path d="M22.7414 18.8136C22.7414 19.5206 22.1939 20.0938 21.5186 20.0938C20.8432 20.0938 20.2957 19.5206 20.2957 18.8136C20.2957 18.1065 20.8432 17.5333 21.5186 17.5333C22.1939 17.5333 22.7414 18.1065 22.7414 18.8136Z" fill="#ACADC1" stroke-width="0" />' +
		'<path d="M19.494 13.1606C19.494 13.0894 19.5492 13.0317 19.6172 13.0317H20.7202C20.7882 13.0317 20.8434 13.0894 20.8434 13.1606V15.6804H19.494V13.1606Z" fill="#ACADC1" stroke-width="0" />' +
		'<path d="M18.4948 14.6198H17.279C15.9182 14.6198 14.8151 15.7746 14.8151 17.1992V20.5163C14.8151 21.9409 15.9182 23.0957 17.279 23.0957H22.7247C24.0855 23.0957 25.1886 21.9409 25.1886 20.5163V17.1992C25.1886 15.7746 24.0855 14.6198 22.7247 14.6198H21.8448V15.592H22.2026C23.2232 15.592 24.0505 16.4581 24.0505 17.5265V20.191C24.0505 21.2594 23.2232 22.1255 22.2026 22.1255H17.802C16.7815 22.1255 15.9541 21.2594 15.9541 20.191V17.5265C15.9541 16.4581 16.7815 15.592 17.802 15.592H18.4948V14.6198Z" fill="#ACADC1" stroke-width="0" />' +
		'<path d="M20.8434 11.7063C20.8434 12.0964 20.5413 12.4127 20.1687 12.4127C19.7961 12.4127 19.494 12.0964 19.494 11.7063C19.494 11.3162 19.7961 11 20.1687 11C20.5413 11 20.8434 11.3162 20.8434 11.7063Z" fill="#ACADC1" stroke-width="0" />' +
		'</svg>',

	guideTeachMe: '<svg width="40" height="40" viewBox="0 0 40 40" fill="none">' +
		'<rect x="0.7" y="0.7" width="38.6" height="38.6" rx="19.3" fill="#F8F8FB" stroke="#ACADC1" stroke-width="1.4"></rect>' +
		'<path d="M13 15C13 15.3956 13.1173 15.7822 13.3371 16.1111C13.5568 16.44 13.8692 16.6964 14.2346 16.8478C14.6001 16.9991 15.0022 17.0387 15.3902 16.9616C15.7781 16.8844 16.1345 16.6939 16.4142 16.4142C16.6939 16.1345 16.8844 15.7781 16.9616 15.3902C17.0387 15.0022 16.9991 14.6001 16.8478 14.2346C16.6964 13.8692 16.44 13.5568 16.1111 13.3371C15.7822 13.1173 15.3956 13 15 13C14.4697 13.0004 13.9613 13.2113 13.5863 13.5863C13.2113 13.9613 13.0005 14.4697 13 15ZM16.1554 15C16.1554 15.2285 16.0876 15.4519 15.9607 15.6419C15.8337 15.8319 15.6533 15.98 15.4422 16.0675C15.231 16.1549 14.9987 16.1778 14.7746 16.1332C14.5505 16.0886 14.3446 15.9786 14.183 15.817C14.0214 15.6554 13.9114 15.4495 13.8668 15.2254C13.8222 15.0013 13.8451 14.769 13.9325 14.5578C14.02 14.3467 14.1681 14.1663 14.3581 14.0393C14.5481 13.9124 14.7715 13.8446 15 13.8446C15.3063 13.845 15.5999 13.9669 15.8165 14.1835C16.0331 14.4001 16.155 14.6937 16.1554 15Z" fill="#ACADC1" stroke-width="0.2" />' +
		'<path d="M13 15C13 15.3956 13.1173 15.7822 13.3371 16.1111C13.5568 16.44 13.8692 16.6964 14.2346 16.8478C14.6001 16.9991 15.0022 17.0387 15.3902 16.9616C15.7781 16.8844 16.1345 16.6939 16.4142 16.4142C16.6939 16.1345 16.8844 15.7781 16.9616 15.3902C17.0387 15.0022 16.9991 14.6001 16.8478 14.2346C16.6964 13.8692 16.44 13.5568 16.1111 13.3371C15.7822 13.1173 15.3956 13 15 13C14.4697 13.0004 13.9613 13.2113 13.5863 13.5863C13.2113 13.9613 13.0005 14.4697 13 15ZM16.1554 15C16.1554 15.2285 16.0876 15.4519 15.9607 15.6419C15.8337 15.8319 15.6533 15.98 15.4422 16.0675C15.231 16.1549 14.9987 16.1778 14.7746 16.1332C14.5505 16.0886 14.3446 15.9786 14.183 15.817C14.0214 15.6554 13.9114 15.4495 13.8668 15.2254C13.8222 15.0013 13.8451 14.769 13.9325 14.5578C14.02 14.3467 14.1681 14.1663 14.3581 14.0393C14.5481 13.9124 14.7715 13.8446 15 13.8446C15.3063 13.845 15.5999 13.9669 15.8165 14.1835C16.0331 14.4001 16.155 14.6937 16.1554 15Z" stroke="#ACADC1" stroke-width="0.2" />' +
		'<path d="M12.3543 21.6855C12.3779 21.9178 12.452 22.1407 12.5706 22.3356C12.6891 22.5306 12.8486 22.692 13.036 22.8066L13.5899 27.214C13.6125 27.4302 13.7076 27.6298 13.8568 27.7748C14.0061 27.9197 14.1992 27.9999 14.3994 28H15.3197C15.52 27.9998 15.7133 27.9195 15.8626 27.7742C16.012 27.6289 16.1069 27.4289 16.1292 27.2124L16.4019 24.5115L16.9444 20.0023L17.5522 20.5474C17.7246 20.7022 17.9405 20.7881 18.164 20.7909C18.3875 20.7937 18.6051 20.7132 18.7807 20.5628L20.6128 18.9923C20.805 18.8312 20.9364 18.5992 20.9821 18.3401C21.0279 18.081 20.985 17.8126 20.8613 17.5855C20.7892 17.4573 20.6929 17.3471 20.5788 17.2622C20.4648 17.1774 20.3354 17.1198 20.1993 17.0932C20.0633 17.0667 19.9236 17.0718 19.7895 17.1082C19.6553 17.1446 19.5298 17.2115 19.4212 17.3044L18.1885 18.3607L16.9444 17.2442C16.7693 17.087 16.5494 17.0007 16.3223 17.0002H15.7543C15.6912 16.9981 15.6285 17.0116 15.5709 17.0397C15.5133 17.0677 15.4624 17.1097 15.4219 17.1624L14.8538 17.9252L14.3 17.1701C14.2614 17.1169 14.2122 17.074 14.1561 17.0446C14.1 17.0151 14.0384 17 13.9762 17.0002H13.5402C13.3226 17.0003 13.1076 17.0505 12.9092 17.1475C12.7108 17.2444 12.5336 17.386 12.3891 17.5628C12.2446 17.7396 12.1362 17.9476 12.0709 18.1733C12.0057 18.3989 11.9851 18.637 12.0106 18.8719L12.3543 21.6855ZM12.9224 18.075C12.9994 17.9782 13.0947 17.9004 13.2018 17.8471C13.3088 17.7938 13.4252 17.7662 13.543 17.7662H13.8356L14.4718 18.6294C14.5185 18.6931 14.5778 18.7446 14.6453 18.7799C14.7128 18.8153 14.7867 18.8337 14.8617 18.8337C14.9366 18.8337 15.0105 18.8153 15.078 18.7799C15.1455 18.7446 15.2048 18.6931 15.2515 18.6294L15.8892 17.7646H16.3238C16.386 17.7642 16.4463 17.7878 16.4942 17.831L17.9641 19.1545C18.0273 19.2099 18.1059 19.2401 18.1871 19.2401C18.2682 19.2401 18.3469 19.2099 18.41 19.1545L19.8686 17.9052C19.9159 17.8647 19.9745 17.8429 20.0347 17.8434C20.081 17.8434 20.1264 17.8564 20.1667 17.881C20.207 17.9056 20.2408 17.941 20.2648 17.9839C20.2975 18.0499 20.307 18.1265 20.2916 18.1995C20.2762 18.2725 20.2369 18.3369 20.181 18.3808L18.3404 19.9559C18.2924 19.9966 18.2331 20.0187 18.1722 20.0187C18.1112 20.0187 18.052 19.9966 18.0038 19.9559L16.9018 18.9661C16.8529 18.9222 16.7941 18.8933 16.7315 18.8825C16.6689 18.8717 16.6048 18.8792 16.5458 18.9045C16.4869 18.9297 16.4352 18.9716 16.3961 19.0259C16.3571 19.0802 16.3321 19.1448 16.3238 19.2132L15.6918 24.4204L15.4248 27.1275C15.422 27.1553 15.4099 27.1811 15.3908 27.1999C15.3717 27.2187 15.3469 27.2292 15.3211 27.2294H14.3994C14.3724 27.2287 14.3467 27.2171 14.3273 27.1968C14.3078 27.1765 14.296 27.149 14.2943 27.1198L13.7134 22.4947C13.7046 22.4256 13.6786 22.3603 13.6383 22.3059C13.5981 22.2515 13.545 22.21 13.4848 22.1859C13.3697 22.1404 13.2687 22.0608 13.1934 21.9559C13.118 21.851 13.0714 21.7252 13.0587 21.5929L12.7093 18.7777C12.6962 18.6506 12.7083 18.5221 12.7448 18.4006C12.7813 18.2791 12.8414 18.1675 12.9209 18.0735L12.9224 18.075Z" fill="#ACADC1" stroke-width="0.2" />' +
		'<path d="M12.3543 21.6855C12.3779 21.9178 12.452 22.1407 12.5706 22.3356C12.6891 22.5306 12.8486 22.692 13.036 22.8066L13.5899 27.214C13.6125 27.4302 13.7076 27.6298 13.8568 27.7748C14.0061 27.9197 14.1992 27.9999 14.3994 28H15.3197C15.52 27.9998 15.7133 27.9195 15.8626 27.7742C16.012 27.6289 16.1069 27.4289 16.1292 27.2124L16.4019 24.5115L16.9444 20.0023L17.5522 20.5474C17.7246 20.7022 17.9405 20.7881 18.164 20.7909C18.3875 20.7937 18.6051 20.7132 18.7807 20.5628L20.6128 18.9923C20.805 18.8312 20.9364 18.5992 20.9821 18.3401C21.0279 18.081 20.985 17.8126 20.8613 17.5855C20.7892 17.4573 20.6929 17.3471 20.5788 17.2622C20.4648 17.1774 20.3354 17.1198 20.1993 17.0932C20.0633 17.0667 19.9236 17.0718 19.7895 17.1082C19.6553 17.1446 19.5298 17.2115 19.4212 17.3044L18.1885 18.3607L16.9444 17.2442C16.7693 17.087 16.5494 17.0007 16.3223 17.0002H15.7543C15.6912 16.9981 15.6285 17.0116 15.5709 17.0397C15.5133 17.0677 15.4624 17.1097 15.4219 17.1624L14.8538 17.9252L14.3 17.1701C14.2614 17.1169 14.2122 17.074 14.1561 17.0446C14.1 17.0151 14.0384 17 13.9762 17.0002H13.5402C13.3226 17.0003 13.1076 17.0505 12.9092 17.1475C12.7108 17.2444 12.5336 17.386 12.3891 17.5628C12.2446 17.7396 12.1362 17.9476 12.0709 18.1733C12.0057 18.3989 11.9851 18.637 12.0106 18.8719L12.3543 21.6855ZM12.9224 18.075C12.9994 17.9782 13.0947 17.9004 13.2018 17.8471C13.3088 17.7938 13.4252 17.7662 13.543 17.7662H13.8356L14.4718 18.6294C14.5185 18.6931 14.5778 18.7446 14.6453 18.7799C14.7128 18.8153 14.7867 18.8337 14.8617 18.8337C14.9366 18.8337 15.0105 18.8153 15.078 18.7799C15.1455 18.7446 15.2048 18.6931 15.2515 18.6294L15.8892 17.7646H16.3238C16.386 17.7642 16.4463 17.7878 16.4942 17.831L17.9641 19.1545C18.0273 19.2099 18.1059 19.2401 18.1871 19.2401C18.2682 19.2401 18.3469 19.2099 18.41 19.1545L19.8686 17.9052C19.9159 17.8647 19.9745 17.8429 20.0347 17.8434C20.081 17.8434 20.1264 17.8564 20.1667 17.881C20.207 17.9056 20.2408 17.941 20.2648 17.9839C20.2975 18.0499 20.307 18.1265 20.2916 18.1995C20.2762 18.2725 20.2369 18.3369 20.181 18.3808L18.3404 19.9559C18.2924 19.9966 18.2331 20.0187 18.1722 20.0187C18.1112 20.0187 18.052 19.9966 18.0038 19.9559L16.9018 18.9661C16.8529 18.9222 16.7941 18.8933 16.7315 18.8825C16.6689 18.8717 16.6048 18.8792 16.5458 18.9045C16.4869 18.9297 16.4352 18.9716 16.3961 19.0259C16.3571 19.0802 16.3321 19.1448 16.3238 19.2132L15.6918 24.4204L15.4248 27.1275C15.422 27.1553 15.4099 27.1811 15.3908 27.1999C15.3717 27.2187 15.3469 27.2292 15.3211 27.2294H14.3994C14.3724 27.2287 14.3467 27.2171 14.3273 27.1968C14.3078 27.1765 14.296 27.149 14.2943 27.1198L13.7134 22.4947C13.7046 22.4256 13.6786 22.3603 13.6383 22.3059C13.5981 22.2515 13.545 22.21 13.4848 22.1859C13.3697 22.1404 13.2687 22.0608 13.1934 21.9559C13.118 21.851 13.0714 21.7252 13.0587 21.5929L12.7093 18.7777C12.6962 18.6506 12.7083 18.5221 12.7448 18.4006C12.7813 18.2791 12.8414 18.1675 12.9209 18.0735L12.9224 18.075Z" stroke="#ACADC1" stroke-width="0.2" />' +
		'<path d="M18 14.3542V16.9043C18 16.9982 18.0395 17.0883 18.1098 17.1547C18.18 17.2212 18.2754 17.2585 18.3747 17.2585C18.4741 17.2585 18.5695 17.2212 18.6397 17.1547C18.71 17.0883 18.7495 16.9982 18.7495 16.9043V14.707H26.2565V21.6617H18.3747C18.2754 21.6617 18.18 21.699 18.1098 21.7654C18.0395 21.8319 18 21.9219 18 22.0159C18 22.1098 18.0395 22.1999 18.1098 22.2663C18.18 22.3328 18.2754 22.3701 18.3747 22.3701H22.1223V24.7275H19.7808C19.6812 24.7275 19.5834 24.7532 19.4981 24.8019C19.4127 24.8506 19.343 24.9204 19.2966 25.0038L18.4617 26.48C18.4387 26.5211 18.4244 26.5661 18.4198 26.6124C18.4152 26.6587 18.4202 26.7055 18.4347 26.7499C18.4492 26.7944 18.4728 26.8357 18.5042 26.8716C18.5355 26.9074 18.5741 26.9371 18.6176 26.9589C18.6611 26.9806 18.7087 26.9941 18.7577 26.9984C18.8067 27.0028 18.8562 26.998 18.9032 26.9844C18.9503 26.9707 18.994 26.9484 19.0319 26.9187C19.0698 26.889 19.1012 26.8526 19.1243 26.8115L19.8947 25.4373H25.1038L25.8742 26.8115C25.8973 26.8526 25.9287 26.889 25.9666 26.9187C26.0045 26.9484 26.0482 26.9707 26.0953 26.9844C26.1423 26.998 26.1918 27.0028 26.2408 26.9984C26.2898 26.9941 26.3374 26.9806 26.3809 26.9589C26.4244 26.9371 26.463 26.9074 26.4943 26.8716C26.5257 26.8357 26.5493 26.7944 26.5638 26.7499C26.5783 26.7055 26.5833 26.6587 26.5787 26.6124C26.5741 26.5661 26.5598 26.5211 26.5368 26.48L25.7094 25.0038C25.6629 24.9204 25.5933 24.8506 25.508 24.8019C25.4227 24.7532 25.3248 24.7275 25.2252 24.7275H22.8777V22.3701H26.6252C26.7246 22.3701 26.82 22.3328 26.8902 22.2663C26.9605 22.1999 27 22.1098 27 22.0159V14.3542C27 14.2602 26.9605 14.1702 26.8902 14.1037C26.82 14.0373 26.7246 14 26.6252 14H18.3747C18.2754 14 18.18 14.0373 18.1098 14.1037C18.0395 14.1702 18 14.2602 18 14.3542Z" fill="#ACADC1" stroke-width="0.2" />' +
		'<path d="M18 14.3542V16.9043C18 16.9982 18.0395 17.0883 18.1098 17.1547C18.18 17.2212 18.2754 17.2585 18.3747 17.2585C18.4741 17.2585 18.5695 17.2212 18.6397 17.1547C18.71 17.0883 18.7495 16.9982 18.7495 16.9043V14.707H26.2565V21.6617H18.3747C18.2754 21.6617 18.18 21.699 18.1098 21.7654C18.0395 21.8319 18 21.9219 18 22.0159C18 22.1098 18.0395 22.1999 18.1098 22.2663C18.18 22.3328 18.2754 22.3701 18.3747 22.3701H22.1223V24.7275H19.7808C19.6812 24.7275 19.5834 24.7532 19.4981 24.8019C19.4127 24.8506 19.343 24.9204 19.2966 25.0038L18.4617 26.48C18.4387 26.5211 18.4244 26.5661 18.4198 26.6124C18.4152 26.6587 18.4202 26.7055 18.4347 26.7499C18.4492 26.7944 18.4728 26.8357 18.5042 26.8716C18.5355 26.9074 18.5741 26.9371 18.6176 26.9589C18.6611 26.9806 18.7087 26.9941 18.7577 26.9984C18.8067 27.0028 18.8562 26.998 18.9032 26.9844C18.9503 26.9707 18.994 26.9484 19.0319 26.9187C19.0698 26.889 19.1012 26.8526 19.1243 26.8115L19.8947 25.4373H25.1038L25.8742 26.8115C25.8973 26.8526 25.9287 26.889 25.9666 26.9187C26.0045 26.9484 26.0482 26.9707 26.0953 26.9844C26.1423 26.998 26.1918 27.0028 26.2408 26.9984C26.2898 26.9941 26.3374 26.9806 26.3809 26.9589C26.4244 26.9371 26.463 26.9074 26.4943 26.8716C26.5257 26.8357 26.5493 26.7944 26.5638 26.7499C26.5783 26.7055 26.5833 26.6587 26.5787 26.6124C26.5741 26.5661 26.5598 26.5211 26.5368 26.48L25.7094 25.0038C25.6629 24.9204 25.5933 24.8506 25.508 24.8019C25.4227 24.7532 25.3248 24.7275 25.2252 24.7275H22.8777V22.3701H26.6252C26.7246 22.3701 26.82 22.3328 26.8902 22.2663C26.9605 22.1999 27 22.1098 27 22.0159V14.3542C27 14.2602 26.9605 14.1702 26.8902 14.1037C26.82 14.0373 26.7246 14 26.6252 14H18.3747C18.2754 14 18.18 14.0373 18.1098 14.1037C18.0395 14.1702 18 14.2602 18 14.3542Z" stroke="#ACADC1" stroke-width="0.2" />' +
		'</svg>',

	iconTaskList: '<svg class="mgPlayerJSTest_position-center mgPlayerJSTest_width-height-100" width="33" height="32" viewBox="0 0 33 32" fill="none">' +
		'<rect x="0.5" width="32" height="32" rx="4" fill="#005BF0"/>' +
		'<path d="M10.6813 24.3808V10.6864H12.6546V11.4803C12.6546 11.8772 12.9506 12.1749 13.3453 12.1749H20.0546C20.4493 12.1749 20.7453 11.8772 20.7453 11.4803V10.6864H22.7187V16.3427V25.6832H23.7558C23.9459 25.6832 24.1 25.5291 24.1 25.339V16.839V10.0909C24.1 9.69401 23.804 9.39629 23.4093 9.39629H20.7453V8.60239C20.7453 8.20547 20.4493 7.90775 20.0546 7.90775H19.2653C19.0679 6.41922 17.7853 5.42688 16.3053 5.62532C15.1213 5.72458 14.2333 6.71694 14.036 7.90775H13.3453C12.9506 7.90775 12.6546 8.20547 12.6546 8.60239V9.39629H9.99063C9.59599 9.39629 9.29999 9.69401 9.29999 10.0909V25.0755C9.29999 25.4725 9.59599 25.7701 9.99063 25.7701H23.6473C23.8374 25.7701 23.9915 25.6161 23.9915 25.4259V24.3808H15.3186H10.6813ZM16.7 6.91539C17.292 6.91539 17.7853 7.31238 17.9826 7.90775H15.4173C15.516 7.31238 16.108 6.91539 16.7 6.91539ZM13.9373 9.29709H19.3639V10.7856H13.9373V9.29709Z" fill="white"/>' +
		'<path d="M12.4525 14.6216H20.8589V15.3904H12.4525V14.6216Z" fill="white" stroke="white" stroke-width="0.5"/>' +
		'<path d="M12.4525 17.7742H20.8589V18.5431H12.4525V17.7742Z" fill="white" stroke="white" stroke-width="0.5"/>' +
		'<path d="M12.4525 20.9265H20.8589V21.6954H12.4525V20.9265Z" fill="white" stroke="white" stroke-width="0.5"/>' +
		'</svg>',

	accessibility: '<svg class="mgPlayerJSTest_position-center mgPlayerJSTest_width-height-100" viewBox="0 0 27 26" fill="none">' +
		'<path d="M1.85718 13C1.85718 14.5759 2.16757 16.1363 2.77062 17.5922C3.37368 19.0481 4.25759 20.371 5.3719 21.4853C6.4862 22.5996 7.80907 23.4835 9.26498 24.0866C10.7209 24.6896 12.2813 25 13.8572 25C15.433 25 16.9935 24.6896 18.4494 24.0866C19.9053 23.4835 21.2282 22.5996 22.3425 21.4853C23.4568 20.371 24.3407 19.0481 24.9437 17.5922C25.5468 16.1363 25.8572 14.5759 25.8572 13C25.8572 11.4241 25.5468 9.86371 24.9437 8.4078C24.3407 6.95189 23.4568 5.62902 22.3425 4.51472C21.2282 3.40042 19.9053 2.5165 18.4494 1.91345C16.9935 1.31039 15.433 1 13.8572 1C12.2813 1 10.7209 1.31039 9.26498 1.91345C7.80907 2.5165 6.4862 3.40042 5.3719 4.51472C4.25759 5.62902 3.37368 6.95189 2.77062 8.4078C2.16757 9.86371 1.85718 11.4241 1.85718 13Z" stroke="#555555" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>' +
		'<path d="M11.1905 19L13.8572 15M13.8572 15L16.5238 19M13.8572 15V12.3333M13.8572 12.3333L17.8572 11M13.8572 12.3333L9.85718 11" stroke="#555555" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>' +
		'<path d="M13.8572 7.66658C14.2254 7.66658 14.5239 7.36811 14.5239 6.99992C14.5239 6.63173 14.2254 6.33325 13.8572 6.33325C13.489 6.33325 13.1906 6.63173 13.1906 6.99992C13.1906 7.36811 13.489 7.66658 13.8572 7.66658Z" fill="#555555" stroke="#555555" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>' +
		'</svg>',

	iconDownArrow: '<svg width="16" height="10" viewBox="0 0 16 10" fill="none" >' +
		'<path d="M7.77408 4.13342L7.63281 3.99247L7.49155 4.13342L1.89547 9.71731L0.415655 8.2375L7.63281 1.02034L14.85 8.2375L13.3702 9.71731L7.77408 4.13342Z" fill="black" stroke="white" stroke-width="0.4"/>' +
		'</svg>',

	iconUpArrow: '<svg width="16" height="10" viewBox="0 0 16 10" fill="none" >' +
		'<path d="M7.49155 6.60486L7.63281 6.74582L7.77408 6.60486L13.3702 1.02097L14.85 2.50078L7.63281 9.71794L0.415655 2.50078L1.89547 1.02097L7.49155 6.60486Z" fill="black" fill-opacity="0.7" stroke="white" stroke-width="0.4"/>' +
		'</svg>'
	// SVGS for outside creator and player directives end		                 														
});
var app = angular.module('guideme');

app.controller('taskListHomeCtrl', ['$scope', '$rootScope', '$state', '$timeout',
	'storage', 'api', 'modal', '$location', 'mgError', 'cStorage',
	function($scope, $rootScope, $state, $timeout, storage, api, modal, $location, mgError, cStorage) {
		storage.activeView.set($location.path());
		$rootScope.currentView = "taskList";
		$scope.currView = 'list';
		$scope.allTaskList = [];
		$scope.taskProgress = 0;
		$scope.openTaskId = -1;
		var ruleTimeOut = GmCXt.t.ruleTimeOut15ms;
		$rootScope.isTaskListActive = true;
		$scope.completedGuides = [];
		$scope.forceCompletion = false;
		$scope.activeGuideOrder = 1;
		$scope.activeFolderOrder = [];
		$scope.totalGuideCount = 0;
		$scope.guidePlayActionTitle = "";
		$rootScope.showSpinner = true;
		storage.activeView.set($location.path());

		$scope.showTaskList = function() {
			$rootScope.showSpinner = true;
			var taskListCb = function(taskList) {
				if (mg$('.mgPlayerJSTest_push-notification-container').is(':visible')) {
					mg$('.ege-panel').css({
						'width': '500px',
						'right': '-9550px'
					});
				}

				if (taskList.length) {
					$scope.allTaskList = $rootScope.processTaskListByRules(taskList);
					$scope.openTaskId = -1;
					$scope.openTaskFolderId = -1;
				}
				$rootScope.showSpinner = false;
				if (!$scope.$$phase) $scope.$apply();
			};

			if (!GmCXt.isEmpty(GmCXt.user) && GmCXt.isPlayer()) {
				if(GmCXt.isEmpty($rootScope.taskList)){
					$rootScope.taskList = null;
				} else {
					$rootScope.taskList = $rootScope.filterCompleatedTasks($rootScope.taskList);
				}
				$rootScope.getTaskListData(taskListCb);
			}

		};

		$scope.refreshView = function() {
			mgError.try(function() {
				$scope.showTaskList();

			}, 122);
		};

		$scope.showTaskList();

		$scope.closeTaskList = function() {
			$rootScope.closeAppPanel();
			$rootScope.isTaskListActive = false;
			$rootScope.refreshCurrentPage();
		};

		$scope.openTask = function(task, index) {
			if (task && task.task_list_id && $scope.openTaskId !== index) {
				$scope.openTaskId = index;
				$rootScope.showSpinner = true;
				api.getTaskDetails(task.task_list_id).then(function(res) {
					$rootScope.showSpinner = false;
					if (!res.data.data.completion_percent) {
						$scope.taskProgress = 0;
					} else {
						$scope.taskProgress = res.data.data.completion_percent;
					}
					$scope.completedGuides = res.data.data.completed_guide_ids;
					$scope.completedTask = res.data.data.completed_count;
					$scope.totalGuideCount = parseInt(res.data.data.total_count);

					if (task.guides && task.guides.length) {
						$scope.allTaskList[index] = $scope.setCompleteGuide(task);
						$scope.checkFolderGuidesOrder(task.guides);
					}

					if (task.folders && task.folders.length) {
						$scope.allTaskList[index] = $scope.setCompleteFolder(task);
					}

					if (task.task_list_setting.force_completion) {
						$scope.forceCompletion = task.task_list_setting.force_completion;
					}
					$scope.totalTask = res.data.data.total_count;
					$scope.openTaskFolderId = -1;
					if (!$scope.$$phase) $scope.$apply();
				});
			} else {
				$scope.openTaskId = -1;
			}

			$timeout(function() {
				$scope.setHeight();
			 }, 500);
		};

		$scope.playGuide = function(guide, ev, task) {
			var ts = GmCXt.parseJSON(task.task_list_setting);
			ev.stopPropagation();
			var guideComp = false;
			if (guide.is_guide_complete) guideComp = true;

			var param = {
				tour_id: guide.tour_id
			};

			$rootScope.showSpinner = true;

			api.getTour(param, function(_tour) {
				$rootScope.showSpinner = false;
				if (!$rootScope.$$phase) $rootScope.$apply();
				var taskObj = {
					"taskId": task.task_list_id,
					"isComplete": guideComp,
					"complete_count": $scope.completedTask,
					"total_count": $scope.totalGuideCount
				};

				$scope.openTaskId = -1;
				$scope.openTaskFolderId = -1;
				$scope.defaultPlayAction = $rootScope.getDefaultPlayAction(_tour);

				if ($scope.defaultPlayAction === 'Default') {
					$scope.defaultPlayAction = $rootScope.getAppSetting('defaultPlayAction');
				}

				if ($scope.defaultPlayAction === $rootScope.playVLab && GmCXt.branchStepExist(_tour)) {
					$scope.defaultPlayAction = $rootScope.playGuideMe;
				}

				var guideActionPlay = $rootScope.guideAction($scope.defaultPlayAction, false, _tour, "task_list", _tour.category_title, taskObj);
			}, errorCb);
		};

		var errorCb = function() {
			$rootScope.showPopup($rootScope.labels.tourPlayError);
		};

		$scope.openTaskFolder = function(folder, index, parentIndex, ev) {
			if ($scope.openTaskFolderId !== index) {
				ev.stopPropagation();
				$scope.openTaskFolderId = index;
				$rootScope.showSpinner = true;
				api.getTaskFolderDetails(folder.folder_id).then(function(res) {
					$rootScope.showSpinner = false;
					$scope.checkFolderGuidesOrder(res.data.data.content_list);
					if (!$scope.$$phase) $scope.$apply();
				});
			} else {
				$scope.openTaskFolderId = -1;
			}

			$timeout(function() {
				$scope.setHeight();
			 }, 500);
		};

		$scope.checkFolderGuidesOrder = function(guides) {
			if (guides) {
				$scope.activeGuideOrder = 1;
				for (var f = 0; f < guides.length; f++) {
					if (guides[f].is_guide_complete && Boolean(Number(guides[0].is_guide_complete))) {
						$scope.activeGuideOrder = f + 2;
					}
				}
			}
		};

		$scope.setCompleteGuide = function(task) {
			if (task.guides) {
				for (var f = 0; f < task.guides.length; f++) {
					if ($scope.completedGuides.indexOf(task.guides[f].tour_id.toString()) !== -1) {
						task.guides[f].is_guide_complete = true;
					}
				}
			}
			return task;
		};

		$scope.setCompleteFolder = function(task) {
			if (task.folders) {
				$scope.activeFolderOrder = [];
				if (task.folders.length > 0) {
					$scope.activeFolderOrder.push(task.folders[0].folder_id);
				}
				for (var i = 0; i < task.folders.length; i++) {
					var compCount = 0;
					for (var f = 0; f < task.folders[i].guides.length; f++) {
						if ($scope.completedGuides.indexOf(task.folders[i].guides[f].tour_id.toString()) !== -1) {
							task.folders[i].guides[f].is_guide_complete = true;
							compCount++;
						}

						if ((task.folders[i].guides.length === compCount) &&
							task.folders[i + 1] && !GmCXt.isEmpty(task.folders[i + 1]) &&
							$scope.activeFolderOrder.indexOf(task.folders[i + 1].folder_id) === -1) {
							$scope.activeFolderOrder.push(task.folders[i + 1].folder_id);
						}
					}
				}
			}
			return task;
		};

		$scope.getPlayActionIcon = function(guide) {
			$scope.guidePlayActionTitle = $rootScope.labels.guideMe;

			var t = {
				tour_settings: GmCXt.parseJSON(guide.tour_settings)
			};

			var da = $rootScope.getDefaultPlayAction(t);

			if ($rootScope.isOnboarding(guide)) {
				$scope.guidePlayActionTitle = $rootScope.labels.showMe;
				return $rootScope.svgs.guide_onboarding;
			}

			if ((da === $rootScope.playSlideshow ||
					(t.tour_settings.defaultPlayAction === 'Default' && $rootScope.getAppSetting('defaultPlayAction') === $rootScope.playSlideshow))) {
				$scope.guidePlayActionTitle = $rootScope.labels.showMe;
				return $rootScope.svgs.guideShowMe;
			}

			if (da === $rootScope.playAuto ||
				(t.tour_settings.defaultPlayAction === 'Default' && $rootScope.getAppSetting('defaultPlayAction') === $rootScope.playAuto)) {
				$scope.guidePlayActionTitle = $rootScope.labels.doItForMe;
				return $rootScope.svgs.guideDoItForMe;
			}

			if (!GmCXt.branchStepExist(t) && (da === $rootScope.playVLab ||
				(t.tour_settings.defaultPlayAction === 'Default' && $rootScope.getAppSetting('defaultPlayAction') === $rootScope.playVLab))) {
				$scope.guidePlayActionTitle = $rootScope.labels.vLab;
				return $rootScope.svgs.guideTeachMe;
			}

			return $rootScope.svgs.default_guide;
		};

		$scope.goBack = function() {
			if ($scope.currView === 'task') {
				$scope.currView = 'chapter';
			} else {
				$scope.currView = 'assignment';
			}
		};

		$scope.onBack = function() {
			$rootScope.isTaskListActive = false;
			$rootScope.refreshCurrentPage();
			$rootScope.goBack(true);
		};

		$scope.setHeight = function() {
			var egeHeaderHeight = mg$('#ege-header').innerHeight() ? mg$('#ege-header').innerHeight() : 0;
			var listPageHeaderHeight = mg$('.mgPlayerJSTest_task-list-header').innerHeight() ? mg$('.mgPlayerJSTest_task-list-header').innerHeight() : 0;
			var footerHeight = mg$('#footer').innerHeight() ? mg$('#footer').innerHeight() : 0;
			mg$('.mgPlayerJSTest_assign-container').css({
				'height': (window.innerHeight - egeHeaderHeight - listPageHeaderHeight - footerHeight)
			});
		};

		$timeout(function() {
			$scope.setHeight();
		 }, 500);

	   /* set the list hight on window resize */
	   mg$(window).off('resize').on('resize', $scope.setHeight);
	}
]);
var app = angular.module('guideme');

app.controller('TourListCtrl', ['$scope', '$rootScope', '$state', 'storage', 'api',
	'AuthLogin', 'modal', '$location', '$timeout', 'mgError', 'tourUtilService',
	function($scope, $rootScope, $state, storage, api, AuthLogin, modal,
		$location, $timeout, mgError, tourUtilService) {

		$scope.isAllGuides = false;
		if ($rootScope.activeTab === $rootScope.labels.allGuides) $scope.isAllGuides = true;

		$scope.categoryId = $state.params.categoryId;
		$scope.reloadFlag = $state.params.reloadFlag;
		$rootScope.currentView = 'tour-list';
		$scope.isUserLoggedIn = AuthLogin.isSession();
		$scope.exportLimit = 10;
		$scope.limit = 50;
		$scope.offset = 0;
		$scope.toursFetchedInLastApiCall = 0;
		$scope.tours = [];
		$scope.noTours = false;
		$scope.tourSelected = false;
		$scope.selectedAllTour = false;
		$rootScope.myGuidesFilter = false;
		$rootScope.sortType = 'tour_title';
		$rootScope.selectedAction = $rootScope.labels.all;
		storage.activeView.set($location.path());

		var isPreviousEventComplete = true;
		var activeTourId = $rootScope.activeTourId;
		activeTourId = (activeTourId) ? activeTourId : 0;

		$scope.selectAll = function() {
			$scope.tourSelected = true;
			$scope.checkSign = true;
			$scope.exportFilter = true;
			angular.forEach($scope.tours, function(itm) {
				if (itm.step_count !== "0")
					itm.export = true;
			});
			mg$('#mgPlayerJSTest_cb-export-all').prop('checked', true);
			$rootScope.selectedAction = $rootScope.labels.all;
		};

		$scope.clearAll = function() {
			$scope.tourSelected = false;
			$scope.checkSign = true;
			$scope.exportFilter = false;
			angular.forEach($scope.tours, function(itm) {
				itm.export = false;
			});
			mg$('#mgPlayerJSTest_cb-export-all').prop('checked', false);
			$rootScope.selectedAction = $rootScope.labels.all;
		};

		$scope.selectPublished = function() {
			$scope.checkSign = false;
			$scope.clearAll();

			$scope.tourSelected = true;
			angular.forEach($scope.tours, function(itm) {
				if (itm.is_published && itm.step_count !== "0")
					itm.export = true;
			});
			mg$('#mgPlayerJSTest_cb-export-all').prop('checked', true);
			$rootScope.selectedAction = $rootScope.labels.published;
		};

		$scope.selectUnpublished = function() {
			$scope.checkSign = false;
			$scope.exportFilter = false;
			$scope.clearAll();

			$scope.tourSelected = true;
			angular.forEach($scope.tours, function(itm) {
				if (!itm.is_published && itm.step_count !== "0")
					itm.export = true;
			});
			mg$('#mgPlayerJSTest_cb-export-all').prop('checked', true);
			$rootScope.selectedAction = $rootScope.labels.unpublished;
		};

		$scope.toggleExportBtn = function() {

			$scope.tourSelected = false;

			for (var i = 0; i < $scope.tours.length; i++) {
				if ($scope.tours[i].export === true) {
					$scope.tourSelected = true;
					return;
				}
			}
		};

		$scope.exportTours = function() {
			var el = document.getElementsByName('export-guide-checkbox');
			var exportList = [];
			el.forEach(function(e) {
				if (e.checked) exportList.push(parseInt(e.value));
			});

			$scope.clearAll();
			$rootScope.exportEnabled = false;

			var guideLabel = exportList.length > 1 ? 'Guides' : 'Guide';

			var params = {
				"data_to_export": [{
					"category": $scope.categoryId,
					"tours": exportList
				}],
				description: $rootScope.labels.exporting + ": " + $scope.category.category_title + " ( " + exportList.length + " " + guideLabel + " )"

			};

			if (exportList.length > 0) {
				api.getTourDownload(params, $rootScope.callBackExportTour);
			} else {
				modal.open($rootScope.labels.bulkExportAlert, 'warning');
			}
		};

		$scope.copyGuides = function() {
			var el = document.getElementsByName('export-guide-checkbox');
			var copyGuides = [];
			el.forEach(function(e) {
				if (e.checked) copyGuides.push(parseInt(e.value));
			});
			$scope.clearAll();
			$rootScope.exportEnabled = false;

			$rootScope.copyGuidesList = {
				'tours': copyGuides,
				'categoryId': $scope.categoryId
			};
		};

		$scope.cancel = function() {
			$scope.clearAll();
			$rootScope.exportEnabled = false;
		};

		$scope.exportFilters = function($event) {
			$event.stopPropagation();
			$rootScope.hideTourActionDropdown();
			$scope.isExportListVisible = mg$('.mgPlayerJSTest_checkbox-dropdown-wrapper').is(':visible');
			mg$('.mgPlayerJSTest_checkbox-dropdown-wrapper').slideUp(200);
			if (!$scope.isExportListVisible)
				mg$('.mgPlayerJSTest_checkbox-dropdown-wrapper').slideDown(200);
		};

		$scope.toggleExport = function() {
			if ($rootScope.selectedAction !== $rootScope.labels.all) {
				$scope.exportFilter = false;
				$scope.clearAll();
			} else {
				$rootScope.selectedAction = $rootScope.labels.all;
				$scope.exportFilter = ($scope.exportFilter) ? false : true;

				if ($scope.exportFilter) $scope.selectAll();
				else $scope.clearAll();
			}
		};

		$scope.onTourCbClick = function() {
			$scope.exportFilter = false;
			mg$('#mgPlayerJSTest_cb-export-all').prop('checked', false);
			$rootScope.selectedAction = $rootScope.labels.all;
		};

		$rootScope.dragTours = function(tours, $index) {

			var sortedTours = [];

			tours.splice($index, 1);

			tours.filter(function(el, index) {
				sortedTours.push({
					"tour_id": el.tour_id,
					"tour_order": index + 1
				});

				el.tour_order = index + 1;

				$rootScope.setTour(el, false);
			});

			sortedTours = GmCXt.removeDuplicates(sortedTours);

			var data = {
				category_id: $scope.categoryId,
				json: sortedTours
			};

			function onFail(data) {
				$rootScope.showPopup(data.message);
			}

			api.toursDrag(data, onFail);

			if (!$scope.$$phase) {
				$scope.$apply();
			}

		};

		$scope.getCategorycb = function(_cat) {

			if (GmCXt.isEmpty(_cat)) return;

			$scope.category = _cat;

			var params = {};

			if ($rootScope.language && !GmCXt.isFalse($rootScope.language)) params.language = $rootScope.language;

			if (GmCXt.getLXPLang()) params.language = GmCXt.getLXPLang();

			if (GmCXt.inPlayer) {
				$scope.category = $rootScope.prepSingCatLang($scope.category, params.language);
			}

			if ($rootScope.refreshCache && $rootScope.refreshCache.category_id === $scope.category.category_id) {
				delete $rootScope.refreshCache.category_id;
			} else if ($rootScope.refreshCache && $rootScope.refreshCache.parent_id === $scope.category.category_id) {
				delete $rootScope.refreshCache.parent_id;
			}

			apply(true);

		};

		function apply(isCat) {
			if (!$scope.tours.length && !isCat) $scope.noTours = true;


			if (GmCXt.isPlayer()) {
				$scope.tours = $scope.tours.filter(function(t) {
					return !$rootScope.isTrackingGuide(t);
				});
			}

			$rootScope.showSpinner = false;
			if (!$scope.$$phase) $scope.$apply();
		}

		$scope.getTourList = function(append) {

			var params = {
				category_id: $scope.categoryId,
				limit: $scope.limit,
				offset: $scope.offset,
				reloadFlag: $scope.reloadFlag
			};

			function cb(_tours, _pinnedTours) {
				if(GmCXt.isPlayer()) _tours = GmCXt.filterScheduleTours(_tours);

				storage.pinnedToursList.set(_pinnedTours);
				$scope.processTourResponse(append, _tours, _pinnedTours);

				// Show the selected tours as selected to the user by,
				// adding the automate flag(used to identify selection) to the tour object
				angular.forEach(_tours, function(t) {
					t.automate = false;

					t.tour_order = parseInt(t.tour_order);
				});
				angular.forEach($rootScope.categoryDataForAutomation, function(cat) {
					if (cat.category_id === $scope.category.category_id) {
						if (cat.tours.length === parseInt(cat.total_publish_tour)) {
							$scope.selectedAllTour = true;
						}
						angular.forEach($scope.tours, function(tour) {
							angular.forEach(cat.tours, function(t) {
								if (t.tour_id === tour.tour_id) {
									tour.automate = true;
								}
							});
						});
					}
				});

				$rootScope.isApiCallOn = false;

				if (GmCXt.FT.creatorApp) {
					$rootScope.checkCurrentViewForUpdate();
				}

				if ($rootScope.guideSegmentation && $rootScope.FT.isPlayer) {
					$rootScope.showSpinner = true;
					var tours = angular.copy($scope.tours);
					$scope.tours = [];
					GmCXt.checkGuidesBasedOnSegment(tours, segmentCb, "guideListSeg");
				} else {
					apply();
				}

			}

			if ($rootScope.FT.publishedGuides) params.published_guides = '1';

			if ($rootScope.isUserLoggedIn() || GmCXt.onPrem()) {
				var toursListFromStorage = $rootScope.allTourList['cat_' + $scope.categoryId];
				if (!$rootScope.hasUserEditedTour || GmCXt.isEmpty(toursListFromStorage)) {
					api.getTourList(params, cb);
				} else {
					var toursList = Object.keys(toursListFromStorage).map(function(key) {
						return toursListFromStorage[key];
					});
					cb(toursList, $rootScope.pinnedToursList);
				}
			}

			if (!$rootScope.hasUserEditedTour) {
				$rootScope.showSpinner = true;
			}
		};

		function segmentCb(t) {

			if ($scope.isfirst) {
				$scope.isfirst = false;

				$scope.tours = [];
			}

			if (!GmCXt.isEmpty(t)) {
				$scope.tours.push(t);
			}
			$scope.tours = GmCXt.removeDuplicateGuides($scope.tours);
			apply();
		}

		$scope.processTourResponse = function(append, _tours, _pinnedTours) {
			if (_tours && _tours.length > 0) {
				$scope.noTours = false;

				if (append) $scope.tours = mg$.merge($scope.tours, _tours);
				else $scope.tours = _tours;

				$scope.tours = $rootScope.filterDefaultGuides($scope.tours);
				$scope.tours = GmCXt.removeDuplicateGuides($scope.tours);
				if ($rootScope.FT.creatorApp) {
					$scope.tours = $rootScope.getTranslatedTours($scope.tours);
					if (!GmCXt.isEmpty(_pinnedTours)) {
						var pinnedTours = _pinnedTours.toString();
						$scope.pinnedTours = $scope.tours.filter(function(t) {
							t.pin = pinnedTours.includes(t.tour_id);
							return (pinnedTours.includes(t.tour_id));
						});
						$scope.filteredTours = $scope.tours.filter(function(t) {
							t.pin = pinnedTours.includes(t.tour_id);
							return (!pinnedTours.includes(t.tour_id));
						});
					} else {
						$scope.pinnedTours = [];
						$scope.filteredTours = $scope.tours;
					}
				} else {
					$scope.filteredTours = $scope.tours;
				}

				$scope.toursFetchedInLastApiCall = _tours.length;

				$rootScope.totalTours = $scope.tours.length;

				if (activeTourId && angular.isDefined(_tours[activeTourId])) {
					_tours[activeTourId].screencastInProgress = true;
				}

			} else if (!append)
				$scope.noTours = true;
			else if (append)
				$scope.noTours = false;

			isPreviousEventComplete = true;

			$scope.tours = $rootScope.getTranslatedTours($scope.tours);

			$scope.clearAll();

			$rootScope.focusAccessibilityBtn();

			//Set height to category-list element to properly apply slider
			$timeout(function() {
				$scope.setHeight();
			}, 100);
		};

		mg$('.category-list').off('scroll').on('scroll', function() {

			if (!isPreviousEventComplete) return true;

			if (((mg$(this).scrollTop() + mg$(this).innerHeight()) >= mg$(this)[0].scrollHeight - 20) && (mg$(this)[0].scrollHeight + 20 > mg$(this).innerHeight())) {
				isPreviousEventComplete = false;

				if ($scope.toursFetchedInLastApiCall === $scope.limit) {
					$rootScope.showSpinner = true;
					$scope.offset = $scope.offset + $scope.limit;
					$scope.getTourList(1);
				}
			}

		});

		$scope.showTourItem = function(tour) {
			if ($scope.noTours) {
				return false;
			}

			if (tour.tour_type === 'smartTip' && tour.tour_settings.tour_type === 'desktop') {
				return false;
			}

			if (tour.tour_type === 'bot' && GmCXt.isPlayer()) {
				return false;
			}

			return (tour.tour_type !== 'smartTip') || $rootScope.FT.creatorApp;
		};

		$scope.showActionDropdown = function(categoryId, type, $event) {
			$event.stopPropagation();
			$rootScope.hideTourActionDropdown();

			mg$('.category-list').scrollTop(0);

			if (type === 'add') {
				var isDropdownVisible = mg$('#category-add-dropdown-' + categoryId).is(':visible');
				mg$('.category-action-dropdown').slideUp(200);
				if (!isDropdownVisible)
					mg$('#category-add-dropdown-' + categoryId).slideDown(200);
			} else {
				var isDropdownVisible = mg$('#category-edit-dropdown-' + categoryId).is(':visible');
				mg$('.category-action-dropdown').slideUp(200);
				if (!isDropdownVisible)
					mg$('#category-edit-dropdown-' + categoryId).slideDown(200);
			}
		};

		$scope.$on('refreshStep', function(event, data) {
			if (angular.isDefined(data) && angular.isDefined(data.step)) {
				var step = data.step;
				var tourObj = false;

				for (var i = 0; i < $scope.tours.length; i++) {
					if (step.tour_id === $scope.tours[i].tour_id) {
						tourObj = $scope.tours[i];
						tourObj.step_count = parseInt(tourObj.step_count) + 1;

						if (tourObj.is_locked) $scope.isLocked = true;

						$scope.tours[i] = tourObj;
						break;
					}
				}
			}
		});

		$scope.setHeight = function() {
			var listPageHeaderHeight = mg$('.list-page-header').innerHeight() ? mg$('.list-page-header').innerHeight() : 0;
			var egeHeaderHeight = mg$('#ege-header').innerHeight() ? mg$('#ege-header').innerHeight() : 0;
			var egePanelHeaderSubMenuUrlsHeight = mg$('.ege-panel-header-sub-menu-urls').innerHeight() ? mg$('.ege-panel-header-sub-menu-urls').innerHeight() : 0;
			var footerHeight = mg$('#footer').innerHeight() ? mg$('#footer').innerHeight() : 0;

			mg$('.category-list').css({
				'height': (window.innerHeight - footerHeight - egePanelHeaderSubMenuUrlsHeight - listPageHeaderHeight - egeHeaderHeight)
			});
		};

		$scope.refreshView = function() {

			if ($rootScope.resetOffset) {
				$scope.offset = 0;
				$rootScope.resetOffset = false;
			}
			mgError.try(function() {
				$rootScope.getCategoryApi($scope.categoryId, $scope.getCategorycb);
				$scope.tours = [];
				$scope.isfirst = true;
				$scope.getTourList(0);
			}, 101);
		};

		$scope.updateTours = function() {
			if (!$scope.$$phase) $scope.$apply();
		};

		$scope.selectAllAuto = function(category) {
			var automationCategory = Object.assign(category);
			if (!$scope.selectedAllTour) {
				$rootScope.fetchToursForCategory(automationCategory.category_id, function(tours) {
					if (tours && tours.length > 0) {
						automationCategory.tours = tourUtilService.filterByPublishedTours(tours);
					}
					// For JSON based player
					tourUtilService.deleteSubCategories(automationCategory);

					var categoryIndex = tourUtilService.findCategoryIndex($rootScope.categoryDataForAutomation, automationCategory);
					if (categoryIndex === -1) {
						$rootScope.categoryDataForAutomation.push(automationCategory);
					} else {
						$rootScope.categoryDataForAutomation.splice(categoryIndex, 1, automationCategory);
					}
					$scope.selectedAllTour = true;
					$rootScope.changeAutomationGuideSelectCount();
					$scope.refreshView();
				});
			} else {
				var categoryIndex = tourUtilService.findCategoryIndex($rootScope.categoryDataForAutomation, automationCategory);
				$rootScope.categoryDataForAutomation.splice(categoryIndex, 1);
				$scope.selectedAllTour = false;
				$rootScope.changeAutomationGuideSelectCount();
				$scope.refreshView();
			}
			if (!$scope.$$phase) {
				$scope.$apply();
			}
		};

		$scope.onChangeSelectedTourForAutomation = function(tour, category) {
			var categoryIndex = tourUtilService.findCategoryIndex($rootScope.categoryDataForAutomation, category);
			if (categoryIndex === -1) {
				var automationCategory = Object.assign({}, category);
				// For JSON based player
				tourUtilService.deleteSubCategories(automationCategory);

				$rootScope.categoryDataForAutomation.push(automationCategory);
				categoryIndex = $rootScope.categoryDataForAutomation.length - 1;
				$rootScope.categoryDataForAutomation[categoryIndex].tours = [];
			}

			var cat = $rootScope.categoryDataForAutomation[categoryIndex];
			if (tour.automate) {
				cat.tours.push(tour);
				$rootScope.categoryDataForAutomation[categoryIndex].tours = cat.tours;
				if (cat.tours.length === parseInt(cat.total_publish_tour)) {
					$scope.selectedAllTour = true;
				}
				$rootScope.changeAutomationGuideSelectCount();
				$scope.refreshView();
			} else {
				for (var i = 0; i < cat.tours.length; i++) {
					if (cat.tours[i].tour_id === tour.tour_id) {
						cat.tours.splice(i, 1);
					}
				}
				$rootScope.categoryDataForAutomation[categoryIndex] = cat;
				if (cat.tours.length === 0) {
					$rootScope.categoryDataForAutomation.splice(categoryIndex, 1);
				}
				$rootScope.changeAutomationGuideSelectCount();
				$scope.selectedAllTour = false;
				$scope.refreshView();
			}
			if (!$scope.$$phase) {
				$scope.$apply();
			}
		};

		if ($rootScope.showStepError) {
			modal.open($rootScope.labels.stepError, 'alert');
		}

		$scope.refreshView();

		mg$(window).off('resize').on('resize', $scope.setHeight);

		GmCXt.timeout(function() {
			if ($rootScope.currentScrollVal && $rootScope.hasUserEditedTour) {
				mg$('.category-list').scrollTop($rootScope.currentScrollVal);
				$rootScope.hasUserEditedTour = false;
			} else {
				mg$('.category-list').scrollTop(0);
			}
		}, 1000);
	}
]);
var app = angular.module('guideme');

app.controller('TourViewCtrl', ['$scope', '$rootScope', '$state', 'api', 'storage', '$sce',
	'AuthLogin', 'modal', '$location', '$timeout', 'Message', '$compile', '$injector', 'mgError',
	function($scope, $rootScope, $state, api, storage, $sce, AuthLogin, modal,
		$location, $timeout, Message, $compile, $injector, mgError) {

		var tourViewCreator;

		if ($rootScope.FT.creatorApp) {
			tourViewCreator = $injector.get('tour_view.creator.service');
		}
		$rootScope.currentView = "tour-view";

		$scope.branchOptions = ['Rule Based', 'User Selection'];
		$scope.branchOptLbls = [];
		$scope.branchOptLbls['Rule Based'] = $rootScope.labels.branchRuleB;
		$scope.branchOptLbls['User Selection'] = $rootScope.labels.branchUserS;
		$scope.errorHandlerOpen = false;
		$scope.branchingPopupOpen = false;

		$scope.selection = ['Rule Based'];
		$rootScope.linkGuidePlayMode = "Default";
		$scope.showRule = true;
		$scope.hideOption = true;
		$scope.displaySteps = true;

		$scope.videoUrl = false;
		$scope.headerDetailView = true;
		$scope.step = {};
		$scope.disableDoItForMe = false;
		$scope.showSteps = [];

		$scope.branchTitleEditable = true;
		$scope.showVariable = 0;
		$rootScope.isMoreDropdownVisible = false;
		$rootScope.matchingAlgoPopupOverlay = false;
		$scope.hideDownload = true;
		$scope.error = false;
		$rootScope.searchStepKeyword = '';
		$scope.showSearchResult = false;

		if ($rootScope.enableTranslation) {
			if (GmCXt.getLXPLang()) {
				$scope.lang = GmCXt.getLXPLang();
			} else if ($rootScope.language) {
				$scope.lang = $rootScope.language;
			}
		}

		$scope.showBranchRulePreviewImageIndex = -1;

		storage.activeView.set($location.path());

		var activeTourId = $rootScope.activeTourId;
		activeTourId = (activeTourId) ? activeTourId : 0;

		$scope.tourId = "0";
		$scope.categoryId = "0";
		$scope.categoryName = "";

		if (angular.isDefined($state.params)) {
			if (angular.isDefined($state.params.tourId)) {
				$scope.tourId = $state.params.tourId;
			}

			if (angular.isDefined($state.params.categoryId)) {
				$scope.categoryId = $state.params.categoryId;

				if ($rootScope.getCategory($scope.categoryId))
					$scope.categoryName = $rootScope.getCategory($scope.categoryId).category_title;

			}
		}

		$scope.$watch('tour.is_locked', function(newValue, oldValue, scope) {

			if (newValue === "1" && newValue !== oldValue && scope.tour.user_id !== scope.user.user_id) {
				scope.tour.user_id = scope.user.user_id;
			}
		});

		$scope.STEP_TYPE_INLINE = GmCXt.STEP_TYPE_INLINE;
		$scope.STEP_TYPE_MESSAGE = GmCXt.STEP_TYPE_MESSAGE;

		$scope.isLocked = true;
		$scope.hideRegularView = false;
		$scope.showBranchLengthError = false;
		$scope.showAddLinkGuide = false;
		var treeLineNumber = 1;
		var branchStepProcessing = false;
		$scope.branchHeadIds = [];

		if ($rootScope.hasVideoInProgress($scope.tourId)) {
			$rootScope.pendingStepCount = 1;
		}

		$scope.makeTitleEditable = function() {
			$scope.branchTitleEditable = false;
		};

		function showHeadBranches(node) {

			if (node && node.head[0]) {

				if (mg$(".branchTreeHead" + node.head[0]).css('display') === "none") {
					mg$(".branchTreeHead" + node.head[0]).css("display", "block");
				}

				topBranchHead = $scope.getNodeFromTreeData(node.head[0]);
				showHeadBranches(topBranchHead);
			}
		}

		function showTailBranches(node) {

			if (node && node.tail) {

				if (mg$(".branchTreeHead" + node.tail).css('display') === "none")
					mg$(".branchTreeHead" + node.tail).css("display", "block");

				var topBranchTail = $scope.getNodeFromTreeData(node.tail);
				showTailBranches(topBranchTail);

			}
		}

		$scope.getNodeFromTreeData = function(id) {
			id = parseInt(id);
			for (var i = 0; i < $scope.treeData.length; i++) {
				if ($scope.treeData[i].id === id) {
					return $scope.treeData[i];
				}
			}
		};

		if (!$rootScope.FT.creatorApp) {
			$scope.resetBranchListItemFocus = function(node) {
				mg$(".mgPlayerJSTest_branch-dropdown-list-wrapper-" + node.branch.head + " .mgPlayerJSTest_branch-dropdown-list-item").removeClass("mgPlayerJSTest_active-item");
				mg$(".mgPlayerJSTest_branch-dropdown-list-wrapper-" + node.branch.head + " .mgPlayerJSTest_branch-dropdown-list-item-" + node.id).addClass("mgPlayerJSTest_active-item");
			};
		}

		$scope.toggleBranchView = function(id) {
			if (!$rootScope.FT.creatorApp) {
				mg$('.mgPlayerJSTest_collapse').css("display", "none");
				var node = $scope.getNodeFromTreeData(id);
				showHeadBranches(node);
				showTailBranches(node);
				mg$(".branchTreeHead" + id).css("display", "block");
				mg$("#mgPlayerJSTest_branch-dropdown-wrapper-" + node.branch.head + " .mgPlayerJSTest_branch-dropdown-selected-item").text(node.branch.name);
				$scope.resetBranchListItemFocus(node);
			}
		};

		function getStepHtml(node, step_img, err_img, prevNode) {
			var stepId = (prevNode && prevNode.step) ? prevNode.step.step_id : '';
			var stepType = (prevNode && prevNode.step) ? prevNode.step.step_type : '';
			var branchIndex = (node.branch && node.branch.index) ? node.branch.index : '';
			var stepOrder = (prevNode && prevNode.step) ? prevNode.step.step_order : '';
			var addCollapseClass = ($scope.branchPopulated && !$rootScope.FT.creatorApp) ? "mgPlayerJSTest_collapse" : "";
			var addPlayerClass = !$rootScope.FT.creatorApp ? " mgPlayerJSTest_player-step" : "";
			var stepTitle = htmlToPlaintext(node.step.step_title + ' ' + node.step.step_description);

			return "<div class='" + addCollapseClass + addPlayerClass + " step-wrapper branchTreeHead" + node.id + "' >" +
				"	<div class='step-item' ng-if='" + $rootScope.showSurveyStep(node.step) + "'>" +
				"		<div class='mgPlayerJSTest_merge-step-node' id='mgPlayerJSTest_merge-node' ng-if='mergeActive' ng-class='showMergeBorder(" + node.id + ")' ng-click='mergeNodeStep(" + node.step.step_id + ", " + node.id + ")'>" +
				"		</div>" +
				"		<div id='step-" + node.step.step_id + "'>" +
				"			<div class='step-title-wrapper mgPlayerJSTest_display-flex mgPlayerJSTest_display-inline-flex mgPlayerJSTest_align-items-center mgPlayerJSTest_position-relative'>" +
				"				<div class='mgPlayerJSTest_guide-title mgPlayerJSTest_text-overflow-ellipsis'>" + stepTitle + "</div>" +
				"				<div class='mgPlayerJSTest_title-tooltip-wrapper mgPlayerJSTest_position-right mgPlayerJSTest_overflow mgPlayerJSTest_overflow-y'>" +
				"					<div class='mgPlayerJSTest_tooltip-title'>" + stepTitle + "</div>" +
				"				</div> " +
				"			</div>" +
				"			<div class='step-action-menu-container' id='mgPlayerJSTest_edit_" + node.id + "' ng-if='" + ($rootScope.isUserLoggedIn() && $rootScope.FT.creatorApp && $rootScope.hasTourAccess($scope.tour) && (!$scope.tour.is_published)) + "'>" +
				"				<div class='step-pencil-icon' id='step-pencil-icon-" + node.step.step_id + "' ng-click=\"showMenuActionDropdown('" + node.step.step_id + "', $event)\" ng-if=" + !(node.step.step_type === 'video' && $scope.tour.is_published) + " ng-class=\"$root.pendingStepCount>0?'mgPlayerJSTest_disable-edit':''\">" +
				"					<svg width='18px' height='18px' viewBox='0 0 22 22' version='1.2' xmlns='https://www.w3.org/2000/svg' xmlns:xlink='https://www.w3.org/1999/xlink'>" +
				"						<defs></defs>" +
				"						<g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'>" +
				"							<g id='step-action-icons' fill='#757575'>" +
				"								<g id='more-actions'>" +
				"									<path d='M3.5,9 C2.125,9 1,10.125 1,11.5 C1,12.875 2.125,14 3.5,14 C4.875,14 6,12.875 6,11.5 C6,10.125 4.875,9 3.5,9 L3.5,9 Z M18.5,9 C17.125,9 16,10.125 16,11.5 C16,12.875 17.125,14 18.5,14 C19.875,14 21,12.875 21,11.5 C21,10.125 19.875,9 18.5,9 L18.5,9 Z M11,9 C9.625,9 8.5,10.125 8.5,11.5 C8.5,12.875 9.625,14 11,14 C12.375,14 13.5,12.875 13.5,11.5 C13.5,10.125 12.375,9 11,9 L11,9 Z' id='Shape'></path>" +
				"								</g>" +
				"							</g>" +
				"						</g>" +
				"					</svg>" +
				"				</div>" +
				"				<div id='step-menu-options-" + node.step.step_id + "' class='step-action-menu-options-dropdown'>" +
				"				<div class='step-action-menu-options-dropdown-item' ng-click=\"editStepFromBranchView('" + node.step.step_id + "')\" ng-hide='" + (($scope.tour.is_published) || (node.step.step_type === 'guide')) + "'>" +
				"					<div class='step-action-menu-options-dropdown-item-icon ege-inline-block-div' ng-bind-html='$root.svgs.iconEdit | unsafe'>" +
				"					</div>" +
				"					<div class='step-action-menu-options-dropdown-item-label ege-inline-block-div'>" + $rootScope.labels.btnEdit +
				"					</div>" +
				"				</div>" +
				"				<div class='horizontal-line' ng-hide='" + (($scope.tour.is_published) || (node.step.step_type === 'guide')) + "'>" +
				"				</div>" +
				"				<div class='horizontal-line' ng-hide=" + ($scope.tour.is_published) + " ng-if=" + ((node.step.step_type !== 'smartTip') && (node.step.step_type !== 'video') && (node.step.step_type !== 'guide')) + ">" +
				"				</div>" +
				"				<div class='step-action-menu-options-dropdown-item' ng-click=\"goToStepUrlFromBranchView('" + node.step.step_id + "')\" ng-if='" + ((node.step.step_type !== 'video') && (node.step.step_type !== 'guide') && !$rootScope.isDesktopGuide($scope.tour) && !$rootScope.isMobileGuide($scope.tour) && !$rootScope.isElectron) + "'>" +
				"					<div class='step-action-menu-options-dropdown-item-icon ege-inline-block-div' ng-bind-html='$root.svgs.iconGoToStepUrl | unsafe'>" +
				"					</div>" +
				"					<div class='step-action-menu-options-dropdown-item-label ege-inline-block-div'>" + $rootScope.labels.btnGoToStepUrl +
				"					</div>" +
				"				</div>" +
				"				<div class='horizontal-line' ng-if='" + ((node.step.step_type !== 'video') && (node.step.step_type !== 'guide')) + "'>" +
				"				</div>" +
				"				<div class='horizontal-line' ng-hide='" + (($scope.tour.is_published) || (node.id === $scope.tour.steps.length - 1)) + "'>" +
				"				</div>" +

				"				<div class='horizontal-line'  ng-if='" + ($rootScope.isOwnerOrAppAdmin() && (node.step.step_type === 'video') && $rootScope.edLogin) + "'>" +
				"				</div>" +
				"				<div class='step-action-menu-options-dropdown-item' ng-click=\"copyStep('" + node.step.step_id + "', '" + node.step.step_type + "', $event)\" " +
				"                    ng-hide='" + ($scope.tour.is_published) +
				"                 	' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex +
				"                    ng-class'={ 'disabled': " + node.step.step_screen_temp + "}'>" +
				"					<div class='step-action-menu-options-dropdown-item-icon ege-inline-block-div' ng-bind-html='$root.svgs.iconCopy | unsafe'>" +
				"					</div>" +
				"					<div class='step-action-menu-options-dropdown-item-label ege-inline-block-div'>" + $rootScope.labels.btnCopyStep +
				"					</div>" +
				"		    		</div>" +
				"				<div class='horizontal-line' ng-hide='" + (($scope.tour.is_published) || (node.id === $scope.tour.steps.length - 1)) + "'>" +
				"				</div>" +
				"				<div class='step-action-menu-options-dropdown-item' ng-click=\"findReplace('" + node.step.step_id + "')\" " +
				"                    ng-hide='" + ($scope.tour.is_published) +
				"                 	' ng-if='" + ($rootScope.isOwnerOrAppAdmin() && (node.step.step_type === 'inline')) + "' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex +
				"                    ng-class'={ 'disabled': " + node.step.step_screen_temp + "}'>" +
				"					<div class='step-action-menu-options-dropdown-item-icon ege-inline-block-div' ng-bind-html='$root.svgs.iconCopy | unsafe'>" +
				"					</div>" +
				"					<div class='step-action-menu-options-dropdown-item-label ege-inline-block-div'>" + $rootScope.labels.findAndReplace +
				"					</div>" +
				"		    	</div>" +
				"				<div class='horizontal-line' ng-hide='" + ($scope.tour.is_published) +
				"                 	' ng-if='" + ((node.step.step_type === 'inline')) + "' >" +
				"				</div>" +
				"				<div class='horizontal-line' ng-if='" + ((node.step.step_type === 'video')) + "'>" +
				"				</div>" +
				"				<div class='step-action-menu-options-dropdown-item' ng-click=\"deleteStepFromBranchView('" + node.step.step_id + "', $event)\" " +
				"                   ng-hide='" + (($scope.tour.is_published)) +
				"                   ' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex +
				"                    ng-class'={ 'disabled': " + node.step.step_screen_temp + "}'>" +
				"					<div class='step-action-menu-options-dropdown-item-icon ege-inline-block-div' ng-bind-html='$root.svgs.iconDelete | unsafe'>" +
				"					</div>" +
				"					<div class='step-action-menu-options-dropdown-item-label ege-inline-block-div'>" + $rootScope.labels.btnDelete +
				"					</div>" +
				"		    		</div>" +
				"		    	<div class='horizontal-line' ng-hide='" + ($scope.tour.is_published) + "'>" +
				"				</div>" +
				"		    	<div class='step-action-menu-options-dropdown-item' ng-click=\"moveStep('" + node.step.step_id + "', 'up', $event)\" ng-hide='" + (($scope.tour.is_published) || !$rootScope.getNodeFromTail(node.step.step_id, $scope.tour.tour_settings.play_structure)) + "'>" +
				"	                <div class='step-action-menu-options-dropdown-item-icon ege-inline-block-div' ng-bind-html='$root.svgs.iconMoveUp | unsafe'>" +
				"					</div>" +
				"                	<div class='step-action-menu-options-dropdown-item-label ege-inline-block-div'>" + $rootScope.labels.btnMoveUp +
				"					</div>" +
				"				</div>" +
				"          		<div class='horizontal-line' ng-hide='" + (($scope.tour.is_published) || !$rootScope.getNodeFromTail(node.step.step_id, $scope.tour.tour_settings.play_structure)) + "'>" +
				"				</div>" +
				"            	<div class='step-action-menu-options-dropdown-item' ng-click=\"moveStep('" + node.step.step_id + "', 'down', $event)\" ng-hide='" + (($scope.tour.is_published) || ($rootScope.getNode(node.step.step_id, $scope.tour.tour_settings.play_structure) && !$rootScope.getNode(node.step.step_id, $scope.tour.tour_settings.play_structure).tail)) + "'>" +
				"					<div class='step-action-menu-options-dropdown-item-icon ege-inline-block-div' ng-bind-html='$root.svgs.iconMoveDown | unsafe'>" +
				"                	</div>" +
				"                	<div class='step-action-menu-options-dropdown-item-label ege-inline-block-div'>" + $rootScope.labels.btnMoveDown + "</div>" +
				"           	</div>" +
				"          		<div class='horizontal-line' ng-hide='" + ($scope.tour.is_published) + "'>" +
				"				</div>" +

				"            	<div class='step-action-menu-options-dropdown-item' ng-if='" + ($rootScope.showAddAutomationOption($scope.tour) && $scope.tour.tour_type !== 'onboarding_tour') + "'  ng-click=\"openAutoConfigurationPopup(" + node.step.step_id + ")\">" +
				"					<div class='step-action-menu-options-dropdown-item-icon ege-inline-block-div' ng-include=\"'icons/start_guide_automation_icon.html'\">" +
				"                	</div>" +
				"                	<div class='step-action-menu-options-dropdown-item-label ege-inline-block-div'>" + $rootScope.labels.btnConfigAutomation + "</div>" +
				"           	</div>" +
				"				<div class='horizontal-line' ng-hide='" + ($scope.tour.is_published) + "'>" +
				"				</div>" +
				"            	<div class='step-action-menu-options-dropdown-item' ng-click=\"getGuideHistoryFromBranchMenu('" + node.step.step_id + "',$event )\" ng-hide='" + ($scope.tour.is_published) + "' ng-class'={ 'disabled': " + node.step.step_screen_temp + "}'>" +
				"					<div class='step-action-menu-options-dropdown-item-icon ege-inline-block-div' ng-bind-html='$root.svgs.iconCopy | unsafe'>" +
				"                	</div>" +
				"                	<div class='step-action-menu-options-dropdown-item-label ege-inline-block-div'>" + $rootScope.labels.history + "</div>" +
				"           		</div>" +
				"					<div class='horizontal-line' ng-hide='" + ($scope.tour.is_published) + "'>" +
				"					</div>" +
				"				</div>" +
				"			</div>" +
				"		</div>" +
				"		<div style='clear: both;'></div>" +
				"		<div class='step-image-wrapper' ng-click='playTourFromBranchView(" + node.step.step_id + ")'>" +
				"			<img class='step-image mgPlayerJSTest_custom-image' ng-src='" + step_img + "' err-src='" + err_img + "'/>" +
				"		</div>" +
				"	</div>" +
				" </div>" +
				"</div>";
		}

		$scope.openAutoConfigurationPopup = function(stepId) {
			var step = $rootScope.getStepFromTour(stepId, $scope.tour);
			$rootScope.openAutoConfigurationPopup($scope.tour, step);
		};

		$scope.getMessageStepThumbnail = function(step) {

			var imgUrl = $rootScope.staticContentPath + "technology.jpg";

			if (step.screen_url) {

				var domElems = step.step_settings.domElems;

				if (domElems && domElems.length > 0 && step.is_thumbnail_processed) {
					imgUrl = $rootScope.getImageURL(step.screen_url, "_thumb.png");
				} else if (step.is_screen_url_processed) {
					imgUrl = $rootScope.getImageURL(step.screen_url, "_cropped.png");
				} else {
					imgUrl = step.screen_url + $rootScope.getCdnSign();
				}
			}
			return imgUrl;
		};

		$scope.appendStep = function(node, prevNode) {

			var treeAppender = mg$('.step-view-type-branching');

			if (mg$.inArray(node.head[0], $scope.branchHeadIds) !== -1 && $rootScope.FT.creatorApp) {
				treeAppender = mg$(".branchTreeHead" + node.head[0]);
				$scope.branchHeadIds.push(node.id);
			}

			var step_img = GmCXt.conf.staticContentPath + "technology.jpg";
			var err_img = $rootScope.staticContentPath + "technology.jpg";

			if (node.step.step_screen) {

				switch (node.step.step_type) {

					case 'inline':
					case 'image':
						if (!node.step.is_screen_url_processed) {

							step_img = node.step.screen_url + $rootScope.getCdnSign();
						} else {

							step_img = $rootScope.getImageURL(node.step.screen_url, "_cropped.png");
						}

						break;

					case 'message':

						if (!node.step.is_screen_url_processed) {

							step_img = node.step.screen_url + $rootScope.getCdnSign();
						} else {

							step_img = $scope.getMessageStepThumbnail(node.step);
						}

						break;

					case 'smartTip':
						step_img = node.step.screen_url + $rootScope.getCdnSign();
						break;

					case 'guide':
						step_img = $rootScope.getImageURL(node.step.screen_url, "_thumb.png");
						break;

					case 'video':
						step_img = node.step.image_url + $rootScope.getCdnSign();
						break;

					case 'survey':
						if (node.step.image_url.indexOf('default_icon') !== -1) {
							step_img = $rootScope.getDefaultSurveyStepIcon();
						} else {
							step_img = node.step.image_url + $rootScope.getCdnSign();
						}
						break;
					case 'transport':
						step_img = $rootScope.getDefaultTransportStepIcon();
						break;
				}
			} else if (node.step.step_video_url && node.step.step_type === 'video') {
				step_img = node.step.image_url + $rootScope.getCdnSign();
				err_img = "https://salesuapi.blob.core.windows.net/default/video-thumb.png";
			}
			var stepHtmlContent = getStepHtml(node, step_img, err_img, prevNode);

			treeAppender.append($compile(stepHtmlContent)($scope));
		};

		function getBranchHtml(node, prevNode) {

			var stepId = (prevNode && prevNode.step) ? prevNode.step.step_id : '';
			var stepType = (prevNode && prevNode.step) ? prevNode.step.step_type : '';
			var branchIndex = (node.branch && node.branch.index) ? node.branch.index : '';
			var stepOrder = (prevNode && prevNode.step) ? prevNode.step.step_order : '';
			var addCollapseClass = ($scope.branchPopulated && !$rootScope.FT.creatorApp) ? "mgPlayerJSTest_collapse" : "";
			var branchClass = $rootScope.FT.creatorApp ? 'branch-wrapper' : 'branch-wrapper-player';
			var branchPlayerDropdown = '';
			if (!$rootScope.FT.creatorApp) {
				branchPlayerDropdown = "<button id='mgPlayerJSTest_branch-dropdown-wrapper-" + node.id + "' class='mgPlayerJSTest_branch-dropdown-wrapper mgPlayerJSTest_position-relative mgPlayerJSTest_display-flex mgPlayerJSTest_display-inline-flex mgPlayerJSTest_align-items-center mgPlayerJSTest_justify-content-space-between mgPlayerJSTest_lbl-btn' ng-click='toggleBranchDropdown(" + node.id + ",$event)'>" +
					"<div class='mgPlayerJSTest_branch-dropdown-selected-item mgPlayerJSTest_pointer-events-none'>" +
					node.step.branch[0].branchName +
					"</div>" +
					"<div class='mgPlayerJSTest_filter-dropdown-arrow mgPlayerJSTest_display-flex mgPlayerJSTest_align-items-center mgPlayerJSTest_justify-content-space-between mgPlayerJSTest_pointer-events-none' ng-include=\"'icons/down_arrow.html'\"></div>" +
					"<div id='mgPlayerJSTest_branch-dropdown-list-wrapper-" + node.id + "' class='mgPlayerJSTest_branch-dropdown-list-wrapper-" + node.id + " mgPlayerJSTest_branch-dropdown-list-wrapper mgPlayerJSTest_open-down mgPlayerJSTest_overflow mgPlayerJSTest_overflow-y'>" +
					"</div>" +
					"</button>";
			}

			var branchHeadClass = 'branch-head';

			if (node.step.step_type === GmCXt.STEP_TYPE_ERROR_HANDLER) {
				branchHeadClass += ' mgPlayerJSTest_error-head';
			}

			return "<div class='" + addCollapseClass + " " + branchClass + " branchTreeHead" + node.id + "'>" +
				"	<div class='" + branchHeadClass + "'>" +
				"<div class='mgPlayerJSTest_head-branch-icon' ng-if='" + (!$rootScope.FT.creatorApp) + "'>" +
				"<svg width=\"26px\" height=\"19px\" viewBox=\"0 0 26 19\" version=\"1.1\" xmlns=\"https://www.w3.org/2000/svg\" xmlns:xlink=\"https://www.w3.org/1999/xlink\">" +
				"<g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" opacity=\"0.5\">" +
				"<g id=\"02-branching-Steps-in-Slideshow\" transform=\"translate(-708.000000, -287.000000)\" fill=\"#FFFFFF\" fill-rule=\"nonzero\">" +
				"<g id=\"Group-17\" transform=\"translate(721.000000, 296.375000) scale(1, -1) rotate(90.000000) translate(-721.000000, -296.375000) translate(712.000000, 284.000000)\">" +
				"<path d=\"M17.9743355,3.54499151 C17.9743355,5.50285655 16.387209,7.08998302 14.429344,7.08998302 C12.4714789,7.08998302 10.8843525,5.50285655 10.8843525,3.54499151 C10.8843525,1.58714746 12.4714885,-1.50990331e-14 14.429344,-1.50990331e-14 C16.3871994,-1.50990331e-14 17.9743355,1.58714746 17.9743355,3.54499151 Z M16.7519246,3.54499151 C16.7519246,2.26226437 15.7120786,1.22241087 14.429344,1.22241087 C13.1466093,1.22241087 12.1067633,2.26226437 12.1067633,3.54499151 C12.1067633,4.82773767 13.1465978,5.86757216 14.429344,5.86757216 C15.7120901,5.86757216 16.7519246,4.82773767 16.7519246,3.54499151 Z\" id=\"Stroke-1\"></path>" +
				"<polygon id=\"Stroke-3\" points=\"2.93378608 6.47877759 4.15619694 6.47877759 4.15619694 18.2444822 2.93378608 18.2444822\"></polygon>" +
				"<path d=\"M7.08998302,3.54499151 C7.08998302,5.50285655 5.50285655,7.08998302 3.54499151,7.08998302 C1.58712647,7.08998302 -1.03828057e-12,5.50285655 -1.03828057e-12,3.54499151 C-1.03828057e-12,1.58714746 1.58713604,-1.50990331e-14 3.54499151,-1.50990331e-14 C5.50284698,-1.50990331e-14 7.08998302,1.58714746 7.08998302,3.54499151 Z M5.86757216,3.54499151 C5.86757216,2.26226437 4.82772614,1.22241087 3.54499151,1.22241087 C2.26225689,1.22241087 1.22241087,2.26226437 1.22241087,3.54499151 C1.22241087,4.82773767 2.26224535,5.86757216 3.54499151,5.86757216 C4.82773767,5.86757216 5.86757216,4.82773767 5.86757216,3.54499151 Z\" id=\"Stroke-5\"></path>" +
				"<path d=\"M7.08998302,21.1782835 C7.08998302,23.1361276 5.50284698,24.723275 3.54499151,24.723275 C1.58713604,24.723275 -1.03828057e-12,23.1361276 -1.03828057e-12,21.1782835 C-1.03828057e-12,19.2204185 1.58712647,17.633292 3.54499151,17.633292 C5.50285655,17.633292 7.08998302,19.2204185 7.08998302,21.1782835 Z M5.86757216,21.1782835 C5.86757216,19.8955374 4.82773767,18.8557029 3.54499151,18.8557029 C2.26224535,18.8557029 1.22241087,19.8955374 1.22241087,21.1782835 C1.22241087,22.4610107 2.26225689,23.5008642 3.54499151,23.5008642 C4.82772614,23.5008642 5.86757216,22.4610107 5.86757216,21.1782835 Z\" id=\"Stroke-7\"></path>" +
				"<path d=\"M13.8181385,8.63838031 L13.8181385,6.47877759 L15.0405494,6.47877759 L15.0405494,8.63838031 C15.0405494,10.5962244 13.4534134,12.1833718 11.4955579,12.1833718 L6.4787837,12.1833718 L6.4787837,10.960961 L11.4955579,10.960961 C12.7782925,10.960961 13.8181385,9.92110745 13.8181385,8.63838031 Z M6.47877759,10.960961 L6.47877759,12.1833718 C5.19603143,12.1833718 4.15619694,13.2232063 4.15619694,14.5059525 L2.93378608,14.5059525 C2.93378608,12.5480874 4.52091255,10.960961 6.47877759,10.960961 Z\" id=\"Combined-Shape\"></path>" +
				"</g>" +
				"</g>" +
				"</g>" +
				"</svg>" +
				"</div>" +
				"		<div  ng-if='mergeActive' class='mgPlayerJSTest_merge-branch-node' ng-class='showMergeBorder(" + node.id + ")' ng-click='mergeNodeStep(" + node.step.step_id + "," + node.id + ")'>" +
				"		</div>" +
				"		<div class='branch-title' ng-click='playTourFromBranchView(" + node.step.step_id + ")'>" +
				htmlToPlaintext(node.step.step_title) +
				"		</div>" +
				"		<div class='step-action-menu-container' id='mgPlayerJSTest_edit_" + node.id + "' ng-if='" + ($rootScope.isUserLoggedIn() && $rootScope.FT.creatorApp && $rootScope.hasTourAccess($scope.tour) && (!$scope.tour.is_published)) + "'>" +
				"		<div class='step-action-menu-container' ng-if='" + ($rootScope.isUserLoggedIn() && $rootScope.FT.creatorApp && $rootScope.hasTourAccess($scope.tour) && (!$scope.tour.is_published)) + "'>" +
				"			<div class='step-pencil-icon' id='step-pencil-icon-" + node.step.step_id + "' ng-click='showMenuActionDropdown(" + node.step.step_id + ", $event)'>" +
				"				<svg width='18px' height='18px' viewBox='0 0 22 22' version='1.1' xmlns='https://www.w3.org/2000/svg' xmlns:xlink='https://www.w3.org/1999/xlink'>" +
				"					<defs></defs>" +
				"						<g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'>" +
				"						<g id='step-action-icons' fill='#757575'>" +
				"							<g id='more-actions'>" +
				"								<path d='M3.5,9 C2.125,9 1,10.125 1,11.5 C1,12.875 2.125,14 3.5,14 C4.875,14 6,12.875 6,11.5 C6,10.125 4.875,9 3.5,9 L3.5,9 Z M18.5,9 C17.125,9 16,10.125 16,11.5 C16,12.875 17.125,14 18.5,14 C19.875,14 21,12.875 21,11.5 C21,10.125 19.875,9 18.5,9 L18.5,9 Z M11,9 C9.625,9 8.5,10.125 8.5,11.5 C8.5,12.875 9.625,14 11,14 C12.375,14 13.5,12.875 13.5,11.5 C13.5,10.125 12.375,9 11,9 L11,9 Z' id='Shape'></path>" +
				"							</g>" +
				"						</g>" +
				"					</g>" +
				"				</svg>" +
				"			</div>" +
				"			<div id='step-menu-options-" + node.step.step_id + "' class='step-action-menu-options-dropdown'>" +
				"				<div class='step-action-menu-options-dropdown-item' ng-click=\"editStepFromBranchView('" + node.step.step_id + "')\" ng-hide='" + (($scope.tour.is_published) || (node.step.step_type === 'guide')) + "'>" +
				"            		<div class='step-action-menu-options-dropdown-item-icon ege-inline-block-div' ng-bind-html='$root.svgs.iconEdit | unsafe'></div>" +
				"            		<div class='step-action-menu-options-dropdown-item-label ege-inline-block-div'>{{$root.labels.btnEdit}}</div>" +
				"        		</div>" +
				"        		<div class='horizontal-line' ng-if='" + ((node.step.step_type === 'video')) + "'></div>" +
				"        		<div class='step-action-menu-options-dropdown-item' ng-click=\"deleteStepFromBranchView('" + node.step.step_id + "',$event)\" " +
				"                   ng-hide='" + ($scope.tour.is_published) + "' ng-class'={ 'disabled': " + node.step.step_screen_temp + "}'" +
				"                   ' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex + "'>" +
				"            		<div class='step-action-menu-options-dropdown-item-icon ege-inline-block-div' ng-bind-html='$root.svgs.iconDelete | unsafe'></div>" +
				"            		<div class='step-action-menu-options-dropdown-item-label ege-inline-block-div'>" + $rootScope.labels.btnDelete + "</div>" +
				"        		</div>" +
				"    		</div>" +
				"		</div>" +
				"		</div>" +
				branchPlayerDropdown +
				"	</div>" +
				"</div>";
		}

		$scope.appendBranch = function(node, prevNode) {
			var treeAppender = mg$('.step-view-type-branching');
			if (mg$.inArray(node.head[0], $scope.branchHeadIds) !== -1 && $rootScope.FT.creatorApp) treeAppender = mg$(".branchTreeHead" + node.head[0]);
			$scope.branchHeadIds.push(node.id);
			var branchHtmlContent = getBranchHtml(node, prevNode);
			treeAppender.append($compile(branchHtmlContent)($scope));
		};

		function getPlusHtml(node, prevNode, branchName, lastStepWrapper) {

			var stepOrder = (prevNode && prevNode.step) ? prevNode.step.step_order : '';
			var stepId = (prevNode && prevNode.step) ? prevNode.step.step_id : '';
			var stepType = (prevNode && prevNode.step) ? prevNode.step.step_type : '';
			var branchIndex = (node.branch && node.branch.index) ? node.branch.index : '';
			var branchNameDisplay = (branchName !== '') ? 'block' : 'none';
			var branchNameClass = (branchName !== '') ? '' : 'plus-step-branch-notitle';
			var branchNameClick = (branchName !== '' && !$rootScope.FT.creatorApp) ? 'mgPlayerJSTest_branch-click' : '';

			var hideAddStepForNonErrStepOptions = (stepType === GmCXt.STEP_TYPE_ERROR_HANDLER && branchIndex === "1") ? true : false;

			var hideAddStepBtnForErrHandle = false;
			var hideAddStepBtnWithLineForErrHandle = false;

			var showPasteStepBtn = false;
			if (!hideAddStepForNonErrStepOptions && ($rootScope.copiedStep || $rootScope.copyStepsList)) {
				showPasteStepBtn = true;
			}

			if (hideAddStepForNonErrStepOptions && node.tail !== null) {
				//will hide the Add Step between ErrHandler and Inline/Message on branch 1
				hideAddStepBtnForErrHandle = true;
			}

			if (prevNode.branch && prevNode.branch.index === "1" && prevNode.branch.stepType === GmCXt.STEP_TYPE_ERROR_HANDLER) {
				//will hide the Add Step after the step group of ErrHandler
				hideAddStepBtnWithLineForErrHandle = true;
			}

			return "<div class='plus-wrapper " + lastStepWrapper + " branchTreeHead" + node.id + "' ng-hide='" + hideAddStepBtnWithLineForErrHandle + "' >" +
				"	<div class='plus-step-branch-title " + branchNameClick + " " + branchNameClass + "' style='display:" + branchNameDisplay + "' ng-non-bindable>" + branchName + "</div>" +
				"	<div class='mgPlayerJSTest_delete-connection' ng-hide='" + $scope.tour.is_published + "' ng-class='getDeleteNodeClassName(" + node.tail + ")' ng-bind-html='$root.svgs.iconDelete | unsafe' ng-click='deleteConnection(" + node.id + "," + stepId + ",$event)' branchIndex=" + branchIndex + "></div>" +
				"	<div class='plus-step' ng-hide='" +
				(($rootScope.prevStepData && $rootScope.prevStepData.step_id &&
						$rootScope.prevStepData.step_id === stepId && $rootScope.pendingStepCount > 0) ||
					$scope.tour.is_published) + "'>" +
				"		<div class='plus-step-add mgPlayerJSTest_btn-default' ng-click='showBranchAddDropDown($event," + node.id + ")' ng-class=\"{'mgPlayerJSTest_disable-add-step':$root.pendingStepCount>0}\" ng-if=" + ($rootScope.hasTourAccess($scope.tour) && !hideAddStepBtnForErrHandle) + ">Add Step</div>" +
				"		<div class='branch-addstep-menu branch-addstep-menu-" + node.id + "'>" +
				"		<div class='branch-addstep-menu-inner-container'>" +
				"			<div class='branch-addstep-menu-item branch-add-inline-step' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex + "' ng-click=\"addInlineStepFromBranchMenu('" + stepId + "', $event)\">" +
				"				<div class='branch-addstep-icons ege-inline-block-div' ng-bind-html='$root.svgs.iconAddStepInline | unsafe'></div>" +
				"				<div class='ege-inline-block-div'>{{$root.labels.btnAddStepI}}</div>" +
				"			</div>" +
				"			<div class='branch-addstep-menu-item branch-add-message-step' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex + "' ng-click=\"addMessageStepFromBranchMenu('" + stepId + "', $event)\">" +
				"				<div class='branch-addstep-icons ege-inline-block-div' ng-bind-html='$root.svgs.iconAddStepMessage | unsafe'></div>" +
				"				<div class='ege-inline-block-div'>{{$root.labels.btnAddStepM}}</div>" +
				"			</div>" +
				"			<div ng-if=" + ($rootScope.isGuide($scope.tour) && !hideAddStepForNonErrStepOptions) + " class='branch-addstep-menu-item'>" +
				"				<div class='branch-addstep-icons ege-inline-block-div' ng-bind-html='$root.svgs.iconImageStep | unsafe'></div>" +
				"				<div class='ege-inline-block-div'>{{$root.labels.btnImageStep}}</div>" +
				"				<div class='branch-addstep-icons-arrow ege-inline-block-div' ng-bind-html='$root.svgs.iconDropdownArrowDirectionLeft | unsafe'></div>" +
				"				<div class='branch-addstep-submenu'>" +
				"					<div class='branch-addstep-menu-item branch-add-uploadm-step' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex + "' ng-click=\"addUploadImageStepFromBranchMenu('" + stepId + "', $event)\">" +
				"						<div class='branch-addstep-icons ege-inline-block-div' ng-bind-html='$root.svgs.iconImageStepUploadImage | unsafe'></div>" +
				"						<div class='ege-inline-block-div'>{{$root.labels.btnAddStepU}}</div>" +
				"					</div>" +
				"					<div class='branch-addstep-menu-item add-step-capture-screen branch-add-captures-step' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex + "' ng-click=\"addCaptureScreenStepFromBranchMenu('" + stepId + "', $event)\">" +
				"						<div class='branch-addstep-icons ege-inline-block-div' ng-bind-html='$root.svgs.iconImageStepCaptureScreen | unsafe'></div>" +
				"						<div class='ege-inline-block-div'>{{$root.labels.btnAddStepC}}</div>" +
				"					</div>" +
				"				</div>" +
				"			</div>" +
				"			<div ng-if=" + ($rootScope.isGuide($scope.tour) && !hideAddStepForNonErrStepOptions) + " class='branch-addstep-menu-item'>" +
				"				<div class='branch-addstep-icons ege-inline-block-div' ng-bind-html='$root.svgs.iconVideoStep | unsafe'></div>" +
				"				<div class='ege-inline-block-div'>{{$root.labels.btnVideoStep}}</div>" +
				"				<div class='branch-addstep-icons-arrow ege-inline-block-div' ng-bind-html='$root.svgs.iconDropdownArrowDirectionLeft | unsafe'></div>" +
				"				<div class='branch-addstep-submenu'>" +
				"					<div ng-hide = " + $rootScope.isElectron + " class='branch-addstep-menu-item branch-add-screencast-step' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex + "' ng-click=\"addCreateVideoStepFromBranchMenu('" + stepId + "', $event)\">" +
				"						<div class='branch-addstep-icons ege-inline-block-div' ng-bind-html='$root.svgs.iconVideoStepScreenCast | unsafe'></div>" +
				"						<div class='ege-inline-block-div'>{{$root.labels.btnVideoStepScreenCast}}</div>" +
				"					</div>" +
				"					<div class='branch-addstep-menu-item branch-add-uploadv-step' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex + "' ng-click=\"addCreateVideoUploadStepFromBranchMenu('" + stepId + "', $event)\">" +
				"						<div class='branch-addstep-icons ege-inline-block-div' ng-bind-html='$root.svgs.iconVideoStepUploadVideo | unsafe'></div>" +
				"						<div class='ege-inline-block-div'>{{$root.labels.btnVideoStepVideoUpload}}</div>" +
				"					</div>" +
				"					<div ng-hide = " + $rootScope.isElectron + " class='branch-addstep-menu-item branch-add-camerav-step' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex + "' ng-click=\"addCreateVideoCaptureStepFromBranchMenu('" + stepId + "', $event)\">" +
				"						<div class='branch-addstep-icons ege-inline-block-div' ng-bind-html='$root.svgs.iconVideoStepVideoCapture | unsafe'></div>" +
				"						<div class='ege-inline-block-div'>{{$root.labels.btnVideoStepVideoCapture}}</div>" +
				"					</div>" +
				"				</div>" +
				"			</div>" +
				"			<div ng-if=" + !hideAddStepForNonErrStepOptions + " class='branch-addstep-menu-item branch-add-linkGuide-step' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex + "' ng-click=\"addLinkGuideStepFromBranchMenu('" + stepId + "', $event)\">" +
				"				<div class='branch-addstep-icons ege-inline-block-div' ng-bind-html='$root.svgs.iconLinkGuide | unsafe'></div>" +
				"				<div class='ege-inline-block-div' ng-if=" + $rootScope.isGuide($scope.tour) + ">{{$root.labels.linkGuide}}</div>" +
				"			</div>" +
				"			<div ng-if=" + !hideAddStepForNonErrStepOptions + " class='branch-addstep-menu-item branch-add-split-step' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex + "'  ng-click=\"addErrorHandlerStepFromBranchMenu('" + stepId + "', $event)\">" +
				"				<div class='branch-addstep-icons ege-inline-block-div' ng-bind-html='$root.svgs.iconErrorHandlerStep | unsafe' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex + "'></div>" +
				"				<div class='ege-inline-block-div'>{{$root.labels.btnAddErrorHandlerStep}}</div>" +
				"			</div>" +
				"			<div ng-if=" + !hideAddStepForNonErrStepOptions + " class='branch-addstep-menu-item branch-add-split-step' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex + "' >" +
				"				<div class='branch-addstep-icons ege-inline-block-div' ng-bind-html='$root.svgs.iconSplitStep | unsafe' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex + "'></div>" +
				"				<div class='ege-inline-block-div'>{{$root.labels.btnAddBranchStep}}</div>" +
				"				<div class='branch-addstep-icons-arrow ege-inline-block-div' ng-bind-html='$root.svgs.iconDropdownArrowDirectionLeft | unsafe'></div>" +
				"				<div class='branch-addstep-submenu'>" +
				"					<div ng-hide = " + $rootScope.isElectron + " class='branch-addstep-menu-item' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex + "' ng-click=\"addSplitInlineStepFromBranchMenu('" + stepId + "', $event,'Rule Based')\">" +
				"						<div class='branch-addstep-icons ege-inline-block-div mgPlayerJSTest_item-icon-mid-size' ng-bind-html='$root.svgs.iconBranchStepRuleBased | unsafe'></div>" +
				"						<div class='ege-inline-block-div'>{{$root.labels.btnAddRuleBasedBranchStep}}</div>" +
				"					</div>" +
				"					<div class='branch-addstep-menu-item' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex + "' ng-click=\"addSplitInlineStepFromBranchMenu('" + stepId + "', $event,'Quick Branch')\">" +
				"						<div class='branch-addstep-icons ege-inline-block-div mgPlayerJSTest_item-icon-mid-size' ng-bind-html='$root.svgs.iconBranchStepQuickAdd | unsafe'></div>" +
				"						<div class='ege-inline-block-div'>{{$root.labels.btnAddQuickBranchStep}}</div>" +
				"					</div>" +
				"					<div ng-hide = " + $rootScope.isElectron + " class='branch-addstep-menu-item' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex + "' ng-click=\"addSplitInlineStepFromBranchMenu('" + stepId + "', $event,'User Selection')\">" +
				"						<div class='branch-addstep-icons ege-inline-block-div mgPlayerJSTest_item-icon-mid-size' ng-bind-html='$root.svgs.iconBranchStepUserSelection | unsafe'></div>" +
				"						<div class='ege-inline-block-div'>{{$root.labels.btnAddUserChoiceBranchStep}}</div>" +
				"					</div>" +
				"				</div>" +
				"			</div>" +
				"			<div ng-if=" + !hideAddStepForNonErrStepOptions + " class='branch-addstep-menu-item branch-add-split-step' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex + "'  ng-click=\"addSentimentStepFromBranchmenu('" + stepId + "', $event)\" ng-if=" + $rootScope.showAddSurveyStep($scope.tour) + ">" +
				"				<div class='branch-addstep-icons ege-inline-block-div' ng-bind-html='$root.svgs.iconSurveyStep | unsafe' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex + "'></div>" +
				"				<div class='ege-inline-block-div'>{{$root.labels.btnAddSurveyStep}}</div>" +
				"			</div>" +
				"			<div ng-if=" + !hideAddStepForNonErrStepOptions + " class='branch-addstep-menu-item branch-add-split-step' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex + "'  ng-click=\"addTransportStepFromBranchmenu('" + stepId + "', $event)\" ng-if=" + $rootScope.isGuide($scope.tour) + ">" +
				"				<div class='branch-addstep-icons ege-inline-block-div' style='white-space: normal;' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex + "'> " + GmCXt.svgs.iconExternalLink + "</div>" +
				"				<div class='ege-inline-block-div'>{{$root.labels.btnAddTransportStep}}</div>" +
				"			</div>" +
				"			<div ng-if=" + !hideAddStepForNonErrStepOptions + " class='branch-addstep-menu-item branch-add-split-step' stepId='" + stepId + "' stepType='" + stepType + "' branchindex='" + branchIndex + "'  ng-click=\"pasteStepFromBranchMenu( $event , '" + stepId + "', '" + stepType + "')\" ng-hide=' " + ($scope.tour.is_published) + " || !$root.copiedStep'>" +
				"				<div class='branch-addstep-icons ege-inline-block-div' ng-bind-html='$root.svgs.iconPasteStep | unsafe' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex + "'></div>" +
				"				<div class='ege-inline-block-div'>{{$root.labels.btnPasteStep}}</div>" +
				"			</div>" +
				"			<div ng-if=" + !hideAddStepForNonErrStepOptions + " class='branch-addstep-menu-item branch-add-split-step' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex + "'  ng-click=\"addMergeStep('" + stepId + "', $event, " + node.id + ")\" ng-if=" + (node.tail === null) + ">" +
				"				<div class='branch-addstep-icons ege-inline-block-div' ng-bind-html='$root.svgs.iconMergeStep | unsafe' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex + "'></div>" +
				"				<div class='ege-inline-block-div'>{{$root.labels.btnAddMergeStep}}</div>" +
				"			</div>" +
				"			<div ng-if=" + showPasteStepBtn + " id='mgPlayerJSTest_option-add-guide-paste' class='branch-addstep-menu-item branch-add-split-step' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex + "'  ng-click=\"addPasteStepFromBranchMenu('" + stepId + "', $event, " + node.id + ")\" ng-hide=' " + ($scope.tour.is_published) + " || !$root.copyStepsList' ng-if=" + (node.tail === null) + ">" +
				"				<div class='branch-addstep-icons ege-inline-block-div' ng-bind-html='$root.svgs.iconPasteStep | unsafe' stepId='" + stepId + "' stepType='" + stepType + "' stepOrder='" + stepOrder + "' branchIndex='" + branchIndex + "'></div>" +
				"				<div class='ege-inline-block-div'>{{$root.labels.btnPasteStep}}</div>" +
				"			</div>" +
				"		</div>" +
				"		</div>" +
				"	</div>" +
				"	<div class='mgPlayerJSTest_steps-progress-container' ng-show='" + ($rootScope.prevStepData && $rootScope.prevStepData.step_id && ($rootScope.prevStepData.step_id === stepId) && ($rootScope.pendingStepCount > 0)) + "'> Saving " + $rootScope.pendingStepCount + " step(s) </div>" +
				"</div>";
		}

		function getPlayerPlusHtml(node, prevNode, branchName, lastStepWrapper) {

			return "<div class='plus-wrapper-player " + lastStepWrapper + " branchTreeHead" + node.id + "'>" +
				"	<div class='plus-step-branch-title' style='display:none' ng-non-bindable>" + branchName + "</div>" +
				"</div>";

		}

		$scope.appendPlus = function(node, prevNode) {

			var prevNodeBranch = $scope.getNodeFromTreeData(node.head[0]);
			var treeAppender = mg$('.step-view-type-branching');
			var branchName = (node.branch && node.branch.name) ? node.branch.name : '';
			var lastStepWrapper = '';

			if (prevNodeBranch.type === 'b' && branchName) {
				mg$("#mgPlayerJSTest_branch-dropdown-list-wrapper-" + prevNodeBranch.id).append("<button class='mgPlayerJSTest_branch-dropdown-list-item mgPlayerJSTest_lbl-btn mgPlayerJSTest_branch-dropdown-list-item-" + node.id + "' value='" + node.id + "'>" + branchName + "</button>");
				if (!$scope.firstDropId && $scope.branchPopulated) $scope.firstDropId = node.id;

				if (!$rootScope.FT.creatorApp) {
					if (node && node.branch.index === '0') {
						$scope.resetBranchListItemFocus(node);
					}
				}
			}

			if (mg$.inArray(node.head[0], $scope.branchHeadIds) !== -1 && $rootScope.FT.creatorApp) {
				treeAppender = mg$(".branchTreeHead" + node.head[0]);
				treeAppender.parents().removeClass('step-tail-large step-tail-small');
				lastStepWrapper = 'step-tail-small';
				$scope.branchHeadIds.push(node.id);
			} else if (branchName && $rootScope.FT.creatorApp) {

			}

			lastStepWrapper = (branchName !== '') ? 'step-tail-large' : lastStepWrapper;
			var plusHtmlContent;
			if ($rootScope.FT.creatorApp) {
				plusHtmlContent = getPlusHtml(node, prevNode, branchName, lastStepWrapper);
			} else {
				plusHtmlContent = getPlayerPlusHtml(node, prevNode, branchName, lastStepWrapper);
			}

			treeAppender.append($compile(plusHtmlContent)($scope));
		};

		$scope.updateBranchPrevStepData = function(e) {
			var stepId = mg$(e.target).closest('.branch-addstep-menu-item').attr("stepId");
			var stepType = mg$(e.target).closest('.branch-addstep-menu-item').attr("steptype");
			var branchIndex = mg$(e.target).closest('.branch-addstep-menu-item').attr("branchindex");

			var step = $rootScope.getStepFromTour(stepId, $scope.tour);
			var automationSteps = $rootScope.getAutomationStepsInBranching(step, $scope, branchIndex);
			if (automationSteps.length > 0) {
				var previousStep = automationSteps[automationSteps.length - 1];
				stepId = previousStep.step_id;
				stepType = previousStep.step_type;
				branchIndex = "";
			}

			if (!$rootScope.prevStepData) $rootScope.prevStepData = {};

			if (step.step_settings.inlineBranch) {
				$rootScope.prevStepData.step_settings = {};
				$rootScope.prevStepData.step_settings.inlineBranch = true;
			}

			$rootScope.prevStepData.step_type = stepType;
			$rootScope.prevStepData.step_id = stepId;
			$rootScope.prevStepData.branch_index = branchIndex;

		};

		$scope.showBranchAddDropDown = function(event, id) {

			if (!$rootScope.isGuideInOriginalLang($scope.tour, true)) {
				return;
			}

			if (GmCXt.checkStepLimit(parseInt($scope.tour.step_count))) {
				mgError.on({
					code: 1018
				});
				return;
			}

			if (GmCXt.isDomainInActiveApp()) {
				var sel = '.branch-addstep-menu-' + id;
				mg$('.branch-addstep-menu').slideUp(200);

				if (!mg$(sel).is(':visible')) {
					mg$(sel).slideDown(200);
				}
			} else {
				$rootScope.handleDomainError();
			}
		};

		$scope.deleteStepFromBranchView = function(id, e) {
			tourViewCreator.deleteStepFromBranchView(id, e, $scope);
		};

		$scope.playTourFromBranchView = function(stepId) {
			var step = $rootScope.getStepFromTour(stepId, $scope.tour);
			$scope.guideAction('', step);
		};

		$scope.populateTreeHTML = function(treeData) {
			$scope.branchingViewZoom = 10;
			$scope.branchPopulated = false;
			mg$('.step-view-type-branching').css({
				'transform': 'scale(1) translate(0px,0px)'
			});
			$scope.treeData = treeData;
			mg$('.step-view-type-branching').empty();
			$scope.firstDropId = false;

			for (var i = 0; i < treeData.length; i++) {

				var type = treeData[i].type;
				var prevNode = undefined;
				var prevPlusNodeId = treeData[i].head[0];
				if ((prevPlusNodeId !== undefined && prevPlusNodeId !== null)) {
					if (treeData[prevPlusNodeId].head[0] !== undefined &&
						treeData[prevPlusNodeId].head[0] !== null) {
						var prevStepNodeId = treeData[prevPlusNodeId].head[0];
						prevNode = treeData[prevStepNodeId];
					}
				}

				switch (type) {
					case "s":
						$scope.appendStep(treeData[i], prevNode);
						break;
					case "b":
						$scope.appendBranch(treeData[i], prevNode);
						$scope.branchPopulated = true;
						break;
					case "p":
						$scope.appendPlus(treeData[i], treeData[prevPlusNodeId]);
						break;
					default:
						break;
				}
			}

			mg$('.mgPlayerJSTest_collapse').css("display", "none");

			if (!$scope.$$phase) $scope.$apply();

			if ($rootScope.FT.creatorApp) {
				$timeout(function() {
					$scope.populateMergeBranch(treeData);
				}, 0);
			} else {
				$scope.toggleBranchView($scope.firstDropId);
			}

			if (!$rootScope.FT.creatorApp) {
				mg$(".mgPlayerJSTest_branch-dropdown-list-item").click(function(ev) {
					var nodeId = ev.currentTarget.getAttribute("value");
					$scope.toggleBranchView(nodeId);
				});

				$scope.toggleBranchDropdown = function(nodeId, $event) {
					mg$('.mgPlayerJSTest_branch-dropdown-list-wrapper').slideUp(200);
					var dropdownEl = mg$('.mgPlayerJSTest_branch-dropdown-list-wrapper-' + nodeId);

					if (dropdownEl && !dropdownEl.is(':visible')) {
						dropdownEl.slideDown(200);
					}
				};
			}
		};

		function findNextNonAutomationStepInThisBranch(stepId, tour) {
			var itr = function(id) {
				var step = $rootScope.getStepFromTour(id, tour);
				if (GmCXt.isAutomationStep(step)) {
					var node = $rootScope.getNode(id, $scope.tour.tour_settings.play_structure);
					if (node && node.tail) {
						return itr(node.tail);
					} else {
						return;
					}
				}
				return step;
			};
			return itr(stepId);
		}

		$scope.updateViewTree = function() {
			var NODE_PLUS = 'p';
			var NODE_STEP = 's';
			var NODE_BRANCH = 'b';
			treeLineNumber = 1;

			var PS = $scope.tour.tour_settings.play_structure;
			var steps = $scope.tour.filteredSteps;
			PS = GmCXt.repairPlayStructure(PS, $scope.tour.steps);
			var mainStepId;
			if (PS && PS.length > 0) {
				mainStepId = (PS[0].id).toString();
			} else {
				mainStepId = null;
			}
			var lastNode = null;
			var nodeId = 0;

			var tree = [];
			var numberOfBranchSteps = 0;

			var errHandle = false;

			if ($rootScope.FT.creatorApp) {
				for (var i = 0; i < steps.length; i++) {
					if (GmCXt.checkForBranchVariationSteps(steps[i])) numberOfBranchSteps++;
				}
			}

			function addStep(stepId, branch, head1) {

				if (!branch) branch = null;
				if (head1 === undefined) head1 = null;
				if ((stepId === null || stepId === false || stepId === -1) &&
					treeLineNumber === 1 && !branchStepProcessing && numberOfBranchSteps === 0) {
					lastNode = addNode(NODE_PLUS, stepId, branch, head1);
					$scope.populateTreeHTML(tree);
					return;
				} else if (stepId === null || stepId === false || stepId === -1) {
					lastNode = addNode(NODE_PLUS, stepId, branch, head1);
					treeLineNumber--;
					return;
				}

				var step = angular.copy(getStep(stepId));

				// Add plus button for every step except first step in a guide.

				if (step && stepId !== mainStepId) {
					if (branch != null) {
						lastNode = addNode(NODE_PLUS, null, branch, head1, errHandle);
					} else {
						lastNode = addNode(NODE_PLUS, null, null, head1);
					}
				}

				if (lastNode && head1 !== null) updateTail(head1, lastNode.id);

				// If step node already exists, update it's head and return
				if ($rootScope.FT.creatorApp) {
					var nodeIndex = indexOfNode(stepId);
					if (nodeIndex !== -1) {
						updateHead(nodeIndex);
						updateTail(lastNode.id, nodeIndex);
						if (treeLineNumber === 1 && !branchStepProcessing && numberOfBranchSteps === 0) {
							$scope.populateTreeHTML(tree);
						} else
							treeLineNumber--;
						return;
					}
				}
				if (GmCXt.checkForBranchVariationSteps(step)) {

					addBranchStep(step, $rootScope.getNode(step.step_id, $scope.tour.tour_settings.play_structure));

				} else if (step) {

					// Add step node
					lastNode = addNode(NODE_STEP, step, branch);

					// Repeat for next step
					addStep(getTail(step.step_id), null, lastNode.id);
				}
			}

			if (mainStepId) {
				var step = findNextNonAutomationStepInThisBranch(mainStepId, $scope.tour);
				if (step) mainStepId = step.step_id;
			}

			if (mainStepId !== null) {
				addStep(mainStepId);
			}

			function updateHead(index) {
				var node = tree[index];
				node.head.push(lastNode.id);
			}

			function updateTail(index, nodeId) {
				if ($rootScope.FT.creatorApp || tree[index].tail === null)
					tree[index].tail = nodeId;
			}

			function indexOfNode(stepId) {
				var index = -1;
				for (var i = 0, j = tree.length; i < j; i++) {
					var step = tree[i].step;
					if (step && step.step_id === stepId) {
						index = i;
						break;
					}
				}
				return index;
			}

			function addNode(type, step, branch, head) {

				if (!step) step = null;
				if (!branch) branch = null;
				if (head === undefined || head === null || head.length === 0) {
					head = [];
					if (lastNode) {
						head = lastNode.id;
					} else {
						head = null;
					}
				}

				var node = {
					id: nodeId++,
					type: type,
					step: step,
					head: [head],
					tail: null,
					branch: branch
				};

				tree[node.id] = node;
				if (head) updateTail(head, node.id);
				return node;
			}

			function getStep(id) {

				// fetch step from step id
				for (var i = 0; i < steps.length; i++) {
					if (steps[i].step_id === id) {
						return steps[i];
					}
				}
			}

			function getTail(id) {
				for (var i = 0; i < PS.length; i++) {
					if (PS[i].id === id) {
						id = PS[i].tail;
						break;
					}
				}
				var nextStep = findNextNonAutomationStepInThisBranch(id, $scope.tour);
				if (nextStep) return nextStep.step_id;
				else return null;
			}

			function addBranchStep(step, nodeBranch) {
				if (!$rootScope.FT.creatorApp) numberOfBranchSteps++;

				var branches = angular.copy(nodeBranch.branch);
				var stepBranches = angular.copy(step.step_settings.branch);
				var stepBranchIndex = 0;
				var branchNode = addNode(NODE_BRANCH, step);
				lastNode = branchNode;

				function processBranch(branch) {
					if (branches.indexOf(branch) === (branches.length - 1)) {
						branchStepProcessing = false;
					}
					var nonAutoStep = findNextNonAutomationStepInThisBranch(branch.tail, $scope.tour);
					if (nonAutoStep) var stepId = nonAutoStep.step_id;
					else stepId = null;
					var obj = {
						name: stepBranches[stepBranchIndex].branchName,
						index: branches.indexOf(branch).toString(),
						tail: stepId,
						head: branchNode.id,
						stepType: step.step_type
					};

					if (branch.tail !== null && branch.tail !== false && branch.tail !== -1) {
						addStep(stepId, obj, branchNode.id);
					} else {
						addStep(null, obj, branchNode.id);
					}
				}

				branchStepProcessing = true;
				if (branches) {
					for (var i = 0; i < branches.length; i++) {
						stepBranchIndex = i;
						if (branches[i]) {
							if (i > 0) {
								treeLineNumber++;
							}
							if (i === branches.length - 1) {
								numberOfBranchSteps--;
							}
							processBranch(branches[i]);
						}
					}
				}
				branchStepProcessing = false;
			}
		};

		function checkIfFormSubmit() {
			var steps = $scope.tour.steps;

			steps.forEach(function(s) {
				var settings = s.step_settings;
				if (settings.smartTip.type === 'formSubmit')
					return true;
			});

			return false;
		}

		$scope.gotTour = function(_tour) {

			_tour.filteredSteps = GmCXt.filterOutAutomationSteps(_tour.steps);

			$scope.tour = _tour;

			var isTrackingGuide = $rootScope.isTrackingGuide(_tour);

			if (isTrackingGuide) {
				$scope.tour.filteredSteps = [];
			}

			$scope.tour.uuid = GmCXt.getUUID();

			if ($scope.tour.tour_id === activeTourId && !$rootScope.isScreenRecorderClose) {
				$scope.tour.screencastInProgress = true;
			} else {
				$scope.tour.screencastInProgress = false;
			}

			if ($rootScope.isPublicApp) $scope.tour.is_public = true;

			$rootScope.isDefaultLang = GmCXt.checkDefaultLangForTour($scope.tour, $scope.lang);

			var thereExistBranchStep = false;

			var tagGroups = [];
			var stepOrder = 0;
			var isBranchStep = false;

			angular.forEach($scope.tour.steps, function(step, key) {

				if (step.step_id && (typeof step.step_id) !== "string") {
					step.step_id = step.step_id.toString();
				}

				step = $scope.updateStepThumbUrl(step);

				if (typeof step.step_screen !== "string") {
					step.step_screen = step.step_screen.toString();
				}

				if (step.step_type === 'video' && step.step_screen.indexOf('guideme-defaults/default.png') === -1) {
					step.step_video_thumbnail = step.step_video_url;

				} else if (step.step_type === GmCXt.STEP_TYPE_BRANCH || step.step_type === GmCXt.STEP_TYPE_ERROR_HANDLER || (GmCXt.isTrue(step.step_settings.inlineBranch) && step.step_settings.completionEvent !== 'keepNext')) {
					thereExistBranchStep = true;
					var step_settings = step.step_settings;

					step.branch = step_settings.branch;
					for (var i = 0; i < step.branch.length; i++) {

						if (step.branch[i].tourId > 0) {
							for (var j = 0; j < $scope.tour.steps.length; j++) {
								if ($scope.tour.steps[j].step_id === step.branch[i].tail) {
									$scope.tour.steps[j].hideStep = true;
									step.branch[i].tourData = $scope.tour.steps[j];
								}
							}
						}
					}
				}

				if (isTrackingGuide) {

					var groupId = step.step_settings.groupId;
					if (groupId) {
						if (!tagGroups[groupId]) tagGroups[groupId] = [];

						tagGroups[groupId].push(step);
					} else {
						$scope.tour.filteredSteps.push(step);
					}
					stepOrder = Math.max(stepOrder, step.step_order);
				}
			});

			if (thereExistBranchStep) {
				$rootScope.branchGuideDownloadOpts($scope.tour.tour_settings.downloadGuideFiles);
			}

			$scope.tour.downloadOpts = $scope.tour.tour_settings.downloadGuideFiles;
			$scope.hideDownload = GmCXt.isFalseObj($scope.tour.downloadOpts);

			if ($scope.tour.tour_type === "insights") {

				var groups = Object.keys(tagGroups);

				groups.forEach(function(gId) {

					var g = tagGroups[gId];

					var group = {
						step_id: gId,
						steps: g,
						image_url: g[0].thumbnail_url,
						step_title: g[0].step_settings.groupTitle,
						step_type: "tag",
						stepOrder: ++stepOrder
					};

					$scope.tour.filteredSteps.push(group);

				});
			}

			if (!isTrackingGuide) {
				$scope.tour = GmCXt.checkAndCorrectPS($scope.tour);
			}

			$scope.isOnboardingGuide = false;
			if ($rootScope.isOnboarding($scope.tour)) {
				$scope.isOnboardingGuide = true;
			}

			if ($scope.lang && !$rootScope.isGuideInOriginalLang($scope.tour)) {
				$scope.tour.selectedLang = $scope.lang;
				var languageData = $scope.tour.language_data;
				if (languageData && languageData[$scope.lang]) {
					$scope.tour = $rootScope.getTranslatedTourAndSteps($scope.tour, $scope.lang);
				}
			}

			if ($rootScope.isDesktopGuide($scope.tour) || $rootScope.isMobileGuide($scope.tour) || $scope.tour.tour_type.indexOf('onboarding_tour') > -1) {
				$scope.stepPlayString = $rootScope.labels.showMe;
			} else {
				$scope.stepPlayString = $rootScope.labels.guideMe;
			}

			//Set height to category-list element to properly apply slider
			$timeout(function() {
				$scope.setHeight();
			}, 200);

			if (thereExistBranchStep &&
				$scope.tour.tour_settings.play_structure.length > 0) {

				$scope.hideRegularView = true;
				$scope.updateViewTree();

			} else {
				$scope.hideRegularView = false;
			}

			$rootScope.setTour($scope.tour);

			$scope.scrollToStep();

			$rootScope.isApiCallOn = false;

			$rootScope.showSpinner = false;

			$rootScope.focusAccessibilityBtn();

			if (!$scope.$$phase) $scope.$apply();

			Message.send({
				action: "mgPlayerJSTest_action:load_step_previews"
			});
		};

		$scope.dragSteps = function(steps, $index) {
			tourViewCreator.dragSteps(steps, $index, $scope);
		};

		$scope.dragStepClick = function(steps, $index) {
			if (!$rootScope.isGuideInOriginalLang($scope.tour, true)) {
				return;
			}
		};

		$scope.updateStepThumbUrl = function(step) {

			if (!step.is_screen_url_processed) {
				step.step_thumb = step.screen_url + $rootScope.getCdnSign();

			} else if (step.step_settings.element && step.step_settings.element.version) {

				var version = GmCXt.decodeVersion(step.step_settings.element.version);

				if ((GmCXt.conf.env === 'Prod' && version > 40509) ||
					(GmCXt.conf.env === 'Test' && version > 40601)) {

					step.step_thumb = $rootScope.getImageURL(step.screen_url, "_cropped.png");
				} else {
					step.step_thumb = $rootScope.getImageURL(step.screen_url, "_thumb.png");
				}
			} else {
				step.step_thumb = $rootScope.getImageURL(step.screen_url, "_thumb.png");
			}

			return step;
		};

		$scope.scrollToStep = function() {
			$timeout(function() {
				if (GmCXt.failedStepId) {
					$rootScope.scrollToStep(GmCXt.failedStepId);
				}
			}, 500);
		};

		$scope.showThumbnail = function() {
			if ($rootScope.onPrem) {
				return $rootScope.FT.showMe;
			} else {
				return true;
			}
		};

		$scope.scrollIntoView = function() {
			$timeout(function() {
				if ($scope.tour.steps.length)
					mg$('.step-item')[$scope.tour.steps.length - 1].scrollIntoView();
			}, 20);
		};

		$scope.settings = false;

		if ($rootScope.showStepError) {
			modal.open($rootScope.labels.stepError, 'alert');
		}

		if ($rootScope.isScreenRecorderClose) {
			modal.open($rootScope.labels.screeRecordingError, 'alert', function() {
				GmCXt.storage().remove(['screen_recorder_close']);
				$rootScope.isScreenRecorderClose = false;
				if (!$rootScope.$$phase) $rootScope.$apply();
			});
		}

		$scope.refreshView = function() {
			mgError.try(function() {
				$rootScope.showSpinner = true;
				$scope.settings = GmCXt.getOrgSettings($rootScope.isPublicApp);
				$scope.processTours();
				$rootScope.toggleGuideViewFullScreen();
			}, 122);
		};

		function showAddStep(sel) {
			if (angular.isDefined($rootScope.showEditMenu) && $rootScope.showEditMenu) {
				$timeout(function() {

					mg$('.tour-action-dropdown').slideUp(200);
					var el = mg$(sel);

					if (!el.is(':visible')) el.slideDown(200);

					delete $rootScope.showEditMenu;
				}, 100);
			}
		}

		var tourModel = {
			tour_type: $rootScope.currentTour && $rootScope.currentTour.tour_type || ''
		};

		$scope.processTours = function() {

			function errorCb() {
				$rootScope.showSpinner = false;
				$scope.tour = false;
				$scope.error = true;
				if (!$scope.$$phase) $scope.$apply();
			}

			$rootScope.showSpinner = true;
			if (!($scope.tour && $scope.tour.tour_id)) {
				$scope.tour = GmCXt.validateDataModel(tourModel, GmCXt.model.guide);
			}

			$rootScope.isDefaultLang = GmCXt.checkDefaultLangForTour($scope.tour, $scope.lang);

			if ($scope.tour.is_locked) $scope.isLocked = true;

			showAddStep('#tour-add-dropdown-' + $scope.tour.tour_id);

			var params = {
				tour_id: $scope.tourId,
				isPublic: $rootScope.currentTour ? $rootScope.currentTour.is_public : false,
				category_id: $rootScope.currentTour.category_id
			};

			if (!GmCXt.checkDefaultLangForTour($scope.tour, $scope.lang))
				params.language = $scope.lang;

			api.getTour(params, $scope.gotTour, errorCb, true);
		};

		$scope.toggleStepImages = function() {
			mg$('.step-image-wrapper').slideToggle();
		};

		$scope.addStep = function() {
			tourViewCreator.addStep($scope);
		};

		$scope.showStepActionDropdown = function(stepId, $event) {
			tourViewCreator.showStepActionDropdown(stepId, $event, $scope);
		};

		$scope.hideStepActionDropdown = function() {
			mg$('.step-action-menu-options-dropdown').slideUp(200);
		};

		$scope.showMenuActionDropdown = function(step_id, $event) {
			tourViewCreator.showMenuActionDropdown(step_id, $event, $scope);
		};

		$scope.createTags = function(data) {
			tourViewCreator.createTags(data, $scope);
		};
		$scope.createStep = function(data) {
			tourViewCreator.createStep(data, $scope);
		};

		$scope.createStepCompleted = function(data, isPaste) {
			tourViewCreator.createStepCompleted(data, $scope, isPaste);
			$scope.tour.downloadOpts = $scope.tour.tour_settings.downloadGuideFiles;
			$scope.setHeight();
		};

		$scope.updateTourPlayStructure = function(data) {

			var stepObj = data.step;
			var playStructure = $scope.tour.tour_settings.play_structure;
			$scope.hideRegularView = false;

			if (!data.prevStepData) data.prevStepData = $rootScope.prevStepData;

			if (playStructure) {
				var d = GmCXt.updateTourPlayStructure(data);

				if (d) {
					$scope.tour.tour_settings.play_structure = d.prevStepData.tour.tour_settings.play_structure;
				}

				if (GmCXt.checkForBranchVariationSteps(stepObj)) {
					$scope.hideRegularView = true;
				}

				$rootScope.setTour($scope.tour);

				if (stepObj.step_type === "guide" || stepObj.step_type === "video" ||
					angular.isDefined($rootScope.copiedStep) || stepObj.step_type === "textSlide") {

					$rootScope.pendingStepCount = 0;
					$scope.updateTourWithApiCall();
				} else {
					$scope.updateTour();
				}
			} else {
				$rootScope.showSpinner = false;
			}
		};

		$scope.updateTour = function() {
			$rootScope.showSpinner = false;
			$scope.hideRegularView = false;
			for (var i = 0; i < $scope.tour.steps.length; i++) {
				if (GmCXt.checkForBranchVariationSteps($scope.tour.steps[i])) {
					$scope.hideRegularView = true;
					break;
				}
			}
			mg$(".step-view-type-branching").empty();

			$scope.tour.filteredSteps = GmCXt.filterOutAutomationSteps($scope.tour.steps);

			if ($scope.hideRegularView) $scope.updateViewTree();

			if (GmCXt.isFeatureTags($scope.tour)) {
				$scope.gotTour($scope.tour);
			}
			$scope.disableDoItForMe = $rootScope.checkStepsForDoItForMeMode($scope.tour);

			if (!$scope.$$phase) {
				$scope.$apply();
			}
		};

		$scope.updateTourWithApiCall = function() {
			$scope.reloadView = true;
			tourViewCreator.updateTourWithApiCall($scope);
		};

		$scope.createStepFailed = function(data) {
			tourViewCreator.createStepFailed(data, $scope);
		};

		$scope.createTagCompleted = function(m) {
			$scope.$apply(function() {
				$rootScope.showSpinner = false;
			});
		};

		$scope.closeSpinner = function() {
			$scope.$apply(function() {
				$rootScope.showSpinner = false;
			});
		};

		$scope.updateStep = function(data) {
			tourViewCreator.updateStep(data, $scope);
		};

		$scope.updateStepCompleted = function(data) {
			tourViewCreator.updateStepCompleted(data, $scope);
		};

		$scope.updateStepFailed = function(data) {
			tourViewCreator.updateStepFailed(data, $scope);
		};

		$scope.editStep = function(step, index, isEditOnImage) {
			tourViewCreator.editStep(step, index, $scope, isEditOnImage);
		};

		$scope.editTag = function(step) {
			tourViewCreator.editTags(step, $scope.tour);
		};

		$scope.goToStepUrl = function(step, index) {

			modal.open($rootScope.labels.confirmGoToStepUrl, 'confirm', function() {

				if (step.step_settings.scheme)
					var url = step.step_settings.scheme + '://' + step.step_url;
				else
					var url = '//' + step.step_url;

				var message = {
					action: 'mgPlayerJSTest_action:go_to_step_url,task:edit_step',
					url: url
				};

				GmCXt.sendToParentWindow(message);
			});
		};

		$scope.moveStep = function(stepId, direction, $event) {
			if (!$rootScope.isGuideInOriginalLang($scope.tour, true)) {
				return;
			}

			tourViewCreator.moveStep(stepId, direction, $event, $scope);
		};

		$scope.deleteStep = function(step, deleteBranchTrue) {

			if (!$rootScope.isGuideInOriginalLang($scope.tour, true)) {
				return;
			}

			tourViewCreator.deleteStep(step, deleteBranchTrue, $scope);
		};

		$scope.deleteMultipleSteps = function() {
			var steps = [];
			var remainingSteps = [];
			angular.forEach($scope.tour.steps, function(step) {
				if (step.copy) {
					steps.push(parseInt(step.step_id));
				} else {
					remainingSteps.push(step);
				}
			});
			var deleteStepsList = {
				"tour_id": $scope.tour.tour_id
			};
			if ($scope.tour.step_count !== steps.length) {
				deleteStepsList.step_ids = "[" + steps + "]";
			}
			if (steps.length) {
				tourViewCreator.deleteMultipleSteps(deleteStepsList, remainingSteps, $scope);
			} else {
				modal.open(GmCXt.label.unselectedStepsErrorMsg, 'warning');
			}
		};

		$scope.selectAll = function() {
			var steps = $scope.showSearchResult ? $scope.showSteps : $scope.tour.steps;
			angular.forEach(steps, function(step) {
				if (step.step_type !== GmCXt.STEP_TYPE_BRANCH || !step.step_settings.inlineBranch || step.step_type !== GmCXt.STEP_TYPE_ERROR_HANDLER) {
					step.copy = $scope.selectedAll ? false : true;
				}
			});
			$scope.selectedAll = $scope.selectedAll ? false : true;
		};

		$scope.checkPendingStepCount = function() {
			if ($rootScope.pendingStepCount > 0) {
				$rootScope.showPopup("Please wait while steps are getting saved");
				return true;
			} else {
				return false;
			}
		};

		$scope.previewSmartTip = function() {

			var tour = GmCXt.createDeepCopy($scope.tour);

			tour.is_published = true;

			message = {
				action: 'mgPlayerJSTest_action:preview_smarttip',
				data: [tour]
			};
			GmCXt.sendToParentWindow(message);
		};

		$scope.stepAction = function($event) {
			$event.stopPropagation();
			return;
		};

		$scope.guideAction = function(type, step) {

			var tour = JSON.parse(JSON.stringify($scope.tour));

			if (type === 'doitforme' && $scope.disableDoItForMe) {
				modal.open($rootScope.labels.doitForMeWarning, 'warning');
				return false;
			}

			$rootScope.guideAction(type, step, tour, $rootScope.currentView, $scope.categoryName);

			$scope.closeVideo();
		};

		$scope.showDownloadOptions = function($event) {
			$event.stopPropagation();
			$rootScope.hideTourActionDropdown();
			$scope.hideStepActionDropdown();
			mg$('.download-list').slideToggle();
		};

		$scope.goToWebTour = function() {
			var webUrl = $rootScope.webUrl + "tour/" + $scope.tour.tour_id;

			var message = {
				action: 'mgPlayerJSTest_action:go_to_web_tour',
				data: {
					webUrl: webUrl
				}
			};

			GmCXt.sendToParentWindow(message);
		};

		/* --------------------------------------------*/

		$scope.closeVideo = function() {
			if (mg$('#video-container').length) {
				mg$('#video-container')[0].pause();
			}
		};

		$scope.$on('refreshStep', function(event, data) {
			if (angular.isDefined(data) && angular.isDefined(data.step)) {
				var step = data.step;
				if (step.tour_id === $scope.tour.tour_id) {
					$scope.tour.steps = [];
					$rootScope.showSpinner = true;
					if ($scope.tour.is_locked) $scope.isLocked = true;
					$scope.reloadView = true;
					$scope.updateTourPlayStructure(data);
				}
			}
		});

		$scope.setHeight = function() {
			var guideViewHeaderPanelContainerHeight = mg$('.guide-view-header-panel-container').innerHeight() ? mg$('.guide-view-header-panel-container').innerHeight() : 0;
			var listPageHeaderHeight = mg$('.list-page-header').innerHeight() ? mg$('.list-page-header').innerHeight() : 0;
			var egeHeaderHeight = mg$('#ege-header').innerHeight() ? mg$('#ege-header').innerHeight() : 0;
			var egePanelHeaderSubMenuUrlsHeight = mg$('.ege-panel-header-sub-menu-urls').innerHeight() ? mg$('.ege-panel-header-sub-menu-urls').innerHeight() : 0;
			var footerHeight = mg$('#footer').innerHeight() ? mg$('#footer').innerHeight() : 0;
			var listPageBtnHeight = mg$('.list-page-btn-wrapper').innerHeight() ? mg$('.list-page-btn-wrapper').innerHeight() : 0;
			mg$('.category-list').css({
				'height': (window.innerHeight - guideViewHeaderPanelContainerHeight - footerHeight - egePanelHeaderSubMenuUrlsHeight - listPageHeaderHeight - egeHeaderHeight - listPageBtnHeight - 20)
			});

			return true;
		};

		/* set the list hight on window resize */
		mg$(window).off('resize').on('resize', $scope.setHeight);

		$scope.refreshView();

		// Branching Basic Start

		$scope.closeBranchingPopup = function() {
			tourViewCreator.closeBranchingPopUp($scope);
			$rootScope.toggleGuideViewFullScreen();
		};

		$scope.branchData = {};
		$scope.items = [GmCXt.getEmptyRule()];

		$scope.branchCurrentPopupIndex = -1;
		$scope.branchStepI = -1;

		$scope.ruleOperators = GmCXt.getRuleOperators();
		$scope.ruleOpsUILabels = GmCXt.ruleOpsUILabels;

		$scope.branchPopUpOpen = function(step, addStepType, branchType) {
			$scope.step = step;
			$scope.addStepType = addStepType;
			tourViewCreator.branchPopUpOpen(step, $scope, addStepType, branchType);
		};

		$scope.addNewBranch = function(ev) {
			if (!$rootScope.isGuideInOriginalLang($scope.tour, true, true)) {
				return;
			}

			tourViewCreator.addNewBranch(ev, $scope);
		};

		$scope.deleteBranch = function(branch, branchIndex, $event) {
			if (!$rootScope.isGuideInOriginalLang($scope.tour, true, true)) {
				return;
			}

			tourViewCreator.deleteBranch(branch, branchIndex, $event, $scope);
		};

		$scope.duplicateBranch = function($event, branch, branchIndex) {
			if (!$rootScope.isGuideInOriginalLang($scope.tour, true, true)) {
				return;
			}

			tourViewCreator.duplicateBranch($event, branch, branchIndex, $scope);
		};

		// rules engine start

		$scope.arrayObjTypes = GmCXt.getRuleTypes(false, true, false);

		$scope.branchDropValue = [{}];
		$scope.branchDropValue[0].strType = [{}];

		$scope.addNewRulesEngine = function(branch, branchIndex, rule) {

			var branches = $scope.branchData.branch;

			if (!branch.isDefault) {
				var i = branches.indexOf(branch);

				branches[i].rulesEngine.push(GmCXt.getEmptyRule());
			}
		};

		$scope.removeRulesEngine = function(branch, branchIndex, rule) {

			var branches = $scope.branchData.branch;

			if (!branch.isDefault) {
				var i = branches.indexOf(branch);
				var ri = branches[i].rulesEngine.indexOf(rule);
				if (branches[i].rulesEngine.length === 1) {
					branches[i].rulesEngine[ri] = GmCXt.getEmptyRule();
				} else {
					branches[i].rulesEngine.splice(ri, 1);
				}

				var elemRuleCount = getElmRuleCount(branches[i].rulesEngine);

				if (elemRuleCount <= 3) {
					delete $scope.branchData.branch[i].elRuleError;
				}
			}
		};

		function getElmRuleCount(rules) {

			var count = 0;

			for (var i = 0; i < rules.length; i++) {
				if (rules[i].type === 'Select Element') {
					count++;
				}
			}

			return count;
		}

		$scope.getSelectedRuleType = function(rule, i, branch, resetError) {

			var branches = $scope.branchData.branch;
			var i = branches.indexOf(branch);
			var ri = branches[i].rulesEngine.indexOf(rule);
			var branch = branches[i];

			if (resetError === undefined) {
				delete $scope.branchData.branch[i].elRuleError;
			}

			var elemRuleCount = getElmRuleCount(branches[i].rulesEngine);

			if (elemRuleCount > 3 && rule.type === "Select Element") {
				$scope.branchData.branch[i].elRuleError = ri;
				rule.type = "URL";
				$scope.getSelectedRuleType(rule, i, branch, false);
				return;
			}

			branch.rulesEngine[ri].value = '';

			if (branch.rulesEngine[ri].element) {
				delete branch.rulesEngine[ri].element;
			}

			var val = '';
			switch (rule.type) {
				case 'URL Hostname':
					val = GmCXt.urlParts.host;
					break;

				case 'URL Path':
					val = GmCXt.urlParts.pathname;
					break;

				case 'URL Parameters':
					val = GmCXt.getUrlParam();
					break;

				case 'URL':
					val = GmCXt.urlParts.href;
					break;

				case 'URL Hash':
					val = GmCXt.urlParts.hash;
					break;

				case 'Page Title':
					val = GmCXt.pageTitle;
					break;

				case 'Variables':
					rule.variableData = '';
					val = '';
					break;

				case 'Select Element':
					$scope.selectElement(ri, i, i);
					return;
			}

			if (val) branch.rulesEngine[ri].value = val;
			if ($scope.branchDropValue[i]) {
				$scope.branchDropValue[i].strType[ri] = _.filter($scope.ruleOperators, function(data) {
					return data.type === rule.type;
				});
			} else {
				$scope.branchDropValue[i] = [{}];
				$scope.branchDropValue[i].strType = [{}];
				$scope.branchDropValue[i].strType[ri] = _.filter($scope.ruleOperators, function(data) {
					return data.type === rule.type;
				});
			}
		};
		$scope.delay = {
			checked: false
		};

		$scope.stepDelayTime = GmCXt.getStepDelayOptions();
		$scope.branchData.selectedDelayTime = $scope.stepDelayTime[0].value; // Initialize with the first value

		$scope.delayTime = function() {
			if ($scope.delay.checked &&
				(isNaN(parseInt($scope.branchData.selectedDelayTime)) || !$scope.branchData.selectedDelayTime)) {
				$scope.branchData.selectedDelayTime = 1;
			}
			return $scope.branchData.selectedDelayTime;
		};

		$scope.saveBranchStep = function() {
			var updatedDelayTime = $scope.delayTime();
			tourViewCreator.saveBranchStep($scope);
		};

		$scope.selectElement = function(indexOfRules, i, branchIndex) {

			function listen(event) {
				var message = GmCXt.parseMsg(event);
				message = GmCXt.convertMgdata(message);

				if (message.action && (message.action === 'mgPlayerJSTest_action:completed;task:select_element_for_branching_step_completed')) {
					GmCXt.increaseSidePanel();
					tourViewCreator.alignDropDownForRulesEngineSelect(indexOfRules, i, branchIndex, message.data, $scope);

					window.removeEventListener('message', listen);
				}
			}

			// This listener is only in Guide iframe
			window.addEventListener('message', listen);
			var message = {
				action: "mgPlayerJSTest_action:select_element_for_branching"
			};
			GmCXt.sendToParentWindow(message);
		};

		$scope.getSelectedValueType = function(item, i, branch) {
			var branches = $scope.branchData.branch;
			var branchIndex = branches.indexOf(branch);
			var branch = branches[branchIndex];
			var i = branch.rulesEngine.indexOf(item);

			if (item.type === 'Select Element') {
				var tagName = tourViewCreator.getTagName(branch.rulesEngine[i].element.selector.js[0]);
				if (tagName === 'SELECT') {}
			}
		};

		$scope.showCurrentBranchRule = function(ind) {
			$scope.branchCurrentPopupIndex = ind;
		};

		$scope.linkBranchStepGuide = function(tour, $event, order, branch, step) {
			tourViewCreator.linkBranchStepGuide(tour, $event, order, branch, step, $scope);
		};

		$scope.updateBranchStep = function(step, order) {
			tourViewCreator.updateBranchStep(step, order, $scope);
		};

		$scope.showRulesType = function(item, rulesEngine, type) {
			if (type === 'Select Element') {
				var selectElemIndex = [];
				var selectElemCount = 0;
				var indexOfCurrentRule = rulesEngine.indexOf(item);

				for (var i = 0; i < rulesEngine.length; i++) {
					if (rulesEngine[i].type === 'Select Element') {
						selectElemCount++;
					}
				}

				for (var i = 0; i < indexOfCurrentRule; i++) {
					if (rulesEngine[i].type === 'Select Element') {
						selectElemIndex.push(i);
					}
				}

				if (selectElemCount === 3 && selectElemIndex.length === 3) { // elementRule limit reached
					return false;
				}
			} else if (item.type !== 'Select Element' && selectElemCount === 3) {
				return false;
			}

			return true;
		};

		$scope.deleteBranchGuideLink = function(branch, step, $event) {
			tourViewCreator.deleteBranchGuideLink(branch, step, $event, $scope);
		};

		$scope.showTourActionMenu = function(step) {

			if (!step.step_type && step.type) step.step_type = step.type;

			if (step.step_type === GmCXt.STEP_TYPE_BRANCH || step.step_type === GmCXt.STEP_TYPE_ERROR_HANDLER) {
				return false;
			} else if (step.step_settings && step.step_settings.inlineBranch) {
				return false;
			} else if (step.hideStep) {
				return false;
			} else {
				return true;
			}
		};

		function checkBranchDataUpdate() {

			if ($scope.origStep) {
				//Check The tail of branchData.branch with origingalData.branch
				for (var i = 0; i < $scope.origStep.branch.length; i++) {
					if ($scope.branchData.branch[i]) {
						if ($scope.origStep.branch[i].tail !== $scope.branchData.branch[i].tail) {
							var step = $rootScope.getStepFromTour($scope.origStep.branch[i].tail, $scope.tour);
							tourViewCreator.deleteStepWithoutModal(step, $scope);
						}
					}
				}
			}
		}

		$scope.deleteStepWithoutModal = function(step) {
			tourViewCreator.deleteStepWithoutModal(step, $scope);
		};

		$scope.showBranchRulePreviewImage = function(val, index) {
			if (val) {
				$scope.showBranchRulePreviewImageIndex = index;
			} else {
				$scope.showBranchRulePreviewImageIndex = -1;
			}
		};

		$scope.validateRulesEngineForBranchOneItem = function(item) {
			var newI = angular.copy(item);
			newI.logical_condition = "";
			return GmCXt.ruleEngine.evaluateRules([newI]);
		};

		mg$(document).off('keydown').on('keydown', function(e) {
			if (e.which === 27 && $scope.branchStepOpen) {
				$scope.closeBranchingPopup();
			}
		});

		$scope.createMultipleBranch = function() {
			tourViewCreator.createMultipleBranch($scope);
		};

		$scope.closeMultipleBranch = function() {
			mg$(".mgPlayerJSTest_popup-select-branch-multiple").hide();
		};

		$scope.disableCheckMultiSelection = function() {
			var totalBranches = $scope.branchData.branch.length - 1;
			for (var i = 0; i < $scope.multiBranchList.options.length; i++) {
				if ($scope.multiBranchList.options[i].value) totalBranches++;
			}
			if (totalBranches >= 10) {
				$scope.showBranchLengthError = true;
				mg$(".mgPlayerJSTest_popup-select-option-container").css("height", "277px");
				return true;
			} else {
				$scope.showBranchLengthError = false;
				mg$(".mgPlayerJSTest_popup-select-option-container").css("height", "310px");
				return false;
			}
		};

		$scope.closePopUpAlert = function() {
			mg$(".mgPlayerJSTest_icon-play-popup").hide();
		};

		function getMenuScope() {
			return angular.element('.tour-action-dropdown-wrapper').scope();
		}

		$scope.addInlineStepFromBranchMenu = function(id, e) {
			var sc = getMenuScope();
			if (sc) {
				$scope.updateBranchPrevStepData(e);
				sc.addInlineStep($scope.tour, null, e);
			}
		};

		$scope.pasteStepFromBranchMenu = function(e, stepId, stepType) {
			var sc = getMenuScope();
			var branchIndex = mg$(e.target).closest('.branch-addstep-menu-item').attr("branchindex");
			if (sc) {
				$scope.updateBranchPrevStepData(e);
				if (stepType === "inline") {
					var inlineStep = $rootScope.getStepFromTour(stepId, $scope.tour);
					sc.pasteStep($scope.tour, e, inlineStep);
				} else {
					var step = {};
					step.step_id = stepId;
					step.step_type = stepType;
					step.branch_index = branchIndex;
					sc.pasteStep($scope.tour, e, step);
				}
			}
		};

		$scope.addMessageStepFromBranchMenu = function(id, e) {
			var sc = getMenuScope();
			if (sc) {
				$scope.updateBranchPrevStepData(e);
				sc.addMessageStep($scope.tour, null, e);
			}
		};

		$scope.addCaptureScreenStepFromBranchMenu = function(id, e) {
			var sc = getMenuScope();
			if (sc) {
				$scope.updateBranchPrevStepData(e);
				sc.captureScreen($scope.tour, null, e);
			}
		};

		$scope.addSentimentStepFromBranchmenu = function(stepId, e) {
			var sc = getMenuScope();
			if (sc) {
				$scope.updateBranchPrevStepData(e);
				var step = $rootScope.getStepFromTour(stepId, $scope.tour);
				sc.addSurveyStep($scope.tour, step, e);
			}
		};

		$scope.addTransportStepFromBranchmenu = function(stepId, e) {
			var sc = getMenuScope();
			if (sc) {
				$scope.updateBranchPrevStepData(e);
				var step = $rootScope.getStepFromTour(stepId, $scope.tour);
				sc.addTransportStep($scope.tour, step, e);
			}
		};

		$scope.addUploadImageStepFromBranchMenu = function(id, e) {
			var sc = getMenuScope();
			if (sc) {
				$scope.updateBranchPrevStepData(e);
				sc.uploadImage($scope.tour, null, e);
			}
		};

		$scope.addCreateVideoStepFromBranchMenu = function(id, e) {
			var sc = getMenuScope();
			if (sc) {
				$scope.updateBranchPrevStepData(e);
				sc.createVideoStep($scope.tour, 'screencast', null, e);
			}
		};

		$scope.addCreateVideoUploadStepFromBranchMenu = function(id, e) {
			var sc = getMenuScope();
			if (sc) {
				$scope.updateBranchPrevStepData(e);
				sc.createVideoStep($scope.tour, 'videoUpload', null, e);
			}
		};

		$scope.addCreateVideoCaptureStepFromBranchMenu = function(id, e) {
			var sc = getMenuScope();
			if (sc) {
				$scope.updateBranchPrevStepData(e);
				sc.createVideoStep($scope.tour, 'videoCapture', null, e);
			}
		};

		$scope.addLinkGuideStepFromBranchMenu = function(id, e) {
			var sc = getMenuScope();
			if (sc) {
				$scope.updateBranchPrevStepData(e);
				var step = $rootScope.getStepFromTour(id, $scope.tour);
				$scope.openLinkGuidePopup($scope.tour, step, e);
			}
		};

		$scope.addSplitInlineStepFromBranchMenu = function(id, e, branchType) {
			var sc = getMenuScope();
			if (sc) {
				$scope.updateBranchPrevStepData(e);
				var step = $rootScope.getStepFromTour(id, $scope.tour);
				sc.splitInlineStep($scope.tour, step, e, branchType);
			}
		};

		$scope.branchingViewZoom = 10;
		$scope.zoomInView = function() {
			if ($scope.branchingViewZoom < 15) {
				$scope.branchingViewZoom++;
				var position = $scope.getScaleViewValues($scope.branchingViewZoom);
				if (position) {
					mg$('.step-view-type-branching').css({
						'transform': 'scale(' + position.scale + ') translate(' + position.transformLeft + ', ' + position.transformRight + ')'
					});
				}
			}
		};
		$scope.zoomOutView = function() {
			if ($scope.branchingViewZoom > 2) {
				$scope.branchingViewZoom--;
				var position = $scope.getScaleViewValues($scope.branchingViewZoom);
				if (position) {
					mg$('.step-view-type-branching').css({
						'transform': 'scale(' + position.scale + ') translate(' + position.transformLeft + ', ' + position.transformRight + ')'
					});
				}
			}
		};

		$scope.getScaleViewValues = function(zoom) {
			var position = {};
			switch (zoom) {
				case 3:
					position.scale = 0.3;
					position.transformLeft = '-90%';
					position.transformRight = '-90%';
					break;
				case 4:
					position.scale = 0.4;
					position.transformLeft = '-70%';
					position.transformRight = '-70%';
					break;
				case 5:
					position.scale = 0.5;
					position.transformLeft = '-45%';
					position.transformRight = '-45%';
					break;
				case 6:
					position.scale = 0.6;
					position.transformLeft = '-30%';
					position.transformRight = '-30%';
					break;
				case 7:
					position.scale = 0.7;
					position.transformLeft = '-20%';
					position.transformRight = '-20%';
					break;
				case 8:
					position.scale = 0.8;
					position.transformLeft = '-12%';
					position.transformRight = '-12%';
					break;
				case 9:
					position.scale = 0.9;
					position.transformLeft = '-5%';
					position.transformRight = '-5%';
					break;
				case 10:
					position.scale = 1;
					position.transformLeft = '0%';
					position.transformRight = '0%';
					break;
				case 11:
					position.scale = 1.1;
					position.transformLeft = '5%';
					position.transformRight = '5%';
					break;
				case 12:
					position.scale = 1.2;
					position.transformLeft = '9%';
					position.transformRight = '8%';
					break;
				case 13:
					position.scale = 1.3;
					position.transformLeft = '12%';
					position.transformRight = '12%';
					break;
				case 14:
					position.scale = 1.4;
					position.transformLeft = '15%';
					position.transformRight = '15%';
					break;
				case 15:
					position.scale = 1.5;
					position.transformLeft = '17%';
					position.transformRight = '17%';
					break;
				default:
					break;
			}
			return position;
		};

		$scope.editStepFromBranchView = function(id) {
			var step = $rootScope.getStepFromTour(id, $scope.tour);
			var index = $scope.tour.steps.map(function(e) {
				return e;
			}).indexOf(step);
			$scope.hideOption = true;

			if (step.step_settings.branch_type === "User Selection") {
				$scope.showUser = true;
				$scope.showRule = false;
			} else {
				$scope.showRule = true;
			}
			$scope.editStep(step, index);
		};

		$scope.goToStepUrlFromBranchView = function(id) {
			var step = $rootScope.getStepFromTour(id, $scope.tour);
			var index = $scope.tour.steps.indexOf(step);
			$scope.goToStepUrl(step, index);
		};

		$scope.copyStep = function(stepId, step_type, $event, tType) {

			$event.stopPropagation();
			$scope.hideStepActionDropdown();
			$rootScope.copiedStep = {
				'step_id': stepId,
				'step_type': step_type,
				't_type': tType
			};
			$rootScope.pasteStep = true;
			$rootScope.copyStepsList = false;
		};

		$scope.copyMultipleSteps = function() {
			var copiedSteps = [];
			angular.forEach($scope.tour.steps, function(step) {
				if (step.copy) {
					copiedSteps.push(parseInt(step.step_id));
				}
			});
			$rootScope.copyStepsList = {
				'steps': copiedSteps,
				'tourId': $scope.tour.tour_id,
				'tourType': $scope.tour.tour_type,
				'stepType': $scope.tour.steps[0].step_type
			};
			if ($rootScope.copyStepsList.tourType.indexOf('onboarding_tour') >= 0) {
				$rootScope.copyStepsList.tourType = $scope.tour.tour_settings.tutorial_tour_type;
			}
			if ($rootScope.copyStepsList.steps.length) {
				$rootScope.copiedStep = false;
				$rootScope.pasteStep = true;

				$scope.clearAll();
			} else {
				modal.open(GmCXt.label.unselectedStepsErrorMsg, 'warning');
			}

		};

		$scope.searchStep = function() {
			$scope.showSteps = [];
			$scope.displaySteps = true;
			$scope.showSearchResult = true;
			angular.forEach($scope.tour.steps, function(step) {
				if ((step.step_title.toLowerCase().includes($rootScope.searchStepKeyword.toLowerCase())) || (step.step_description.toLowerCase().includes($rootScope.searchStepKeyword.toLowerCase()))) {
					$scope.showSteps.push(step);
				}
			});

			if ($scope.showSteps.length === 0) {
				$scope.displaySteps = false;
			}
			$scope.toggleSelectAll();
		};

		$scope.toggleSelectAll = function() {
			$scope.showSteps = $scope.showSteps.length ? $scope.showSteps : $scope.tour.steps;
			var status = true;

			for (var i in $scope.showSteps) {
				if (!$scope.showSteps[i].copy) {
					status = false;
					break;
				}
			}
			$scope.selectedAll = status;
		};

		$scope.clearAll = function() {
			angular.forEach($scope.tour.steps, function(step) {
				step.copy = false;
			});
			$rootScope.copySteps = false;
			$rootScope.searchStepKeyword = '';
			$scope.showSearchResult = false;
			$scope.selectedAll = false;
			$rootScope.showSteps = [];
		};

		$scope.guideViewFullScreen = function(val) {
			$rootScope.guideViewFullScreen = val;
			$rootScope.toggleGuideViewFullScreen();
		};

		function htmlToPlaintext(text) {
			return text ? String(text).replace(/<[^>]+>/gm, '') : '';
		}

		$scope.populateValueField = function(item, onChange) {
			if (onChange || !item.hasOwnProperty('showValueField')) {
				GmCXt.populateValueField(item);
			}
		};

		$scope.showRuleInfo = function(condition) {
			return GmCXt.showRuleInfo(condition);
		};

		$scope.getGuidanceMessage = function(condition) {
			return GmCXt.getGuidanceMessage(condition);
		};

		$scope.$watch('tour.is_published', function(newValue, oldValue, scope) {
			if ($scope.hideRegularView) {
				$scope.updateViewTree();
			}
		});

		$scope.$watch('tour.is_locked', function(newValue, oldValue, scope) {
			if ($scope.hideRegularView) {
				$scope.updateViewTree();
			}
		});

		$scope.getDeleteNodeClassName = function(nodeId) {
			if (nodeId && $scope.treeData[nodeId]) {
				if ($scope.treeData[nodeId].id === nodeId) {
					if ($scope.treeData[nodeId].head.length > 1) {
						return "mgPlayerJSTest_allow-delete-connection";
					} else if ($scope.treeData[nodeId].branch) {
						branches = $scope.treeData[nodeId].branch;
						var numOfMergedBranch = 0;
						for (var i = 0; i < branches.length; i++) {
							if (branches[i].tail === -1) {
								numOfMergedBranch++;
							}
						}
						if (numOfMergedBranch > 1) {
							return "mgPlayerJSTest_allow-delete-connection";
						} else {
							return "mgPlayerJSTest_hide-delete-connection";
						}
					} else {
						return "mgPlayerJSTest_hide-delete-connection";
					}
				}
			} else {
				return "mgPlayerJSTest_hide-delete-connection";
			}
		};

		$scope.deleteConnection = function(nodeId, stepId, ev) {
			var tail = $scope.treeData[nodeId].tail;

			if ($scope.treeData[tail] && $scope.treeData[tail].head.length > 1) {

				mg$(".horizontalConnector" + nodeId).remove();
				$scope.treeData[nodeId].tail = null;

				var branchIndex = mg$(ev.target).closest('.mgPlayerJSTest_delete-connection').attr("branchindex");

				var step = $rootScope.getStepFromTour(stepId, $scope.tour);
				for (var i = 0; i < $scope.tour.tour_settings.play_structure.length; i++) {
					if ($scope.tour.tour_settings.play_structure[i].id === stepId.toString()) {
						if (branchIndex) {
							$scope.tour.tour_settings.play_structure[i].branch[branchIndex].tail = null;
						} else {
							$scope.tour.tour_settings.play_structure[i].tail = null;
						}
					}
				}

				$scope.updateTourWithApiCall();
			}
		};

		function getMatchingBranches(branchHead) {
			var returnArray = [];
			$scope.completedBranches.push(branchHead);
			for (var i = 0; i < $scope.treeData.length; i++) {
				var node = $scope.treeData[i];
				if (node.branch && node.branch.tail === -1 && node.branch.head === branchHead) {
					returnArray.push(node.id);
				}
			}
			return returnArray;
		}

		$scope.populateMergeBranch = function(treeData) {
			$scope.completedBranches = [];
			mg$(".mgPlayerJSTest_branch-vconnector").remove();
			mg$(".mgPlayerJSTest_branch-hconnector").remove();
			for (var i = 0; i < treeData.length; i++) {

				var node = treeData[i];

				if (node.head.length >= 2) {
					for (var j = 0; j < node.head.length; j++) {
						var headTop = mg$(".branchTreeHead" + node.id).offset().top;
						var nodeTop = mg$(".branchTreeHead" + node.head[j]).offset().top;
						var branchTop = mg$(mg$(".branchTreeHead" + node.id).parents('.branch-wrapper')[0]).offset().top;

						var headLeft = mg$(".branchTreeHead" + node.id).offset().left;
						var nodeLeft = mg$(".branchTreeHead" + node.head[j]).offset().left;
						var branchLeft = mg$(mg$(".branchTreeHead" + node.id).parents('.branch-wrapper')[0]).offset().left;

						var width = parseInt(nodeLeft - headLeft);
						var left = parseInt(headLeft - branchLeft);
						var top = nodeTop - branchTop;

						if (headTop < nodeTop) {
							var height = parseInt(nodeTop - headTop) + 105;
							mg$(".branchTreeHead" + node.id).before("<div class='mgPlayerJSTest_branch-vconnector' style='height:" + height + "px'></div>");
						} else if ((nodeTop + 120) < headTop) {

							top = (nodeTop - branchTop) + (headTop - nodeTop) - 75;
							var height = parseInt(headTop - nodeTop);
							if (mg$(".branchTreeHead" + node.head[j]).parent().hasClass('branch-wrapper')) {
								height = height - 105;
							} else {
								height = height - 65;
							}

							mg$(".branchTreeHead" + node.head[j]).append("<div class='mgPlayerJSTest_branch-vconnector mgPlayerJSTest_branch-vconnector-right' style='height:" + height + "px'></div>");
						}

						mg$(mg$(".branchTreeHead" + node.id).parents('.branch-wrapper')[0]).append("<div class='mgPlayerJSTest_branch-hconnector' style='top:" + (top) + "px;left:" + left + "px;width:" + width + "px'></div>");

					}
				}
			}
		};

		$scope.showBranchDropdownMenu = function($event, branchIndex) {
			tourViewCreator.showBranchDropdownMenu($event, branchIndex);
		};

		var mergeArr = [];
		$scope.mergeActive = false;

		function getMatchingHead(nodeId) {
			if (($scope.treeData[nodeId].type !== 'p') &&
				(mg$.inArray(nodeId, mergeArr) === -1)) {
				mergeArr.push(nodeId);
			}

			if (nodeId !== 0) {
				for (var i = 0; i < $scope.treeData[nodeId].head.length; i++) {
					getMatchingHead($scope.treeData[nodeId].head[0]);
				}
			}
		}

		function getMatchingOthers(argument) {
			for (var i = 0; i < $scope.treeData.length; i++) {
				if (mg$.inArray($scope.treeData[i].tail, mergeArr) > -1) {
					getMatchingHead(i);
				}
			}
		}

		$scope.addMergeStep = function(stepId, $event, nodeId) {
			mergeArr = [];
			getMatchingHead(nodeId);
			getMatchingOthers();
			$scope.mergeActive = true;
			$scope.stepMergeId = stepId;
			var node = $scope.treeData[nodeId];
			if (node.branch && node.branch.index >= 0) {
				$scope.stepMergeBranchInd = node.branch.index;
			} else {
				$scope.stepMergeBranchInd = false;
			}
			mg$(".mgPlayerJSTest_delete-connection").css("display", "none");
			mg$(".plus-step").css("display", "none");
		};

		$scope.showMergeBorder = function(nodeId) {

			if (mg$.inArray(nodeId, mergeArr) === -1 && $scope.mergeActive) {
				return 'mgPlayerJSTest_merge-node-branch';
			} else {
				return 'mgPlayerJSTest_disabled-merge-node';
			}
		};

		$scope.mergeNodeStep = function(stepId, nodeId) {
			if (mg$.inArray(nodeId, mergeArr) === -1 && $scope.mergeActive) {

				stepId = stepId.toString();
				$rootScope.showSpinner = true;
				var PS = $scope.tour.tour_settings.play_structure;

				for (var i = 0; i < PS.length; i++) {
					if (PS[i].id === $scope.stepMergeId && $scope.stepMergeBranchInd && PS[i].branch !== null) {
						PS[i].branch[$scope.stepMergeBranchInd].tail = stepId;
						break;
					} else if (PS[i].id === $scope.stepMergeId && PS[i].branch !== null) {
						PS[i].tail = stepId;
						break;
					}
				}
				$scope.tour.tour_settings.play_structure = PS;
				mergeArr = [];
				$scope.mergeActive = false;
				$scope.updateTourWithApiCall();
			} else {
				$rootScope.showPopup("You cannot merge this step here.");
			}
		};

		$scope.cancelMerge = function() {
			$scope.mergeActive = false;
			mg$(".mgPlayerJSTest_delete-connection").css("display", "block");
			mg$(".plus-step").css("display", "block");
		};

		$scope.getGuideHistoryFromBranchMenu = function(stepId, ev) {
			var step = $rootScope.getStepFromTour(stepId, $scope.tour);
			mg$('#step-menu-options-' + stepId).slideUp(200);
			$scope.showMenuActionDropdown(stepId, ev);
			$rootScope.guideHistory(step, ev, 'step');
		};

		var guideSearchTimer = null;

		function filterSmartTipTours(tours) {
			var r = [];

			for (var i = 0; i < tours.length; i++) {
				if (tours[i].tour_type !== 'smartTip')
					r.push(tours[i]);
			}
			return r;
		}

		function filterCurrentTour(tours) {
			var r = [];
			for (var i = 0; i < tours.length; i++) {
				if (tours[i].tour_id !== $scope.tourId && tours[i].step_count !== '0' && ($rootScope.getTourType(tours[i]) === $rootScope.getTourType($scope.tour))) {
					r.push(tours[i]);
				}
			}
			return r;
		}

		var searchGuidesCb = function(d) {
			$scope.$apply(function() {
				$scope.showLinkGuideSearchLoader = false;
				$scope.searchedGuides = filterSmartTipTours(d);
				$scope.searchedGuides = filterCurrentTour($scope.searchedGuides); // Not allow current guide and empty guide to be link

				$scope.selectSearchGuideIndex = -1;
			});
		};

		$scope.searchGuides = function(searchVal) {
			$timeout.cancel(guideSearchTimer);

			guideSearchTimer = $timeout(function() {
				$scope.showLinkGuideSearchLoader = true;

				var params = {
					limit: 100,
					offset: 0,
					search_text: searchVal,
					organization_id: GmCXt.organization.organization_id
				};
				api.getTourList(params, searchGuidesCb);
			}, 1000);
		};

		$scope.openLinkGuidePopup = function(tour, step, $event, addStepType) {

			$event.stopPropagation();
			$rootScope.hideTourActionDropdown();
			$scope.searchedGuides = {};
			$scope.showAddLinkGuide = true;
			$rootScope.linkGuidePlayMode = "Default";
			$scope.showLinkGuideSearchLoader = false;
			if (!$rootScope.linkStepData) {
				$rootScope.linkStepData = {};
			}

			var order = parseInt($event.target.getAttribute("stepOrder"));
			if (addStepType === 'before') {
				order = !order ? parseInt(tour.step_count) + 1 : parseInt(order);
			} else {
				autoStepsInBetween = $rootScope.getAutomationSteps(tour.steps, step);
				order = !order ? parseInt(tour.step_count) + 1 : parseInt(order) + autoStepsInBetween.length + 1;
			}

			if (addStepType === 'after') {
				step = $rootScope.getLastAutomationStep(tour.steps, step);
			}

			$scope.addStepType = addStepType;

			$rootScope.setPreviousDataStep(step, tour, $scope.addStepType);

			$rootScope.linkStepData.tour = tour;
			var data = {
				tour_id: $scope.tourId,
				step_title: '',
				step_description: '',
				step_type: 'guide',
				step_target_type: 'na',
				step_target_name: 'na',
				step_settings: 'na',
				step_image: "0",
				step_screen: "0",
				step_url: 'na',
				step_audio_text: 'na',
				step_video_id: "0",
				step_audio: "0",
				step_order: order
			};
			$rootScope.step = data;
			$scope.selectSearchGuideIndex = -1;
		};

		var onSuccess = function(response) {

			$rootScope.decrementPendingStepCount();

			if (response.error) {
				$scope.processTours();
			} else {
				var data = response.data.data;
				self.close();
				$rootScope.showSpinner = false;
				var viewStep = {};
				viewStep.stepIndex = $rootScope.step.step_order - 1;
				viewStep.step = data.step;

				if ($rootScope.prevStepData) {
					viewStep.prevStepData = $rootScope.prevStepData;
				} else {
					viewStep.prevStepData = {
						type: $scope.addStepType,
						tour: $scope.tour
					};
				}

				if (viewStep.step.step_type === "guide") {
					viewStep.linkGuidePlayMode = $rootScope.linkGuidePlayMode;
				}

				$scope.createStepCompleted(viewStep);
			}
		};

		$scope.linkGuideAll = function() {

			if ($scope.selectSearchGuideIndex !== -1) {
				var viewStep = {};
				var data = {};
				data = Object.assign({}, $rootScope.step);

				data.step_screen = $rootScope.step.step_screen;

				viewStep.stepIndex = $rootScope.step.step_order - 1;
				viewStep.stepObj = data;
				viewStep.stepObj.linkGuidePlayMode = $rootScope.linkGuidePlayMode;

				$rootScope.step.linkGuidePlayMode = $rootScope.linkGuidePlayMode;

				$scope.reloadView = true;

				$scope.createStep(viewStep);

				api.stepCreate($rootScope.step, onSuccess);
			}
			$scope.closeLinkGuidePopup();
		};

		$scope.closeLinkGuidePopup = function() {
			mg$('.mgPlayerJSTest_add-guide-link-search-input').val('');
			$scope.searchedGuides = {};
			$scope.guideSearchQuery = '';
			$scope.showAddLinkGuide = false;
			$scope.selectSearchGuideIndex = -1;
			$scope.selectedGuideTitle = '';
			$scope.selectedGuideId = '';
			$scope.showLinkGuideSearchLoader = false;
		};

		$scope.selectSearchGuide = function(index, guide) {
			if (guide == null) {
				$scope.selectSearchGuideIndex = -1;
			} else {
				$rootScope.step.step_screen = guide.tour_image;
				$rootScope.step.step_description = guide.tour_description;
				if ($rootScope.step.step_screen) {} else {
					$rootScope.step.step_screen = "1";
				}
				if ($rootScope.step.step_description) {} else {
					$rootScope.step.step_description = " ";
				}

				$rootScope.step.step_title = guide.tour_title;

				var ss = {
					tour_id: guide.tour_id,
					linkGuidePlayMode: $rootScope.linkGuidePlayMode
				};

				$rootScope.step.step_settings = JSON.stringify(ss);

				$scope.selectSearchGuideIndex = index;
				$scope.selectedGuideTitle = guide.tour_title;
				$scope.selectedGuideId = guide.tour_id;
				$rootScope.step.tour_id = $scope.tourId;
			}
		};

		$scope.disableBranchStep = function() {
			if (!tourViewCreator && $rootScope.FT.creatorApp) {
				tourViewCreator = $injector.get('tour_view.creator.service');
			}
			return tourViewCreator.disableBranchStep($scope);
		};

		$scope.getTail = function(id) {

			var PS = $scope.tour.tour_settings.play_structure;

			for (var i = 0; i < PS.length; i++) {
				if (PS[i].id === id) {
					return PS[i].tail;
				}
			}
		};

		$scope.getSmartTipType = function(step) {
			var settings = step.step_settings;
			return settings.smartTip.type;
		};

		$scope.updateElementPrecision = function(data) {
			$scope.$apply(function() {
				$scope.branchData.branch[data.parentIndex].rulesEngine[data.index].element = GmCXt.rulesElement;
				$rootScope.setElementGrade(data.index, GmCXt.rulesElement.meta.score);
			});
		};

		$scope.showAlgoCallback = function(res) {
			tourViewCreator.showAlgoCallback(res, $scope);
		};

		var setHighlighterForMatchingAlgo = function(index, groupIndex) {
			var el = $scope.branchData.branch[groupIndex].rulesEngine[index].element;

			if (el) {
				var jobId = "rule_" + index + "_" + groupIndex;
				var message = {
					data: {
						jobId: jobId,
						element: el,
						fromSidePanel: GmCXt.isSidePanelApp,
						ruleIndex: index,
						groupIndex: groupIndex,
						frame: {}
					}
				};

				if (GmCXt.isSidePanelApp) {
					message.action = 'mgPlayerJSTest_action:init;task:select_dom_element_for_matching_in_rules';
					GmCXt.sendToParentWindow(message);

				} else {
					GmCXt.sendMessageToAllWindows(
						'mgPlayerJSTest_action:started;task:select_dom_element_for_matching_in_rules',
						message.data);
				}
			}
		};

		$scope.resetMatchingAlgoCriteria = function(index, ev) {
			if (ev) ev.stopPropagation();

			var scope = angular.element('.mgPlayerJSTest_matching-algorithm-wrapper').scope();
			scope.resetToInitial(index);

			$scope.showBranchRuleMatchingAlgo(false);

		};

		$scope.showBranchRuleMatchingAlgo = function(val, index, groupIndex, ev) {

			if (ev) ev.stopPropagation();

			if (val) {
				$rootScope.matchingAlgoPopupOverlay = true;
				$scope.showMatchingAlgoContainer = index;
				$scope.showMatchingAlgoIndexGroup = groupIndex;
				setHighlighterForMatchingAlgo(index, groupIndex);
			} else {
				$rootScope.matchingAlgoPopupOverlay = false;
				$scope.showMatchingAlgoContainer = -1;
				$scope.showMatchingAlgoIndexGroup = -1;
				$scope.showMatchAlgoElemContainer = false;
			}
		};

		$scope.showGuideMe = function(tour) {

			if (!tour) return false;

			var option = $rootScope.existsOrUndefined(GmCXt.getAppSetting('guideMeSetting'));

			var dAction = true;

			var ts = GmCXt.createDeepCopy($scope.tour.tour_settings);

			if (ts.defaultPlayAction === undefined || ts.defaultPlayAction === 'Default') {
				ts.defaultPlayAction = GmCXt.getAppSetting('defaultPlayAction');
			}

			if ($rootScope.FT.isPlayer) {
				dAction = (ts.defaultPlayAction === $rootScope.playGuideMe ||
					(ts.defaultPlayAction === $rootScope.playSlideshow && $rootScope.enableGuidemeMode) || (ts.defaultPlayAction === $rootScope.playVLab && GmCXt.branchStepExist(tour)));
			}

			var type = !$scope.isOnboardingGuide && $rootScope.isGuide(tour) &&
				!$rootScope.isDesktopGuide(tour) && !$rootScope.isMobileGuide(tour);

			if (window.matchMedia("(max-width: 480px)").matches && !GmCXt.isMiniPlayer) {
				type = !$scope.isOnboardingGuide && $rootScope.isGuide(tour) &&
					$rootScope.isDesktopGuide(tour) && !$rootScope.isMobileGuide(tour);
			}

			if (type && option && dAction) {
				return true;
			}

			return false;
		};

		$scope.showShowMe = function(tour) {

			if ($rootScope.isOnlySurveyGuide(tour) || $rootScope.isOnlyTransportGuide(tour)) {
				return false;
			}
			var showMeOpt = $rootScope.existsOrUndefined(GmCXt.getAppSetting('showMeSetting'));
			var dAction = true;
			var ts = GmCXt.createDeepCopy($scope.tour.tour_settings);

			if (ts.defaultPlayAction === undefined || ts.defaultPlayAction === 'Default') {
				ts.defaultPlayAction = GmCXt.getAppSetting('defaultPlayAction');
			}

			if ($rootScope.FT.isPlayer) {
				dAction = (ts.defaultPlayAction === $rootScope.playGuideMe ||
					ts.defaultPlayAction === $rootScope.playSlideshow || (ts.defaultPlayAction === $rootScope.playVLab && GmCXt.branchStepExist(tour)) || $rootScope.isOnboarding(tour));
			}

			var type = $rootScope.isGuide(tour) || $rootScope.isCADGuide(tour) ||
				$rootScope.isDesktopGuide(tour) || $rootScope.isMobileGuide(tour) ||
				$rootScope.isOnboarding(tour);

			return $rootScope.FT.showMe && showMeOpt && dAction && type;
		};

		$scope.showTestMe = function(tour) {

			if ($rootScope.isOnlySurveyGuide(tour) || $rootScope.isOnlyTransportGuide(tour)) {
				return false;
			}

			var option = $rootScope.existsOrUndefined(GmCXt.getAppSetting('testMeSetting'));
			var dAction = true;
			var ts = GmCXt.createDeepCopy($scope.tour.tour_settings);

			if (ts.defaultPlayAction === undefined || ts.defaultPlayAction === 'Default') {
				ts.defaultPlayAction = GmCXt.getAppSetting('defaultPlayAction');
			}

			if ($rootScope.FT.isPlayer) {
				dAction = ts.defaultPlayAction === $rootScope.playGuideMe;
			}
			var type = !$scope.isOnboardingGuide && $rootScope.isGuide(tour) &&
				!$rootScope.isDesktopGuide(tour) && !$rootScope.isMobileGuide(tour);

			return $rootScope.FT.testme && !$scope.hideRegularView && option && dAction && type;
		};

		$scope.showDoItForMe = function(tour) {
			if ($rootScope.isOnlySurveyGuide(tour) || $rootScope.isOnlyTransportGuide(tour)) {
				return false;
			}

			$scope.disableDoItForMe = $rootScope.checkStepsForDoItForMeMode(tour);
			var dAction = true;
			var ts = GmCXt.createDeepCopy($scope.tour.tour_settings);

			if (ts.defaultPlayAction === undefined || ts.defaultPlayAction === 'Default') {
				ts.defaultPlayAction = GmCXt.getAppSetting('defaultPlayAction');
			}

			if ($rootScope.FT.isPlayer) {
				dAction = ts.defaultPlayAction === $rootScope.playAuto;
			}

			return (($rootScope._doitforme && !$rootScope.isCADGuide(tour) && $rootScope.isGuide(tour))) && !$rootScope.isDesktopGuide(tour) && !$rootScope.isMobileGuide(tour) && dAction;
		};

		$scope.showVLab = function(tour) {

			if ($rootScope.isOnlySurveyGuide(tour) || $rootScope.isOnlyTransportGuide(tour)) {
				return false;
			}

			var option = $rootScope.existsOrUndefined(GmCXt.getAppSetting('vLab'));
			var dAction = true;
			var ts = GmCXt.createDeepCopy($scope.tour.tour_settings);

			if (ts.defaultPlayAction === undefined || ts.defaultPlayAction === 'Default') {
				ts.defaultPlayAction = GmCXt.getAppSetting('defaultPlayAction');
			}

			if ($rootScope.FT.isPlayer) {
				dAction = (ts.defaultPlayAction === $rootScope.playGuideMe ||
					ts.defaultPlayAction === $rootScope.playVLab);
			}

			var type = !$scope.isOnboardingGuide && $rootScope.isGuide(tour) &&
				!$rootScope.isDesktopGuide(tour) && !$rootScope.isMobileGuide(tour);

			return !$scope.hideRegularView && type && option && dAction && $rootScope.enableMyteacher;
		};

		$scope.getTutorialDesc = function(step) {
			if (!GmCXt.isEmpty(step.step_title)) {
				return step.step_title + step.step_description;
			} else {
				step.step_description = GmCXt.updateOrgAndAddSignature(step.step_description);
				return $sce.trustAsHtml(step.step_description);
			}
		};

		$scope.updateElementPrecisionForRules = function(d) {
			tourViewCreator.updateElementPrecisionForRules(d, $scope);
		};

		$scope.updateBranchDescCounter = function(val) {
			var len = 0;
			if (val) {
				len = val.length;
			}
			mg$('.mgPlayerJSTest_branch-description-counter').text(len + "/500");
		};

		$scope.findReplace = function(stepId) {
			var step = $rootScope.getStepFromTour(stepId, $scope.tour);
			$scope.performAction('findNReplace', step);
		};

		$scope.guideDefaultPlayAction = function(t) {
			var action = t.tour_settings.defaultPlayAction;

			if (action === 'Default') {
				action = $rootScope.getAppSetting('defaultPlayAction');
			}

			return action;
		};

		$scope.errorHandlerStepOpen = function(step, addStepType) {
			$scope.step = step;
			$scope.addStepType = addStepType;
			tourViewCreator.errorHandlerStepOpen(step, $scope, addStepType);
		};

		$scope.addErrorHandlerStepFromBranchMenu = function(id, e) {
			var sc = getMenuScope();
			if (sc) {
				$scope.updateBranchPrevStepData(e);
				var step = $rootScope.getStepFromTour(id, $scope.tour);
				sc.addErrorHandlerStep($scope.tour, step, e);
			}
		};

		$scope.addPasteStepFromBranchMenu = function(id, e, nodeId) {
			var sc = getMenuScope();
			if (sc) {
				$scope.updateBranchPrevStepData(e);
				var step = $rootScope.getStepFromTour(id, $scope.tour);
				sc.pasteStep($scope.tour, e, step);
			}
		};

		$scope.clearSearch = function() {
			$rootScope.searchStepKeyword = '';
			$scope.searchStep();
		};
	}
]);
var app = angular.module('guideme');

app.controller('ChangePasswordCtrl', ['$scope', '$state', 'api', '$rootScope', 'storage',
	'cStorage', 'Message', '$interval', 'modal',
	function($scope, $state, api, $rootScope, storage, cStorage, Message,
		$interval, modal) {
		$rootScope.showCaptchaError = false;
		$scope.hideTabMessage = true;
		$scope.error = {};
		$scope.user = {};
		$scope.isLoginPage = false;
		$rootScope.removeActiveTab();
		$rootScope.currentView = 'change-password-view';

		$scope.submitChangePasswordForm = function() {
			$rootScope.showCaptchaError = false;
			if (!$rootScope.captchaValid && !GmCXt.conf.hideCaptcha) {
				$rootScope.showCaptchaError = true;
				if (!$rootScope.$$phase) $rootScope.$apply();
				return;
			} 

			if ($scope.cForm.$invalid) {
				$scope.error.newPasswordRequired = $scope.cForm.newPassword.$invalid;
				$scope.error.confirmPasswordRequired = $scope.cForm.confirmPassword.$invalid;
				$scope.error.currentPasswordRequired = $scope.cForm.currentPassword.$invalid;
				return;
			}

			if ($scope.user.newPassword !== $scope.user.confirmPassword) {

				$rootScope.showPopup($rootScope.labels.msgConfirmNewPasswordError);

			} else {

				$scope.passwordChange();

			}
		};

		$scope.passwordChange = function() {

			$rootScope.showSpinner = true;

			function onSuccess(response) {
				modal.open($rootScope.labels.msgPasswordChangedSuccess, 'success', function() {
					$scope.back();
				});
			}

			var data = {
				user_id: $rootScope.user.user_id,
				new_password: $scope.user.confirmPassword,
				existing_password: $scope.user.currentPassword
			};
			api.changePassword(data, onSuccess);
		};

		$scope.back = function() {

			if ($rootScope.activeView && $rootScope.activeView.length) {
				GmCXt.redirect('#' + $rootScope.activeView);
			}

		};

	}
]);
var app = angular.module('guideme');

app.controller('ForgotPasswordCtrl', ['$scope', '$state', '$rootScope', 'api',
	'modal', 'storage', '$timeout',
	function($scope, $state, $rootScope, api, modal, storage, $timeout) {

		$scope.hideTabMessage = true;
		$scope.selectedTab = "my";
		$scope.showForgotPasswordForm = true;
		$scope.user = {};
		$rootScope.currentView = 'forgot-password-view';
		$rootScope.showCaptchaError = false;
		$timeout(function() {
			mg$("#mgPlayerJSTest_input-forgot-email").focus();
		}, 500);

		$scope.forgotPassword = function() {
			var data = {
				email: $scope.user.email
			};

			function onSuccess(response) {
				var str = $rootScope.labels.otpSentDesc + " " + GmCXt.conf.adminEmail;
				modal.open(str, 'info', function() {
					$scope.$apply(function() {
						$rootScope.clearSession();
					});
				}, false, false, false, $rootScope.labels.forgetPassTitl);
			}

			function onFail(data) {
				$rootScope.showPopup(data.message);
			}

			$rootScope.showSpinner = true;
			api.forgetPassword(data, onSuccess, onFail);
		};

		$scope.sendCallToVerifyUser = function() {
			$rootScope.showCaptchaError = false;
			if (!$rootScope.captchaValid && !GmCXt.conf.hideCaptcha) {
				$rootScope.showCaptchaError = true;
				if (!$rootScope.$$phase) $rootScope.$apply();
				return;
			}

			if ($scope.forgotPasswordForm.$invalid) {
				$scope.emailRequired = true;
				return;
			}

			var data = {
				email_id: $scope.user.email
			};

			function successCb(res) {
				if (!res.data.error) {
					$rootScope.syncUser();
					$scope.forgotPassword();
				}
			}
	
			$scope.forgotPassword();			
		};

		$scope.resetPassword = function() {

			if ($scope.resetPasswordForm.$invalid) {
				$scope.emailRequired = $scope.resetPasswordForm.email.$invalid;
				$scope.otpRequired = $scope.resetPasswordForm.otp.$invalid;
				$scope.passwordRequired = $scope.resetPasswordForm.password.$invalid;
				$scope.confirmPasswordRequired = $scope.resetPasswordForm.confirm_password.$invalid;
				$scope.confirmPasswordUnmatched = ($scope.user.password === $scope.user.confirm_password) ? false : true;
				return;
			} else {
				$scope.confirmPasswordUnmatched = ($scope.user.password === $scope.user.confirm_password) ? false : true;

				if ($scope.confirmPasswordUnmatched)
					return;
			}

			var data = {
				email: $scope.user.email,
				otp: $scope.user.otp,
				password: $scope.user.password
			};

			function onSuccess(response) {
				var str = $rootScope.labels.otpSentDesc + " " + GmCXt.conf.adminEmail;
				modal.open(str, 'info', function() {
					$scope.login();
				});
			}

			$rootScope.showSpinner = true;
			api.resetPassword(data, onSuccess);
		};

		$scope.setHeight = function() {
			mg$('.forgot-password-page-container').css({
				'height': (window.innerHeight - mg$('#ege-header').innerHeight() - mg$('#footer').innerHeight()-50)
			});
		};

		/* set the list hight on window resize */
		mg$(window).off('resize').on('resize', $scope.setHeight);

		$timeout(function() {
			$scope.setHeight();
		}, 500);
	}
]);
var app = angular.module('guideme');

app.controller('NoAppCtrl', ['$rootScope', '$scope', 'storage', 'logoutService', '$location',
	function($rootScope, $scope, storage, logoutService, $location) {

		GmCXt.log(21, "NO APPS found");

		storage.activeView.set($location.path());

		$rootScope.currentView = 'no-app';

		$rootScope.resetAppData();
		$rootScope.showSpinner = false;

		$scope.isLoginPage = false;
		$scope.logout = logoutService.logout;

		$scope.domain = GmCXt.urlParts.host;
	}
]);
var app = angular.module('guideme');

app.controller('NoOrgCtrl', ['$rootScope', '$scope', 'storage', 'logoutService', '$location',
	function($rootScope, $scope, storage, logoutService, $location) {

		storage.activeView.set($location.path());
		$scope.isLoginPage = false;
	}
]);
var app = angular.module('guideme');

app.controller('SignInCtrl', ['$scope', '$state', 'api', '$rootScope', 'storage',
	'cStorage', 'Message', '$interval', 'modal', '$timeout', 'mgError',
	function($scope, $state, api, $rootScope, storage, cStorage, Message,
		$interval, modal, $timeout, mgError) {

		$scope.hideTabMessage = true;
		$rootScope.showCaptchaError = false;
		storage.activeView.remove();
		$scope.isLoginPage = true;
		$scope.loginCheck = null;
		$rootScope.showSpinner = false;
		$rootScope.currentView = 'login-view';
		$scope.dualAuthToken = [];
		$rootScope.loginInvalidCred = false;
		$scope.otpSent = false;
		$scope.edExtLogin = false;
		$scope.isDisabled = false;
		$scope.otpTimer = 30;
		$scope.otpCounter = 0;
		$scope.showLimitWarning = false;
		$scope.showOrgList = false;

		$scope.isAutologin = function() {
			if (GmCXt.conf.autologin) return GmCXt.conf.autologin.type;
			else return "";
		};

		$scope.setLoginForm = function() {
			$scope.user = {};
			$scope.form = {};
			$scope.error = {};
			$scope.user = {
				keepLogin: true
			};
			$rootScope.onMinMaxChaticon();
			$scope.showLoginForm = true;

			if ($scope.isAutologin() === "user_pwd") {
				$scope.showLoginForm = false;
				$scope.user = {
					email: GmCXt.conf.autologin.email,
					password: GmCXt.conf.autologin.password,
					keepLogin: 1
				};
			}

			$scope.showOtpForm = false;
			storage.dual_auth_token.get().then(function(res) {
				if (res && mg$.isArray(res))
					$scope.dualAuthToken = res;
				else
					$scope.dualAuthToken = [];
			});
			if ($scope.otpCounter > 3) {
				$scope.showLoginForm = false;
				$scope.showOtpForm = true;
			}

			$timeout(function() {
				if ($rootScope.isSidePanelOpen) mg$("#mgPlayerJSTest_input-login-email").focus();
			}, 500);

		};

		$scope.setLoginForm();

		function onSuccess(_user) {
			$rootScope.showSpinner = false;
			if (typeof _user === 'string') {

				addTokenToStorage(_user, $scope.user.email);

				modal.open($rootScope.labels.signInVerifyYourAccount, 'success', function() {
					$scope.$apply(function() {
						$scope.showLoginForm = false;
						$scope.showOtpForm = true;
						$timeout(function() {
							mg$("#mgPlayerJSTest_input-otp").focus();
						}, 500);
					});
				});

				$timeout(function() {
					mg$("#mgPlayerJSTest_btn-ok-common-popup").focus();
				}, 500);

				return true;
			}

			if (_user && _user.orgs) {
				$scope.showOrgList = true;
				$scope.orgsList = _user.orgs;
				return;
			}

			mg$("#mgPlayerJSTest_btn-verify-otp").addClass("mgPlayerJSTest_disabled");

			$rootScope.onUserSignin(_user, false);
		}

		function onFail(e) {}

		$scope.submitForm = function(isValid) {
			$rootScope.showCaptchaError = false;
			if (!$rootScope.captchaValid && !GmCXt.conf.hideCaptcha) {
				$rootScope.showCaptchaError = true;
				if (!$rootScope.$$phase) $rootScope.$apply();
				return;
			} else if (!isValid) {
				$scope.error.emailRequired = $scope.form.signin.email.$invalid;
				$scope.error.passwordRequired = $scope.form.signin.password.$invalid;
				if (!$scope.$$phase) $scope.$apply();
				return;
			} else {
				$scope.signIn();
			}
		};

		$scope.getUserToken = function(userEmail) {
			if ($scope.dualAuthToken) {
				for (var i = 0; i < $scope.dualAuthToken.length; i++) {
					if ($scope.dualAuthToken[i].email === userEmail) {
						var currentTime = new Date().getTime();
						if (currentTime < $scope.dualAuthToken[i].expiry) {
							return $scope.dualAuthToken[i].token;
						}
					}
				}
			}
		};

		$scope.signIn = function(orgId) {

			mgError.try(function() {

				var data = {
					email_id: $scope.user.email,
					password: $scope.user.password,
					keep_login: 1
				};

				if (orgId) {
					data.org_id = orgId;
				}

				$scope.currentUserToken = $scope.getUserToken($scope.user.email);
				if ($scope.currentUserToken) {
					data.token = $scope.currentUserToken;
				}

				$rootScope.showSpinner = true;
				api.userSignIn(data, onSuccess, onFail);
			}, 700);
		};

		$scope.loginWithOrgKey = function(params) {

			$rootScope.showSpinner = false;
			$scope.showLoginForm = false;

			var onSuccess = function(_user) {
				$rootScope.onUserSignin(_user, false);
			};
			var onFail = function() {
				$scope.showLoginForm = true;
			};

			api.userOrgKeySignin(params, onSuccess, onFail);
		};

		$scope.submitOtpForm = function(isValid) {
			$rootScope.showSpinner = true;

			//validate form
			if (!isValid) {
				$rootScope.showSpinner = false;
				$scope.error.otpRequired = $scope.form.verifyOtp.otp.$invalid;
				return;
			}

			var data = {
				email: $scope.user.email,
				code: $scope.user.otp,
				token: $scope.currentUserToken
			};

			$scope.otpSent = false;

			api.verifyUser(data, onSuccess, onFail);
		};

		$scope.goToForgotPasswordPage = function() {
			GmCXt.redirect('#/forgotpassword');
		};

		function addTokenToStorage(token, userEmail) {

			var newTokenStatus = true;
			for (var i = 0; i < $scope.dualAuthToken.length; i++) {
				if ($scope.dualAuthToken[i].email === userEmail) {
					$scope.currentUserToken = token;
					$scope.dualAuthToken[i].token = token;
					$scope.dualAuthToken[i].expiry = (new Date().getTime()) + $rootScope.thirtyDaysInMSeconds;
					newTokenStatus = false;
					break;
				}
			}

			if (newTokenStatus) {

				var tokenData = {};
				tokenData.email = $scope.user.email;
				tokenData.token = token;
				tokenData.expiry = new Date().getTime() + $rootScope.thirtyDaysInMSeconds;

				$scope.dualAuthToken.push(tokenData);
				$scope.currentUserToken = token;
			}

			storage.dual_auth_token.set($scope.dualAuthToken, $rootScope.thirtyDaysInSeconds);
		}

		$scope.setHeight = function() {
			$scope.pageHeight = (window.innerHeight - mg$('#ege-header').innerHeight() - mg$('#footer').innerHeight() - 50);

			if (mg$('.mgPlayerJSTest_signin-page-container').innerHeight() < 60) {
				mg$('.mgPlayerJSTest_header-banner-wrapper').hide();
			} else {
				mg$('.mgPlayerJSTest_header-banner-wrapper').removeAttr("style");
			}
		};

		$scope.ssoLogin = function() {
			$rootScope.ssoHitCount = 0;
			if (GmCXt.isMyGuide()) {
				$rootScope.getSsoId().then(function(response) {
					$rootScope.openSsoTab();
				}).catch(function() {});
			} else {
				$rootScope.openSsoTab();
			}

		};

		/* set the list hight on window resize */
		mg$(window).on('resize', $scope.setHeight);

		$timeout(function() {
			$scope.setHeight();
		}, 500);

		$scope.$on("$destroy", function() {
			if ($scope.loginCheck)
				clearInterval($scope.loginCheck);
		});

		$scope.autoLoginUser = function() {

			if ($rootScope.snowLogin === true) {

				var params = {
					myGuideOrgKey: 'Basic ' + window.btoa($rootScope.orgSecrret),
					first_name: "",
					last_name: "",
					email_id: "anonymous@edcast.com"
				};

				$scope.loginWithOrgKey(params);

			} else if ($scope.isAutologin() === "org_sec_key") {

				var params = {
					myGuideOrgKey: 'Basic ' + window.btoa($rootScope.orgSecrret),
					first_name: GmCXt.conf.autologin.firstname,
					last_name: GmCXt.conf.autologin.lastname,
					email_id: GmCXt.conf.autologin.email
				};

				$scope.loginWithOrgKey(params);

			} else if ($scope.isAutologin() === "user_pwd") {
				$scope.signIn();
			}
		};

		$scope.resendOTP = function() {
			$scope.otpTimer = 30;
			$scope.isDisabled = true;
			$scope.otpCounter += 1;

			if ($scope.otpCounter > 3) {

				$scope.isDisabled = false;
				$scope.showLimitWarning = true;
				$timeout(function() {
					$scope.otpCounter = 0;
					$scope.showLimitWarning = false;
				}, 300000);
				return;
			}

			function successCb(token) {
				addTokenToStorage(token, $scope.user.email);
			}

			$scope.otpSent = true;
			var data = {
				email: $scope.user.email
			};

			data.token = $scope.currentUserToken;
			api.resendOTP(data, successCb);
			$timeout(function() {
				$scope.isDisabled = false;
				$scope.otpSent = false;
				$interval.cancel(otpInterval);
			}, 30000);

			var otpInterval = $interval(function() {
				$scope.otpTimer--;
			}, 1000);
		};

		if (GmCXt.urlParts) {
			$scope.autoLoginUser();
		} else {
			$timeout(function() {
				$scope.autoLoginUser();
			}, 1000);
		}

		$scope.onClickSignin = function(valid) {
			if ($scope.user.email) {
				var data = {
					email_id: $scope.user.email
				};

				$scope.submitForm(valid);
				
			} else if (!valid) {
				$scope.error.emailRequired = $scope.form.signin.email.$invalid;
				if (!$scope.$$phase) $scope.$apply();
				$timeout(function() {
					mg$("#mgPlayerJSTest_input-login-email").focus();
				}, 600);
				return;
			}
		};

		$scope.backFromOTP = function() {
			$scope.showOtpForm = false;
			$scope.showLoginForm = true;
			$scope.user.otp = '';
			$scope.otpCounter = 0;
			$scope.showLimitWarning = false;
			$scope.setHeight();
			if (!$scope.$$phase) $scope.$apply();
		};
	}
]);